{"map":"{\"version\":3,\"sources\":[\"webpack/universalModuleDefinition\",\"webpack/bootstrap\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\xmpp\\\\XMPPEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\strophe.js\\\\strophe.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiConferenceEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\browser\\\\index.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\jitsi-meet-logger\\\\lib\\\\index.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\statistics\\\\statistics.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\SDPUtil.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\RTC\\\\RTCEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\statistics\\\\AnalyticsEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\RTC\\\\MediaType.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\RTC\\\\RTCUtils.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\util\\\\GlobalOnErrorHandler.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiTrackErrors.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\RTC\\\\RTC.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\RTC\\\\VideoType.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiTrackError.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiTrackEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiConferenceErrors.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\SDP.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\js-utils\\\\browser-detection\\\\browsers.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\js-utils\\\\browser-detection\\\\BrowserDetection.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\js-utils\\\\index.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\videosipgw\\\\VideoSIPGWConstants.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiConnectionEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\sdp-transform\\\\lib\\\\index.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\statistics\\\\Events.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\util\\\\Listenable.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\settings\\\\Settings.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\connectivity\\\\ConnectionQualityEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\SdpTransformUtil.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\proxyconnection\\\\constants.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\events\\\\events.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\RTC\\\\Resolutions.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\JingleSessionState.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\statistics\\\\CallStats.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\util\\\\RandomUtil.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\ConnectionPlugin.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\xmpp.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiConnectionErrors.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\RTC\\\\SignalingEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\utils.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\RTC\\\\CameraFacingMode.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\RTC\\\\ScreenObtainer.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\connectivity\\\\ParticipantConnectionStatus.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\recording\\\\recordingXMLUtils.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webpack\\\\buildin\\\\global.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\JingleSessionPC.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiMediaDevicesEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\bowser\\\\src\\\\bowser.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\SDPDiffer.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\process\\\\browser.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\e2eping\\\\E2ePingEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\statistics\\\\LocalStatsCollector.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\util\\\\ScriptUtil.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiTranscriptionStatus.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\RTC\\\\JitsiTrack.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\util\\\\MathUtil.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\statistics\\\\SpeakerStats.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webpack\\\\buildin\\\\module.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\authentication\\\\AuthenticationEvents.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\RTC\\\\JitsiLocalTrack.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\recording\\\\JibriSession.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiMediaDevices.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\jitsi-meet-logger\\\\lib\\\\Logger.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\sdp\\\\sdp.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\sdp-transform\\\\lib\\\\grammar.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\transcription\\\\audioRecorder.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\util\\\\AuthUtil.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiConnection.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiConference.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\lodash.isequal\\\\index.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiConferenceEventManager.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\util\\\\EventEmitterForwarder.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\statistics\\\\AnalyticsAdapter.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\browser\\\\BrowserCapabilities.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\js-md5\\\\src\\\\md5.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\util\\\\UsernameGenerator.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\statistics\\\\RTPStatsCollector.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiParticipant.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\authenticateAndUpgradeRole.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\strophe.emuc.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\ChatRoom.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\moderator.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\strophe.jingle.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\util\\\\StringUtils.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\JingleSession.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\SignalingLayerImpl.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\RTC\\\\SignalingLayer.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\util\\\\AsyncQueue.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\async\\\\lib\\\\async.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\strophe.util.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\strophe.ping.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\strophe.rayo.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\strophe.logger.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\StropheBoshLastSuccess.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\Caps.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\DTMF\\\\JitsiDTMFManager.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\P2PDominantSpeakerDetection.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\RTC\\\\BridgeChannel.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\RTC\\\\TraceablePeerConnection.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\RTC\\\\JitsiRemoteTrack.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\RTC\\\\LocalSdpMunger.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\RtxModifier.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\xmpp\\\\SdpConsistency.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\TalkMutedDetection.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\connectivity\\\\ConnectionQuality.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\connectivity\\\\IceFailedNotification.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\e2eping\\\\e2eping.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\event\\\\Jvb121EventGenerator.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\recording\\\\RecordingManager.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\rttmonitor\\\\rttmonitor.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\statistics\\\\AvgRTPStatsReporter.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\statistics\\\\AudioOutputProblemDetector.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\statistics\\\\SpeakerStatsCollector.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\transcription\\\\transcriber.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\version\\\\ComponentsVersions.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\videosipgw\\\\VideoSIPGW.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\videosipgw\\\\JitsiVideoSIPGWSession.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\recording\\\\recordingConstants.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\proxyconnection\\\\ProxyConnectionService.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\proxyconnection\\\\ProxyConnectionPC.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\index.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\JitsiMeetJS.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\jitsi-meet-logger\\\\lib\\\\LogCollector.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webpack\\\\buildin\\\\amd-define.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webpack\\\\buildin\\\\amd-options.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\current-executing-script\\\\dist\\\\currentExecutingScript.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\service\\\\statistics\\\\constants.js\",\"../src/strophe.disco.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\timers-browserify\\\\main.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\setimmediate\\\\setImmediate.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\adapter_core.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\adapter_factory.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\chrome\\\\chrome_shim.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\chrome\\\\getusermedia.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\edge\\\\edge_shim.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\rtcpeerconnection-shim\\\\rtcpeerconnection.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\edge\\\\getusermedia.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\firefox\\\\firefox_shim.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\firefox\\\\getusermedia.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\safari\\\\safari_shim.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\webrtc-adapter\\\\src\\\\js\\\\common_shim.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\sdp-transform\\\\lib\\\\parser.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\sdp-transform\\\\lib\\\\writer.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\@jitsi\\\\sdp-interop\\\\lib\\\\index.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\@jitsi\\\\sdp-interop\\\\lib\\\\interop.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\@jitsi\\\\sdp-interop\\\\lib\\\\transform.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\@jitsi\\\\sdp-interop\\\\lib\\\\array-equals.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\@jitsi\\\\sdp-simulcast\\\\lib\\\\index.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\node_modules\\\\@jitsi\\\\sdp-simulcast\\\\lib\\\\transform-utils.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\transcription\\\\recordingResult.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\transcription\\\\transcriptionServices\\\\SphinxTranscriptionService.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\transcription\\\\transcriptionServices\\\\AbstractTranscriptionService.js\",\"D:\\\\android\\\\workspace\\\\other\\\\jitsi-meet-master\\\\dosmono-lib-jitsi-meet\\\\modules\\\\transcription\\\\word.js\"],\"names\":[\"root\",\"factory\",\"exports\",\"module\",\"define\",\"amd\",\"window\",\"installedModules\",\"__webpack_require__\",\"moduleId\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"ADD_ICE_CANDIDATE_FAILED\",\"AUDIO_MUTED_BY_FOCUS\",\"AUTHENTICATION_REQUIRED\",\"BRIDGE_DOWN\",\"CALL_ACCEPTED\",\"CALL_INCOMING\",\"CALL_ENDED\",\"CHAT_ERROR_RECEIVED\",\"CONFERENCE_PROPERTIES_CHANGED\",\"CONNECTION_ESTABLISHED\",\"CONNECTION_FAILED\",\"CONNECTION_INTERRUPTED\",\"CONNECTION_RESTORED\",\"CONNECTION_ICE_FAILED\",\"CONNECTION_STATUS_CHANGED\",\"DISPLAY_NAME_CHANGED\",\"EMUC_ROOM_ADDED\",\"EMUC_ROOM_REMOVED\",\"ETHERPAD\",\"FOCUS_DISCONNECTED\",\"FOCUS_LEFT\",\"GRACEFUL_SHUTDOWN\",\"ICE_RESTARTING\",\"ICE_RESTART_SUCCESS\",\"KICKED\",\"LOCAL_ROLE_CHANGED\",\"MESSAGE_RECEIVED\",\"PRIVATE_MESSAGE_RECEIVED\",\"MUC_MEMBER_BOT_TYPE_CHANGED\",\"MUC_DESTROYED\",\"MUC_JOINED\",\"MUC_MEMBER_JOINED\",\"MUC_MEMBER_LEFT\",\"MUC_LEFT\",\"MUC_ROLE_CHANGED\",\"MUC_LOCK_CHANGED\",\"PARTICIPANT_AUDIO_MUTED\",\"PARTICIPANT_VIDEO_MUTED\",\"PARTICIPANT_VIDEO_TYPE_CHANGED\",\"PARTCIPANT_FEATURES_CHANGED\",\"PASSWORD_REQUIRED\",\"PEERCONNECTION_READY\",\"PHONE_NUMBER_CHANGED\",\"PRESENCE_RECEIVED\",\"PRESENCE_STATUS\",\"PROMPT_FOR_LOGIN\",\"READY_TO_JOIN\",\"RECORDER_STATE_CHANGED\",\"REMOTE_STATS\",\"RENEGOTIATION_FAILED\",\"RESERVATION_ERROR\",\"ROOM_CONNECT_ERROR\",\"ROOM_CONNECT_NOT_ALLOWED_ERROR\",\"ROOM_JOIN_ERROR\",\"ROOM_MAX_USERS_ERROR\",\"SENDING_CHAT_MESSAGE\",\"SENDING_PRIVATE_CHAT_MESSAGE\",\"SESSION_ACCEPT_TIMEOUT\",\"SPEAKER_STATS_RECEIVED\",\"START_MUTED_FROM_FOCUS\",\"SUBJECT_CHANGED\",\"SUSPEND_DETECTED\",\"TRANSCRIPTION_STATUS_CHANGED\",\"TRANSPORT_INFO\",\"VIDEO_SIP_GW_AVAILABILITY_CHANGED\",\"VIDEO_SIP_GW_SESSION_STATE_CHANGED\",\"ICE_CONNECTION_STATE_CHANGED\",\"JSON_MESSAGE_RECEIVED\",\"undefined\",\"__WEBPACK_AMD_DEFINE_RESULT__\",\"__WEBPACK_AMD_DEFINE_FACTORY__\",\"requirejs\",\"require\",\"undef\",\"main\",\"req\",\"makeMap\",\"handlers\",\"defined\",\"waiting\",\"config\",\"defining\",\"hasOwn\",\"aps\",\"slice\",\"jsSuffixRegExp\",\"hasProp\",\"obj\",\"prop\",\"normalize\",\"baseName\",\"nameParts\",\"nameSegment\",\"mapValue\",\"foundMap\",\"lastIndex\",\"foundI\",\"foundStarMap\",\"starI\",\"j\",\"part\",\"baseParts\",\"split\",\"map\",\"starMap\",\"length\",\"nodeIdCompat\",\"test\",\"replace\",\"charAt\",\"concat\",\"splice\",\"join\",\"makeRequire\",\"relName\",\"forceSync\",\"args\",\"arguments\",\"push\",\"apply\",\"makeLoad\",\"depName\",\"callDep\",\"Error\",\"splitPrefix\",\"prefix\",\"index\",\"indexOf\",\"substring\",\"makeRelParts\",\"makeConfig\",\"relParts\",\"plugin\",\"parts\",\"relResourceName\",\"f\",\"pr\",\"e\",\"id\",\"uri\",\"deps\",\"callback\",\"cjsModule\",\"ret\",\"usingExports\",\"callbackType\",\"_typeof\",\"load\",\"alt\",\"setTimeout\",\"cfg\",\"_defined\",\"jQuery\",\"this\",\"Function\",\"func\",\"_slice\",\"Array\",\"_concat\",\"_args\",\"isArray\",\"arg\",\"toString\",\"elt\",\"len\",\"from\",\"Number\",\"Math\",\"ceil\",\"floor\",\"forEach\",\"thisArg\",\"T\",\"k\",\"TypeError\",\"O\",\"kValue\",\"keyStr\",\"btoa\",\"input\",\"chr1\",\"chr2\",\"chr3\",\"enc1\",\"enc2\",\"enc3\",\"enc4\",\"output\",\"charCodeAt\",\"isNaN\",\"atob\",\"String\",\"fromCharCode\",\"SHA1\",\"core_sha1\",\"x\",\"olda\",\"oldb\",\"oldc\",\"oldd\",\"olde\",\"w\",\"a\",\"b\",\"rol\",\"safe_add\",\"sha1_ft\",\"sha1_kt\",\"core_hmac_sha1\",\"data\",\"bkey\",\"str2binb\",\"ipad\",\"opad\",\"hash\",\"y\",\"lsw\",\"num\",\"cnt\",\"str\",\"bin\",\"binb2str\",\"binb2b64\",\"binarray\",\"triplet\",\"b64_hmac_sha1\",\"b64_sha1\",\"str_hmac_sha1\",\"str_sha1\",\"MD5\",\"str2binl\",\"md5_cmn\",\"q\",\"md5_ff\",\"md5_gg\",\"md5_hh\",\"md5_ii\",\"core_md5\",\"hexdigest\",\"binl2hex\",\"binl2str\",\"stropheUtils\",\"utf16to8\",\"out\",\"addCookies\",\"cookies\",\"cookieName\",\"cookieObj\",\"isObj\",\"cookieValue\",\"expires\",\"domain\",\"path\",\"escape\",\"unescape\",\"document\",\"cookie\",\"Strophe\",\"$build\",\"$iq\",\"$msg\",\"$pres\",\"utils\",\"attrs\",\"Builder\",\"VERSION\",\"NS\",\"HTTPBIND\",\"BOSH\",\"CLIENT\",\"AUTH\",\"ROSTER\",\"PROFILE\",\"DISCO_INFO\",\"DISCO_ITEMS\",\"MUC\",\"SASL\",\"STREAM\",\"FRAMING\",\"BIND\",\"SESSION\",\"STANZAS\",\"XHTML_IM\",\"XHTML\",\"tags\",\"attributes\",\"blockquote\",\"br\",\"cite\",\"em\",\"img\",\"li\",\"ol\",\"span\",\"strong\",\"ul\",\"body\",\"css\",\"validTag\",\"tag\",\"validAttribute\",\"attribute\",\"validCSS\",\"style\",\"Status\",\"ERROR\",\"CONNECTING\",\"CONNFAIL\",\"AUTHENTICATING\",\"AUTHFAIL\",\"CONNECTED\",\"DISCONNECTED\",\"DISCONNECTING\",\"ATTACHED\",\"REDIRECT\",\"CONNTIMEOUT\",\"ErrorCondition\",\"BAD_FORMAT\",\"CONFLICT\",\"MISSING_JID_NODE\",\"NO_AUTH_MECH\",\"UNKNOWN_REASON\",\"LogLevel\",\"DEBUG\",\"INFO\",\"WARN\",\"FATAL\",\"ElementType\",\"NORMAL\",\"TEXT\",\"CDATA\",\"FRAGMENT\",\"TIMEOUT\",\"SECONDARY_TIMEOUT\",\"addNamespace\",\"forEachChild\",\"elem\",\"elemName\",\"childNode\",\"childNodes\",\"nodeType\",\"isTagEqual\",\"el\",\"tagName\",\"_xmlGenerator\",\"_makeGenerator\",\"doc\",\"implementation\",\"createDocument\",\"documentMode\",\"_getIEXmlDom\",\"appendChild\",\"createElement\",\"xmlGenerator\",\"docStrings\",\"ActiveXObject\",\"xmlElement\",\"node\",\"xmlTextNode\",\"sort\",\"attr\",\"setAttribute\",\"xmlescape\",\"text\",\"xmlunescape\",\"createTextNode\",\"xmlHtmlNode\",\"html\",\"DOMParser\",\"parseFromString\",\"async\",\"loadXML\",\"getText\",\"nodeValue\",\"copyElement\",\"nodeName\",\"createHtml\",\"cssAttrs\",\"cssName\",\"cssValue\",\"toLowerCase\",\"getAttribute\",\"cssText\",\"createDocumentFragment\",\"escapeNode\",\"unescapeNode\",\"getNodeFromJid\",\"jid\",\"getDomainFromJid\",\"bare\",\"getBareJidFromJid\",\"getResourceFromJid\",\"_handleError\",\"stack\",\"fatal\",\"sourceURL\",\"handler\",\"line\",\"message\",\"fileName\",\"lineNumber\",\"log\",\"level\",\"msg\",\"console\",\"error\",\"debug\",\"info\",\"warn\",\"serialize\",\"result\",\"tree\",\"child\",\"_requestId\",\"_connectionPlugins\",\"addConnectionPlugin\",\"ptype\",\"xmlns\",\"nodeTree\",\"up\",\"parentNode\",\"moreattrs\",\"removeAttribute\",\"cnode\",\"impNode\",\"xmlGen\",\"importNode\",\"newElem\",\"h\",\"fragment\",\"innerHTML\",\"xhtml\",\"Handler\",\"type\",\"options\",\"matchBareFromJid\",\"ignoreNamespaceFragment\",\"matchBare\",\"user\",\"getNamespace\",\"elNamespace\",\"namespaceMatch\",\"nsMatch\",\"that\",\"isMatch\",\"elem_type\",\"run\",\"TimedHandler\",\"period\",\"lastCalled\",\"Date\",\"getTime\",\"reset\",\"Connection\",\"service\",\"proto\",\"protocol\",\"_proto\",\"Websocket\",\"Bosh\",\"features\",\"_sasl_data\",\"do_session\",\"do_bind\",\"timedHandlers\",\"removeTimeds\",\"removeHandlers\",\"addTimeds\",\"addHandlers\",\"protocolErrorHandlers\",\"HTTP\",\"websocket\",\"_idleTimeout\",\"_disconnectTimeout\",\"authenticated\",\"connected\",\"disconnecting\",\"do_authentication\",\"paused\",\"restored\",\"_data\",\"_uniqueId\",\"_sasl_success_handler\",\"_sasl_failure_handler\",\"_sasl_challenge_handler\",\"maxRetries\",\"_onIdle\",\"registerSASLMechanisms\",\"mechanisms\",\"F\",\"init\",\"_reset\",\"_requests\",\"pause\",\"resume\",\"getUniqueId\",\"suffix\",\"uuid\",\"random\",\"addProtocolErrorHandler\",\"status_code\",\"connect\",\"pass\",\"wait\",\"hold\",\"route\",\"authcid\",\"authzid\",\"servtype\",\"connect_callback\",\"_changeConnectStatus\",\"_connect\",\"attach\",\"sid\",\"rid\",\"wind\",\"_attach\",\"restore\",\"_sessionCachingSupported\",\"_restore\",\"JSON\",\"sessionStorage\",\"setItem\",\"removeItem\",\"xmlInput\",\"xmlOutput\",\"rawInput\",\"rawOutput\",\"nextValidRid\",\"send\",\"_queueData\",\"_send\",\"flush\",\"clearTimeout\",\"sendPresence\",\"errback\",\"timeout\",\"timeoutHandler\",\"addHandler\",\"stanza\",\"deleteTimedHandler\",\"addTimedHandler\",\"deleteHandler\",\"sendIQ\",\"iqtype\",\"element\",\"_sendRestart\",\"thand\",\"handRef\",\"hand\",\"SASLAnonymous\",\"SASLExternal\",\"SASLMD5\",\"SASLOAuthBearer\",\"SASLXOAuth2\",\"SASLPlain\",\"SASLSHA1\",\"registerSASLMechanism\",\"mechanism\",\"disconnect\",\"reason\",\"pres\",\"_addSysTimedHandler\",\"_onDisconnectTimeout\",\"_disconnect\",\"_abortAllRequests\",\"_doDisconnect\",\"status\",\"condition\",\"statusChanged\",\"err\",\"_dataRecv\",\"raw\",\"_reqToData\",\"strip\",\"pop\",\"_emptyQueue\",\"cond\",\"conflict\",\"getElementsByTagName\",\"UNKOWN_REASON\",\"newList\",\"_connect_cb\",\"_callback\",\"bodyWrap\",\"getElementsByTagNameNS\",\"mech\",\"matched\",\"authenticate\",\"_no_auth_received\",\"sortMechanismsByPriority\",\"higher\",\"swap\",\"priority\",\"_attemptSASLAuth\",\"mechanism_found\",\"_addSysHandler\",\"_sasl_success_cb\",\"_sasl_failure_cb\",\"_sasl_challenge_cb\",\"_sasl_mechanism\",\"onStart\",\"request_auth_exchange\",\"isClientFirst\",\"response\",\"onChallenge\",\"_attemptLegacyAuth\",\"_auth1_cb\",\"to\",\"challenge\",\"iq\",\"_auth2_cb\",\"serverSignature\",\"matches\",\"match\",\"onSuccess\",\"streamfeature_handlers\",\"wrapper\",\"_sasl_auth1_cb\",\"_sasl_bind_cb\",\"resource\",\"jidNode\",\"_sasl_session_cb\",\"onFailure\",\"now\",\"SASLMechanism\",\"connection\",\"_connection\",\"auth_str\",\"test_cnonce\",\"cnonce\",\"nonce\",\"salt\",\"iter\",\"Hi\",\"U\",\"U_old\",\"clientKey\",\"serverKey\",\"clientSignature\",\"responseText\",\"authMessage\",\"attribMatch\",\"substr\",\"_quote\",\"realm\",\"host\",\"digest_uri\",\"cred\",\"A1\",\"A2\",\"core\",\"Request\",\"sends\",\"xmlData\",\"origFunc\",\"date\",\"NaN\",\"abort\",\"dead\",\"age\",\"timeDead\",\"xhr\",\"_newXHR\",\"getResponse\",\"responseXML\",\"documentElement\",\"querySelector\",\"textContent\",\"XMLHttpRequest\",\"overrideMimeType\",\"onreadystatechange\",\"_conn\",\"errors\",\"inactivity\",\"lastResponseHeaders\",\"_buildBody\",\"keepalive\",\"_cacheSession\",\"xml:lang\",\"content\",\"ver\",\"xmpp:version\",\"xmlns:xmpp\",\"_onRequestStateChange\",\"_throttledRequestHandler\",\"session\",\"parse\",\"getItem\",\"stringify\",\"typ\",\"parseInt\",\"_sendTerminate\",\"_callProtocolErrorHandlers\",\"err_callback\",\"reqStatus\",\"_getRequestStatus\",\"_hitError\",\"xmpp:restart\",\"time_elapsed\",\"def\",\"readyState\",\"getAllResponseHeaders\",\"valid_request\",\"too_many_retries\",\"_removeRequest\",\"reqIs0\",\"_restartRequest\",\"_processRequest\",\"self\",\"primaryTimeout\",\"secondaryTimeout\",\"requestCompletedWithServerError\",\"contentType\",\"open\",\"sync\",\"setRequestHeader\",\"withCredentials\",\"e2\",\"sendFunc\",\"customHeaders\",\"headers\",\"header\",\"backoff\",\"min\",\"pow\",\"abs\",\"new_service\",\"location\",\"pathname\",\"_buildStream\",\"version\",\"_check_streamerror\",\"connectstatus\",\"errorString\",\"_closeSocket\",\"socket\",\"WebSocket\",\"onopen\",\"_onOpen\",\"onerror\",\"_onError\",\"onclose\",\"_onClose\",\"onmessage\",\"_connect_cb_wrapper\",\"_handleStreamStart\",\"streamStart\",\"parsedMessage\",\"see_uri\",\"string\",\"_streamWrap\",\"_onMessage\",\"CLOSED\",\"close\",\"closeString\",\"code\",\"rawStanza\",\"search\",\"firstChild\",\"start\",\"startString\",\"__WEBPACK_AMD_DEFINE_ARRAY__\",\"__webpack_exports__\",\"AUTH_STATUS_CHANGED\",\"AVATAR_CHANGED\",\"BEFORE_STATISTICS_DISPOSED\",\"CONFERENCE_ERROR\",\"CONFERENCE_FAILED\",\"CONFERENCE_JOINED\",\"CONFERENCE_LEFT\",\"DATA_CHANNEL_OPENED\",\"DOMINANT_SPEAKER_CHANGED\",\"DTMF_SUPPORT_CHANGED\",\"ENDPOINT_MESSAGE_RECEIVED\",\"JVB121_STATUS\",\"PARTICIPANT_KICKED\",\"LAST_N_ENDPOINTS_CHANGED\",\"LOCK_STATE_CHANGED\",\"SERVER_REGION_CHANGED\",\"PARTICIPANT_CONN_STATUS_CHANGED\",\"PARTICIPANT_PROPERTY_CHANGED\",\"P2P_STATUS\",\"PROPERTIES_CHANGED\",\"START_MUTED_POLICY_CHANGED\",\"STARTED_MUTED\",\"TALK_WHILE_MUTED\",\"TRACK_ADDED\",\"TRACK_AUDIO_LEVEL_CHANGED\",\"TRACK_MUTE_CHANGED\",\"TRACK_REMOVED\",\"USER_JOINED\",\"USER_LEFT\",\"USER_ROLE_CHANGED\",\"USER_STATUS_CHANGED\",\"BOT_TYPE_CHANGED\",\"_BrowserCapabilities__WEBPACK_IMPORTED_MODULE_0__\",\"BrowserCapabilities\",\"Logger\",\"LogCollector\",\"idLoggers\",\"loggers\",\"curLevel\",\"levels\",\"TRACE\",\"addGlobalTransport\",\"transport\",\"removeGlobalTransport\",\"setGlobalOptions\",\"getLogger\",\"transports\",\"logger\",\"setLogLevelById\",\"setLevel\",\"setLogLevel\",\"_instances\",\"__filename\",\"isCallstatsLoaded\",\"_initCallStatsBackend\",\"CallStats\",\"isBackendInitialized\",\"userName\",\"Settings\",\"callStatsUserName\",\"initBackend\",\"callStatsID\",\"callStatsSecret\",\"swapUserNameAndAlias\",\"callStatsAliasName\",\"aliasName\",\"applicationName\",\"getWiFiStatsMethod\",\"confID\",\"Statistics\",\"xmpp\",\"rtpStatsMap\",\"Map\",\"eventEmitter\",\"EventEmitter\",\"callStatsIntegrationEnabled\",\"disableThirdPartyRequests\",\"browser\",\"isReactNative\",\"ScriptUtil\",\"loadScript\",\"customScriptUrl\",\"loadCallStatsAPI\",\"callStatsConfIDNamespace\",\"callsStatsInstances\",\"instances\",\"add\",\"audioLevelsEnabled\",\"disableAudioLevels\",\"audioLevelsInterval\",\"analytics\",\"Set\",\"startRemoteStats\",\"peerconnection\",\"stopRemoteStats\",\"rtpStats\",\"RTPStats\",\"set\",\"localStats\",\"startLocalStats\",\"stream\",\"LocalStats\",\"addAudioLevelListener\",\"listener\",\"on\",\"StatisticsEvents\",\"removeAudioLevelListener\",\"removeListener\",\"addBeforeDisposedListener\",\"removeBeforeDisposedListener\",\"addConnectionStatsListener\",\"removeConnectionStatsListener\",\"addByteSentStatsListener\",\"removeByteSentStatsListener\",\"dispose\",\"size\",\"emit\",\"_iteratorNormalCompletion\",\"_didIteratorError\",\"_iteratorError\",\"_step\",\"_iterator\",\"values\",\"iterator\",\"next\",\"done\",\"callStats\",\"stopCallStats\",\"tpc\",\"return\",\"_iteratorNormalCompletion2\",\"_didIteratorError2\",\"_iteratorError2\",\"_step2\",\"_iterator2\",\"keys\",\"tpcId\",\"_stopRemoteStats\",\"removeAllListeners\",\"delete\",\"stopLocalStats\",\"stop\",\"startCallStats\",\"remoteUserID\",\"has\",\"newInstance\",\"_getCallStatsConfID\",\"_getAllCallStatsInstances\",\"csInstances\",\"_iteratorNormalCompletion3\",\"_didIteratorError3\",\"_iteratorError3\",\"_step3\",\"_iterator3\",\"statistics\",\"_iteratorNormalCompletion4\",\"_didIteratorError4\",\"_iteratorError4\",\"_step4\",\"_iterator4\",\"cs\",\"roomName\",\"callStatsInstance\",\"sendTerminateEvent\",\"isCallstatsEnabled\",\"sendConnectionResumeOrHoldEvent\",\"isResume\",\"instance\",\"sendResumeOrHoldEvent\",\"sendIceConnectionFailedEvent\",\"sendMuteEvent\",\"muted\",\"sendScreenSharingEvent\",\"ssrc\",\"_iteratorNormalCompletion5\",\"_didIteratorError5\",\"_iteratorError5\",\"_step5\",\"_iterator5\",\"sendDominantSpeakerEvent\",\"roomJid\",\"_iteratorNormalCompletion6\",\"_didIteratorError6\",\"_iteratorError6\",\"_step6\",\"_iterator6\",\"sendActiveDeviceListEvent\",\"devicesData\",\"globalSet\",\"_iteratorNormalCompletion7\",\"_didIteratorError7\",\"_iteratorError7\",\"_step7\",\"_iterator7\",\"associateStreamWithVideoTag\",\"isLocal\",\"userId\",\"usageLabel\",\"containerId\",\"sendGetUserMediaFailed\",\"JitsiTrackError\",\"gum\",\"constraintName\",\"constraints\",\"formatJitsiTrackErrorForCallStats\",\"_iteratorNormalCompletion8\",\"_didIteratorError8\",\"_iteratorError8\",\"_step8\",\"_iterator8\",\"sendCreateOfferFailed\",\"sendCreateAnswerFailed\",\"sendSetLocalDescFailed\",\"sendSetRemoteDescFailed\",\"sendAddIceCandidateFailed\",\"sendLog\",\"globalSubSet\",\"_iteratorNormalCompletion9\",\"_didIteratorError9\",\"_iteratorError9\",\"_step9\",\"_iterator9\",\"stats\",\"_iteratorNormalCompletion10\",\"_didIteratorError10\",\"_iteratorError10\",\"_step10\",\"_iterator10\",\"csPerStats\",\"sendApplicationLog\",\"sendFeedback\",\"overall\",\"comment\",\"sendEvent\",\"FEEDBACK\",\"rating\",\"LOCAL_JID\",\"reportGlobalError\",\"sendAnalyticsAndLog\",\"event\",\"eventToLog\",\"properties\",\"sendAnalytics\",\"eventName\",\"SDPUtil\",\"filterSpecialChars\",\"iceparams\",\"mediadesc\",\"sessiondesc\",\"pwd\",\"ufrag\",\"findLine\",\"parseICEUfrag\",\"parseICEPwd\",\"buildICEUfrag\",\"frag\",\"buildICEPwd\",\"parseMID\",\"parseMLine\",\"media\",\"shift\",\"port\",\"fmt\",\"buildMLine\",\"mline\",\"parseRTPMap\",\"clockrate\",\"channels\",\"parseSCTPMap\",\"buildRTPMap\",\"parseCrypto\",\"parseFingerprint\",\"fingerprint\",\"parseFmtp\",\"parseICECandidate\",\"candidate\",\"elems\",\"foundation\",\"component\",\"ip\",\"generation\",\"tcptype\",\"network\",\"buildICECandidate\",\"cand\",\"hasOwnAttribute\",\"parseSSRC\",\"desc\",\"lines\",\"parseRTCPFB\",\"pt\",\"params\",\"parseExtmap\",\"direction\",\"haystack\",\"needle\",\"sessionpart\",\"findLines\",\"needles\",\"candidateToJingle\",\"candidateFromJingle\",\"isFirefox\",\"parsePrimaryVideoSsrc\",\"videoMLine\",\"numSsrcs\",\"ssrcs\",\"ssrcInfo\",\"filter\",\"array\",\"numGroups\",\"ssrcGroups\",\"primarySsrc\",\"fidGroup\",\"find\",\"group\",\"semantics\",\"simGroup\",\"generateSsrc\",\"RandomUtil\",\"randomInt\",\"getSsrcAttribute\",\"mLine\",\"attributeName\",\"ssrcLine\",\"parseGroupSsrcs\",\"ssrcGroup\",\"ssrcStr\",\"getMedia\",\"sdp\",\"getUfrag\",\"ufragLines\",\"startsWith\",\"preferVideoCodec\",\"codecName\",\"payloadType\",\"rtp\",\"codec\",\"payload\",\"payloadTypes\",\"payloads\",\"payloadIndex\",\"unshift\",\"stripVideoCodec\",\"removePts\",\"rtxApts\",\"item\",\"rtxPts\",\"fmtp\",\"_toConsumableArray\",\"keepPts\",\"rtcpFb\",\"CREATE_ANSWER_FAILED\",\"CREATE_OFFER_FAILED\",\"DATA_CHANNEL_OPEN\",\"ENDPOINT_CONN_STATUS_CHANGED\",\"LASTN_ENDPOINT_CHANGED\",\"GRANTED_PERMISSIONS\",\"IS_SELECTED_CHANGED\",\"LASTN_VALUE_CHANGED\",\"LOCAL_TRACK_SSRC_UPDATED\",\"TRACK_ATTACHED\",\"REMOTE_TRACK_ADDED\",\"REMOTE_TRACK_MUTE\",\"REMOTE_TRACK_REMOVED\",\"REMOTE_TRACK_UNMUTE\",\"SET_LOCAL_DESCRIPTION_FAILED\",\"SET_REMOTE_DESCRIPTION_FAILED\",\"AUDIO_OUTPUT_DEVICE_CHANGED\",\"DEVICE_LIST_CHANGED\",\"DEVICE_LIST_WILL_CHANGE\",\"DEVICE_LIST_AVAILABLE\",\"LOCAL_UFRAG_CHANGED\",\"REMOTE_UFRAG_CHANGED\",\"TYPE_OPERATIONAL\",\"TYPE_PAGE\",\"TYPE_TRACK\",\"TYPE_UI\",\"ACTION_JINGLE_RESTART\",\"ACTION_JINGLE_SA_TIMEOUT\",\"ACTION_JINGLE_SI_RECEIVED\",\"ACTION_JINGLE_SI_TIMEOUT\",\"ACTION_JINGLE_TERMINATE\",\"ACTION_JINGLE_TR_RECEIVED\",\"ACTION_JINGLE_TR_SUCCESS\",\"ACTION_P2P_ESTABLISHED\",\"ACTION_P2P_FAILED\",\"ACTION_P2P_SWITCH_TO_JVB\",\"AVAILABLE_DEVICE\",\"CONNECTION_DISCONNECTED\",\"ICE_DURATION\",\"ICE_ESTABLISHMENT_DURATION_DIFF\",\"ICE_STATE_CHANGED\",\"NO_BYTES_SENT\",\"TRACK_UNMUTED\",\"createBridgeDownEvent\",\"action\",\"actionSubject\",\"createConnectionFailedEvent\",\"errorType\",\"errorMessage\",\"details\",\"_objectSpread\",\"error_type\",\"error_message\",\"createConnectionStageReachedEvent\",\"stage\",\"source\",\"createE2eRttEvent\",\"participantId\",\"region\",\"rtt\",\"participant_id\",\"createFocusLeftEvent\",\"createGetUserMediaEvent\",\"createParticipantConnectionStatusEvent\",\"createJingleEvent\",\"createNoDataFromSourceEvent\",\"mediaType\",\"media_type\",\"createP2PEvent\",\"createRemotelyMutedEvent\",\"createRtpStatsEvent\",\"createRttByRegionEvent\",\"createAudioOutputProblemEvent\",\"userID\",\"localAudioLevels\",\"remoteAudioLevels\",\"createBridgeChannelClosedEvent\",\"createTtfmEvent\",\"AUDIO\",\"VIDEO\",\"usesAdapter\",\"availableDevices\",\"availableDevicesPollTimer\",\"OLD_GUM_DEFAULT_DEVICES\",\"DEFAULT_CONSTRAINTS\",\"video\",\"aspectRatio\",\"height\",\"ideal\",\"max\",\"SS_DEFAULT_FRAME_RATE\",\"audioOutputDeviceId\",\"audioOutputChanged\",\"disableAP\",\"disableAEC\",\"disableNS\",\"disableAGC\",\"disableHPF\",\"featureDetectionAudioEl\",\"isAudioOutputDeviceChangeAvailable\",\"setSinkId\",\"getConstraints\",\"um\",\"audio\",\"isNewStyleConstraintsSupported\",\"isSafariWithVP8\",\"isEdge\",\"mandatory\",\"optional\",\"cameraDeviceId\",\"deviceId\",\"sourceId\",\"facingMode\",\"CameraFacingMode\",\"USER\",\"minFps\",\"maxFps\",\"fps\",\"minFrameRate\",\"maxFrameRate\",\"resolution\",\"Resolutions\",\"width\",\"minWidth\",\"minHeight\",\"maxWidth\",\"maxHeight\",\"setResolutionConstraints\",\"micDeviceId\",\"echoCancellation\",\"googEchoCancellation\",\"googAutoGainControl\",\"googNoiseSuppression\",\"googHighpassFilter\",\"googNoiseSuppression2\",\"googEchoCancellation2\",\"googAutoGainControl2\",\"isChrome\",\"getSSConstraints\",\"mozMediaSource\",\"mediaSource\",\"frameRate\",\"errmsg\",\"GlobalOnErrorHandler\",\"callErrorHandler\",\"bandwidth\",\"firefox_fake_device\",\"fake\",\"desktopStream\",\"_options$frameRate\",\"chromeMediaSource\",\"screen\",\"chromeMediaSourceId\",\"getTrackSSConstraints\",\"desktopSharingFrameRate\",\"updateGrantedPermissions\",\"audioTracksReceived\",\"Boolean\",\"getAudioTracks\",\"videoTracksReceived\",\"getVideoTracks\",\"grantedPermissions\",\"RTCEvents\",\"sendDeviceListToAnalytics\",\"deviceList\",\"audioInputDeviceCount\",\"kind\",\"audioOutputDeviceCount\",\"videoInputDeviceCount\",\"videoOutputDeviceCount\",\"device\",\"audio_input_device_count\",\"audio_output_device_count\",\"video_input_device_count\",\"video_output_device_count\",\"device_id\",\"device_group_id\",\"groupId\",\"device_kind\",\"device_label\",\"label\",\"rtcUtils\",\"RTCUtils\",\"_classCallCheck\",\"_possibleConstructorReturn\",\"_getPrototypeOf\",\"Listenable\",\"_this\",\"clearInterval\",\"enumerateDevices\",\"navigator\",\"mediaDevices\",\"then\",\"initEnumerateDevicesWithCallback\",\"usesNewGumFlow\",\"RTCPeerConnectionType\",\"RTCPeerConnection\",\"attachMediaStream\",\"wrapAttachMediaStream\",\"srcObject\",\"getStreamID\",\"_ref\",\"getTrackID\",\"_ref2\",\"isChromiumBased\",\"src\",\"srcObjectPropertyName\",\"jitsiObjectURL\",\"URL\",\"createObjectURL\",\"defaultSetVideoSrc\",\"_ref3\",\"_ref4\",\"MediaStream\",\"videoTracks\",\"audioTracks\",\"_initPCConstraints\",\"screenObtainer\",\"getUserMediaWithConstraints\",\"isDeviceListAvailable\",\"ds\",\"updateKnownDevices\",\"pds\",\"devicesReceived\",\"newDevices\",\"mediaDeviceInfoToJSON\",\"facing\",\"compareAvailableMediaDevices\",\"supportsDeviceChangeEvent\",\"addEventListener\",\"setInterval\",\"pcConstraints\",\"googHighStartBitrate\",\"googPayloadPadding\",\"googScreencastMinBitrate\",\"googCpuOveruseDetection\",\"googCpuOveruseEncodeUsage\",\"googCpuUnderuseThreshold\",\"googCpuOveruseThreshold\",\"useIPv6\",\"googIPv6\",\"p2pPcConstraints\",\"Promise\",\"resolve\",\"reject\",\"getUserMedia\",\"catch\",\"umDevices\",\"_this2\",\"isSupported\",\"supportsVideo\",\"obtainStream\",\"_parseDesktopSharingOptions\",\"devices\",\"requestingDesktop\",\"includes\",\"_getAudioAndVideoStreams\",\"streams\",\"audioStream\",\"videoStream\",\"res\",\"audioVideo\",\"addTrack\",\"desktop\",\"_desktopStream\",\"sourceType\",\"track\",\"MediaType\",\"videoType\",\"VideoType\",\"DESKTOP\",\"CAMERA\",\"handleLocalStream\",\"_this3\",\"avStream\",\"missingTracks\",\"_getMissingTracks\",\"stopMediaStream\",\"desktopSharingSourceDevice\",\"requestedDevices\",\"missingDevices\",\"audioDeviceRequested\",\"videoDeviceRequested\",\"desktopSharingExtensionExternalInstallation\",\"desktopSharingSources\",\"gumOptions\",\"trackOptions\",\"_this4\",\"mediaStreamsMetaData\",\"maybeRequestDesktopDevice\",\"matchingDevice\",\"_this$_parseDesktopSh\",\"exact\",\"_newGetUserMediaWithConstraints\",\"getTracks\",\"applyConstraints\",\"_newGetDesktopMedia\",\"maybeRequestCaptureDevices\",\"requestedCaptureDevices\",\"newGetConstraints\",\"effects\",\"_ref5\",\"deviceType\",\"mediaStream\",\"release\",\"url\",\"revokeObjectURL\",\"isDeviceChangeAvailable\",\"deviceData\",\"enable\",\"googSuspendBelowMinBitrate\",\"origAttachMediaStream\",\"getAudioOutputDevice\",\"ex\",\"callUnhandledRejectionHandler\",\"promise\",\"oldOnErrorHandler\",\"oldOnUnhandledRejection\",\"onunhandledrejection\",\"_len\",\"_key\",\"errHandler\",\"CHROME_EXTENSION_GENERIC_ERROR\",\"CHROME_EXTENSION_INSTALLATION_ERROR\",\"CHROME_EXTENSION_USER_GESTURE_REQUIRED\",\"CHROME_EXTENSION_USER_CANCELED\",\"CONSTRAINT_FAILED\",\"ELECTRON_DESKTOP_PICKER_ERROR\",\"ELECTRON_DESKTOP_PICKER_NOT_FOUND\",\"FIREFOX_EXTENSION_NEEDED\",\"GENERAL\",\"NOT_FOUND\",\"PERMISSION_DENIED\",\"TRACK_IS_DISPOSED\",\"TRACK_NO_STREAM_FOUND\",\"UNSUPPORTED_RESOLUTION\",\"peerConnectionIdCounter\",\"rtcTrackIdCounter\",\"createLocalTracks\",\"tracksInfo\",\"newTracks\",\"trackInfo\",\"safeCounterIncrement\",\"localTrack\",\"JitsiLocalTrack\",\"rtcId\",\"_newCreateLocalTracks\",\"metaData\",\"_track$getSettings\",\"getSettings\",\"RTC\",\"conference\",\"peerConnections\",\"localTracks\",\"_channel\",\"_channelOpen\",\"_lastN\",\"_lastNEndpoints\",\"_maxFrameHeight\",\"_pinnedEndpoint\",\"_selectedEndpoints\",\"_lastNChangeListener\",\"_onLastNChanged\",\"_assertThisInitialized\",\"_onDeviceListChanged\",\"_updateAudioOutputForAudioTracks\",\"addListener\",\"newObtainAudioAndVideoPermissions\",\"obtainAudioAndVideoPermissions\",\"eventType\",\"isP2P\",\"elSelector\",\"getCurrentlyAvailableMediaDevices\",\"getEventDataForActiveDevice\",\"setAudioOutputDevice\",\"isUserStreamById\",\"streamId\",\"isDesktopSharingEnabled\",\"_channelOpenListener\",\"wsUrl\",\"BridgeChannel\",\"sendPinnedEndpointMessage\",\"sendSelectedEndpointsMessage\",\"sendReceiverVideoConstraintMessage\",\"_selectedEndpoint\",\"sendSetLastNMessage\",\"leavingLastNEndpoints\",\"enteringLastNEndpoints\",\"lastNEndpoints\",\"oldLastNEndpoints\",\"isInLastN\",\"JitsiConferenceEvents\",\"maxFrameHeight\",\"ids\",\"signaling\",\"iceConfig\",\"getPCConstraints\",\"abtestSuspendVideo\",\"setSuspendVideo\",\"addPermanentProperties\",\"supportsSdpSemantics\",\"sdpSemantics\",\"newConnection\",\"TraceablePeerConnection\",\"traceablePeerConnection\",\"localVideo\",\"getLocalTracks\",\"localAudio\",\"tracks\",\"getType\",\"remoteTracks\",\"pcRemoteTracks\",\"getRemoteTracks\",\"mutePromises\",\"audioTrack\",\"mute\",\"unmute\",\"all\",\"pos\",\"owner\",\"removedTracks\",\"pcRemovedTracks\",\"removeRemoteTracks\",\"audioLevel\",\"getTrackBySSRC\",\"isAudioTrack\",\"setAudioLevel\",\"sendMessage\",\"remoteAudioTracks\",\"setAudioOutput\",\"TRACK_ERROR_TO_MESSAGE_MAP\",\"JitsiTrackErrors\",\"constraint\",\"failedConstraintName\",\"getResolutionFromFailedConstraint\",\"constructor\",\"LOCAL_TRACK_STOPPED\",\"TRACK_AUDIO_OUTPUT_CHANGED\",\"TRACK_VIDEOTYPE_CHANGED\",\"NO_DATA_FROM_SOURCE\",\"CHAT_ERROR\",\"CONFERENCE_DESTROYED\",\"CONFERENCE_MAX_USERS\",\"CONNECTION_ERROR\",\"NOT_ALLOWED_ERROR\",\"INCOMPATIBLE_SERVER_VERSIONS\",\"OFFER_ANSWER_FAILED\",\"PASSWORD_NOT_SUPPORTED\",\"SETUP_FAILED\",\"VIDEOBRIDGE_NOT_AVAILABLE\",\"SDP\",\"mediaI\",\"failICE\",\"removeTcpCandidates\",\"removeUdpCandidates\",\"getMediaSsrcMap\",\"tmp\",\"mediaSSRCs\",\"_loop\",\"mediaindex\",\"mid\",\"linessrc\",\"idx\",\"containsSSRC\",\"medias\",\"mangle\",\"newdesc\",\"rtpmap\",\"removeSessionLines\",\"removeMediaLines\",\"toJingle\",\"thecreator\",\"assrcline\",\"creator\",\"amidline\",\"afmtpline\",\"rtcpFbToJingle\",\"crypto\",\"required\",\"ssrcMap\",\"_step$value\",\"_slicedToArray\",\"availableSsrc\",\"ssrcParameters\",\"ssrcSdpLine\",\"kv\",\"v\",\"ridLines\",\"rids\",\"ridLine\",\"ridInfo\",\"senders\",\"transportToJingle\",\"sctpmap\",\"sctpAttrs\",\"number\",\"setup\",\"payloadtype\",\"subtype\",\"rtcpFbFromJingle\",\"each\",\"$\",\"fromJingle\",\"jingle\",\"groups\",\"contents\",\"_\",\"jingle2media\",\"sctp\",\"streamCount\",\"CHROME\",\"OPERA\",\"FIREFOX\",\"INTERNET_EXPLORER\",\"EDGE\",\"SAFARI\",\"NWJS\",\"ELECTRON\",\"REACT_NATIVE\",\"UNKNOWN\",\"bowserNameToJitsiName\",\"Chrome\",\"Chromium\",\"Opera\",\"Firefox\",\"Internet Explorer\",\"Microsoft Edge\",\"Safari\",\"_detectElectron\",\"userAgent\",\"_detectNWJS\",\"_detectReactNative\",\"product\",\"_detect\",\"browserInfo\",\"detectors\",\"bowser\",\"chrome\",\"_detectChromiumBased\",\"BrowserDetection\",\"detectedBrowserInfo\",\"_name\",\"_version\",\"compareVersions\",\"compareVersion\",\"BrowserDetection_BrowserDetection\",\"browsers_namespaceObject\",\"STATUS_AVAILABLE\",\"STATUS_UNDEFINED\",\"STATUS_BUSY\",\"STATE_ON\",\"STATE_OFF\",\"STATE_PENDING\",\"STATE_RETRYING\",\"STATE_FAILED\",\"ERROR_NO_CONNECTION\",\"ERROR_SESSION_EXISTS\",\"WRONG_STATE\",\"parser\",\"writer\",\"write\",\"parseFmtpConfig\",\"parseParams\",\"parsePayloads\",\"parseRemoteCandidates\",\"parseImageAttributes\",\"parseSimulcastStreamList\",\"AUDIO_LEVEL\",\"BEFORE_DISPOSED\",\"BYTE_SENT_STATS\",\"CONNECTION_STATS\",\"removeEventListener\",\"off\",\"_callStatsUserName\",\"_machineId\",\"jitsi_meet_logger__WEBPACK_IMPORTED_MODULE_0__\",\"_util_UsernameGenerator__WEBPACK_IMPORTED_MODULE_1__\",\"_util_UsernameGenerator__WEBPACK_IMPORTED_MODULE_1___default\",\"getLocalStorage\",\"storage\",\"localStorage\",\"_p8\",\"username\",\"UsernameGenerator\",\"generateUsername\",\"machineId\",\"jitsiMeetId\",\"sessionId\",\"LOCAL_STATS_UPDATED\",\"REMOTE_STATS_UPDATED\",\"parsePrimarySSRC\",\"parseSecondarySSRC\",\"_getSSRCCount\",\"MLineWrap\",\"ssrcNumber\",\"attrName\",\"ssrcObj\",\"ssrcNum\",\"primarySSRC\",\"msid\",\"findGroup\",\"fecGroup\",\"findGroupByPrimarySSRC\",\"videoSSRCs\",\"getSSRCs\",\"ssrcGroupInfo\",\"secondarySsrc\",\"groupInfo\",\"oldSSRC\",\"newSSRC\",\"SdpTransformWrap\",\"rawSDP\",\"parsedSDP\",\"transform\",\"_createClass\",\"selectedMLine\",\"ACTIONS\",\"ACCEPT\",\"INITIATE\",\"TERMINATE\",\"UNAVAILABLE\",\"_events\",\"_maxListeners\",\"isFunction\",\"isObject\",\"isUndefined\",\"defaultMaxListeners\",\"setMaxListeners\",\"er\",\"listeners\",\"context\",\"newListener\",\"warned\",\"trace\",\"once\",\"fired\",\"g\",\"list\",\"position\",\"listenerCount\",\"evlistener\",\"emitter\",\"1080\",\"order\",\"fullhd\",\"720\",\"hd\",\"960\",\"540\",\"qhd\",\"360\",\"640\",\"vga\",\"180\",\"320\",\"PENDING\",\"ACTIVE\",\"ENDED\",\"_fabrics\",\"wrtcFuncNames\",\"fabricEvent\",\"DEFAULT_REMOTE_USER\",\"reportType\",\"hasFabric\",\"fabrics\",\"backendInitialized\",\"_addNewFabric\",\"_emptyReportQueue\",\"backend\",\"atLeastOneFabric\",\"defaultInstance\",\"csInstance\",\"defaultConfID\",\"defaultPC\",\"reportsQueue\",\"report\",\"errorData\",\"_reportError\",\"pc\",\"eventData\",\"sendFabricEvent\",\"associateMstWithUserID\",\"callStatsId\",\"_error\",\"reportError\",\"theBackend\",\"tryCatchMethods\",\"methodName\",\"_i\",\"originalMethod\",\"_len2\",\"theArguments\",\"_key2\",\"debugMethods\",\"_loop2\",\"_i2\",\"_len3\",\"_key3\",\"originalReportError\",\"exception\",\"configParams\",\"CallStatsBackend\",\"callstats\",\"_traceAndCatchBackendCalls\",\"applicationVersion\",\"getName\",\"siteID\",\"initialize\",\"_initCallback\",\"attachWifiStatsHandler\",\"addresses\",\"_reportEvent\",\"conferenceID\",\"sendUserFeedback\",\"fabricAttributes\",\"remoteEndpointType\",\"endpointType\",\"peer\",\"server\",\"addNewFabric\",\"fabricUsage\",\"multiplex\",\"_addNewFabricCallback\",\"success\",\"streamEndpointId\",\"fabricTerminated\",\"ALPHANUM\",\"randomElement\",\"arr\",\"randomHexDigit\",\"randomHexString\",\"randomAlphanumStr\",\"getConnectionPluginDefinition\",\"base\",\"_class\",\"_base\",\"_class2\",\"_getPrototypeOf2\",\"_inherits\",\"ConnectionPluginListenable\",\"DEFAULT_STUN_SERVERS\",\"urls\",\"JITSI_MEET_MUC_TYPE\",\"XMPP\",\"token\",\"disconnectInProgress\",\"connectionTimes\",\"authenticatedUser\",\"_initStrophePlugins\",\"bosh\",\"conn\",\"createConnection\",\"_lastSuccessTracker\",\"LastSuccessTracker\",\"startTracking\",\"caps\",\"Caps\",\"clientNode\",\"initFeaturesList\",\"ev\",\"addFeature\",\"disableRtx\",\"supportsRtx\",\"enableLipSync\",\"rayo\",\"_pingSupported\",\"credentials\",\"performance\",\"statusStr\",\"getStatusString\",\"XMPPEvents\",\"useStunTurn\",\"p2p\",\"getStunAndTurnCredentials\",\"pingJid\",\"getFeaturesAndIdentities\",\"identities\",\"PING\",\"ping\",\"startInterval\",\"identity\",\"speakerStatsComponentAddress\",\"_onPrivateMessage\",\"password\",\"JitsiConnectionEvents\",\"anonymousConnectionFailed\",\"connectionFailed\",\"lastErrorMsg\",\"JitsiConnectionErrors\",\"stopInterval\",\"wasIntentionalDisconnect\",\"errMsg\",\"_getConnectionFailedReasonDetails\",\"lastErrorStatus\",\"getLastErrorStatus\",\"connectionHandler\",\"attaching\",\"_this$options$hosts\",\"hosts\",\"anonymousdomain\",\"configDomain\",\"hostname\",\"onCreateResource\",\"roomjid\",\"muc\",\"mucNickname\",\"emuc\",\"createRoom\",\"getLog\",\"_this$connection$rayo\",\"dial\",\"isPingSupported\",\"sessions\",\"disconnectListener\",\"evType\",\"jvb\",\"iceServers\",\"p2pStunServers\",\"stunServers\",\"iceTransportPolicy\",\"initEmuc\",\"initJingle\",\"initStropheUtil\",\"initPing\",\"initRayo\",\"initStropheLogger\",\"deploymentInfo\",\"shard\",\"headersArr\",\"trim\",\"shard_changed\",\"suspend_time\",\"getPingSuspendTime\",\"time_since_last_success\",\"getTimeSinceLastSuccess\",\"room\",\"jsonString\",\"json\",\"jsonMessage\",\"parsedJson\",\"tryParseJSONAndVerify\",\"users\",\"CONNECTION_DROPPED_ERROR\",\"OTHER_ERROR\",\"SERVER_ERROR\",\"PEER_MUTED_CHANGED\",\"PEER_VIDEO_TYPE_CHANGED\",\"logDisabled_\",\"deprecationWarnings_\",\"disableLog\",\"bool\",\"disableWarnings\",\"deprecated\",\"oldMethod\",\"newMethod\",\"extractVersion\",\"uastring\",\"expr\",\"detectBrowser\",\"mozGetUserMedia\",\"webkitGetUserMedia\",\"webkitRTCPeerConnection\",\"shimCreateObjectURL\",\"ENVIRONMENT\",\"chromeExtInstalled\",\"chromeExtUpdateRequired\",\"gumFunction\",\"ScreenObtainer\",\"intChromeExtPromise\",\"desktopSharingChromeDisabled\",\"desktopSharingChromeExtId\",\"desktopSharingFirefoxDisabled\",\"_createObtainStreamMethod\",\"isNWJS\",\"JitsiMeetNW\",\"obtainDesktopStream\",\"jitsiError\",\"isElectron\",\"obtainScreenOnElectron\",\"isOpera\",\"supportsGetDisplayMedia\",\"obtainScreenFromGetDisplayMedia\",\"append\",\"getWebStoreInstallUrl\",\"initInlineInstalls\",\"checkChromeExtInstalled\",\"installed\",\"updateRequired\",\"initChromeExtension\",\"obtainScreenFromExtension\",\"obtainScreenOnFirefox\",\"errorCallback\",\"streamCallback\",\"failCallback\",\"obtainWebRTCScreen\",\"JitsiMeetScreenObtainer\",\"openDesktopPicker\",\"desktopSharingChromeSources\",\"streamType\",\"onGetStreamResponse\",\"_this$options\",\"doGetStreamFromExtensionOptions\",\"runtime\",\"getStream\",\"sources\",\"lastError\",\"doGetStreamFromExtension\",\"alert\",\"handleExternalInstall\",\"webStoreInstallUrl\",\"checkForChromeExtensionOnInterval\",\"checkAgain\",\"waitInterval\",\"retries\",\"currentRetries\",\"interval\",\"waitForExtensionAfterInstall\",\"getDisplayMedia\",\"getVersion\",\"extVersion\",\"minVersion\",\"s1\",\"s2\",\"n1\",\"n2\",\"isUpdateRequired\",\"desktopSharingChromeMinExtVersion\",\"DEFAULT_NOT_IN_LAST_N_TIMEOUT\",\"DEFAULT_RTC_MUTE_TIMEOUT\",\"ParticipantConnectionStatus\",\"INACTIVE\",\"INTERRUPTED\",\"RESTORING\",\"ParticipantConnectionStatusHandler\",\"rtc\",\"trackTimers\",\"connStatusFromJvb\",\"outOfLastNTimeout\",\"rtcMuteTimeout\",\"rtcMutedTimestamp\",\"enteredLastNTimestamp\",\"restoringTimers\",\"connectionStatusMap\",\"isConnectionActiveByJvb\",\"isRestoringTimedout\",\"isVideoMuted\",\"isVideoTrackFrozen\",\"supportsVideoMuteOnConnInterrupted\",\"_onEndpointConnStatusChanged\",\"onEndpointConnStatusChanged\",\"_onP2PStatus\",\"refreshConnectionStatusForAll\",\"_onUserLeft\",\"onUserLeft\",\"_onTrackRtcMuted\",\"onTrackRtcMuted\",\"_onTrackRtcUnmuted\",\"onTrackRtcUnmuted\",\"_onRemoteTrackAdded\",\"onRemoteTrackAdded\",\"_onRemoteTrackRemoved\",\"onRemoteTrackRemoved\",\"_onSignallingMuteChanged\",\"onSignallingMuteChanged\",\"_onTrackVideoTypeChanged\",\"onTrackVideoTypeChanged\",\"_onLastNValueChanged\",\"participantIds\",\"clearRtcMutedTimestamp\",\"endpointId\",\"isActive\",\"myUserId\",\"figureOutConnectionStatus\",\"participant\",\"newStatus\",\"getConnectionStatus\",\"getId\",\"_setConnectionStatus\",\"remoteTrack\",\"getParticipantId\",\"JitsiTrackEvents\",\"hasAnyVideoRTCMuted\",\"hasAnyVideoTrackWebRTCMuted\",\"_getVideoFrozenTimeout\",\"participants\",\"getParticipants\",\"getParticipantById\",\"inP2PMode\",\"isP2PActive\",\"isRestoringTimedOut\",\"_isRestoringTimedout\",\"audioOnlyMode\",\"getLastN\",\"isConnActiveByJvb\",\"newState\",\"_getNewStateForP2PMode\",\"_getNewStateForJvbMode\",\"_clearRestoringTimer\",\"oldConnectionStatus\",\"connectionStatus\",\"nowMs\",\"maybeSendParticipantConnectionStatusEvent\",\"startedMs\",\"getTracksByMediaType\",\"_changeConnectionStatus\",\"participantConnectionStatus\",\"leavingLastN\",\"enteringLastN\",\"rTimer\",\"isMuted\",\"getFocusRecordingUpdate\",\"presence\",\"jibriStatus\",\"recordingMode\",\"sessionID\",\"getHiddenDomainUpdate\",\"liveStreamViewURLContainer\",\"liveStreamViewURL\",\"modeContainer\",\"sessionIDContainer\",\"getSessionIdFromIq\",\"jibri\",\"getSessionId\",\"sessionIdContainer\",\"isFromFocus\",\"JingleSessionPC\",\"localJid\",\"remoteJid\",\"mediaConstraints\",\"isInitiator\",\"_bridgeSessionId\",\"_iceCheckingStartedTimestamp\",\"_gatheringStartedTimestamp\",\"_localVideoActive\",\"_remoteVideoActive\",\"_gatheringReported\",\"lasticecandidate\",\"closed\",\"signalingLayer\",\"SignalingLayerImpl\",\"modificationQueue\",\"AsyncQueue\",\"wasConnected\",\"establishmentDuration\",\"JingleSession\",\"jingleContents\",\"videoContents\",\"state\",\"JingleSessionState\",\"isReconnect\",\"wasstable\",\"webrtcIceUdpDisable\",\"webrtcIceTcpDisable\",\"pcOptions\",\"gatherStats\",\"maxstats\",\"disableSimulcast\",\"disableH264\",\"preferH264\",\"_abtestSuspendVideoEnabled\",\"enableFirefoxSimulcast\",\"testing\",\"enableLayerSuspension\",\"startSilent\",\"createPeerConnection\",\"onicecandidate\",\"phase\",\"initiator\",\"sendIceCandidate\",\"onsignalingstatechange\",\"signalingState\",\"connectionState\",\"oniceconnectionstatechange\",\"iceConnectionState\",\"signaling_state\",\"reconnect\",\"iceStarted\",\"onnegotiationneeded\",\"setChatRoom\",\"isSelected\",\"setIsSelected\",\"finishedCallback\",\"_renegotiate\",\"localSDP\",\"localDescription\",\"ice\",\"sdpMLineIndex\",\"jcand\",\"usedrip\",\"dripContainer\",\"sendIceCandidates\",\"candidates\",\"_assertNotEnded\",\"initiatorJid\",\"cands\",\"sdpMid\",\"fingerprintLine\",\"newJingleErrorHandler\",\"sessionInfo\",\"_this5\",\"iceCandidates\",\"rtcCandidate\",\"RTCIceCandidate\",\"iceCandidate\",\"addIceCandidate\",\"outerHTML\",\"_this6\",\"ssrcElement\",\"setSSRCOwner\",\"i3\",\"ssrcInfoElement\",\"generateRecvonlySsrc\",\"jingleOffer\",\"failure\",\"_this7\",\"setOfferAnswerCycle\",\"sendSessionAccept\",\"_this8\",\"createOffer\",\"offerSdp\",\"setLocalDescription\",\"sendSessionInitiate\",\"jingleAnswer\",\"jingleOfferAnswerIq\",\"_this9\",\"newRemoteSdp\",\"_processNewJingleOfferIq\",\"oldLocalSdp\",\"bridgeSessionId\",\"sendContentModify\",\"newLocalSdp\",\"notifyMySSRCUpdate\",\"jingleOfferElem\",\"_this10\",\"originalOffer\",\"clone\",\"remove\",\"newFingerprint\",\"sendTransportAccept\",\"_this11\",\"accept\",\"responder\",\"responderJid\",\"videoTransferActive\",\"newSendersValue\",\"sessionModify\",\"_this12\",\"transportAccept\",\"medialines\",\"transportReject\",\"sendSessionTerminate\",\"sessionTerminate\",\"reasonDescription\",\"terminate\",\"reasonCondition\",\"reasonText\",\"sourceAddElem\",\"currentRemoteSdp\",\"addSsrcInfo\",\"i1\",\"i2\",\"_addOrRemoveRemoteStream\",\"isAdd\",\"_this13\",\"logPrefix\",\"readSsrcInfo\",\"remoteDescription\",\"addOrRemoveSsrcInfo\",\"_parseSsrcInfoFromSourceAdd\",\"_parseSsrcInfoFromSourceRemove\",\"_processRemoteAddSource\",\"_processRemoteRemoveSource\",\"offerIq\",\"remoteSdp\",\"removeSsrcInfo\",\"optionalRemoteSdp\",\"RTCSessionDescription\",\"_initiatorRenegotiate\",\"_responderRenegotiate\",\"_this14\",\"setRemoteDescription\",\"createAnswer\",\"answer\",\"_this15\",\"offer\",\"oldTrack\",\"newTrack\",\"_this16\",\"workFunction\",\"isVideoTrack\",\"clearRecvonlySsrc\",\"replaceTrack\",\"shouldRenegotiate\",\"newLocalSDP\",\"sourceRemoveElem\",\"ssrcLines\",\"operationName\",\"oldSDP\",\"currentLocalSDP\",\"sdpDiff\",\"SDPDiffer\",\"addedMedia\",\"getNewMedia\",\"removedMedia\",\"_addRemoveTrackAsMuteUnmute\",\"isMute\",\"_this17\",\"oldLocalSDP\",\"removeTrackMute\",\"addTrackUnmute\",\"_verifyNoSSRCChanged\",\"audioActive\",\"videoActive\",\"_this18\",\"logAudioStr\",\"logVideoStr\",\"isSessionActive\",\"audioActiveChanged\",\"setAudioTransferActive\",\"pcVideoActiveChanged\",\"setVideoTransferActive\",\"_this19\",\"newVideoSenders\",\"parseVideoSenders\",\"_modifyRemoteVideoActive\",\"remoteVideoSenders\",\"isRemoteVideoActive\",\"newSDP\",\"sdpDiffer\",\"request\",\"failureCb\",\"_this20\",\"errResponse\",\"errorElSel\",\"errorReasonSel\",\"errorMsgSel\",\"_this21\",\"clear\",\"finishCallback\",\"shutdown\",\"abTesting\",\"enableSuspendVideoTest\",\"_getInitiatorJid\",\"integerHash\",\"PERMISSION_PROMPT_IS_SHOWN\",\"definition\",\"detect\",\"ua\",\"getFirstMatch\",\"regex\",\"getSecondMatch\",\"iosdevice\",\"android\",\"nexusMobile\",\"nexusTablet\",\"chromeos\",\"silk\",\"sailfish\",\"tizen\",\"webos\",\"windowsphone\",\"windows\",\"mac\",\"linux\",\"edgeVersion\",\"versionIdentifier\",\"tablet\",\"mobile\",\"xbox\",\"opera\",\"samsungBrowser\",\"coast\",\"yandexbrowser\",\"ucbrowser\",\"maxthon\",\"epiphany\",\"puffin\",\"sleipnir\",\"kMeleon\",\"osname\",\"msedge\",\"msie\",\"chromeBook\",\"vivaldi\",\"seamonkey\",\"firefox\",\"firefoxos\",\"phantom\",\"slimer\",\"blackberry\",\"touchpad\",\"bada\",\"qupzilla\",\"chromium\",\"safari\",\"googlebot\",\"blink\",\"webkit\",\"gecko\",\"ios\",\"osVersion\",\"getWindowsVersion\",\"osversion\",\"osMajorVersion\",\"getVersionPrecision\",\"versions\",\"precision\",\"chunks\",\"delta\",\"chunk\",\"reverse\",\"isUnsupportedBrowser\",\"minVersions\",\"strictMode\",\"_bowser\",\"browserList\",\"browserItem\",\"check\",\"_SDPUtil__WEBPACK_IMPORTED_MODULE_0__\",\"arrayEquals\",\"array1\",\"array2\",\"equals\",\"mySDP\",\"otherSDP\",\"myMedias\",\"othersMedias\",\"newMedia\",\"othersMediaIdx\",\"myMedia\",\"othersMedia\",\"otherSsrcGroup\",\"mySsrcGroup\",\"modify\",\"sdpMediaSsrcs\",\"modified\",\"mediaSsrc\",\"nv\",\"cachedSetTimeout\",\"cachedClearTimeout\",\"process\",\"defaultSetTimout\",\"defaultClearTimeout\",\"runTimeout\",\"fun\",\"currentQueue\",\"queue\",\"draining\",\"queueIndex\",\"cleanUpNextTick\",\"drainQueue\",\"marker\",\"runClearTimeout\",\"Item\",\"noop\",\"nextTick\",\"title\",\"env\",\"argv\",\"prependListener\",\"prependOnceListener\",\"binding\",\"cwd\",\"chdir\",\"dir\",\"umask\",\"E2E_RTT_CHANGED\",\"LocalStatsCollector\",\"AudioContext\",\"webkitAudioContext\",\"intervalId\",\"intervalMilis\",\"suspend\",\"isLocalStatsSupported\",\"analyser\",\"createAnalyser\",\"smoothingTimeConstant\",\"fftSize\",\"createMediaStreamSource\",\"Uint8Array\",\"frequencyBinCount\",\"getByteTimeDomainData\",\"newLevel\",\"lastLevel\",\"diff\",\"samples\",\"maxVolume\",\"parseFloat\",\"toFixed\",\"timeDomainDataToAudioLevel\",\"currentExecutingScript\",\"prepend\",\"relativeURL\",\"loadCallback\",\"script\",\"referenceNode\",\"scriptEl\",\"scriptSrc\",\"baseScriptSrc\",\"lastIndexOf\",\"onload\",\"insertBefore\",\"ON\",\"OFF\",\"trackHandler2Prop\",\"track_mute\",\"track_unmute\",\"track_ended\",\"addMediaStreamInactiveHandler\",\"oninactive\",\"JitsiTrack\",\"streamInactiveHandler\",\"trackMediaType\",\"containers\",\"disposed\",\"_streamInactiveHandler\",\"_setStream\",\"_setHandler\",\"container\",\"_onTrackAttach\",\"_maybeFireTrackAttached\",\"_attachTTFMTracker\",\"_onTrackDetach\",\"active\",\"getStreamId\",\"trackId\",\"getTrackId\",\"nextValue\",\"MAX_SAFE_INTEGER\",\"SpeakerStats\",\"displayName\",\"isLocalStats\",\"_userId\",\"setDisplayName\",\"_isLocalStats\",\"setDominantSpeaker\",\"totalDominantSpeakerTime\",\"_dominantSpeakerStart\",\"_hasLeft\",\"newName\",\"isNowDominantSpeaker\",\"isDominantSpeaker\",\"timeElapsed\",\"total\",\"webpackPolyfill\",\"deprecate\",\"paths\",\"children\",\"IDENTITY_UPDATED\",\"_ref$effects\",\"_setEffectInProgress\",\"effect\",\"isEnabled\",\"_startStreamEffect\",\"_constraints\",\"_prevSetMuted\",\"_facingMode\",\"_trackEnded\",\"_hasSentData\",\"_testDataSent\",\"_realDeviceId\",\"_trackMutedTS\",\"_onDeviceListWillChange\",\"oldRealDeviceId\",\"_setRealDeviceIdFromDeviceList\",\"getTrack\",\"_onAudioOutputDeviceChanged\",\"_initNoDataFromSourceHandlers\",\"_isNoDataFromSourceEventsEnabled\",\"_fireNoDataFromSourceEvent\",\"track_type\",\"isReceivingData\",\"_get\",\"storedMSID\",\"getMSID\",\"_streamEffect\",\"_originalStream\",\"startEffect\",\"stopEffect\",\"_stopStreamEffect\",\"removeTrack\",\"_switchStreamEffect\",\"cont\",\"_queueSetMuted\",\"setMuted\",\"_setMuted\",\"logMuteInfo\",\"doesVideoMuteByStreamRemove\",\"enabled\",\"_removeStreamFromConferenceAsMute\",\"_unregisterHandlers\",\"stopStream\",\"streamOptions\",\"getDeviceId\",\"getCameraFacingMode\",\"assign\",\"streamsInfo\",\"streamInfo\",\"_addStreamToConferenceAsUnmute\",\"_sendMuteStatus\",\"_addLocalTrackAsUnmute\",\"successCallback\",\"_removeLocalTrackAsMute\",\"detach\",\"bytesSent\",\"getConnectionState\",\"trackSettings\",\"_stopStreamInProgress\",\"_switchCamera\",\"_effectEnabled\",\"some\",\"JibriSession\",\"_mode\",\"_setSessionID\",\"setStatus\",\"_sessionID\",\"_liveStreamViewURL\",\"_status\",\"appData\",\"broadcastId\",\"focusMucJid\",\"_createIQ\",\"recordingXMLUtils\",\"_setErrorFromIq\",\"app_data\",\"recording_mode\",\"streamid\",\"you_tube_broadcast_id\",\"errorIq\",\"setError\",\"VIDEO_PERMISSION_NAME\",\"JitsiMediaDevices\",\"_eventEmitter\",\"_grantedPermissions\",\"JitsiMediaDevicesEvents\",\"_logOutputDevice\",\"_handleGrantedPermissions\",\"_permissionsApiSupported\",\"permissions\",\"query\",\"deviceID\",\"supported\",\"promises\",\"results\",\"every\",\"permissionStatus\",\"_this$_eventEmitter\",\"consoleTransport\",\"globalTransports\",\"transportIdx\",\"globalOptions\",\"callerInfo\",\"disableCallerInfo\",\"fileLocation\",\"column\",\"getCallerInfo\",\"logPrefixes\",\"fullLogParts\",\"methods\",\"LOG\",\"SDPUtils\",\"localCName\",\"generateIdentifier\",\"splitLines\",\"blob\",\"splitSections\",\"getDescription\",\"sections\",\"getMediaSections\",\"matchPrefix\",\"parseCandidate\",\"relatedAddress\",\"relatedPort\",\"tcpType\",\"usernameFragment\",\"writeCandidate\",\"toUpperCase\",\"parseIceOptions\",\"parseRtpMap\",\"parsed\",\"clockRate\",\"numChannels\",\"writeRtpMap\",\"preferredPayloadType\",\"writeExtmap\",\"headerExtension\",\"preferredId\",\"writeFmtp\",\"parameters\",\"param\",\"parseRtcpFb\",\"parameter\",\"writeRtcpFb\",\"rtcpFeedback\",\"fb\",\"parseSsrcMedia\",\"sp\",\"colon\",\"getMid\",\"mediaSection\",\"algorithm\",\"getDtlsParameters\",\"role\",\"fingerprints\",\"writeDtlsParameters\",\"setupType\",\"fp\",\"getIceParameters\",\"writeIceParameters\",\"parseRtpParameters\",\"description\",\"codecs\",\"headerExtensions\",\"fecMechanisms\",\"rtcp\",\"rtpmapline\",\"fmtps\",\"writeRtpDescription\",\"maxptime\",\"extension\",\"parseRtpEncodingParameters\",\"encodingParameters\",\"hasRed\",\"hasUlpfec\",\"flows\",\"apt\",\"encParam\",\"codecPayloadType\",\"rtx\",\"fec\",\"maxBitrate\",\"parseRtcpParameters\",\"rtcpParameters\",\"remoteSsrc\",\"cname\",\"rsize\",\"reducedSize\",\"compound\",\"mux\",\"parseMsid\",\"spec\",\"planB\",\"generateSessionId\",\"writeSessionBoilerplate\",\"sessId\",\"sessVer\",\"writeMediaSection\",\"transceiver\",\"iceGatherer\",\"getLocalParameters\",\"dtlsTransport\",\"rtpSender\",\"rtpReceiver\",\"sendEncodingParameters\",\"getDirection\",\"getKind\",\"isRejected\",\"parseOLine\",\"sessionVersion\",\"netType\",\"addressType\",\"address\",\"grammar\",\"reg\",\"names\",\"format\",\"u\",\"z\",\"encoding\",\"rate\",\"sessionConfig\",\"raddr\",\"maxMessageSize\",\"RegExp\",\"dir2\",\"RecordingResult\",\"AUDIO_WEBM\",\"AUDIO_OGG\",\"TrackRecorder\",\"recorder\",\"startTime\",\"startRecorder\",\"trackRecorder\",\"stopRecorder\",\"determineCorrectFileType\",\"MediaRecorder\",\"isTypeSupported\",\"AudioRecorder\",\"jitsiConference\",\"recorders\",\"fileType\",\"isRecording\",\"instantiateTrackRecorder\",\"updateNames\",\"originalStream\",\"getOriginalStream\",\"createEmptyStream\",\"mimeType\",\"ondataavailable\",\"dataEvent\",\"recorderToRemove\",\"getDisplayName\",\"download\",\"Blob\",\"href\",\"click\",\"getRecordingResults\",\"getFileType\",\"getTokenAuthUrl\",\"urlPattern\",\"roleUpgrade\",\"JitsiConnection\",\"_service_statistics_AnalyticsEvents__WEBPACK_IMPORTED_MODULE_0__\",\"_JitsiConference__WEBPACK_IMPORTED_MODULE_1__\",\"_JitsiConnectionEvents__WEBPACK_IMPORTED_MODULE_2__\",\"_modules_statistics_statistics__WEBPACK_IMPORTED_MODULE_3__\",\"_modules_xmpp_xmpp__WEBPACK_IMPORTED_MODULE_4__\",\"appID\",\"errType\",\"ANALYTICS_CONNECTION_DISCONNECTED\",\"_this$xmpp\",\"getJid\",\"setToken\",\"initJitsiConference\",\"JitsiConference\",\"getConnectionTimes\",\"feature\",\"submit\",\"removeFeature\",\"eventManager\",\"JitsiConferenceEventManager\",\"_init\",\"componentsVersions\",\"ComponentsVersions\",\"jvbJingleSession\",\"lastDominantSpeaker\",\"dtmfManager\",\"somebodySupportsDTMF\",\"authEnabled\",\"startAudioMuted\",\"startVideoMuted\",\"startMutedPolicy\",\"isMutedByFocus\",\"mutedByFocusActor\",\"wasStopped\",\"connectionQuality\",\"ConnectionQuality\",\"avgRtpStatsReporter\",\"AvgRTPStatsReporter\",\"avgRtpStatsN\",\"_audioOutputProblemDetector\",\"AudioOutputProblemDetector\",\"isJvbConnectionInterrupted\",\"speakerStatsCollector\",\"SpeakerStatsCollector\",\"deferredStartP2PTask\",\"delay\",\"backToP2PDelay\",\"isP2PConnectionInterrupted\",\"p2pJingleSession\",\"videoSIPGWHandler\",\"VideoSIPGW\",\"recordingManager\",\"RecordingManager\",\"resourceCreator\",\"isAuthenticatedUser\",\"setupXMPPListeners\",\"_onIceConnectionInterrupted\",\"_onIceConnectionRestored\",\"_onIceConnectionEstablished\",\"_updateProperties\",\"rttMonitor\",\"RttMonitor\",\"e2eping\",\"E2ePing\",\"setupRTCListeners\",\"_peerConnStatusRtcMuteTimeout\",\"_peerConnStatusOutOfLastNTimeout\",\"enableDisplayNameInStats\",\"callStatsCustomScriptUrl\",\"enableStatsID\",\"setupChatRoomListeners\",\"setupStatisticsListeners\",\"enableTalkWhileMuted\",\"TalkMutedDetection\",\"setLastN\",\"channelLastN\",\"jvb121Status\",\"Jvb121EventGenerator\",\"p2pDominantSpeakerDetection\",\"P2PDominantSpeakerDetection\",\"userRegion\",\"setLocalParticipantProperty\",\"_maybeSetSITimeout\",\"authenticateAndUpgradeRole\",\"isJoined\",\"joined\",\"isP2PEnabled\",\"isP2PTestModeEnabled\",\"p2pTestMode\",\"leave\",\"onLocalTrackRemoved\",\"closeBridgeChannel\",\"_delayedIceFailed\",\"cancel\",\"removeXMPPListeners\",\"destroy\",\"onMemberLeft\",\"getConnection\",\"isAuthEnabled\",\"isLoggedIn\",\"authIdentity\",\"getAuthLogin\",\"isExternalAuthEnabled\",\"moderator\",\"getExternalAuthUrl\",\"urlForPopup\",\"getPopupLoginUrl\",\"getLoginUrl\",\"getLocalAudioTrack\",\"getLocalVideoTrack\",\"eventId\",\"addCommandListener\",\"command\",\"addPresenceListener\",\"removeCommandListener\",\"removePresenceListener\",\"sendTextMessage\",\"elementName\",\"getFromPresence\",\"sendPrivateTextMessage\",\"sendPrivateMessage\",\"sendCommand\",\"addToPresence\",\"sendCommandOnce\",\"removeCommand\",\"removeFromPresence\",\"setSubject\",\"subject\",\"isModerator\",\"getTranscriber\",\"transcriber\",\"Transcriber\",\"localAudioTracks\",\"getTranscriptionStatus\",\"transcriptionStatus\",\"localVideoTrack\",\"_fireAudioLevelChangeEvent\",\"activeTpc\",\"getActivePeerConnection\",\"_fireMuteChangeEvent\",\"actorParticipant\",\"muteParticipant\",\"myroomjid\",\"actorId\",\"_setConference\",\"removeLocalTrack\",\"muteHandler\",\"audioLevelHandler\",\"_doReplaceTrack\",\"_setupNewTrack\",\"replaceTrackPromises\",\"addLocalTrack\",\"setAudioMute\",\"setVideoMute\",\"addAsUnmutePromises\",\"addTrackAsUnmute\",\"removeAsMutePromises\",\"removeTrackAsMute\",\"getRole\",\"isHidden\",\"hiddenDomain\",\"lock\",\"lockRoom\",\"JitsiConferenceErrors\",\"unlock\",\"selectParticipant\",\"selectParticipants\",\"selectEndpoints\",\"pinParticipant\",\"pinEndpoint\",\"lastN\",\"isInteger\",\"RangeError\",\"isVideoActive\",\"setMediaTransferActive\",\"getParticipantCount\",\"countHidden\",\"kickParticipant\",\"kick\",\"_maybeClearSITimeout\",\"_sessionInitiateTimeout\",\"onMemberJoined\",\"nick\",\"statsID\",\"botType\",\"JitsiParticipant\",\"_role\",\"_botType\",\"_updateFeatures\",\"_maybeStartOrStopP2P\",\"getFeatures\",\"_supportsDTMF\",\"updateDTMFSupport\",\"setProperty\",\"_onMemberBotTypeChanged\",\"botParticipant\",\"onMemberKicked\",\"isSelfPresence\",\"kickedParticipantId\",\"kickedParticipant\",\"onLocalRoleChanged\",\"onUserRoleChanged\",\"onDisplayNameChanged\",\"_displayName\",\"_tracks\",\"onCallAccepted\",\"setAnswer\",\"onTransportInfo\",\"transportInfo\",\"addIceCandidates\",\"removedTrack\",\"_onIncomingCallP2P\",\"jingleSession\",\"rejectReason\",\"supportsP2P\",\"errorMsg\",\"_rejectIncomingCall\",\"_acceptP2PIncomingCall\",\"onIncomingCall\",\"isFocus\",\"_acceptJvbIncomingCall\",\"serverRegion\",\"_setBridgeChannel\",\"acceptOffer\",\"_suspendMediaTransferForJvbConnection\",\"bridgeChannelType\",\"webSocket\",\"first\",\"openBridgeChannel\",\"supportsDataChannels\",\"initializeBridgeChannel\",\"onCallEnded\",\"forceJvb121\",\"p2pFailed\",\"_stopP2PSession\",\"onSuspendDetected\",\"supportsDTMF\",\"isDTMFSupported\",\"sendTones\",\"tones\",\"duration\",\"peerConnection\",\"JitsiDTMFManager\",\"startRecording\",\"stopRecording\",\"isSIPCallingSupported\",\"hangup\",\"startTranscriber\",\"stopTranscriber\",\"getPhoneNumber\",\"getPhonePin\",\"setStartMutedPolicy\",\"policy\",\"getStartMutedPolicy\",\"isStartAudioMuted\",\"isStartVideoMuted\",\"getLogs\",\"getJingleLog\",\"metadata\",\"time\",\"getXmppLog\",\"removeLocalParticipantProperty\",\"getLocalParticipantProperty\",\"presMap\",\"nodes\",\"overallFeedback\",\"detailedFeedback\",\"remoteUserId\",\"getLocalSSRC\",\"getSSRC\",\"getUsageLabel\",\"_isFocus\",\"mucJid\",\"_fireIncompatibleVersionsEvent\",\"sendEndpointMessage\",\"sendChannelMessage\",\"broadcastEndpointMessage\",\"sendThroughVideobridge\",\"messageType\",\"messageToSend\",\"isConnectionInterrupted\",\"_onIceConnectionFailed\",\"IceFailedNotification\",\"sendIceFailedNotification\",\"remoteID\",\"getStatsID\",\"_addRemoteJVBTracks\",\"_addRemoteTracks\",\"_addRemoteP2PTracks\",\"logName\",\"p2pEstablishmentDuration\",\"jvbEstablishmentDuration\",\"forceJVB121Ratio\",\"establishmentDurationDiff\",\"_setP2PStatus\",\"_removeRemoteJVBTracks\",\"changed\",\"isEqual\",\"_defineProperty\",\"getProperty\",\"_maybeClearDeferredStartP2P\",\"_removeRemoteTracks\",\"_removeRemoteP2PTracks\",\"sessionNickname\",\"_resumeMediaTransferForJvbConnection\",\"_startP2PSession\",\"newP2PJingleSession\",\"invite\",\"userLeftEvent\",\"peers\",\"peerCount\",\"hasBotPeer\",\"shouldBeInP2P\",\"myId\",\"peersId\",\"wasP2PEstablished\",\"getP2PConnectionState\",\"startP2PSession\",\"peerJid\",\"stopP2PSession\",\"getSpeakerStats\",\"getStats\",\"setReceiverVideoConstraint\",\"createVideoSIPGWSession\",\"sipAddress\",\"VideoSIPGWConstants\",\"LARGE_ARRAY_SIZE\",\"HASH_UNDEFINED\",\"COMPARE_PARTIAL_FLAG\",\"COMPARE_UNORDERED_FLAG\",\"argsTag\",\"arrayTag\",\"asyncTag\",\"boolTag\",\"dateTag\",\"errorTag\",\"funcTag\",\"genTag\",\"mapTag\",\"numberTag\",\"nullTag\",\"objectTag\",\"proxyTag\",\"regexpTag\",\"setTag\",\"stringTag\",\"symbolTag\",\"undefinedTag\",\"arrayBufferTag\",\"dataViewTag\",\"reIsHostCtor\",\"reIsUint\",\"typedArrayTags\",\"freeGlobal\",\"global\",\"freeSelf\",\"freeExports\",\"freeModule\",\"moduleExports\",\"freeProcess\",\"nodeUtil\",\"nodeIsTypedArray\",\"isTypedArray\",\"arraySome\",\"predicate\",\"mapToArray\",\"setToArray\",\"uid\",\"arrayProto\",\"funcProto\",\"objectProto\",\"coreJsData\",\"funcToString\",\"maskSrcKey\",\"exec\",\"IE_PROTO\",\"nativeObjectToString\",\"reIsNative\",\"Buffer\",\"propertyIsEnumerable\",\"symToStringTag\",\"nativeGetSymbols\",\"getOwnPropertySymbols\",\"nativeIsBuffer\",\"isBuffer\",\"nativeKeys\",\"DataView\",\"getNative\",\"WeakMap\",\"nativeCreate\",\"dataViewCtorString\",\"toSource\",\"mapCtorString\",\"promiseCtorString\",\"setCtorString\",\"weakMapCtorString\",\"symbolProto\",\"symbolValueOf\",\"valueOf\",\"Hash\",\"entries\",\"entry\",\"ListCache\",\"MapCache\",\"SetCache\",\"__data__\",\"Stack\",\"arrayLikeKeys\",\"inherited\",\"isArr\",\"isArg\",\"isArguments\",\"isBuff\",\"isType\",\"skipIndexes\",\"iteratee\",\"baseTimes\",\"isIndex\",\"assocIndexOf\",\"eq\",\"baseGetTag\",\"isOwn\",\"unmasked\",\"getRawTag\",\"objectToString\",\"baseIsArguments\",\"isObjectLike\",\"baseIsEqual\",\"other\",\"bitmask\",\"customizer\",\"equalFunc\",\"objIsArr\",\"othIsArr\",\"objTag\",\"getTag\",\"othTag\",\"objIsObj\",\"othIsObj\",\"isSameTag\",\"equalArrays\",\"byteLength\",\"byteOffset\",\"buffer\",\"convert\",\"isPartial\",\"stacked\",\"equalByTag\",\"objIsWrapped\",\"othIsWrapped\",\"objUnwrapped\",\"othUnwrapped\",\"objProps\",\"getAllKeys\",\"objLength\",\"othLength\",\"skipCtor\",\"objValue\",\"othValue\",\"compared\",\"objCtor\",\"othCtor\",\"equalObjects\",\"baseIsEqualDeep\",\"baseIsNative\",\"baseKeys\",\"Ctor\",\"arrLength\",\"seen\",\"arrValue\",\"othIndex\",\"keysFunc\",\"symbolsFunc\",\"offset\",\"arrayPush\",\"baseGetAllKeys\",\"getSymbols\",\"getMapData\",\"getValue\",\"pairs\",\"resIndex\",\"arrayFilter\",\"symbol\",\"ArrayBuffer\",\"ctorString\",\"isLength\",\"baseUnary\",\"strophe_js__WEBPACK_IMPORTED_MODULE_0__\",\"_service_statistics_AnalyticsEvents__WEBPACK_IMPORTED_MODULE_1__\",\"_service_authentication_AuthenticationEvents__WEBPACK_IMPORTED_MODULE_2__\",\"_service_authentication_AuthenticationEvents__WEBPACK_IMPORTED_MODULE_2___default\",\"_modules_util_EventEmitterForwarder__WEBPACK_IMPORTED_MODULE_3__\",\"_modules_util_EventEmitterForwarder__WEBPACK_IMPORTED_MODULE_3___default\",\"jitsi_meet_logger__WEBPACK_IMPORTED_MODULE_4__\",\"_JitsiConferenceErrors__WEBPACK_IMPORTED_MODULE_5__\",\"_JitsiConferenceEvents__WEBPACK_IMPORTED_MODULE_6__\",\"_service_RTC_MediaType__WEBPACK_IMPORTED_MODULE_7__\",\"_service_RTC_RTCEvents__WEBPACK_IMPORTED_MODULE_8__\",\"_service_RTC_RTCEvents__WEBPACK_IMPORTED_MODULE_8___default\",\"_service_RTC_VideoType__WEBPACK_IMPORTED_MODULE_9__\",\"_service_RTC_VideoType__WEBPACK_IMPORTED_MODULE_9___default\",\"_modules_statistics_statistics__WEBPACK_IMPORTED_MODULE_10__\",\"_service_xmpp_XMPPEvents__WEBPACK_IMPORTED_MODULE_11__\",\"_service_xmpp_XMPPEvents__WEBPACK_IMPORTED_MODULE_11___default\",\"xmppListeners\",\"chatRoom\",\"chatRoomForwarder\",\"EventEmitterForwarder\",\"actor\",\"forward\",\"setParticipantPropertyListener\",\"recorderSession\",\"logObject\",\"getError\",\"getStatus\",\"AuthenticationEvents\",\"txt\",\"myJid\",\"ts\",\"updated\",\"featuresChangedListener\",\"_addConferenceXMPPListener\",\"audioMuted\",\"videoMuted\",\"ignoreStartMuted\",\"_onByteSentStatsReceived\",\"dest\",\"srcEvent\",\"AnalyticsAdapter\",\"analyticsHandlers\",\"cache\",\"permanentProperties\",\"conferenceName\",\"callstats_name\",\"user_agent\",\"browser_name\",\"setAnalyticsHandlers\",\"_setUserProperties\",\"_sendEvent\",\"setUserProperties\",\"conference_name\",\"_verifyRequiredFields\",\"objectType\",\"containerType\",\"objectId\",\"_maybeCacheEvent\",\"isSafariWithWebrtc\",\"isSafari\",\"isVersionLessThan\",\"ondevicechange\",\"usesUnifiedPlan\",\"usesPlanB\",\"RTCRtpTransceiver\",\"_getChromiumBasedVersion\",\"WINDOW\",\"JS_MD5_NO_WINDOW\",\"WEB_WORKER\",\"NODE_JS\",\"JS_MD5_NO_NODE_JS\",\"COMMON_JS\",\"JS_MD5_NO_COMMON_JS\",\"AMD\",\"ARRAY_BUFFER\",\"JS_MD5_NO_ARRAY_BUFFER\",\"HEX_CHARS\",\"EXTRA\",\"SHIFT\",\"OUTPUT_TYPES\",\"BASE64_ENCODE_CHAR\",\"blocks\",\"buffer8\",\"Uint32Array\",\"JS_MD5_NO_ARRAY_BUFFER_IS_VIEW\",\"isView\",\"createOutputMethod\",\"outputType\",\"Md5\",\"update\",\"createMethod\",\"method\",\"nodeWrap\",\"eval\",\"nodeMethod\",\"createHash\",\"digest\",\"sharedMemory\",\"h0\",\"h1\",\"h2\",\"h3\",\"bytes\",\"hBytes\",\"finalized\",\"hashed\",\"notString\",\"lastByteIndex\",\"finalize\",\"bc\",\"da\",\"hex\",\"arrayBuffer\",\"base64\",\"v1\",\"v2\",\"v3\",\"base64Str\",\"md5\",\"KEYS_BY_BROWSER_TYPE\",\"calculatePacketLoss\",\"lostPackets\",\"totalPackets\",\"round\",\"SsrcStats\",\"loss\",\"bitrate\",\"upload\",\"framerate\",\"ConferenceStats\",\"packetLoss\",\"StatsCollector\",\"statsInterval\",\"_browserType\",\"_usesPromiseGetStats\",\"_getStatValue\",\"_defineNewGetStatValueMethod\",\"_defineGetStatValueMethod\",\"baselineAudioLevelsReport\",\"currentAudioLevelsReport\",\"currentStatsReport\",\"previousStatsReport\",\"audioLevelReportHistory\",\"audioLevelsIntervalId\",\"conferenceStats\",\"audioLevelsIntervalMilis\",\"statsIntervalId\",\"statsIntervalMilis\",\"ssrc2stats\",\"browsers\",\"packetsReceived\",\"packetsLost\",\"packetsSent\",\"bytesReceived\",\"framerateMean\",\"receiveBandwidth\",\"sendBandwidth\",\"remoteAddress\",\"transportType\",\"localAddress\",\"activeConnection\",\"googFrameHeightReceived\",\"googFrameWidthReceived\",\"googFrameHeightSent\",\"googFrameWidthSent\",\"googFrameRateReceived\",\"googFrameRateSent\",\"audioInputLevel\",\"audioOutputLevel\",\"currentRoundTripTime\",\"remoteCandidateType\",\"localCandidateType\",\"setLoss\",\"setResolution\",\"addBitrate\",\"resetBitrate\",\"setFramerate\",\"startAudioLevelStats\",\"processNewAudioLevelReport\",\"processAudioLevelReport\",\"supportsRtpStatistics\",\"processNewStatsReport\",\"processStatsReport\",\"itemStatByKey\",\"stat\",\"pair\",\"keyFromName\",\"getNonNegativeStat\",\"getStatValue\",\"byteSentStats\",\"localip\",\"conferenceStatsTransport\",\"selected\",\"local\",\"localCandidateId\",\"remote\",\"remoteCandidateId\",\"ipAddress\",\"portNumber\",\"candidateType\",\"msType\",\"before\",\"ssrcIds\",\"isRemote\",\"remoteSource\",\"ssrcStats\",\"isDownloadStream\",\"packetsNow\",\"packetsBefore\",\"packetsDiff\",\"packetsLostNow\",\"packetsLostBefore\",\"packetsLostDiff\",\"packetsTotal\",\"bytesReceivedNow\",\"bytesReceivedBefore\",\"nowBytesTransmitted\",\"timeMs\",\"timestamp\",\"bitrateReceivedKbps\",\"bitrateSentKbps\",\"_processAndEmitReport\",\"bitrateDownload\",\"bitrateUpload\",\"resolutions\",\"framerates\",\"audioBitrateDownload\",\"audioBitrateUpload\",\"videoBitrateDownload\",\"videoBitrateUpload\",\"userResolutions\",\"userFramerates\",\"localAvgAudioLevels\",\"avgAudioLevels\",\"_this3$audioLevelRepo\",\"avgAudioLevel\",\"reduce\",\"sum\",\"currentValue\",\"getNonNegativeValue\",\"_calculateBitrate\",\"fieldName\",\"bytesNow\",\"bytesBefore\",\"bytesProcessed\",\"bitrateKbps\",\"nominated\",\"availableIncomingBitrate\",\"availableOutgoingBitrate\",\"remoteUsedCandidate\",\"localUsedCandidate\",\"remoteIpAddress\",\"remotePort\",\"localIpAddress\",\"localPort\",\"localIp\",\"networkType\",\"frameHeight\",\"frameWidth\",\"framesPerSecond\",\"framesSent\",\"trackIdentifier\",\"getSsrcByTrackId\",\"hidden\",\"_jid\",\"_id\",\"_conference\",\"_hidden\",\"_statsID\",\"_connectionStatus\",\"_properties\",\"_identity\",\"jitsiTrack\",\"isWebRTCTrackMuted\",\"oldValue\",\"_isMediaTypeMuted\",\"_JitsiConnectionEvents__WEBPACK_IMPORTED_MODULE_0__\",\"_modules_xmpp_xmpp__WEBPACK_IMPORTED_MODULE_1__\",\"rejectPromise\",\"onLoginSuccessful\",\"roomPassword\",\"canceled\",\"authenticationError\",\"connectionError\",\"MucConnectionPlugin\",\"rooms\",\"onPresence\",\"onPresenceUnavailable\",\"onPresenceError\",\"onMessage\",\"onMute\",\"ChatRoom\",\"createNonAnonymousRoom\",\"packet2JSON\",\"_arr\",\"_arr2\",\"json2packet\",\"packet\",\"filterNodeFromPresenceJSON\",\"members\",\"presHandlers\",\"noBridgeAvailable\",\"Moderator\",\"initPresenceMap\",\"lastPresences\",\"phoneNumber\",\"phonePin\",\"participantPropertyListener\",\"locked\",\"JitsiTranscriptionStatus\",\"xns\",\"addVideoInfoToPresence\",\"disableFocus\",\"allocateConferenceFocus\",\"fromJoin\",\"getInfo\",\"getForm\",\"form\",\"formSubmit\",\"var\",\"member\",\"statusEl\",\"hasStatusUpdate\",\"hasVersionUpdate\",\"xElement\",\"mucUserItem\",\"affiliation\",\"getFocusUserJid\",\"isHiddenDomain\",\"fromHiddenDomain\",\"xEl\",\"extractIdentityInformation\",\"userInfo\",\"_arr3\",\"_i3\",\"newRole\",\"_initFocus\",\"memberOfThis\",\"displayJids\",\"att\",\"phone\",\"pin\",\"processNode\",\"tagHandlers\",\"nickname\",\"skipEvents\",\"onMucMemberLeft\",\"reasonSelect\",\"doLeave\",\"isKick\",\"membersKeys\",\"actorNick\",\"actorSelect\",\"onParticipantLeft\",\"subjectText\",\"stamp\",\"dateParts\",\"discoRoomInfo\",\"kickIQ\",\"onError\",\"onNotSupported\",\"formsubmit\",\"handlerIdx\",\"sendVideoInfoPresence\",\"sendAudioInfoPresence\",\"addAudioInfoToPresence\",\"mutedNode\",\"videoTypeNode\",\"isSipGatewayEnabled\",\"iqToFocus\",\"onMucLeft\",\"doReject\",\"_browser__WEBPACK_IMPORTED_MODULE_1__\",\"_settings_Settings__WEBPACK_IMPORTED_MODULE_2__\",\"createExpBackoffTimer\",\"step\",\"count\",\"origin\",\"xmppService\",\"getNextTimeout\",\"getNextErrorTimeout\",\"externalAuthEnabled\",\"sipGatewayEnabled\",\"call_control\",\"attachEvent\",\"setFocusUserJid\",\"focusJid\",\"focusUserJid\",\"getFocusComponent\",\"focusComponent\",\"focus\",\"createConferenceIq\",\"openSctp\",\"machineUID\",\"machine-uid\",\"session-id\",\"enforcedBridge\",\"enableTcc\",\"enableRemb\",\"minParticipants\",\"audioPacketDelay\",\"startBitrate\",\"minBitrate\",\"octo\",\"probability\",\"stereo\",\"useRoomAsSharedDocumentName\",\"parseSessionId\",\"resultIq\",\"parseConfigOptions\",\"authenticationEnabled\",\"_allocateConferenceFocusSuccess\",\"_allocateConferenceFocusError\",\"invalidSession\",\"reservationErr\",\"errorCode\",\"errorTextNode\",\"waitMs\",\"retrySec\",\"urlCallback\",\"failureCallback\",\"_getLoginUrl\",\"popup\",\"urlCb\",\"decodeURIComponent\",\"logout\",\"logoutUrl\",\"JingleConnectionPlugin\",\"jvbIceConfig\",\"p2pIceConfig\",\"offerToReceiveAudio\",\"offerToReceiveVideo\",\"ConnectionPlugin\",\"onJingle\",\"fromJid\",\"ack\",\"sess\",\"startMuted\",\"modifyContents\",\"replaceTransport\",\"successTime\",\"sendTransportReject\",\"addRemoteStream\",\"removeRemoteStream\",\"me\",\"onTerminated\",\"iceservers\",\"dict\",\"credential\",\"updateLog\",\"doInitialize\",\"ssrcOwners\",\"SignalingLayer\",\"oldChatRoom\",\"_audioMuteHandler\",\"_videoMuteHandler\",\"_videoTypeHandler\",\"SignalingEvents\",\"getMediaPresenceInfo\",\"_queue\",\"_processQueueTasks\",\"_stopped\",\"kill\",\"task\",\"setImmediate\",\"previous_async\",\"only_once\",\"fn\",\"called\",\"noConflict\",\"_toString\",\"_isArray\",\"_each\",\"_map\",\"_keys\",\"completed\",\"eachSeries\",\"iterate\",\"forEachSeries\",\"eachLimit\",\"limit\",\"_eachLimit\",\"forEachLimit\",\"started\",\"running\",\"replenish\",\"doParallel\",\"doSeries\",\"_asyncMap\",\"eachfn\",\"mapSeries\",\"mapLimit\",\"_mapLimit\",\"doParallelLimit\",\"memo\",\"inject\",\"foldl\",\"reduceRight\",\"reversed\",\"foldr\",\"_filter\",\"filterSeries\",\"select\",\"selectSeries\",\"_reject\",\"rejectSeries\",\"main_callback\",\"detectSeries\",\"any\",\"sortBy\",\"criteria\",\"left\",\"right\",\"auto\",\"tasks\",\"remainingTasks\",\"taskComplete\",\"theCallback\",\"taskCallback\",\"safeResults\",\"rkey\",\"requires\",\"ready\",\"retry\",\"times\",\"attempts\",\"wrappedTask\",\"wrappedCallback\",\"wrappedResults\",\"retryAttempt\",\"finalAttempt\",\"seriesCallback\",\"series\",\"waterfall\",\"wrapIterator\",\"_parallel\",\"parallel\",\"parallelLimit\",\"makeCallback\",\"cb\",\"concatSeries\",\"whilst\",\"doWhilst\",\"until\",\"doUntil\",\"worker\",\"concurrency\",\"_insert\",\"drain\",\"saturated\",\"workers\",\"empty\",\"idle\",\"priorityQueue\",\"_compareTasks\",\"sequence\",\"compare\",\"beg\",\"end\",\"_binarySearch\",\"cargo\",\"working\",\"drained\",\"_console_fn\",\"memoize\",\"hasher\",\"queues\",\"memoized\",\"unmemoized\",\"unmemoize\",\"counter\",\"timesSeries\",\"seq\",\"fns\",\"newargs\",\"nextargs\",\"compose\",\"_applyEach\",\"go\",\"applyEach\",\"applyEachSeries\",\"forever\",\"strophe_js__WEBPACK_IMPORTED_MODULE_1__\",\"_util_GlobalOnErrorHandler__WEBPACK_IMPORTED_MODULE_2__\",\"_util_GlobalOnErrorHandler__WEBPACK_IMPORTED_MODULE_2___default\",\"resetLastErrorStatusRegExpr\",\"lastErrorStatusRegExpr\",\"errStatusCapture\",\"PING_TIMESTAMPS_TO_KEEP\",\"PingConnectionPlugin\",\"failedPings\",\"pingExecIntervals\",\"_addPingExecutionTimestamp\",\"pingIntervals\",\"maxInterval\",\"previousTS\",\"currentInterval\",\"RayoConnectionPlugin\",\"onRayo\",\"roomPass\",\"callResource\",\"StropheLogger\",\"logIncoming\",\"logOutgoing\",\"LastRequestTracker\",\"_nextValidRid\",\"_lastSuccess\",\"stropheConnection\",\"IDENTITY_PROPERTIES\",\"IDENTITY_PROPERTIES_FOR_COMPARE\",\"compareIdentities\",\"generateSha\",\"sortedIdentities\",\"accumulatedValue\",\"sortedFeatures\",\"disco\",\"versionToCapabilities\",\"jidToVersion\",\"_addChatRoom\",\"_removeChatRoom\",\"CAPS\",\"_handleCaps\",\"_onMucMemberLeft\",\"_removeJidToVersionEntry\",\"_generateVersion\",\"_getDiscoInfo\",\"sha\",\"receivedNode\",\"category\",\"_fixChatRoomPresenceMap\",\"_identities\",\"_features\",\"_notifyVersionChanged\",\"oldVersion\",\"dtmfSender\",\"createDTMFSender\",\"insertDTMF\",\"_audioLevel\",\"myUserID\",\"_areRetriesEnabled\",\"_closedFromClient\",\"datachannel\",\"createDataChannel\",\"_handleChannel\",\"_wsUrl\",\"_initWebSocket\",\"ws\",\"timeoutS\",\"_retryTimeout\",\"reload\",\"isOpen\",\"closeEvent\",\"_stopConnectionRetries\",\"_startConnectionRetries\",\"OPEN\",\"colibriClass\",\"msgPayload\",\"jsonObject\",\"pinnedEndpoint\",\"endpointIds\",\"selectedEndpoints\",\"maxFrameHeightPixels\",\"channel\",\"dominantSpeakerEndpoint\",\"endpoint\",\"_retryWebSocketConnection\",\"SIMULCAST_LAYERS\",\"SIM_LAYER_RIDS\",\"audioTransferActive\",\"_addedStreams\",\"localSSRCs\",\"localUfrag\",\"remoteUfrag\",\"_peerVideoTypeChanged\",\"_peerMutedChanged\",\"statsinterval\",\"Interop\",\"interop\",\"Simulcast\",\"simulcast\",\"numOfLayers\",\"explodeRemoteSimulcast\",\"sdpConsistency\",\"SdpConsistency\",\"localSdpMunger\",\"LocalSdpMunger\",\"rtxModifier\",\"RtxModifier\",\"what\",\"onaddstream\",\"_remoteStreamAdded\",\"onremovestream\",\"_remoteStreamRemoved\",\"ondatachannel\",\"_processStat\",\"statValue\",\"endTime\",\"dumpSDP\",\"_getDesiredMediaDirection\",\"mediaTransferActive\",\"hasAnyTracksOfType\",\"isSimulcastOn\",\"supportsSimulcast\",\"videoTrack\",\"_setVideoType\",\"setMute\",\"endpoints\",\"endpointTrackMap\",\"mediaTrack\",\"findTrackById\",\"onaddtrack\",\"_remoteTrackAdded\",\"onremovetrack\",\"_remoteTrackRemoved\",\"streamAudioTracks\",\"streamVideoTracks\",\"mediaLines\",\"mls\",\"trackSsrc\",\"ownerEndpointId\",\"getSSRCOwner\",\"peerMediaInfo\",\"getPeerMediaInfo\",\"_createRemoteTrack\",\"remoteTracksMap\",\"existingTrack\",\"JitsiRemoteTrack\",\"isUserStream\",\"_removeRemoteTrackById\",\"_getRemoteTrackById\",\"removedAudioTrack\",\"removedVideoTrack\",\"_removeRemoteTrack\",\"toBeRemoved\",\"normalizePlanB\",\"firstSsrcs\",\"newSsrcLines\",\"isVersionGreaterThan\",\"filteredLines\",\"ssrcId\",\"cnameLine\",\"replaceDefaultUnifiedPlanMsid\",\"resStr\",\"_getSSRC\",\"_injectSsrcGroupForUnifiedSimulcast\",\"simulcast_03\",\"getters\",\"toPlanB\",\"maybeAddMutedLocalVideoTracksToSDP\",\"transformer\",\"audioMedia\",\"selectMedia\",\"videoMedia\",\"toRawSDP\",\"enforceSendRecv\",\"transformStreamIdentifiers\",\"webrtcStream\",\"_addStream\",\"generateNewStreamSSRCInfo\",\"setPrimarySsrc\",\"setSsrcCache\",\"fidGroups\",\"rtxSsrcMapping\",\"rtxSsrc\",\"_assertTrackBelongs\",\"webRtcStream\",\"addStream\",\"_removeStream\",\"supportsRtpSender\",\"_handleSenderRemoveStream\",\"removeStream\",\"doesBelong\",\"isMediaStreamInPc\",\"findSenderByStream\",\"getSenders\",\"sender\",\"extractPrimarySSRC\",\"opts\",\"_ensureSimulcastGroupIsLast\",\"localSdp\",\"sdpStr\",\"videoStartIndex\",\"simStartIndex\",\"otherStartIndex\",\"simEndIndex\",\"simStr\",\"otherEndIndex\",\"sdpHead\",\"simStrTrimmed\",\"sdpTail\",\"_adjustLocalMediaDirection\",\"modifiedDirection\",\"desiredAudioDirection\",\"desiredVideoDirection\",\"parsedSdp\",\"toUnifiedPlan\",\"_insertUnifiedPlanSimulcastReceive\",\"mungeRemoteDescription\",\"stripRtx\",\"_injectH264IfNotPresent\",\"dummyPayloadType\",\"payloadsArray\",\"clearVideoSsrcCache\",\"_iteratorNormalCompletion15\",\"_didIteratorError15\",\"_iteratorError15\",\"_step15\",\"_iterator15\",\"peerTracks\",\"_iteratorNormalCompletion16\",\"_didIteratorError16\",\"_iteratorError16\",\"_step16\",\"_iterator16\",\"_removePeerConnection\",\"simParams\",\"encodings\",\"scaleResolutionDownBy\",\"setParameters\",\"_createOfferOrAnswer\",\"isOffer\",\"handleSuccess\",\"resultSdp\",\"resolveFn\",\"rejectFn\",\"hasPrimarySsrcCached\",\"makeVideoPrimarySsrcsConsistent\",\"mungeLocalDescription\",\"modifyRtxSsrcs\",\"groupsMap\",\"_iteratorNormalCompletion11\",\"_didIteratorError11\",\"_iteratorError11\",\"_step11\",\"_iterator11\",\"_iteratorNormalCompletion12\",\"_didIteratorError12\",\"_iteratorError12\",\"_step12\",\"_iterator12\",\"groupSSRCs\",\"_iteratorNormalCompletion13\",\"_didIteratorError13\",\"_iteratorError13\",\"_step13\",\"_iterator13\",\"_iteratorNormalCompletion14\",\"_didIteratorError14\",\"_iteratorError14\",\"_step14\",\"_iterator14\",\"extractSSRCMap\",\"_processLocalSSRCsMap\",\"handleFailure\",\"_iteratorNormalCompletion17\",\"_didIteratorError17\",\"_iteratorError17\",\"_step17\",\"_iterator17\",\"trackMSID\",\"newSSRCNum\",\"oldSSRCNum\",\"currNumSsrcs\",\"videoSender\",\"getParameters\",\"simIndex\",\"handleLayerSuspension\",\"ttfmTrackerAudioAttached\",\"ttfmTrackerVideoAttached\",\"containerEvents\",\"hasBeenMuted\",\"_bindTrackHandlers\",\"_containerHandlers\",\"_containerEventHandler\",\"_onTrackMute\",\"_onTrackUnmute\",\"gumStart\",\"gumEnd\",\"gumDuration\",\"ttfm\",\"_playCallback\",\"_this$track\",\"_getStatus\",\"localVideos\",\"isInPeerConnection\",\"shouldFakeSdp\",\"requiredSSRCs\",\"ssrcCache\",\"cachedPrimarySsrc\",\"primaryCname\",\"removeSSRC\",\"addSSRCAttribute\",\"addSSRCGroup\",\"modifyRtxSsrcs2\",\"pcId\",\"streamAndTrackIDs\",\"_addMutedLocalVideoTracksToSDP\",\"sessionDesc\",\"audioMLine\",\"_transformMediaIdentifiers\",\"updateAssociatedRtxStream\",\"primarySsrcInfo\",\"primarySsrcMsid\",\"primarySsrcCname\",\"previousRtxSSRC\",\"getRtxSSRC\",\"dumpSSRCGroups\",\"removeGroupsWithSSRC\",\"correspondingRtxSsrcs\",\"ssrcMapping\",\"sdpTransformer\",\"getSSRCCount\",\"primaryVideoSsrcs\",\"getPrimaryVideoSSRCs\",\"getSSRCAttrValue\",\"correspondingRtxSsrc\",\"previousAssociatedRtxStream\",\"containsAnySSRCGroups\",\"findGroups\",\"removeGroupsBySemantics\",\"injectRecvOnly\",\"newPrimarySsrc\",\"getPrimaryVideoSsrc\",\"replaceSSRC\",\"_eventFired\",\"_trackMuteChanged\",\"_trackAdded\",\"_isLocalAudioTrack\",\"STATS_MESSAGE_TYPE\",\"kSimulcastFormats\",\"layers\",\"target\",\"videoBitrateCap\",\"getTarget\",\"millisSinceStart\",\"simulcastFormat\",\"targetHeight\",\"pixels\",\"rampUp\",\"_localStats\",\"jvbRTT\",\"_lastConnectionQualityUpdate\",\"_remoteStats\",\"_timeIceConnected\",\"_timeVideoUnmuted\",\"_timeLastBwCapRemoved\",\"ConferenceEvents\",\"_updateLocalConnectionQuality\",\"ConnectionQualityEvents\",\"_broadcastLocalStats\",\"_updateRemoteStats\",\"_updateLocalStats\",\"_maybeUpdateUnmuteTime\",\"bridgeCount\",\"resolutionName\",\"quality\",\"activeTPC\",\"newVideoBitrateCap\",\"bandwidthLimiter\",\"getBandwidthLimit\",\"prevConnectionQuality\",\"diffSeconds\",\"updateLocalConnectionQuality\",\"_calculateConnectionQuality\",\"_canceled\",\"_iceFailedTimeout\",\"ParticipantWrapper\",\"requests\",\"lastRequestId\",\"clearIntervals\",\"sendRequest\",\"handleResponse\",\"maybeSendAnalytics\",\"isDataChannelOpen\",\"pingInterval\",\"pingIntervalMs\",\"analyticsInterval\",\"analyticsIntervalMs\",\"requestId\",\"requestMessage\",\"timeSent\",\"E2ePingEvents\",\"Infinity\",\"participantJoined\",\"participantLeft\",\"messageReceived\",\"dataChannelOpened\",\"participantWrapper\",\"handleRequest\",\"_jvb121\",\"evaluateStatus\",\"oldStatus\",\"_sessions\",\"_chatRoom\",\"_handleFocusPresence\",\"_handleJibriPresence\",\"getSession\",\"getID\",\"_addSession\",\"_emitSessionUpdate\",\"_createSession\",\"_recordingXMLUtils$ge\",\"setLiveStreamViewURL\",\"offerOptions\",\"PCMonitor\",\"getStatsIntervalMs\",\"getStatsInterval\",\"rtts\",\"stopped\",\"startStatsInterval\",\"handleCandidateRtt\",\"rttTotal\",\"candidateKey\",\"responsesReceived\",\"requestsSent\",\"rttTotalDiff\",\"responsesReceivedDiff\",\"requestsResponsesDiff\",\"supportsLocalCandidateRttStatistics\",\"pcMonitors\",\"startPCMonitors\",\"initialDelay\",\"AverageStatReport\",\"calculate\",\"ConnectionAvgStats\",\"_n\",\"_sampleIdx\",\"_avgRTT\",\"_avgRemoteRTTMap\",\"_avgRtpStatsReporter\",\"_avgEnd2EndRTT\",\"_onConnectionStats\",\"_calculateAvgStats\",\"_onRemoteStatsUpdated\",\"_processRemoteStats\",\"supportsRTTStatistics\",\"addNext\",\"batchReport\",\"conference_size\",\"local_candidate_type\",\"remote_candidate_type\",\"transport_type\",\"appendReport\",\"jvbEnd2EndRTT\",\"jvbStatsMonitor\",\"avgRemoteRTT\",\"_calculateAvgRemoteRTT\",\"avgLocalRTT\",\"_resetAvgStats\",\"remoteAvg\",\"avg\",\"validData\",\"rttAvg\",\"_avgAudioBitrateUp\",\"_avgAudioBitrateDown\",\"_avgVideoBitrateUp\",\"_avgVideoBitrateDown\",\"_avgBandwidthUp\",\"_avgBandwidthDown\",\"_avgPacketLossTotal\",\"_avgPacketLossUp\",\"_avgPacketLossDown\",\"_avgRemoteFPS\",\"_avgRemoteScreenFPS\",\"_avgLocalFPS\",\"_avgLocalScreenFPS\",\"_avgRemoteCameraPixels\",\"_avgRemoteScreenPixels\",\"_avgLocalCameraPixels\",\"_avgLocalScreenPixels\",\"_avgCQ\",\"_onLocalStatsUpdated\",\"_onP2PStatusChanged\",\"p2pStatsMonitor\",\"_onJvb121StatusChanged\",\"_resetAvgJvbStats\",\"confSize\",\"supportsBandwidthStatistics\",\"_calculateAvgVideoFps\",\"_calculateAvgVideoPixels\",\"peerResolutions\",\"peerPixelsSum\",\"myID\",\"peerID\",\"videosResolution\",\"peerAvgPixels\",\"_calculatePeerAvgVideoPixels\",\"videos\",\"peerSsrcCount\",\"peerSsrcPixels\",\"peerFpsSum\",\"videosFps\",\"peerAvgFPS\",\"_calculatePeerAvgVideoFps\",\"peerSsrcFps\",\"_localAudioLevelCache\",\"_reportedParticipants\",\"_audioProblemCandidates\",\"_numberOfRemoteAudioLevelsReceived\",\"_onLocalAudioLevelsReport\",\"_onRemoteAudioLevelReceived\",\"_clearUserData\",\"numberOfReports\",\"isAudioMuted\",\"_this$_audioProblemCa\",\"localAudioLevelsString\",\"dominantSpeakerId\",\"_onDominantSpeaker\",\"_onUserJoin\",\"_onUserLeave\",\"_onDisplayNameChange\",\"_updateStats\",\"oldDominantSpeaker\",\"newDominantSpeaker\",\"savedUser\",\"markAsHasLeft\",\"newStats\",\"speakerStatsToUpdate\",\"SphinxService\",\"BEFORE_STATE\",\"audioRecorder\",\"transcriptionService\",\"transcription\",\"lineLength\",\"hasPopulatedArrays\",\"twoDimensionalArray\",\"callBack\",\"wordArray\",\"getUTCMilliseconds\",\"wordObject\",\"begin\",\"word\",\"maybeMerge\",\"recordingResult\",\"merge\",\"arrays\",\"potentialWords\",\"pushWordToSortedArray\",\"lowestWordArray\",\"wordToAdd\",\"updateTranscription\",\"foundSmaller\",\"wordToCompare\",\"getTranscription\",\"getState\",\"_statistics_statistics__WEBPACK_IMPORTED_MODULE_0__\",\"processVersions\",\"mucResource\",\"getComponentVersion\",\"componentName\",\"sessionStateChangeListener\",\"sessionStateChanged\",\"handleJibriSIPState\",\"Constants\",\"sipaddress\",\"setState\",\"failure_reason\",\"JitsiVideoSIPGWSession\",\"addStateListener\",\"removeStateListener\",\"_sendJibriIQ\",\"failureReason\",\"oldState\",\"displayname\",\"BUSY\",\"RESOURCE_CONSTRAINT\",\"SERVICE_UNAVAILABLE\",\"FILE\",\"ProxyConnectionService\",\"jitsiConnection\",\"otherOptions\",\"_objectWithoutProperties\",\"_options\",\"_peerConnection\",\"_onFatalError\",\"_onSendMessage\",\"_onRemoteStream\",\"getPeerJid\",\"_convertStringToXML\",\"$jingle\",\"_createPeerConnection\",\"receiveVideo\",\"processMessage\",\"_selfCloseConnection\",\"xml\",\"xmlDom\",\"onRemoteStream\",\"onSendMessage\",\"ProxyConnectionPC\",\"jitsiRemoteTrack\",\"isVideo\",\"convertVideoToDesktop\",\"jitsiLocalTracks\",\"newCreateLocalTracks\",\"stringifiedIq\",\"XMLSerializer\",\"serializeToString\",\"onConnectionClosed\",\"receiveAudio\",\"_onSessionAccept\",\"_onSessionInitiate\",\"_onSessionTerminate\",\"_onTransportInfo\",\"connectionStub\",\"iceConfigStub\",\"roomStub\",\"_rtc\",\"default\",\"getAnalyticsAttributesFromOptions\",\"audio_requested\",\"video_requested\",\"screen_sharing_requested\",\"_mergeNamespaceAndModule\",\"constants\",\"recording\",\"recordingConstants\",\"sipVideoGW\",\"events\",\"errorTypes\",\"logLevels\",\"enableAnalyticsLogging\",\"enableWindowOnErrorHandler\",\"getGlobalOnErrorHandler\",\"aprops\",\"isWebRtcSupported\",\"addGlobalLogTransport\",\"globalTransport\",\"removeGlobalLogTransport\",\"setGlobalLogOptions\",\"firePermissionPromptIsShownEvent\",\"originalOptions\",\"promiseFulfilled\",\"emitEvent\",\"mStream\",\"currentlyAvailableMediaDevices\",\"oldResolution\",\"newResolution\",\"resName\",\"getLowerResolution\",\"old_resolution\",\"new_resolution\",\"isMultipleAudioInputSupported\",\"isCollectingLocalStats\",\"lineno\",\"colno\",\"util\",\"AuthUtil\",\"JitsiMeetJS\",\"logStorage\",\"stringifyObjects\",\"storeInterval\",\"maxEntryLength\",\"logLevel\",\"_log\",\"storeLogsIntervalID\",\"totalLen\",\"outputCache\",\"someObject\",\"formatLogMessage\",\"prevMessage\",\"_flush\",\"_reschedulePublishInterval\",\"force\",\"reschedule\",\"isReady\",\"cachedQueue\",\"storeLogs\",\"__webpack_amd_options__\",\"scriptReadyRegex\",\"fullPageUrl\",\"pageUrl\",\"scripts\",\"supportsScriptReadyState\",\"isNotOpera\",\"hasNativeCurrentScriptAccessor\",\"stackTraceLimit\",\"hasStackBeforeThrowing\",\"hasStackAfterThrowing\",\"_nearestExecutingScript\",\"eligibleScripts\",\"skipStackDepth\",\"getScriptUrlFromStack\",\"remainingStack\",\"ignoreMessage\",\"getScriptFromUrl\",\"hasAttribute\",\"getSoleInlineScript\",\"currentScript\",\"thrownErr\",\"near\",\"far\",\"_items\",\"_onDiscoInfo\",\"_onDiscoItems\",\"addIdentity\",\"lang\",\"var_name\",\"addItem\",\"call_back\",\"items\",\"_buildIQResult\",\"query_attrs\",\"iqresult\",\"scope\",\"Timeout\",\"clearFn\",\"_clearFn\",\"unref\",\"ref\",\"enroll\",\"msecs\",\"_idleTimeoutId\",\"unenroll\",\"_unrefActive\",\"_onTimeout\",\"clearImmediate\",\"registerImmediate\",\"messagePrefix\",\"onGlobalMessage\",\"nextHandle\",\"tasksByHandle\",\"currentlyRunningATask\",\"attachTo\",\"getPrototypeOf\",\"handle\",\"runIfPresent\",\"postMessage\",\"importScripts\",\"postMessageIsAsynchronous\",\"oldOnMessage\",\"canUsePostMessage\",\"MessageChannel\",\"port1\",\"port2\",\"removeChild\",\"adapterFactory\",\"dependencies\",\"shimChrome\",\"shimFirefox\",\"shimEdge\",\"shimSafari\",\"logging\",\"browserDetails\",\"adapter\",\"chromeShim\",\"edgeShim\",\"firefoxShim\",\"safariShim\",\"commonShim\",\"shimPeerConnection\",\"browserShim\",\"shimGetUserMedia\",\"shimMediaStream\",\"shimSourceObject\",\"shimOnTrack\",\"shimAddTrackRemoveTrack\",\"shimGetSendersWithDtmf\",\"shimRTCIceCandidate\",\"shimReplaceTrack\",\"shimRTCIceServerUrls\",\"shimCallbacksAPI\",\"shimLocalStreamsAPI\",\"shimRemoteStreamsAPI\",\"shimTrackEventTransceiver\",\"shimCreateOfferLegacy\",\"webkitMediaStream\",\"_ontrack\",\"origSetRemoteDescription\",\"_ontrackpoly\",\"te\",\"receiver\",\"getReceivers\",\"Event\",\"dispatchEvent\",\"shimSenderWithDtmf\",\"dtmf\",\"_dtmf\",\"_pc\",\"_senders\",\"origAddTrack\",\"origRemoveTrack\",\"origAddStream\",\"origRemoveStream\",\"RTCRtpSender\",\"origGetSenders\",\"HTMLMediaElement\",\"_srcObject\",\"origGetLocalStreams\",\"getLocalStreams\",\"nativeStreams\",\"_reverseStreams\",\"_streams\",\"DOMException\",\"newStream\",\"oldStream\",\"nativeMethod\",\"replaceInternalStreamId\",\"origSetLocalDescription\",\"internalId\",\"externalStream\",\"internalStream\",\"replaceExternalStreamId\",\"origLocalDescription\",\"getOwnPropertyDescriptor\",\"OrigPeerConnection\",\"pcConfig\",\"newIceServers\",\"generateCertificate\",\"iceTransports\",\"origGetStats\",\"selector\",\"fixChromeStats_\",\"standardReport\",\"standardStats\",\"localcandidate\",\"remotecandidate\",\"makeMapStats\",\"nativeAddIceCandidate\",\"constraintsToChrome_\",\"cc\",\"oldname_\",\"oc\",\"mix\",\"advanced\",\"shimConstraints_\",\"remap\",\"face\",\"getSupportedFacingModeLies\",\"getSupportedConstraints\",\"dev\",\"shimError_\",\"PermissionDeniedError\",\"InvalidStateError\",\"DevicesNotFoundError\",\"ConstraintNotSatisfiedError\",\"TrackStartError\",\"MediaDeviceFailedDueToShutdown\",\"MediaDeviceKillSwitchOn\",\"getUserMediaPromise_\",\"kinds\",\"MediaStreamTrack\",\"getSources\",\"origGetUserMedia\",\"shimRTCPeerConnection\",\"RTCIceGatherer\",\"origMSTEnabled\",\"RTCDtmfSender\",\"setTrack\",\"dtlsRole\",\"getCommonCapabilities\",\"localCapabilities\",\"remoteCapabilities\",\"commonCapabilities\",\"findCodecByPayloadType\",\"rtxCapabilityMatches\",\"lRtx\",\"rRtx\",\"lCodecs\",\"rCodecs\",\"lCodec\",\"rCodec\",\"lHeaderExtension\",\"rHeaderExtension\",\"isActionAllowedInSignalingState\",\"maybeAddCandidate\",\"iceTransport\",\"alreadyAdded\",\"getRemoteCandidates\",\"remoteCandidate\",\"addRemoteCandidate\",\"makeError\",\"addTrackToStreamAndFireEvent\",\"MediaStreamTrackEvent\",\"fireAddTrack\",\"trackEvent\",\"_dispatchEvent\",\"_eventTarget\",\"canTrickleIceCandidates\",\"needNegotiation\",\"localStreams\",\"remoteStreams\",\"iceGatheringState\",\"usingBundle\",\"bundlePolicy\",\"rtcpMuxPolicy\",\"hasTurn\",\"isString\",\"filterIceServers\",\"_iceGatherers\",\"iceCandidatePoolSize\",\"gatherPolicy\",\"_config\",\"transceivers\",\"_sdpSessionId\",\"_sdpSessionVersion\",\"_dtlsRole\",\"_isClosed\",\"ontrack\",\"onicegatheringstatechange\",\"_emitGatheringStateChange\",\"getConfiguration\",\"getRemoteStreams\",\"_createTransceiver\",\"hasBundleTransport\",\"recvEncodingParameters\",\"associatedRemoteMediaStreams\",\"wantReceive\",\"_createIceAndDtlsTransports\",\"_maybeFireNegotiationNeeded\",\"clonedStream\",\"clonedTrack\",\"_createIceGatherer\",\"writable\",\"bufferedCandidateEvents\",\"bufferCandidates\",\"_gather\",\"onlocalcandidate\",\"evt\",\"serializedCandidate\",\"complete\",\"RTCIceTransport\",\"onicestatechange\",\"_updateConnectionState\",\"RTCDtlsTransport\",\"ondtlsstatechange\",\"_disposeIceAndDtlsTransports\",\"_transceive\",\"recv\",\"receive\",\"isIceLite\",\"isDatachannel\",\"remoteIceParameters\",\"remoteDtlsParameters\",\"_updateSignalingState\",\"receiverList\",\"iceOptions\",\"rejected\",\"remoteMsid\",\"isComplete\",\"setTransport\",\"setRemoteCandidates\",\"RTCRtpReceiver\",\"getCapabilities\",\"isNewTrack\",\"nativeTrack\",\"states\",\"new\",\"connecting\",\"checking\",\"disconnected\",\"failed\",\"numAudioTracks\",\"numVideoTracks\",\"getLocalCandidates\",\"mediaSectionsInOffer\",\"candidateString\",\"inboundrtp\",\"outboundrtp\",\"candidatepair\",\"RTCTrackEvent\",\"mozSrcObject\",\"mozRTCPeerConnection\",\"newServer\",\"mozRTCSessionDescription\",\"mozRTCIceCandidate\",\"modernStatsTypes\",\"nativeGetStats\",\"onSucc\",\"onErr\",\"InternalError\",\"NotSupportedError\",\"SecurityError\",\"The operation is insecure.\",\"getUserMedia_\",\"constraintsToFF37_\",\"orgEnumerateDevices\",\"nativeGetUserMedia\",\"nativeGetSettings\",\"nativeApplyConstraints\",\"_localStreams\",\"getStreamById\",\"_remoteStreams\",\"_addTrack\",\"_onaddstream\",\"_onaddstreampoly\",\"withCallback\",\"errcb\",\"RTCTransceiver\",\"origCreateOffer\",\"audioTransceiver\",\"getTransceivers\",\"setDirection\",\"addTransceiver\",\"videoTransceiver\",\"NativeRTCIceCandidate\",\"nativeCandidate\",\"parsedCandidate\",\"augmentedCandidate\",\"toJSON\",\"eventNameToWrap\",\"nativeAddEventListener\",\"nativeEventName\",\"_eventMap\",\"nativeRemoveEventListener\",\"unwrappedCb\",\"wrapPeerConnectionEvent\",\"nativeCreateObjectURL\",\"nativeRevokeObjectURL\",\"newId\",\"dsc\",\"nativeSetAttribute\",\"toIntIfInt\",\"parseReg\",\"needsBlank\",\"keyLocation\",\"rawName\",\"attachProperties\",\"validLine\",\"paramReducer\",\"acc\",\"scid\",\"formatRegExp\",\"makeLine\",\"formatStr\",\"defaultOuterOrder\",\"defaultInnerOrder\",\"outerOrder\",\"innerOrder\",\"midToString\",\"mlB2UMap\",\"mlU2BMap\",\"candidateToUnifiedPlan\",\"candidateToPlanB\",\"getFirstSendingIndexFromAnswer\",\"rewrite\",\"type2bl\",\"types\",\"directionResult\",\"uLine\",\"rtcpMux\",\"directionMasks\",\"bundleOnly\",\"mids\",\"msidSemantic\",\"semantic\",\"cached\",\"hasBundle\",\"recvonlySsrcs\",\"mid2ul\",\"bIdx\",\"uIdx\",\"bLine\",\"uLineData\",\"iceUfrag\",\"icePwd\",\"ssrc2group\",\"ssrc2ml\",\"related\",\"inactive\",\"recvonly\",\"sendonly\",\"sendrecv\",\"transformUtils\",\"parseSsrcs\",\"writeSsrcs\",\"DEFAULT_NUM_OF_LAYERS\",\"processVideo\",\"validateDescription\",\"clearSsrcCache\",\"_parseSimLayers\",\"_buildNewToOldSsrcMap\",\"newSsrcList\",\"oldSsrcList\",\"newSsrc\",\"oldSsrc\",\"_fillInSourceDataFromCache\",\"newSimSsrcs\",\"newMsid\",\"newCname\",\"ssrcsToReplace\",\"ssrcsToAdd\",\"_generateSourceData\",\"addAssociatedStream\",\"simSsrcs\",\"simSsrc\",\"_restoreSimulcast\",\"simulcastSsrcs\",\"relatedGroup\",\"relatedSsrcs\",\"relatedSSRC\",\"simulcastGroup\",\"nuke\",\"implodeRemoteSimulcast\",\"invalid\",\"assertGoogConference\",\"TranscriptionService\",\"Word\",\"sphinxURL\",\"toReturn\",\"getURL\",\"audioFileBlob\",\"DONE\",\"formatResponse\",\"objects\",\"filler\",\"verify\",\"audioBlob\",\"getWord\",\"getBeginTime\",\"getEndTime\"],\"mappings\":\"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,QAAAA,OAAAC,IACAD,OAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,YAAAD,IAEAD,EAAA,YAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,EAAAA,EAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,QAAAA,OAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,aAAA,CAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,GAAA,EAAAE,GAAA,iBAAAF,GAAAA,GAAAA,EAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,UAAA,CAAyCT,YAAA,EAAAK,MAAAA,IACzC,EAAAE,GAAA,iBAAAF,EAAA,IAAA,IAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,GAAAA,EAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,EAAAA,EAAAiC,EAAA,qBC0LAtC,EAAOD,QA5QY,CAIfwC,yBAA0B,gCAI1BC,qBAAsB,4BACtBC,wBAAyB,+BACzBC,YAAa,mBAKbC,cAAe,2BAIfC,cAAe,2BAMfC,WAAY,wBACZC,oBAAqB,2BAGrBC,8BAA+B,qCAK/BC,uBAAwB,4BAIxBC,kBAAmB,yBAInBC,uBAAwB,8BAIxBC,oBAAqB,2BAIrBC,sBAAuB,6BAKvBC,0BAA2B,iCAI3BC,qBAAsB,4BAKtBC,gBAAiB,uBAKjBC,kBAAmB,yBACnBC,SAAU,gBACVC,mBAAoB,0BACpBC,WAAY,kBACZC,kBAAmB,yBAMnBC,eAAgB,qBAMhBC,oBAAqB,0BAWrBC,OAAQ,cAGRC,mBAAoB,yBAIpBC,iBAAkB,wBAIlBC,yBAA0B,gCAG1BC,4BAA6B,mCAG7BC,cAAe,qBAGfC,WAAY,kBAGZC,kBAAmB,yBAGnBC,gBAAiB,uBAGjBC,SAAU,gBAIVC,iBAAkB,wBAGlBC,iBAAkB,wBAIlBC,wBAAyB,mBAIzBC,wBAAyB,mBAMzBC,+BAAgC,kBAKhCC,4BAA6B,mCAC7BC,kBAAmB,yBACnBC,qBAAsB,4BAKtBC,qBAAsB,gCACtBC,kBAAmB,yBACnBC,gBAAiB,uBACjBC,iBAAkB,wBAGlBC,cAAe,qBAKfC,uBAAwB,4BAIxBC,aAAc,oBAKdC,qBAAsB,4BACtBC,kBAAmB,8BACnBC,mBAAoB,0BACpBC,+BAAgC,sCAChCC,gBAAiB,uBAKjBC,qBAAsB,4BAGtBC,qBAAsB,4BAItBC,6BAA8B,oCAY9BC,uBAAwB,8BAKxBC,uBAAwB,8BAIxBC,uBAAwB,8BAIxBC,gBAAiB,uBAIjBC,iBAAkB,wBAQlBC,6BAA8B,oCAK9BC,eAAgB,4BAQhBC,kCAAmC,qCAUnCC,mCACI,qCAIJC,6BAA8B,oCAM9BC,sBAAuB,8RChPnBzG,EAAO,QAAD0G,KAAAC,EAAA,mBAAAC,EAgBN;;;;;AAWR,IAAIC,EAAWC,EAAS9G,EAsbbJ,EAAMC,EAmzLb,OAxuMH,SAAUkH,GACP,IAAIC,EAAMC,EAAKC,EAASC,EACpBC,EAAU,GACVC,EAAU,GACVC,EAAS,GACTC,EAAW,GACXC,EAASxG,OAAOkB,UAAUC,eAC1BsF,EAAM,GAAGC,MACTC,EAAiB,QAErB,SAASC,EAAQC,EAAKC,GAClB,OAAON,EAAO/G,KAAKoH,EAAKC,GAW5B,SAASC,EAAUlH,EAAMmH,GACrB,IAAIC,EAAWC,EAAaC,EAAUC,EAAUC,EAC5CC,EAAQC,EAAcC,EAAOlI,EAAGmI,EAAGC,EACnCC,EAAYX,GAAYA,EAASY,MAAM,KACvCC,EAAMvB,EAAOuB,IACbC,EAAWD,GAAOA,EAAI,MAAS,GAGnC,GAAIhI,EAAM,CAwBN,IAtBAwH,GADAxH,EAAOA,EAAK+H,MAAM,MACDG,OAAS,EAMtBzB,EAAO0B,cAAgBrB,EAAesB,KAAKpI,EAAKwH,MAChDxH,EAAKwH,GAAaxH,EAAKwH,GAAWa,QAAQvB,EAAgB,KAIpC,MAAtB9G,EAAK,GAAGsI,OAAO,IAAcR,IAO7B9H,EADsB8H,EAAUjB,MAAM,EAAGiB,EAAUI,OAAS,GACjCK,OAAOvI,IAIjCP,EAAI,EAAGA,EAAIO,EAAKkI,OAAQzI,IAEzB,GAAa,OADboI,EAAO7H,EAAKP,IAERO,EAAKwI,OAAO/I,EAAG,GACfA,GAAK,OACF,GAAa,OAAToI,EAAe,CAMtB,GAAU,IAANpI,GAAkB,IAANA,GAAuB,OAAZO,EAAK,IAAgC,OAAhBA,EAAKP,EAAI,GACrD,SACOA,EAAI,IACXO,EAAKwI,OAAO/I,EAAI,EAAG,GACnBA,GAAK,GAMjBO,EAAOA,EAAKyI,KAAK,KAIrB,IAAKX,GAAaG,IAAYD,EAAK,CAG/B,IAAKvI,GAFL2H,EAAYpH,EAAK+H,MAAM,MAEJG,OAAQzI,EAAI,EAAGA,GAAK,EAAG,CAGtC,GAFA4H,EAAcD,EAAUP,MAAM,EAAGpH,GAAGgJ,KAAK,KAErCX,EAGA,IAAKF,EAAIE,EAAUI,OAAQN,EAAI,EAAGA,GAAK,EAKnC,IAJAN,EAAWU,EAAIF,EAAUjB,MAAM,EAAGe,GAAGa,KAAK,SAKtCnB,EAAWA,EAASD,IACN,CAEVE,EAAWD,EACXG,EAAShI,EACT,MAMhB,GAAI8H,EACA,OAMCG,GAAgBO,GAAWA,EAAQZ,KACpCK,EAAeO,EAAQZ,GACvBM,EAAQlI,IAIX8H,GAAYG,IACbH,EAAWG,EACXD,EAASE,GAGTJ,IACAH,EAAUoB,OAAO,EAAGf,EAAQF,GAC5BvH,EAAOoH,EAAUqB,KAAK,MAI9B,OAAOzI,EAGX,SAAS0I,EAAYC,EAASC,GAC1B,OAAO,WAIH,IAAIC,EAAOjC,EAAIhH,KAAKkJ,UAAW,GAQ/B,MAHuB,iBAAZD,EAAK,IAAmC,IAAhBA,EAAKX,QACpCW,EAAKE,KAAK,MAEP3C,EAAI4C,MAAM9C,EAAO2C,EAAKN,OAAO,CAACI,EAASC,MAUtD,SAASK,EAASC,GACd,OAAO,SAAUxI,GACb6F,EAAQ2C,GAAWxI,GAI3B,SAASyI,EAAQnJ,GACb,GAAI+G,EAAQP,EAASxG,GAAO,CACxB,IAAI6I,EAAOrC,EAAQxG,UACZwG,EAAQxG,GACf0G,EAAS1G,IAAQ,EACjBmG,EAAK6C,MAAM9C,EAAO2C,GAGtB,IAAK9B,EAAQR,EAASvG,KAAU+G,EAAQL,EAAU1G,GAC9C,MAAM,IAAIoJ,MAAM,MAAQpJ,GAE5B,OAAOuG,EAAQvG,GAMnB,SAASqJ,EAAYrJ,GACjB,IAAIsJ,EACAC,EAAQvJ,EAAOA,EAAKwJ,QAAQ,MAAQ,EAKxC,OAJID,GAAS,IACTD,EAAStJ,EAAKyJ,UAAU,EAAGF,GAC3BvJ,EAAOA,EAAKyJ,UAAUF,EAAQ,EAAGvJ,EAAKkI,SAEnC,CAACoB,EAAQtJ,GAKpB,SAAS0J,EAAaf,GAClB,OAAOA,EAAUU,EAAYV,GAAW,GA+C5C,SAASgB,EAAW3J,GAChB,OAAO,WACH,OAAQyG,GAAUA,EAAOA,QAAUA,EAAOA,OAAOzG,IAAU,IAzCnEqG,EAAU,SAAUrG,EAAM4J,GACtB,IAAIC,EAnDelB,EAoDfmB,EAAQT,EAAYrJ,GACpBsJ,EAASQ,EAAM,GACfC,EAAkBH,EAAS,GA2B/B,OAzBA5J,EAAO8J,EAAM,GAETR,IAEAO,EAASV,EADTG,EAASpC,EAAUoC,EAAQS,KAK3BT,EAEItJ,EADA6J,GAAUA,EAAO3C,UACV2C,EAAO3C,UAAUlH,GAlEb2I,EAkEiCoB,EAjE7C,SAAU/J,GACb,OAAOkH,EAAUlH,EAAM2I,MAkEZzB,EAAUlH,EAAM+J,IAK3BT,GADAQ,EAAQT,EADRrJ,EAAOkH,EAAUlH,EAAM+J,KAER,GACf/J,EAAO8J,EAAM,GACTR,IACAO,EAASV,EAAQG,KAKlB,CACHU,EAAGV,EAASA,EAAS,IAAMtJ,EAAOA,EAClCkB,EAAGlB,EACHiK,GAAIX,EACJ/H,EAAGsI,IAUXvD,EAAW,CACPL,QAAS,SAAUjG,GACf,OAAO0I,EAAY1I,IAEvBf,QAAS,SAAUe,GACf,IAAIkK,EAAI3D,EAAQvG,GAChB,YAAiB,IAANkK,EACAA,EAEC3D,EAAQvG,GAAQ,IAGhCd,OAAQ,SAAUc,GACd,MAAO,CACHmK,GAAInK,EACJoK,IAAK,GACLnL,QAASsH,EAAQvG,GACjByG,OAAQkD,EAAW3J,MAK/BmG,EAAO,SAAUnG,EAAMqK,EAAMC,EAAU3B,GACnC,IAAI4B,EAAWrB,EAASsB,EAAKxC,EAAKvI,EAAGmK,EAGjCa,EAFA5B,EAAO,GACP6B,EAAYC,EAAUL,GAQ1B,GAHAV,EAAWF,EADXf,EAAUA,GAAW3I,GAIA,cAAjB0K,GAAiD,aAAjBA,EAA6B,CAK7D,IADAL,GAAQA,EAAKnC,QAAUoC,EAASpC,OAAS,CAAC,UAAW,UAAW,UAAYmC,EACvE5K,EAAI,EAAGA,EAAI4K,EAAKnC,OAAQzI,GAAK,EAK9B,GAAgB,aAHhByJ,GADAlB,EAAM3B,EAAQgE,EAAK5K,GAAImK,IACTI,GAIVnB,EAAKpJ,GAAK6G,EAASL,QAAQjG,QACxB,GAAgB,YAAZkJ,EAEPL,EAAKpJ,GAAK6G,EAASrH,QAAQe,GAC3ByK,GAAe,OACZ,GAAgB,WAAZvB,EAEPqB,EAAY1B,EAAKpJ,GAAK6G,EAASpH,OAAOc,QACnC,GAAI+G,EAAQR,EAAS2C,IACjBnC,EAAQP,EAAS0C,IACjBnC,EAAQL,EAAUwC,GACzBL,EAAKpJ,GAAK0J,EAAQD,OACf,CAAA,IAAIlB,EAAIzG,EAIX,MAAM,IAAI6H,MAAMpJ,EAAO,YAAckJ,GAHrClB,EAAIzG,EAAEqJ,KAAK5C,EAAI9G,EAAGwH,EAAYC,GAAS,GAAOM,EAASC,GAAU,IACjEL,EAAKpJ,GAAK8G,EAAQ2C,GAM1BsB,EAAMF,EAAWA,EAAStB,MAAMzC,EAAQvG,GAAO6I,QAAQhD,EAEnD7F,IAIIuK,GAAaA,EAAUtL,UAAYiH,GAC/BqE,EAAUtL,UAAYsH,EAAQvG,GAClCuG,EAAQvG,GAAQuK,EAAUtL,QACnBuL,IAAQtE,GAAUuE,IAEzBlE,EAAQvG,GAAQwK,SAGjBxK,IAGPuG,EAAQvG,GAAQsK,IAIxBtE,EAAYC,EAAUG,EAAM,SAAUiE,EAAMC,EAAU3B,EAASC,EAAWiC,GACtE,GAAoB,iBAATR,EACP,OAAI/D,EAAS+D,GAEF/D,EAAS+D,GAAMC,GAMnBnB,EAAQ9C,EAAQgE,EAAMX,EAAaY,IAAWN,GAClD,IAAKK,EAAK7B,OAAQ,CAMrB,IAJA/B,EAAS4D,GACEA,MACPjE,EAAIK,EAAO4D,KAAM5D,EAAO6D,WAEvBA,EACD,OAGAA,EAAS9B,QAGT6B,EAAOC,EACPA,EAAW3B,EACXA,EAAU,MAEV0B,EAAOnE,EA6Bf,OAxBAoE,EAAWA,GAAY,aAIA,mBAAZ3B,IACPA,EAAUC,EACVA,EAAYiC,GAIZjC,EACAzC,EAAKD,EAAOmE,EAAMC,EAAU3B,GAQ5BmC,WAAW,WACP3E,EAAKD,EAAOmE,EAAMC,EAAU3B,IAC7B,GAGAvC,GAOXA,EAAIK,OAAS,SAAUsE,GACnB,OAAO3E,EAAI2E,IAMf/E,EAAUgF,SAAWzE,GAErBpH,EAAS,SAAUa,EAAMqK,EAAMC,GAC3B,GAAoB,iBAATtK,EACP,MAAM,IAAIoJ,MAAM,6DAIfiB,EAAK7B,SAIN8B,EAAWD,EACXA,EAAO,IAGNtD,EAAQR,EAASvG,IAAU+G,EAAQP,EAASxG,KAC7CwG,EAAQxG,GAAQ,CAACA,EAAMqK,EAAMC,MAI9BlL,IAAM,CACT6L,QAAQ,GAtaf,GA0aD9L,EAAO,gCAAiC,cAW7BJ,EASTmM,KATelM,EAST,SAAUD,GAsBboM,SAAS9J,UAAUJ,OACpBkK,SAAS9J,UAAUJ,KAAO,SAAU+F,GAChC,IAAIoE,EAAOF,KACPG,EAASC,MAAMjK,UAAUwF,MACzB0E,EAAUD,MAAMjK,UAAUkH,OAC1BiD,EAAQH,EAAOzL,KAAKkJ,UAAW,GACnC,OAAO,WACH,OAAOsC,EAAKpC,MAAMhC,GAAYkE,KAAMK,EAAQ3L,KAAK4L,EAAOH,EAAOzL,KAAKkJ,UAAW,QAQtFwC,MAAMG,UACPH,MAAMG,QAAU,SAASC,GACrB,MAA+C,mBAAxCvL,OAAOkB,UAAUsK,SAAS/L,KAAK8L,KAkBzCJ,MAAMjK,UAAUmI,UACjB8B,MAAMjK,UAAUmI,QAAU,SAASoC,GAC/B,IAAIC,EAAMX,KAAKhD,OACX4D,EAAOC,OAAOjD,UAAU,KAAO,EAMnC,KALAgD,EAAQA,EAAO,EAAKE,KAAKC,KAAKH,GAAQE,KAAKE,MAAMJ,IACtC,IACPA,GAAQD,GAGLC,EAAOD,EAAKC,IACf,GAAIA,KAAQZ,MAAQA,KAAKY,KAAUF,EAC/B,OAAOE,EAGf,OAAQ,IAUXR,MAAMjK,UAAU8K,UACjBb,MAAMjK,UAAU8K,QAAU,SAAS7B,EAAU8B,GACzC,IAAIC,EAAGC,EACP,GAAa,OAATpB,KACA,MAAM,IAAIqB,UAAU,gCAIxB,IAAIC,EAAIrM,OAAO+K,MAIXW,EAAMW,EAAEtE,SAAW,EAGvB,GAAwB,mBAAboC,EACP,MAAM,IAAIiC,UAAUjC,EAAW,sBAUnC,IANIxB,UAAUZ,OAAS,IACnBmE,EAAID,GAGRE,EAAI,EAEGA,EAAIT,GAAK,CACZ,IAAIY,EAOAH,KAAKE,IAGLC,EAASD,EAAEF,GAGXhC,EAAS1K,KAAKyM,EAAGI,EAAQH,EAAGE,IAGhCF,OASZ,IAAII,EAAS,oEACR3N,EAAK4N,OACN5N,EAAK4N,KAAO,SAAUC,GAKlB,IACIC,EAAMC,EAAMC,EACZC,EAAMC,EAAMC,EAAMC,EAFlBC,EAAS,GAGT3N,EAAI,EACR,GAKIuN,GAJAH,EAAOD,EAAMS,WAAW5N,OAIT,EACfwN,GAAgB,EAAPJ,IAAa,GAJtBC,EAAOF,EAAMS,WAAW5N,OAIY,EACpCyN,GAAgB,GAAPJ,IAAc,GAJvBC,EAAOH,EAAMS,WAAW5N,OAIa,EACrC0N,EAAc,GAAPJ,EAEHO,MAAMR,IACNG,GAAgB,EAAPJ,IAAa,EACtBK,EAAOC,EAAO,IACPG,MAAMP,KACbI,EAAO,IAEXC,EAASA,EAASV,EAAOpE,OAAO0E,GAAQN,EAAOpE,OAAO2E,GAClDP,EAAOpE,OAAO4E,GAAQR,EAAOpE,OAAO6E,SACnC1N,EAAImN,EAAM1E,QACnB,OAAOkF,IAIVrO,EAAKwO,OACNxO,EAAKwO,KAAO,SAAUX,GAKlB,IACIC,EAAMC,EAAMC,EACNE,EAAMC,EAAMC,EAFlBC,EAAS,GAGT3N,EAAI,EAERmN,EAAQA,EAAMvE,QAAQ,sBAAuB,IAC7C,GAMIwE,EALOH,EAAOlD,QAAQoD,EAAMtE,OAAO7I,OAKnB,GAJhBwN,EAAOP,EAAOlD,QAAQoD,EAAMtE,OAAO7I,QAIL,EAC9BqN,GAAgB,GAAPG,IAAc,GAJvBC,EAAOR,EAAOlD,QAAQoD,EAAMtE,OAAO7I,QAIE,EACrCsN,GAAgB,EAAPG,IAAa,GAJtBC,EAAOT,EAAOlD,QAAQoD,EAAMtE,OAAO7I,OAMnC2N,GAAkBI,OAAOC,aAAaZ,GAEzB,KAATK,IACAE,GAAkBI,OAAOC,aAAaX,IAE7B,KAATK,IACAC,GAAkBI,OAAOC,aAAaV,UAErCtN,EAAImN,EAAM1E,QACnB,OAAOkF,KA9MW,mBAAXjO,GAAyBA,EAAOC,IACvCD,EAAO,mBAAmB,GAAI,WAC1B,OAAOH,EAAQD,KAIZC,EAAQD,GA2NtB,SAAUA,EAAMC,GACS,mBAAXG,GAAyBA,EAAOC,IACvCD,EAAO,eAAgB,GAAG,WACtB,OAAOH,MAEe,WAAnB2L,EAAO1L,GACdC,EAAOD,QAAUD,IAGjBD,EAAK2O,KAAO1O,IATnB,CAWCkM,KAAM,WAKR,SAASyC,EAAUC,EAAG/B,GAGpB+B,EAAE/B,GAAO,IAAM,KAAS,GAAKA,EAAM,GACnC+B,EAA2B,IAAvB/B,EAAM,IAAM,GAAM,IAAWA,EAEjC,IAOIpM,EAAGmI,EAAGjH,EAAGkN,EAAMC,EAAMC,EAAMC,EAAMC,EAPjCC,EAAI,IAAI5C,MAAM,IACd6C,EAAK,WACLC,GAAK,UACLtO,GAAK,WACLC,EAAK,UACLmK,GAAK,WAGT,IAAKzK,EAAI,EAAGA,EAAImO,EAAE1F,OAAQzI,GAAK,GAC/B,CAOE,IANAoO,EAAOM,EACPL,EAAOM,EACPL,EAAOjO,EACPkO,EAAOjO,EACPkO,EAAO/D,EAEFtC,EAAI,EAAGA,EAAI,GAAIA,IAEJsG,EAAEtG,GAAZA,EAAI,GAAagG,EAAEnO,EAAImI,GACbyG,EAAIH,EAAEtG,EAAE,GAAKsG,EAAEtG,EAAE,GAAKsG,EAAEtG,EAAE,IAAMsG,EAAEtG,EAAE,IAAK,GACvDjH,EAAI2N,EAASA,EAASD,EAAIF,EAAG,GAAII,EAAQ3G,EAAGwG,EAAGtO,EAAGC,IACjCuO,EAASA,EAASpE,EAAGgE,EAAEtG,IAAK4G,EAAQ5G,KACrDsC,EAAInK,EACJA,EAAID,EACJA,EAAIuO,EAAID,EAAG,IACXA,EAAID,EACJA,EAAIxN,EAGNwN,EAAIG,EAASH,EAAGN,GAChBO,EAAIE,EAASF,EAAGN,GAChBhO,EAAIwO,EAASxO,EAAGiO,GAChBhO,EAAIuO,EAASvO,EAAGiO,GAChB9D,EAAIoE,EAASpE,EAAG+D,GAElB,MAAO,CAACE,EAAGC,EAAGtO,EAAGC,EAAGmK,GAOtB,SAASqE,EAAQ5N,EAAGyN,EAAGtO,EAAGC,GAExB,OAAIY,EAAI,GAAcyN,EAAItO,GAAQsO,EAAKrO,EACnCY,EAAI,GAAayN,EAAItO,EAAIC,EACzBY,EAAI,GAAcyN,EAAItO,EAAMsO,EAAIrO,EAAMD,EAAIC,EACvCqO,EAAItO,EAAIC,EAMjB,SAASyO,EAAQ7N,GAEf,OAAQA,EAAI,GAAO,WAAcA,EAAI,GAAO,WACpCA,EAAI,IAAO,YAAc,UAMnC,SAAS8N,EAAezN,EAAK0N,GAE3B,IAAIC,EAAOC,EAAS5N,GAChB2N,EAAKzG,OAAS,KAAMyG,EAAOhB,EAAUgB,EAAmB,EAAb3N,EAAIkH,SAGnD,IADA,IAAI2G,EAAO,IAAIvD,MAAM,IAAKwD,EAAO,IAAIxD,MAAM,IAClC7L,EAAI,EAAGA,EAAI,GAAIA,IAEtBoP,EAAKpP,GAAe,UAAVkP,EAAKlP,GACfqP,EAAKrP,GAAe,WAAVkP,EAAKlP,GAGjB,IAAIsP,EAAOpB,EAAUkB,EAAKtG,OAAOqG,EAASF,IAAQ,IAAoB,EAAdA,EAAKxG,QAC7D,OAAOyF,EAAUmB,EAAKvG,OAAOwG,GAAO,KAOtC,SAAST,EAASV,EAAGoB,GAEnB,IAAIC,GAAW,MAAJrB,IAAmB,MAAJoB,GAE1B,OADWpB,GAAK,KAAOoB,GAAK,KAAOC,GAAO,KAC3B,GAAa,MAANA,EAMxB,SAASZ,EAAIa,EAAKC,GAEhB,OAAQD,GAAOC,EAAQD,IAAS,GAAKC,EAOvC,SAASP,EAASQ,GAIhB,IAFA,IAAIC,EAAM,GAED5P,EAAI,EAAGA,EAAiB,EAAb2P,EAAIlH,OAAYzI,GAAK,EAEvC4P,EAAI5P,GAAG,KAHE,IAGK2P,EAAI/B,WAAW5N,EAAI,KAAe,GAAKA,EAAE,GAEzD,OAAO4P,EAMT,SAASC,EAASD,GAIhB,IAFA,IAAID,EAAM,GAED3P,EAAI,EAAGA,EAAiB,GAAb4P,EAAInH,OAAazI,GAAK,EAExC2P,GAAO5B,OAAOC,aAAc4B,EAAI5P,GAAG,KAAQ,GAAKA,EAAE,GAHzC,KAKX,OAAO2P,EAMT,SAASG,EAASC,GAKhB,IAHA,IAEIC,EAAS7H,EADTwH,EAAM,GAED3P,EAAI,EAAGA,EAAsB,EAAlB+P,EAAStH,OAAYzI,GAAK,EAK5C,IAHAgQ,GAAaD,EAAS/P,GAAO,IAAM,GAAK,EAAKA,EAAK,GAAM,MAAS,IACpD+P,EAAS/P,EAAE,GAAK,IAAM,GAAK,GAAKA,EAAE,GAAG,GAAM,MAAS,EACpD+P,EAAS/P,EAAE,GAAK,IAAM,GAAK,GAAKA,EAAE,GAAG,GAAM,IACnDmI,EAAI,EAAGA,EAAI,EAAGA,IAET,EAAJnI,EAAY,EAAJmI,EAA0B,GAAlB4H,EAAStH,OAAekH,GAAO,IAC5CA,GAXD,mEAWY9G,OAAQmH,GAAW,GAAG,EAAE7H,GAAM,IAGpD,OAAOwH,EAOT,MAAO,CACHM,cAAgB,SAAU1O,EAAK0N,GAAO,OAAOa,EAASd,EAAezN,EAAK0N,KAC1EiB,SAAgB,SAAUnO,GAAK,OAAO+N,EAAS5B,EAAUiB,EAASpN,GAAc,EAAXA,EAAE0G,UACvEoH,SAAgBA,EAChBb,eAAgBA,EAChBmB,cAAgB,SAAU5O,EAAK0N,GAAO,OAAOY,EAASb,EAAezN,EAAK0N,KAC1EmB,SAAgB,SAAUrO,GAAK,OAAO8N,EAAS3B,EAAUiB,EAASpN,GAAc,EAAXA,EAAE0G,aAgB1E,SAAUnJ,EAAMC,GACS,mBAAXG,GAAyBA,EAAOC,IACvCD,EAAO,cAAc,GAAI,WACrB,OAAOH,MAEe,WAAnB2L,EAAO1L,GACdC,EAAOD,QAAUD,IAGjBD,EAAK+Q,IAAM9Q,IATlB,CAWCkM,KAAM,WAKJ,IAAIoD,EAAW,SAAUV,EAAGoB,GACxB,IAAIC,GAAW,MAAJrB,IAAmB,MAAJoB,GAE1B,OADWpB,GAAK,KAAOoB,GAAK,KAAOC,GAAO,KAC3B,GAAa,MAANA,GAatBc,EAAW,SAAUX,GAErB,IADA,IAAIC,EAAM,GACF5P,EAAI,EAAGA,EAAiB,EAAb2P,EAAIlH,OAAYzI,GAAK,EAEpC4P,EAAI5P,GAAG,KAA+B,IAAxB2P,EAAI/B,WAAW5N,EAAI,KAAcA,EAAE,GAErD,OAAO4P,GAgCPW,EAAU,SAAUC,EAAG9B,EAAGC,EAAGR,EAAGpM,EAAGb,GACnC,OAAO2N,GA9CaY,EA8CIZ,EAASA,EAASH,EAAG8B,GAAG3B,EAASV,EAAGjN,OA9CnCwO,EA8CwC3N,GA7C1C0N,IAAS,GAAKC,EA6C+Bf,GA9C1D,IAAUc,EAAKC,GAiDzBe,EAAS,SAAU/B,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAGpM,EAAGb,GACrC,OAAOqP,EAAS5B,EAAItO,GAAQsO,EAAKrO,EAAIoO,EAAGC,EAAGR,EAAGpM,EAAGb,IAGjDwP,EAAS,SAAUhC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAGpM,EAAGb,GACrC,OAAOqP,EAAS5B,EAAIrO,EAAMD,GAAMC,EAAKoO,EAAGC,EAAGR,EAAGpM,EAAGb,IAGjDyP,EAAS,SAAUjC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAGpM,EAAGb,GACrC,OAAOqP,EAAQ5B,EAAItO,EAAIC,EAAGoO,EAAGC,EAAGR,EAAGpM,EAAGb,IAGtC0P,EAAS,SAAUlC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAGpM,EAAGb,GACrC,OAAOqP,EAAQlQ,GAAKsO,GAAMrO,GAAKoO,EAAGC,EAAGR,EAAGpM,EAAGb,IAM3C2P,EAAW,SAAU1C,EAAG/B,GAExB+B,EAAE/B,GAAO,IAAM,KAAUA,EAAO,GAChC+B,EAA8B,IAAzB/B,EAAM,KAAQ,GAAM,IAAWA,EAQpC,IANA,IAKIgC,EAAMC,EAAMC,EAAMC,EALlBG,EAAK,WACLC,GAAK,UACLtO,GAAK,WACLC,EAAK,UAGAN,EAAI,EAAGA,EAAImO,EAAE1F,OAAQzI,GAAK,GAE/BoO,EAAOM,EACPL,EAAOM,EACPL,EAAOjO,EACPkO,EAAOjO,EAEPoO,EAAI+B,EAAO/B,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,GAAK,WACrCM,EAAImQ,EAAOnQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAG,GAAI,IAAK,WACrCK,EAAIoQ,EAAOpQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAG,GAAI,GAAK,WACrC2O,EAAI8B,EAAO9B,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAG,GAAI,IAAK,YACrC0O,EAAI+B,EAAO/B,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,GAAK,WACrCM,EAAImQ,EAAOnQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAG,GAAI,GAAK,YACrCK,EAAIoQ,EAAOpQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAG,GAAI,IAAK,YACrC2O,EAAI8B,EAAO9B,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAG,GAAI,IAAK,UACrC0O,EAAI+B,EAAO/B,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,EAAK,YACrCM,EAAImQ,EAAOnQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAG,GAAI,IAAK,YACrCK,EAAIoQ,EAAOpQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAE,IAAK,IAAK,OACrC2O,EAAI8B,EAAO9B,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAE,IAAK,IAAK,YACrC0O,EAAI+B,EAAO/B,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAE,IAAK,EAAK,YACrCM,EAAImQ,EAAOnQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAE,IAAK,IAAK,UACrCK,EAAIoQ,EAAOpQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAE,IAAK,IAAK,YACrC2O,EAAI8B,EAAO9B,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAE,IAAK,GAAK,YAErC0O,EAAIgC,EAAOhC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,GAAK,WACrCM,EAAIoQ,EAAOpQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAG,GAAI,GAAK,YACrCK,EAAIqQ,EAAOrQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAE,IAAK,GAAK,WACrC2O,EAAI+B,EAAO/B,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAG,GAAI,IAAK,WACrC0O,EAAIgC,EAAOhC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,GAAK,WACrCM,EAAIoQ,EAAOpQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAE,IAAK,EAAK,UACrCK,EAAIqQ,EAAOrQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAE,IAAK,IAAK,WACrC2O,EAAI+B,EAAO/B,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAG,GAAI,IAAK,WACrC0O,EAAIgC,EAAOhC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,EAAK,WACrCM,EAAIoQ,EAAOpQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAE,IAAK,GAAK,YACrCK,EAAIqQ,EAAOrQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAG,GAAI,IAAK,WACrC2O,EAAI+B,EAAO/B,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAG,GAAI,GAAK,YACrC0O,EAAIgC,EAAOhC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAE,IAAK,GAAK,YACrCM,EAAIoQ,EAAOpQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAG,GAAI,GAAK,UACrCK,EAAIqQ,EAAOrQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAG,GAAI,GAAK,YACrC2O,EAAI+B,EAAO/B,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAE,IAAK,IAAK,YAErC0O,EAAIiC,EAAOjC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,GAAK,QACrCM,EAAIqQ,EAAOrQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAG,GAAI,IAAK,YACrCK,EAAIsQ,EAAOtQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAE,IAAK,GAAK,YACrC2O,EAAIgC,EAAOhC,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAE,IAAK,IAAK,UACrC0O,EAAIiC,EAAOjC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,GAAK,YACrCM,EAAIqQ,EAAOrQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAG,GAAI,GAAK,YACrCK,EAAIsQ,EAAOtQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAG,GAAI,IAAK,WACrC2O,EAAIgC,EAAOhC,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAE,IAAK,IAAK,YACrC0O,EAAIiC,EAAOjC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAE,IAAK,EAAK,WACrCM,EAAIqQ,EAAOrQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAG,GAAI,IAAK,WACrCK,EAAIsQ,EAAOtQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAG,GAAI,IAAK,WACrC2O,EAAIgC,EAAOhC,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAG,GAAI,GAAK,UACrC0O,EAAIiC,EAAOjC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,GAAK,WACrCM,EAAIqQ,EAAOrQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAE,IAAK,IAAK,WACrCK,EAAIsQ,EAAOtQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAE,IAAK,GAAK,WACrC2O,EAAIgC,EAAOhC,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAG,GAAI,IAAK,WAErC0O,EAAIkC,EAAOlC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,GAAK,WACrCM,EAAIsQ,EAAOtQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAG,GAAI,GAAK,YACrCK,EAAIuQ,EAAOvQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAE,IAAK,IAAK,YACrC2O,EAAIiC,EAAOjC,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAG,GAAI,IAAK,UACrC0O,EAAIkC,EAAOlC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAE,IAAK,EAAK,YACrCM,EAAIsQ,EAAOtQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAG,GAAI,IAAK,YACrCK,EAAIuQ,EAAOvQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAE,IAAK,IAAK,SACrC2O,EAAIiC,EAAOjC,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAG,GAAI,IAAK,YACrC0O,EAAIkC,EAAOlC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,EAAK,YACrCM,EAAIsQ,EAAOtQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAE,IAAK,IAAK,UACrCK,EAAIuQ,EAAOvQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAG,GAAI,IAAK,YACrC2O,EAAIiC,EAAOjC,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAE,IAAK,GAAK,YACrC0O,EAAIkC,EAAOlC,EAAGC,EAAGtO,EAAGC,EAAG6N,EAAEnO,EAAG,GAAI,GAAK,WACrCM,EAAIsQ,EAAOtQ,EAAGoO,EAAGC,EAAGtO,EAAG8N,EAAEnO,EAAE,IAAK,IAAK,YACrCK,EAAIuQ,EAAOvQ,EAAGC,EAAGoO,EAAGC,EAAGR,EAAEnO,EAAG,GAAI,GAAK,WACrC2O,EAAIiC,EAAOjC,EAAGtO,EAAGC,EAAGoO,EAAGP,EAAEnO,EAAG,GAAI,IAAK,WAErC0O,EAAIG,EAASH,EAAGN,GAChBO,EAAIE,EAASF,EAAGN,GAChBhO,EAAIwO,EAASxO,EAAGiO,GAChBhO,EAAIuO,EAASvO,EAAGiO,GAEpB,MAAO,CAACG,EAAGC,EAAGtO,EAAGC,IAiBrB,MAdU,CAMNwQ,UAAW,SAAU/O,GACjB,OA1IO,SAAUgO,GAGrB,IAFA,IACIJ,EAAM,GACF3P,EAAI,EAAGA,EAAsB,EAAlB+P,EAAStH,OAAYzI,IAEpC2P,GAJU,mBAIK9G,OAAQkH,EAAS/P,GAAG,IAAQA,EAAE,EAAG,EAAE,EAAM,IAJ9C,mBAKE6I,OAAQkH,EAAS/P,GAAG,IAAQA,EAAE,EAAG,EAAQ,IAEzD,OAAO2P,EAkIIoB,CAASF,EAASP,EAASvO,GAAe,EAAXA,EAAE0G,UAG5C6G,KAAM,SAAUvN,GACZ,OA1JO,SAAU6N,GAErB,IADA,IAAID,EAAM,GACF3P,EAAI,EAAGA,EAAiB,GAAb4P,EAAInH,OAAazI,GAAK,EAErC2P,GAAO5B,OAAOC,aAAc4B,EAAI5P,GAAG,KAAQA,EAAI,GAAO,KAE1D,OAAO2P,EAoJIqB,CAASH,EAASP,EAASvO,GAAe,EAAXA,EAAE0G,aAMnD,SAAUnJ,EAAMC,GACS,mBAAXG,GAAyBA,EAAOC,IACvCD,EAAO,gBAAgB,GAAI,WACvB,OAAOH,MAEe,WAAnB2L,EAAO1L,GACdC,EAAOD,QAAUD,IAGjBD,EAAK2R,aAAe1R,IAT3B,CAWCkM,KAAM,WA8DJ,MA5DY,CAERyF,SAAU,SAAUvB,GAChB,IAAI3P,EAAGK,EACH8Q,EAAM,GACN/E,EAAMuD,EAAIlH,OACd,IAAKzI,EAAI,EAAGA,EAAIoM,EAAKpM,KACjBK,EAAIsP,EAAI/B,WAAW5N,KACT,GAAYK,GAAK,IACvB8Q,GAAOxB,EAAI9G,OAAO7I,GACXK,EAAI,MACX8Q,GAAOpD,OAAOC,aAAa,IAAS3N,GAAK,GAAM,IAC/C8Q,GAAOpD,OAAOC,aAAa,IAAS3N,GAAM,EAAK,IAC/C8Q,GAAOpD,OAAOC,aAAa,IAAS3N,GAAM,EAAK,MAE/C8Q,GAAOpD,OAAOC,aAAa,IAAS3N,GAAM,EAAK,IAC/C8Q,GAAOpD,OAAOC,aAAa,IAAS3N,GAAM,EAAK,KAGvD,OAAO8Q,GAGXC,WAAY,SAAUC,GAoBlB,IAAIC,EAAYC,EAAWC,EAAOC,EAAaC,EAASC,EAAQC,EAChE,IAAKN,KAAeD,GAAW,GAC3BK,EAAU,GACVC,EAAS,GACTC,EAAO,GAEPJ,EAA6B,WAArBtG,EADRqG,EAAYF,EAAQC,IAEpBG,EAAcI,OAAOC,SAASN,EAAQD,EAAUtQ,MAAQsQ,IACpDC,IACAE,EAAUH,EAAUG,QAAU,YAAYH,EAAUG,QAAU,GAC9DC,EAASJ,EAAUI,OAAS,WAAWJ,EAAUI,OAAS,GAC1DC,EAAOL,EAAUK,KAAO,SAASL,EAAUK,KAAO,IAEtDG,SAASC,OACLV,EAAW,IAAIG,EAAcC,EAAUC,EAASC,MAiBnE,SAAUtS,EAAMC,GACb,GAAsB,mBAAXG,GAAyBA,EAAOC,IACvCD,EAAO,eAAe,CAClB,eACA,cACA,iBACD,WACC,OAAOH,EAAQgK,MAAMkC,KAAMpC,kBAE3B,GAAuB,WAAnB6B,EAAO1L,GACfC,EAAOD,QAAUD,EACbiH,EAAQ,UACRA,EAAQ,SACRA,EAAQ,gBAET,CAEH,IAAI/F,EAAIlB,EAAQD,EAAK2O,KAAM3O,EAAK+Q,IAAK/Q,EAAK2R,cAC1C3R,EAAK2S,QAAiBxR,EAAEwR,QACxB3S,EAAK4S,OAAiBzR,EAAEyR,OACxB5S,EAAK6S,IAAiB1R,EAAE0R,IACxB7S,EAAK8S,KAAiB3R,EAAE2R,KACxB9S,EAAK+S,MAAiB5R,EAAE4R,MACxB/S,EAAK2O,KAAiBxN,EAAEwN,KACxB3O,EAAK+Q,IAAiB5P,EAAE4P,IACxB/Q,EAAK2Q,cAAiBxP,EAAEwN,KAAKgC,cAC7B3Q,EAAK4Q,SAAiBzP,EAAEwN,KAAKiC,SAC7B5Q,EAAK6Q,cAAiB1P,EAAEwN,KAAKkC,cAC7B7Q,EAAK8Q,SAAiB3P,EAAEwN,KAAKmC,UA5BpC,CA8BC3E,KAAM,SAAUwC,EAAMoC,EAAKiC,GAE7B,IAAIL,EAaJ,SAASC,EAAO3R,EAAMgS,GAAS,OAAO,IAAIN,EAAQO,QAAQjS,EAAMgS,GAsBhE,SAASJ,EAAII,GAAS,OAAO,IAAIN,EAAQO,QAAQ,KAAMD,GAWvD,SAASF,EAAME,GAAS,OAAO,IAAIN,EAAQO,QAAQ,WAAYD,GAqgH/D,OA5/GAN,EAAU,CAENQ,QAAS,SAqBTC,GAAI,CACAC,SAAU,sCACVC,KAAM,iBACNC,OAAQ,gBACRC,KAAM,iBACNC,OAAQ,mBACRC,QAAS,oBACTC,WAAY,wCACZC,YAAa,yCACbC,IAAK,iCACLC,KAAM,mCACNC,OAAQ,mCACRC,QAAS,sCACTC,KAAM,mCACNC,QAAS,sCACTf,QAAS,oBACTgB,QAAS,sCACTC,SAAU,sCACVC,MAAO,gCASXA,MAAO,CACHC,KAAM,CAAC,IAAI,aAAa,KAAK,OAAO,KAAK,MAAM,KAAK,KAAK,IAAI,OAAO,SAAS,KAAK,QAClFC,WAAY,CACRnF,EAAc,CAAC,QACfoF,WAAc,CAAC,SACfC,GAAc,GACdC,KAAc,CAAC,SACfC,GAAc,GACdC,IAAc,CAAC,MAAO,MAAO,QAAS,SAAU,SAChDC,GAAc,CAAC,SACfC,GAAc,CAAC,SACftS,EAAc,CAAC,SACfuS,KAAc,CAAC,SACfC,OAAc,GACdC,GAAc,CAAC,SACfC,KAAc,IAElBC,IAAK,CAAC,mBAAmB,QAAQ,cAAc,YAAY,aAAa,cAAc,cAAc,eAAe,aAAa,mBAQhIC,SAAU,SAASC,GACf,IAAK,IAAI3U,EAAI,EAAGA,EAAIiS,EAAQ0B,MAAMC,KAAKnL,OAAQzI,IAC3C,GAAI2U,IAAQ1C,EAAQ0B,MAAMC,KAAK5T,GAC3B,OAAO,EAGf,OAAO,GASX4U,eAAgB,SAASD,EAAKE,GAC1B,QAA6C,IAAlC5C,EAAQ0B,MAAME,WAAWc,IAAwB1C,EAAQ0B,MAAME,WAAWc,GAAKlM,OAAS,EAC/F,IAAK,IAAIzI,EAAI,EAAGA,EAAIiS,EAAQ0B,MAAME,WAAWc,GAAKlM,OAAQzI,IACtD,GAAI6U,IAAc5C,EAAQ0B,MAAME,WAAWc,GAAK3U,GAC5C,OAAO,EAIvB,OAAO,GAEP8U,SAAU,SAASC,GACf,IAAK,IAAI/U,EAAI,EAAGA,EAAIiS,EAAQ0B,MAAMc,IAAIhM,OAAQzI,IAC1C,GAAI+U,IAAU9C,EAAQ0B,MAAMc,IAAIzU,GAC5B,OAAO,EAGf,OAAO,IAoBfgV,OAAQ,CACJC,MAAO,EACPC,WAAY,EACZC,SAAU,EACVC,eAAgB,EAChBC,SAAU,EACVC,UAAW,EACXC,aAAc,EACdC,cAAe,EACfC,SAAU,EACVC,SAAU,EACVC,YAAa,IAGjBC,eAAgB,CACZC,WAAY,aACZC,SAAU,WACVC,iBAAkB,6BAClBC,aAAc,eACdC,eAAgB,WAYpBC,SAAU,CACNC,MAAO,EACPC,KAAM,EACNC,KAAM,EACNpB,MAAO,EACPqB,MAAO,GAUXC,YAAa,CACTC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,SAAU,IAiBdC,QAAS,IACTC,kBAAmB,GAcnBC,aAAc,SAAUvW,EAAMU,GAC1BgR,EAAQS,GAAGnS,GAAQU,GAiBvB8V,aAAc,SAAUC,EAAMC,EAAUtL,GACpC,IAAI3L,EAAGkX,EACP,IAAKlX,EAAI,EAAGA,EAAIgX,EAAKG,WAAW1O,OAAQzI,KACpCkX,EAAYF,EAAKG,WAAWnX,IACdoX,WAAanF,EAAQsE,YAAYC,QACzCS,IAAYxL,KAAK4L,WAAWH,EAAWD,IACzCtL,EAAKuL,IAkBjBG,WAAY,SAAUC,EAAI/W,GACtB,OAAO+W,EAAGC,UAAYhX,GAO1BiX,cAAe,KAMfC,eAAgB,WACZ,IAAIC,EAYJ,YAR+CtR,IAA3C2L,SAAS4F,eAAeC,gBACZ7F,SAAS4F,eAAeC,gBAAkB7F,SAAS8F,cAAgB9F,SAAS8F,aAAe,IACvGH,EAAMjM,KAAKqM,gBACPC,YAAYL,EAAIM,cAAc,YAElCN,EAAM3F,SAAS4F,eACVC,eAAe,gBAAiB,UAAW,MAE7CF,GASXO,aAAc,WAIV,OAHKhG,EAAQuF,gBACTvF,EAAQuF,cAAgBvF,EAAQwF,kBAE7BxF,EAAQuF,eAWnBM,aAAe,WAYX,IAXA,IAAIJ,EAAM,KACNQ,EAAa,CACb,yBACA,yBACA,yBACA,yBACA,qBACA,oBACA,oBAGK5X,EAAI,EAAGA,EAAI4X,EAAWzP,QACf,OAARiP,EAD+BpX,IAE/B,IACIoX,EAAM,IAAIS,cAAcD,EAAW5X,IACrC,MAAOmK,GACLiN,EAAM,KAMlB,OAAOA,GAqBXU,WAAY,SAAU7X,GAClB,IAAKA,EAAQ,OAAO,KAEpB,IAGImO,EAAG1O,EAAG6M,EAHNwL,EAAOpG,EAAQgG,eAAeD,cAAczX,GAIhD,IAAKmO,EAAI,EAAGA,EAAIrF,UAAUZ,OAAQiG,IAAK,CACnC,IAAIzC,EAAM5C,UAAUqF,GACpB,GAAKzC,EACL,GAAoB,iBAATA,GACS,iBAATA,EACPoM,EAAKN,YAAY9F,EAAQqG,YAAYrM,SAClC,GAAoB,WAAhBf,EAAOe,IACc,mBAAdA,EAAIsM,KAClB,IAAKvY,EAAI,EAAGA,EAAIiM,EAAIxD,OAAQzI,IAAK,CAC7B,IAAIwY,EAAOvM,EAAIjM,GACM,WAAjBkL,EAAOsN,IACe,mBAAfA,EAAKD,WACAnS,IAAZoS,EAAK,IACO,OAAZA,EAAK,IACLH,EAAKI,aAAaD,EAAK,GAAIA,EAAK,SAGrC,GAAoB,WAAhBtN,EAAOe,GACd,IAAKY,KAAKZ,EACFA,EAAIpK,eAAegL,SACJzG,IAAX6F,EAAIY,IACO,OAAXZ,EAAIY,IACJwL,EAAKI,aAAa5L,EAAGZ,EAAIY,IAO7C,OAAOwL,GAYXK,UAAW,SAASC,GAMhB,OADAA,GADAA,GADAA,GADAA,GADAA,EAAOA,EAAK/P,QAAQ,MAAO,UACfA,QAAQ,KAAO,SACfA,QAAQ,KAAO,SACfA,QAAQ,KAAO,WACfA,QAAQ,KAAO,WAa/BgQ,YAAa,SAASD,GAMlB,OADAA,GADAA,GADAA,GADAA,GADAA,EAAOA,EAAK/P,QAAQ,UAAW,MACnBA,QAAQ,QAAU,MAClBA,QAAQ,QAAU,MAClBA,QAAQ,UAAY,MACpBA,QAAQ,UAAY,MAepC0P,YAAa,SAAUK,GACnB,OAAO1G,EAAQgG,eAAeY,eAAeF,IAYjDG,YAAa,SAAUC,GACnB,IAAIV,EAUJ,OARIW,UAEAX,GADa,IAAIW,WACHC,gBAAgBF,EAAM,cAEpCV,EAAO,IAAIF,cAAc,qBACpBe,MAAM,QACXb,EAAKc,QAAQJ,IAEVV,GAYXe,QAAS,SAAUpC,GACf,IAAKA,EAAQ,OAAO,KAEpB,IAAIrH,EAAM,GACqB,IAA3BqH,EAAKG,WAAW1O,QAAgBuO,EAAKI,WAAanF,EAAQsE,YAAYE,OACtE9G,GAAOqH,EAAKqC,WAGhB,IAAK,IAAIrZ,EAAI,EAAGA,EAAIgX,EAAKG,WAAW1O,OAAQzI,IACpCgX,EAAKG,WAAWnX,GAAGoX,WAAanF,EAAQsE,YAAYE,OACpD9G,GAAOqH,EAAKG,WAAWnX,GAAGqZ,WAIlC,OAAOpH,EAAQyG,UAAU/I,IAe7B2J,YAAa,SAAUtC,GACnB,IAAIhX,EAAGsX,EACP,GAAIN,EAAKI,WAAanF,EAAQsE,YAAYC,OAAQ,CAG9C,IAFAc,EAAKrF,EAAQmG,WAAWpB,EAAKO,SAExBvX,EAAI,EAAGA,EAAIgX,EAAKnD,WAAWpL,OAAQzI,IACpCsX,EAAGmB,aAAazB,EAAKnD,WAAW7T,GAAGuZ,SACnBvC,EAAKnD,WAAW7T,GAAGiB,OAGvC,IAAKjB,EAAI,EAAGA,EAAIgX,EAAKG,WAAW1O,OAAQzI,IACpCsX,EAAGS,YAAY9F,EAAQqH,YAAYtC,EAAKG,WAAWnX,UAEhDgX,EAAKI,WAAanF,EAAQsE,YAAYE,OAC7Ca,EAAKrF,EAAQgG,eAAeY,eAAe7B,EAAKqC,YAEpD,OAAO/B,GAgBXkC,WAAY,SAAUxC,GAClB,IAAIhX,EAAGsX,EAAInP,EAAGwM,EAAKE,EAAW5T,EAAOwT,EAAKgF,EAAUjB,EAAMkB,EAASC,EACnE,GAAI3C,EAAKI,WAAanF,EAAQsE,YAAYC,OAEtC,GADA7B,EAAMqC,EAAKuC,SAASK,cACjB3H,EAAQ0B,MAAMe,SAASC,GACtB,IAEI,IADA2C,EAAKrF,EAAQmG,WAAWzD,GACpB3U,EAAI,EAAGA,EAAIiS,EAAQ0B,MAAME,WAAWc,GAAKlM,OAAQzI,IAGjD,GAFA6U,EAAY5C,EAAQ0B,MAAME,WAAWc,GAAK3U,GAEvC,OADHiB,EAAQ+V,EAAK6C,aAAahF,KACqC,KAAV5T,IAA0B,IAAVA,GAA6B,IAAVA,EASxF,GANiB,UAAd4T,GAA0C,WAAjB3J,EAAOjK,SACH,IAAlBA,EAAM6Y,UACZ7Y,EAAQA,EAAM6Y,SAIL,UAAdjF,EAAuB,CAGtB,IAFAJ,EAAM,GACNgF,EAAWxY,EAAMqH,MAAM,KACnBH,EAAI,EAAGA,EAAIsR,EAAShR,OAAQN,IAE5BuR,GADAlB,EAAOiB,EAAStR,GAAGG,MAAM,MACV,GAAGM,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAIgR,cACvD3H,EAAQ0B,MAAMmB,SAAS4E,KACtBC,EAAWnB,EAAK,GAAG5P,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IACvD6L,EAAInL,KAAKoQ,EAAU,KAAOC,IAG/BlF,EAAIhM,OAAS,IACZxH,EAAQwT,EAAIzL,KAAK,MACjBsO,EAAGmB,aAAa5D,EAAW5T,SAG/BqW,EAAGmB,aAAa5D,EAAW5T,GAInC,IAAKjB,EAAI,EAAGA,EAAIgX,EAAKG,WAAW1O,OAAQzI,IACpCsX,EAAGS,YAAY9F,EAAQuH,WAAWxC,EAAKG,WAAWnX,KAExD,MAAMyK,GACN6M,EAAKrF,EAAQqG,YAAY,SAI3B,IADAhB,EAAKrF,EAAQgG,eAAe8B,yBACvB/Z,EAAI,EAAGA,EAAIgX,EAAKG,WAAW1O,OAAQzI,IACpCsX,EAAGS,YAAY9F,EAAQuH,WAAWxC,EAAKG,WAAWnX,UAGvD,GAAIgX,EAAKI,WAAanF,EAAQsE,YAAYI,SAE7C,IADAW,EAAKrF,EAAQgG,eAAe8B,yBACvB/Z,EAAI,EAAGA,EAAIgX,EAAKG,WAAW1O,OAAQzI,IACpCsX,EAAGS,YAAY9F,EAAQuH,WAAWxC,EAAKG,WAAWnX,UAE/CgX,EAAKI,WAAanF,EAAQsE,YAAYE,OAC7Ca,EAAKrF,EAAQqG,YAAYtB,EAAKqC,YAElC,OAAO/B,GAYX0C,WAAY,SAAU3B,GAClB,MAAoB,iBAATA,EAA4BA,EAChCA,EAAKzP,QAAQ,aAAc,IAC7BA,QAAQ,MAAQ,QAChBA,QAAQ,KAAQ,QAChBA,QAAQ,MAAQ,QAChBA,QAAQ,MAAQ,QAChBA,QAAQ,MAAQ,QAChBA,QAAQ,MAAQ,QAChBA,QAAQ,KAAQ,QAChBA,QAAQ,KAAQ,QAChBA,QAAQ,KAAQ,QAChBA,QAAQ,KAAQ,SAYzBqR,aAAc,SAAU5B,GACpB,MAAoB,iBAATA,EAA4BA,EAChCA,EAAKzP,QAAQ,QAAS,KACxBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,OAY1BsR,eAAgB,SAAUC,GACtB,OAAIA,EAAIpQ,QAAQ,KAAO,EAAY,KAC5BoQ,EAAI7R,MAAM,KAAK,IAY1B8R,iBAAkB,SAAUD,GACxB,IAAIE,EAAOpI,EAAQqI,kBAAkBH,GACrC,GAAIE,EAAKtQ,QAAQ,KAAO,EACpB,OAAOsQ,EAEP,IAAIhQ,EAAQgQ,EAAK/R,MAAM,KAEvB,OADA+B,EAAMtB,OAAO,EAAG,GACTsB,EAAMrB,KAAK,MAa1BuR,mBAAoB,SAAUJ,GAC1B,IAAIpY,EAAIoY,EAAI7R,MAAM,KAClB,OAAIvG,EAAE0G,OAAS,EAAY,MAC3B1G,EAAEgH,OAAO,EAAG,GACLhH,EAAEiH,KAAK,OAYlBsR,kBAAmB,SAAUH,GACzB,OAAOA,EAAMA,EAAI7R,MAAM,KAAK,GAAK,MAMrCkS,aAAc,SAAU/P,QACG,IAAZA,EAAEgQ,OACTxI,EAAQyI,MAAMjQ,EAAEgQ,OAEhBhQ,EAAEkQ,UACF1I,EAAQyI,MAAM,UAAYjP,KAAKmP,QAAU,IAAMnQ,EAAEkQ,UAAY,IAC/ClQ,EAAEoQ,KAAO,MAAQpQ,EAAElK,KAAO,KAAOkK,EAAEqQ,SAC1CrQ,EAAEsQ,SACT9I,EAAQyI,MAAM,UAAYjP,KAAKmP,QAAU,IAC3BnQ,EAAEsQ,SAAW,IAAMtQ,EAAEuQ,WAAa,MAClCvQ,EAAElK,KAAO,KAAOkK,EAAEqQ,SAEhC7I,EAAQyI,MAAM,UAAYjQ,EAAEqQ,UAiCpCG,IAAK,SAAUC,EAAOC,GACdD,IAAUzP,KAAKyK,SAASI,OACE,WAA1BpL,EAAOtL,OAAOwb,UACkB,mBAAzBxb,OAAOwb,QAAQC,OACtBzb,OAAOwb,QAAQC,MAAMF,IAU7BG,MAAO,SAASH,GACZ1P,KAAKwP,IAAIxP,KAAKyK,SAASC,MAAOgF,IASlCI,KAAM,SAAUJ,GACZ1P,KAAKwP,IAAIxP,KAAKyK,SAASE,KAAM+E,IASjCK,KAAM,SAAUL,GACZ1P,KAAKwP,IAAIxP,KAAKyK,SAASG,KAAM8E,IASjCE,MAAO,SAAUF,GACb1P,KAAKwP,IAAIxP,KAAKyK,SAASjB,MAAOkG,IASlCT,MAAO,SAAUS,GACb1P,KAAKwP,IAAIxP,KAAKyK,SAASI,MAAO6E,IAYlCM,UAAW,SAAUzE,GACjB,IAAI0E,EAEJ,IAAK1E,EAAQ,OAAO,KAEM,mBAAfA,EAAK2E,OACZ3E,EAAOA,EAAK2E,QAGhB,IACI3b,EAAG4b,EADHrC,EAAWvC,EAAKuC,SAQpB,IALIvC,EAAK6C,aAAa,eAClBN,EAAWvC,EAAK6C,aAAa,cAGjC6B,EAAS,IAAMnC,EACVvZ,EAAI,EAAGA,EAAIgX,EAAKnD,WAAWpL,OAAQzI,IACA,cAAhCgX,EAAKnD,WAAW7T,GAAGuZ,WACpBmC,GAAU,IAAM1E,EAAKnD,WAAW7T,GAAGuZ,SAC/B,KAAOtH,EAAQyG,UAAU1B,EAAKnD,WAAW7T,GAAGiB,OAAS,KAIhE,GAAI+V,EAAKG,WAAW1O,OAAS,EAAG,CAE5B,IADAiT,GAAU,IACL1b,EAAI,EAAGA,EAAIgX,EAAKG,WAAW1O,OAAQzI,IAEpC,QADA4b,EAAQ5E,EAAKG,WAAWnX,IACVoX,UACZ,KAAKnF,EAAQsE,YAAYC,OAEvBkF,GAAUzJ,EAAQwJ,UAAUG,GAC5B,MACF,KAAK3J,EAAQsE,YAAYE,KAEvBiF,GAAUzJ,EAAQyG,UAAUkD,EAAMvC,WAClC,MACF,KAAKpH,EAAQsE,YAAYG,MAEvBgF,GAAU,YAAYE,EAAMvC,UAAU,MAG9CqC,GAAU,KAAOnC,EAAW,SAE5BmC,GAAU,KAGd,OAAOA,GAOXG,WAAY,EAMZC,mBAAoB,GASpBC,oBAAqB,SAAUxb,EAAMyb,GACjC/J,EAAQ6J,mBAAmBvb,GAAQyb,KA8CnCxJ,QAAU,SAAUjS,EAAMgS,GAEjB,aAAThS,GAAgC,YAATA,GAA+B,OAATA,IACzCgS,IAAUA,EAAM0J,MAChB1J,EAAM0J,MAAQhK,EAAQS,GAAGG,OACjBN,IACRA,EAAQ,CAAC0J,MAAOhK,EAAQS,GAAGG,UAKnCpH,KAAKyQ,SAAWjK,EAAQmG,WAAW7X,EAAMgS,GAGzC9G,KAAK4M,KAAO5M,KAAKyQ,UAGrBjK,EAAQO,QAAQ5Q,UAAY,CAUxB+Z,KAAM,WACF,OAAOlQ,KAAKyQ,UAahBhQ,SAAU,WACN,OAAO+F,EAAQwJ,UAAUhQ,KAAKyQ,WAalCC,GAAI,WAEA,OADA1Q,KAAK4M,KAAO5M,KAAK4M,KAAK+D,WACf3Q,MAaXnM,KAAM,WAEF,OADAmM,KAAK4M,KAAO5M,KAAKyQ,SACVzQ,MAeX8G,MAAO,SAAU8J,GACb,IAAK,IAAIxP,KAAKwP,EACNA,EAAUxa,eAAegL,UACJzG,IAAjBiW,EAAUxP,GACVpB,KAAK4M,KAAKiE,gBAAgBzP,GAE1BpB,KAAK4M,KAAKI,aAAa5L,EAAGwP,EAAUxP,KAIhD,OAAOpB,MAmBXpL,EAAG,SAAUE,EAAMgS,EAAOoG,GACtB,IAAIiD,EAAQ3J,EAAQmG,WAAW7X,EAAMgS,EAAOoG,GAK5C,OAJAlN,KAAK4M,KAAKN,YAAY6D,GACF,iBAATjD,GAAoC,iBAARA,IACnClN,KAAK4M,KAAOuD,GAETnQ,MAiBX8Q,MAAO,SAAUvF,GACb,IAAIwF,EACAC,EAASxK,EAAQgG,eACrB,IACIuE,OAAiCpW,IAAtBqW,EAAOC,WACpB,MAAOjS,GACL+R,GAAU,EAEd,IAAIG,EAAUH,EACAC,EAAOC,WAAW1F,GAAM,GACxB/E,EAAQqH,YAAYtC,GAGlC,OAFAvL,KAAK4M,KAAKN,YAAY4E,GACtBlR,KAAK4M,KAAOsE,EACLlR,MAeXvK,EAAG,SAAUyX,GACT,IAAIiD,EAAQ3J,EAAQqG,YAAYK,GAEhC,OADAlN,KAAK4M,KAAKN,YAAY6D,GACfnQ,MAcXmR,EAAG,SAAU7D,GACT,IAAI8D,EAAW9K,SAASiG,cAAc,QAGtC6E,EAASC,UAAY/D,EAKrB,IAFA,IAAIgE,EAAQ9K,EAAQuH,WAAWqD,GAEzBE,EAAM5F,WAAW1O,OAAS,GAC5BgD,KAAK4M,KAAKN,YAAYgF,EAAM5F,WAAW,IAE3C,OAAO1L,OAiCfwG,EAAQ+K,QAAU,SAAUpC,EAASvZ,EAAId,EAAM0c,EAAMvS,EAAI2B,EAAM6Q,GAC3DzR,KAAKmP,QAAUA,EACfnP,KAAKpK,GAAKA,EACVoK,KAAKlL,KAAOA,EACZkL,KAAKwR,KAAOA,EACZxR,KAAKf,GAAKA,EACVe,KAAKyR,QAAUA,GAAW,CAACC,kBAAoB,EAAOC,yBAA2B,GAE7E3R,KAAKyR,QAAQG,YACbpL,EAAQuJ,KAAK,yEACb/P,KAAKyR,QAAQC,iBAAmB1R,KAAKyR,QAAQG,iBACtC5R,KAAKyR,QAAQG,WAGpB5R,KAAKyR,QAAQC,iBACb1R,KAAKY,KAAOA,EAAO4F,EAAQqI,kBAAkBjO,GAAQ,KAErDZ,KAAKY,KAAOA,EAGhBZ,KAAK6R,MAAO,GAGhBrL,EAAQ+K,QAAQpb,UAAY,CAYxB2b,aAAc,SAAUvG,GACpB,IAAIwG,EAAcxG,EAAK6C,aAAa,SAIpC,OAHI2D,GAAe/R,KAAKyR,QAAQE,0BAC5BI,EAAcA,EAAYlV,MAAM,KAAK,IAElCkV,GAYXC,eAAgB,SAAUzG,GACtB,IAAI0G,GAAU,EACd,IAAKjS,KAAKpK,GACN,OAAO,EAEP,IAAIsc,EAAOlS,KAQf,OAPIwG,EAAQ8E,aAAaC,EAAM,KAAM,SAAUA,GACnC2G,EAAKJ,aAAavG,KAAU2G,EAAKtc,KACjCqc,GAAU,KAGlBA,EAAUA,GAAWjS,KAAK8R,aAAavG,KAAUvL,KAAKpK,IAc9Duc,QAAS,SAAU5G,GACf,IAAI3K,EAAO2K,EAAK6C,aAAa,QACzBpO,KAAKyR,QAAQC,mBACb9Q,EAAO4F,EAAQqI,kBAAkBjO,IAErC,IAAIwR,EAAY7G,EAAK6C,aAAa,QAClC,SAAIpO,KAAKgS,eAAezG,IAClBvL,KAAKlL,OAAQ0R,EAAQoF,WAAWL,EAAMvL,KAAKlL,OAC3CkL,KAAKwR,OAASpR,MAAMG,QAAQP,KAAKwR,OAA0C,IAAlCxR,KAAKwR,KAAKlT,QAAQ8T,GAAoBA,IAAcpS,KAAKwR,OAClGxR,KAAKf,IAAMsM,EAAK6C,aAAa,QAAUpO,KAAKf,IAC5Ce,KAAKY,MAAQA,IAASZ,KAAKY,OAgBrCyR,IAAK,SAAU9G,GACX,IAAI0E,EAAS,KACb,IACIA,EAASjQ,KAAKmP,QAAQ5D,GACxB,MAAOvM,GAEL,MADAwH,EAAQuI,aAAa/P,GACfA,EAEV,OAAOiR,GASXxP,SAAU,WACN,MAAO,aAAeT,KAAKmP,QAAU,IAAMnP,KAAKlL,KAAO,IACnDkL,KAAKf,GAAK,IAAMe,KAAKpK,GAAK,OA6BtC4Q,EAAQ8L,aAAe,SAAUC,EAAQpD,GACrCnP,KAAKuS,OAASA,EACdvS,KAAKmP,QAAUA,EACfnP,KAAKwS,YAAa,IAAIC,MAAOC,UAC7B1S,KAAK6R,MAAO,GAGhBrL,EAAQ8L,aAAanc,UAAY,CAQ7Bkc,IAAK,WAED,OADArS,KAAKwS,YAAa,IAAIC,MAAOC,UACtB1S,KAAKmP,WAMhBwD,MAAO,WACH3S,KAAKwS,YAAa,IAAIC,MAAOC,WASjCjS,SAAU,WACN,MAAO,kBAAoBT,KAAKmP,QAAU,IAAMnP,KAAKuS,OAAQ,OAkJrE/L,EAAQoM,WAAa,SAAUC,EAASpB,GAEpCzR,KAAK6S,QAAUA,EAEf7S,KAAKyR,QAAUA,GAAW,GAC1B,IAAIqB,EAAQ9S,KAAKyR,QAAQsB,UAAY,GAgErC,IAAK,IAAI3R,KA7DsB,IAA3ByR,EAAQvU,QAAQ,QAA4C,IAA5BuU,EAAQvU,QAAQ,SACpB,IAAxBwU,EAAMxU,QAAQ,MAClB0B,KAAKgT,OAAS,IAAIxM,EAAQyM,UAAUjT,MAEpCA,KAAKgT,OAAS,IAAIxM,EAAQ0M,KAAKlT,MAInCA,KAAK0O,IAAM,GAEX1O,KAAKkG,OAAS,KAEdlG,KAAKmT,SAAW,KAGhBnT,KAAKoT,WAAa,GAClBpT,KAAKqT,YAAa,EAClBrT,KAAKsT,SAAU,EAGftT,KAAKuT,cAAgB,GACrBvT,KAAK5E,SAAW,GAChB4E,KAAKwT,aAAe,GACpBxT,KAAKyT,eAAiB,GACtBzT,KAAK0T,UAAY,GACjB1T,KAAK2T,YAAc,GACnB3T,KAAK4T,sBAAwB,CACzBC,KAAQ,GACRC,UAAa,IAGjB9T,KAAK+T,aAAe,KACpB/T,KAAKgU,mBAAqB,KAE1BhU,KAAKiU,eAAgB,EACrBjU,KAAKkU,WAAY,EACjBlU,KAAKmU,eAAgB,EACrBnU,KAAKoU,mBAAoB,EACzBpU,KAAKqU,QAAS,EACdrU,KAAKsU,UAAW,EAEhBtU,KAAKuU,MAAQ,GACbvU,KAAKwU,UAAY,EAEjBxU,KAAKyU,sBAAwB,KAC7BzU,KAAK0U,sBAAwB,KAC7B1U,KAAK2U,wBAA0B,KAG/B3U,KAAK4U,WAAa,EAIlB5U,KAAK+T,aAAenU,WAAW,WAC3BI,KAAK6U,WACP9e,KAAKiK,MAAO,KAEd6G,EAAMlB,WAAW3F,KAAKyR,QAAQ7L,SAC9B5F,KAAK8U,uBAAuB9U,KAAKyR,QAAQsD,YAG3BvO,EAAQ6J,mBAClB,GAAI7J,EAAQ6J,mBAAmBja,eAAegL,GAAI,CAC9C,IAAImP,EAAQ/J,EAAQ6J,mBAAmBjP,GAEnC4T,EAAI,aACRA,EAAE7e,UAAYoa,EACdvQ,KAAKoB,GAAK,IAAI4T,EACdhV,KAAKoB,GAAG6T,KAAKjV,QAKzBwG,EAAQoM,WAAWzc,UAAY,CAO3Bwc,MAAO,WACH3S,KAAKgT,OAAOkC,SAGZlV,KAAKqT,YAAa,EAClBrT,KAAKsT,SAAU,EAGftT,KAAKuT,cAAgB,GACrBvT,KAAK5E,SAAW,GAChB4E,KAAKwT,aAAe,GACpBxT,KAAKyT,eAAiB,GACtBzT,KAAK0T,UAAY,GACjB1T,KAAK2T,YAAc,GAEnB3T,KAAKiU,eAAgB,EACrBjU,KAAKkU,WAAY,EACjBlU,KAAKmU,eAAgB,EACrBnU,KAAKsU,UAAW,EAEhBtU,KAAKuU,MAAQ,GACbvU,KAAKmV,UAAY,GACjBnV,KAAKwU,UAAY,GAYrBY,MAAO,WACHpV,KAAKqU,QAAS,GAQlBgB,OAAQ,WACJrV,KAAKqU,QAAS,GAyBlBiB,YAAa,SAASC,GAClB,IAAIC,EAAO,uCAAuCrY,QAAQ,QAAS,SAASvI,GACxE,IAAIS,EAAoB,GAAhByL,KAAK2U,SAAgB,EAE7B,OADc,MAAN7gB,EAAYS,EAAQ,EAAJA,EAAU,GACzBoL,SAAS,MAEtB,MAAuB,iBAAZ8U,GAA2C,iBAAZA,EAC/BC,EAAO,IAAMD,EAEbC,EAAO,IA0BtBE,wBAAyB,SAAS3C,EAAU4C,EAAavW,GACrDY,KAAK4T,sBAAsBb,GAAU4C,GAAevW,GA4CxDwW,QAAS,SAAUlH,EAAKmH,EAAMzW,EAAU0W,EAAMC,EAAMC,EAAOC,GACvDjW,KAAK0O,IAAMA,EAIX1O,KAAKkW,QAAU1P,EAAQqI,kBAAkB7O,KAAK0O,KAK9C1O,KAAKiW,QAAUA,GAAWzP,EAAQiI,eAAezO,KAAK0O,KAKtD1O,KAAK6V,KAAOA,EAKZ7V,KAAKmW,SAAW,OAEhBnW,KAAKoW,iBAAmBhX,EACxBY,KAAKmU,eAAgB,EACrBnU,KAAKkU,WAAY,EACjBlU,KAAKiU,eAAgB,EACrBjU,KAAKsU,UAAW,EAGhBtU,KAAKkG,OAASM,EAAQmI,iBAAiB3O,KAAK0O,KAE5C1O,KAAKqW,qBAAqB7P,EAAQ+C,OAAOE,WAAY,MAErDzJ,KAAKgT,OAAOsD,SAASR,EAAMC,EAAMC,IA2BrCO,OAAQ,SAAU7H,EAAK8H,EAAKC,EAAKrX,EAAU0W,EAAMC,EAAMW,GACnD,KAAI1W,KAAKgT,kBAAkBxM,EAAQ0M,MAG/B,KAAM,CACFpe,KAAM,sBACNua,QAAS,gEAJbrP,KAAKgT,OAAO2D,QAAQjI,EAAK8H,EAAKC,EAAKrX,EAAU0W,EAAMC,EAAMW,IAoCjEE,QAAS,SAAUlI,EAAKtP,EAAU0W,EAAMC,EAAMW,GAC1C,IAAI1W,KAAK6W,2BAGL,KAAM,CACF/hB,KAAM,sBACNua,QAAS,iEAJbrP,KAAKgT,OAAO8D,SAASpI,EAAKtP,EAAU0W,EAAMC,EAAMW,IAaxDG,yBAA0B,WACtB,GAAI7W,KAAKgT,kBAAkBxM,EAAQ0M,KAAM,CACrC,IAAK6D,KAAQ,OAAO,EACpB,IACIC,eAAeC,QAAQ,YAAa,aACpCD,eAAeE,WAAW,aAC5B,MAAOlY,GACL,OAAO,EAEX,OAAO,EAEX,OAAO,GAsBXmY,SAAU,SAAU5L,KAwBpB6L,UAAW,SAAU7L,KAkBrB8L,SAAU,SAAU7T,KAkBpB8T,UAAW,SAAU9T,KAiBrB+T,aAAc,SAAUd,KAiBxBe,KAAM,SAAUjM,GACZ,GAAa,OAATA,EAAJ,CACA,GAA0B,mBAAfA,EAAKuB,KACZ,IAAK,IAAIvY,EAAI,EAAGA,EAAIgX,EAAKvO,OAAQzI,IAC7ByL,KAAKyX,WAAWlM,EAAKhX,QAEI,mBAAfgX,EAAK2E,KACnBlQ,KAAKyX,WAAWlM,EAAK2E,QAErBlQ,KAAKyX,WAAWlM,GAGpBvL,KAAKgT,OAAO0E,UAWhBC,MAAO,WAGHC,aAAa5X,KAAK+T,cAClB/T,KAAK6U,WAmBTgD,aAAc,SAAStM,EAAMnM,EAAU0Y,EAASC,GAC5C,IAAIC,EAAiB,KACjB9F,EAAOlS,KACe,mBAAfuL,EAAK2E,OACZ3E,EAAOA,EAAK2E,QAEhB,IAAIjR,EAAKsM,EAAK6C,aAAa,MAM3B,GALKnP,IACDA,EAAKe,KAAKsV,YAAY,gBACtB/J,EAAKyB,aAAa,KAAM/N,IAGJ,mBAAbG,GAA8C,mBAAZ0Y,EAAwB,CACjE,IAAI3I,EAAUnP,KAAKiY,WAAW,SAAUC,GAEhCF,GACA9F,EAAKiG,mBAAmBH,GAGf,UADFE,EAAO9J,aAAa,QAEvB0J,GACAA,EAAQI,GAEL9Y,GACPA,EAAS8Y,IAEd,KAAM,WAAY,KAAMjZ,GAGvB8Y,IACAC,EAAiBhY,KAAKoY,gBAAgBL,EAAS,WAO3C,OALA7F,EAAKmG,cAAclJ,GAEf2I,GACAA,EAAQ,OAEL,KAKnB,OADA9X,KAAKwX,KAAKjM,GACHtM,GAiBXqZ,OAAQ,SAAS/M,EAAMnM,EAAU0Y,EAASC,GACtC,IAAIC,EAAiB,KACjB9F,EAAOlS,KACe,mBAAfuL,EAAK2E,OACZ3E,EAAOA,EAAK2E,QAEhB,IAAIjR,EAAKsM,EAAK6C,aAAa,MAM3B,GALKnP,IACDA,EAAKe,KAAKsV,YAAY,UACtB/J,EAAKyB,aAAa,KAAM/N,IAGJ,mBAAbG,GAA8C,mBAAZ0Y,EAAwB,CACjE,IAAI3I,EAAUnP,KAAKiY,WAAW,SAAUC,GAEhCF,GACA9F,EAAKiG,mBAAmBH,GAE5B,IAAIO,EAASL,EAAO9J,aAAa,QACjC,GAAe,WAAXmK,EACInZ,GACAA,EAAS8Y,OAEV,CAAA,GAAe,UAAXK,EAKP,KAAM,CACFzjB,KAAM,eACNua,QAAS,sBAAwBkJ,GANjCT,GACAA,EAAQI,KAQjB,KAAM,KAAM,CAAC,QAAS,UAAWjZ,GAGhC8Y,IACAC,EAAiBhY,KAAKoY,gBAAgBL,EAAS,WAO3C,OALA7F,EAAKmG,cAAclJ,GAEf2I,GACAA,EAAQ,OAEL,KAKnB,OADA9X,KAAKwX,KAAKjM,GACHtM,GAOXwY,WAAY,SAAUe,GAClB,GAAgB,OAAZA,IACCA,EAAQ1M,UACR0M,EAAQ9M,WACT,KAAM,CACF5W,KAAM,eACNua,QAAS,gCAGjBrP,KAAKuU,MAAM1W,KAAK2a,IAMpBC,aAAc,WACVzY,KAAKuU,MAAM1W,KAAK,WAChBmC,KAAKgT,OAAOyF,eAEZzY,KAAK+T,aAAenU,WAAW,WAC3BI,KAAK6U,WACP9e,KAAKiK,MAAO,MAyBlBoY,gBAAiB,SAAU7F,EAAQpD,GAC/B,IAAIuJ,EAAQ,IAAIlS,EAAQ8L,aAAaC,EAAQpD,GAE7C,OADAnP,KAAK0T,UAAU7V,KAAK6a,GACbA,GAaXP,mBAAoB,SAAUQ,GAG1B3Y,KAAKwT,aAAa3V,KAAK8a,IAmE3BV,WAAY,SAAU9I,EAASvZ,EAAId,EAAM0c,EAAMvS,EAAI2B,EAAM6Q,GACrD,IAAImH,EAAO,IAAIpS,EAAQ+K,QAAQpC,EAASvZ,EAAId,EAAM0c,EAAMvS,EAAI2B,EAAM6Q,GAElE,OADAzR,KAAK2T,YAAY9V,KAAK+a,GACfA,GAaXP,cAAe,SAAUM,GAGrB3Y,KAAKyT,eAAe5V,KAAK8a,GAGzB,IAAIpkB,EAAIyL,KAAK2T,YAAYrV,QAAQqa,GAC7BpkB,GAAK,GACLyL,KAAK2T,YAAYrW,OAAO/I,EAAG,IAanCugB,uBAAwB,SAAUC,GAC9B/U,KAAK+U,WAAa,IAClBA,EAAaA,GAAc,CACvBvO,EAAQqS,cACRrS,EAAQsS,aACRtS,EAAQuS,QACRvS,EAAQwS,gBACRxS,EAAQyS,YACRzS,EAAQ0S,UACR1S,EAAQ2S,WAEDlY,QAAQjB,KAAKoZ,sBAAsBrjB,KAAKiK,QAWvDoZ,sBAAuB,SAAUC,GAC7BrZ,KAAK+U,WAAWsE,EAAUljB,UAAUrB,MAAQukB,GAmBhDC,WAAY,SAAUC,GAIlB,GAHAvZ,KAAKqW,qBAAqB7P,EAAQ+C,OAAOQ,cAAewP,GAExD/S,EAAQsJ,KAAK,kCAAoCyJ,GAC7CvZ,KAAKkU,UAAW,CAChB,IAAIsF,GAAO,EACXxZ,KAAKmU,eAAgB,EACjBnU,KAAKiU,gBACLuF,EAAO5S,EAAM,CACT4J,MAAOhK,EAAQS,GAAGG,OAClBoK,KAAM,iBAIdxR,KAAKgU,mBAAqBhU,KAAKyZ,oBAC3B,IAAMzZ,KAAK0Z,qBAAqB3jB,KAAKiK,OACzCA,KAAKgT,OAAO2G,YAAYH,QAExBhT,EAAQsJ,KAAK,gEACb9P,KAAKgT,OAAO4G,oBACZ5Z,KAAK6Z,iBAcbxD,qBAAsB,SAAUyD,EAAQC,EAAWxO,GAE/C,IAAK,IAAInK,KAAKoF,EAAQ6J,mBAClB,GAAI7J,EAAQ6J,mBAAmBja,eAAegL,GAAI,CAC9C,IAAIzC,EAASqB,KAAKoB,GAClB,GAAIzC,EAAOqb,cACP,IACIrb,EAAOqb,cAAcF,EAAQC,GAC/B,MAAOE,GACLzT,EAAQoJ,MAAWxO,EAAI,gDACa6Y,IAOpD,GAAIja,KAAKoW,iBACL,IACIpW,KAAKoW,iBAAiB0D,EAAQC,EAAWxO,GAC3C,MAAOvM,GACLwH,EAAQuI,aAAa/P,GACrBwH,EAAQoJ,MACJ,iDAAoD5Q,KAWpE6a,cAAe,SAAUE,GACY,iBAAtB/Z,KAAK+T,cACZ6D,aAAa5X,KAAK+T,cAIU,OAA5B/T,KAAKgU,qBACLhU,KAAKmY,mBAAmBnY,KAAKgU,oBAC7BhU,KAAKgU,mBAAqB,MAG9BxN,EAAQsJ,KAAK,4BACb9P,KAAKgT,OAAO6G,gBAEZ7Z,KAAKiU,eAAgB,EACrBjU,KAAKmU,eAAgB,EACrBnU,KAAKsU,UAAW,EAGhBtU,KAAK5E,SAAW,GAChB4E,KAAKuT,cAAgB,GACrBvT,KAAKwT,aAAe,GACpBxT,KAAKyT,eAAiB,GACtBzT,KAAK0T,UAAY,GACjB1T,KAAK2T,YAAc,GAGnB3T,KAAKqW,qBAAqB7P,EAAQ+C,OAAOO,aAAciQ,GACvD/Z,KAAKkU,WAAY,GAerBgG,UAAW,SAAUhf,EAAKif,GACtB3T,EAAQsJ,KAAK,oBACb,IAAIvE,EAAOvL,KAAKgT,OAAOoH,WAAWlf,GAClC,GAAa,OAATqQ,EAAJ,CAkBA,IAAIhX,EAAGqkB,EACP,IAjBI5Y,KAAKmX,WAAa3Q,EAAQoM,WAAWzc,UAAUghB,WAC3C5L,EAAKuC,WAAa9N,KAAKgT,OAAOqH,OAAS9O,EAAKG,WAAW1O,OACvDgD,KAAKmX,SAAS5L,EAAKG,WAAW,IAE9B1L,KAAKmX,SAAS5L,IAGlBvL,KAAKqX,WAAa7Q,EAAQoM,WAAWzc,UAAUkhB,WAC3C8C,EACAna,KAAKqX,SAAS8C,GAEdna,KAAKqX,SAAS7Q,EAAQwJ,UAAUzE,KAMjCvL,KAAKyT,eAAezW,OAAS,GAChC4b,EAAO5Y,KAAKyT,eAAe6G,OAC3B/lB,EAAIyL,KAAK5E,SAASkD,QAAQsa,KACjB,GACL5Y,KAAK5E,SAASkC,OAAO/I,EAAG,GAKhC,KAAOyL,KAAK2T,YAAY3W,OAAS,GAC7BgD,KAAK5E,SAASyC,KAAKmC,KAAK2T,YAAY2G,OAIxC,GAAIta,KAAKmU,eAAiBnU,KAAKgT,OAAOuH,cAClCva,KAAK6Z,oBADT,CAKA,IACIW,EAAMC,EADNjJ,EAAOjG,EAAK6C,aAAa,QAE7B,GAAa,OAAToD,GAA0B,cAATA,EAAsB,CAEvC,GAAIxR,KAAKmU,cACL,OAkBJ,OAdAqG,EAAOjP,EAAK6C,aAAa,aACzBqM,EAAWlP,EAAKmP,qBAAqB,YACxB,OAATF,GACa,wBAATA,GAAkCC,EAASzd,OAAS,IACpDwd,EAAO,YAEXxa,KAAKqW,qBAAqB7P,EAAQ+C,OAAOG,SAAU8Q,IAEnDxa,KAAKqW,qBACD7P,EAAQ+C,OAAOG,SACflD,EAAQ2D,eAAewQ,oBAG/B3a,KAAK6Z,cAAcW,GAKvB,IAAItI,EAAOlS,KACXwG,EAAQ8E,aAAaC,EAAM,KAAM,SAAU4E,GACvC,IAAI5b,EAAGqmB,EAIP,IAFAA,EAAU1I,EAAK9W,SACf8W,EAAK9W,SAAW,GACX7G,EAAI,EAAGA,EAAIqmB,EAAQ5d,OAAQzI,IAAK,CACjC,IAAIqkB,EAAOgC,EAAQrmB,GAGnB,KACQqkB,EAAKzG,QAAQhC,KACZ+B,EAAK+B,eAAkB2E,EAAK/G,KAK7BK,EAAK9W,SAASyC,KAAK+a,GAJfA,EAAKvG,IAAIlC,IACT+B,EAAK9W,SAASyC,KAAK+a,GAK7B,MAAM5Z,GAEJwH,EAAQuJ,KAAK,wDAAwD/Q,EAAEqQ,gBAUvF0F,WAAY,GAkBZ8F,YAAa,SAAU3f,EAAK4f,EAAWX,GAInC,IAAIY,EAHJvU,EAAQsJ,KAAK,0BACb9P,KAAKkU,WAAY,EAGjB,IACI6G,EAAW/a,KAAKgT,OAAOoH,WAAWlf,GACpC,MAAO8D,GACL,GAAU,cAANA,EAAqB,MAAMA,EAC/BgB,KAAKqW,qBACD7P,EAAQ+C,OAAOG,SACflD,EAAQ2D,eAAeC,YAE3BpK,KAAK6Z,cAAcrT,EAAQ2D,eAAeC,YAE9C,GAAK2Q,IAED/a,KAAKmX,WAAa3Q,EAAQoM,WAAWzc,UAAUghB,WAC3C4D,EAASjN,WAAa9N,KAAKgT,OAAOqH,OAASU,EAASrP,WAAW1O,OAC/DgD,KAAKmX,SAAS4D,EAASrP,WAAW,IAElC1L,KAAKmX,SAAS4D,IAGlB/a,KAAKqX,WAAa7Q,EAAQoM,WAAWzc,UAAUkhB,WAC3C8C,EACAna,KAAKqX,SAAS8C,GAEdna,KAAKqX,SAAS7Q,EAAQwJ,UAAU+K,KAIxB/a,KAAKgT,OAAO6H,YAAYE,KACtBvU,EAAQ+C,OAAOG,UAYjC,GANIqR,EAASC,uBACKD,EAASC,uBAAuBxU,EAAQS,GAAGW,OAAQ,YAAY5K,OAAS,EAExE+d,EAASL,qBAAqB,mBAAmB1d,OAAS,GACxD+d,EAASL,qBAAqB,YAAY1d,OAAS,EAEvE,CAKA,IAAkBzI,EAAG0mB,EAAjBC,EAAU,GACVnG,EAAagG,EAASL,qBAAqB,aAC/C,GAAI3F,EAAW/X,OAAS,EACpB,IAAKzI,EAAI,EAAGA,EAAIwgB,EAAW/X,OAAQzI,IAC/B0mB,EAAOzU,EAAQmH,QAAQoH,EAAWxgB,IAC9ByL,KAAK+U,WAAWkG,IAAOC,EAAQrd,KAAKmC,KAAK+U,WAAWkG,IAGzC,IAAnBC,EAAQle,QAC6C,IAAjD+d,EAASL,qBAAqB,QAAQ1d,QAOf,IAA3BgD,KAAKoU,mBACLpU,KAAKmb,aAAaD,GALdlb,KAAKgT,OAAOoI,kBAAkBN,QAhBlC9a,KAAKgT,OAAOoI,kBAAkBN,IAkCtCO,yBAA0B,SAAUtG,GAEhC,IAAIxgB,EAAGmI,EAAG4e,EAAQC,EAClB,IAAKhnB,EAAI,EAAGA,EAAIwgB,EAAW/X,OAAS,IAAKzI,EAAG,CAExC,IADA+mB,EAAS/mB,EACJmI,EAAInI,EAAI,EAAGmI,EAAIqY,EAAW/X,SAAUN,EACjCqY,EAAWrY,GAAGvG,UAAUqlB,SAAWzG,EAAWuG,GAAQnlB,UAAUqlB,WAChEF,EAAS5e,GAGb4e,IAAW/mB,IACXgnB,EAAOxG,EAAWxgB,GAClBwgB,EAAWxgB,GAAKwgB,EAAWuG,GAC3BvG,EAAWuG,GAAUC,GAG7B,OAAOxG,GAgBX0G,iBAAkB,SAAU1G,GACxBA,EAAa/U,KAAKqb,yBAAyBtG,GAAc,IACzD,IAAIxgB,EAAI,EAAGmnB,GAAkB,EAC7B,IAAKnnB,EAAI,EAAGA,EAAIwgB,EAAW/X,SAAUzI,EACjC,GAAKwgB,EAAWxgB,GAAG4B,UAAU+G,KAAK8C,MAAlC,CAGAA,KAAKyU,sBAAwBzU,KAAK2b,eAC9B3b,KAAK4b,iBAAiB7lB,KAAKiK,MAAO,KAClC,UAAW,KAAM,MACrBA,KAAK0U,sBAAwB1U,KAAK2b,eAC9B3b,KAAK6b,iBAAiB9lB,KAAKiK,MAAO,KAClC,UAAW,KAAM,MACrBA,KAAK2U,wBAA0B3U,KAAK2b,eAChC3b,KAAK8b,mBAAmB/lB,KAAKiK,MAAO,KACpC,YAAa,KAAM,MAEvBA,KAAK+b,gBAAkB,IAAIhH,EAAWxgB,GACtCyL,KAAK+b,gBAAgBC,QAAQhc,MAE7B,IAAIic,EAAwBxV,EAAO,OAAQ,CACvC+J,MAAOhK,EAAQS,GAAGU,KAClB0R,UAAWrZ,KAAK+b,gBAAgBjnB,OAEpC,GAAIkL,KAAK+b,gBAAgBG,cAAe,CACpC,IAAIC,EAAWnc,KAAK+b,gBAAgBK,YAAYpc,KAAM,MACtDic,EAAsBxmB,EAAEgM,KAAK0a,IAEjCnc,KAAKwX,KAAKyE,EAAsB/L,QAChCwL,GAAkB,EAClB,MAEJ,OAAOA,GAQXW,mBAAoB,WACyB,OAArC7V,EAAQiI,eAAezO,KAAK0O,MAG5B1O,KAAKqW,qBACD7P,EAAQ+C,OAAOG,SACflD,EAAQ2D,eAAeG,kBAE3BtK,KAAKsZ,WAAW9S,EAAQ2D,eAAeG,oBAGvCtK,KAAKqW,qBAAqB7P,EAAQ+C,OAAOI,eAAgB,MACzD3J,KAAK2b,eACD3b,KAAKsc,UAAUvmB,KAAKiK,MACpB,KAAM,KAAM,KAAM,WAEtBA,KAAKwX,KAAK9Q,EAAI,CACN8K,KAAQ,MACR+K,GAAMvc,KAAKkG,OACXjH,GAAM,YACPrK,EAAE,QAAS,CAAC4b,MAAOhK,EAAQS,GAAGI,OAChCzS,EAAE,WAAY,IAAIa,EAAE+Q,EAAQiI,eAAezO,KAAK0O,MAChDwB,UAiBbiL,aAAc,SAAUD,GACflb,KAAKyb,iBAAiBP,IACvBlb,KAAKqc,sBAQbP,mBAAoB,SAASvQ,GAC3B,IAAIiR,EAAYna,KAAKmE,EAAQmH,QAAQpC,IACjC4Q,EAAWnc,KAAK+b,gBAAgBK,YAAYpc,KAAMwc,GAClDtE,EAASzR,EAAO,WAAY,CAC5B+J,MAAShK,EAAQS,GAAGU,OAMxB,MAJiB,KAAbwU,GACFjE,EAAOziB,EAAEgM,KAAK0a,IAEhBnc,KAAKwX,KAAKU,EAAOhI,SACV,GAkBToM,UAAW,SAAU/Q,GAEjB,IAAIkR,EAAK/V,EAAI,CAAC8K,KAAM,MAAOvS,GAAI,YAC1BrK,EAAE,QAAS,CAAC4b,MAAOhK,EAAQS,GAAGI,OAC9BzS,EAAE,WAAY,IAAIa,EAAE+Q,EAAQiI,eAAezO,KAAK0O,MAChDgC,KACA9b,EAAE,YAAYa,EAAEuK,KAAK6V,MAa1B,OAXKrP,EAAQsI,mBAAmB9O,KAAK0O,OAIjC1O,KAAK0O,IAAMlI,EAAQqI,kBAAkB7O,KAAK0O,KAAO,YAErD+N,EAAG/L,KAAK9b,EAAE,WAAY,IAAIa,EAAE+Q,EAAQsI,mBAAmB9O,KAAK0O,MAE5D1O,KAAK2b,eAAe3b,KAAK0c,UAAU3mB,KAAKiK,MAAO,KAC3B,KAAM,KAAM,WAChCA,KAAKwX,KAAKiF,EAAGvM,SACN,GAaX0L,iBAAkB,SAAUrQ,GACxB,GAAIvL,KAAKoT,WAAW,oBAAqB,CACrC,IAAIuJ,EAGAC,EAFUva,KAAKmE,EAAQmH,QAAQpC,IAEbsR,MADJ,yBAMlB,GAJmB,MAAfD,EAAQ,KACRD,EAAkBC,EAAQ,IAG1BD,IAAoB3c,KAAKoT,WAAW,oBAUtC,OARApT,KAAKqY,cAAcrY,KAAK0U,uBACxB1U,KAAK0U,sBAAwB,KACzB1U,KAAK2U,0BACP3U,KAAKqY,cAAcrY,KAAK2U,yBACxB3U,KAAK2U,wBAA0B,MAGjC3U,KAAKoT,WAAa,GACXpT,KAAK6b,iBAAiB,MAGnCrV,EAAQsJ,KAAK,kCAET9P,KAAK+b,iBACP/b,KAAK+b,gBAAgBe,YAIvB9c,KAAKqY,cAAcrY,KAAK0U,uBACxB1U,KAAK0U,sBAAwB,KACzB1U,KAAK2U,0BACL3U,KAAKqY,cAAcrY,KAAK2U,yBACxB3U,KAAK2U,wBAA0B,MAGnC,IAAIoI,EAAyB,GACzBC,EAAU,SAAS5hB,EAAUmQ,GAC7B,KAAOnQ,EAAS4B,QACZgD,KAAKqY,cAAcjd,EAASkf,OAGhC,OADAta,KAAKid,eAAelnB,KAAKiK,KAAzBA,CAA+BuL,IACxB,GAYX,OAVAwR,EAAuBlf,KAAKmC,KAAK2b,eAAe,SAASpQ,GACrDyR,EAAQjnB,KAAKiK,KAAbgd,CAAmBD,EAAwBxR,IAC7CxV,KAAKiK,MAAO,KAAM,kBAAmB,KAAM,OAC7C+c,EAAuBlf,KAAKmC,KAAK2b,eAAe,SAASpQ,GACrDyR,EAAQjnB,KAAKiK,KAAbgd,CAAmBD,EAAwBxR,IAC7CxV,KAAKiK,MAAOwG,EAAQS,GAAGW,OAAQ,WAAY,KAAM,OAGnD5H,KAAKyY,gBAEE,GAYXwE,eAAgB,SAAU1R,GAGtB,IAAIhX,EAAG4b,EACP,IAFAnQ,KAAKmT,SAAW5H,EAEXhX,EAAI,EAAGA,EAAIgX,EAAKG,WAAW1O,OAAQzI,IAEb,UADvB4b,EAAQ5E,EAAKG,WAAWnX,IACduZ,WACN9N,KAAKsT,SAAU,GAGI,YAAnBnD,EAAMrC,WACN9N,KAAKqT,YAAa,GAI1B,IAAKrT,KAAKsT,QAEN,OADAtT,KAAKqW,qBAAqB7P,EAAQ+C,OAAOK,SAAU,OAC5C,EAEP5J,KAAK2b,eAAe3b,KAAKkd,cAAcnnB,KAAKiK,MAAO,KAAM,KACrC,KAAM,gBAE1B,IAAImd,EAAW3W,EAAQsI,mBAAmB9O,KAAK0O,KAWnD,OAVQyO,EACAnd,KAAKwX,KAAK9Q,EAAI,CAAC8K,KAAM,MAAOvS,GAAI,iBACrBrK,EAAE,OAAQ,CAAC4b,MAAOhK,EAAQS,GAAGa,OAC7BlT,EAAE,WAAY,IAAIa,EAAE0nB,GAAUjN,QAEzClQ,KAAKwX,KAAK9Q,EAAI,CAAC8K,KAAM,MAAOvS,GAAI,iBACrBrK,EAAE,OAAQ,CAAC4b,MAAOhK,EAAQS,GAAGa,OAC7BoI,SAGZ,GAYXgN,cAAe,SAAU3R,GAGjB,IAAsDwO,EAF1D,GAAkC,UAA9BxO,EAAK6C,aAAa,QAOlB,OANA5H,EAAQsJ,KAAK,wBACEvE,EAAKmP,qBAAqB,YAC5B1d,OAAS,IAClB+c,EAAYvT,EAAQ2D,eAAeE,UAEvCrK,KAAKqW,qBAAqB7P,EAAQ+C,OAAOK,SAAUmQ,EAAWxO,IACvD,EAIX,IACI6R,EADArnB,EAAOwV,EAAKmP,qBAAqB,QAErC,KAAI3kB,EAAKiH,OAAS,GAqBd,OAFAwJ,EAAQsJ,KAAK,wBACb9P,KAAKqW,qBAAqB7P,EAAQ+C,OAAOK,SAAU,KAAM2B,IAClD,GAnBP6R,EAAUrnB,EAAK,GAAG2kB,qBAAqB,QAC3B1d,OAAS,IACjBgD,KAAK0O,IAAMlI,EAAQmH,QAAQyP,EAAQ,IAE/Bpd,KAAKqT,YACLrT,KAAK2b,eAAe3b,KAAKqd,iBAAiBtnB,KAAKiK,MAC3B,KAAM,KAAM,KAAM,mBAEtCA,KAAKwX,KAAK9Q,EAAI,CAAC8K,KAAM,MAAOvS,GAAI,oBACjBrK,EAAE,UAAW,CAAC4b,MAAOhK,EAAQS,GAAGc,UAChCmI,UAEflQ,KAAKiU,eAAgB,EACrBjU,KAAKqW,qBAAqB7P,EAAQ+C,OAAOM,UAAW,SAsBpEwT,iBAAkB,SAAU9R,GACxB,GAAkC,WAA9BA,EAAK6C,aAAa,QAClBpO,KAAKiU,eAAgB,EACrBjU,KAAKqW,qBAAqB7P,EAAQ+C,OAAOM,UAAW,WACjD,GAAkC,UAA9B0B,EAAK6C,aAAa,QAGzB,OAFA5H,EAAQsJ,KAAK,4BACb9P,KAAKqW,qBAAqB7P,EAAQ+C,OAAOK,SAAU,KAAM2B,IAClD,EAEX,OAAO,GAaXsQ,iBAAkB,SAAUtQ,GAcxB,OAZIvL,KAAKyU,wBACLzU,KAAKqY,cAAcrY,KAAKyU,uBACxBzU,KAAKyU,sBAAwB,MAE7BzU,KAAK2U,0BACL3U,KAAKqY,cAAcrY,KAAK2U,yBACxB3U,KAAK2U,wBAA0B,MAGhC3U,KAAK+b,iBACN/b,KAAK+b,gBAAgBuB,YACvBtd,KAAKqW,qBAAqB7P,EAAQ+C,OAAOK,SAAU,KAAM2B,IAClD,GAgBXmR,UAAW,SAAUnR,GAQjB,MAPkC,WAA9BA,EAAK6C,aAAa,SAClBpO,KAAKiU,eAAgB,EACrBjU,KAAKqW,qBAAqB7P,EAAQ+C,OAAOM,UAAW,OACf,UAA9B0B,EAAK6C,aAAa,UACzBpO,KAAKqW,qBAAqB7P,EAAQ+C,OAAOK,SAAU,KAAM2B,GACzDvL,KAAKsZ,WAAW,2BAEb,GAcXG,oBAAqB,SAAUlH,EAAQpD,GACnC,IAAIuJ,EAAQ,IAAIlS,EAAQ8L,aAAaC,EAAQpD,GAG7C,OAFAuJ,EAAM7G,MAAO,EACb7R,KAAK0T,UAAU7V,KAAK6a,GACbA,GAiBXiD,eAAgB,SAAUxM,EAASvZ,EAAId,EAAM0c,EAAMvS,GAC/C,IAAI2Z,EAAO,IAAIpS,EAAQ+K,QAAQpC,EAASvZ,EAAId,EAAM0c,EAAMvS,GAGxD,OAFA2Z,EAAK/G,MAAO,EACZ7R,KAAK2T,YAAY9V,KAAK+a,GACfA,GAYXc,qBAAsB,WAMlB,OALAlT,EAAQsJ,KAAK,mCACb9P,KAAKqW,qBAAqB7P,EAAQ+C,OAAOW,YAAa,MACtDlK,KAAKgT,OAAO0G,uBAEZ1Z,KAAK6Z,iBACE,GASXhF,QAAS,WAML,IALA,IAAItgB,EAAGmkB,EAAckC,EAKd5a,KAAK0T,UAAU1W,OAAS,GAC3BgD,KAAKuT,cAAc1V,KAAKmC,KAAK0T,UAAU4G,OAI3C,KAAOta,KAAKwT,aAAaxW,OAAS,GAC9B0b,EAAQ1Y,KAAKwT,aAAa8G,OAC1B/lB,EAAIyL,KAAKuT,cAAcjV,QAAQoa,KACtB,GACL1Y,KAAKuT,cAAcjW,OAAO/I,EAAG,GAKrC,IAAIgpB,GAAM,IAAI9K,MAAOC,UAErB,IADAkI,EAAU,GACLrmB,EAAI,EAAGA,EAAIyL,KAAKuT,cAAcvW,OAAQzI,IACvCmkB,EAAQ1Y,KAAKuT,cAAchf,IACvByL,KAAKiU,eAAkByE,EAAM7G,OACrB6G,EAAMlG,WAAakG,EAAMnG,OACrBgL,GAAO,EACX7E,EAAMrG,OACNuI,EAAQ/c,KAAK6a,GAGjBkC,EAAQ/c,KAAK6a,IAIzB1Y,KAAKuT,cAAgBqH,EAErBhD,aAAa5X,KAAK+T,cAElB/T,KAAKgT,OAAO6B,UAGR7U,KAAKkU,YAELlU,KAAK+T,aAAenU,WAAW,WAC3BI,KAAK6U,WACP9e,KAAKiK,MAAO,QAqC1BwG,EAAQgX,cAAgB,SAAS1oB,EAAMonB,EAAeV,GAIpDxb,KAAKlL,KAAOA,EAIZkL,KAAKkc,cAAgBA,EAkBrBlc,KAAKwb,SAAWA,GAGlBhV,EAAQgX,cAAcrnB,UAAY,CAoBhC+G,KAAM,SAASugB,GACb,OAAO,GAUTzB,QAAS,SAASyB,GAChBzd,KAAK0d,YAAcD,GAerBrB,YAAa,SAASqB,EAAYjB,GAChC,MAAM,IAAIte,MAAM,6CAOlBof,UAAW,WACTtd,KAAK0d,YAAc,MAMrBZ,UAAW,WACT9c,KAAK0d,YAAc,OAqBvBlX,EAAQqS,cAAgB,aACxBrS,EAAQqS,cAAc1iB,UAAY,IAAIqQ,EAAQgX,cAAc,aAAa,EAAO,IAEhFhX,EAAQqS,cAAc1iB,UAAU+G,KAAO,SAASugB,GAC5C,OAA8B,OAAvBA,EAAWxH,SAOtBzP,EAAQ0S,UAAY,aACpB1S,EAAQ0S,UAAU/iB,UAAY,IAAIqQ,EAAQgX,cAAc,SAAS,EAAM,IAEvEhX,EAAQ0S,UAAU/iB,UAAU+G,KAAO,SAASugB,GACxC,OAA8B,OAAvBA,EAAWxH,SAGtBzP,EAAQ0S,UAAU/iB,UAAUimB,YAAc,SAASqB,GAC/C,IAAIE,EAAWF,EAAWvH,QAK1B,OAJAyH,GAAsB,KACtBA,GAAsBF,EAAWxH,QACjC0H,GAAsB,KACtBA,GAAsBF,EAAW5H,KAC1BhP,EAAMpB,SAASkY,IAO1BnX,EAAQ2S,SAAW,aACnB3S,EAAQ2S,SAAShjB,UAAY,IAAIqQ,EAAQgX,cAAc,eAAe,EAAM,IAE5EhX,EAAQ2S,SAAShjB,UAAU+G,KAAO,SAASugB,GACvC,OAA8B,OAAvBA,EAAWxH,SAGtBzP,EAAQ2S,SAAShjB,UAAUimB,YAAc,SAASqB,EAAYjB,EAAWoB,GACvE,IAAIC,EAASD,GAAehZ,EAAIS,UAA0B,WAAhBvE,KAAK2U,UAC3CkI,EAAW,KAAO9W,EAAMpB,SAASgY,EAAWxH,SAoEhD,OAnEA0H,GAAY,MACZA,GAAYE,EACZJ,EAAWrK,WAAWyK,OAASA,EAC/BJ,EAAWrK,WAAW,6BAA+BuK,EAErDA,EAAW,MAAQA,EAEnB3d,KAAKoc,YAAc,SAAUqB,EAAYjB,GASvC,IARA,IAAIsB,EAAOC,EAAMC,EAAMC,EAAIC,EAAGC,EAAO5pB,EAAG6M,EAAGyU,EACvCuI,EAAWC,EAAWC,EACtBC,EAAe,UACfC,EAAcf,EAAWrK,WAAW,6BAA+B,IACrEoJ,EAAY,IACVqB,EAASJ,EAAWrK,WAAWyK,OAC/BY,EAAc,wBAEXjC,EAAUK,MAAM4B,IAAc,CACnC,IAAI7B,EAAUJ,EAAUK,MAAM4B,GAE9B,OADAjC,EAAYA,EAAUrf,QAAQyf,EAAQ,GAAI,IAClCA,EAAQ,IAChB,IAAK,IACHkB,EAAQlB,EAAQ,GAChB,MACF,IAAK,IACHmB,EAAOnB,EAAQ,GACf,MACF,IAAK,IACHoB,EAAOpB,EAAQ,IAKnB,GAAIkB,EAAMY,OAAO,EAAGb,EAAO7gB,UAAY6gB,EAErC,OADAJ,EAAWrK,WAAa,GACjBqK,EAAW5B,mBAWpB,IAPA2C,GADAD,GAAgB,KAAOT,EAGvBC,EAAO1b,KAAK0b,GACZA,GAAQ,UAERlI,EAAOhP,EAAMpB,SAASgY,EAAW5H,MACjCoI,EAAKE,EAAQ3b,EAAKe,eAAesS,EAAMkI,GAClCxpB,EAAI,EAAGA,EAAIypB,EAAMzpB,IAAK,CAEzB,IADA2pB,EAAI1b,EAAKe,eAAesS,EAAMrT,EAAK4B,SAAS+Z,IACvC/c,EAAI,EAAGA,EAAI,EAAGA,IACjB6c,EAAG7c,IAAM8c,EAAE9c,GAEb+c,EAAQD,EASV,IAPAD,EAAKzb,EAAK4B,SAAS6Z,GAEnBG,EAAY5b,EAAKe,eAAe0a,EAAI,cACpCI,EAAY7b,EAAKkC,cAAcuZ,EAAI,cACnCK,EAAkB9b,EAAKe,eAAef,EAAKmC,SAASnC,EAAK4B,SAASga,IAAaI,GAC/Ef,EAAWrK,WAAW,oBAAsB5Q,EAAKgC,cAAc6Z,EAAWG,GAErEpd,EAAI,EAAGA,EAAI,EAAGA,IACjBgd,EAAUhd,IAAMkd,EAAgBld,GAIlC,OADAmd,GAAgB,MAAQ9c,KAAKe,EAAK4B,SAASga,KAE3CroB,KAAKiK,MAEA2d,GAOTnX,EAAQuS,QAAU,aAClBvS,EAAQuS,QAAQ5iB,UAAY,IAAIqQ,EAAQgX,cAAc,cAAc,EAAO,IAE3EhX,EAAQuS,QAAQ5iB,UAAU+G,KAAO,SAASugB,GACtC,OAA8B,OAAvBA,EAAWxH,SAYtBzP,EAAQuS,QAAQ5iB,UAAUwoB,OAAS,SAAUza,GACzC,MAAO,IAAMA,EAAI/G,QAAQ,MAAO,QAAQA,QAAQ,KAAM,OAAS,KAInEqJ,EAAQuS,QAAQ5iB,UAAUimB,YAAc,SAASqB,EAAYjB,EAAWoB,GAStE,IARA,IAMIhB,EANA6B,EAAc,mCACdZ,EAASD,GAAehZ,EAAIS,UAAU,GAAsB,WAAhBvE,KAAK2U,UACjDmJ,EAAQ,GACRC,EAAO,KACPf,EAAQ,GAILtB,EAAUK,MAAM4B,IAIrB,OAHA7B,EAAUJ,EAAUK,MAAM4B,GAC1BjC,EAAYA,EAAUrf,QAAQyf,EAAQ,GAAI,IAC1CA,EAAQ,GAAKA,EAAQ,GAAGzf,QAAQ,WAAY,MACpCyf,EAAQ,IAChB,IAAK,QACHgC,EAAQhC,EAAQ,GAChB,MACF,IAAK,QACHkB,EAAQlB,EAAQ,GAChB,MACF,IAAK,MACGA,EAAQ,GACd,MACF,IAAK,OACHiC,EAAOjC,EAAQ,GAKnB,IAAIkC,EAAarB,EAAWtH,SAAW,IAAMsH,EAAWvX,OAC3C,OAAT2Y,IACFC,EAAaA,EAAa,IAAMD,GAGlC,IAAIE,EAAOlY,EAAMpB,SAASgY,EAAWxH,QAAU,IAAM2I,EAAQ,IAAM5e,KAAK0d,YAAY7H,MAChFmJ,EAAKpa,EAAIf,KAAKkb,GAAQ,IAAMjB,EAAQ,IAAMD,EAC1CoB,EAAK,gBAAkBH,EAEvBP,EAAe,GAiBnB,OAhBAA,GAAgB,iBAChBA,GAAgB,YAAcve,KAAK2e,OAAO9X,EAAMpB,SAASgY,EAAWxH,UAAY,IAChFsI,GAAgB,SAAWve,KAAK2e,OAAOC,GAAS,IAChDL,GAAgB,SAAWve,KAAK2e,OAAOb,GAAS,IAChDS,GAAgB,eAChBA,GAAgB,UAAYve,KAAK2e,OAAOd,GAAU,IAClDU,GAAgB,cAAgBve,KAAK2e,OAAOG,GAAc,IAC1DP,GAAgB,YAAc3Z,EAAIS,UAAUT,EAAIS,UAAU2Z,GAAM,IACpBlB,EAAQ,aACRD,EAAS,SACTjZ,EAAIS,UAAU4Z,IAAO,IACjEV,GAAgB,WAEhBve,KAAKoc,YAAc,WACf,MAAO,IAEJmC,GAOT/X,EAAQwS,gBAAkB,aAC1BxS,EAAQwS,gBAAgB7iB,UAAY,IAAIqQ,EAAQgX,cAAc,eAAe,EAAM,IAEnFhX,EAAQwS,gBAAgB7iB,UAAU+G,KAAO,SAASugB,GAC9C,OAA2B,OAApBA,EAAW5H,MAGtBrP,EAAQwS,gBAAgB7iB,UAAUimB,YAAc,SAASqB,GACrD,IAAIE,EAAW,KAWf,OAV2B,OAAvBF,EAAWxH,UACb0H,EAAWA,EAAW,KAAOF,EAAWvH,SAE1CyH,GAAsB,IACtBA,GAAsB,IACtBA,GAAsB,eACtBA,GAAsBF,EAAW5H,KACjC8H,GAAsB,IACtBA,GAAsB,IAEf9W,EAAMpB,SAASkY,IAY1BnX,EAAQsS,aAAe,aACvBtS,EAAQsS,aAAa3iB,UAAY,IAAIqQ,EAAQgX,cAAc,YAAY,EAAM,IAE7EhX,EAAQsS,aAAa3iB,UAAUimB,YAAc,SAASqB,GAQlD,OAAOA,EAAWxH,UAAYwH,EAAWvH,QAAU,GAAKuH,EAAWvH,SAOvE1P,EAAQyS,YAAc,aACtBzS,EAAQyS,YAAY9iB,UAAY,IAAIqQ,EAAQgX,cAAc,YAAY,EAAM,IAE5EhX,EAAQyS,YAAY9iB,UAAU+G,KAAO,SAAUugB,GAC3C,OAA2B,OAApBA,EAAW5H,MAGtBrP,EAAQyS,YAAY9iB,UAAUimB,YAAc,SAAUqB,GAClD,IAAIE,EAAW,KAOf,OAN2B,OAAvBF,EAAWxH,UACX0H,GAAsBF,EAAWvH,SAErCyH,GAAsB,KACtBA,GAAsBF,EAAW5H,KAE1BhP,EAAMpB,SAASkY,IAInB,CACHnX,QAAmBA,EACnBC,OAAmBA,EACnBC,IAAmBA,EACnBC,KA/hHJ,SAAcG,GAAS,OAAO,IAAIN,EAAQO,QAAQ,UAAWD,IAgiHzDF,MAAmBA,EACnBpE,KAAmBA,EACnBoC,IAAmBA,EACnBJ,cAAmBhC,EAAKgC,cACxBC,SAAmBjC,EAAKiC,SACxBC,cAAmBlC,EAAKkC,cACxBC,SAAmBnC,EAAKmC,YAc3B,SAAU9Q,EAAMC,GACb,GAAsB,mBAAXG,GAAyBA,EAAOC,IACvCD,EAAO,eAAe,CAAC,gBAAiB,SAAUirB,GAC9C,OAAOprB,EACHorB,EAAK1Y,QACL0Y,EAAKzY,eAGV,GAAuB,WAAnBhH,EAAO1L,GAAsB,CACpC,IAAImrB,EAAOnkB,EAAQ,UAEnB/G,EAAOD,QAAUD,EAAQorB,EAAK1Y,QAAS0Y,EAAKzY,aAGrC3S,EAAQ0S,QAASC,QAd/B,CAgBCzG,EAAM,SAAUwG,EAASC,GA85B3B,OA14BAD,EAAQ2Y,QAAU,SAAU5T,EAAMrL,EAAMuW,EAAK2I,GACzCpf,KAAKf,KAAOuH,EAAQ4J,WACpBpQ,KAAKqf,QAAU9T,EACfvL,KAAKwD,KAAOgD,EAAQwJ,UAAUzE,GAG9BvL,KAAKsf,SAAWpf,EAChBF,KAAKE,KAAOA,EACZF,KAAKyW,IAAMA,EACXzW,KAAKuf,KAAOC,IACZxf,KAAKof,MAAQA,GAAS,EACtBpf,KAAKyf,OAAQ,EACbzf,KAAK0f,KAAO,KAEZ1f,KAAK2f,IAAM,WACP,OAAK3f,KAAKuf,MACA,IAAI9M,KACAzS,KAAKuf,MAAQ,IAFF,GAI7Bvf,KAAK4f,SAAW,WACZ,OAAK5f,KAAK0f,MACA,IAAIjN,KACAzS,KAAK0f,MAAQ,IAFF,GAI7B1f,KAAK6f,IAAM7f,KAAK8f,WAGpBtZ,EAAQ2Y,QAAQhpB,UAAY,CAcxB4pB,YAAa,WACT,IAAInT,EAAO,KACX,GAAI5M,KAAK6f,IAAIG,aAAehgB,KAAK6f,IAAIG,YAAYC,iBAE7C,GAAqB,iBADrBrT,EAAO5M,KAAK6f,IAAIG,YAAYC,iBACnBnU,QAKL,MAJAtF,EAAQoJ,MAAM,6BACdpJ,EAAQoJ,MAAM,iBAAmB5P,KAAK6f,IAAItB,cAC1C/X,EAAQoJ,MAAM,gBACApJ,EAAQwJ,UAAUhQ,KAAK6f,IAAIG,cACnC,mBAEP,GAAIhgB,KAAK6f,IAAItB,aAAc,CAI9B,GAFA/X,EAAQqJ,MAAM,mFACdjD,GAAO,IAAIW,WAAYC,gBAAgBxN,KAAK6f,IAAItB,aAAc,mBAAmB0B,iBAE7E,MAAM,IAAI/hB,MAAM,8BACb,GAAI0O,EAAKsT,cAAc,eAG1B,MAFA1Z,EAAQoJ,MAAM,8BAAgChD,EAAKsT,cAAc,eAAeC,aAChF3Z,EAAQoJ,MAAM,iBAAmB5P,KAAK6f,IAAItB,cACpC,YAGd,OAAO3R,GAWXkT,QAAS,WACL,IAAID,EAAM,KAWV,OAVI1rB,OAAOisB,gBACPP,EAAM,IAAIO,gBACFC,kBACJR,EAAIQ,iBAAiB,2BAElBlsB,OAAOuY,gBACdmT,EAAM,IAAInT,cAAc,sBAG5BmT,EAAIS,mBAAqBtgB,KAAKE,KAAKnK,KAAK,KAAMiK,MACvC6f,IA4BfrZ,EAAQ0M,KAAO,SAASuK,GACpBzd,KAAKugB,MAAQ9C,EAEbzd,KAAKyW,IAAM3V,KAAKE,MAAsB,WAAhBF,KAAK2U,UAE3BzV,KAAKwW,IAAM,KAGXxW,KAAK+V,KAAO,EACZ/V,KAAK8V,KAAO,GACZ9V,KAAK7L,OAAS,EACd6L,KAAKwgB,OAAS,EACdxgB,KAAKygB,WAAa,KAElBzgB,KAAK0gB,oBAAsB,KAE3B1gB,KAAKmV,UAAY,IAGrB3O,EAAQ0M,KAAK/c,UAAY,CAYrBkkB,MAAO,KAQPsG,WAAY,WACR,IAAI5F,EAAWtU,EAAO,OAAQ,CAC1BgQ,IAAKzW,KAAKyW,MACVjG,MAAOhK,EAAQS,GAAGC,WAQtB,OANiB,OAAblH,KAAKwW,KACLuE,EAASjU,MAAM,CAAC0P,IAAKxW,KAAKwW,MAE1BxW,KAAKugB,MAAM9O,QAAQmP,WAAa5gB,KAAKugB,MAAM1J,4BAC3C7W,KAAK6gB,gBAEF9F,GAQX7F,OAAQ,WACJlV,KAAKyW,IAAM3V,KAAKE,MAAsB,WAAhBF,KAAK2U,UAC3BzV,KAAKwW,IAAM,KACXxW,KAAKwgB,OAAS,EACVxgB,KAAKugB,MAAM1J,4BACX1iB,OAAO6iB,eAAeE,WAAW,wBAGrClX,KAAKugB,MAAMhJ,aAAavX,KAAKyW,MAQjCH,SAAU,SAAUR,EAAMC,EAAMC,GAC5BhW,KAAK8V,KAAOA,GAAQ9V,KAAK8V,KACzB9V,KAAK+V,KAAOA,GAAQ/V,KAAK+V,KACzB/V,KAAKwgB,OAAS,EAGd,IAAIzX,EAAO/I,KAAK2gB,aAAa7Z,MAAM,CAC/ByV,GAAIvc,KAAKugB,MAAMra,OACf4a,WAAY,KACZhL,KAAM9V,KAAK8V,KACXC,KAAM/V,KAAK+V,KACXgL,QAAS,0BACTC,IAAK,MACLC,eAAgB,MAChBC,aAAc1a,EAAQS,GAAGE,OAG1B6O,GACCjN,EAAKjC,MAAM,CACPkP,MAAOA,IAIf,IAAI6E,EAAc7a,KAAKugB,MAAM1F,YAE7B7a,KAAKmV,UAAUtX,KACX,IAAI2I,EAAQ2Y,QAAQpW,EAAKmH,OACLlQ,KAAKmhB,sBAAsBprB,KACvBiK,KAAM6a,EAAY9kB,KAAKiK,KAAKugB,QAChCxX,EAAKmH,OAAO9B,aAAa,SACjDpO,KAAKohB,4BA2BTzK,QAAS,SAAUjI,EAAK8H,EAAKC,EAAKrX,EAAU0W,EAAMC,EAAMW,GACpD1W,KAAKugB,MAAM7R,IAAMA,EACjB1O,KAAKwW,IAAMA,EACXxW,KAAKyW,IAAMA,EAEXzW,KAAKugB,MAAMnK,iBAAmBhX,EAE9BY,KAAKugB,MAAMra,OAASM,EAAQmI,iBAAiB3O,KAAKugB,MAAM7R,KAExD1O,KAAKugB,MAAMtM,eAAgB,EAC3BjU,KAAKugB,MAAMrM,WAAY,EAEvBlU,KAAK8V,KAAOA,GAAQ9V,KAAK8V,KACzB9V,KAAK+V,KAAOA,GAAQ/V,KAAK+V,KACzB/V,KAAK7L,OAASuiB,GAAQ1W,KAAK7L,OAE3B6L,KAAKugB,MAAMlK,qBAAqB7P,EAAQ+C,OAAOS,SAAU,OAsB7D8M,SAAU,SAAUpI,EAAKtP,EAAU0W,EAAMC,EAAMW,GAC3C,IAAI2K,EAAUtK,KAAKuK,MAAMntB,OAAO6iB,eAAeuK,QAAQ,yBACvD,KAAI,MAAOF,GAEAA,EAAQ5K,KACR4K,EAAQ7K,KACR6K,EAAQ3S,MACH,MAAOA,GAEPlI,EAAQqI,kBAAkBwS,EAAQ3S,OAASlI,EAAQqI,kBAAkBH,IAGnC,OAAhClI,EAAQiI,eAAeC,IAAmBlI,EAAQmI,iBAAiB0S,EAAQ3S,OAASA,IAMlG,KAAM,CAAE5Z,KAAM,sBAAuBua,QAAS,qCAH9CrP,KAAKugB,MAAMjM,UAAW,EACtBtU,KAAK2W,QAAQ0K,EAAQ3S,IAAK2S,EAAQ7K,IAAK6K,EAAQ5K,IAAKrX,EAAU0W,EAAMC,EAAMW,IAalFmK,cAAe,WACP7gB,KAAKugB,MAAMtM,cACPjU,KAAKugB,MAAM7R,KAAO1O,KAAKyW,KAAOzW,KAAKwW,KACnCriB,OAAO6iB,eAAeC,QAAQ,uBAAwBF,KAAKyK,UAAU,CACjE9S,IAAO1O,KAAKugB,MAAM7R,IAClB+H,IAAOzW,KAAKyW,IACZD,IAAOxW,KAAKwW,OAIpBriB,OAAO6iB,eAAeE,WAAW,yBAWzC2D,YAAa,SAAUE,GACnB,IACIP,EAAMC,EADNgH,EAAM1G,EAAS3M,aAAa,QAEhC,GAAY,OAARqT,GAAwB,cAARA,EAchB,OAZAjH,EAAOO,EAAS3M,aAAa,aAC7B5H,EAAQoJ,MAAM,2BAA6B4K,GAC3CC,EAAWM,EAASL,qBAAqB,YAC5B,OAATF,GACa,wBAATA,GAAkCC,EAASzd,OAAS,IACpDwd,EAAO,YAEXxa,KAAKugB,MAAMlK,qBAAqB7P,EAAQ+C,OAAOG,SAAU8Q,IAEzDxa,KAAKugB,MAAMlK,qBAAqB7P,EAAQ+C,OAAOG,SAAU,WAE7D1J,KAAKugB,MAAM1G,cAAcW,GAClBhU,EAAQ+C,OAAOG,SAKrB1J,KAAKwW,MACNxW,KAAKwW,IAAMuE,EAAS3M,aAAa,QAErC,IAAIsI,EAAOqE,EAAS3M,aAAa,YAC7BsI,IAAQ1W,KAAK7L,OAASutB,SAAShL,EAAM,KACzC,IAAIX,EAAOgF,EAAS3M,aAAa,QAC7B2H,IAAQ/V,KAAK+V,KAAO2L,SAAS3L,EAAM,KACvC,IAAID,EAAOiF,EAAS3M,aAAa,QAC7B0H,IAAQ9V,KAAK8V,KAAO4L,SAAS5L,EAAM,KACvC,IAAI2K,EAAa1F,EAAS3M,aAAa,cACnCqS,IAAczgB,KAAKygB,WAAaiB,SAASjB,EAAY,MAS7D9G,YAAa,SAAUH,GACnBxZ,KAAK2hB,eAAenI,IAQxBK,cAAe,WACX7Z,KAAKwW,IAAM,KACXxW,KAAKyW,IAAM3V,KAAKE,MAAsB,WAAhBF,KAAK2U,UACvBzV,KAAKugB,MAAM1J,4BACX1iB,OAAO6iB,eAAeE,WAAW,wBAGrClX,KAAKugB,MAAMhJ,aAAavX,KAAKyW,MASjC8D,YAAa,WACT,OAAiC,IAA1Bva,KAAKmV,UAAUnY,QAS1B4kB,2BAA4B,SAAU1mB,GAClC,IACI2mB,EADAC,EAAY9hB,KAAK+hB,kBAAkB7mB,IAEvC2mB,EAAe7hB,KAAKugB,MAAM3M,sBAAsBC,KAAKiO,KAEjDD,EAAantB,KAAKsL,KAAM8hB,IAchCE,UAAW,SAAUF,GACjB9hB,KAAKwgB,SACLha,EAAQuJ,KAAK,4BAA8B+R,EAC9B,uBAAyB9hB,KAAKwgB,QACvCxgB,KAAKwgB,OAAS,GACdxgB,KAAKugB,MAAM7G,wBASnB0B,kBAAmB,SAAUhc,GACzBoH,EAAQuJ,KAAK,gGAGT3Q,EADAA,EACWA,EAASrJ,KAAKiK,KAAKugB,OAEnBvgB,KAAKugB,MAAM1F,YAAY9kB,KAAKiK,KAAKugB,OAEhD,IAAIxX,EAAO/I,KAAK2gB,aAChB3gB,KAAKmV,UAAUtX,KACX,IAAI2I,EAAQ2Y,QACRpW,EAAKmH,OACLlQ,KAAKmhB,sBAAsBprB,KAAKiK,KAAMZ,GACtC2J,EAAKmH,OAAO9B,aAAa,SAGjCpO,KAAKohB,4BAQT1H,qBAAsB,WAClB1Z,KAAK4Z,qBAMTA,kBAAmB,WAEf,IADA,IAAI1e,EACG8E,KAAKmV,UAAUnY,OAAS,IAC3B9B,EAAM8E,KAAKmV,UAAUmF,OACjBmF,OAAQ,EACZvkB,EAAI2kB,IAAIJ,QAGRvkB,EAAI2kB,IAAIS,mBAAqB,cASrCzL,QAAS,WACL,IAAIrR,EAAOxD,KAAKugB,MAAMhM,MAStB,GAPIvU,KAAKugB,MAAMtM,eAA2C,IAA1BjU,KAAKmV,UAAUnY,QAC3B,IAAhBwG,EAAKxG,SAAiBgD,KAAKugB,MAAMpM,gBACjC3N,EAAQsJ,KAAK,wDAEbtM,EAAK3F,KAAK,QAGVmC,KAAKugB,MAAMlM,OAAf,CAIA,GAAIrU,KAAKmV,UAAUnY,OAAS,GAAKwG,EAAKxG,OAAS,EAAG,CAE9C,IADA,IAAI+L,EAAO/I,KAAK2gB,aACPpsB,EAAI,EAAGA,EAAIiP,EAAKxG,OAAQzI,IACb,OAAZiP,EAAKjP,KACW,YAAZiP,EAAKjP,GACLwU,EAAKjC,MAAM,CACPyV,GAAIvc,KAAKugB,MAAMra,OACf4a,WAAY,KACZmB,eAAgB,OAChBf,aAAc1a,EAAQS,GAAGE,OAG7B4B,EAAK+H,MAAMtN,EAAKjP,IAAImc,aAIzB1Q,KAAKugB,MAAMhM,MAClBvU,KAAKugB,MAAMhM,MAAQ,GACnBvU,KAAKmV,UAAUtX,KACX,IAAI2I,EAAQ2Y,QAAQpW,EAAKmH,OACLlQ,KAAKmhB,sBAAsBprB,KACvBiK,KAAMA,KAAKugB,MAAMrG,UAAUnkB,KAAKiK,KAAKugB,QACzCxX,EAAKmH,OAAO9B,aAAa,SACjDpO,KAAKohB,2BAGT,GAAIphB,KAAKmV,UAAUnY,OAAS,EAAG,CAC3B,IAAIklB,EAAeliB,KAAKmV,UAAU,GAAGwK,MACN,OAA3B3f,KAAKmV,UAAU,GAAGuK,MACd1f,KAAKmV,UAAU,GAAGyK,WAClB9e,KAAKE,MAAMwF,EAAQ4E,kBAAoBpL,KAAK8V,OAC5C9V,KAAKohB,2BAITc,EAAephB,KAAKE,MAAMwF,EAAQ2E,QAAUnL,KAAK8V,QACjDtP,EAAQuJ,KAAK,WACA/P,KAAKmV,UAAU,GAAGlW,GAClB,oBAAsB6B,KAAKE,MAAMwF,EAAQ2E,QAAUnL,KAAK8V,MACxD,gCACb9V,KAAKohB,+BAcjBW,kBAAmB,SAAU7mB,EAAKinB,GAC9B,IAAIL,EACJ,GAA2B,IAAvB5mB,EAAI2kB,IAAIuC,WACR,IACIN,EAAY5mB,EAAI2kB,IAAI/F,OACtB,MAAO9a,GAGLwH,EAAQoJ,MACJ,mEACgBkS,GAM5B,YAH0B,IAAfA,IACPA,EAA2B,iBAARK,EAAmBA,EAAM,GAEzCL,GAeXX,sBAAuB,SAAUjhB,EAAMhF,GAGnC,GAFAsL,EAAQqJ,MAAM,cAAc3U,EAAI+D,GAAG,IAAI/D,EAAIkkB,MAC7B,qBAAqBlkB,EAAI2kB,IAAIuC,YACvClnB,EAAIukB,MACJvkB,EAAIukB,OAAQ,OAGhB,GAA2B,IAAvBvkB,EAAI2kB,IAAIuC,WAAZ,CAIA,IAAIN,EAAY9hB,KAAK+hB,kBAAkB7mB,GAEvC,GADA8E,KAAK0gB,oBAAsBxlB,EAAI2kB,IAAIwC,wBAC/BriB,KAAKmU,eAAiB2N,GAAa,IAGnC,OAFA9hB,KAAKgiB,UAAUF,QACf9hB,KAAK4hB,2BAA2B1mB,GAIpC,IAAIonB,EAAgBR,EAAY,GAAKA,EAAY,IAC7CS,EAAmBrnB,EAAIkkB,MAAQpf,KAAKugB,MAAM3L,WAO9C,IANI0N,GAAiBC,KAEjBviB,KAAKwiB,eAAetnB,GACpBsL,EAAQqJ,MAAM,cAAc3U,EAAI+D,GAAG,2BAGrB,MAAd6iB,EAAmB,CAEnB,IAAIW,EAAUziB,KAAKmV,UAAU,KAAOja,GACtB8E,KAAKmV,UAAU,KAAOja,GAM/BunB,GAAUziB,KAAKmV,UAAUnY,OAAS,GAC/BgD,KAAKmV,UAAU,GAAGwK,MAAQ7e,KAAKE,MAAMwF,EAAQ4E,kBAAoBpL,KAAK8V,QAC1E9V,KAAK0iB,gBAAgB,GAEzB1iB,KAAKugB,MAAMhJ,aAAa1W,OAAO3F,EAAIub,KAAO,GAC1CjQ,EAAQqJ,MAAM,cAAc3U,EAAI+D,GAAG,IAAI/D,EAAIkkB,MAAM,YACjDlf,EAAKhF,GACL8E,KAAKwgB,OAAS,OACO,IAAdsB,GACCA,GAAa,KAAOA,EAAY,KACjCA,GAAa,MAEpBtb,EAAQoJ,MAAM,cAAc1U,EAAI+D,GAAG,IAAI/D,EAAIkkB,MAAM,UAAU0C,EAAU,aACrE9hB,KAAKgiB,UAAUF,GACf9hB,KAAK4hB,2BAA2B1mB,GAC5B4mB,GAAa,KAAOA,EAAY,MAChC9hB,KAAKugB,MAAMlK,qBAAqB7P,EAAQ+C,OAAOQ,cAAe,MAC9D/J,KAAKugB,MAAM1G,kBAGfrT,EAAQoJ,MAAM,cAAc1U,EAAI+D,GAAG,IAAI/D,EAAIkkB,MAAM,UAAU0C,EAAU,aAGpEQ,GAAkBC,EAEZA,IAAqBviB,KAAKugB,MAAMrM,WACvClU,KAAKugB,MAAMlK,qBAAqB7P,EAAQ+C,OAAOG,SAAU,aAFzD1J,KAAKohB,6BAebuB,gBAAiB,SAAUpuB,GACvB,IAAIquB,EAAO5iB,KACP9E,EAAM8E,KAAKmV,UAAU5gB,GACrButB,EAAY9hB,KAAK+hB,kBAAkB7mB,GAAM,GAG7C,GAAIA,EAAIkkB,MAAQpf,KAAKugB,MAAM3L,WACvB5U,KAAKugB,MAAM7G,2BADf,CAKA,IAAIwI,EAAehnB,EAAIykB,MACnBkD,GAAmBzgB,MAAM8f,IACPA,EAAephB,KAAKE,MAAMwF,EAAQ2E,QAAUnL,KAAK8V,MACnEgN,EAAiC,OAAb5nB,EAAIwkB,MACJxkB,EAAI0kB,WAAa9e,KAAKE,MAAMwF,EAAQ4E,kBAAoBpL,KAAK8V,MACjFiN,EAA0D,IAAvB7nB,EAAI2kB,IAAIuC,aACPN,EAAY,GAAKA,GAAa,KAkBtE,IAjBIe,GAAkBC,GAClBC,KACID,GACAtc,EAAQoJ,MAAM,WAAa5P,KAAKmV,UAAU5gB,GAAG0K,GAC/B,sCAElB/D,EAAIukB,OAAQ,EACZvkB,EAAI2kB,IAAIJ,QAERvkB,EAAI2kB,IAAIS,mBAAqB,aAC7BtgB,KAAKmV,UAAU5gB,GAAK,IAAIiS,EAAQ2Y,QAAQjkB,EAAImkB,QACJnkB,EAAIokB,SACJpkB,EAAIub,IACJvb,EAAIkkB,OAC5ClkB,EAAM8E,KAAKmV,UAAU5gB,IAGE,IAAvB2G,EAAI2kB,IAAIuC,WAAkB,CAC1B5b,EAAQqJ,MAAM,cAAc3U,EAAI+D,GAAG,IAAI/D,EAAIkkB,MAAM,YAEjD,IACI,IAAI4D,EAAchjB,KAAKugB,MAAM9O,QAAQuR,aAAe,0BACpD9nB,EAAI2kB,IAAIoD,KAAK,OAAQjjB,KAAKugB,MAAM1N,SAAS7S,KAAKugB,MAAM9O,QAAQyR,WACpB,IAA7BhoB,EAAI2kB,IAAIsD,kBAEfjoB,EAAI2kB,IAAIsD,iBAAiB,eAAgBH,GAEzChjB,KAAKugB,MAAM9O,QAAQ2R,kBACnBloB,EAAI2kB,IAAIuD,iBAAkB,GAEhC,MAAOC,GAOL,OANA7c,EAAQoJ,MAAM,oBAAsByT,EAAG5iB,YAClCT,KAAKugB,MAAMrM,WACZlU,KAAKugB,MAAMlK,qBACH7P,EAAQ+C,OAAOG,SAAU,oBAErC1J,KAAKugB,MAAMjH,aAMf,IAAIgK,EAAW,WAEX,GADApoB,EAAIqkB,KAAO,IAAI9M,KACXmQ,EAAKrC,MAAM9O,QAAQ8R,cAAc,CACjC,IAAIC,EAAUZ,EAAKrC,MAAM9O,QAAQ8R,cACjC,IAAK,IAAIE,KAAUD,EACXA,EAAQptB,eAAeqtB,IACvBvoB,EAAI2kB,IAAIsD,iBAAiBM,EAAQD,EAAQC,IAIrDvoB,EAAI2kB,IAAIrI,KAAKtc,EAAIsI,OAKrB,GAAItI,EAAIkkB,MAAQ,EAAG,CAGf,IAAIsE,EAC6C,IADnC5iB,KAAK6iB,IAAI7iB,KAAKE,MAAMwF,EAAQ2E,QAAUnL,KAAK8V,MAClChV,KAAK8iB,IAAI1oB,EAAIkkB,MAAO,IAC3Cxf,WAAW,WAEP0jB,KACDI,QAEHJ,IAGJpoB,EAAIkkB,QAEApf,KAAKugB,MAAMnJ,YAAc5Q,EAAQoM,WAAWzc,UAAUihB,YAClDlc,EAAImkB,QAAQvR,WAAa9N,KAAKqa,OAASnf,EAAImkB,QAAQ3T,WAAW1O,OAC9DgD,KAAKugB,MAAMnJ,UAAUlc,EAAImkB,QAAQ3T,WAAW,IAE5C1L,KAAKugB,MAAMnJ,UAAUlc,EAAImkB,UAG7Brf,KAAKugB,MAAMjJ,YAAc9Q,EAAQoM,WAAWzc,UAAUmhB,WACtDtX,KAAKugB,MAAMjJ,UAAUpc,EAAIsI,WAG7BgD,EAAQqJ,MAAM,qBACO,IAANtb,EAAU,QAAU,UACrB,8BACA2G,EAAI2kB,IAAIuC,cAU9BI,eAAgB,SAAUtnB,GAEtB,IAAI3G,EACJ,IAFAiS,EAAQqJ,MAAM,oBAETtb,EAAIyL,KAAKmV,UAAUnY,OAAS,EAAGzI,GAAK,EAAGA,IACpC2G,IAAQ8E,KAAKmV,UAAU5gB,IACvByL,KAAKmV,UAAU7X,OAAO/I,EAAG,GAIjC2G,EAAI2kB,IAAIS,mBAAqB,aAC7BtgB,KAAKohB,4BASTsB,gBAAiB,SAAUnuB,GACvB,IAAI2G,EAAM8E,KAAKmV,UAAU5gB,GACR,OAAb2G,EAAIwkB,OACJxkB,EAAIwkB,KAAO,IAAIjN,MAGnBzS,KAAK2iB,gBAAgBpuB,IAezB6lB,WAAY,SAAUlf,GAClB,IACI,OAAOA,EAAI6kB,cACb,MAAO/gB,GACL,GAAU,gBAANA,EAAuB,MAAMA,EACjCgB,KAAKugB,MAAMjH,WAAW,yBAW9BqI,eAAgB,SAAUnI,GACtBhT,EAAQsJ,KAAK,6BACb,IAAI/G,EAAO/I,KAAK2gB,aAAa7Z,MAAM,CAAC0K,KAAM,cACtCgI,GACAzQ,EAAK+H,MAAM0I,EAAKtJ,QAEpB,IAAIhV,EAAM,IAAIsL,EAAQ2Y,QAClBpW,EAAKmH,OACLlQ,KAAKmhB,sBAAsBprB,KAC3BiK,KAAMA,KAAKugB,MAAMrG,UAAUnkB,KAAKiK,KAAKugB,QACrCxX,EAAKmH,OAAO9B,aAAa,QAE7BpO,KAAKmV,UAAUtX,KAAK3C,GACpB8E,KAAKohB,4BAQT1J,MAAO,WACHE,aAAa5X,KAAKugB,MAAMxM,cACxB/T,KAAKohB,2BAGLphB,KAAKugB,MAAMxM,aAAenU,WAAW,WACjCI,KAAK6U,WACP9e,KAAKiK,KAAKugB,OAAQ,MAOxB9H,aAAc,WACVzY,KAAKohB,2BACLxJ,aAAa5X,KAAKugB,MAAMxM,eAU5BqN,yBAA0B,WACjBphB,KAAKmV,UAIN3O,EAAQqJ,MAAM,wCACA7P,KAAKmV,UAAUnY,OAAS,aAJtCwJ,EAAQqJ,MAAM,2DAOb7P,KAAKmV,WAAuC,IAA1BnV,KAAKmV,UAAUnY,SAIlCgD,KAAKmV,UAAUnY,OAAS,GACxBgD,KAAK2iB,gBAAgB,GAGrB3iB,KAAKmV,UAAUnY,OAAS,GACxB8D,KAAK+iB,IAAI7jB,KAAKmV,UAAU,GAAGsB,IAClBzW,KAAKmV,UAAU,GAAGsB,KAAOzW,KAAK7L,QACvC6L,KAAK2iB,gBAAgB,MAI1Bnc,IAaN,SAAU3S,EAAMC,GACb,GAAsB,mBAAXG,GAAyBA,EAAOC,IACvCD,EAAO,oBAAoB,CAAC,gBAAiB,SAAUirB,GACnD,OAAOprB,EACHorB,EAAK1Y,QACL0Y,EAAKzY,eAGV,GAAuB,WAAnBhH,EAAO1L,GAAsB,CACpC,IAAImrB,EAAOnkB,EAAQ,UAEnB/G,EAAOD,QAAUD,EAAQorB,EAAK1Y,QAAS0Y,EAAKzY,aAGrC3S,EAAQ0S,QAASC,QAd/B,CAgBCzG,EAAM,SAAUwG,EAASC,GAyhB3B,OA1fAD,EAAQyM,UAAY,SAASwK,GACzBzd,KAAKugB,MAAQ9C,EACbzd,KAAKqa,MAAQ,UAEb,IAAIxH,EAAU4K,EAAW5K,QACzB,GAA+B,IAA3BA,EAAQvU,QAAQ,QAA4C,IAA5BuU,EAAQvU,QAAQ,QAAe,CAG/D,IAAIwlB,EAAc,GAEkB,OAAhCrG,EAAWhM,QAAQsB,UAAkD,WAA7B5e,OAAO4vB,SAAShR,SACxD+Q,GAAe,KAEfA,GAAe,MAGnBA,GAAe,MAAQ3vB,OAAO4vB,SAASlF,KAEV,IAAzBhM,EAAQvU,QAAQ,KAChBwlB,GAAe3vB,OAAO4vB,SAASC,SAAWnR,EAE1CiR,GAAejR,EAGnB4K,EAAW5K,QAAUiR,IAI7Btd,EAAQyM,UAAU9c,UAAY,CAO1B8tB,aAAc,WACV,OAAOxd,EAAO,OAAQ,CAClB+J,MAAShK,EAAQS,GAAGY,QACpB0U,GAAMvc,KAAKugB,MAAMra,OACjBge,QAAW,SAanBC,mBAAoB,SAAUpJ,EAAUqJ,GACpC,IAAI5D,EAMJ,GAAsB,KAJlBA,EADAzF,EAASC,uBACAD,EAASC,uBAAuBxU,EAAQS,GAAGW,OAAQ,SAEnDmT,EAASL,qBAAqB,iBAEhC1d,OACP,OAAO,EAQX,IANA,IAAI4S,EAAQ4Q,EAAO,GAEfzG,EAAY,GACZ7M,EAAO,GAGF3Y,EAAI,EAAGA,EAAIqb,EAAMlE,WAAW1O,OAAQzI,IAAK,CAC9C,IAAIyK,EAAI4Q,EAAMlE,WAAWnX,GACzB,GAHK,wCAGDyK,EAAEoP,aAAa,SACf,MACiB,SAAfpP,EAAE8O,SACJZ,EAAOlO,EAAEmhB,YAETpG,EAAY/a,EAAE8O,SAItB,IAAIuW,EAAc,2BAiBlB,OAdIA,GADAtK,GAGe,UAGf7M,IACAmX,GAAe,MAAQnX,GAG3B1G,EAAQoJ,MAAMyU,GAGdrkB,KAAKugB,MAAMlK,qBAAqB+N,EAAerK,GAC/C/Z,KAAKugB,MAAM1G,iBACJ,GASX3E,OAAQ,aAURoB,SAAU,WAENtW,KAAKskB,eAGLtkB,KAAKukB,OAAS,IAAIC,UAAUxkB,KAAKugB,MAAM1N,QAAS,QAChD7S,KAAKukB,OAAOE,OAASzkB,KAAK0kB,QAAQ3uB,KAAKiK,MACvCA,KAAKukB,OAAOI,QAAU3kB,KAAK4kB,SAAS7uB,KAAKiK,MACzCA,KAAKukB,OAAOM,QAAU7kB,KAAK8kB,SAAS/uB,KAAKiK,MACzCA,KAAKukB,OAAOQ,UAAY/kB,KAAKglB,oBAAoBjvB,KAAKiK,OAW1D6a,YAAa,SAASE,GAElB,GADY/a,KAAKmkB,mBAAmBpJ,EAAUvU,EAAQ+C,OAAOG,UAEzD,OAAOlD,EAAQ+C,OAAOG,UAY9Bub,mBAAoB,SAAS5V,GACzB,IAAIO,GAAQ,EAGRha,EAAKyZ,EAAQjB,aAAa,SACZ,iBAAPxY,EACPga,EAAQ,4BACDha,IAAO4Q,EAAQS,GAAGY,UACzB+H,EAAQ,4BAA8Bha,GAG1C,IAAIorB,EAAM3R,EAAQjB,aAAa,WAO/B,MANmB,iBAAR4S,EACPpR,EAAQ,8BACO,QAARoR,IACPpR,EAAQ,8BAAgCoR,IAGxCpR,IACA5P,KAAKugB,MAAMlK,qBAAqB7P,EAAQ+C,OAAOG,SAAUkG,GACzD5P,KAAKugB,MAAM1G,iBACJ,IAYfmL,oBAAqB,SAAS3V,GAC1B,GAAuC,IAAnCA,EAAQ7L,KAAKlF,QAAQ,WAAqD,IAAlC+Q,EAAQ7L,KAAKlF,QAAQ,SAAgB,CAE7E,IAAIkF,EAAO6L,EAAQ7L,KAAKrG,QAAQ,mBAAoB,IACpD,GAAa,KAATqG,EAAa,OAEjB,IAAI0hB,GAAc,IAAI3X,WAAYC,gBAAgBhK,EAAM,YAAYyc,gBACpEjgB,KAAKugB,MAAMpJ,SAAS+N,GACpBllB,KAAKugB,MAAMlJ,SAAShI,EAAQ7L,MAGxBxD,KAAKilB,mBAAmBC,IAExBllB,KAAK6a,YAAYqK,QAElB,GAAwC,IAApC7V,EAAQ7L,KAAKlF,QAAQ,WAAkB,CAE9C,IAAI6mB,GAAgB,IAAI5X,WAAYC,gBAAgB6B,EAAQ7L,KAAM,YAAYyc,gBAE9EjgB,KAAKugB,MAAMpJ,SAASgO,GACpBnlB,KAAKugB,MAAMlJ,SAAShI,EAAQ7L,MAC5B,IAAI4hB,EAAUD,EAAc/W,aAAa,iBACzC,GAAIgX,EAAS,CACT,IAAIvS,EAAU7S,KAAKugB,MAAM1N,SAEDA,EAAQvU,QAAQ,SAAW,GAAK8mB,EAAQ9mB,QAAQ,SAAW,GAAOuU,EAAQvU,QAAQ,QAAU,KAEhH0B,KAAKugB,MAAMlK,qBACP7P,EAAQ+C,OAAOU,SACf,gDAEJjK,KAAKugB,MAAM5N,QACX3S,KAAKugB,MAAM1N,QAAUuS,EACrBplB,KAAKsW,iBAGTtW,KAAKugB,MAAMlK,qBACP7P,EAAQ+C,OAAOG,SACf,2BAEJ1J,KAAKugB,MAAM1G,oBAEZ,CACH,IAAIwL,EAASrlB,KAAKslB,YAAYjW,EAAQ7L,MAClC+H,GAAO,IAAIgC,WAAYC,gBAAgB6X,EAAQ,YAAYpF,gBAC/DjgB,KAAKukB,OAAOQ,UAAY/kB,KAAKulB,WAAWxvB,KAAKiK,MAC7CA,KAAKugB,MAAM1F,YAAYtP,EAAM,KAAM8D,EAAQ7L,QAYnDmW,YAAa,SAAUH,GACnB,GAAIxZ,KAAKukB,QAAUvkB,KAAKukB,OAAOnC,aAAeoC,UAAUgB,OAAQ,CACxDhM,GACAxZ,KAAKugB,MAAM/I,KAAKgC,GAEpB,IAAIiM,EAAQhf,EAAO,QAAS,CAAE+J,MAAShK,EAAQS,GAAGY,UAClD7H,KAAKugB,MAAMnJ,UAAUqO,EAAMvV,QAC3B,IAAIwV,EAAclf,EAAQwJ,UAAUyV,GACpCzlB,KAAKugB,MAAMjJ,UAAUoO,GACrB,IACI1lB,KAAKukB,OAAO/M,KAAKkO,GACnB,MAAO1mB,GACLwH,EAAQsJ,KAAK,iCAGrB9P,KAAKugB,MAAM1G,iBAQfA,cAAe,WACXrT,EAAQsJ,KAAK,uCACb9P,KAAKskB,gBAOTgB,YAAa,SAAUpN,GACnB,MAAO,YAAcA,EAAS,cASlCoM,aAAc,WACV,GAAItkB,KAAKukB,OAAU,IACfvkB,KAAKukB,OAAOI,QAAU,KACtB3kB,KAAKukB,OAAOkB,QACd,MAAOzmB,IACTgB,KAAKukB,OAAS,MASlBhK,YAAa,WACT,OAAO,GAQXuK,SAAU,SAAS9lB,GACZgB,KAAKugB,MAAMrM,YAAclU,KAAKugB,MAAMpM,eACnC3N,EAAQoJ,MAAM,iCACd5P,KAAKugB,MAAM1G,iBACJ7a,GAAgB,OAAXA,EAAE2mB,OAAkB3lB,KAAKugB,MAAMrM,WAAalU,KAAKukB,QAK7D/d,EAAQoJ,MAAM,iCACd5P,KAAKugB,MAAMlK,qBACP7P,EAAQ+C,OAAOG,SACf,0EAEJ1J,KAAKugB,MAAM1G,iBAEXrT,EAAQsJ,KAAK,qBASrBsL,kBAAmB,SAAUhc,GACzBoH,EAAQoJ,MAAM,6DACd5P,KAAKqW,qBACD7P,EAAQ+C,OAAOG,SACflD,EAAQ2D,eAAeI,cAEvBnL,GACAA,EAAS1K,KAAKsL,KAAKugB,OAEvBvgB,KAAKugB,MAAM1G,iBAQfH,qBAAsB,aAKtBE,kBAAmB,aAQnBgL,SAAU,SAAShV,GACfpJ,EAAQoJ,MAAM,mBAAqBA,GACnC5P,KAAKugB,MAAMlK,qBACP7P,EAAQ+C,OAAOG,SACf,0EAEJ1J,KAAK2Z,eAQT9E,QAAS,WACL,IAAIrR,EAAOxD,KAAKugB,MAAMhM,MACtB,GAAI/Q,EAAKxG,OAAS,IAAMgD,KAAKugB,MAAMlM,OAAQ,CACvC,IAAK,IAAI9f,EAAI,EAAGA,EAAIiP,EAAKxG,OAAQzI,IAAK,CAE9B,IAAI2jB,EAAQ0N,EADA,OAAZpiB,EAAKjP,KAGD2jB,EADY,YAAZ1U,EAAKjP,GACIyL,KAAKikB,eAAe/T,OAEpB1M,EAAKjP,GAElBqxB,EAAYpf,EAAQwJ,UAAUkI,GAC9BlY,KAAKugB,MAAMnJ,UAAUc,GACrBlY,KAAKugB,MAAMjJ,UAAUsO,GACrB5lB,KAAKukB,OAAO/M,KAAKoO,IAGzB5lB,KAAKugB,MAAMhM,MAAQ,KA2B3BgR,WAAY,SAASlW,GACjB,IAAI9D,EAAM/H,EAENiiB,EAAQ,wDACZ,GAAIpW,EAAQ7L,OAASiiB,EAMjB,OALAzlB,KAAKugB,MAAMlJ,SAASoO,GACpBzlB,KAAKugB,MAAMpJ,SAAS9H,QACfrP,KAAKugB,MAAMpM,eACZnU,KAAKugB,MAAM1G,iBAGZ,GAAsC,IAAlCxK,EAAQ7L,KAAKqiB,OAAO,WAG3B,GADAta,GAAO,IAAIgC,WAAYC,gBAAgB6B,EAAQ7L,KAAM,YAAYyc,iBAC5DjgB,KAAKilB,mBAAmB1Z,GACzB,YAGJ/H,EAAOxD,KAAKslB,YAAYjW,EAAQ7L,MAChC+H,GAAO,IAAIgC,WAAYC,gBAAgBhK,EAAM,YAAYyc,gBAG7D,OAAIjgB,KAAKmkB,mBAAmB5Y,EAAM/E,EAAQ+C,OAAOC,YAAjD,EAKIxJ,KAAKugB,MAAMpM,eACsB,aAA7B5I,EAAKua,WAAWhY,UACyB,gBAAzCvC,EAAKua,WAAW1X,aAAa,SACjCpO,KAAKugB,MAAMpJ,SAAS5L,QACpBvL,KAAKugB,MAAMlJ,SAAS7Q,EAAQwJ,UAAUzE,UAK1CvL,KAAKugB,MAAMrG,UAAU3O,EAAM8D,EAAQ7L,OAQvCkhB,QAAS,WACLle,EAAQsJ,KAAK,kBACb,IAAIiW,EAAQ/lB,KAAKikB,eACjBjkB,KAAKugB,MAAMnJ,UAAU2O,EAAM7V,QAE3B,IAAI8V,EAAcxf,EAAQwJ,UAAU+V,GACpC/lB,KAAKugB,MAAMjJ,UAAU0O,GACrBhmB,KAAKukB,OAAO/M,KAAKwO,IAcrB5L,WAAY,SAAUlC,GAClB,OAAOA,GAQXR,MAAO,WACH1X,KAAKugB,MAAM5I,SAOfc,aAAc,WACVb,aAAa5X,KAAKugB,MAAMxM,cACxB/T,KAAKugB,MAAM1L,QAAQ9e,KAAKiK,KAAKugB,MAA7BvgB,KAGDwG,IAGP,SAAU3S,GACN,GAAqB,mBAAXI,GAAyBA,EAAOC,IACtCD,EAAO,UAAU,CACb,eACA,eACA,qBACD,SAAU+oB,GACT,OAAOA,SAER,GAAuB,WAAnBvd,EAAO1L,GAAsB,CACpC,IAAImrB,EAAOnkB,EAAQ,UACnBA,EAAQ,UACRA,EAAQ,eACR/G,EAAOD,QAAUmrB,GAbzB,GAkBAnkB,EAAQ,CAAC,qBAMEA,EAAQ,aApwMLF,EAAAiD,MAAA/J,EAAAkyB,GAAAprB,KAAA7G,EAAAD,QAAA6G,iCCzBdvG,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,sBAAA,WAAA,OAAAC,IAAA9xB,EAAAQ,EAAAqxB,EAAA,iBAAA,WAAA,OAAAE,IAAA/xB,EAAAQ,EAAAqxB,EAAA,6BAAA,WAAA,OAAAG,IAAAhyB,EAAAQ,EAAAqxB,EAAA,mBAAA,WAAA,OAAAI,IAAAjyB,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAAK,IAAAlyB,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAAM,IAAAnyB,EAAAQ,EAAAqxB,EAAA,kBAAA,WAAA,OAAAO,IAAApyB,EAAAQ,EAAAqxB,EAAA,yBAAA,WAAA,OAAAlvB,IAAA3C,EAAAQ,EAAAqxB,EAAA,yBAAA,WAAA,OAAAhvB,IAAA7C,EAAAQ,EAAAqxB,EAAA,sBAAA,WAAA,OAAA/uB,IAAA9C,EAAAQ,EAAAqxB,EAAA,sBAAA,WAAA,OAAAQ,IAAAryB,EAAAQ,EAAAqxB,EAAA,uBAAA,WAAA,OAAA5uB,IAAAjD,EAAAQ,EAAAqxB,EAAA,2BAAA,WAAA,OAAAS,IAAAtyB,EAAAQ,EAAAqxB,EAAA,uBAAA,WAAA,OAAAU,IAAAvyB,EAAAQ,EAAAqxB,EAAA,4BAAA,WAAA,OAAAW,IAAAxyB,EAAAQ,EAAAqxB,EAAA,gBAAA,WAAA,OAAAY,IAAAzyB,EAAAQ,EAAAqxB,EAAA,SAAA,WAAA,OAAAnuB,IAAA1D,EAAAQ,EAAAqxB,EAAA,qBAAA,WAAA,OAAAa,IAAA1yB,EAAAQ,EAAAqxB,EAAA,2BAAA,WAAA,OAAAc,IAAA3yB,EAAAQ,EAAAqxB,EAAA,qBAAA,WAAA,OAAAe,IAAA5yB,EAAAQ,EAAAqxB,EAAA,wBAAA,WAAA,OAAAgB,IAAA7yB,EAAAQ,EAAAqxB,EAAA,mBAAA,WAAA,OAAAjuB,IAAA5D,EAAAQ,EAAAqxB,EAAA,2BAAA,WAAA,OAAAhuB,IAAA7D,EAAAQ,EAAAqxB,EAAA,kCAAA,WAAA,OAAAiB,IAAA9yB,EAAAQ,EAAAqxB,EAAA,8BAAA,WAAA,OAAAptB,IAAAzE,EAAAQ,EAAAqxB,EAAA,+BAAA,WAAA,OAAAkB,IAAA/yB,EAAAQ,EAAAqxB,EAAA,aAAA,WAAA,OAAAmB,IAAAhzB,EAAAQ,EAAAqxB,EAAA,uBAAA,WAAA,OAAAjtB,IAAA5E,EAAAQ,EAAAqxB,EAAA,qBAAA,WAAA,OAAAoB,IAAAjzB,EAAAQ,EAAAqxB,EAAA,yBAAA,WAAA,OAAA5sB,IAAAjF,EAAAQ,EAAAqxB,EAAA,oCAAA,WAAA,OAAA3rB,IAAAlG,EAAAQ,EAAAqxB,EAAA,qCAAA,WAAA,OAAA1rB,IAAAnG,EAAAQ,EAAAqxB,EAAA,6BAAA,WAAA,OAAAqB,IAAAlzB,EAAAQ,EAAAqxB,EAAA,gBAAA,WAAA,OAAAsB,IAAAnzB,EAAAQ,EAAAqxB,EAAA,kBAAA,WAAA,OAAA/rB,IAAA9F,EAAAQ,EAAAqxB,EAAA,mBAAA,WAAA,OAAA9rB,IAAA/F,EAAAQ,EAAAqxB,EAAA,mBAAA,WAAA,OAAAuB,IAAApzB,EAAAQ,EAAAqxB,EAAA,cAAA,WAAA,OAAAwB,IAAArzB,EAAAQ,EAAAqxB,EAAA,4BAAA,WAAA,OAAAyB,IAAAtzB,EAAAQ,EAAAqxB,EAAA,qBAAA,WAAA,OAAA0B,IAAAvzB,EAAAQ,EAAAqxB,EAAA,gBAAA,WAAA,OAAA2B,IAAAxzB,EAAAQ,EAAAqxB,EAAA,+BAAA,WAAA,OAAA7rB,IAAAhG,EAAAQ,EAAAqxB,EAAA,cAAA,WAAA,OAAA4B,IAAAzzB,EAAAQ,EAAAqxB,EAAA,YAAA,WAAA,OAAA6B,IAAA1zB,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAA8B,IAAA3zB,EAAAQ,EAAAqxB,EAAA,sBAAA,WAAA,OAAA+B,IAAA5zB,EAAAQ,EAAAqxB,EAAA,mBAAA,WAAA,OAAAgC,IAOO,IAAM/B,EAAsB,iCAKtBC,EAAiB,2BAOjBC,EAA6B,sCAK7BC,EAAmB,mBAKnBC,EAAoB,oBAMpBC,EAAoB,oBAKpBC,EAAkB,kBAOlBzvB,EAAyB,mCAOzBE,EAAyB,mCAMzBC,EAAsB,gCAKtBuvB,EAAsB,+BAKtBpvB,EAAuB,gCAKvBqvB,EAA2B,6BAK3BC,EAAuB,gCAMvBC,EAA4B,uCAgB5BC,EAAgB,0BAMhB/uB,EAAS,oBAOTgvB,EAAqB,gCAUrBC,EAA2B,mCAK3BC,EAAqB,gCAOrBC,EAAwB,mCAKxBjvB,EAAmB,6BAKnBC,EAA2B,oCAgB3BivB,EACP,6CAKOruB,EACP,yCAMOsuB,EACP,0CAOOC,EAAa,uBAKbpuB,EAAuB,gCAMvBquB,EAAqB,+BAKrBhuB,EAAyB,kCAMzBiB,EACP,2CAWOC,EACP,2CAKO+sB,EACP,wCAKOC,EAAgB,2BAKhBrtB,EAAkB,4BAKlBC,EAAmB,6BAKnBqtB,EAAmB,8BAQnBC,EAAc,wBAKdC,EAA4B,gCAO5BC,EAAqB,8BAQrBC,EAAgB,0BAQhBxtB,EACP,wCAMOytB,EAAc,wBAKdC,EAAY,sBAKZC,EAAoB,yBAKpBC,EAAsB,2BAKtBC,EAAmB,4DCpThC,IAAAC,EAAA9zB,EAAA,IAEe6xB,EAAA,EAAA,IAAIkC,EAAAA,mBCYnB,IAAIC,EAASttB,EAAQ,IACjButB,EAAevtB,EAAQ,KAwBvBwtB,EAAY,GAKZC,EAAU,GAKVC,EAAWJ,EAAOK,OAAOC,MAG7B30B,EAAOD,QAAU,CAMb60B,mBAAoB,SAASC,GACzBR,EAAOO,mBAAmBC,IAO9BC,sBAAuB,SAASD,GAC5BR,EAAOS,sBAAsBD,IAMjCE,iBAAkB,SAAStX,GACvB4W,EAAOU,iBAAiBtX,IAM5BuX,UAAW,SAAS/pB,EAAIgqB,EAAYxX,GAChC,IAAIyX,EAAS,IAAIb,EAAOI,EAAUxpB,EAAIgqB,EAAYxX,GAOlD,OANGxS,GACCspB,EAAUtpB,GAAMspB,EAAUtpB,IAAO,GACjCspB,EAAUtpB,GAAIpB,KAAKqrB,IAEnBV,EAAQ3qB,KAAKqrB,GAEVA,GASXC,gBAAiB,SAAS1Z,EAAOxQ,GAE7B,IADA,IAAIzK,EAAIyK,EAAKspB,EAAUtpB,IAAO,GAAMupB,EAC5Bj0B,EAAI,EAAGA,EAAIC,EAAEwI,OAAQzI,IACzBC,EAAED,GAAG60B,SAAS3Z,IAOtB4Z,YAAa,SAAU5Z,GACnBgZ,EAAWhZ,EAEX,IADA,IAAIlb,EAAI,EACFA,EAAIi0B,EAAQxrB,OAAQzI,IACtBi0B,EAAQj0B,GAAG60B,SAAS3Z,GAGxB,IAAI,IAAIxQ,KAAMspB,EAAW,CACrB,IAAI/zB,EAAI+zB,EAAUtpB,IAAO,GACzB,IAAI1K,EAAI,EAAGA,EAAIC,EAAEwI,OAAQzI,IACrBC,EAAED,GAAG60B,SAAS3Z,KAO1BiZ,OAAQL,EAAOK,OAIfJ,aAAcA,+ZClHlB,IAMIgB,EANEJ,EAASnuB,EAAQ,GAAqBiuB,UAAUO,GAWlDC,GAAoB,EAmCxB,SAASC,EAAsBhY,GAC3B,IAAIiY,EAAAA,EAAUC,uBAAd,CAIA,IAAMC,EAAWC,EAAAA,EAASC,kBAErBJ,EAAAA,EAAUK,YAAY,CACvBC,YAAavY,EAAQuY,YACrBC,gBAAiBxY,EAAQwY,gBACzBL,SAAUnY,EAAQyY,qBACZzY,EAAQ0Y,mBAAqBP,EACnCQ,UAAW3Y,EAAQyY,qBACbN,EAAWnY,EAAQ0Y,mBACzBE,gBAAiB5Y,EAAQ4Y,gBACzBC,mBAAoB7Y,EAAQ6Y,mBAC5BC,OAAQ9Y,EAAQ8Y,UAEhBrB,EAAOtZ,MAAM,gDAuEN,SAAS4a,EAAWC,EAAMhZ,GAMrCzR,KAAK0qB,YAAc,IAAIC,IACvB3qB,KAAK4qB,aAAe,IAAIC,EAAAA,EACxB7qB,KAAKyqB,KAAOA,EACZzqB,KAAKyR,QAAUA,GAAW,GAE1BzR,KAAK8qB,4BACC9qB,KAAKyR,QAAQuY,aAAehqB,KAAKyR,QAAQwY,kBAKM,IAAzCO,EAAWO,0BACnB/qB,KAAK8qB,8BACDE,EAAAA,EAAQC,gBACRxB,EAAsBzpB,KAAKyR,SAlIvC,SAA0BA,GACjB+X,IACD0B,EAAAA,EAAWC,WACP1Z,EAAQ2Z,iBACD,uDACK,GACE,OACIzwB,EACC,WAAA,OAAM8uB,EAAsBhY,KAEnD+X,GAAoB,GA0HhB6B,CAAiBrrB,KAAKyR,SAGrBzR,KAAKyR,QAAQ8Y,QACdrB,EAAOnZ,KAAK,2BAGX/P,KAAKyR,QAAQ6Z,0BACdpC,EAAOnZ,KAAK,8CAUpB/P,KAAKurB,oBAAsB,IAAIZ,IAE/BH,EAAWgB,UAAUC,IAAIzrB,MA5E7BwqB,EAAWvV,KAAO,SAASxD,GACvB+Y,EAAWkB,oBAAsBja,EAAQka,mBAEE,iBAAhCla,EAAQma,sBACfpB,EAAWoB,oBAAsBna,EAAQma,qBAG7CpB,EAAWO,0BAA4BtZ,EAAQsZ,2BAuEnDP,EAAWkB,oBAAqB,EAChClB,EAAWoB,oBAAsB,IACjCpB,EAAWO,2BAA4B,EACvCP,EAAWqB,UAAYA,EAAAA,EAEvB52B,OAAOC,eAAes1B,EAAY,YAAa,CAM3Cp1B,IAN2C,WAWvC,OAJKk0B,IACDA,EAAa,IAAIwC,KAGdxC,KAQfkB,EAAWr0B,UAAU41B,iBAAmB,SAASC,GAC7ChsB,KAAKisB,gBAAgBD,GAErB,IACI,IAAME,EACA,IAAIC,EAAAA,EACFH,EACAxB,EAAWoB,oBACX,IACA5rB,KAAK4qB,cAEbsB,EAASnG,MAAMyE,EAAWkB,oBAC1B1rB,KAAK0qB,YAAY0B,IAAIJ,EAAe/sB,GAAIitB,GAC1C,MAAOltB,GACLkqB,EAAOtZ,MAAP,iDAAAvS,OAA8D2B,MAItEwrB,EAAW6B,WAAa,GAExB7B,EAAW8B,gBAAkB,SAASC,EAAQntB,GAC1C,GAAKorB,EAAWkB,mBAAhB,CAGA,IAAMW,EAAa,IAAIG,EAAAA,EAAWD,EAAQ/B,EAAWoB,oBACjDxsB,GAEJY,KAAKqsB,WAAWxuB,KAAKwuB,GACrBA,EAAWtG,UAGfyE,EAAWr0B,UAAUs2B,sBAAwB,SAASC,GAC7ClC,EAAWkB,oBAGhB1rB,KAAK4qB,aAAa+B,GAAGC,EAAAA,EAA8BF,IAGvDlC,EAAWr0B,UAAU02B,yBAA2B,SAASH,GAChDlC,EAAWkB,oBAGhB1rB,KAAK4qB,aAAakC,eAAeF,EAAAA,EAA8BF,IAGnElC,EAAWr0B,UAAU42B,0BAA4B,SAASL,GACtD1sB,KAAK4qB,aAAa+B,GAAGC,EAAAA,EAAkCF,IAG3DlC,EAAWr0B,UAAU62B,6BAA+B,SAASN,GACzD1sB,KAAK4qB,aAAakC,eACdF,EAAAA,EAAkCF,IAG1ClC,EAAWr0B,UAAU82B,2BAA6B,SAASP,GACvD1sB,KAAK4qB,aAAa+B,GAAGC,EAAAA,EAAmCF,IAG5DlC,EAAWr0B,UAAU+2B,8BAAgC,SAASR,GAC1D1sB,KAAK4qB,aAAakC,eACdF,EAAAA,EACAF,IAGRlC,EAAWr0B,UAAUg3B,yBAA2B,SAAST,GACrD1sB,KAAK4qB,aAAa+B,GAAGC,EAAAA,EAAkCF,IAG3DlC,EAAWr0B,UAAUi3B,4BAA8B,SAASV,GACxD1sB,KAAK4qB,aAAakC,eAAeF,EAAAA,EAC7BF,IAGRlC,EAAWr0B,UAAUk3B,QAAU,WAC3B,IAQSrtB,KAAKurB,oBAAoB+B,MAC1BttB,KAAK4qB,aAAa2C,KAAKX,EAAAA,GAT3B,IAAAY,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAWA,IAAA,IAAAgzB,EAAAC,EAAwB5tB,KAAKurB,oBAAoBsC,SAAjDv4B,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2D,CAAA,IAAhDS,EAAgDN,EAAAn4B,MACvDwK,KAAKkuB,cAAcD,EAAUE,MAZjC,MAAAlU,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAAA,IAAAW,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IAcA,IAAA,IAAA6zB,EAAAC,EAAoBzuB,KAAK0qB,YAAYgE,OAArCp5B,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAA6C,CAAA,IAAlCM,EAAkCH,EAAAh5B,MACzCwK,KAAK4uB,iBAAiBD,IAf1B,MAAA1U,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,GAiBIvuB,KAAK4qB,cACL5qB,KAAK4qB,aAAaiE,qBAlB1B,QAqBIrE,EAAWgB,UAAUsD,OAAO9uB,QAIpCwqB,EAAWuE,eAAiB,SAASxC,GACjC,GAAK/B,EAAWkB,mBAIhB,IAAK,IAAIn3B,EAAI,EAAGA,EAAIi2B,EAAW6B,WAAWrvB,OAAQzI,IAC9C,GAAIi2B,EAAW6B,WAAW93B,GAAGg4B,SAAWA,EAAQ,CACzB/B,EAAW6B,WAAW/uB,OAAO/I,EAAG,GAExC,GAAGy6B,OACd,QAUZxE,EAAWr0B,UAAUy4B,iBAAmB,SAASD,GAC7C,IAAMzC,EAAWlsB,KAAK0qB,YAAYt1B,IAAIu5B,GAElCzC,IACAA,EAAS8C,OACThvB,KAAK0qB,YAAYoE,OAAOH,KAQhCnE,EAAWr0B,UAAU81B,gBAAkB,SAASkC,GAC5CnuB,KAAK4uB,iBAAiBT,EAAIlvB,KAW9BurB,EAAWr0B,UAAU84B,eAAiB,SAASd,EAAKe,GAChD,GAAKlvB,KAAK8qB,4BAEH,GAAI9qB,KAAKurB,oBAAoB4D,IAAIhB,EAAIlvB,IACxCiqB,EAAOtZ,MAAM,oDADV,CAMPsZ,EAAOpZ,KAAP,0BAAAzS,OAAsC8wB,EAAtC,QAEA,IAAMiB,EACA,IAAI1F,EAAAA,EACFyE,EACA,CACI5D,OAAQvqB,KAAKqvB,sBACbH,aAAAA,IAGZlvB,KAAKurB,oBAAoBa,IAAI+B,EAAIlvB,GAAImwB,KASzC5E,EAAW8E,0BAA4B,WACnC,IAAMC,EAAc,IAAIzD,IADsB0D,GAAA,EAAAC,GAAA,EAAAC,OAAA/0B,EAAA,IAG9C,IAAA,IAAAg1B,EAAAC,EAAyBpF,EAAWgB,UAApCl2B,OAAAw4B,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAA+C,CAAA,IAApCK,EAAoCF,EAAAn6B,MAAAs6B,GAAA,EAAAC,GAAA,EAAAC,OAAAr1B,EAAA,IAC3C,IAAA,IAAAs1B,EAAAC,EAAiBL,EAAWtE,oBAAoBsC,SAAhDv4B,OAAAw4B,cAAAgC,GAAAG,EAAAC,EAAAnC,QAAAC,MAAA8B,GAAA,EAA0D,CAAA,IAA/CK,EAA+CF,EAAAz6B,MACtD+5B,EAAY9D,IAAI0E,IAFuB,MAAAlW,GAAA8V,GAAA,EAAAC,EAAA/V,EAAA,QAAA,IAAA6V,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,QAAA,GAAA2B,EAAA,MAAAC,KAHD,MAAA/V,GAAAwV,GAAA,EAAAC,EAAAzV,EAAA,QAAA,IAAAuV,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,QAAA,GAAAqB,EAAA,MAAAC,GAS9C,OAAOH,GASX/E,EAAWr0B,UAAUk5B,oBAAsB,WAEvC,OAAOrvB,KAAKyR,QAAQ6Z,yBAAb,GAAAjuB,OACE2C,KAAKyR,QAAQ6Z,yBADf,KAAAjuB,OAC2C2C,KAAKyR,QAAQ2e,UACzDpwB,KAAKyR,QAAQ2e,UAMvB5F,EAAWr0B,UAAU+3B,cAAgB,SAASC,GAC1C,IAAMkC,EAAoBrwB,KAAKurB,oBAAoBn2B,IAAI+4B,EAAIlvB,IAEvDoxB,IAUsC,IAAlCrwB,KAAKurB,oBAAoB+B,MACzBttB,KAAK4qB,aAAa2C,KAAKX,EAAAA,GAE3B5sB,KAAKurB,oBAAoBuD,OAAOX,EAAIlvB,IAGpCoxB,EAAkBC,uBAW1B9F,EAAWr0B,UAAUo6B,mBAAqB,WACtC,OAAOvwB,KAAK8qB,6BAShBN,EAAWr0B,UAAUq6B,gCAAkC,SAASrC,EAAKsC,GACjE,IAAMC,EAAW1wB,KAAKurB,oBAAoBn2B,IAAI+4B,EAAIlvB,IAE9CyxB,GACAA,EAASC,sBAAsBF,IAQvCjG,EAAWr0B,UAAUy6B,6BAA+B,SAASzC,GACzD,IAAMuC,EAAW1wB,KAAKurB,oBAAoBn2B,IAAI+4B,EAAIlvB,IAE9CyxB,GACAA,EAASE,gCAUjBpG,EAAWr0B,UAAU06B,cAAgB,SAAS1C,EAAK2C,EAAOtf,GACtD,IAAMkf,EAAWvC,GAAOnuB,KAAKurB,oBAAoBn2B,IAAI+4B,EAAIlvB,IAEzDyqB,EAAAA,EAAUmH,cAAcC,EAAOtf,EAAMkf,IAUzClG,EAAWr0B,UAAU46B,uBACf,SAAShL,EAAOiL,GAAM,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAx2B,EAAA,IACpB,IAAA,IAAAy2B,EAAAC,EAAiBrxB,KAAKurB,oBAAoBsC,SAA1Cv4B,OAAAw4B,cAAAmD,GAAAG,EAAAC,EAAAtD,QAAAC,MAAAiD,GAAA,EAAoD,CAAAG,EAAA57B,MAC7Cu7B,uBAAuBhL,EAAOiL,IAFjB,MAAA/W,GAAAiX,GAAA,EAAAC,EAAAlX,EAAA,QAAA,IAAAgX,GAAA,MAAAI,EAAAjD,QAAAiD,EAAAjD,SAAA,QAAA,GAAA8C,EAAA,MAAAC,KAW5B3G,EAAWr0B,UAAUm7B,yBAA2B,SAASC,GAAS,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA/2B,EAAA,IAC9D,IAAA,IAAAg3B,EAAAC,EAAiB5xB,KAAKurB,oBAAoBsC,SAA1Cv4B,OAAAw4B,cAAA0D,GAAAG,EAAAC,EAAA7D,QAAAC,MAAAwD,GAAA,EAAoD,CAAAG,EAAAn8B,MAC7C87B,4BAFuD,MAAArX,GAAAwX,GAAA,EAAAC,EAAAzX,EAAA,QAAA,IAAAuX,GAAA,MAAAI,EAAAxD,QAAAwD,EAAAxD,SAAA,QAAA,GAAAqD,EAAA,MAAAC,GAM9D1xB,KAAKyqB,KAAK6G,yBAAyBC,IAQvC/G,EAAWqH,0BAA4B,SAASC,GAC5C,IAAMC,EAAYvH,EAAW8E,4BAE7B,GAAIyC,EAAUzE,KAAM,CAAA,IAAA0E,GAAA,EAAAC,GAAA,EAAAC,OAAAv3B,EAAA,IAChB,IAAA,IAAAw3B,EAAAC,EAAiBL,EAAjBz8B,OAAAw4B,cAAAkE,GAAAG,EAAAC,EAAArE,QAAAC,MAAAgE,GAAA,EAA4B,CAAA,IAAjB7B,EAAiBgC,EAAA38B,MACxBk0B,EAAAA,EAAUmI,0BAA0BC,EAAa3B,IAFrC,MAAAlW,GAAAgY,GAAA,EAAAC,EAAAjY,EAAA,QAAA,IAAA+X,GAAA,MAAAI,EAAAhE,QAAAgE,EAAAhE,SAAA,QAAA,GAAA6D,EAAA,MAAAC,SAKhBxI,EAAAA,EAAUmI,0BAA0BC,EAAa,OAmBzDtH,EAAWr0B,UAAUk8B,4BAA8B,SAC3ClE,EACA6C,EACAsB,EACAC,EACAC,EACAC,GACJ,IAAM/B,EAAW1wB,KAAKurB,oBAAoBn2B,IAAI+4B,EAAIlvB,IAE9CyxB,GACAA,EAAS2B,4BACLrB,EACAsB,EACAC,EACAC,EACAC,IAWZjI,EAAWkI,uBAAyB,SAAS1zB,GACzC,IAAM4Q,EACA5Q,aAAa2zB,EAAAA,EAxevB,SAA2C/iB,GACvC,IAAMqK,EAAM,IAAI/b,MAkBhB,OAfA+b,EAAIjL,MAAQY,EAAMZ,MAGlBiL,EAAInlB,MAAQ8a,EAAM9a,MAAQ,kBAAoB8a,EAAMgjB,KAAOhjB,EAAMgjB,IAAIhjB,OAC9DA,EAAMgjB,IAAIhjB,MAAM9a,KADuB,MAAAuI,OACVuS,EAAMgjB,IAAIhjB,MAAM9a,MAAS,IAK7DmlB,EAAI4Y,eAAiBjjB,EAAMgjB,KAAOhjB,EAAMgjB,IAAIE,YACtC/b,KAAKyK,UAAU5R,EAAMgjB,IAAIE,aAAe,GAG9C7Y,EAAI5K,QAAUO,EAAMP,QAEb4K,EAsdG8Y,CAAkC/zB,GAAKA,EAC3C+yB,EAAYvH,EAAW8E,4BAE7B,GAAIyC,EAAUzE,KAAM,CAAA,IAAA0F,GAAA,EAAAC,GAAA,EAAAC,OAAAv4B,EAAA,IAChB,IAAA,IAAAw4B,EAAAC,EAAiBrB,EAAjBz8B,OAAAw4B,cAAAkF,GAAAG,EAAAC,EAAArF,QAAAC,MAAAgF,GAAA,EAA4B,CAAA,IAAjB7C,EAAiBgD,EAAA39B,MACxBk0B,EAAAA,EAAUgJ,uBAAuB9iB,EAAOugB,IAF5B,MAAAlW,GAAAgZ,GAAA,EAAAC,EAAAjZ,EAAA,QAAA,IAAA+Y,GAAA,MAAAI,EAAAhF,QAAAgF,EAAAhF,SAAA,QAAA,GAAA6E,EAAA,MAAAC,SAKhBxJ,EAAAA,EAAUgJ,uBAAuB9iB,EAAO,OAUhD4a,EAAWr0B,UAAUk9B,sBAAwB,SAASr0B,EAAGmvB,GACrD,IAAMuC,EAAW1wB,KAAKurB,oBAAoBn2B,IAAI+4B,EAAIlvB,IAE9CyxB,GACAA,EAAS2C,sBAAsBr0B,IAUvCwrB,EAAWr0B,UAAUm9B,uBAAyB,SAASt0B,EAAGmvB,GACtD,IAAMuC,EAAW1wB,KAAKurB,oBAAoBn2B,IAAI+4B,EAAIlvB,IAE9CyxB,GACAA,EAAS4C,uBAAuBt0B,IAUxCwrB,EAAWr0B,UAAUo9B,uBAAyB,SAASv0B,EAAGmvB,GACtD,IAAMuC,EAAW1wB,KAAKurB,oBAAoBn2B,IAAI+4B,EAAIlvB,IAE9CyxB,GACAA,EAAS6C,uBAAuBv0B,IAUxCwrB,EAAWr0B,UAAUq9B,wBAA0B,SAASx0B,EAAGmvB,GACvD,IAAMuC,EAAW1wB,KAAKurB,oBAAoBn2B,IAAI+4B,EAAIlvB,IAE9CyxB,GACAA,EAAS8C,wBAAwBx0B,IAUzCwrB,EAAWr0B,UAAUs9B,0BAA4B,SAASz0B,EAAGmvB,GACzD,IAAMuC,EAAW1wB,KAAKurB,oBAAoBn2B,IAAI+4B,EAAIlvB,IAE9CyxB,GACAA,EAAS+C,0BAA0Bz0B,IAS3CwrB,EAAWkJ,QAAU,SAAS/+B,GAC1B,IAAMg/B,EAAe,IAAI7H,IADI8H,GAAA,EAAAC,GAAA,EAAAC,OAAAn5B,EAAA,IAO7B,IAAA,IAAAo5B,EAAAC,EAAoBxJ,EAAWgB,UAA/Bl2B,OAAAw4B,cAAA8F,GAAAG,EAAAC,EAAAjG,QAAAC,MAAA4F,GAAA,EAA0C,CAAA,IAA/BK,EAA+BF,EAAAv+B,MAClCy+B,EAAM1I,oBAAoB+B,MAC1BqG,EAAalI,IAAIwI,EAAM1I,oBAAoBsC,SAASE,OAAOv4B,QATtC,MAAAykB,GAAA4Z,GAAA,EAAAC,EAAA7Z,EAAA,QAAA,IAAA2Z,GAAA,MAAAI,EAAA5F,QAAA4F,EAAA5F,SAAA,QAAA,GAAAyF,EAAA,MAAAC,GAa7B,GAAIH,EAAarG,KAAM,CAAA,IAAA4G,GAAA,EAAAC,GAAA,EAAAC,OAAAz5B,EAAA,IACnB,IAAA,IAAA05B,EAAAC,EAAyBX,EAAzBr+B,OAAAw4B,cAAAoG,GAAAG,EAAAC,EAAAvG,QAAAC,MAAAkG,GAAA,EAAuC,CAAA,IAA5BK,EAA4BF,EAAA7+B,MACnCk0B,EAAAA,EAAU8K,mBAAmB7/B,EAAG4/B,IAFjB,MAAAta,GAAAka,GAAA,EAAAC,EAAAna,EAAA,QAAA,IAAAia,GAAA,MAAAI,EAAAlG,QAAAkG,EAAAlG,SAAA,QAAA,GAAA+F,EAAA,MAAAC,SAKnB1K,EAAAA,EAAU8K,mBAAmB7/B,EAAG,OAYxC61B,EAAWr0B,UAAUs+B,aAAe,SAASC,EAASC,GAUlD,OAPAnK,EAAWqB,UAAU+I,UACjBC,EAAAA,EACA,CACIC,OAAQJ,EACRC,QAAAA,IAGDjL,EAAAA,EAAU+K,aAAaz0B,KAAKqvB,sBAAuBqF,EAASC,IAGvEnK,EAAWuK,UAAYh6B,EAAQ,KAAsCg6B,UAOrEvK,EAAWwK,kBAAoB,SAASplB,GAChCA,aAAiB+iB,EAAAA,GAAmB/iB,EAAMgjB,IAC1CpI,EAAWkI,uBAAuB9iB,GAElC4a,EAAWkJ,QAAQ9jB,IAa3B4a,EAAWyK,oBAAsB,SAASC,GAAwB,IAO1DC,EAPyCC,EAAiBx3B,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACrDs3B,GAUDC,EADiB,WAAjB11B,EAAOy1B,GACMA,EAEA,CACTpgC,KAAMogC,EACNE,WAAAA,GAIRlM,EAAO1Z,IAAIuH,KAAKyK,UAAU2T,IAG1Bn1B,KAAK6rB,UAAU+I,UAAUM,EAAOE,IApB5BlM,EAAOnZ,KAAK,kCA8BpBya,EAAW6K,cAAgB,SAASC,GAA4B,IAAjBF,EAAiBx3B,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACxDoC,KAAK6rB,UAAU+I,UAAUU,EAAWF,ydC5vBxC,IAAMlM,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAKnBgM,EAAU,CACZC,mBADY,SACOtoB,GAIf,OAAOA,EAAOA,EAAK/P,QAAQ,iBAAkB,IAAM+P,GAEvDuoB,UAPY,SAOFC,EAAWC,GACjB,IACIC,EAAKC,EADLryB,EAAO,KAeX,OAZKqyB,EAAQN,EAAQO,SAASJ,EAAW,eAAgBC,MAC7CC,EACEL,EAAQO,SACNJ,EACA,aACAC,MACZnyB,EAAO,CACHqyB,MAAON,EAAQQ,cAAcF,GAC7BD,IAAKL,EAAQS,YAAYJ,KAI1BpyB,GAEXuyB,cAzBY,SAyBE3mB,GACV,OAAOA,EAAK7Q,UAAU,KAE1B03B,cA5BY,SA4BEC,GACV,MAAA,eAAA74B,OAAsB64B,IAE1BF,YA/BY,SA+BA5mB,GACR,OAAOA,EAAK7Q,UAAU,KAE1B43B,YAlCY,SAkCAP,GACR,MAAA,aAAAv4B,OAAoBu4B,IAExBQ,SArCY,SAqCHhnB,GACL,OAAOA,EAAK7Q,UAAU,IAE1B83B,WAxCY,SAwCDjnB,GACP,IAAM5L,EAAO,GACP5E,EAAQwQ,EAAK7Q,UAAU,GAAG1B,MAAM,KAUtC,OARA2G,EAAK8yB,MAAQ13B,EAAM23B,QACnB/yB,EAAKgzB,KAAO53B,EAAM23B,QAClB/yB,EAAKsP,MAAQlU,EAAM23B,QACa,KAA5B33B,EAAMA,EAAM5B,OAAS,IACrB4B,EAAM0b,MAEV9W,EAAKizB,IAAM73B,EAEJ4E,GAEXkzB,WAtDY,SAsDDC,GACP,MAAA,KAAAt5B,OACSs5B,EAAML,MADf,KAAAj5B,OACwBs5B,EAAMH,KAD9B,KAAAn5B,OACsCs5B,EAAM7jB,MAD5C,KAAAzV,OAEQs5B,EAAMF,IAAIl5B,KAAK,OAE3Bq5B,YA3DY,SA2DAxnB,GACR,IAAM5L,EAAO,GACT5E,EAAQwQ,EAAK7Q,UAAU,GAAG1B,MAAM,KAQpC,OANA2G,EAAKvE,GAAKL,EAAM23B,QAChB33B,EAAQA,EAAM,GAAG/B,MAAM,KACvB2G,EAAK1O,KAAO8J,EAAM23B,QAClB/yB,EAAKqzB,UAAYj4B,EAAM23B,QACvB/yB,EAAKszB,SAAWl4B,EAAM5B,OAAS4B,EAAM23B,QAAU,IAExC/yB,GAQXuzB,aA7EY,SA6EC3nB,GACT,IAAMxQ,EAAQwQ,EAAK7Q,UAAU,IAAI1B,MAAM,KAQvC,MAAO,CAPU+B,EAAM,GACNA,EAAM,GAGHA,EAAM5B,OAAS,EAAI4B,EAAM,GAAK,OAKtDo4B,YAxFY,SAwFAnrB,GACR,IAAIuD,EAAI,YAAA/R,OACUwO,EAAGuC,aAAa,MAD1B,KAAA/Q,OACmCwO,EAAGuC,aAAa,QADnD,KAAA/Q,OAEAwO,EAAGuC,aAAa,cAOxB,OALIvC,EAAGuC,aAAa,aACmB,MAAhCvC,EAAGuC,aAAa,cACnBgB,GAAI,IAAA/R,OAAQwO,EAAGuC,aAAa,cAGzBgB,GAEX6nB,YApGY,SAoGA7nB,GACR,IAAM5L,EAAO,GACP5E,EAAQwQ,EAAK7Q,UAAU,GAAG1B,MAAM,KAStC,OAPA2G,EAAK0F,IAAMtK,EAAM23B,QACjB/yB,EAAK,gBAAkB5E,EAAM23B,QAC7B/yB,EAAK,cAAgB5E,EAAM23B,QACvB33B,EAAM5B,SACNwG,EAAK,kBAAoB5E,EAAMrB,KAAK,MAGjCiG,GAEX0zB,iBAjHY,SAiHK9nB,GACb,IAAM5L,EAAO,GACP5E,EAAQwQ,EAAK7Q,UAAU,IAAI1B,MAAM,KAMvC,OAJA2G,EAAKK,KAAOjF,EAAM23B,QAClB/yB,EAAK2zB,YAAcv4B,EAAM23B,QAGlB/yB,GAEX4zB,UA3HY,SA2HFhoB,GACN,IAAM5L,EAAO,GACT5E,EAAQwQ,EAAKvS,MAAM,KAEvB+B,EAAM23B,QACN33B,EAAQA,EAAMrB,KAAK,KAAKV,MAAM,KAC9B,IAAK,IAAItI,EAAI,EAAGA,EAAIqK,EAAM5B,OAAQzI,IAAK,CAGnC,IAFA,IAAIuB,EAAM8I,EAAMrK,GAAGsI,MAAM,KAAK,GAEvB/G,EAAIkH,QAAqB,MAAXlH,EAAI,IACrBA,EAAMA,EAAIyI,UAAU,GAExB,IAAM/I,EAAQoJ,EAAMrK,GAAGsI,MAAM,KAAK,GAE9B/G,GAAON,EACPgO,EAAK3F,KAAK,CAAE/I,KAAMgB,EACdN,MAAAA,IACGM,GAEP0N,EAAK3F,KAAK,CAAE/I,KAAM,GACdU,MAAOM,IAInB,OAAO0N,GAEX6zB,kBArJY,SAqJMjoB,GACd,IAAMkoB,EAAY,GACZC,EAAQnoB,EAAKvS,MAAM,KAEzBy6B,EAAUE,WAAaD,EAAM,GAAGh5B,UAAU,IAC1C+4B,EAAUG,UAAYF,EAAM,GAC5BD,EAAUvkB,SAAWwkB,EAAM,GAAGppB,cAC9BmpB,EAAU9b,SAAW+b,EAAM,GAC3BD,EAAUI,GAAKH,EAAM,GACrBD,EAAUd,KAAOe,EAAM,GAGvBD,EAAU9lB,KAAO+lB,EAAM,GACvBD,EAAUK,WAAa,EACvB,IAAK,IAAIpjC,EAAI,EAAGA,EAAIgjC,EAAMv6B,OAAQzI,GAAK,EACnC,OAAQgjC,EAAMhjC,IACd,IAAK,QACD+iC,EAAU,YAAcC,EAAMhjC,EAAI,GAClC,MACJ,IAAK,QACD+iC,EAAU,YAAcC,EAAMhjC,EAAI,GAClC,MACJ,IAAK,aACD+iC,EAAUK,WAAaJ,EAAMhjC,EAAI,GACjC,MACJ,IAAK,UACD+iC,EAAUM,QAAUL,EAAMhjC,EAAI,GAC9B,MACJ,QACI20B,EAAO1Z,IAAP,sCAAAnS,OAEQk6B,EAAMhjC,GAFd,SAAA8I,OAEwBk6B,EAAMhjC,EAAI,GAFlC,MAWR,OANA+iC,EAAUO,QAAU,IAIpBP,EAAUr4B,GAAK6B,KAAK2U,SAAShV,SAAS,IAAIie,OAAO,EAAG,IAE7C4Y,GAEXQ,kBA/LY,SA+LMC,GACd,IAAI3oB,EAAO,CAAA,eAAA/R,OACQ06B,EAAKP,YACpBO,EAAKN,UACLM,EAAKhlB,SACLglB,EAAKvc,SACLuc,EAAKL,GACLK,EAAKvB,KACL,MACAuB,EAAKvmB,MACPjU,KAAK,KAGP,OADA6R,GAAQ,IACA2oB,EAAKvmB,MACb,IAAK,QACL,IAAK,QACL,IAAK,QACGumB,EAAKC,gBAAgB,aACdD,EAAKC,gBAAgB,cAC5B5oB,GAAQ,QACRA,GAAQ,IACRA,GAAQ2oB,EAAK,YACb3oB,GAAQ,IACRA,GAAQ,QACRA,GAAQ,IACRA,GAAQ2oB,EAAK,YACb3oB,GAAQ,KAchB,OAVI2oB,EAAKC,gBAAgB,aACrB5oB,GAAQ,UACRA,GAAQ,IACRA,GAAQ2oB,EAAKH,QACbxoB,GAAQ,KAEZA,GAAQ,aACRA,GAAQ,IACRA,GAAQ2oB,EAAKC,gBAAgB,cAAgBD,EAAKJ,WAAa,KAInEM,UAzOY,SAyOFC,GAON,IAHA,IAAM10B,EAAO,IAAImnB,IACXwN,EAAQD,EAAKr7B,MAAM,QAEhBtI,EAAI,EAAGA,EAAI4jC,EAAMn7B,OAAQzI,IAC9B,GAAiC,YAA7B4jC,EAAM5jC,GAAGgK,UAAU,EAAG,GAAkB,CAExC,IAAMyyB,EAAOmH,EAAM5jC,GAAGsI,MAAM,WAAW,GAAGA,MAAM,KAAK,GAEhD2G,EAAKpO,IAAI47B,IACVxtB,EAAK4oB,IAAI4E,EAAM,IAGnBxtB,EAAKpO,IAAI47B,GAAMnzB,KAAKs6B,EAAM5jC,IAIlC,OAAOiP,GAEX40B,YA/PY,SA+PAhpB,GACR,IAAMxQ,EAAQwQ,EAAKsP,OAAO,IAAI7hB,MAAM,KAC9B2G,EAAO,GAMb,OAJAA,EAAK60B,GAAKz5B,EAAM23B,QAChB/yB,EAAKgO,KAAO5S,EAAM23B,QAClB/yB,EAAK80B,OAAS15B,EAEP4E,GAEX+0B,YAzQY,SAyQAnpB,GACR,IAAMxQ,EAAQwQ,EAAKsP,OAAO,GAAG7hB,MAAM,KAC7B2G,EAAO,GAYb,OAVAA,EAAKhO,MAAQoJ,EAAM23B,SACc,IAA7B/yB,EAAKhO,MAAM8I,QAAQ,KACnBkF,EAAKg1B,UAAY,QAEjBh1B,EAAKg1B,UAAYh1B,EAAKhO,MAAMkpB,OAAOlb,EAAKhO,MAAM8I,QAAQ,KAAO,GAC7DkF,EAAKhO,MAAQgO,EAAKhO,MAAMkpB,OAAO,EAAGlb,EAAKhO,MAAM8I,QAAQ,OAEzDkF,EAAKtE,IAAMN,EAAM23B,QACjB/yB,EAAK80B,OAAS15B,EAEP4E,GAEXsyB,SAzRY,SAyRH2C,EAAUC,EAAQC,GAGvB,IAFA,IAAIR,EAAQM,EAAS57B,MAAM,QAElBtI,EAAI,EAAGA,EAAI4jC,EAAMn7B,OAAQzI,IAC9B,GAAI4jC,EAAM5jC,GAAGgK,UAAU,EAAGm6B,EAAO17B,UAAY07B,EACzC,OAAOP,EAAM5jC,GAGrB,IAAKokC,EACD,OAAO,EAIXR,EAAQQ,EAAY97B,MAAM,QAC1B,IAAK,IAAIH,EAAI,EAAGA,EAAIy7B,EAAMn7B,OAAQN,IAC9B,GAAIy7B,EAAMz7B,GAAG6B,UAAU,EAAGm6B,EAAO17B,UAAY07B,EACzC,OAAOP,EAAMz7B,GAIrB,OAAO,GAEXk8B,UA/SY,SA+SFH,EAAUC,EAAQC,GAIxB,IAHA,IAAIR,EAAQM,EAAS57B,MAAM,QACrBg8B,EAAU,GAEPtkC,EAAI,EAAGA,EAAI4jC,EAAMn7B,OAAQzI,IAC1B4jC,EAAM5jC,GAAGgK,UAAU,EAAGm6B,EAAO17B,UAAY07B,GACzCG,EAAQh7B,KAAKs6B,EAAM5jC,IAG3B,GAAIskC,EAAQ77B,SAAW27B,EACnB,OAAOE,EAIXV,EAAQQ,EAAY97B,MAAM,QAC1B,IAAK,IAAIH,EAAI,EAAGA,EAAIy7B,EAAMn7B,OAAQN,IAC1By7B,EAAMz7B,GAAG6B,UAAU,EAAGm6B,EAAO17B,UAAY07B,GACzCG,EAAQh7B,KAAKs6B,EAAMz7B,IAI3B,OAAOm8B,GAEXC,kBAtUY,SAsUM1pB,GAKd,GAAmC,IAA/BA,EAAK9Q,QAAQ,cAEb8Q,EAAI,KAAA/R,OAAQ+R,QACT,GAA8B,iBAA1BA,EAAK7Q,UAAU,EAAG,IAMzB,OALA2qB,EAAO1Z,IACH,kEAEJ0Z,EAAO1Z,IAAIJ,GAEJ,KAE6B,SAApCA,EAAK7Q,UAAU6Q,EAAKpS,OAAS,KAE7BoS,EAAOA,EAAK7Q,UAAU,EAAG6Q,EAAKpS,OAAS,IAE3C,IAAMs6B,EAAY,GACZC,EAAQnoB,EAAKvS,MAAM,KAEzB,GAAiB,QAAb06B,EAAM,GAIN,OAHArO,EAAO1Z,IAAI,uCACX0Z,EAAO1Z,IAAIJ,GAEJ,KAEXkoB,EAAUE,WAAaD,EAAM,GAAGh5B,UAAU,IAC1C+4B,EAAUG,UAAYF,EAAM,GAC5BD,EAAUvkB,SAAWwkB,EAAM,GAAGppB,cAC9BmpB,EAAU9b,SAAW+b,EAAM,GAC3BD,EAAUI,GAAKH,EAAM,GACrBD,EAAUd,KAAOe,EAAM,GAGvBD,EAAU9lB,KAAO+lB,EAAM,GAEvBD,EAAUK,WAAa,IACvB,IAAK,IAAIpjC,EAAI,EAAGA,EAAIgjC,EAAMv6B,OAAQzI,GAAK,EACnC,OAAQgjC,EAAMhjC,IACd,IAAK,QACD+iC,EAAU,YAAcC,EAAMhjC,EAAI,GAClC,MACJ,IAAK,QACD+iC,EAAU,YAAcC,EAAMhjC,EAAI,GAClC,MACJ,IAAK,aACD+iC,EAAUK,WAAaJ,EAAMhjC,EAAI,GACjC,MACJ,IAAK,UACD+iC,EAAUM,QAAUL,EAAMhjC,EAAI,GAC9B,MACJ,QACI20B,EAAO1Z,IAAP,oBAAAnS,OAA+Bk6B,EAAMhjC,GAArC,SAAA8I,OAA+Ck6B,EAAMhjC,EAAI,GAAzD,MASR,OANA+iC,EAAUO,QAAU,IAIpBP,EAAUr4B,GAAK6B,KAAK2U,SAAShV,SAAS,IAAIie,OAAO,EAAG,IAE7C4Y,GAEXyB,oBAxYY,SAwYQhB,GAChB,IAAI3oB,EAAO,eAEXA,GAAQ2oB,EAAK3pB,aAAa,cAC1BgB,GAAQ,IACRA,GAAQ2oB,EAAK3pB,aAAa,aAC1BgB,GAAQ,IAER,IAAI2D,EAAWglB,EAAK3pB,aAAa,YAmBjC,OAfI4c,EAAAA,EAAQgO,aAA0C,WAA3BjmB,EAAS5E,gBAChC4E,EAAW,OAGf3D,GAAQ2D,EACR3D,GAAQ,IACRA,GAAQ2oB,EAAK3pB,aAAa,YAC1BgB,GAAQ,IACRA,GAAQ2oB,EAAK3pB,aAAa,MAC1BgB,GAAQ,IACRA,GAAQ2oB,EAAK3pB,aAAa,QAC1BgB,GAAQ,IACRA,GAAQ,MACRA,GAAI,IAAA/R,OAAQ06B,EAAK3pB,aAAa,SAC9BgB,GAAQ,IACA2oB,EAAK3pB,aAAa,SAC1B,IAAK,QACL,IAAK,QACL,IAAK,QACG2pB,EAAK3pB,aAAa,aACX2pB,EAAK3pB,aAAa,cACzBgB,GAAQ,QACRA,GAAQ,IACRA,GAAQ2oB,EAAK3pB,aAAa,YAC1BgB,GAAQ,IACRA,GAAQ,QACRA,GAAQ,IACRA,GAAQ2oB,EAAK3pB,aAAa,YAC1BgB,GAAQ,KAchB,MAV+B,QAA3B2D,EAAS5E,gBACTiB,GAAQ,UACRA,GAAQ,IACRA,GAAQ2oB,EAAK3pB,aAAa,WAC1BgB,GAAQ,KAEZA,GAAQ,aACRA,GAAQ,IACRA,GAAQ2oB,EAAK3pB,aAAa,eAAiB,IAE3C,GAAA/Q,OAAU+R,EAAV,SAQJ6pB,sBAtcY,SAscUC,GAClB,IAAMC,EAAWD,EAAWE,MACvBt8B,IAAI,SAAAu8B,GAAQ,OAAIA,EAASp6B,KACzBq6B,OAAO,SAACtI,EAAM3yB,EAAOk7B,GAAd,OAAwBA,EAAMj7B,QAAQ0yB,KAAU3yB,IACvDrB,OACCw8B,EACCN,EAAWO,YAAcP,EAAWO,WAAWz8B,QAAW,EAEjE,KAAIm8B,EAAW,GAAmB,IAAdK,GAApB,CAIA,IAAIE,EAAc,KAElB,GAAiB,IAAbP,EACAO,EAAcR,EAAWE,MAAM,GAAGn6B,QAC/B,GAAiB,IAAbk6B,EAAgB,CAEvB,IAAMQ,EACAT,EAAWO,WAAWG,KACpB,SAAAC,GAAK,MAAwB,QAApBA,EAAMC,YAEnBH,IACAD,EAAcC,EAASP,MAAMv8B,MAAM,KAAK,SAEzC,GAAIs8B,GAAY,EAAG,CAEtB,IAAMY,EACAb,EAAWO,WAAWG,KACpB,SAAAC,GAAK,MAAwB,QAApBA,EAAMC,YAEnBC,IACAL,EAAcK,EAASX,MAAMv8B,MAAM,KAAK,IAIhD,OAAO68B,IAOXM,aAjfY,WAkfR,OAAOC,EAAAA,EAAWC,UAAU,EAAG,aAYnCC,iBA9fY,SA8fKC,EAAOpJ,EAAMqJ,GAC1B,IAAK,IAAI9lC,EAAI,EAAGA,EAAI6lC,EAAMhB,MAAMp8B,SAAUzI,EAAG,CACzC,IAAM+lC,EAAWF,EAAMhB,MAAM7kC,GAE7B,GAAI+lC,EAASr7B,KAAO+xB,GACbsJ,EAASlxB,YAAcixB,EAC1B,OAAOC,EAAS9kC,QAa5B+kC,gBAjhBY,SAihBIC,GACZ,OAAOA,EACFpB,MACAv8B,MAAM,KACNC,IAAI,SAAA29B,GAAO,OAAI/Y,SAAS+Y,EAAS,OAS1CC,SA9hBY,SA8hBHC,EAAKnpB,GACV,OAAOmpB,EAAIrE,MAAMsD,KAAK,SAAAjlC,GAAC,OAAIA,EAAE6c,OAASA,KAO1CopB,SAtiBY,SAsiBHD,GACL,IAAME,EACAF,EAAI99B,MAAM,MAAMy8B,OAAO,SAAAlqB,GAAI,OAAIA,EAAK0rB,WAAW,kBAErD,GAAID,EAAW79B,OAAS,EACpB,OAAO69B,EAAW,GAAGnc,OAAO,eAAe1hB,SAenD+9B,iBA1jBY,SA0jBK7B,EAAY8B,GACzB,IAAIC,EAAc,KAElB,GAAK/B,GAAe8B,EAApB,CAIA,IAAK,IAAIzmC,EAAI,EAAGA,EAAI2kC,EAAWgC,IAAIl+B,SAAUzI,EAAG,CAC5C,IAAM2mC,EAAMhC,EAAWgC,IAAI3mC,GAE3B,GAAI2mC,EAAIC,OACDD,EAAIC,MAAMhtB,gBAAkB6sB,EAAU7sB,cAAe,CACxD8sB,EAAcC,EAAIE,QAClB,OAGR,GAAIH,EAAa,CAIb,IAAMI,EACAnC,EAAWoC,SACR76B,WACA5D,MAAM,KACNC,IAAI,SAAAzG,GAAC,OAAIqrB,SAASrrB,EAAG,MACxBklC,EAAeF,EAAa/8B,QAAQ28B,GAE1CI,EAAa/9B,OAAOi+B,EAAc,GAClCF,EAAaG,QAAQP,GACrB/B,EAAWoC,SAAWD,EAAa99B,KAAK,QAahDk+B,gBApmBY,SAomBIvC,EAAY8B,GACxB,GAAK9B,GAAe8B,EAApB,CAIA,IAAMU,EAAY,GALiBlO,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAOnC,IAAA,IAAAgzB,EAAAC,EAAkBsL,EAAWgC,IAA7B5lC,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAkC,CAAA,IAAvB0N,EAAuBvN,EAAAn4B,MAC1B0lC,EAAIC,OACDD,EAAIC,MAAMhtB,gBAAkB6sB,EAAU7sB,eACzCutB,EAAU79B,KAAKq9B,EAAIE,UAVQ,MAAAnhB,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAcnC,GAAIgO,EAAU1+B,OAAS,EAAG,CAGtB,IAAM2+B,EAAUD,EAAU5+B,IAAI,SAAA8+B,GAAI,MAAA,OAAAv+B,OAAWu+B,KACvCC,EAAS3C,EAAW4C,KAAKxC,OAC3B,SAAAsC,GAAI,OAAsC,IAAlCD,EAAQr9B,QAAQs9B,EAAKrgC,UAEjCmgC,EAAU79B,KAAVC,MAAA49B,EAASK,EAASF,EAAO/+B,IAAI,SAAA8+B,GAAI,OAAIA,EAAKR,YAK1C,IAIMY,EAJS9C,EAAWoC,SACrB76B,WACA5D,MAAM,KACNC,IAAI+D,QACcy4B,OAAO,SAAAjB,GAAE,OAA+B,IAA3BqD,EAAUp9B,QAAQ+5B,KAE/B,IAAnB2D,EAAQh/B,QAERk8B,EAAW1C,KAAO,EAClB0C,EAAWV,UAAY,WACvBU,EAAWoC,SAAW,KAEtBpC,EAAWoC,SAAWU,EAAQz+B,KAAK,KAGvC27B,EAAWgC,IAAMhC,EAAWgC,IAAI5B,OAC5B,SAAAsC,GAAI,OAAuC,IAAnCI,EAAQ19B,QAAQs9B,EAAKR,WACjClC,EAAW4C,KAAO5C,EAAW4C,KAAKxC,OAC9B,SAAAsC,GAAI,OAAuC,IAAnCI,EAAQ19B,QAAQs9B,EAAKR,WAC7BlC,EAAW+C,SACX/C,EAAW+C,OAAS/C,EAAW+C,OAAO3C,OAClC,SAAAsC,GAAI,OAAuC,IAAnCI,EAAQ19B,QAAQs9B,EAAKR,gBAMlC7F,EAAAA,EAAAA,0DCvjBfvhC,EAAOD,QAxGW,CAIdmoC,qBAAsB,2BAKtBC,oBAAqB,0BACrBC,kBAAmB,wBACnBC,6BAA8B,mCAC9B1V,yBAA0B,+BAC1B2V,uBAAwB,6BAOxBC,oBAAqB,0BAErBC,oBAAqB,yBAOrBC,oBAAqB,0BAQrBC,yBAA0B,+BAE1BC,eAAgB,qBAMhBC,mBAAoB,yBAIpBC,kBAAmB,wBAMnBC,qBAAsB,2BAItBC,oBAAqB,0BAKrBC,6BAA8B,mCAK9BC,8BAA+B,oCAC/BC,4BAA6B,kCAC7BC,oBAAqB,0BAKrBC,wBAAyB,8BACzBC,sBAAuB,4BAMvBxW,0BAA2B,gCAS3ByW,oBAAqB,0BASrBC,qBAAsB,srDCzEnB,IAAMC,EAAmB,cAMnBC,EAAY,OAMZC,EAAa,QAMbC,EAAU,KAOVC,EAAwB,UAOxBC,EAA2B,yBAO3BC,EAA4B,4BAQ5BC,EAA2B,2BAO3BC,EAA0B,YAO1BC,EACP,6BAOOC,EACP,4BAOOC,EAAyB,cAMzBC,EAAoB,SAOpBC,EAA2B,gBAuB3BC,EAAmB,mBAYnBC,EAA0B,0BAS1B1J,EAAW,WAgBX2J,EAAe,eAWfC,EACP,kCAgBOC,EAAoB,oBAQpBC,EAAgB,sBAUhBC,EAAgB,gBAMhBC,EAAwB,WAGjC,MAAO,CACHC,OAHe,cAIfC,cAJe,cAKfvtB,KAAMgsB,IAUDwB,EACP,SAASC,EAAWC,EAAcC,GAChC,MAAO,CACH3tB,KAAMgsB,EACNsB,OAAQ,oBACR12B,WAAUg3B,EAAA,CACNC,WAAcJ,EACdK,cAAiBJ,GACdC,KAgBNI,EAAoC,SAASC,EAAOp3B,GAC7D,IAAM02B,EAAS,2BAEf,MAAO,CACHA,OAAAA,EACAC,cAAeS,EACfp3B,WAAAA,EACAq3B,OAAQX,EACRttB,KAAMgsB,IAWDkC,EAAoB,SAASC,EAAeC,EAAQC,GAO7D,MAAO,CACHz3B,WAPe,CACf03B,eAAkBH,EAClBC,OAAAA,EACAC,IAAAA,GAKA/qC,KAAM,UACN0c,KAAMgsB,IAODuC,EAAuB,WAGhC,MAAO,CACHjB,OAHW,aAIXC,cAJW,aAKXvtB,KAAMgsB,IAYDwC,EAA0B,SAASlB,GAAyB,IAAjB12B,EAAiBxK,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACjE,MAAO,CACH4T,KAAMgsB,EACNiC,OAAQ,iBACRX,OAAAA,EACA12B,WAAAA,IAUK63B,EAAyC,WAA0B,IAAjB73B,EAAiBxK,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAGxE,MAAO,CACH4T,KAAMgsB,EACNiC,OAAQ,mBACRX,OALW,WAMX12B,WAAAA,IASK83B,EAAoB,SAASpB,GAAyB,IAAjB12B,EAAiBxK,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAC3D,MAAO,CACH4T,KAAMgsB,EACNsB,OAAAA,EACAW,OAAQ,SACRr3B,WAAAA,IAWK+3B,EAA8B,SAASC,EAAW5qC,GAC3D,MAAO,CACH4S,WAAY,CACRi4B,WAAcD,EACd5qC,MAAAA,GAEJspC,OAAQ,4BACRttB,KAAMgsB,IASD8C,EAAiB,SAASxB,GAAyB,IAAjB12B,EAAiBxK,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACxD,MAAO,CACH4T,KAAMgsB,EACNsB,OAAAA,EACAW,OAAQ,MACRr3B,WAAAA,IAOKm4B,EAA2B,WACpC,MAAO,CACH/uB,KAAMgsB,EACNsB,OAAQ,mBA+CH0B,EAAsB,SAASp4B,GACxC,MAAO,CACHoJ,KAAMgsB,EACNsB,OAAQ,YACR12B,WAAAA,IAWKq4B,EAAyB,SAASr4B,GAC3C,MAAO,CACHoJ,KAAMgsB,EACNsB,OAAQ,gBACR12B,WAAAA,IAYD,SAASs4B,EAA8BC,EAAQC,EAAkBC,GACpE,MAAO,CACHrvB,KAAMgsB,EACNsB,OAAQ,uBACR12B,WAAY,CACRu4B,OAAAA,EACAC,iBAAAA,EACAC,kBAAAA,IAYL,IAAMC,EAAiC,SAASnb,EAAMpM,GACzD,MAAO,CACH/H,KAAMgsB,EACNsB,OAAQ,uBACR12B,WAAY,CACRud,KAAAA,EACApM,OAAAA,KAoBCwnB,EAAkB,SAAS34B,GACpC,OAAOm3B,EAAkC,OAAQn3B,kCC9gBrD/T,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAA8a,IAAA3sC,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAA+a,IAGO,IAAMD,EAAQ,QAKRC,EAAQ,i8CCgBrB,IAAM/X,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAKrByB,EAAAA,EAAQkW,eACRnmC,EAAQ,KAGZ,IA+DIomC,EACAC,EAhEExW,EAAe,IAAIC,EAAAA,EAenBwW,EAA0B,CAAE,QAAS,SAOrCC,EAAsB,CACxBC,MAAO,CACHC,YAAa,GAAK,EAClBC,OAAQ,CACJC,MAAO,IACPC,IAAK,IACLhe,IAAK,OAQXie,EAAwB,EAI1BC,EAAsB,UAEtBC,GAAqB,EAGrBC,GAAY,EAGZC,GAAa,EAGbC,GAAY,EAGZC,GAAa,EAGbC,GAAa,EAEXC,EAA0B97B,SAASiG,cAAc,SACjD81B,OAC6C,IAAtCD,EAAwBE,UAuErC,SAASC,EAAeC,GAAkB,IAAd/wB,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAC5Bk1B,EAAc,CAChB2P,OAAO,EACPlB,OAAO,GAULmB,EACA1X,EAAAA,EAAQgO,aACHhO,EAAAA,EAAQ2X,mBACR3X,EAAAA,EAAQ4X,UACR5X,EAAAA,EAAQC,gBAEnB,GAAIuX,EAAGlkC,QAAQ,UAAY,EAAG,CAK1B,GAHAw0B,EAAYyO,MAAQ,CAAEsB,UAAW,GAC7BC,SAAU,IAEVrxB,EAAQsxB,eACJL,IAEA5P,EAAYyO,MAAMyB,SAAWvxB,EAAQsxB,gBAIzCjQ,EAAYyO,MAAMsB,UAAUI,SAAWxxB,EAAQsxB,mBAC5C,CAMH,IAAMG,EAAazxB,EAAQyxB,YAAcC,EAAAA,EAAiBC,KAEtDV,IACA5P,EAAYyO,MAAM2B,WAAaA,GAEnCpQ,EAAYyO,MAAMuB,SAASjlC,KAAK,CAC5BqlC,WAAAA,KAIJzxB,EAAQ4xB,QAAU5xB,EAAQ6xB,QAAU7xB,EAAQ8xB,QAGxC9xB,EAAQ4xB,QAAU5xB,EAAQ8xB,OAE1B9xB,EAAQ4xB,OAAS5xB,EAAQ4xB,QAAU5xB,EAAQ8xB,IAC3CzQ,EAAYyO,MAAMsB,UAAUW,aAAe/xB,EAAQ4xB,QAEnD5xB,EAAQ6xB,SACRxQ,EAAYyO,MAAMsB,UAAUY,aAAehyB,EAAQ6xB,SAtGnE,SACQxQ,EACA4P,EACAgB,GACAC,EAAAA,EAAYD,KACRhB,IACA5P,EAAYyO,MAAMqC,MAAQ,CACtBlC,MAAOiC,EAAAA,EAAYD,GAAYE,OAEnC9Q,EAAYyO,MAAME,OAAS,CACvBC,MAAOiC,EAAAA,EAAYD,GAAYjC,SAIvC3O,EAAYyO,MAAMsB,UAAUgB,SAAWF,EAAAA,EAAYD,GAAYE,MAC/D9Q,EAAYyO,MAAMsB,UAAUiB,UAAYH,EAAAA,EAAYD,GAAYjC,QAGhE3O,EAAYyO,MAAMsB,UAAUgB,WAC5B/Q,EAAYyO,MAAMsB,UAAUkB,SACtBjR,EAAYyO,MAAMsB,UAAUgB,UAGlC/Q,EAAYyO,MAAMsB,UAAUiB,YAC5BhR,EAAYyO,MAAMsB,UAAUmB,UACtBlR,EAAYyO,MAAMsB,UAAUiB,WAiFlCG,CACInR,EAAa4P,EAAgCjxB,EAAQiyB,YA+C7D,GA7CIlB,EAAGlkC,QAAQ,UAAY,IACnB0sB,EAAAA,EAAQC,gBAGR6H,EAAY2P,OAAQ,EACbzX,EAAAA,EAAQgO,YACXvnB,EAAQyyB,YACRpR,EAAY2P,MAAQ,CAChBI,UAAW,GACXG,SAAUvxB,EAAQyyB,YAClBpB,SAAU,CAAE,CACRG,SAAUxxB,EAAQyyB,eAG1BpR,EAAY2P,OAAQ,GAIxB3P,EAAY2P,MAAQ,CAAEI,UAAW,GAC7BC,SAAU,IACVrxB,EAAQyyB,cACJxB,IAEA5P,EAAY2P,MAAMO,SAAWvxB,EAAQyyB,aAIzCpR,EAAY2P,MAAMK,SAASjlC,KAAK,CAC5BolC,SAAUxxB,EAAQyyB,eAK1BpR,EAAY2P,MAAMK,SAASjlC,KACvB,CAAEsmC,kBAAmBnC,IAAeD,GACpC,CAAEqC,sBAAuBpC,IAAeD,GACxC,CAAEsC,qBAAsBnC,IAAeH,GACvC,CAAEuC,sBAAuBrC,IAAcF,GACvC,CAAEwC,oBAAqBpC,IAAeJ,GACtC,CAAEyC,uBAAwBvC,IAAcF,GACxC,CAAE0C,uBAAwBzC,IAAeD,GACzC,CAAE2C,sBAAuBxC,IAAeH,MAIhDS,EAAGlkC,QAAQ,WAAa,EACxB,GAAI0sB,EAAAA,EAAQ2Z,WACR7R,EAAYyO,MAAQ,CAChBsB,UAAW+B,EAAgBxF,EAAA,GACpB3tB,EADoB,CAEvBguB,OAAQ,YAEZqD,SAAU,SAGX,GAAI9X,EAAAA,EAAQgO,YACflG,EAAYyO,MAAQ,CAChBsD,eAAgB,SAChBC,YAAa,SACbC,UAAWtzB,EAAQszB,WAAa,CAC5BphB,IAAKie,EACLD,IAAKC,QAIV,CACH,IAAMoD,EACA,uEAGNC,EAAAA,EAAqBC,iBAAiB,IAAIhnC,MAAM8mC,IAChD9b,EAAOtZ,MAAMo1B,GAiCrB,OA9BIxC,EAAGlkC,QAAQ,YAAc,IACzBw0B,EAAYyO,MAAQ,CAChBsB,UAAW+B,EAAgBxF,EAAA,GACpB3tB,EADoB,CAEvBguB,OAAQ,aAEZqD,SAAU,KAIdrxB,EAAQ0zB,YACHrS,EAAYyO,QAEbzO,EAAYyO,MAAQ,CAAEsB,UAAW,GAC7BC,SAAU,KAElBhQ,EAAYyO,MAAMuB,SAASjlC,KAAK,CAAEsnC,UAAW1zB,EAAQ0zB,aAOrDna,EAAAA,EAAQgO,aAAevnB,EAAQ2zB,sBAI/BtS,EAAYuS,MAAO,GAGhBvS,EAuGX,SAAS8R,IAA+B,IAAdnzB,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAE5B0nC,EAKA7zB,EALA6zB,cAFgCC,EAOhC9zB,EAJAszB,UAAAA,OAHgC,IAAAQ,EAGpB,CACR5hB,IAAKie,EACLD,IAAKC,GALuB2D,EAQ5B5D,EAAaoD,EAAbpD,IAAKhe,EAAQohB,EAARphB,IAEPmP,EAAc,CAChB0S,kBAAmB/zB,EAAQguB,OAC3BsE,SAAU5vC,OAAOsxC,OAAO7B,MACxBI,UAAW7vC,OAAOsxC,OAAOhE,QAe7B,MAZmB,iBAAR9d,IACPmP,EAAY0Q,aAAe7f,GAGZ,iBAARge,IACP7O,EAAY2Q,aAAe9B,QAGF,IAAlB2D,IACPxS,EAAY4S,oBAAsBJ,GAG/BxS,EASX,SAAS6S,IAAoC,IAAdl0B,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAI/Bk1B,EAAc,CAChBiS,UAAWnD,GAEPgE,EAA4Bn0B,EAA5Bm0B,wBAMR,OAJIA,GAA2BA,EAAwBjE,MACnD7O,EAAYiS,UAAYa,EAAwBjE,KAG7C7O,EASX,SAAS+S,EAAyBrD,EAAIjW,GAClC,IAAMuZ,EACAC,QAAQxZ,IAAWA,EAAOyZ,iBAAiBhpC,OAAS,EACpDipC,EACAF,QAAQxZ,IAAWA,EAAO2Z,iBAAiBlpC,OAAS,EACpDmpC,EAAqB,IAEE,IAAzB3D,EAAGlkC,QAAQ,WACX6nC,EAAmB5E,MAAQ0E,IAEF,IAAzBzD,EAAGlkC,QAAQ,WACX6nC,EAAmB1D,MAAQqD,GAG/Blb,EAAa2C,KAAK6Y,EAAAA,EAAU7J,oBAAqB4J,GA4CrD,SAASE,EAA0BC,GAC/B,IAAMC,EACAD,EAAWhN,OAAO,SAAAzkC,GAAC,MAAe,eAAXA,EAAE2xC,OAAuBxpC,OAChDypC,EACAH,EAAWhN,OAAO,SAAAzkC,GAAC,MAAe,gBAAXA,EAAE2xC,OAAwBxpC,OACjD0pC,EACAJ,EAAWhN,OAAO,SAAAzkC,GAAC,MAAe,eAAXA,EAAE2xC,OAAuBxpC,OAChD2pC,EACAL,EAAWhN,OAAO,SAAAzkC,GAAC,MAAe,gBAAXA,EAAE2xC,OAAwBxpC,OAEvDspC,EAAWrlC,QAAQ,SAAA2lC,GACf,IAAMx+B,EAAa,CACfy+B,yBAA4BN,EAC5BO,0BAA6BL,EAC7BM,yBAA4BL,EAC5BM,0BAA6BL,EAC7BM,UAAaL,EAAO5D,SACpBkE,gBAAmBN,EAAOO,QAC1BC,YAAeR,EAAOJ,KACtBa,aAAgBT,EAAOU,OAG3B9c,EAAAA,EAAW6K,cAAciJ,EAAAA,EAAkBl2B,SAq8B7Cm/B,EAAW,gBAhyBb,SAAAC,IAAc,mGAAAC,CAAAznC,KAAAwnC,GAAAE,EAAA1nC,KAAA2nC,EAAAH,GAAA9yC,KAAAsL,KACJ4qB,0PALSgd,EAAAA,2CAiBA,IAAAC,EAAA7nC,KAAdyR,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GA4BX,GA3BkC,kBAAvB6T,EAAQuwB,aACfA,EAAavwB,EAAQuwB,WACrB9Y,EAAOpZ,KAAP,gBAAAzS,OAA4B2kC,KAEC,kBAAtBvwB,EAAQwwB,YACfA,EAAYxwB,EAAQwwB,UACpB/Y,EAAOpZ,KAAP,eAAAzS,OAA2B4kC,KAEE,kBAAtBxwB,EAAQswB,YACfA,EAAYtwB,EAAQswB,UACpB7Y,EAAOpZ,KAAP,eAAAzS,OAA2B0kC,KAEG,kBAAvBtwB,EAAQywB,aACfA,EAAazwB,EAAQywB,WACrBhZ,EAAOpZ,KAAP,gBAAAzS,OAA4B6kC,KAEE,kBAAvBzwB,EAAQ0wB,aACfA,EAAa1wB,EAAQ0wB,WACrBjZ,EAAOpZ,KAAP,gBAAAzS,OAA4B8kC,KAGhChB,OAAmBxmC,EACnBxG,OAAO2zC,cAAc1G,GACrBA,OAA4BzmC,EAE5BqF,KAAK+nC,iBAlqBb,WACI,GAAIC,UAAUC,cAAgBD,UAAUC,aAAaF,iBACjD,OAAO,SAAA3oC,GACH4oC,UAAUC,aAAaF,mBAClBG,KAAK9oC,EAAU,WAAA,OAAMA,EAAS,OA8pBf+oC,GAEpBnd,EAAAA,EAAQod,iBACRpoC,KAAKqoC,sBAAwBC,kBAE7BtoC,KAAKuoC,kBACCC,EAAsB,SAAChwB,EAAS+T,GAC1B/T,IACAA,EAAQiwB,UAAYlc,KAIhCvsB,KAAK0oC,YAAc,SAAAC,GAAA,OAAAA,EAAG1pC,IACtBe,KAAK4oC,WAAa,SAAAC,GAAA,OAAAA,EAAG5pC,QAClB,CAAA,IAAI+rB,EAAAA,EAAQ8d,oBACR9d,EAAAA,EAAQC,gBAmCZ,CACH,IAAM5b,EAAU,gDAGhB,MADA6Z,EAAOtZ,MAAMP,GACP,IAAInR,MAAMmR,GArChBrP,KAAKqoC,sBAAwBC,kBAE7BtoC,KAAKuoC,kBACCC,EAAsB,SAAChwB,EAAS+T,GAG9B,OApGpB,SAA4B/T,EAAS+T,GAEjC,IAeIwc,EAfAC,EAAwB,YAEtBA,KAAyBxwB,IAC3BwwB,EAAwB,kBACOxwB,IAC3BwwB,EAAwB,MAG5BA,EACAxwB,EAAQwwB,GAAyBzc,GAQjCA,KACAwc,EAAMxc,EAAO0c,kBAKT1c,EAAO0c,eAAiBF,EAAMG,IAAIC,gBAAgB5c,KAG1D/T,EAAQuwB,IAAMA,GAAO,IAsELK,CAAmB5wB,EAAS+T,GAErB/T,IAGfxY,KAAK0oC,YAAc,SAAAW,GAAiB,IAANpqC,EAAMoqC,EAANpqC,GAO1B,MACkB,iBAAPA,EACDA,EACAs2B,EAAAA,EAAQC,mBAAmBv2B,IAEzCe,KAAK4oC,WAAa,SAAAU,GAAA,OAAAA,EAAGrqC,IAEhBsqC,YAAYpzC,UAAU+vC,iBACvBqD,YAAYpzC,UAAU+vC,eAAiB,WACnC,OAAOlmC,KAAKwpC,cAGfD,YAAYpzC,UAAU6vC,iBACvBuD,YAAYpzC,UAAU6vC,eAAiB,WACnC,OAAOhmC,KAAKypC,cAUxBzpC,KAAK0pC,mBAAmBj4B,GAExBk4B,EAAAA,EAAe10B,KACXxD,EACAzR,KAAK4pC,4BAA4B7zC,KAAKiK,OAEtCA,KAAK6pC,yBACL7pC,KAAK+nC,iBAAiB,SAAA+B,GAClB3I,EAAmB2I,EAAGxsC,OAAO,GAE7B4rB,EAAOrZ,MAAM,sBAAuBsxB,GACpCkF,EAA0BlF,GAE1BvW,EAAa2C,KACT6Y,EAAAA,EAAU/I,sBACV8D,GAQJ,IAAM4I,EAAqB,WAAA,OAAMlC,EAAKE,iBAAiB,SAAAiC,GAlRvE,IAAmCC,GApEnC,SAAsCC,GAClC,OAAIA,EAAWltC,SAAWmkC,EAAiBnkC,QAOvCktC,EAAWptC,IAAIqtC,GAAuBr9B,OAAOvP,KAAK,MAC1C4jC,EACCrkC,IAAIqtC,GAAuBr9B,OAAOvP,KAAK,IAQpD,SAAS4sC,EAAsBr6B,GAC3B,OAAOiH,KAAKyK,UAAU,CAClBglB,KAAM12B,EAAK02B,KACXxD,SAAUlzB,EAAKkzB,SACfmE,QAASr3B,EAAKq3B,QACdG,MAAOx3B,EAAKw3B,MACZ8C,OAAQt6B,EAAKs6B,WA+TDC,CAA6BL,KAlRjD7I,GAD+B8I,EAoReD,GAnRXruC,MAAM,GACzCutB,EAAOpZ,KACH,qCACAqxB,GAEJkF,EAA0BlF,GAG1BvW,EAAa2C,KAAK6Y,EAAAA,EAAUhJ,wBAAyB6M,GAErDrf,EAAa2C,KAAK6Y,EAAAA,EAAUjJ,oBAAqB8M,OA6QjCjf,EAAAA,EAAQsf,4BACRtC,UAAUC,aAAasC,iBACnB,eACAR,GAIJ3I,EAA4BjtC,OAAOq2C,YAC/BT,EAt0BqB,kDA01BtBt4B,GACXuZ,EAAAA,EAAQgO,YACRh5B,KAAKyqC,cAAgB,IACdzf,EAAAA,EAAQ8d,mBAAqB9d,EAAAA,EAAQC,mBAC5CjrB,KAAKyqC,cAAgB,CAAE3H,SAAU,CAC7B,CAAE4H,qBAAsB,GACxB,CAAEC,oBAAoB,GACtB,CAAEC,yBAA0B,KAC5B,CAAEC,yBAAyB,GAC3B,CAAEC,2BAA2B,GAC7B,CAAEC,yBAA0B,IAC5B,CAAEC,wBAAyB,MAG3Bv5B,EAAQw5B,SAERjrC,KAAKyqC,cAAc3H,SAASjlC,KAAK,CAAEqtC,UAAU,IAGjDlrC,KAAKmrC,iBACCp0B,KAAKuK,MAAMvK,KAAKyK,UAAUxhB,KAAKyqC,iBAGzCzqC,KAAKmrC,iBAAmBnrC,KAAKmrC,kBAAoBnrC,KAAKyqC,kEAoB9BjI,GAAkB,IAAd/wB,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAChCk1B,EAAcyP,EAAeC,EAAI/wB,GAIvC,OAFAyX,EAAOpZ,KAAK,wBAAyBgjB,GAE9B,IAAIsY,QAAQ,SAACC,EAASC,GACzBtD,UAAUC,aAAasD,aAAazY,GAC/BoV,KAAK,SAAA3b,GACFrD,EAAO1Z,IAAI,sBACXq2B,EAAyBrD,EAAIjW,GAC7B8e,EAAQ9e,KAEXif,MAAM,SAAA57B,GACHsZ,EAAOnZ,KAAK,wCAAA,IAAA1S,OACFuS,EADE,KAAAvS,OACOy1B,EADP,MAEZ+S,EAAyBrD,OAAI7nC,GAC7B2wC,EAAO,IAAI3Y,EAAAA,EAAgB/iB,EAAOkjB,EAAa0P,gEAa/BiJ,GAA6B,IAAlB3Y,EAAkBl1B,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACrD,OAAO,IAAIwtC,QAAQ,SAACC,EAASC,GACzBtD,UAAUC,aAAasD,aAAazY,GAC/BoV,KAAK,SAAA3b,GACFrD,EAAO1Z,IAAI,sBACXq2B,EAAyB4F,EAAWlf,GACpC8e,EAAQ9e,KAEXif,MAAM,SAAA57B,GACHsZ,EAAOnZ,KAAK,wCAAA,IAAA1S,OACFuS,EADE,KAAAvS,OACOy1B,EADP,MAEZ+S,EAAyB4F,OAAW9wC,GACpC2wC,EAAO,IAAI3Y,EAAAA,EAAgB/iB,EAAOkjB,EAAa2Y,oDAoB3Ch6B,GAAS,IAAAi6B,EAAA1rC,KACzB,OAAK2pC,EAAAA,EAAegC,eAAkB3gB,EAAAA,EAAQ4gB,gBAKvC,IAAIR,QAAQ,SAACC,EAASC,GACzB3B,EAAAA,EAAekC,aACXH,EAAKI,4BAA4Br6B,GACjC,SAAA8a,GACI8e,EAAQ9e,IAEZ,SAAA3c,GACI07B,EAAO17B,OAXRw7B,QAAQE,OACX,IAAIptC,MAAM,+FA6BuB,IAAduT,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACrC6T,EAAQs6B,QAAUt6B,EAAQs6B,SAAgB1K,EAAxBhkC,SAClBoU,EAAQiyB,WAAajyB,EAAQiyB,YA79BF,IA+9B3B,IAAMsI,EAAoBv6B,EAAQs6B,QAAQE,SAAS,WAOnD,OADA/iB,EAAOpZ,KAAK,kCACRk8B,IAAsBrC,EAAAA,EAAegC,cAC9BP,QAAQE,OACX,IAAIptC,MAAM,sCAGX8B,KAAKksC,yBAAyBz6B,GAASy2B,KAAK,SAAAiE,GAAO,OAxblE,SAA2BA,EAASzI,GAChC,IAAI0I,EAAa9G,EAAe+G,EAC1BC,EAAM,GAQZ,GAAIH,EAAS,CAIT,IAAMI,EAAaJ,EAAQI,WAE3B,GAAIA,EAAY,CACZ,IAAM9C,EAAc8C,EAAWvG,iBAE/B,GAAIyD,EAAYzsC,OAAQ,CACpBovC,EAAc,IAAI7C,YAClB,IAAK,IAAIh1C,EAAI,EAAGA,EAAIk1C,EAAYzsC,OAAQzI,IACpC63C,EAAYI,SAAS/C,EAAYl1C,IAIzC,IAAMi1C,EAAc+C,EAAWrG,iBAE/B,GAAIsD,EAAYxsC,OAAQ,CACpBqvC,EAAc,IAAI9C,YAClB,IAAK,IAAI7sC,EAAI,EAAGA,EAAI8sC,EAAYxsC,OAAQN,IACpC2vC,EAAYG,SAAShD,EAAY9sC,UAOzC0vC,EAAcD,EAAQ1J,MACtB4J,EAAcF,EAAQ5K,MAG1B+D,EAAgB6G,EAAQM,QAG5B,GAAInH,EAAe,CAAA,IAAAoH,EAC0BpH,EAAjC/Y,EADOmgB,EACPngB,OAAQ0W,EADDyJ,EACCzJ,SAAU0J,EADXD,EACWC,WAE1BL,EAAIzuC,KAAK,CACL0uB,OAAAA,EACA0W,SAAAA,EACA0J,WAAAA,EACAC,MAAOrgB,EAAO2Z,iBAAiB,GAC/B9F,UAAWyM,EAAAA,EACXC,UAAWC,EAAAA,EAAUC,UAqB7B,OAlBIZ,GACAE,EAAIzuC,KAAK,CACL0uB,OAAQ6f,EACRQ,MAAOR,EAAYpG,iBAAiB,GACpC5F,UAAWyM,EAAAA,EACXC,UAAW,OAGfT,GACAC,EAAIzuC,KAAK,CACL0uB,OAAQ8f,EACRO,MAAOP,EAAYnG,iBAAiB,GACpC9F,UAAWyM,EAAAA,EACXC,UAAWC,EAAAA,EAAUE,OACrBvJ,WAAAA,IAID4I,EA8WCY,CAAkBf,EAAS16B,EAAQiyB,+DAYlBjyB,GAAS,IAAA07B,EAAAntC,KACxBgsC,EAAoBv6B,EAAQs6B,QAAQE,SAAS,WASnD,OAPAx6B,EAAQs6B,QAAUt6B,EAAQs6B,QAAQzS,OAAO,SAAAsN,GAAM,MAChC,YAAXA,KAEen1B,EAAQs6B,QAAQ/uC,OAC7BgD,KAAK4pC,4BAA4Bn4B,EAAQs6B,QAASt6B,GAClD25B,QAAQC,QAAQ,OAGjBnD,KAAK,SAAAkF,GAKF,IAAMC,EACAF,EAAKG,kBAAkB77B,EAAQs6B,QAASqB,GAE9C,OAAIC,EAAcrwC,QACdmwC,EAAKI,gBAAgBH,GAEdD,EAAKvD,4BACRyD,EAAe57B,GAIdy2B,KAAK,WAAA,OAAMkD,QAAQE,OAAO,IAAI3Y,EAAAA,EAC3B,CAAE79B,KAAM,gBACRytC,EAAe9wB,EAAQs6B,QAASt6B,GAChC47B,OAGLD,IAEVlF,KAAK,SAAAqE,GACF,IAAKP,EACD,MAAO,CAAEO,WAAAA,GAGb,GAAI96B,EAAQ+7B,2BAGR,MAFAL,EAAKI,gBAAgBhB,GAEf,IAAIruC,MAAM,yEAIpB,OAAO,IAAIktC,QAAQ,SAACC,EAASC,GACzB3B,EAAAA,EAAekC,aACXsB,EAAKrB,4BAA4Br6B,GACjC,SAAAg7B,GAAO,OAAIpB,EAAQ,CACfkB,WAAAA,EACAE,QAAAA,KAEJ,SAAA78B,GACQ28B,GACAY,EAAKI,gBAAgBhB,GAEzBjB,EAAO17B,qDAiBkB,IAA/B69B,EAA+B7vC,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAZ,GAAI2uB,EAAQ3uB,UAAAZ,OAAA,EAAAY,UAAA,QAAAjD,EACvC+yC,EAAiB,GAEjBC,EAAuBF,EAAiBxB,SAAS,SACjDnG,EACAvZ,GAAUA,EAAOyZ,iBAAiBhpC,OAAS,EAE7C2wC,IAAyB7H,GACzB4H,EAAe7vC,KAAK,SAGxB,IAAM+vC,EAAuBH,EAAiBxB,SAAS,SACjDhG,EACA1Z,GAAUA,EAAO2Z,iBAAiBlpC,OAAS,EAMjD,OAJI4wC,IAAyB3H,GACzByH,EAAe7vC,KAAK,SAGjB6vC,sDAUiBj8B,GACxB,OAAA2tB,EAAA,GACO3tB,EAAQo8B,4CADf,CAEIC,sBAAuBr8B,EAAQq8B,sBAC/BC,WAAY,CACRhJ,UAAWtzB,EAAQm0B,yBAEvBoI,aAAcrI,EAAsBl0B,+DAsBVA,GAAS,IAAAw8B,EAAAjuC,KACvCkpB,EAAOpZ,KAAK,0BAEZ,IAAMo+B,EAAuB,GAYvBC,EAA4B,WAK9B,MAFwC,KAFtB18B,EAAQs6B,SAAW,IAErBztC,QAAQ,YAGpB,OAAO8sC,QAAQC,UANsB,IAUrCwC,EAIAp8B,EAJAo8B,4CACAL,EAGA/7B,EAHA+7B,2BACAM,EAEAr8B,EAFAq8B,sBACAlI,EACAn0B,EADAm0B,wBAKJ,GAAI4H,EAA4B,CAC5B,IAAMY,EACAjN,GAAoBA,EAAiBvH,KAAK,SAAAgN,GAAM,MAC9B,eAAhBA,EAAOJ,OACCI,EAAO5D,WAAawK,GACrB5G,EAAOU,QAAUkG,KALJa,EAWtBruC,KAAK8rC,4BAA4Br6B,GAD/Bs8B,EAVoBM,EAUpBN,WAAYC,EAVQK,EAURL,aAOdlb,EAAc,CAChByO,MAAKnC,EAAA,GACE2O,EADF,CAED/K,SAAU,CACNsL,MAAQF,GAAkBA,EAAepL,UAClCwK,MAKnB,OAAOxtC,KAAKuuC,gCArBa,CAAE,SAsBLzb,GACjBoV,KAAK,SAAA3b,GACF,IAAMqgB,EAAQrgB,GAAUA,EAAOiiB,YAAY,GAM3C,OAJM5B,GAASA,EAAM6B,iBACX7B,EAAM6B,iBAAiBT,GACvB5C,QAAQC,WAGbnD,KAAK,WACF,MAAO,CACHyE,WAAY,SACZpgB,OAAAA,OAMxB,OAAOvsB,KAAK0uC,oBAAoB,CAC5Bb,4CAAAA,EACAC,sBAAAA,EACAlI,wBAAAA,KAEN7vC,KAAKiK,MAkCD2uC,EAA6B,WAC/B,IACMC,GADYn9B,EAAQs6B,SAAW,CAAE,QAAS,UACNzS,OAAO,SAAAsN,GAAM,MACxC,UAAXA,GACe,UAAXA,GAAsB5b,EAAAA,EAAQ4gB,kBAEtC,IAAKgD,EAAwB5xC,OACzB,OAAOouC,QAAQC,UAGnB,IAAMvY,EAj8BlB,WAAkD,IAAvB0P,EAAuB5kC,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAlB,GAAI6T,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAGpCk1B,EAAc/b,KAAKuK,MAAMvK,KAAKyK,UAChC/P,EAAQqhB,aAAewO,IAE3B,GAAIkB,EAAGlkC,QAAQ,UAAY,EAKvB,GAJKw0B,EAAYyO,QACbzO,EAAYyO,MAAQ,IAGpB9vB,EAAQsxB,eACRjQ,EAAYyO,MAAMyB,SAAWvxB,EAAQsxB,mBAClC,CACH,IAAMG,EAAazxB,EAAQyxB,YAAcC,EAAAA,EAAiBC,KAE1DtQ,EAAYyO,MAAM2B,WAAaA,OAGnCpQ,EAAYyO,OAAQ,EA8CxB,OA3CIiB,EAAGlkC,QAAQ,UAAY,GAClBw0B,EAAY2P,OAAsC,kBAAtB3P,EAAY2P,QACzC3P,EAAY2P,MAAQ,IASnB3P,EAAY2P,MAAMK,WACnBhQ,EAAY2P,MAAMK,SAAW,IAGjChQ,EAAY2P,MAAMK,SAASjlC,KACvB,CAAEolC,SAAUxxB,EAAQyyB,aACpB,CAAEC,kBAAmBnC,IAAeD,GACpC,CAAEqC,sBAAuBpC,IAAeD,GACxC,CAAEsC,qBAAsBnC,IAAeH,GACvC,CAAEuC,sBAAuBrC,IAAcF,GACvC,CAAEwC,oBAAqBpC,IAAeJ,GACtC,CAAEyC,uBAAwBvC,IAAcF,GACxC,CAAE0C,uBAAwBzC,IAAeD,GACzC,CAAE2C,sBAAuBxC,IAAeH,KAG5CjP,EAAY2P,OAAQ,EAGpBD,EAAGlkC,QAAQ,YAAc,IACpBw0B,EAAYyO,OAAsC,kBAAtBzO,EAAYyO,QACzCzO,EAAYyO,MAAQ,IAGxBzO,EAAYyO,MAAQ,CAChBsB,UAAW+B,EAAgBxF,EAAA,GACpB3tB,EADoB,CAEvBguB,OAAQ,eAKb3M,EAg4BqB+b,CAChBD,EAAyBn9B,GAI7B,OAFAyX,EAAOpZ,KAAK,0BAA2BgjB,GAEhC9yB,KAAKuuC,gCACRK,EAAyB9b,IAC/B/8B,KAAKiK,MA0CP,OAAOmuC,IACFjG,KAnFiC,SAAS5C,GAC3C,GAAKA,EAAL,CAD0D,IAKlD/Y,EAAiC+Y,EAAjC/Y,OAAQ0W,EAAyBqC,EAAzBrC,SAAU0J,EAAerH,EAAfqH,WAE1BuB,EAAqBrwC,KAAK,CACtB0uB,OAAAA,EACA0W,SAAAA,EACA0J,WAAAA,EACAC,MAAOrgB,EAAO2Z,iBAAiB,GAC/B4G,UAAWC,EAAAA,EAAUC,aAwExB9E,KAAKyG,GACLzG,KAlC6B,SAASkF,GACvC,GAAKA,EAAL,CAIA,IAAM3D,EAAc2D,EAASpH,iBAE7B,GAAIyD,EAAYzsC,OAAQ,CACpB,IAAMovC,EAAc,IAAI7C,YAAYE,GAEpCyE,EAAqBrwC,KAAK,CACtB0uB,OAAQ6f,EACRQ,MAAOR,EAAYpG,iBAAiB,GACpC8I,QAASr9B,EAAQq9B,UAIzB,IAAMtF,EAAc4D,EAASlH,iBAE7B,GAAIsD,EAAYxsC,OAAQ,CACpB,IAAMqvC,EAAc,IAAI9C,YAAYC,GAEpC0E,EAAqBrwC,KAAK,CACtB0uB,OAAQ8f,EACRO,MAAOP,EAAYnG,iBAAiB,GACpC4G,UAAWC,EAAAA,EAAUE,OACrB6B,QAASr9B,EAAQq9B,cASxB5G,KAAK,WAAA,OAAMgG,IACX1C,MAAM,SAAA57B,GAKH,OAJAs+B,EAAqBjtC,QAAQ,SAAA8tC,GAAgB,IAAbxiB,EAAawiB,EAAbxiB,OAC5B0hB,EAAKV,gBAAgBhhB,KAGlB6e,QAAQE,OAAO17B,qDAW9B,OAAOm2B,QACHiC,UAAUC,cACHD,UAAUC,aAAaF,kEAUdiH,GACpB,MAAsB,WAAfA,GAA0C,gBAAfA,EAC5B3M,EACArX,EAAAA,EAAQ8d,mBACH9d,EAAAA,EAAQgO,aAAehO,EAAAA,EAAQ4X,iDAQ9BqM,GACZ,GAAKA,EAAL,CAIAA,EAAYT,YAAYvtC,QAAQ,SAAA2rC,GACxBA,EAAM5d,MACN4d,EAAM5d,SAKVigB,EAAYjgB,MACZigB,EAAYjgB,OAMZigB,EAAYC,SACZD,EAAYC,UAIhB,IAAMC,EAAMF,EAAYhG,eAEpBkG,WACOF,EAAYhG,eACnBC,IAAIkG,gBAAgBD,uDASxB,OAAOxF,EAAAA,EAAegC,2DAWL3I,GACjB,OAAKhjC,KAAKqvC,wBAAwB,UAK3BjN,EAAwBE,UAAUU,GACpCkF,KAAK,WACFrG,EAAsBmB,EACtBlB,GAAqB,EAErB5Y,EAAO1Z,IAAP,8BAAAnS,OAAyC2lC,IAEzCpY,EAAa2C,KAAK6Y,EAAAA,EAAUlJ,4BACxB8F,KAZDoI,QAAQE,OACX,IAAIptC,MAAM,+FAqBlB,OAAO2jC,8DASP,OAAOV,sDAOiByF,GACxB,IAAMN,EAAa,GACbgJ,EAAa,CACftM,SAAY4D,EAAO5D,SACnBwD,KAAQI,EAAOJ,KACfc,MAASV,EAAOU,MAChBH,QAAWP,EAAOO,SAKtB,OAFAb,EAAWzoC,KAAKyxC,GAET,CAAEhJ,WAAAA,2CAWGxT,EAAayc,GACpBzc,EAAYgQ,WACbhQ,EAAYgQ,SAAW,IAK3BhQ,EAAYgQ,SACNhQ,EAAYgQ,SAASxJ,OACnB,SAAA1kC,GAAC,OAAKA,EAAEwB,eAAe,gCAE3Bm5C,GACAzc,EAAYgQ,SAASjlC,KAAK,CAAE2xC,2BAA4B,+CAapE,SAAShH,EAAsBiH,GAC3B,OAAO,SAASj3B,EAAS+T,GAErB,IAAM+f,EAAMmD,EAAsB3xC,MAAMypC,EAAU3pC,WA4BlD,OA1BI2uB,GACOgb,EAAS8H,wBAAwB,WACjC9iB,EAAOyZ,gBACPzZ,EAAOyZ,iBAAiBhpC,QAGxB8kC,GACPtpB,EAAQ8pB,UAAUiF,EAASmI,wBACtBlE,MAAM,SAASmE,GACZ,IAAM11B,EACA,IAAI0Y,EAAAA,EAAgBgd,EAAI,KAAM,CAAE,gBAEtC1K,EAAAA,EAAqB2K,8BAA8B,CAC/CC,QAAS7vC,KACTuZ,OAAQU,IAGZiP,EAAOnZ,KACH,sGAGAyI,EACAyB,KAITqyB,GAIA/E,EAAAA,EAAAA,0DCpiDf,IAAMnsC,EAAW,GAGX00C,EAAoB37C,OAAOwwB,QAYjC,IAAMorB,EAA0B57C,OAAO67C,qBAYvC77C,OAAOwwB,QAlBP,WAA0C,IAAA,IAAAsrB,EAAAryC,UAAAZ,OAANW,EAAM,IAAAyC,MAAA6vC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANvyC,EAAMuyC,GAAAtyC,UAAAsyC,GACtC90C,EAAS6F,QAAQ,SAAAkO,GAAO,OAAIA,EAAOrR,WAAP,EAAWH,KACvCmyC,GAAqBA,EAAiBhyC,WAAjB,EAAqBH,IAiB9CxJ,OAAO67C,qBAPP,SAAuC9a,GACnC95B,EAAS6F,QAAQ,SAAAkO,GAAO,OAAIA,EAAQ,KAAM,KAAM,KAAM,KAAM+lB,EAAM3b,UAClEw2B,GAA2BA,EAAwB7a,IAOvD,IAAM+P,EAAuB,CAKzBhtB,WALyB,SAKd9I,GACP/T,EAASyC,KAAKsR,IAOlB+1B,iBAbyB,SAaRt1B,GACb,IAAMugC,EAAah8C,OAAOwwB,QAErBwrB,GAGLA,EAAW,KAAM,KAAM,KAAM,KAAMvgC,IAOvCggC,8BA1ByB,SA0BKhgC,GAC1B,IAAMugC,EAAah8C,OAAO67C,qBAErBG,GAGLA,EAAWvgC,KAKnB5b,EAAOD,QAAUkxC,gCC9EjB5wC,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,iCAAA,WAAA,OAAAkqB,IAAA/7C,EAAAQ,EAAAqxB,EAAA,sCAAA,WAAA,OAAAmqB,IAAAh8C,EAAAQ,EAAAqxB,EAAA,yCAAA,WAAA,OAAAoqB,IAAAj8C,EAAAQ,EAAAqxB,EAAA,iCAAA,WAAA,OAAAqqB,IAAAl8C,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAAsqB,IAAAn8C,EAAAQ,EAAAqxB,EAAA,gCAAA,WAAA,OAAAuqB,IAAAp8C,EAAAQ,EAAAqxB,EAAA,oCAAA,WAAA,OAAAwqB,IAAAr8C,EAAAQ,EAAAqxB,EAAA,2BAAA,WAAA,OAAAyqB,IAAAt8C,EAAAQ,EAAAqxB,EAAA,UAAA,WAAA,OAAA0qB,IAAAv8C,EAAAQ,EAAAqxB,EAAA,YAAA,WAAA,OAAA2qB,IAAAx8C,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAA4qB,IAAAz8C,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAA6qB,IAAA18C,EAAAQ,EAAAqxB,EAAA,wBAAA,WAAA,OAAA8qB,IAAA38C,EAAAQ,EAAAqxB,EAAA,yBAAA,WAAA,OAAA+qB,IAOO,IAAMb,EACP,qCAMOC,EACP,0CASOC,EACP,6CAMOC,EACP,qCAMOC,EAAoB,wBAMpBC,EACP,oCAMOC,EACP,wCAMOC,EAA2B,+BAK3BC,EAAU,cAKVC,EAAY,gBAMZC,EAAoB,wBAMpBC,EAAoB,0BAKpBC,EAAwB,wBAMxBC,EAAyB,4kCCzEtC,IAAM/nB,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAMrB2nB,EAA0B,EAO1BC,EAAoB,EAOxB,SAASC,EAAkBC,EAAY5/B,GACnC,IAAM6/B,EAAY,GACdtO,EAAW,KAoBf,OAlBAqO,EAAWpwC,QAAQ,SAAAswC,GACXA,EAAUnR,YAAcyM,EAAAA,EACxB7J,EAAWvxB,EAAQyyB,YACZqN,EAAUzE,YAAcC,EAAAA,EAAUE,SACzCjK,EAAWvxB,EAAQsxB,gBAEvBoO,EAAoBK,OAAAA,EAAAA,EAAAA,CAAqBL,GACzC,IAAMM,EAAa,IAAIC,EAAAA,oUAAJtS,CAAA,GACZmS,EADY,CAEfvO,SAAAA,EACAE,WAAYzxB,EAAQyxB,WACpByO,MAAOR,EACPrC,QAASr9B,EAAQq9B,WAGrBwC,EAAUzzC,KAAK4zC,KAGZH,EAkBX,SAASM,IACL,OADqDh0C,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,IACtBd,IAAI,SAAA+0C,GAAY,IAEnC5O,EAMA4O,EANA5O,SACA0J,EAKAkF,EALAlF,WACApgB,EAIAslB,EAJAtlB,OACAqgB,EAGAiF,EAHAjF,MACAE,EAEA+E,EAFA/E,UACAgC,EACA+C,EADA/C,QAPmCgD,EAUNlF,EAAMmF,cAA/B/O,EAV+B8O,EAU/B9O,SAAUE,EAVqB4O,EAUrB5O,WAOlB,OAFAiO,EAAoBK,OAAAA,EAAAA,EAAAA,CAAqBL,GAElC,IAAIO,EAAAA,EAAgB,CACvB1O,SAAAA,EACAE,WAAAA,EACA9C,UAAWwM,EAAMpG,KACjBmL,MAAOR,EACPlO,SAAAA,EACA0J,WAAAA,EACApgB,OAAAA,EACAqgB,MAAAA,EACAE,UAAWA,GAAa,KACxBgC,QAAAA,UAQSkD,cAMjB,SAAAA,EAAYC,GAA0B,IAAApK,MAAdp2B,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAAI,mGAAA6pC,CAAAznC,KAAAgyC,KAClChyC,MAAA6nC,MAAAF,EAAAqK,GAAAt9C,KAAAsL,sDACKiyC,WAAaA,EAMlBpK,EAAKqK,gBAAkB,IAAIvnB,IAE3Bkd,EAAKsK,YAAc,GAEnBtK,EAAKp2B,QAAUA,EAKfo2B,EAAKuK,SAAW,KAQhBvK,EAAKwK,cAAe,EAUpBxK,EAAKyK,QAAU,EAQfzK,EAAK0K,gBAAkB,KASvB1K,EAAK2K,qBAAkB73C,EAQvBktC,EAAK4K,gBAAkB,KAQvB5K,EAAK6K,mBAAqB,GAG1B7K,EAAK8K,qBAAuB9K,EAAK+K,gBAAgB78C,KAArB88C,EAAAA,EAAAhL,KAE5BA,EAAKiL,qBAAuBjL,EAAKiL,qBAAqB/8C,KAA1B88C,EAAAA,EAAAhL,KAC5BA,EAAKkL,iCACClL,EAAKkL,iCAAiCh9C,KAAtC88C,EAAAA,EAAAhL,KAIFL,EAAAA,EAAS6H,wBAAwB,YACjC7H,EAAAA,EAASwL,YACL5M,EAAAA,EAAUlJ,4BACV2K,EAAKkL,kCAGTvL,EAAAA,EAASwL,YACL5M,EAAAA,EAAUjJ,oBACV0K,EAAKiL,uBAvFqBjL,wPANTD,EAAAA,wDAsIDyJ,GACxB,OAAOO,EAAsBP,0DAYK5/B,GAClC,IAAM22B,EAAiBpd,EAAAA,EAAQod,iBAK/B,OAJ2BA,EACrBZ,EAAAA,EAASyL,kCAAkCxhC,GAC3C+1B,EAAAA,EAAS0L,+BAA+BzhC,IAEpBy2B,KAAK,SAAAmJ,GAC3B,OAAIjJ,EACOwJ,EAAsBP,GAG1BD,EAAkBC,EAAY5/B,yCAkL1B0hC,EAAWzmB,GAC1B8a,EAAAA,EAASwL,YAAYG,EAAWzmB,0CAQdymB,EAAWzmB,GAC7B8a,EAAAA,EAAS1a,eAAeqmB,EAAWzmB,kCAOb,IAAdjb,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAGlB,OAFAoC,KAAKyR,QAAUA,EAER+1B,EAAAA,EAASvyB,KAAKjV,KAAKyR,kDA2NN2hC,GACpB,IAAM3I,EACA2I,EAAQ5L,EAAAA,EAAS2D,iBAAmB3D,EAAAA,EAASiD,cAEnD,OAAKA,EAIE1zB,KAAKuK,MAAMvK,KAAKyK,UAAUipB,IAHtB,6CAWU4I,EAAY9mB,GACjC,OAAOib,EAAAA,EAASe,kBAAkB8K,EAAY9mB,uCAO/BA,GACf,OAAOib,EAAAA,EAASkB,YAAYnc,sCAOdqgB,GACd,OAAOpF,EAAAA,EAASoB,WAAWgE,mDAQ3B,OAAOpF,EAAAA,EAASqC,wEAUWmF,GAC3B,OAAOxH,EAAAA,EAAS6H,wBAAwBL,+CAYxC,OAAOhkB,EAAAA,EAAQ2gB,6DASf,OAAOnE,EAAAA,EAASkI,mFAShB,OAAOlI,EAAAA,EAAS8L,wFAOe1M,GAC/B,OAAOY,EAAAA,EAAS+L,4BAA4B3M,gDAUpB5D,GACxB,OAAOwE,EAAAA,EAASgM,qBAAqBxQ,wCAerBzW,GAChB,OAAOylB,EAAIyB,iBAAiBjM,EAAAA,EAASkB,YAAYnc,6CAe7BmnB,GACpB,OAAOA,GAAyB,iBAAbA,GACC,YAAbA,2CAQat0C,GACpBooC,EAAAA,EAASO,iBAAiB3oC,2CAQP6vC,GACnBzH,EAAAA,EAAS+F,gBAAgB0B,qDAQzB,OAAOzH,EAAAA,EAASmM,iEAvnBhBnM,EAAAA,EAAS1a,eACLsZ,EAAAA,EAAUlJ,4BACVl9B,KAAK+yC,kCAGTvL,EAAAA,EAAS1a,eACLsZ,EAAAA,EAAUjJ,oBACVn9B,KAAK8yC,sBAGT9yC,KAAK8sB,eACDsZ,EAAAA,EAAU9J,uBACVt8B,KAAK2yC,sBAGL3yC,KAAK4zC,sBACL5zC,KAAK8sB,eACDsZ,EAAAA,EAAUhK,kBACVp8B,KAAK4zC,sEAgDO5nB,EAAgB6nB,GAAO,IAAAnI,EAAA1rC,KAC3CA,KAAKoyC,SAAW,IAAI0B,EAAAA,EAChB9nB,EAAgB6nB,EAAO7zC,KAAK4qB,cAEhC5qB,KAAK4zC,qBAAuB,WAExBlI,EAAK2G,cAAe,EAMpB,IACI3G,EAAK0G,SAAS2B,0BACVrI,EAAK+G,iBACT/G,EAAK0G,SAAS4B,6BACVtI,EAAKgH,yBAE2B,IAAzBhH,EAAK8G,iBACZ9G,EAAK0G,SAAS6B,mCACVvI,EAAK8G,iBAEf,MAAO5iC,GACLq1B,EAAAA,EAAqBC,iBAAiBt1B,GACtCsZ,EAAOtZ,MACH,wBAAAvS,OAAwBquC,EAAKwI,kBAA7B,KAAA,UAAA72C,OACYquC,EAAK+G,gBADjB,KAAA,eAAAp1C,OAEiBquC,EAAK8G,gBAFtB,sBAGA5iC,GAGR87B,EAAK5e,eAAesZ,EAAAA,EAAUhK,kBAC1BsP,EAAKkI,sBACTlI,EAAKkI,qBAAuB,MAMP,IAAjBlI,EAAK4G,QACL5G,EAAK0G,SAAS+B,oBAAoBzI,EAAK4G,SAI/CtyC,KAAKgzC,YAAY5M,EAAAA,EAAUhK,kBACvBp8B,KAAK4zC,sBAGT5zC,KAAKgzC,YAAY5M,EAAAA,EAAU9J,uBACvBt8B,KAAK2yC,qEAYT3yC,KAAK+yC,iCAAiCvL,EAAAA,EAASkI,kEAQd,IAE7B0E,EACAC,EAH6BlH,EAAAntC,KAArBs0C,EAAqB12C,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACvB22C,EAAoBv0C,KAAKuyC,iBAAmB,GAIlDvyC,KAAKuyC,gBAAkB+B,EAEvBF,EAAwBG,EAAkBjb,OACtC,SAAAr6B,GAAE,OAAKkuC,EAAKqH,UAAUv1C,KAE1Bo1C,EAAyBC,EAAehb,OACpC,SAAAr6B,GAAE,OAAuC,IAAnCs1C,EAAkBj2C,QAAQW,KAEpCe,KAAKiyC,WAAWrnB,aAAa2C,KACzBknB,EAAAA,yBACAL,EACAC,yCAQAr0C,KAAKoyC,WAODpyC,KAAKoyC,UAAmC,cAAvBpyC,KAAKoyC,SAAS18C,MAC/BsK,KAAKoyC,SAAS3sB,QAGlBzlB,KAAKoyC,SAAW,KAChBpyC,KAAKqyC,cAAe,sDAaDqC,GACvB10C,KAAKwyC,gBAAkBkC,EAEnB10C,KAAKoyC,UAAYpyC,KAAKqyC,cACtBryC,KAAKoyC,SAAS6B,mCAAmCS,2CAezCC,GACZ30C,KAAK0yC,mBAAqBiC,EAEtB30C,KAAKoyC,UAAYpyC,KAAKqyC,cACtBryC,KAAKoyC,SAAS4B,6BAA6BW,uCAYvC11C,GAERe,KAAKyyC,gBAAkBxzC,EACnBe,KAAKoyC,UAAYpyC,KAAKqyC,cACtBryC,KAAKoyC,SAAS2B,0BAA0B90C,gDAuD3B21C,EAAWC,EAAWzB,EAAO3hC,GAC9C,IAAMg5B,EAAgBuH,EAAI8C,iBAAiB1B,QAED,IAA/B3hC,EAAQsjC,qBACfvN,EAAAA,EAASwN,gBAAgBvK,EAAeh5B,EAAQsjC,oBAEhDvqB,EAAAA,EAAWqB,UAAUopB,uBACjB,CAAEF,mBAAoBtjC,EAAQsjC,sBAIlC/pB,EAAAA,EAAQkqB,yBACRL,EAAUM,aAAe,UAG7BjE,EAA0BM,OAAAA,EAAAA,EAAAA,CAAqBN,GAE/C,IAAMkE,EACA,IAAIC,EAAAA,EACFr1C,KACAkxC,EACA0D,EACAC,EAAWpK,EACX2I,EAAO3hC,GAIf,OAFAzR,KAAKkyC,gBAAgB9lB,IAAIgpB,EAAcn2C,GAAIm2C,GAEpCA,gDAYWE,GAClB,IAAMr2C,EAAKq2C,EAAwBr2C,GAEnC,QAAIe,KAAKkyC,gBAAgB/iB,IAAIlwB,KAEzBe,KAAKkyC,gBAAgBpjB,OAAO7vB,IAErB,yCAWD2tC,GACV,IAAKA,EACD,MAAM,IAAI1uC,MAAM,wCAGpB8B,KAAKmyC,YAAYt0C,KAAK+uC,GAEtBA,EAAMqF,WAAajyC,KAAKiyC,8CASxB,OAAOjyC,KAAKsyC,oDAQZ,IAAMiD,EAAav1C,KAAKw1C,eAAe3I,EAAAA,GAGvC,OAAO0I,EAAWv4C,OAASu4C,EAAW,QAAK56C,+CAQ3C,IAAM86C,EAAaz1C,KAAKw1C,eAAe3I,EAAAA,GAGvC,OAAO4I,EAAWz4C,OAASy4C,EAAW,QAAK96C,yCAShCylC,GACX,IAAIsV,EAAS11C,KAAKmyC,YAAYx2C,QAO9B,YALkBhB,IAAdylC,IACAsV,EAASA,EAAOpc,OACZ,SAAAsT,GAAK,OAAIA,EAAM+I,YAAcvV,KAG9BsV,0CASKtV,GACZ,IAAIwV,EAAe,GADIpoB,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAGvB,IAAA,IAAAgzB,EAAAC,EAAkB5tB,KAAKkyC,gBAAgBrkB,SAAvCv4B,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAiD,CAAA,IACvCqoB,EADuCloB,EAAAn4B,MAClBsgD,qBAAgBn7C,EAAWylC,GAElDyV,IACAD,EAAeA,EAAav4C,OAAOw4C,KAPpB,MAAA57B,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAWvB,OAAOkoB,uCAQEpgD,GACT,IAAMugD,EAAe,GASrB,OAPA/1C,KAAKw1C,eAAe3I,EAAAA,GAAiB5rC,QAAQ,SAAA+0C,GAEzCD,EAAal4C,KAAKrI,EAAQwgD,EAAWC,OAASD,EAAWE,YAKtD9K,QAAQ+K,IAAIJ,4CAONnJ,GACb,IAAMwJ,EAAMp2C,KAAKmyC,YAAY7zC,QAAQsuC,IAExB,IAATwJ,GAIJp2C,KAAKmyC,YAAY70C,OAAO84C,EAAK,8CAUdC,GACf,IAAIC,EAAgB,GADEjoB,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IAGtB,IAAA,IAAA6zB,EAAAC,EAAkBzuB,KAAKkyC,gBAAgBrkB,SAAvCv4B,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAAiD,CAAA,IACvCkoB,EADuC/nB,EAAAh5B,MACjBghD,mBAAmBH,GAE/CC,EAAgBA,EAAcj5C,OAAOk5C,IANnB,MAAAt8B,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,GAatB,OAJArF,EAAOrZ,MACH,6BAAAxS,OAA6Bg5C,GAA7B,WAAAh5C,OACiBi5C,EAAct5C,SAE5Bs5C,+CA6KHt2C,KAAKoyC,WACLpyC,KAAKoyC,SAAS3sB,QACdzlB,KAAKqyC,cAAe,EAEpBryC,KAAK8sB,eAAesZ,EAAAA,EAAU9J,uBAC1Bt8B,KAAK2yC,6DAYHxkB,EAAK6C,EAAMylB,EAAYnkB,GACjC,IAAMsa,EAAQze,EAAIuoB,eAAe1lB,GAE5B4b,IAEOA,EAAM+J,gBAIP/J,EAAMta,YAAcA,GAC3BpJ,EAAOtZ,MAAP,GAAAvS,OACOuvC,EADP,qBAAAvvC,OACgCi1B,EAAU,KAAO,SADjD,WAIJsa,EAAMgK,cAAcH,EAAYtoB,IAR5BjF,EAAOnZ,KAAP,6CAAA1S,OAAyD2zB,gDAqB9CzU,EAAI6e,GACnB,IAAIp7B,KAAKoyC,SAGL,MAAM,IAAIl0C,MAAM,gCAFhB8B,KAAKoyC,SAASyE,YAAYt6B,EAAI6e,oCAY7B5lC,GACDwK,KAAKsyC,SAAW98C,IAChBwK,KAAKsyC,OAAS98C,EACVwK,KAAKoyC,UAAYpyC,KAAKqyC,cACtBryC,KAAKoyC,SAAS+B,oBAAoB3+C,GAEtCwK,KAAK4qB,aAAa2C,KAAK6Y,EAAAA,EAAU3J,oBAAqBjnC,sCAUpDyJ,GACN,OAAQe,KAAKuyC,iBACNvyC,KAAKuyC,gBAAgBj0C,QAAQW,IAAO,2DAWd+jC,GAC7B,IAAM8T,EAAoB92C,KAAK81C,gBAAgBjJ,EAAAA,GADRrd,GAAA,EAAAC,GAAA,EAAAC,OAAA/0B,EAAA,IAGvC,IAAA,IAAAg1B,EAAAC,EAAoBknB,EAApBxhD,OAAAw4B,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAuC,CAAAG,EAAAn6B,MAC7BuhD,eAAe/T,IAJc,MAAA/oB,GAAAwV,GAAA,EAAAC,EAAAzV,EAAA,QAAA,IAAAuV,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,QAAA,GAAAqB,EAAA,MAAAC,4FC95B/C17B,EAAOD,QAZW,CAIdk5C,OAAQ,SAKRD,QAAS,0RCZb,IAAMgK,EAA6B,GAiDnC,SAASrkB,EAAgB/iB,EAAO6B,EAASs6B,GACrC,GAAqB,WAAjBtsC,EAAOmQ,SAA4C,IAAfA,EAAM9a,KAkB1C,OARAkL,KAAK4yB,IAAM,CACPhjB,MAAAA,EACAkjB,YAAarhB,EACbs6B,QAASA,GAAW3rC,MAAMG,QAAQwrC,GAC5BA,EAAQpwC,MAAM,QACdhB,GAGFiV,EAAM9a,MACd,IAAK,kBACL,IAAK,wBACL,IAAK,gBACDkL,KAAKlL,KAAOmiD,EAAAA,kBACZj3C,KAAKqP,QACC2nC,EAA2Bh3C,KAAKlL,OAC3BkL,KAAK4yB,IAAImZ,SAAW,IAAIxuC,KAAK,MACxC,MACJ,IAAK,uBACL,IAAK,gBACDyC,KAAKlL,KAAOmiD,EAAAA,UACZj3C,KAAKqP,QACC2nC,EAA2Bh3C,KAAKlL,OAC3BkL,KAAK4yB,IAAImZ,SAAW,IAAIxuC,KAAK,MACxC,MACJ,IAAK,8BACL,IAAK,uBACD,IAAMs1B,EAAiBjjB,EAAMijB,gBAAkBjjB,EAAMsnC,WAKjDzlC,GACOA,EAAQ8vB,SACNwK,GAAWA,EAAQztC,QAAQ,UAAY,KACrB,aAAnBu0B,GACsB,aAAnBA,GACmB,cAAnBA,GACmB,cAAnBA,GACmB,UAAnBA,GACmB,WAAnBA,GACmB,aAAnBA,IACX7yB,KAAKlL,KAAOmiD,EAAAA,uBACZj3C,KAAKqP,QACC2nC,EAA2Bh3C,KAAKlL,MA6CtD,SAA2CqiD,EAAsBrkB,GAC7D,GAAIA,GAAeA,EAAYyO,OAASzO,EAAYyO,MAAMsB,UACtD,OAAQsU,GACR,IAAK,QACD,OAAOrkB,EAAYyO,MAAMsB,UAAUgB,SACvC,IAAK,SACD,OAAO/Q,EAAYyO,MAAMsB,UAAUiB,UACvC,QACI,OAAOhR,EAAYyO,MAAMsB,UAAUsU,IAAyB,GAIpE,MAAO,GAxDeC,CACEvkB,EACAphB,KAEZzR,KAAKlL,KAAOmiD,EAAAA,kBACZj3C,KAAKqP,QACC2nC,EAA2Bh3C,KAAKlL,MAC5B8a,EAAMijB,gBAEpB,MAGJ,QACI7yB,KAAKlL,KAAOmiD,EAAAA,QACZj3C,KAAKqP,QACCO,EAAMP,SAAW2nC,EAA2Bh3C,KAAKlL,UAGxD,CAAA,GAAqB,iBAAV8a,EAWd,MAAM,IAAI1R,MAAM,qBAVZ84C,EAA2BpnC,IAC3B5P,KAAKlL,KAAO8a,EACZ5P,KAAKqP,QAAUoC,GAAWulC,EAA2BpnC,IAKrD5P,KAAKqP,QAAUO,EAMvB5P,KAAKgP,MAAQY,EAAMZ,QAAU,IAAI9Q,OAAS8Q,MAtI9CgoC,EAA2BC,EAAAA,wBACrB,sCACND,EAA2BC,EAAAA,qCACrB,qCACND,EACIC,EAAAA,wCACE,8FAEND,EAA2BC,EAAAA,gCACrB,+CACND,EAA2BC,EAAAA,gCACrB,sCACND,EAA2BC,EAAAA,+BACrB,mCACND,EAA2BC,EAAAA,mCACrB,kCACND,EAA2BC,EAAAA,SACrB,6BACND,EAA2BC,EAAAA,mBACrB,4CACND,EAA2BC,EAAAA,WACrB,2CACND,EAA2BC,EAAAA,mBACrB,sCACND,EAA2BC,EAAAA,mBACrB,kCACND,EAA2BC,EAAAA,uBACrB,iDA8GNtkB,EAAgBx8B,UAAYlB,OAAOY,OAAOqI,MAAM/H,WAChDw8B,EAAgBx8B,UAAUkhD,YAAc1kB,EAuBzBA,EAAAA,EAAAA,gCCrKft+B,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,sBAAA,WAAA,OAAAoxB,IAAAjjD,EAAAQ,EAAAqxB,EAAA,4BAAA,WAAA,OAAAyB,IAAAtzB,EAAAQ,EAAAqxB,EAAA,6BAAA,WAAA,OAAAqxB,IAAAljD,EAAAQ,EAAAqxB,EAAA,qBAAA,WAAA,OAAA0B,IAAAvzB,EAAAQ,EAAAqxB,EAAA,0BAAA,WAAA,OAAAsxB,IAAAnjD,EAAAQ,EAAAqxB,EAAA,sBAAA,WAAA,OAAAuxB,IAGO,IAAMH,EAAsB,gBActB3vB,EAA4B,2BAK5B4vB,EAA6B,2BAK7B3vB,EAAqB,yBAKrB4vB,EAA0B,yBAM1BC,EAAsB,0DCtCnCpjD,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,0BAAA,WAAA,OAAAzvB,IAAApC,EAAAQ,EAAAqxB,EAAA,aAAA,WAAA,OAAAwxB,IAAArjD,EAAAQ,EAAAqxB,EAAA,uBAAA,WAAA,OAAAyxB,IAAAtjD,EAAAQ,EAAAqxB,EAAA,uBAAA,WAAA,OAAA0xB,IAAAvjD,EAAAQ,EAAAqxB,EAAA,mBAAA,WAAA,OAAA2xB,IAAAxjD,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAA4xB,IAAAzjD,EAAAQ,EAAAqxB,EAAA,qBAAA,WAAA,OAAAxuB,IAAArD,EAAAQ,EAAAqxB,EAAA,aAAA,WAAA,OAAAvuB,IAAAtD,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAAtuB,IAAAvD,EAAAQ,EAAAqxB,EAAA,+BAAA,WAAA,OAAA6xB,IAAA1jD,EAAAQ,EAAAqxB,EAAA,sBAAA,WAAA,OAAA8xB,IAAA3jD,EAAAQ,EAAAqxB,EAAA,yBAAA,WAAA,OAAA+xB,IAAA5jD,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAAntB,IAAA1E,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAAzsB,IAAApF,EAAAQ,EAAAqxB,EAAA,eAAA,WAAA,OAAAgyB,IAAA7jD,EAAAQ,EAAAqxB,EAAA,4BAAA,WAAA,OAAAiyB,IAOO,IAAM1hD,EAA0B,oCAK1BihD,EAAa,uBAKbC,EAAuB,uBAKvBC,EAAuB,uBAKvBC,EAAmB,6BAMnBC,EAAoB,wCAKpBpgD,EAAqB,+BAKrBC,EAAa,uBAKbC,EAAoB,8BAMpBmgD,EACP,0CAKOC,EAAsB,+BAKtBC,EAAyB,kCAKzBl/C,EAAoB,8BAKpBU,EAAoB,8BAKpBy+C,EAAe,0BAKfC,EAA4B,ggBC7E1B,SAASC,EAAIzd,GAGxB,IAFA,IAAMrE,EAAQqE,EAAI99B,MAAM,UAEftI,EAAI,EAAGyI,EAASs5B,EAAMt5B,OAAQzI,EAAIyI,EAAQzI,IAAK,CACpD,IAAI8jD,EAAM,KAAAh7C,OAAQi5B,EAAM/hC,IAEpBA,IAAMyI,EAAS,IACfq7C,GAAU,QAEd/hB,EAAM/hC,GAAK8jD,EAEf,IAAMh3B,EAAO,GAAAhkB,OAAMi5B,EAAMC,QAAZ,QAEbv2B,KAAKs2B,MAAQA,EACbt2B,KAAKma,IAAMkH,EAAUiV,EAAM/4B,KAAK,IAChCyC,KAAKqhB,QAAUA,EASnB+2B,EAAIjiD,UAAUmiD,SAAU,EAMxBF,EAAIjiD,UAAUoiD,qBAAsB,EAMpCH,EAAIjiD,UAAUqiD,qBAAsB,EAKpCJ,EAAIjiD,UAAUsiD,gBAAkB,WAK5B,IAJA,IAEIC,EAFE91B,EAAO5iB,KACP24C,EAAa,GAFoBC,EAAA,SAK9BC,GACLH,EAAMnjB,EAAAA,EAAQqD,UAAUhW,EAAK0T,MAAMuiB,GAAa,WAChD,IAGMviB,EAAQ,CACVuiB,WAAAA,EACAC,IAJEvjB,EAAAA,EAAQa,SACNb,EAAAA,EAAQO,SAASlT,EAAK0T,MAAMuiB,GAAa,WAI7Czf,MAAO,GACPK,WAAY,IAGhBkf,EAAWE,GAAcviB,EACzBoiB,EAAIz3C,QAAQ,SAAAmO,GACR,IAAM2pC,EAAW3pC,EAAK7Q,UAAU,GAAG1B,MAAM,KAAK,GAIzCy5B,EAAM8C,MAAM2f,KACbziB,EAAM8C,MAAM2f,GAAY,CACpB/nB,KAAM+nB,EACN5gB,MAAO,KAGf7B,EAAM8C,MAAM2f,GAAU5gB,MAAMt6B,KAAKuR,MAErCspC,EAAMnjB,EAAAA,EAAQqD,UAAUhW,EAAK0T,MAAMuiB,GAAa,kBAC5C53C,QAAQ,SAAAmO,GACR,IAAM4pC,EAAM5pC,EAAK9Q,QAAQ,KACnBw7B,EAAY1qB,EAAKsP,OAAO,EAAGs6B,GAAKt6B,OAAO,IACvC0a,EAAQhqB,EAAKsP,OAAO,GAAKob,EAAU98B,QAAQH,MAAM,KAEnDu8B,EAAMp8B,QACNs5B,EAAMmD,WAAW57B,KAAK,CAClBi8B,UAAAA,EACAV,MAAAA,OAnCPyf,EAAa,EAAGA,EAAaj2B,EAAK0T,MAAMt5B,OAAQ67C,IAAcD,EAA9DC,GAyCT,OAAOF,GAQXP,EAAIjiD,UAAU8iD,aAAe,SAASjoB,GAElC,IAAMkoB,EAASl5C,KAAKy4C,kBAChBxoC,GAAS,EAWb,OATAhb,OAAOy5B,KAAKwqB,GAAQj4C,QAAQ,SAAA43C,GACpB5oC,GAGAipC,EAAOL,GAAYzf,MAAMpI,KACzB/gB,GAAS,KAIVA,GAIXmoC,EAAIjiD,UAAUgjD,OAAS,WACnB,IAAI5kD,EAAGmI,EAAGy7B,EAAOxB,EAAOyiB,EAASC,EAEjC,IAAK9kD,EAAI,EAAGA,EAAIyL,KAAKs2B,MAAMt5B,OAAQzI,IAI/B,IAHA4jC,EAAQn4B,KAAKs2B,MAAM/hC,GAAGsI,MAAM,SACtByd,MAEc,WADpBqc,EAAQpB,EAAAA,EAAQc,WAAW8B,EAAM5B,UACvBD,MAAV,CAKA,IAFA8iB,EAAU,GACVziB,EAAMF,IAAIz5B,OAAS,EACdN,EAAI,EAAGA,EAAIy7B,EAAMn7B,OAAQN,IAAK,CAC/B,GAA8B,cAA1By7B,EAAMz7B,GAAGgiB,OAAO,EAAG,GAAoB,CAEvC,GAAoB,QADpB26B,EAAS9jB,EAAAA,EAAQqB,YAAYuB,EAAMz7B,KACxB5H,MAAiC,SAAhBukD,EAAOvkD,KAC/B,SAEJ6hC,EAAMF,IAAI54B,KAAKw7C,EAAOp6C,IAE1Bm6C,GAAO,GAAA/7C,OAAO86B,EAAMz7B,GAAb,QAEXsD,KAAKs2B,MAAM/hC,GAAX,GAAA8I,OAAmBk4B,EAAAA,EAAQmB,WAAWC,GAAtC,QAAAt5B,OAAmD+7C,GAEvDp5C,KAAKma,IAAMna,KAAKqhB,QAAUrhB,KAAKs2B,MAAM/4B,KAAK,KAI9C66C,EAAIjiD,UAAUmjD,mBAAqB,SAASl7C,GACxC,IAAMwkB,EAAO5iB,KACPm4B,EAAQ5C,EAAAA,EAAQqD,UAAU54B,KAAKqhB,QAASjjB,GAO9C,OALA+5B,EAAMl3B,QAAQ,SAAAmO,GACVwT,EAAKvB,QAAUuB,EAAKvB,QAAQlkB,QAAb,GAAAE,OAAwB+R,EAAxB,QAAoC,MAEvDpP,KAAKma,IAAMna,KAAKqhB,QAAUrhB,KAAKs2B,MAAM/4B,KAAK,IAEnC46B,GAKXigB,EAAIjiD,UAAUojD,iBAAmB,SAASV,EAAYz6C,GAClD,IAAMwkB,EAAO5iB,KACPm4B,EAAQ5C,EAAAA,EAAQqD,UAAU54B,KAAKs2B,MAAMuiB,GAAaz6C,GAQxD,OANA+5B,EAAMl3B,QAAQ,SAAAmO,GACVwT,EAAK0T,MAAMuiB,GACLj2B,EAAK0T,MAAMuiB,GAAY17C,QAAvB,GAAAE,OAAkC+R,EAAlC,QAA8C,MAExDpP,KAAKma,IAAMna,KAAKqhB,QAAUrhB,KAAKs2B,MAAM/4B,KAAK,IAEnC46B,GAIXigB,EAAIjiD,UAAUqjD,SAAW,SAASjuC,EAAMkuC,GACpC,IAAIllD,EAAGmI,EAAG0E,EAAG+2B,EAAOxB,EAAO0iB,EAAQroB,EAAM0nB,EAKzC,IADAvgB,EAAQ5C,EAAAA,EAAQqD,UAAU54B,KAAKqhB,QAAS,aAC9BrkB,OACN,IAAKzI,EAAI,EAAGA,EAAI4jC,EAAMn7B,OAAQzI,IAAK,CAE/B,IAAMulC,GADN4e,EAAMvgB,EAAM5jC,GAAGsI,MAAM,MACC05B,QAAQ7X,OAAO,GAIrC,IAFAnT,EAAK3W,EAAE,QAAS,CAAE4b,MAAO,kCACrBspB,UAAAA,IACCp9B,EAAI,EAAGA,EAAIg8C,EAAI17C,OAAQN,IACxB6O,EAAK3W,EAAE,UAAW,CAAEE,KAAM4jD,EAAIh8C,KAAMgU,KAExCnF,EAAKmF,KAGb,IAAKnc,EAAI,EAAGA,EAAIyL,KAAKs2B,MAAMt5B,OAAQzI,IAE/B,GAAsB,WADtBoiC,EAAQpB,EAAAA,EAAQc,WAAWr2B,KAAKs2B,MAAM/hC,GAAGsI,MAAM,QAAQ,KAC3Cy5B,OACa,UAAhBK,EAAML,OACU,gBAAhBK,EAAML,MAFf,CAKA,IAAMojB,EAAYnkB,EAAAA,EAAQO,SAAS91B,KAAKs2B,MAAM/hC,GAAI,WAG9Cy8B,IADA0oB,GACOA,EAAUn7C,UAAU,GAAG1B,MAAM,KAAK,GAK7C0O,EAAK3W,EAAE,UAAW,CAAE+kD,QAASF,EACzB3kD,KAAM6hC,EAAML,QAChB,IAAMsjB,EAAWrkB,EAAAA,EAAQO,SAAS91B,KAAKs2B,MAAM/hC,GAAI,UAEjD,GAAIqlD,EAAU,CAEV,IAAMd,EAAMvjB,EAAAA,EAAQa,SAASwjB,GAE7BruC,EAAKzE,MAAM,CAAEhS,KAAMgkD,IAGvB,GAAIvjB,EAAAA,EAAQO,SAAS91B,KAAKs2B,MAAM/hC,GAAI,aAAayI,OAAQ,CAOrD,IANAuO,EAAK3W,EAAE,cACH,CAAE4b,MAAO,6BACL8lB,MAAOK,EAAML,QACjBtF,GACAzlB,EAAKzE,MAAM,CAAEkqB,KAAAA,IAEZt0B,EAAI,EAAGA,EAAIi6B,EAAMF,IAAIz5B,OAAQN,IAAK,CACnC28C,EACM9jB,EAAAA,EAAQO,SACN91B,KAAKs2B,MAAM/hC,GADb,YAAA8I,OAEcs5B,EAAMF,IAAI/5B,KAC9B6O,EAAK3W,EAAE,eAAgB2gC,EAAAA,EAAQqB,YAAYyiB,IAI3C,IAAMQ,EACAtkB,EAAAA,EAAQO,SACN91B,KAAKs2B,MAAM/hC,GADb,UAAA8I,OAEYs5B,EAAMF,IAAI/5B,KAE5B,GAAIm9C,EAIA,IAHAnB,EAAMnjB,EAAAA,EAAQ6B,UAAUyiB,GAGnBz4C,EAAI,EAAGA,EAAIs3C,EAAI17C,OAAQoE,IACxBmK,EAAK3W,EAAE,YAAa8jD,EAAIt3C,IAAIsP,KAKpC1Q,KAAK85C,eAAevlD,EAAGgX,EAAMorB,EAAMF,IAAI/5B,IAEvC6O,EAAKmF,KAET,IAAMqpC,EACAxkB,EAAAA,EAAQqD,UAAU54B,KAAKs2B,MAAM/hC,GAAI,YAAayL,KAAKqhB,SASzD,GAPI04B,EAAO/8C,SACPuO,EAAK3W,EAAE,aAAc,CAAEolD,SAAU,IACjCD,EAAO94C,QACH,SAAAmO,GAAI,OAAI7D,EAAK3W,EAAE,SAAU2gC,EAAAA,EAAQ0B,YAAY7nB,IAAOsB,OACxDnF,EAAKmF,MAGLsgB,EAAM,CACN,IAAMipB,EAAU1kB,EAAAA,EAAQ0C,UAAUj4B,KAAKs2B,MAAM/hC,IADvCi5B,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAGN,IAAA,IAAAgzB,EAAAC,EAAgDqsB,EAAhD3kD,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyD,CAAA,IAAA0sB,EAAAC,EAAAxsB,EAAAn4B,MAAA,GAA5C4kD,EAA4CF,EAAA,GAA7BG,EAA6BH,EAAA,GACrD3uC,EAAK3W,EAAE,SAAU,CACbo8B,KAAMopB,EACN5pC,MAAO,oCAGX6pC,EAAep5C,QAAQ,SAAAq5C,GAEnB,IAAMtB,EAAMsB,EAAYh8C,QAAQ,KAC1Bi8C,EAAKD,EAAY57B,OAAOs6B,EAAM,GAGpC,GADAztC,EAAK3W,EAAE,cACkB,IAArB2lD,EAAGj8C,QAAQ,KACXiN,EAAKzE,MAAM,CAAEhS,KAAMylD,QAChB,CACH,IAAMzlD,EAAOylD,EAAG19C,MAAM,IAAK,GAAG,GAE9B0O,EAAKzE,MAAM,CAAEhS,KAAAA,IAEb,IAAI0lD,EAAID,EAAG19C,MAAM,IAAK,GAAG,GAEzB29C,EAAIjlB,EAAAA,EAAQC,mBAAmBglB,GAC/BjvC,EAAKzE,MAAM,CAAEtR,MAAOglD,IAExBjvC,EAAKmF,OAGTnF,EAAKmF,MA9BH,MAAAuJ,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAmCA6H,EAAAA,EAAQqD,UAAU54B,KAAKs2B,MAAM/hC,GAAI,iBAExB0M,QAAQ,SAAAmO,GACnB,IAAM4pC,EAAM5pC,EAAK9Q,QAAQ,KACnBw7B,EAAY1qB,EAAKsP,OAAO,EAAGs6B,GAAKt6B,OAAO,IACvC0a,EAAQhqB,EAAKsP,OAAO,GAAKob,EAAU98B,QAAQH,MAAM,KAEnDu8B,EAAMp8B,SACNuO,EAAK3W,EAAE,aAAc,CAAEklC,UAAAA,EACnBtpB,MAAO,oCACX4oB,EAAMn4B,QAAQ,SAAA3K,GAAC,OAAIiV,EAAK3W,EAAE,SAAU,CAAEo8B,KAAM16B,IAAKoa,OACjDnF,EAAKmF,QAKjB,IAAM+pC,EAAWllB,EAAAA,EAAQqD,UAAU54B,KAAKs2B,MAAM/hC,GAAI,SAElD,GAAIkmD,EAASz9C,OAAQ,CAGjB,IAAM09C,EAAOD,EACR39C,IAAI,SAAA69C,GAAO,OAAIA,EAAQ99C,MAAM,KAAK,KAClCC,IAAI,SAAA89C,GAAO,OAAIA,EAAQ/9C,MAAM,KAAK,KAEvC69C,EAAKz5C,QAAQ,SAAAwV,GACTlL,EAAK3W,EAAE,SAAU,CACb6hB,IAAAA,EACAjG,MAAO,oCAEXjF,EAAKmF,OAGH6kB,EAAAA,EAAQO,SAAS91B,KAAKs2B,MAAM/hC,GAAI,iBAGlCgX,EAAK3W,EAAE,YAAa,CAChBklC,UAAW,MACXtpB,MAAO,oCAEXkqC,EAAKz5C,QAAQ,SAAAwV,GACTlL,EAAK3W,EAAE,SAAU,CAAE6hB,IAAAA,IAAO/F,OAE9BnF,EAAKmF,MAab,GATI6kB,EAAAA,EAAQO,SAAS91B,KAAKs2B,MAAM/hC,GAAI,eAChCgX,EAAK3W,EAAE,YAAY8b,KAIvB1Q,KAAK85C,eAAevlD,EAAGgX,EAAM,MAG7B4sB,EAAQ5C,EAAAA,EAAQqD,UAAU54B,KAAKs2B,MAAM/hC,GAAI,cAC/ByI,OACN,IAAKN,EAAI,EAAGA,EAAIy7B,EAAMn7B,OAAQN,IAAK,CAS/B,GARAg8C,EAAMnjB,EAAAA,EAAQgD,YAAYJ,EAAMz7B,IAChC6O,EAAK3W,EAAE,aAAc,CACjB4b,MAAO,wCACPtR,IAAKw5C,EAAIx5C,IACTD,GAAIy5C,EAAIljD,QAIRkjD,EAAItiD,eAAe,aAGnB,OAAQsiD,EAAIlgB,WACZ,IAAK,WACDjtB,EAAKzE,MAAM,CAAE+zC,QAAS,cACtB,MACJ,IAAK,WACDtvC,EAAKzE,MAAM,CAAE+zC,QAAS,cACtB,MACJ,IAAK,WACDtvC,EAAKzE,MAAM,CAAE+zC,QAAS,SACtB,MACJ,IAAK,WACDtvC,EAAKzE,MAAM,CAAE+zC,QAAS,SAM9BtvC,EAAKmF,KAGbnF,EAAKmF,KAIT1Q,KAAK86C,kBAAkBvmD,EAAGgX,GAE1B,IAAM5W,EAAIqL,KAAKs2B,MAAM/hC,GAEjBghC,EAAAA,EAAQO,SAASnhC,EAAG,aAAcqL,KAAKqhB,SACvC9V,EAAKzE,MAAM,CAAE+zC,QAAS,SACftlB,EAAAA,EAAQO,SAASnhC,EAAG,aAAcqL,KAAKqhB,SAC9C9V,EAAKzE,MAAM,CAAE+zC,QAAS,cACftlB,EAAAA,EAAQO,SAASnhC,EAAG,aAAcqL,KAAKqhB,SAC9C9V,EAAKzE,MAAM,CAAE+zC,QAAS,cACftlB,EAAAA,EAAQO,SAASnhC,EAAG,aAAcqL,KAAKqhB,UAC9C9V,EAAKzE,MAAM,CAAE+zC,QAAS,SAEP,MAAflkB,EAAMH,MAENjrB,EAAKzE,MAAM,CAAE+zC,QAAS,aAE1BtvC,EAAKmF,KAIT,OAFAnF,EAAKmF,KAEEnF,GAGX6sC,EAAIjiD,UAAU2kD,kBAAoB,SAASjC,EAAYttC,GACnD,IAAImtC,EACE91B,EAAO5iB,KAEbuL,EAAK3W,EAAE,aAGP,IAAMmmD,EACAxlB,EAAAA,EAAQO,SAAS91B,KAAKs2B,MAAMuiB,GAAa,aAAcj2B,EAAKvB,SAElE,GAAI05B,EAAS,CACT,IAAMC,EAAYzlB,EAAAA,EAAQwB,aAAagkB,GAEvCxvC,EAAK3W,EAAE,UAAW,CACd4b,MAAO,yCACPyqC,OAAQD,EAAU,GAClBjoC,SAAUioC,EAAU,KAIpBA,EAAUh+C,OAAS,GACnBuO,EAAKzE,MAAM,CAAEqlC,QAAS6O,EAAU,KAEpCzvC,EAAKmF,KA6BT,GAxBM6kB,EAAAA,EAAQqD,UACN54B,KAAKs2B,MAAMuiB,GACX,iBACA74C,KAAKqhB,SAEApgB,QAAQ,SAAAmO,IACjBspC,EAAMnjB,EAAAA,EAAQ2B,iBAAiB9nB,IAC3BoB,MAAQ,8BACZjF,EAAK3W,EAAE,eAAea,EAAEijD,EAAIvhB,oBACrBuhB,EAAIvhB,aAGX/nB,EACMmmB,EAAAA,EAAQO,SACNlT,EAAK0T,MAAMuiB,GACX,WACAj2B,EAAKvB,YAETq3B,EAAIwC,MAAQ9rC,EAAKsP,OAAO,IAE5BnT,EAAKzE,MAAM4xC,GACXntC,EAAKmF,OAETgoC,EAAMnjB,EAAAA,EAAQE,UAAUz1B,KAAKs2B,MAAMuiB,GAAa74C,KAAKqhB,SAC5C,CACLq3B,EAAIloC,MAAQ,uCACZjF,EAAKzE,MAAM4xC,GAGX,IAAMvgB,EACA5C,EAAAA,EAAQqD,UACN54B,KAAKs2B,MAAMuiB,GACX,eACA74C,KAAKqhB,SAET8W,EAAMn7B,QACNm7B,EAAMl3B,QAAQ,SAAAmO,GACV,IAAMkoB,EAAY/B,EAAAA,EAAQuD,kBAAkB1pB,GAExCwT,EAAK01B,UACLhhB,EAAUI,GAAK,WAEnB,IAAM3kB,EACAukB,GAA2C,iBAAvBA,EAAUvkB,SAC1BukB,EAAUvkB,SAAS5E,cACnB,GAELyU,EAAK21B,sBACe,QAAbxlC,GAAmC,WAAbA,IAC1B6P,EAAK41B,qBAAoC,QAAbzlC,GAGpCxH,EAAK3W,EAAE,YAAa0iC,GAAW5mB,OAI3CnF,EAAKmF,MAIT0nC,EAAIjiD,UAAU2jD,eAAiB,SAASjB,EAAYttC,EAAM4vC,GAEhD5lB,EAAAA,EAAQqD,UACN54B,KAAKs2B,MAAMuiB,GADb,aAAAx7C,OAEe89C,IAEfl6C,QAAQ,SAAAmO,GACV,IAAMspC,EAAMnjB,EAAAA,EAAQ6C,YAAYhpB,GAEf,YAAbspC,EAAIlnC,MACJjG,EAAK3W,EAAE,kBAAmB,CACtB4b,MAAO,qCACPhb,MAAOkjD,EAAIpgB,OAAO,KAEtB/sB,EAAKmF,OAELnF,EAAK3W,EAAE,UAAW,CACd4b,MAAO,qCACPgB,KAAMknC,EAAIlnC,OAEVknC,EAAIpgB,OAAOt7B,OAAS,GACpBuO,EAAKzE,MAAM,CAAEs0C,QAAW1C,EAAIpgB,OAAO,KAEvC/sB,EAAKmF,SAKjB0nC,EAAIjiD,UAAUklD,iBAAmB,SAAS9vC,EAAM4vC,GAC5C,IAAI7kB,EAAQ,GACRoiB,EACEntC,EAAKquB,KACH,gEAuBR,OArBI8e,EAAI17C,SACJs5B,GAAS,uBACLoiB,EAAI3rC,KAAK,SACTupB,GAASoiB,EAAI3rC,KAAK,SAElBupB,GAAS,IAEbA,GAAS,SAEboiB,EAAMntC,EAAKquB,KAAK,yDACZ0hB,KAAK,WAELhlB,GAAK,aAAAj5B,OAAiB89C,EAAjB,KAAA99C,OAAgCk+C,EAAEv7C,MAAM+M,KAAK,SAC9CwuC,EAAEv7C,MAAM+M,KAAK,aACbupB,GAAK,IAAAj5B,OAAQk+C,EAAEv7C,MAAM+M,KAAK,aAE9BupB,GAAS,SAKNA,GAIX8hB,EAAIjiD,UAAUqlD,WAAa,SAASC,GAChC,IAAM74B,EAAO5iB,KAEbA,KAAKma,IAAM,6DAOX,IAAMuhC,EACAH,EAAEE,GAAQ7hB,KAAK,mDAEjB8hB,EAAO1+C,QACP0+C,EAAOJ,KAAK,SAACtC,EAAKnf,GACd,IAAM8hB,EACAJ,EAAE1hB,GACCD,KAAK,YACL98B,IAAI,SAAC8+C,EAAG76B,GAAJ,OAAgBA,EAAQ3S,aAAa,UACzChZ,MAELumD,EAAS3+C,OAAS,IAClB4lB,EAAKzI,KAAL,WAAA9c,OAEQw8B,EAAMzrB,aAAa,cACZyrB,EAAMzrB,aAAa,QAHlC,KAAA/Q,OAIQs+C,EAASp+C,KAAK,KAJtB,WASZyC,KAAKqhB,QAAUrhB,KAAKma,IACpBshC,EAAO7hB,KAAK,YAAY0hB,KAAK,WAEzB,IAAM3mD,EAAIiuB,EAAKi5B,aAAaN,EAAEv7C,OAE9B4iB,EAAK0T,MAAMz4B,KAAKlJ,KAWpBqL,KAAKma,IAAMna,KAAKqhB,QAAUrhB,KAAKs2B,MAAM/4B,KAAK,KAI9C66C,EAAIjiD,UAAU0lD,aAAe,SAAS96B,GAClC,IAAMmX,EAAOnX,EAAQ6Y,KAAK,eACtBtD,EAAQ,GACN1T,EAAO5iB,KACP87C,EAAO/6B,EAAQ6Y,KACjB,sEAEA8e,EAAM,CAAEpiB,MAAO4B,EAAKnrB,KAAK,SAE7B2rC,KAAW,KAWX,GAVgC,aAA5B33B,EAAQhU,KAAK,aAEb2rC,EAAIliB,KAAO,KAEXzV,EAAQ6Y,KAAK,0BAA0B58B,QAChCk7B,EAAK0B,KAAK,cAAc58B,OAC/B07C,EAAI5lC,MAAQgpC,EAAK9+C,OAAS,YAAc,YAExC07C,EAAI5lC,MAAQ,WAEZgpC,EAAK9+C,OAAQ,CACbs5B,GAAK,iBAAAj5B,OAAqBq7C,EAAIliB,KAAzB,eAAAn5B,OACDy+C,EAAK/uC,KAAK,UADT,QAELupB,GAAK,aAAAj5B,OAAiBy+C,EAAK/uC,KAAK,UAA3B,KAAA1P,OAAwCy+C,EAAK/uC,KAAK,aAEvD,IAAMgvC,EAAcD,EAAK/uC,KAAK,WAG1BupB,GADAylB,EACK,IAAA1+C,OAAQ0+C,EAAR,QAEI,YAGbrD,EAAIjiB,IACEyB,EACG0B,KAAK,gBACL98B,IAAI,WAED,OAAOkD,KAAKoO,aAAa,QAE5BhZ,MACTkhC,GAAK,GAAAj5B,OAAOk4B,EAAAA,EAAQmB,WAAWgiB,GAA1B,QA8BT,OA3BApiB,GAAS,uBACJwlB,EAAK9+C,SACNs5B,GAAS,gCAEboiB,EACM33B,EAAQ6Y,KACN,6DACA58B,SACA07C,EAAI3rC,KAAK,WACTupB,GAAK,GAAAj5B,OAAOk4B,EAAAA,EAAQU,cAAcyiB,EAAI3rC,KAAK,UAAtC,SAEL2rC,EAAI3rC,KAAK,SACTupB,GAAK,GAAAj5B,OAAOk4B,EAAAA,EAAQY,YAAYuiB,EAAI3rC,KAAK,QAApC,SAET2rC,EAAI9e,KAAK,gBAAgB0hB,KAAK,WAG1BhlB,GAAK,iBAAAj5B,OAAqB2C,KAAKoO,aAAa,SAC5CkoB,GAAK,IAAAj5B,OAAQk+C,EAAEv7C,MAAMkN,QACrBopB,GAAS,OACLt2B,KAAKoO,aAAa,WAClBkoB,GAAK,WAAAj5B,OAAe2C,KAAKoO,aAAa,SAAjC,YAMT2S,EAAQhU,KAAK,YACrB,IAAK,YACDupB,GAAS,iBACT,MACJ,IAAK,YACDA,GAAS,iBACT,MACJ,IAAK,OACDA,GAAS,iBACT,MACJ,IAAK,OACDA,GAAS,iBAyIb,OAtIAA,GAAK,SAAAj5B,OAAa0jB,EAAQhU,KAAK,QAA1B,QAMDmrB,EAAK0B,KAAK,YAAY58B,SACtBs5B,GAAS,kBAGT4B,EAAK0B,KAAK,cAAc58B,QACxBk7B,EAAK0B,KAAK,qBAAqB0hB,KAAK,WAEhChlB,GAAK,YAAAj5B,OAAgB2C,KAAKoO,aAAa,QACvCkoB,GAAK,IAAAj5B,OAAQ2C,KAAKoO,aAAa,iBAC/BkoB,GAAK,IAAAj5B,OAAQ2C,KAAKoO,aAAa,eAC3BpO,KAAKoO,aAAa,oBAClBkoB,GAAK,IAAAj5B,OAAQ2C,KAAKoO,aAAa,oBAEnCkoB,GAAS,SAKjB4B,EAAK0B,KAAK,gBAAgB0hB,KAAK,WAE3BhlB,GAAK,GAAAj5B,OAAOk4B,EAAAA,EAAQyB,YAAYh3B,MAA3B,QACDu7C,EAAEv7C,MAAM45B,KAAK,cAAc58B,SAC3Bs5B,GAAK,UAAAj5B,OAAc2C,KAAKoO,aAAa,MAAhC,KACLkoB,GACOilB,EAAEv7C,MACA45B,KAAK,aACL98B,IAAI,WACD,IAAMhI,EAAOkL,KAAKoO,aAAa,QAE/B,OACKtZ,EAAI,GAAAuI,OAAMvI,EAAN,KAAgB,IACfkL,KAAKoO,aAAa,WAE/BhZ,MACAmI,KAAK,MACd+4B,GAAS,QAIbA,GAAS1T,EAAKy4B,iBAAiBE,EAAEv7C,MAAOA,KAAKoO,aAAa,SAM9DkoB,GAAS1T,EAAKy4B,iBAAiBnjB,EAAM,MAGrCwgB,EACMxgB,EAAK0B,KACH,+DACJ0hB,KAAK,WAELhlB,GAAK,YAAAj5B,OACc2C,KAAKoO,aAAa,MADhC,KAAA/Q,OAEG2C,KAAKoO,aAAa,OAFrB,UAOT2S,EACK6Y,KACG,sEAEH0hB,KAAK,WAEF,IAAIvoC,EAAW/S,KAAKoO,aAAa,YAEjC2E,EAC0B,iBAAbA,EAAwBA,EAAS5E,cAAgB,GAEzDyU,EAAK21B,sBACe,QAAbxlC,GAAmC,WAAbA,IAC1B6P,EAAK41B,qBAAoC,QAAbzlC,IAEzB6P,EAAK01B,SACZt4C,KAAKgN,aAAa,KAAM,WAG5BspB,GAASf,EAAAA,EAAQwD,oBAAoB/4B,SAM7C+gB,EACK6Y,KAAK,mEACL0hB,KAAK,WAEF,IAAMxhB,EAAY95B,KAAKoO,aAAa,aAC9BgrB,EACAmiB,EAAEv7C,MACC45B,KAAK,WACL98B,IAAI,WACD,OAAOkD,KAAKoO,aAAa,UAE5BhZ,MAELgkC,EAAMp8B,SACNs5B,GAAK,gBAAAj5B,OAAoBy8B,EAApB,KAAAz8B,OAAiC+7B,EAAM77B,KAAK,KAA5C,YAMjBm7C,EACM33B,EAAQ6Y,KACN,gEACJ0hB,KAAK,WAEL,IAAMtqB,EAAOhxB,KAAKoO,aAAa,QAG/BmtC,EAAEv7C,MAAM45B,KAAK,cAAc0hB,KAAK,WAC5B,IAAMxmD,EAAOkL,KAAKoO,aAAa,QAC3B5Y,EAAQwK,KAAKoO,aAAa,SAE9B5Y,EAAQ+/B,EAAAA,EAAQC,mBAAmBhgC,GACnC8gC,GAAK,UAAAj5B,OAAc2zB,EAAd,KAAA3zB,OAAsBvI,GACvBU,GAASA,EAAMwH,SACfs5B,GAAK,IAAAj5B,OAAQ7H,IAEjB8gC,GAAS,WAMVA,wcCh0BE0lB,EAAS,SAETC,EAAQ,QAERC,EAAU,UAEVC,EAAoB,YAEpBC,EAAO,OAEPC,EAAS,SAETC,EAAO,OAEPC,EAAW,WAEXC,EAAe,eAEfC,EAAU,gLCHvB,IAAMC,EAAwB,CAC1BC,OAAUX,EACVY,SAAYZ,EACZa,MAASZ,EACTa,QAAWZ,EACXa,oBAAqBZ,EACrBa,iBAAkBZ,EAClBa,OAAUZ,GA+Bd,SAASa,IACL,IAAMC,EAAYnV,UAAUmV,UAE5B,GAAIA,EAAUtgC,MAAM,YAAa,CAC7B,IAAMqH,EAAUi5B,EAAUtgC,MAAM,sBAAsB,GAEtD,MAAO,CACH/nB,KAAMynD,EACNr4B,QAAAA,IAUZ,SAASk5B,IACL,IAAMD,EAAYnV,UAAUmV,UAE5B,GAAIA,EAAUtgC,MAAM,eAAgB,CAChC,IAAMqH,EAAUi5B,EAAUtgC,MAAM,yBAAyB,GAEzD,MAAO,CACH/nB,KAAMwnD,EACNp4B,QAAAA,IASZ,SAASm5B,IACL,IAEIn5B,EAOIpvB,EATF+nB,EACAmrB,UAAUmV,UAAUtgC,MAAM,wCAOhC,GAAIA,GAA+B,gBAAtBmrB,UAAUsV,QAUnB,OAPIzgC,GAASA,EAAM7f,OAAS,IACxBlI,EAAO+nB,EAAM,GACbqH,EAAUrH,EAAM,IAEpB/nB,IAASA,EAAO,gBAChBovB,IAAYA,EAAU,WAEf,CACHpvB,KAAM0nD,EACNt4B,QAAAA,GAUZ,SAASq5B,IASL,IARA,IAAIC,EACEC,EAAY,CACdJ,EACAH,EACAE,GAIK7oD,EAAI,EAAGA,EAAIkpD,EAAUzgD,OAAQzI,IAElC,GADAipD,EAAcC,EAAUlpD,KAEpB,OAAOipD,EAZA,IAgBP1oD,EAAkB4oD,EAAAA,EAAlB5oD,KAAMovB,EAAYw5B,EAAAA,EAAZx5B,QAEd,OAAIpvB,KAAQ4nD,EACD,CACH5nD,KAAM4nD,EAAsB5nD,GAC5BovB,QAAAA,IAKRs5B,EA/GJ,WACI,IAAML,EAAYnV,UAAUmV,UAE5B,GAAIpX,QAAQ5xC,OAAOwpD,UACPR,EAAUtgC,MAAM,SAAWsgC,EAAUtgC,MAAM,UAAW,CAC9D,IAAMqH,EAAUi5B,EAAUtgC,MAAM,oBAAoB,GAEpD,MAAO,CACH/nB,KAAMknD,EACN93B,QAAAA,IAsGM05B,KAKP,CACH9oD,KAAM2nD,EACNv4B,aAASvpB,aAOIkjD,aAQjB,SAAAA,EAAYL,GACR,IAAI1oD,EAAMovB,EAEV,+FAHqBujB,CAAAznC,KAAA69C,QAGM,IAAhBL,EAA6B,CACpC,IAAMM,EAAsBP,IAE5BzoD,EAAOgpD,EAAoBhpD,KAC3BovB,EAAU45B,EAAoB55B,aACvBs5B,EAAY1oD,QAAQ4nD,GAC3B5nD,EAAO4nD,EAAsBc,EAAY1oD,MACzCovB,EAAUs5B,EAAYt5B,UAEtBpvB,EAAO2nD,EACPv4B,OAAUvpB,GAGdqF,KAAK+9C,MAAQjpD,EACbkL,KAAKg+C,SAAW95B,2DAQhB,OAAOlkB,KAAK+9C,yCAQZ,OAAO/9C,KAAK+9C,QAAU/B,oCAQtB,OAAOh8C,KAAK+9C,QAAU9B,sCAQtB,OAAOj8C,KAAK+9C,QAAU7B,wCAQtB,OAAOl8C,KAAK+9C,QAAU5B,mCAQtB,OAAOn8C,KAAK+9C,QAAU3B,qCAQtB,OAAOp8C,KAAK+9C,QAAU1B,mCAQtB,OAAOr8C,KAAK+9C,QAAUzB,uCAQtB,OAAOt8C,KAAK+9C,QAAUxB,0CAQtB,OAAOv8C,KAAK+9C,QAAUvB,uCAQtB,OAAOx8C,KAAKg+C,gDAmBD95B,GACX,GAAIlkB,KAAKg+C,SACL,OAAON,EAAAA,EAAOO,gBAAgB,CAAE37C,OAAO4hB,GAAUlkB,KAAKg+C,wDAazC95B,GACjB,OAAyC,IAAlClkB,KAAKk+C,eAAeh6B,6CAYbA,GACd,OAAwC,IAAjClkB,KAAKk+C,eAAeh6B,4CAYdA,GACb,OAAwC,IAAjClkB,KAAKk+C,eAAeh6B,0CA9Kd25B,wBAwHQH,EAAAA,EAAOO,mHC3RpC5pD,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAi4B,IAAA9pD,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAk4B,kCCAA/pD,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,mBAAA,WAAA,OAAAm4B,IAAAhqD,EAAAQ,EAAAqxB,EAAA,mBAAA,WAAA,OAAAo4B,IAAAjqD,EAAAQ,EAAAqxB,EAAA,cAAA,WAAA,OAAAq4B,IAAAlqD,EAAAQ,EAAAqxB,EAAA,WAAA,WAAA,OAAAs4B,IAAAnqD,EAAAQ,EAAAqxB,EAAA,YAAA,WAAA,OAAAu4B,IAAApqD,EAAAQ,EAAAqxB,EAAA,gBAAA,WAAA,OAAAw4B,IAAArqD,EAAAQ,EAAAqxB,EAAA,iBAAA,WAAA,OAAAy4B,IAAAtqD,EAAAQ,EAAAqxB,EAAA,eAAA,WAAA,OAAA04B,IAAAvqD,EAAAQ,EAAAqxB,EAAA,sBAAA,WAAA,OAAA24B,IAAAxqD,EAAAQ,EAAAqxB,EAAA,uBAAA,WAAA,OAAA44B,IAIO,IAAMT,EAAmB,YAMnBC,EAAmB,YAOnBC,EAAc,OAMdC,EAAW,KAMXC,EAAY,MAMZC,EAAgB,UAOhBC,EAAiB,WAMjBC,EAAe,SAOfC,EAAsB,sBAOtBC,EAAuB,6DC9DpCzqD,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,0BAAA,WAAA,OAAAqY,IAAAlqC,EAAAQ,EAAAqxB,EAAA,yBAAA,WAAA,OAAAlvB,IAAA3C,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAAjvB,IAAA5C,EAAAQ,EAAAqxB,EAAA,cAAA,WAAA,OAAA64B,IAWO,IAAMxgB,EAA0B,oCAS1BvnC,EAAyB,mCAazBC,EAAoB,8BAMpB8nD,EAAc,yCCvC3B,IAAIC,EAASjkD,EAAQ,KACjBkkD,EAASlkD,EAAQ,KAErBhH,EAAQmrD,MAAQD,EAChBlrD,EAAQutB,MAAQ09B,EAAO19B,MACvBvtB,EAAQorD,gBAAkBH,EAAOG,gBACjCprD,EAAQqrD,YAAcJ,EAAOI,YAC7BrrD,EAAQsrD,cAAgBL,EAAOK,cAC/BtrD,EAAQurD,sBAAwBN,EAAOM,sBACvCvrD,EAAQwrD,qBAAuBP,EAAOO,qBACtCxrD,EAAQyrD,yBAA2BR,EAAOQ,uDCV1CnrD,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAu5B,IAAAprD,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAw5B,IAAArrD,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAy5B,IAAAtrD,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAA05B,IAUO,IAAMH,EAAc,wBAOdC,EAAkB,6BAKlBC,EAAkB,6BASlBC,EAAmB,0RCxBXhY,aAMjB,SAAAA,IAA+C,IAAnChd,EAAmChtB,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAApB,IAAIitB,EAAAA,+FAAgB4c,CAAAznC,KAAA4nC,GAC3C5nC,KAAK4qB,aAAeA,EAGpB5qB,KAAKuqC,iBAAmBvqC,KAAK2sB,GAAK3sB,KAAKgzC,YACvChzC,KAAK6/C,oBAAsB7/C,KAAK8/C,IAAM9/C,KAAK8sB,0EAQnCwI,EAAW5I,GACnB1sB,KAAK4qB,aAAaooB,YAAY1d,EAAW5I,0CAS9B4I,EAAW5I,GACtB1sB,KAAK4qB,aAAakC,eAAewI,EAAW5I,uECrCpD,SAAAnD,GAAA,IAKIw2B,EAEAC,EAPJC,EAAA5rD,EAAA,GAAA6rD,EAAA7rD,EAAA,IAAA8rD,EAAA9rD,EAAA2B,EAAAkqD,GACMh3B,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAqHzB,SAAS62B,IACL,IAAIC,EAEJ,IAEIA,GAAWlsD,QAAU6L,MAAMsgD,aAC7B,MAAO1wC,GACLsZ,EAAOtZ,MAAMA,GAGjB,OAAOywC,EAaX,SAASE,IACL,MAAO,GAAAljD,OAAGyD,KAAK2U,SAAShV,SAAS,IAA1B,aAAyCie,OAAO,EAAG,GAlI/CwH,EAAA,EAAA,CAKX4D,wBACI,IAAKi2B,EAAoB,CACrB,IAAMO,EAAeF,IAEjBE,IACAP,EAAqBO,EAAa/+B,QAAQ,sBAEzCw+B,IAqEPS,EAAWC,EAAAA,EAAkBC,mBAEnCx3B,EAAO1Z,IAAI,0BAA2BgxC,GAtE1BT,EAwELS,EAvESF,GACAA,EAAarpC,QACT,oBACA8oC,IA+DxB,IACUS,EA3DF,OAAOT,GAOXY,gBACI,IAAKX,EAAY,CACb,IAAMM,EAAeF,IAEjBE,IACAN,EAAaM,EAAa/+B,QAAQ,gBAEjCy+B,IAyDPY,EA8BCL,IAAQA,IAAQA,IAAQA,IA5B/Br3B,EAAO1Z,IAAI,eAAgBoxC,GA1DfZ,EA4DLY,EA3DSN,GACAA,EAAarpC,QAAQ,cAAe+oC,IAqDxD,IACUY,EAjDF,OAAOZ,GAOXa,gBAGI,IAAMP,EAAeF,IAErB,OAAOE,EAAeA,EAAa/+B,QAAQ,kBAAe5mB,GAO9DkmD,cAAcA,GACV,IAAMP,EAAeF,IAEjBE,IACIO,EACAP,EAAarpC,QAAQ,YAAa4pC,GAElCP,EAAappC,WAAW,4FClFxC7iB,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,sBAAA,WAAA,OAAA46B,IAAAzsD,EAAAQ,EAAAqxB,EAAA,uBAAA,WAAA,OAAA66B,IAGO,IAAMD,EAAsB,yBAMtBC,EAAuB,ieCF7B,SAASC,EAAiBnnB,GAC7B,OAAOnY,SAASmY,EAAMT,MAAMv8B,MAAM,KAAK,GAAI,IAQxC,SAASokD,EAAmBpnB,GAC/B,OAAOnY,SAASmY,EAAMT,MAAMv8B,MAAM,KAAK,GAAI,IAQ/C,SAASqkD,EAAc9mB,GACnB,OAAKA,EAAMhB,MAIJgB,EAAMhB,MACRt8B,IAAI,SAAAu8B,GAAQ,OAAIA,EAASp6B,KACzBq6B,OAAO,SAACtI,EAAM3yB,EAAOk7B,GAAd,OAAwBA,EAAMj7B,QAAQ0yB,KAAU3yB,IACvDrB,OANM,MAaTmkD,aAOF,SAAAA,EAAY/mB,GACR,GADeqN,EAAAznC,KAAAmhD,IACV/mB,EACD,MAAM,IAAIl8B,MAAM,sBAGpB8B,KAAKo6B,MAAQA,qDAyEAgnB,EAAYC,GACzB,IAAMj4C,EAAYpJ,KAAKo5B,MAAMQ,KACzB,SAAA0nB,GAAO,OAAIA,EAAQriD,KAAOmiD,GACvBE,EAAQl4C,YAAci4C,IAG7B,OAAOj4C,GAAaA,EAAU5T,yCAQvB+rD,GACFvhD,KAAKo6B,MAAMhB,OAAUp5B,KAAKo6B,MAAMhB,MAAMp8B,SAI3CgD,KAAKo6B,MAAMhB,MACLp5B,KAAKo6B,MAAMhB,MAAME,OAAO,SAAAgoB,GAAO,OAAIA,EAAQriD,KAAOsiD,8CAQ3CD,GACbthD,KAAKo5B,MAAMv7B,KAAKyjD,qCAWVxnB,EAAWV,GACjB,OAAOp5B,KAAKy5B,WAAWG,KACnB,SAAAC,GAAK,OACDA,EAAMC,YAAcA,KACXV,GAASA,IAAUS,EAAMT,4CASnCU,GACP,OAAO95B,KAAKy5B,WAAWH,OACnB,SAAAO,GAAK,OAAIA,EAAMC,YAAcA,mDASdA,EAAW0nB,GAC9B,OAAOxhD,KAAKy5B,WAAWG,KACnB,SAAAC,GAAK,OAAIA,EAAMC,YAAcA,GACtBknB,EAAiBnnB,KAAW2nB,2CAS5BC,GACX,OAAOzhD,KAAKo5B,MAAMQ,KACd,SAAA0nB,GAAO,MAA0B,SAAtBA,EAAQl4C,YACF,OAATq4C,GAAiBH,EAAQ9rD,QAAUisD,4CAQ/C,OAAOP,EAAclhD,KAAKo6B,uDAS1B,YAAiCz/B,IAA1BqF,KAAKo6B,MAAMX,yDASlB,IAAM2G,EAAYpgC,KAAKo6B,MAAM5oB,KAE7B,GAAkB,UAAd4uB,EACA,MAAM,IAAIliC,MAAJ,qCAAAb,OACmC+iC,EADnC,MAMV,GAAiB,IAFA8gB,EAAclhD,KAAKo6B,OAIhC,OAAOp6B,KAAKo6B,MAAMhB,MAAM,GAAGn6B,GAI/B,GAAIe,KAAKo6B,MAAMX,WAAY,CACvB,IAAMM,EAAW/5B,KAAK0hD,UAAU,OAEhC,GAAI3nB,EACA,OAAOinB,EAAiBjnB,GAE5B,IAAMJ,EAAW35B,KAAK0hD,UAAU,OAEhC,GAAI/nB,EACA,OAAOqnB,EAAiBrnB,GAE5B,IAAMgoB,EAAW3hD,KAAK0hD,UAAU,UAEhC,GAAIC,EACA,OAAOX,EAAiBW,uCAczBjoB,GACP,IAAMC,EAAW35B,KAAK4hD,uBAAuB,MAAOloB,GAGpD,OAAOC,GAAYsnB,EAAmBtnB,sCAQtC,OAAO35B,KAAKo5B,MACPt8B,IAAI,SAAAu8B,GAAQ,OAAIA,EAASp6B,KACzBq6B,OAAO,SAACtI,EAAM3yB,EAAOk7B,GAAd,OAAwBA,EAAMj7B,QAAQ0yB,KAAU3yB,mDAS5D,IAAM+hC,EAAYpgC,KAAKo6B,MAAM5oB,KAE7B,GAAkB,UAAd4uB,EACA,MAAM,IAAIliC,MAAJ,0CAAAb,OACwC+iC,IAGlD,IAAMyhB,EAAa7hD,KAAK8hD,WARLt0B,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAUnB,IAAA,IAAAgzB,EAAAC,EAA4B5tB,KAAKy5B,WAAjCnkC,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA6C,CAAA,IAAlCu0B,EAAkCp0B,EAAAn4B,MAIzC,GAAgC,QAA5BusD,EAAcjoB,WACqB,WAA5BioB,EAAcjoB,UAAwB,CAE7C,IAAMkoB,EAAgBf,EAAmBc,GAEzCF,EAAWvkD,OACPukD,EAAWvjD,QAAQ0jD,GAAgB,KApB5B,MAAA/nC,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAwBnB,OAAOm0B,2CAOP,OAAO9qC,KAAKyK,UAAUxhB,KAAKo6B,MAAMX,yDAQhBzI,GACZhxB,KAAKo6B,MAAMX,aAIhBz5B,KAAKo6B,MAAMX,WAAaz5B,KAAKo6B,MAAMX,WAC9BH,OAAO,SAAA2oB,GAAS,OAA4C,IAAxCA,EAAU7oB,MAAM96B,QAAhB,GAAAjB,OAA2B2zB,uDAOhC8I,GACf95B,KAAKo6B,MAAMX,aAIhBz5B,KAAKo6B,MAAMX,WACLz5B,KAAKo6B,MAAMX,WACRH,OAAO,SAAA2oB,GAAS,OAAIA,EAAUnoB,YAAcA,yCAQ7CooB,EAASC,GACbniD,KAAKo6B,MAAMhB,OACXp5B,KAAKo6B,MAAMhB,MAAMn4B,QAAQ,SAAAo4B,GACjBA,EAASp6B,KAAOijD,IAChB7oB,EAASp6B,GAAKkjD,0CAWjBtoB,GACT75B,KAAKy5B,WAAW57B,KAAKg8B,iCAvTrB,OAJK75B,KAAKo6B,MAAMhB,QACZp5B,KAAKo6B,MAAMhB,MAAQ,IAGhBp5B,KAAKo6B,MAAMhB,oBASZA,GACNp5B,KAAKo6B,MAAMhB,MAAQA,oCAQnB,OAAOp5B,KAAKo6B,MAAM5B,wBAORA,GACVx4B,KAAKo6B,MAAM5B,UAAYA,qCAYvB,OAJKx4B,KAAKo6B,MAAMX,aACZz5B,KAAKo6B,MAAMX,WAAa,IAGrBz5B,KAAKo6B,MAAMX,yBAQPA,GACXz5B,KAAKo6B,MAAMX,WAAaA,WA4RnB2oB,EAAb,WAOI,SAAAA,EAAYC,GAAQ5a,EAAAznC,KAAAoiD,GAChBpiD,KAAKsiD,UAAYC,EAAAA,MAAgBF,GARzC,OAAAG,EAAAJ,EAAA,CAAA,CAAAtsD,IAAA,cAAAN,MAAA,SAoBgB4qC,GACR,IAAMqiB,EACAziD,KAAKsiD,UAAUhsB,MAAMsD,KAAK,SAAAQ,GAAK,OAAIA,EAAM5oB,OAAS4uB,IAExD,OAAOqiB,EAAgB,IAAItB,EAAUsB,GAAiB,OAxB9D,CAAA3sD,IAAA,WAAAN,MAAA,WAiCQ,OAAO+sD,EAAAA,MAAgBviD,KAAKsiD,eAjCpCF,EAAA,iCC9YA/tD,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAw8B,IAIO,IAAMA,EAAU,CACnBC,OAAQ,iBACR9K,iBAAkB,+BAClB+K,SAAU,mBACVC,UAAW,oBACXvoD,eAAgB,iBAChBwoD,YAAa,mQCWjB,SAASj4B,IACP7qB,KAAK+iD,QAAU/iD,KAAK+iD,SAAW,GAC/B/iD,KAAKgjD,cAAgBhjD,KAAKgjD,oBAAiBroD,EAwQ7C,SAASsoD,EAAWziD,GAClB,MAAsB,mBAARA,EAOhB,SAAS0iD,EAAS1iD,GAChB,MAAsB,WAAff,EAAOe,IAA4B,OAARA,EAGpC,SAAS2iD,EAAY3iD,GACnB,YAAe,IAARA,EAnRTxM,EAAOD,QAAU82B,EAGjBA,EAAaA,aAAeA,EAE5BA,EAAa10B,UAAU4sD,aAAUpoD,EACjCkwB,EAAa10B,UAAU6sD,mBAAgBroD,EAIvCkwB,EAAau4B,oBAAsB,GAInCv4B,EAAa10B,UAAUktD,gBAAkB,SAASrtD,GAChD,GA4PsB,iBA5PRA,GAAMA,EAAI,GAAKoM,MAAMpM,GACjC,MAAMqL,UAAU,+BAElB,OADArB,KAAKgjD,cAAgBhtD,EACdgK,MAGT6qB,EAAa10B,UAAUo3B,KAAO,SAAS/b,GACrC,IAAI8xC,EAAIn0C,EAASxO,EAAKhD,EAAMpJ,EAAGgvD,EAM/B,GAJKvjD,KAAK+iD,UACR/iD,KAAK+iD,QAAU,IAGJ,UAATvxC,KACGxR,KAAK+iD,QAAQnzC,OACbszC,EAASljD,KAAK+iD,QAAQnzC,SAAW5P,KAAK+iD,QAAQnzC,MAAM5S,QAAS,CAEhE,IADAsmD,EAAK1lD,UAAU,cACGM,MAChB,MAAMolD,EAGN,IAAIrpC,EAAM,IAAI/b,MAAM,yCAA2ColD,EAAK,KAEpE,MADArpC,EAAIupC,QAAUF,EACRrpC,EAOZ,GAAIkpC,EAFJh0C,EAAUnP,KAAK+iD,QAAQvxC,IAGrB,OAAO,EAET,GAAIyxC,EAAW9zC,GACb,OAAQvR,UAAUZ,QAEhB,KAAK,EACHmS,EAAQza,KAAKsL,MACb,MACF,KAAK,EACHmP,EAAQza,KAAKsL,KAAMpC,UAAU,IAC7B,MACF,KAAK,EACHuR,EAAQza,KAAKsL,KAAMpC,UAAU,GAAIA,UAAU,IAC3C,MAEF,QACED,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAC7CuR,EAAQrR,MAAMkC,KAAMrC,QAEnB,GAAIulD,EAAS/zC,GAIlB,IAHAxR,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAE7C+C,GADA4iD,EAAYp0C,EAAQxT,SACJqB,OACXzI,EAAI,EAAGA,EAAIoM,EAAKpM,IACnBgvD,EAAUhvD,GAAGuJ,MAAMkC,KAAMrC,GAG7B,OAAO,GAGTktB,EAAa10B,UAAU68C,YAAc,SAASxhC,EAAMkb,GAClD,IAAI/3B,EAEJ,IAAKsuD,EAAWv2B,GACd,MAAMrrB,UAAU,+BA2ClB,OAzCKrB,KAAK+iD,UACR/iD,KAAK+iD,QAAU,IAIb/iD,KAAK+iD,QAAQU,aACfzjD,KAAKutB,KAAK,cAAe/b,EACfyxC,EAAWv2B,EAASA,UACpBA,EAASA,SAAWA,GAE3B1sB,KAAK+iD,QAAQvxC,GAGT0xC,EAASljD,KAAK+iD,QAAQvxC,IAE7BxR,KAAK+iD,QAAQvxC,GAAM3T,KAAK6uB,GAGxB1sB,KAAK+iD,QAAQvxC,GAAQ,CAACxR,KAAK+iD,QAAQvxC,GAAOkb,GAN1C1sB,KAAK+iD,QAAQvxC,GAAQkb,EASnBw2B,EAASljD,KAAK+iD,QAAQvxC,MAAWxR,KAAK+iD,QAAQvxC,GAAMkyC,SAIpD/uD,EAHGwuD,EAAYnjD,KAAKgjD,eAGhBn4B,EAAau4B,oBAFbpjD,KAAKgjD,gBAKFruD,EAAI,GAAKqL,KAAK+iD,QAAQvxC,GAAMxU,OAASrI,IAC5CqL,KAAK+iD,QAAQvxC,GAAMkyC,QAAS,EAC5B/zC,QAAQC,MAAM,mIAGA5P,KAAK+iD,QAAQvxC,GAAMxU,QACJ,mBAAlB2S,QAAQg0C,OAEjBh0C,QAAQg0C,SAKP3jD,MAGT6qB,EAAa10B,UAAUw2B,GAAK9B,EAAa10B,UAAU68C,YAEnDnoB,EAAa10B,UAAUytD,KAAO,SAASpyC,EAAMkb,GAC3C,IAAKu2B,EAAWv2B,GACd,MAAMrrB,UAAU,+BAElB,IAAIwiD,GAAQ,EAEZ,SAASC,IACP9jD,KAAK8sB,eAAetb,EAAMsyC,GAErBD,IACHA,GAAQ,EACRn3B,EAAS5uB,MAAMkC,KAAMpC,YAOzB,OAHAkmD,EAAEp3B,SAAWA,EACb1sB,KAAK2sB,GAAGnb,EAAMsyC,GAEP9jD,MAIT6qB,EAAa10B,UAAU22B,eAAiB,SAAStb,EAAMkb,GACrD,IAAIq3B,EAAMC,EAAUhnD,EAAQzI,EAE5B,IAAK0uD,EAAWv2B,GACd,MAAMrrB,UAAU,+BAElB,IAAKrB,KAAK+iD,UAAY/iD,KAAK+iD,QAAQvxC,GACjC,OAAOxR,KAMT,GAHAhD,GADA+mD,EAAO/jD,KAAK+iD,QAAQvxC,IACNxU,OACdgnD,GAAY,EAERD,IAASr3B,GACRu2B,EAAWc,EAAKr3B,WAAaq3B,EAAKr3B,WAAaA,SAC3C1sB,KAAK+iD,QAAQvxC,GAChBxR,KAAK+iD,QAAQj2B,gBACf9sB,KAAKutB,KAAK,iBAAkB/b,EAAMkb,QAE/B,GAAIw2B,EAASa,GAAO,CACzB,IAAKxvD,EAAIyI,EAAQzI,KAAM,GACrB,GAAIwvD,EAAKxvD,KAAOm4B,GACXq3B,EAAKxvD,GAAGm4B,UAAYq3B,EAAKxvD,GAAGm4B,WAAaA,EAAW,CACvDs3B,EAAWzvD,EACX,MAIJ,GAAIyvD,EAAW,EACb,OAAOhkD,KAEW,IAAhB+jD,EAAK/mD,QACP+mD,EAAK/mD,OAAS,SACPgD,KAAK+iD,QAAQvxC,IAEpBuyC,EAAKzmD,OAAO0mD,EAAU,GAGpBhkD,KAAK+iD,QAAQj2B,gBACf9sB,KAAKutB,KAAK,iBAAkB/b,EAAMkb,GAGtC,OAAO1sB,MAGT6qB,EAAa10B,UAAU04B,mBAAqB,SAASrd,GACnD,IAAI1b,EAAKytD,EAET,IAAKvjD,KAAK+iD,QACR,OAAO/iD,KAGT,IAAKA,KAAK+iD,QAAQj2B,eAKhB,OAJyB,IAArBlvB,UAAUZ,OACZgD,KAAK+iD,QAAU,GACR/iD,KAAK+iD,QAAQvxC,WACbxR,KAAK+iD,QAAQvxC,GACfxR,KAIT,GAAyB,IAArBpC,UAAUZ,OAAc,CAC1B,IAAKlH,KAAOkK,KAAK+iD,QACH,mBAARjtD,GACJkK,KAAK6uB,mBAAmB/4B,GAI1B,OAFAkK,KAAK6uB,mBAAmB,kBACxB7uB,KAAK+iD,QAAU,GACR/iD,KAKT,GAAIijD,EAFJM,EAAYvjD,KAAK+iD,QAAQvxC,IAGvBxR,KAAK8sB,eAAetb,EAAM+xC,QACrB,GAAIA,EAET,KAAOA,EAAUvmD,QACfgD,KAAK8sB,eAAetb,EAAM+xC,EAAUA,EAAUvmD,OAAS,IAI3D,cAFOgD,KAAK+iD,QAAQvxC,GAEbxR,MAGT6qB,EAAa10B,UAAUotD,UAAY,SAAS/xC,GAQ1C,OANKxR,KAAK+iD,SAAY/iD,KAAK+iD,QAAQvxC,GAE1ByxC,EAAWjjD,KAAK+iD,QAAQvxC,IACzB,CAACxR,KAAK+iD,QAAQvxC,IAEdxR,KAAK+iD,QAAQvxC,GAAM7V,QAJnB,IAQVkvB,EAAa10B,UAAU8tD,cAAgB,SAASzyC,GAC9C,GAAIxR,KAAK+iD,QAAS,CAChB,IAAImB,EAAalkD,KAAK+iD,QAAQvxC,GAE9B,GAAIyxC,EAAWiB,GACb,OAAO,EACJ,GAAIA,EACP,OAAOA,EAAWlnD,OAEtB,OAAO,GAGT6tB,EAAao5B,cAAgB,SAASE,EAAS3yC,GAC7C,OAAO2yC,EAAQF,cAAczyC,mBCzN/Bxd,EAAOD,QAnEa,CAChBqwD,KAAQ,CACJxgB,MAAO,KACPnC,OAAQ,KACR4iB,MAAO,GAEXC,OAAU,CACN1gB,MAAO,KACPnC,OAAQ,KACR4iB,MAAO,GAEXE,IAAO,CACH3gB,MAAO,KACPnC,OAAQ,IACR4iB,MAAO,GAEXG,GAAM,CACF5gB,MAAO,KACPnC,OAAQ,IACR4iB,MAAO,GAEXI,IAAO,CACH7gB,MAAO,IACPnC,OAAQ,IACR4iB,MAAO,GAEXK,IAAO,CACH9gB,MAAO,IACPnC,OAAQ,IACR4iB,MAAO,GAEXM,IAAO,CACH/gB,MAAO,IACPnC,OAAQ,IACR4iB,MAAO,GAIXO,IAAO,CACHhhB,MAAO,IACPnC,OAAQ,IACR4iB,MAAO,GAEXQ,IAAO,CACHjhB,MAAO,IACPnC,OAAQ,IACR4iB,MAAO,GAEXS,IAAO,CACHlhB,MAAO,IACPnC,OAAQ,IACR4iB,MAAO,GAIXU,IAAO,CACHnhB,MAAO,IACPnC,OAAQ,IACR4iB,MAAO,GAEXW,IAAO,CACHphB,MAAO,IACPnC,OAAQ,IACR4iB,MAAO,kCC/DfhwD,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAA++B,IAAA5wD,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAg/B,IAAA7wD,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAi/B,IAMO,IAAMF,EAAU,UAQVC,EAAS,SAOTC,EAAQ,8UChBrB,IA8DIC,EA9DEl8B,EAASnuB,EAAQ,GAAqBiuB,UAAUO,GAQhD87B,EACW,cADXA,EAEY,eAFZA,EAGmB,sBAHnBA,EAIoB,uBAJpBA,EAKe,kBALfA,EAMY,eANZA,EAOoB,uBAPpBA,EASc,iBASdC,EACU,aADVA,EAEY,eAFZA,EAGS,YAHTA,EAIW,cAJXA,EAKU,aALVA,EAMW,cANXA,EAUgB,mBAVhBA,EAWe,kBAXfA,EAYe,kBAZfA,EAagB,mBAOhBC,EAAsB,QAMtBC,EACK,QADLA,EAEK,QAFLA,EAGe,gBAqBA97B,aAwcjB,SAAAA,EAAYyE,EAAK1c,gGAASg2B,CAAAznC,KAAA0pB,GACtB1pB,KAAKuqB,OAAS9Y,EAAQ8Y,OACtBvqB,KAAKmuB,IAAMA,EACXnuB,KAAKgsB,eAAiBmC,EAAInC,eAC1BhsB,KAAKkvB,aAAezd,EAAQyd,cAAgBq2B,EAC5CvlD,KAAKylD,WAAY,EAEjB/7B,EAAUg8B,QAAQj6B,IAAIzrB,MAElB0pB,EAAUi8B,qBACV3lD,KAAK4lD,gBAK0B,IAA3Bl8B,EAAUg8B,QAAQp4B,MAClB5D,EAAUm8B,kBAAkB7lD,oEAjdX4P,EAAOF,GAC5Bga,EAAUo8B,SAAqB,YAAVl2C,GACrBsZ,EAAOtZ,MAAP,sBAAAvS,OAAmCuS,EAAnC,UAAAvS,OAAiDqS,0CAUpCE,EAAOF,GAIxB,GAHAwZ,EAAO1Z,IAAP,yBAAAnS,OAAoCuS,EAApC,SAAAvS,OAAiDqS,IAGnC,YAAVE,EAAJ,CAIA8Z,EAAUi8B,oBAAqB,EAG/B,IAAII,GAAmB,EACnBC,EAAkB,KAZOx4B,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAc7B,IAAA,IAAAgzB,EAAAC,EAAgClE,EAAUg8B,QAAQ73B,SAAlDv4B,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA4D,CAAA,IAAjD6C,EAAiD1C,EAAAn4B,MACnD66B,EAAkBo1B,YACnBv8B,EAAOrZ,MAAM,+BACTwgB,EAAkBu1B,kBAClBG,GAAmB,EACdC,IACDA,EAAkB31B,MApBL,MAAApW,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GA0BxBq4B,GAILr8B,EAAUm8B,kBAAkBG,8CASPC,GAIrB,IAAMC,EAAgBD,EAAW17B,OAC3B47B,EAAYF,EAAWj6B,eALIqC,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IAQjC,IAAA,IAAA6zB,EAAAC,EAAqB/E,EAAU08B,aAA/B9wD,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAA6C,CAAA,IAAlCg4B,EAAkC73B,EAAAh5B,MACzC,GAAI6wD,EAAO70C,OAASg0C,EAAkB,CAClC,IAAMc,EAAYD,EAAO7iD,KAEzBkmB,EAAU68B,aACNN,EACAK,EAAU90C,KACV80C,EAAU12C,MACV02C,EAAUE,IAAML,QACjB,GAAIE,EAAO70C,OAASg0C,EAAkB,CAIzC,IAAMiB,EAAYJ,EAAO7iD,KAEzBkmB,EAAUo8B,QAAQY,gBACdL,EAAOG,IAAML,EACbM,EAAUvxB,MACVgxB,EACAO,EAAUA,gBACX,GAAIJ,EAAO70C,OAASg0C,EAA4B,CACnD,IAAMhiD,EAAO6iD,EAAO7iD,KAEpBkmB,EAAUo8B,QAAQa,uBACdN,EAAOG,IAAML,EACb3iD,EAAKojD,YACLV,EACA1iD,EAAKwtB,KACLxtB,EAAKgvB,WACLhvB,EAAKivB,eArCgB,MAAAxY,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,GAyCjC7E,EAAU08B,aAAappD,OAAS,uCAahBmzB,EAAI3e,EAAM5B,EAAO42C,GACjC,IAAIK,EAASj3C,EAERi3C,IACD39B,EAAOnZ,KAAK,uBACZ82C,EAAS,IAAI3oD,MAAM,kBAEnBwrB,EAAUi8B,oBAAsBx1B,EAChCzG,EAAUo8B,QAAQgB,YAAYN,EAAIr2B,EAAG5F,OAAQ/Y,EAAMq1C,GAEnDn9B,EAAU08B,aAAavoD,KAAK,CACxB2T,KAAMg0C,EACNhiD,KAAM,CACFoM,MAAOi3C,EACPL,GAAAA,EACAh1C,KAAAA,0CAkBI2e,EAAI+E,EAAOuxB,GAC3B,IAAMD,EAAKr2B,GAAMA,EAAGnE,eACdzB,EAAS4F,GAAMA,EAAG5F,OAEpBb,EAAUi8B,oBAAsBx1B,EAChCzG,EAAUo8B,QAAQY,gBAAgBF,EAAItxB,EAAO3K,EAAQk8B,GAErD/8B,EAAU08B,aAAavoD,KAAK,CACxB0sB,OAAAA,EACAi8B,GAAAA,EACAh1C,KAAMg0C,EACNhiD,KAAM,CAAE0xB,MAAAA,EACJuxB,UAAAA,wDAakBM,GAS9B,IARA,IAAMC,EAAkB,CACpB,yBACA,kBACA,oBAJsCpO,EAAA,WASrC,IAAMqO,EAAcD,EAAJE,GACXC,EAAiBJ,EAAWE,GAElCF,EAAWE,GAAc,WACrB,IAAI,IAAA,IAAAG,EAAAxpD,UAAAZ,OAD6BqqD,EAC7B,IAAAjnD,MAAAgnD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAD6BD,EAC7BC,GAAA1pD,UAAA0pD,GACA,OAAOH,EAAerpD,MAAMipD,EAAYM,GAC1C,MAAOroD,GACLimC,EAAAA,EAAqBC,iBAAiBlmC,MAPlDkoD,EAAA,EAAAA,EAAyBF,EAAzBhqD,OAAAkqD,IAA0CtO,IAmB1C,IARA,IAAM2O,EAAe,CACjB,yBACA,kBACA,oBAvBsCC,EAAA,WA4BrC,IAAMP,EAAcM,EAAJE,GACXN,EAAiBJ,EAAWE,GAElCF,EAAWE,GAAc,WAA0B,IAAA,IAAAS,EAAA9pD,UAAAZ,OAAdqqD,EAAc,IAAAjnD,MAAAsnD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAdN,EAAcM,GAAA/pD,UAAA+pD,GAC/Cz+B,EAAOrZ,MAAMo3C,EAAYI,GACzBF,EAAerpD,MAAMipD,EAAYM,KALzCI,EAAA,EAAAA,EAAyBF,EAAzBvqD,OAAAyqD,IAAuCD,IAQvC,IAAMI,EAAsBb,EAAWD,YAGvCC,EAAWD,YAAc,SAASN,EAAIr2B,EAAI3e,GAAe,IAAA,IAAAy+B,EAAAryC,UAAAZ,OAANW,EAAM,IAAAyC,MAAA6vC,EAAA,EAAAA,EAAA,EAAA,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANvyC,EAAMuyC,EAAA,GAAAtyC,UAAAsyC,GAIjD1+B,IAAS6zC,EAQJr6B,EAAAA,EAAQC,iBACTtb,SAAWA,QAAQE,MAAM,cAAe22C,EAAIr2B,EAAI3e,GAGpD0X,EAAOrZ,MAAP/R,MAAAorB,EAAM,CAAO,cAAes9B,EAAIr2B,EAAI3e,GAA9BnU,OAAuCM,IAEjD,IACIiqD,EAAoBlzD,KAApBoJ,MAAA8pD,EAAmB,CAAMb,EAAYP,EAAIr2B,EAAI3e,GAA1BnU,OAAmCM,IACxD,MAAOkqD,GACDr2C,IAAS6zC,EACT11C,SAAWA,QAAQC,MAAM,cAAei4C,GAExC5iB,EAAAA,EAAqBC,iBAAiB2iB,yCAiCnCp2C,GACf,GAAIiY,EAAUo8B,QACV,MAAM,IAAI5nD,MAAM,mDAEpB,IACI,IAWI4pD,EAXEC,EAAmBC,UAqBzB,GAnBAt+B,EAAUo8B,QAAU,IAAIiC,EACxBr+B,EAAUu+B,2BAA2Bv+B,EAAUo8B,SAC/Cp8B,EAAUiX,OAAS,CACfvW,UAAW3Y,EAAQ2Y,UACnBR,SAAUnY,EAAQmY,UAEtBF,EAAUM,YAAcvY,EAAQuY,YAChCN,EAAUO,gBAAkBxY,EAAQwY,gBAIhCxY,EAAQ4Y,kBACRy9B,EAAe,CACXI,mBAAkB,GAAA7qD,OACXoU,EAAQ4Y,gBADG,MAAAhtB,OAEV2tB,EAAAA,EAAQm9B,UAFE,OAMtB12C,EAAQ8Y,OAAQ,CAEhB,IAAM1N,EAAQpL,EAAQ8Y,OAAO1N,MAAM,gBAGnCirC,EAAaM,OAAUvrC,GAASA,EAAM,IAAO,IAIjD6M,EAAUo8B,QAAQuC,WACd3+B,EAAUM,YACVN,EAAUO,gBACVP,EAAUiX,OACVjX,EAAU4+B,mBACV3tD,EACAmtD,GAEJ,IAAMx9B,EAAqB7Y,EAAQ6Y,mBAcnC,OAZIA,IACAZ,EAAUo8B,QAAQyC,uBAAuBj+B,GAEzCA,IAAqB4d,KAAK,SAAAj4B,GAClBA,GACAiZ,EAAOpZ,KAAK,2BACNiH,KAAKuK,MAAMrR,GAAQu4C,aAGhChd,MAAM,gBAGJ,EACT,MAAOxsC,GAQL,OAJAimC,EAAAA,EAAqBC,iBAAiBlmC,GACtC0qB,EAAUo8B,QAAU,KACpB58B,EAAOtZ,MAAM5Q,IAEN,kDAYX,OAAO+mC,QAAQrc,EAAUo8B,2DASIh0B,EAAa3B,GAC1CzG,EAAU++B,aAAat4B,EAAIm1B,EAA8BxzB,8CASnC9yB,EAAGmxB,GACzB,IACIzG,EAAU68B,aACNp2B,EACAk1B,EACArmD,EACAmxB,GAAMA,EAAGnE,gBACf,MAAOpc,GAIDD,SAAqC,mBAAlBA,QAAQC,OAE3BD,QAAQC,MAAM,4BAA6BA,yCAcnC84C,EAAch0B,EAASC,GACvC,OAAO,IAAIyW,QAAQ,SAACC,EAASC,GACzB,GAAI5hB,EAAUo8B,QACVp8B,EAAUo8B,QAAQ6C,iBACdD,EACA,CACI/nB,OAAQjX,EAAUiX,OAClBjM,QAAAA,EACAC,QAAAA,GAEJ,SAAC7a,EAAQzK,GACU,YAAXyK,EACAuxB,EAAQh8B,GAERi8B,EAAOj8B,SAGhB,CACH,IAAMkK,EAAS,sDAEf2P,EAAOtZ,MAAM2J,GACb+xB,EAAO/xB,qDAWWva,EAAGmxB,GAC7BzG,EAAU68B,aAAap2B,EAAIk1B,EAA4BrmD,EAAG,4CASzCi3C,EAAMzkC,EAAM2e,GAC7B,IAAI+E,EAGAA,EADS,UAAT1jB,EACQykC,EAAOqP,EAAyBA,EAEhCrP,EAAOqP,EAAwBA,EAG3C57B,EAAU++B,aAAat4B,EAAI+E,mCA9L3B,OAJKkwB,IACDA,EAAW,IAAIt5B,KAGZs5B,iDAwOPl8B,EAAOpZ,KAAK,eAAgB9P,KAAKkvB,cACjC,IACI,IAAM05B,EAAmB,CACrBC,mBACI7oD,KAAKmuB,IAAIilB,MACH1pB,EAAUo8B,QAAQgD,aAAaC,KAC/Br/B,EAAUo8B,QAAQgD,aAAaE,QAEvC1pD,EACAoqB,EAAUo8B,QAAQmD,aAChBjpD,KAAKgsB,eACLhsB,KAAKkvB,aACLxF,EAAUo8B,QAAQoD,YAAYC,UAC9BnpD,KAAKuqB,OACLq+B,EACAl/B,EAAU0/B,uBAElBppD,KAAKylD,WAAY,EAEjB,IAAM4D,EAAyB,YAAf/pD,EAAIwa,OAMpB,OAJKuvC,GACDngC,EAAOtZ,MAAM,kCAAmCtQ,EAAI+P,SAGjDg6C,EAET,MAAOz5C,GAGL,OAFAq1B,EAAAA,EAAqBC,iBAAiBt1B,IAE/B,uDAqBPohB,EACAsB,EACAg3B,EACA92B,EACAC,GACJ,GAAK/I,EAAUo8B,QAAf,CAIA,IAAMc,EAAct0B,EAAU5I,EAAUiX,OAAS2oB,EAE7C5/B,EAAUi8B,mBACVj8B,EAAUo8B,QAAQa,uBACd3mD,KAAKgsB,eACL46B,EACA5mD,KAAKuqB,OACLyG,EACAwB,EACAC,GAEJ/I,EAAU08B,aAAavoD,KAAK,CACxB2T,KAAMg0C,EACNgB,GAAIxmD,KAAKgsB,eACTxoB,KAAM,CACFojD,YAAAA,EACAn0B,YAAAA,EACAzB,KAAAA,EACAwB,WAAAA,yDAaZ9I,EAAU++B,aAAazoD,KAAMslD,gDAQzB57B,EAAUi8B,oBACVj8B,EAAUo8B,QAAQY,gBACd1mD,KAAKgsB,eACLtC,EAAUo8B,QAAQR,YAAYiE,iBAC9BvpD,KAAKuqB,QAEbb,EAAUg8B,QAAQ52B,OAAO9uB,6DAOzB0pB,EAAU68B,aACNvmD,KACAqlD,EACA,KACArlD,KAAKgsB,8DAQShtB,GAClB0qB,EAAU68B,aACNvmD,KAAMqlD,EAA2BrmD,EAAGgB,KAAKgsB,+DAQ1BhtB,GACnB0qB,EAAU68B,aACNvmD,KAAMqlD,EAA4BrmD,EAAGgB,KAAKgsB,8DAQ5ByE,GAClB/G,EAAU++B,aACNzoD,KACAywB,EAAW60B,EAA2BA,kDAUvBv/B,EAAOiL,GAC1B,IAAIy1B,EAEAz1B,IACAy1B,EAAY,CAAEz1B,KAAAA,IAGlBtH,EAAU++B,aACNzoD,KACA+lB,EAAQu/B,EAA+BA,EACvCmB,kDAQeznD,GACnB0qB,EAAU68B,aACNvmD,KAAMqlD,EAAmCrmD,EAAGgB,KAAKgsB,gEAQjChtB,GACpB0qB,EAAU68B,aACNvmD,KAAMqlD,EAAoCrmD,EAAGgB,KAAKgsB,kEAQhChtB,GACtB0qB,EAAU68B,aACNvmD,KAAMqlD,EAA+BrmD,EAAGgB,KAAKgsB,yBAQzDtC,EAAUo8B,QAAU,KAKpBp8B,EAAU08B,aAAe,GAOzB18B,EAAUi8B,oBAAqB,EAM/Bj8B,EAAUM,YAAc,KAMxBN,EAAUO,gBAAkB,KAS5BP,EAAUiX,OAAS,qEC/xBnB,IAAM6oB,EACA,iEAcN,SAAStvB,EAAUvW,EAAKge,GACpB,OAAO7gC,KAAKE,MAAMF,KAAK2U,UAAYksB,EAAMhe,EAAM,IAAMA,EAQzD,SAAS8lC,EAAcC,GACnB,OAAOA,EAAIxvB,EAAU,EAAGwvB,EAAI1sD,OAAS,IAqBzC,IAAMi9B,EAAa,CAKf0vB,eALe,WAMX,OAAOF,EA7CI,qBAoDfG,gBAbe,SAaCjpD,GAGZ,IAFA,IAAIrB,EAAM,GAEHqB,KACHrB,GAAOU,KAAK2pD,iBAGhB,OAAOrqD,GAEXmqD,cAAAA,EACAI,kBApCJ,SAA2B7sD,GAGvB,IAFA,IAAIiT,EAAS,GAEJ1b,EAAI,EAAGA,EAAIyI,EAAQzI,GAAK,EAC7B0b,GAAUw5C,EAAcD,GAG5B,OAAOv5C,GA8BPiqB,UAAAA,GAGJlmC,EAAOD,QAAUkmC,i9BCrEjB,SAAS6vB,IAA+C,IAAjBC,EAAiBnsD,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAA,WAAA,OAAA,SAAAosD,IAAAviB,EAAAznC,KAAAgqD,IAAA,GAIpD,OAAA,SAAAC,GAII,SAAAC,IAAqB,IAAAC,EAAAtiB,EAAAJ,EAAAznC,KAAAkqD,GAAA,IAAA,IAAAja,EAAAryC,UAAAZ,OAANW,EAAM,IAAAyC,MAAA6vC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANvyC,EAAMuyC,GAAAtyC,UAAAsyC,GAAA,OACjBrI,EAAAH,EAAA1nC,MAAAmqD,EAAAxiB,EAAAuiB,IAAAx1D,KAAAoJ,MAAAqsD,EAAA,CAAAnqD,MAAA3C,OAASM,MACJ8f,WAAa,KAFDoqB,YAJzB,yOAAAuiB,CAAAF,EAAqBH,KAArBG,KAAA,CAAA,CAAAp0D,IAAA,OAAAN,MAAA,SAaSioB,GACDzd,KAAKyd,WAAaA,kCAd1BysC,EAAA,GAsBWJ,EAAAA,EAAAA,IAKR,IAAMO,EACPP,EAA8BliB,EAAAA,6hCCjBpC,IAAM1e,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GA0BlB,IAAM+gC,EAAuB,CAChC,CAAEC,KAAM,gCACR,CAAEA,KAAM,iCACR,CAAEA,KAAM,kCASCC,EAAsB,OAKdC,cAQjB,SAAAA,EAAYh5C,EAASi5C,GAAO,IAAA7iB,MAAA,mGAAAJ,CAAAznC,KAAAyqD,KACxBzqD,OAAA2nC,EAAA8iB,GAAA/1D,KAAAsL,OAAA6nC,oDACKpqB,WAAa,KAClBoqB,EAAK8iB,sBAAuB,EAC5B9iB,EAAK+iB,gBAAkB,GACvB/iB,EAAKp2B,QAAUA,EACfo2B,EAAK6iB,MAAQA,EACb7iB,EAAKgjB,mBAAoB,EACzBhjB,EAAKijB,oBAALjY,EAAAA,EAAAhL,KAEAA,EAAKpqB,WAtDb,SAA0BitC,GAA4B,IAArBK,EAAqBntD,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAd,aAEhC8sD,IAEAK,GAAI,GAAA1tD,QAA8B,IAAvB0tD,EAAKzsD,QAAQ,KAAc,IAAM,IAAxC,UAAAjB,OAAoDqtD,IAG5D,IAAMM,EAAO,IAAIxkD,EAAAA,QAAQoM,WAAWm4C,GAKpC,OAFAC,EAAKp2C,WAAa,EAEXo2C,EA0CeC,CAAiBP,EAAOj5C,EAAQs5C,MAElDljB,EAAKqjB,oBAAsB,IAAIC,EAAAA,EAC/BtjB,EAAKqjB,oBAAoBE,cAAcvjB,EAAKpqB,YAE5CoqB,EAAKwjB,KAAO,IAAIC,EAAAA,EAAKzjB,EAAKpqB,WAAYoqB,EAAKp2B,QAAQ85C,YAGnD1jB,EAAK2jB,mBAOLjQ,EAAEpnD,QAAQw4B,GAAG,sBAAuB,SAAA8+B,GAChC5jB,EAAKvuB,WAAWmyC,GAAIjgB,MAAM,gBA1BN3D,wPARED,EAAAA,uDA+C1B5nC,KAAKqrD,KAAKK,WAAW,qBACrB1rD,KAAKqrD,KAAKK,WAAW,8BACrB1rD,KAAKqrD,KAAKK,WAAW,wCACrB1rD,KAAKqrD,KAAKK,WAAW,+BACrB1rD,KAAKqrD,KAAKK,WAAW,0CACrB1rD,KAAKqrD,KAAKK,WAAW,kCACrB1rD,KAAKqrD,KAAKK,WAAW,mCAEhB1rD,KAAKyR,QAAQk6C,YAAc3gC,EAAAA,EAAQ4gC,eACpC5rD,KAAKqrD,KAAKK,WAAW,qBASzB1rD,KAAKqrD,KAAKK,WAAW,qBACrB1rD,KAAKqrD,KAAKK,WAAW,qBAKjB1gC,EAAAA,EAAQ2Z,aAA6C,IAA/B3kC,KAAKyR,QAAQo6C,gBACnC3iC,EAAOpZ,KAAK,sBACZ9P,KAAKqrD,KAAKK,WAAW,kCAGrB1rD,KAAKyd,WAAWquC,MAChB9rD,KAAKqrD,KAAKK,WAAW,oEAUzB,OAA+B,IAAxB1rD,KAAK+rD,uDAOZ,OAAO/rD,KAAKyd,uDAciC,IAAAiuB,EAAA1rC,KAA/BgsD,EAA+BpuD,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAjB,GAAIkc,EAAalc,UAAAZ,OAAA,EAAAY,UAAA,QAAAjD,EAAL+U,EAAK9R,UAAAZ,OAAA,EAAAY,UAAA,QAAAjD,EACvC4iB,EAAMppB,OAAO83D,YAAY1uC,MACzB2uC,EAAY1lD,EAAAA,QAAQ2lD,gBAAgBryC,GAAQ3L,cAQlD,GANAnO,KAAK4qD,gBAAgBsB,GAAa3uC,EAClC2L,EAAO1Z,IAAP,kBAAAnS,OACsB6uD,GADtB7uD,OACkCqS,EAAG,IAAArS,OAAOqS,EAAP,KAAgB,GADrD,OAEI6N,GAEJvd,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAW/0D,0BAA2B20D,EAAalyC,EAAQpK,GAC9EoK,IAAWtT,EAAAA,QAAQ+C,OAAOM,WACvBiQ,IAAWtT,EAAAA,QAAQ+C,OAAOS,SAAU,EACnChK,KAAKyR,QAAQ46C,aACTrsD,KAAKyR,QAAQ66C,KAAOtsD,KAAKyR,QAAQ66C,IAAID,cACzCrsD,KAAKyd,WAAWg+B,OAAO8Q,4BAG3BrjC,EAAOpZ,KAAP,iBAAAzS,OAA6B2C,KAAKyd,WAAW/O,MAG7C,IAAM89C,EAAUxsD,KAAKyd,WAAWvX,OAEhClG,KAAKqrD,KAAKoB,yBAAyBD,GAC9BtkB,KAAK,SAAAS,GAA8B,IAA3Bx1B,EAA2Bw1B,EAA3Bx1B,SAAUu5C,EAAiB/jB,EAAjB+jB,WACXv5C,EAASgc,IAAI3oB,EAAAA,QAAQS,GAAG0lD,OACxBjhB,EAAKqgB,gBAAiB,EACtBrgB,EAAKjuB,WAAWmvC,KAAKC,cAAcL,IAEnCtjC,EAAOnZ,KAAP,yBAAA1S,OAAqCmvD,IAIzCE,EAAWzrD,QAAQ,SAAA6rD,GACO,iBAAlBA,EAASt7C,OACTk6B,EAAKqhB,6BAA+BD,EAASh4D,KAE7C42C,EAAKjuB,WAAWxF,WACZyzB,EAAKshB,kBAAkBj3D,KAAK21C,GAAO,KACnC,UAAW,KAAM,WAIhCF,MAAM,SAAA57B,GACH,IAAMo1B,EAAS,0BAEfC,EAAAA,EAAqBC,iBACjB,IAAIhnC,MAAJ,GAAAb,OAAa2nC,EAAb,MAAA3nC,OAAwBuS,KAC5BsZ,EAAOtZ,MAAMo1B,EAAQp1B,KAGzBo8C,EAAYiB,WACZjtD,KAAK6qD,mBAAoB,GAEzB7qD,KAAKyd,YAAczd,KAAKyd,WAAWvJ,WAChC1N,EAAAA,QAAQsI,mBAAmB9O,KAAKyd,WAAW/O,MAG9C1O,KAAK4qB,aAAa2C,KACd2/B,EAAAA,uBACA1mD,EAAAA,QAAQsI,mBAAmB9O,KAAKyd,WAAW/O,WAEhD,GAAIoL,IAAWtT,EAAAA,QAAQ+C,OAAOG,SACrB,+BAARgG,EACA1P,KAAKmtD,2BAA4B,EAEjCntD,KAAKotD,kBAAmB,EAE5BptD,KAAKqtD,aAAe39C,EACR,cAARA,GACA1P,KAAK4qB,aAAa2C,KACd2/B,EAAAA,kBACAI,EAAAA,YAAmC59C,QAExC,GAAIoK,IAAWtT,EAAAA,QAAQ+C,OAAOO,aAAc,CAE/C9J,KAAKyd,WAAWmvC,KAAKW,eACrB,IAAMC,EAA2BxtD,KAAK2qD,qBAChC8C,EAAS/9C,GAAO1P,KAAKqtD,aAG3B,GADArtD,KAAK2qD,sBAAuB,EACxB3qD,KAAKmtD,0BAELntD,KAAK4qB,aAAa2C,KACd2/B,EAAAA,kBACAI,EAAAA,wBACD,GAAIttD,KAAKotD,iBACZptD,KAAK4qB,aAAa2C,KACd2/B,EAAAA,kBACAI,EAAAA,YACAG,OACA9yD,EACAqF,KAAK0tD,0CACN,GAAIF,EACPxtD,KAAK4qB,aAAa2C,KACd2/B,EAAAA,wBAA+CO,OAChD,CAMHvkC,EAAOtZ,MAAM,4BAIb,IAAM+9C,EAAkBnnD,EAAAA,QAAQonD,qBAE5BD,GAAmB,KAAOA,EAAkB,IAC5C3tD,KAAK4qB,aAAa2C,KACd2/B,EAAAA,kBACAI,EAAAA,aACAG,GAAU,oBACQ9yD,EAClBqF,KAAK0tD,qCAET1tD,KAAK4qB,aAAa2C,KACd2/B,EAAAA,kBACAI,EAAAA,yBACAG,GAAU,gCACQ9yD,EAClBqF,KAAK0tD,2CAGV5zC,IAAWtT,EAAAA,QAAQ+C,OAAOK,UAEjC5J,KAAK4qB,aAAa2C,KACd2/B,EAAAA,kBACAI,EAAAA,kBACA59C,EACAs8C,oCASHt9C,EAAKu+C,GA4BVjtD,KAAKmtD,2BAA4B,EACjCntD,KAAKotD,kBAAmB,EACxBptD,KAAKqtD,kBAAe1yD,EACpBqF,KAAKyd,WAAW7H,QACZlH,EACAu+C,EACAjtD,KAAK6tD,kBAAkB93D,KAAKiK,KAAM,CAC9B0O,IAAAA,EACAu+C,SAAAA,oCAWLx7C,GACH,IAAM8L,EAAMvd,KAAK4qD,gBAAgBkD,UAAY35D,OAAO83D,YAAY1uC,MAEhE2L,EAAO1Z,IAAP,8BAAAnS,OAAyCkgB,IACzCvd,KAAKyd,WAAWlH,OAAO9E,EAAQ/C,IAAK+C,EAAQ+E,IACxCkL,SAASjQ,EAAQgF,IAAK,IAAM,EAC5BzW,KAAK6tD,kBAAkB93D,KAAKiK,KAAM,CAC9B0O,IAAK+C,EAAQ/C,IACbu+C,SAAUx7C,EAAQw7C,4CAStBv+C,EAAKu+C,GACT,IAAKv+C,EAAK,CAAA,IAAAq/C,EAC8B/tD,KAAKyR,QAAQu8C,MAAzCC,EADFF,EACEE,gBAAiB/nD,EADnB6nD,EACmB7nD,OACrBgoD,EAAeD,GAAmB/nD,EAS9B6d,EAAa5vB,OAAb4vB,SAER,GAAIkqC,EAAiB,CACjB,IAAMpoC,EAAS9B,GAAYA,EAAS8B,QAE/BA,IAA4C,IAAlCA,EAAOvnB,QAAQ,eACnB0B,KAAK0qD,SACZwD,EAAehoD,GAKvBwI,EAAMw/C,GAAiBnqC,GAAYA,EAASoqC,SAGhD,OAAOnuD,KAAKsW,SAAS5H,EAAKu+C,sCAanB78B,EAAU3e,EAAS28C,GAC1B,IAAIC,EAAO,GAAAhxD,OAAM+yB,EAAN,KAAA/yB,OAAkB2C,KAAKyR,QAAQu8C,MAAMM,IAArC,KAELC,EAAcH,EACdA,EAAiBpuD,KAAKyd,WAAW/O,IAAK1O,KAAK6qD,mBAC3C5wB,EAAAA,EAAW2vB,gBAAgB,GAAGz7C,cAKpC,OAHA+a,EAAOpZ,KAAP,OAAAzS,OAAmB2C,KAAKyd,WAAW/O,IAAnC,wBAAArR,OAA6DkxD,IAC7DF,GAAWE,EAEJvuD,KAAKyd,WAAW+wC,KAAKC,WAAWJ,EAAS,KAAM58C,oCAStD,OAAOzR,KAAKyd,WAAW/O,2CAQvB,IAAM+sC,EAASz7C,KAAKyd,WAAWg+B,OAG/B,OAAOA,EAASA,EAAOiT,SAAW,wCAOlC,OAAQ1uD,KAAKyd,WAAWyL,QAAU,IAAI1Z,KAAO,oCAMnC,IAAAm/C,GACVA,EAAA3uD,KAAKyd,WAAWquC,MAAK8C,KAArB9wD,MAAA6wD,EAAA/wD,wCAUCma,GAAS,IAAAo1B,EAAAntC,KACV,OAAO,IAAIorC,QAAQ,SAACC,EAASC,GACrB6B,EAAK0hB,kBACL1hB,EAAK1vB,WAAWmvC,KACXA,KAAKzf,EAAK1vB,WAAWvX,OAAQmlC,EAASC,EAAQvzB,GAEnDuzB,EAAO,yFASf,OAAOtrC,KAAKyd,WAAWg+B,OAAOqT,4CAUvBrD,GAAI,IAAAxd,EAAAjuC,KACX,OAAIA,KAAK2qD,uBAAyB3qD,KAAKyd,YACnCzd,KAAK4qB,aAAa2C,KAAK2/B,EAAAA,aAEhB9hB,QAAQE,OAAO,IAAIptC,MAAM,8BAGpC8B,KAAK2qD,sBAAuB,EAErB,IAAIvf,QAAQ,SAAAC,GAwBf,GAhBA4C,EAAKrjB,aAAa+B,GAAGy/B,EAAAA,EAAW/0D,0BAPL,SAArB03D,EAAsB/C,EAAalyC,GACjCA,IAAWtT,EAAAA,QAAQ+C,OAAOO,eAC1BuhC,IACA4C,EAAKrjB,aAAakC,eAAes/B,EAAAA,EAAW/0D,0BAA2B03D,MAkB/E9gB,EAAKxwB,WAAW9F,QAEZ8zC,MAAAA,EAA0C,CAC1C,IAAMuD,EAASvD,EAAGj6C,KAEH,iBAAXw9C,GAAwC,WAAXA,IAM7B/gB,EAAKxwB,WAAWhM,QAAQyR,MAAO,GAIvC+qB,EAAKxwB,WAAWnE,cAEqB,IAAjC20B,EAAKxwB,WAAWhM,QAAQyR,MACxB+qB,EAAKxwB,WAAW9F,yDASxB,IAAMk9B,EAAY,CACdoa,IAAK,CAAEC,WAAY,IACnB5C,IAAK,CAAE4C,WAAY,KAGjBC,EAAkBnvD,KAAKyR,QAAQ66C,KAC9BtsD,KAAKyR,QAAQ66C,IAAI8C,aAAgB9E,EAEpClqD,MAAMG,QAAQ4uD,KACdjmC,EAAOpZ,KAAK,qBAAsBq/C,GAClCta,EAAUyX,IAAI4C,WAAaC,GAG3BnvD,KAAKyR,QAAQ66C,KAAOtsD,KAAKyR,QAAQ66C,IAAI+C,qBACrCnmC,EAAOpZ,KAAK,6BACR9P,KAAKyR,QAAQ66C,IAAI+C,oBAErBxa,EAAUyX,IAAI+C,mBACRrvD,KAAKyR,QAAQ66C,IAAI+C,oBAG3BC,OAAAA,EAAAA,EAAAA,CAAStvD,MACTuvD,OAAAA,EAAAA,EAAAA,CAAWvvD,KAAMA,KAAK4qB,aAAciqB,GACpC2a,OAAAA,EAAAA,EAAAA,GACAC,OAAAA,EAAAA,EAAAA,CAASzvD,MACT0vD,OAAAA,EAAAA,EAAAA,GACAC,OAAAA,EAAAA,EAAAA,+DAUA,IAAMxwB,EAAU,GAGhB,GAAIn/B,KAAKyR,QAAQm+C,gBACV5vD,KAAKyR,QAAQm+C,eAAeC,OAC5B7vD,KAAKyd,WAAWzK,QAChBhT,KAAKyd,WAAWzK,OAAO0N,oBAAqB,CAG/C,IAAMovC,EAAa9vD,KAAKyd,WAAWzK,OAAO0N,oBACrCqvC,OAAOlzD,MAAM,WACZ2mB,EAAU,GAEhBssC,EAAW7uD,QAAQ,SAAAmO,GACf,IAAMxQ,EAAQwQ,EAAKvS,MAAM,MACnB4mB,EAAS7kB,EAAM23B,QACf/gC,EAAQoJ,EAAMrB,KAAK,MAEzBimB,EAAQC,GAAUjuB,IAItB2pC,EAAQ6wB,cACFhwD,KAAKyR,QAAQm+C,eAAeC,QACtBrsC,EAAQ,iBAUxB,OAJA2b,EAAQ8wB,aAAejwD,KAAKyd,WAAWmvC,KAAKsD,qBAC5C/wB,EAAQgxB,wBAA0BnwD,KAAKkrD,oBAAoBkF,0BAGpDjxB,mDAQc5N,GAErB,GAAKvxB,KAAK+sD,8BAAiCx7B,EAA3C,CAIA,IAAM7hB,EAAM/I,OAAAA,EAAAA,KAAAA,CAAK,CAAE4V,GAAIvc,KAAK+sD,+BAE5Br9C,EAAI9a,EAAE,eAAgB,CAClB4b,MAAO,2BACP6/C,KAAM9+B,IACL7gB,KAEL1Q,KAAKyd,WAAWjG,KAAK9H,kDAYH4gD,GAClB,IACI,IAAMC,EAAOx5C,KAAKuK,MAAMgvC,GASxB,GAAIC,GAAwB,WAAhB9wD,EAAO8wD,GAAmB,CAClC,IAAM/+C,EAAO++C,EAAK/F,GAElB,QAAoB,IAATh5C,EACP,OAAO++C,EAGXrnC,EAAOrZ,MAAM,yDACM,UAAW2B,IAEpC,MAAOxS,GACL,OAAO,EAGX,OAAO,4CAUO0Q,GACd,IAAM9O,EAAO8O,EAAItB,aAAa,QAE9B,GAAKpO,KAAK+sD,8BACHnsD,IAASZ,KAAK+sD,6BADrB,CAKA,IAAMyD,EAAcjV,EAAE7rC,GAAKkqB,KAAK,iBAC3B1sB,OACCujD,EAAazwD,KAAK0wD,sBAAsBF,GAS9C,OAPIC,GACuC,iBAApCA,EAAWjG,IACXiG,EAAWE,OACd3wD,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAWnyD,uBAAwBw2D,EAAWE,QAG/C,4GCrsBft8D,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,2BAAA,WAAA,OAAA0qC,IAAAv8D,EAAAQ,EAAAqxB,EAAA,cAAA,WAAA,OAAA2qC,IAAAx8D,EAAAQ,EAAAqxB,EAAA,oBAAA,WAAA,OAAAntB,IAAA1E,EAAAQ,EAAAqxB,EAAA,eAAA,WAAA,OAAA4qC,IAeO,IAAMF,EAA2B,0BAK3BC,EAAc,wBAKd93D,EAAoB,8BAMpB+3D,EAAe,uDC/B5Bz8D,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAA6qC,IAAA18D,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAA8qC,IAMO,IAAMD,EAAqB,sBAOrBC,EAA0B,6RCHvC,IAAIC,GAAe,EACfC,GAAuB,EAGvBrqD,EAAQ,CACVsqD,WAAY,SAASC,GACnB,MAAoB,kBAATA,EACF,IAAIlzD,MAAM,kBAAAuB,EAA2B2xD,GACxC,4BAENH,EAAeG,EACPA,EAAQ,8BACZ,+BAONC,gBAAiB,SAASD,GACxB,MAAoB,kBAATA,EACF,IAAIlzD,MAAM,kBAAAuB,EAA2B2xD,GACxC,4BAENF,GAAwBE,EACjB,oCAAsCA,EAAO,WAAa,aAGnE5hD,IAAK,WACH,GAAsB,YAAlB,oBAAOrb,OAAP,YAAAsL,EAAOtL,SAAqB,CAC9B,GAAI88D,EACF,OAEqB,oBAAZthD,SAAkD,mBAAhBA,QAAQH,KACnDG,QAAQH,IAAI1R,MAAM6R,QAAS/R,aAQjC0zD,WAAY,SAASC,EAAWC,GACzBN,GAGLvhD,QAAQI,KAAKwhD,EAAY,8BAAgCC,EACrD,cAWNC,eAAgB,SAASC,EAAUC,EAAMvb,GACvC,IAAIv5B,EAAQ60C,EAAS70C,MAAM80C,GAC3B,OAAO90C,GAASA,EAAM7f,QAAUo5C,GAAO10B,SAAS7E,EAAMu5B,GAAM,KAS9Dwb,cAAe,SAASz9D,GACtB,IAAI6zC,EAAY7zC,GAAUA,EAAO6zC,UAG7B/3B,EAAS,CACbA,QAAiB,KACjBA,QAAiB,MAGjB,QAAsB,IAAX9b,IAA2BA,EAAO6zC,UAE3C,OADA/3B,EAAO+a,QAAU,iBACV/a,EAIT,GAAI+3B,EAAU6pB,gBACZ5hD,EAAO+a,QAAU,UACjB/a,EAAOiU,QAAUlkB,KAAKyxD,eAAezpB,EAAUmV,UAC3C,mBAAoB,QACnB,GAAInV,EAAU8pB,mBAEnB,GAAI39D,EAAO49D,wBACT9hD,EAAO+a,QAAU,SACjB/a,EAAOiU,QAAUlkB,KAAKyxD,eAAezpB,EAAUmV,UAC7C,wBAAyB,OACtB,CACL,IAAInV,EAAUmV,UAAUtgC,MAAM,wBAO5B,OAFA5M,EAAO+a,QAAU,2EAEV/a,EANPA,EAAO+a,QAAU,SACjB/a,EAAOiU,QAAUlkB,KAAKyxD,eAAezpB,EAAUmV,UAC7C,uBAAwB,QAOzB,GAAInV,EAAUC,cACjBD,EAAUmV,UAAUtgC,MAAM,sBAC5B5M,EAAO+a,QAAU,OACjB/a,EAAOiU,QAAUlkB,KAAKyxD,eAAezpB,EAAUmV,UAC3C,qBAAsB,OACrB,CAAA,IAAInV,EAAUC,eACjBD,EAAUmV,UAAUtgC,MAAM,wBAO5B,OADA5M,EAAO+a,QAAU,2BACV/a,EALPA,EAAO+a,QAAU,SACjB/a,EAAOiU,QAAUlkB,KAAKyxD,eAAezpB,EAAUmV,UAC3C,uBAAwB,GAM9B,OAAOltC,IAMXjc,EAAOD,QAAU,CACfyb,IAAK3I,EAAM2I,IACX8hD,WAAYzqD,EAAMyqD,WAClBH,WAAYtqD,EAAMsqD,WAClBE,gBAAiBxqD,EAAMwqD,gBACvBI,eAAgB5qD,EAAM4qD,eACtBO,oBAAqBnrD,EAAMmrD,oBAC3BJ,cAAe/qD,EAAM+qD,cAAc77D,KAAK8Q,mBC3H1C7S,EAAOD,QAZkB,CAIrBk+D,YAAa,cAKb7uB,KAAM,sMCZV,IAAMla,EAASnuB,EAAQ,GAAqBiuB,UAAUO,GAChD0b,EAAuBlqC,EAAQ,IAMjCm3D,GAAqB,EAOrBC,GAA0B,EAE1BC,EAAc,KAWZC,EAAiB,CAOnBC,oBAAqB,KAErBzmB,aAAc,KAYd52B,KArBmB,WAyBX,IAJHxD,EAIG7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAJO,CACX20D,8BAA8B,EAC9BC,0BAA2B,KAC3BC,+BAA+B,GAChC7/B,EAAKh1B,UAAAZ,OAAA,EAAAY,UAAA,QAAAjD,EACJqF,KAAKyR,QAAUA,EACf2gD,EAAcx/B,EAEd5yB,KAAK6rC,aAAe7rC,KAAK0yD,0BAA0BjhD,GAE9CzR,KAAK6rC,cACN3iB,EAAOpZ,KAAK,6BAapB4iD,0BA7CmB,SA6COjhD,GAAS,IAAAo2B,EAAA7nC,KAC/B,OAAIgrB,EAAAA,EAAQ2nC,SACD,SAAC/W,EAAG9+B,EAAWQ,GAClBnpB,OAAOy+D,YAAYC,oBACf/1C,EACA,SAAClN,EAAOkjB,GACJ,IAAIggC,EAmBAA,EADAljD,GAAwB,sBAAfA,EAAM9a,KACF,IAAI69B,EAAAA,EACbskB,EAAAA,gCAGS,IAAItkB,EAAAA,EACb/iB,EAAOkjB,EAAa,CAAE,YAER,mBAAdxV,GACDA,EAAUw1C,MAGtB9nC,EAAAA,EAAQ+nC,aACR/yD,KAAKgzD,uBACLhoC,EAAAA,EAAQ2Z,YAAc3Z,EAAAA,EAAQioC,UACjCjoC,EAAAA,EAAQkoC,4BACAzhD,EAAQ8gD,6BAETvyD,KAAKmzD,gCACL1hD,EAAQ8gD,+BACX9gD,EAAQ+gD,0BAEL,MAGXtpC,EAAOpZ,KAAK,8CACZ9P,KAAKsyD,oBAoYjB,SAA6B7gD,GAIzB,OAnBJ,SAA4BA,GAC2B,IAA/C8pC,EAAE,kCAAkCv+C,QACpCu+C,EAAE,QAAQ6X,OAAO,qCAErB7X,EAAE,kCAAkCxuC,KAAK,OACrCsmD,EAAsB5hD,IAY1B6hD,CAAmB7hD,GAEZ,IAAI25B,QAAQ,SAAAC,GAEfkoB,EAAwB,SAACC,EAAWC,GAChCvB,EAAqBsB,EACrBrB,EAA0BsB,EAC1BvqC,EAAOpZ,KAAP,+BAAAzS,OAEQ60D,EAFR,qBAAA70D,OAGQ80D,IACR9mB,KACD55B,KAjZOiiD,CAAoBjiD,GAASy2B,KAAK,WAChCL,EAAKyqB,oBAAsB,OAG5BtyD,KAAK2zD,2BACL3oC,EAAAA,EAAQgO,YACXvnB,EAAQghD,8BACD,KACAznC,EAAAA,EAAQkoC,0BAERlzD,KAAKmzD,gCAITnzD,KAAK4zD,sBACL5oC,EAAAA,EAAQ4X,UAAY5X,EAAAA,EAAQkoC,0BAC5BlzD,KAAKmzD,iCAGhBjqC,EAAO1Z,IACH,wDACAwb,EAAAA,EAAQm9B,WAEL,OAQXxc,YA/HmB,WAgIf,OAA6B,OAAtB3rC,KAAK6rC,cAQhB+nB,sBAxImB,SAwIGniD,EAASrS,EAAUy0D,IAqL7C,SAA4BpiD,EAASqiD,EAAgBC,GACjD3B,EAAY,CAAE,UAAY3gD,GACrBy2B,KAAK,SAAA3b,GAAM,OAAIunC,EAAe,CAAEvnC,OAAAA,KAAWwnC,GAtL5CC,CAAmBviD,EAAQs8B,WAAY3uC,EAAUy0D,IAarDb,uBAtJmB,WAsJwC,IAApCvhD,EAAoC7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAA1B,GAAIkf,EAAsBlf,UAAAZ,OAAA,EAAAY,UAAA,QAAAjD,EAAX2iB,EAAW1f,UAAAZ,OAAA,EAAAY,UAAA,QAAAjD,EACvD,GAAIxG,OAAO8/D,yBACJ9/D,OAAO8/D,wBAAwBC,kBAAmB,CAAA,IAC7CpmB,EAAsCr8B,EAAtCq8B,sBAAuBC,EAAet8B,EAAfs8B,WAE/B55C,OAAO8/D,wBAAwBC,kBAC3B,CACIpmB,sBAAuBA,GAChB9tC,KAAKyR,QAAQ0iD,6BAExB,SAACzgB,EAAU0gB,GAAX,OACIC,EACI,CACIl4C,SAAU,CACNu3B,SAAAA,EACA0gB,WAAAA,GAEJrmB,WAAAA,GAEJjxB,EACAQ,IAER,SAAArD,GAAG,OAAIqD,EAAU,IAAIqV,EAAAA,EACjBskB,EAAAA,8BACAh9B,WAIRqD,EAAU,IAAIqV,EAAAA,EACVskB,EAAAA,qCAQZ0c,0BA3LmB,SA2LOliD,EAASqiD,EAAgBC,GAAc,IAAAroB,EAAA1rC,KAC7D,GAAiC,OAA7BA,KAAKsyD,oBAAT,CAD6D,IAAAgC,EAazDt0D,KAAKyR,QAFL+gD,EAXyD8B,EAWzD9B,0BACA2B,EAZyDG,EAYzDH,4BAIApmB,EACAt8B,EADAs8B,WAGEwmB,EAAkC,CACpC/B,0BAAAA,EACA2B,4BACI1iD,EAAQq8B,uBAAyBqmB,EACrCpmB,WAAAA,GAGAmkB,EAgNZ,SAAkCzgD,EAASqiD,EAAgBC,GAAc,IAEjEI,EAGA1iD,EAHA0iD,4BACA3B,EAEA/gD,EAFA+gD,0BACAzkB,EACAt8B,EADAs8B,WAKJ4P,OAAO6W,QAAQ3d,YACX2b,EACA,CACIiC,WAAW,EACXC,QAASP,GAEb,SAAAh4C,GACI,GAAKA,EAYL+M,EAAO1Z,IAAI,4BAA6B2M,GACxCk4C,EACI,CACIl4C,SAAAA,EACA4xB,WAAAA,GAEJ+lB,EACAC,OAnBJ,CAEI,IAAMY,EAAYhX,OAAO6W,QAAQG,UAEjCZ,EAAaY,aAAqBz2D,MAC5By2D,EACA,IAAIhiC,EAAAA,EACFskB,EAAAA,+BACA0d,OAvOZC,CACIL,EACAT,EACAC,IAEA5B,GAEA0C,MACI,+FAMR70D,KAAK80D,sBAAsBrjD,EAASqiD,EAChCC,SAxCJ/zD,KAAKsyD,oBAAoBpqB,KAAK,WAC1BwD,EAAKioB,0BACDliD,EAASqiD,EAAgBC,MA4CzCe,sBA3OmB,SA2OGrjD,EAASqiD,EAAgBC,EAAc/0D,GACzD,IAAM+1D,EAAqB1B,EAAsBrzD,KAAKyR,SAEtDA,EAAQib,SAAS,sBAAuBqoC,GACxC/0D,KAAKg1D,kCAAkCvjD,EAASqiD,EAC5CC,EAAc/0D,IAKtBg2D,kCArPmB,SAqPevjD,EAASqiD,EAAgBC,GAAc,IAAA5mB,EAAAntC,MACxC,IAAzByR,EAAQwjD,aAwQpB,SAAsCxjD,EAASyjD,EAAcC,GACzD,GAAgB,IAAZA,EACA,OAAO/pB,QAAQE,SAGnB,OAAO,IAAIF,QAAQ,SAACC,EAASC,GACzB,IAAI8pB,EAAiBD,EACfE,EAAWlhE,OAAOq2C,YAAY,WAChC+oB,EAAwB,SAAAC,GAChBA,GACAr/D,OAAO2zC,cAAcutB,GACrBhqB,KAGuB,MADvB+pB,IAEI9pB,IACAn3C,OAAO2zC,cAAcutB,KAG9B5jD,IACJyjD,KAtRHI,CAA6Bt1D,KAAKyR,QAASA,EAAQ4jD,SAAU,GACxDntB,KAAK,WACFgqB,GAAqB,EACrBzgD,EAAQib,SAAS,kBACjBygB,EAAKwmB,0BAA0BliD,EAC3BqiD,EAAgBC,KAEvBvoB,MAAM,WACH2B,EAAK6nB,kCAAkCvjD,EACnCqiD,EAAgBC,KAdxBA,EAAa,IAAIphC,EAAAA,EACbskB,EAAAA,uCAuBZkc,gCA/QmB,SA+Qa1hD,EAASrS,EAAUy0D,GAC/C3qC,EAAOpZ,KAAK,6CAIRk4B,UAAUutB,gBACQvtB,UAAUutB,gBAAgBx/D,KAAKiyC,WAG/BA,UAAUC,aAAastB,gBAAgBx/D,KAAKiyC,UAAUC,eAG5D,CAAE1G,OAAO,IACpB2G,KAAK,SAAA3b,IAGEA,GACGA,EAAOiiB,aACPjiB,EAAOiiB,YAAYxxC,OAAS,EACLuvB,EAAOiiB,YAAY,GACxCC,iBAAiBh9B,EAAQu8B,cAEJ5C,QAAQC,WAGdnD,KAAK,WAAA,OACzB9oC,EAAS,CACLmtB,OAAAA,EACA0W,SAAU1W,EAAOttB,SAG5BusC,MAAM,WAAA,OACHqoB,EAAc,IAAIlhC,EAAAA,EAAgBskB,EAAAA,qCAyBlD,SAASoc,EAAsB5hD,GAC3B,MAAA,6CAAApU,OAEQoU,EAAQ+gD,2BAkDpB,SAASe,EAAwBn0D,EAAUqS,GACjB,oBAAXksC,QAA2BA,QAAWA,OAAO6W,QAMxD7W,OAAO6W,QAAQ3d,YACXplC,EAAQ+gD,0BACR,CAAEgD,YAAY,GACd,SAAAr5C,GACI,IAAKA,IAAaA,EAAS+H,QAMvB,OAJAgF,EAAOnZ,KACH,6BAA8B4tC,OAAO6W,QAAQG,gBACjDv1D,GAAS,GAAO,GAMpB,IAAMq2D,EAAat5C,EAAS+H,QAE5BgF,EAAO1Z,IAAP,yBAAAnS,OAAoCo4D,IACpC,IAAMhC,EAjElB,SAA0BiC,EAAYD,GAClC,IAMI,IALA,IAAME,EAAKD,EAAW74D,MAAM,KACtB+4D,EAAKH,EAAW54D,MAAM,KAEtB8D,EAAMG,KAAK6gC,IAAIg0B,EAAG34D,OAAQ44D,EAAG54D,QAE1BzI,EAAI,EAAGA,EAAIoM,EAAKpM,IAAK,CAC1B,IAAIshE,EAAK,EACLC,EAAK,EAST,GAPIvhE,EAAIohE,EAAG34D,SACP64D,EAAKn0C,SAASi0C,EAAGphE,GAAI,KAErBA,EAAIqhE,EAAG54D,SACP84D,EAAKp0C,SAASk0C,EAAGrhE,GAAI,KAGrB6N,MAAMyzD,IAAOzzD,MAAM0zD,GACnB,OAAO,EACJ,GAAID,IAAOC,EACd,OAAOD,EAAKC,EAMpB,OAAO,EACT,MAAO92D,GAIL,OAHAimC,EAAqBC,iBAAiBlmC,GACtCkqB,EAAOtZ,MAAM,oCAAqC5Q,IAE3C,GAkCG+2D,CACEtkD,EAAQukD,kCACRP,GAERr2D,GAAUq0D,EAAgBA,KA1B9Br0D,GAAS,GAAO,GAmKxB,SAASi1D,IAMU,IALX5iD,EAKW7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GALD,CACNue,SAAU,GACV4xB,WAAY,IAEhBjxB,EACWlf,UAAAZ,OAAA,EAAAY,UAAA,QAAAjD,EAAX2iB,EAAW1f,UAAAZ,OAAA,EAAAY,UAAA,QAAAjD,EAAAguC,EACyBl3B,EAAQ0K,UAAY,GAApDu3B,EADO/K,EACP+K,SAAU0gB,EADHzrB,EACGyrB,WAAYxkD,EADf+4B,EACe/4B,MAE9B,GAAI8jC,EAAU,CACV,IAAM3F,oUAAU3O,CAAA,CACZkG,cAAeoO,GACZjiC,EAAQs8B,YAGfqkB,EAAY,CAAE,WAAarkB,GACtB7F,KAAK,SAAA3b,GAAM,OAAIzP,EAAU,CACtByP,OAAAA,EACA0W,SAAUyQ,EACV/G,WAAYynB,KACZ92C,OACL,CAIH,GAAiB,KAAbo2B,EAIA,YAHAp2B,EAAU,IAAIqV,EAAAA,EACVskB,EAAAA,iCAKR35B,EAAU,IAAIqV,EAAAA,EACVskB,EAAAA,+BACArnC,KAIGyiD,EAAAA,EAAAA,63BChmBf,IAAMnpC,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAQnB0sC,EAAgC,IAQhCC,EAA2B,IAsBpBC,EAA8B,CAIvCjR,OAAQ,SAQRkR,SAAU,WAKVC,YAAa,cAKbC,UAAW,aAOMC,aAmGjB,SAAAA,EAAYC,EAAKvkB,EAAYxgC,gGAASg2B,CAAAznC,KAAAu2D,GAClCv2D,KAAKw2D,IAAMA,EACXx2D,KAAKiyC,WAAaA,EAQlBjyC,KAAKy2D,YAAc,GAQnBz2D,KAAK02D,kBAAoB,GAazB12D,KAAK22D,kBACsC,iBAA9BllD,EAAQklD,kBACXllD,EAAQklD,kBAAoBV,EAUtCj2D,KAAK42D,eACmC,iBAA3BnlD,EAAQmlD,eACXnlD,EAAQmlD,eAAiBV,EAuBnCl2D,KAAK62D,kBAAoB,GACzB3tC,EAAOpZ,KAAP,0BAAAzS,OAAsC2C,KAAK42D,iBAY3C52D,KAAK82D,sBAAwB,IAAInsC,IASjC3qB,KAAK+2D,gBAAkB,IAAIpsC,IAQ3B3qB,KAAKg3D,oBAAsB,IAAIrsC,kEA5K3BssC,EACAziB,EACA0iB,EACAC,EACAC,GACJ,OAAKH,EAKME,EAIAhB,EAA4BjR,OAInCl6B,EAAAA,EAAQqsC,qCACHD,EAGM5iB,EACA0iB,EACDf,EAA4BE,YAC5BF,EAA4BG,UAG/BH,EAA4BC,SAPxBD,EAA4BjR,OAYpC1Q,EACD2hB,EAA4BjR,OAC5BiR,EAA4BC,SA1BvBD,EAA4BE,2DAyCbc,EAAcC,GACxC,OAAKpsC,EAAAA,EAAQqsC,qCAMNF,IAAiBC,EAClBjB,EAA4BjR,OAC5BiR,EAA4BE,YALvBF,EAA4BjR,6DAgIpBjmD,GACnB,OAAOe,KAAKw2D,IAAIhiB,UAAUv1C,GACpBe,KAAK42D,eAAiB52D,KAAK22D,iDASjC32D,KAAKs3D,6BACCt3D,KAAKu3D,4BAA4BxhE,KAAKiK,MAE5CA,KAAKw2D,IAAIxjB,YACL5M,EAAAA,EAAU/J,6BACVr8B,KAAKs3D,8BAGTt3D,KAAKw3D,aAAex3D,KAAKy3D,8BAA8B1hE,KAAKiK,MAC5DA,KAAKiyC,WAAWtlB,GAAG8nB,EAAAA,WAAkCz0C,KAAKw3D,cAG1Dx3D,KAAK03D,YAAc13D,KAAK23D,WAAW5hE,KAAKiK,MACxCA,KAAKiyC,WAAWtlB,GAAG8nB,EAAAA,UAAiCz0C,KAAK03D,aAKrD1sC,EAAAA,EAAQqsC,uCAERr3D,KAAK43D,iBAAmB53D,KAAK63D,gBAAgB9hE,KAAKiK,MAClDA,KAAKw2D,IAAIxjB,YACL5M,EAAAA,EAAUvJ,kBAAmB78B,KAAK43D,kBAEtC53D,KAAK83D,mBAAqB93D,KAAK+3D,kBAAkBhiE,KAAKiK,MACtDA,KAAKw2D,IAAIxjB,YACL5M,EAAAA,EAAUrJ,oBAAqB/8B,KAAK83D,oBAIxC93D,KAAKg4D,oBAAsBh4D,KAAKi4D,mBAAmBliE,KAAKiK,MACxDA,KAAKiyC,WAAWtlB,GACZ8nB,EAAAA,YACAz0C,KAAKg4D,qBAETh4D,KAAKk4D,sBAAwBl4D,KAAKm4D,qBAAqBpiE,KAAKiK,MAC5DA,KAAKiyC,WAAWtlB,GACZ8nB,EAAAA,cACAz0C,KAAKk4D,uBAITl4D,KAAKo4D,yBACCp4D,KAAKq4D,wBAAwBtiE,KAAKiK,MAGxCA,KAAKs4D,yBACCt4D,KAAKu4D,wBAAwBxiE,KAAKiK,OAG5CA,KAAK4yC,gBAAkB5yC,KAAK4yC,gBAAgB78C,KAAKiK,MACjDA,KAAKiyC,WAAWtlB,GACZ8nB,EAAAA,yBACAz0C,KAAK4yC,iBAET5yC,KAAKw4D,qBACCx4D,KAAKy3D,8BAA8B1hE,KAAKiK,MAC9CA,KAAKw2D,IAAI7pC,GACLyZ,EAAAA,EAAU3J,oBAAqBz8B,KAAKw4D,wDASxCx4D,KAAKw2D,IAAI1pC,eACLsZ,EAAAA,EAAU/J,6BACVr8B,KAAKs3D,8BAELtsC,EAAAA,EAAQqsC,uCACRr3D,KAAKw2D,IAAI1pC,eACLsZ,EAAAA,EAAUvJ,kBACV78B,KAAK43D,kBACT53D,KAAKw2D,IAAI1pC,eACLsZ,EAAAA,EAAUrJ,oBACV/8B,KAAK83D,oBAET93D,KAAKiyC,WAAW6N,IACZrL,EAAAA,YACAz0C,KAAKg4D,qBACTh4D,KAAKiyC,WAAW6N,IACZrL,EAAAA,cACAz0C,KAAKk4D,wBAGbl4D,KAAKiyC,WAAW6N,IACZrL,EAAAA,yBACAz0C,KAAK4yC,iBAET5yC,KAAKw2D,IAAI1pC,eACLsZ,EAAAA,EAAU3J,oBAAqBz8B,KAAKw4D,sBAExCx4D,KAAKiyC,WAAW6N,IACZrL,EAAAA,WAAkCz0C,KAAKw3D,cAE3Cx3D,KAAKiyC,WAAW6N,IACZrL,EAAAA,UAAiCz0C,KAAK03D,aAI1C,IAFA,IAAMe,EAAiBxjE,OAAOy5B,KAAK1uB,KAAKy2D,aAExCvP,EAAA,EAAAA,EAA4BuR,EAA5Bz7D,OAAAkqD,IAA4C,CAAvC,IAAMvnB,EAAiB84B,EAAJvR,GACpBlnD,KAAK4X,aAAa+nB,GAClB3/B,KAAK04D,uBAAuB/4B,GAGhC,IAAK,IAAM1gC,KAAMe,KAAKg3D,oBACdh3D,KAAKg3D,oBAAoB5gE,eAAe6I,IACxCe,KAAK23D,WAAW14D,GAKxBe,KAAK02D,kBAAoB,uDAUDiC,EAAYC,GAEpC1vC,EAAOrZ,MAAP,mDAAAxS,OACuDoV,KAAK8K,MAD5D,OAAAlgB,OAEQs7D,EAFR,MAAAt7D,OAEuBu7D,IAGnBD,IAAe34D,KAAKiyC,WAAW4mB,aAE/B74D,KAAK02D,kBAAkBiC,GAAcC,EACrC54D,KAAK84D,0BAA0BH,oDASfI,EAAaC,GACjC,GAAID,EAAYE,wBAA0BD,EAAW,CAEjD,IAAML,EAAaI,EAAYG,QAE/BH,EAAYI,qBAAqBH,GAEjC9vC,EAAOrZ,MAAP,6BAAAxS,OACiCoV,KAAK8K,MADtC,MAAAlgB,OACgDs7D,EADhD,MAAAt7D,OAEQ27D,IAGRxuC,EAAAA,EAAWkJ,QACP3c,KAAKyK,UAAU,CACXviB,GAAI,mBACJ85D,YAAaJ,EACb7+C,OAAQk/C,KAIhBh5D,KAAKiyC,WAAWrnB,aAAa2C,KACzBknB,EAAAA,gCACAkkB,EAAYK,yCAWXr5B,GACL3/B,KAAKy2D,YAAY92B,KACjBxrC,OAAOyjB,aAAa5X,KAAKy2D,YAAY92B,IACrC3/B,KAAKy2D,YAAY92B,GAAiB,qDAUnBA,GACnB3/B,KAAK62D,kBAAkBl3B,GAAiB,gDAUzBy5B,GAAa,IAAAvxB,EAAA7nC,KACvBo5D,EAAY9mC,WACN8mC,EAAYzjB,YAAc9I,EAAAA,IAEjC3jB,EAAOrZ,MAAP,uCAAAxS,OAEQ+7D,EAAYC,qBAEpBD,EAAYzsC,GACR2sC,EAAAA,mBACAt5D,KAAKo4D,0BACTgB,EAAYzsC,GACR2sC,EAAAA,wBACA,SAAAxsB,GAAS,OAAIjF,EAAKywB,yBAAyBc,EAAatsB,mDAW/CssB,GACjB,IAAKA,EAAY9mC,WACN8mC,EAAYzjB,YAAc9I,EAAAA,EAAiB,CAElD,IAAM8rB,EAAaS,EAAYC,mBAE/BnwC,EAAOrZ,MAAP,qCAAAxS,OAAkDs7D,IAElDS,EAAYtZ,IACRwZ,EAAAA,mBACAt5D,KAAKo4D,0BAETp4D,KAAK4X,aAAa+gD,GAClB34D,KAAK04D,uBAAuBC,GAE5B34D,KAAK84D,0BAA0BH,+CAiBpBI,GACf,IAAK/tC,EAAAA,EAAQqsC,qCACT,OAAO,EAGX,IAAMp4D,EAAK85D,EAAYG,QACjBK,EAAsBR,EAAYS,8BAClC3C,EAAoB72D,KAAK62D,kBAAkB53D,GAC3C8Y,EAAU/X,KAAKy5D,uBAAuBx6D,GAE5C,OAAOs6D,GAC6B,iBAAtB1C,GACNpkD,KAAK8K,MAAQs5C,GAAsB9+C,0DAS3C,IAAM2hD,EAAe15D,KAAKiyC,WAAW0nB,kBADTnsC,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAG5B,IAAA,IAAAgzB,EAAAC,EAA0B8rC,EAA1BpkE,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwC,CAAA,IAA7BurC,EAA6BprC,EAAAn4B,MACpCwK,KAAK84D,0BAA0BC,EAAYG,UAJnB,MAAAj/C,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,sDAcNzuB,GACtB,IAAM85D,EAAc/4D,KAAKiyC,WAAW2nB,mBAAmB36D,GAEvD,GAAK85D,EAAL,CAWA,IAAMc,EAAY75D,KAAKiyC,WAAW6nB,cAC5BC,EAAsB/5D,KAAKg6D,qBAAqB/6D,GAChDg7D,EAAwC,IAAxBj6D,KAAKw2D,IAAI0D,WAIzB/C,EAAe4B,EAAY5B,gBAAkB8C,EAC7C7C,EAAqBp3D,KAAKo3D,mBAAmB2B,GAC7CvkB,EAAYx0C,KAAKw2D,IAAIhiB,UAAUv1C,GACjCk7D,EAAoBn6D,KAAK02D,kBAAkBz3D,GAEd,kBAAtBk7D,IAGPjxC,EAAOrZ,MAAM,uDACbsqD,GAAoB,GAGxB,IAAMC,EACAP,EACItD,EAAmC8D,uBACjClD,EACAC,GACFb,EAAmC+D,uBACjCH,EACA3lB,EACAulB,EACA5C,EACAC,GAIRgD,IAAajE,EAA4BG,WACzCt2D,KAAKu6D,qBAAqBt7D,GAG9BiqB,EAAOrZ,MAAP,8BAAAxS,OACkC4B,EADlC,sBAAA5B,OAEQ85D,EAFR,qBAAA95D,OAGQ88D,EAHR,yBAAA98D,OAIQ+5D,EAJR,eAAA/5D,OAKQw8D,EALR,mBAAAx8D,OAMQm3C,EANR,iCAAAn3C,OAOQ07D,EAAYE,sBAPpB,QAAA57D,OAOgD+8D,IAEhD,IAAMI,EAAsBx6D,KAAKg3D,oBAAoB/3D,IAAO,GAI5D,KAAM,QAASu7D,GACN,qBAAsBA,GACxBA,EAAoBlO,MAAQuN,GAC5BW,EAAoBC,mBAAqBL,GAAU,CAEtD,IAAMM,EAAQjoD,KAAK8K,MAanB,GAXAvd,KAAK26D,0CAA0C17D,EAAIy7D,GAEnD16D,KAAKg3D,oBAAoB/3D,GAAzBmgC,EAAA,GACOo7B,EADP,CAEIC,iBAAkBL,EAClB9N,IAAKuN,EACLe,UAAWF,MAKT,cAAe16D,KAAKg3D,oBAAoB/3D,IAAM,CAChD,IAAMuqC,EAAcuvB,EAAY8B,qBAAqBhuB,EAAAA,GAEjDzsC,MAAMG,QAAQipC,IAAuC,IAAvBA,EAAYxsC,SAC1CgD,KAAKg3D,oBAAoB/3D,GAAI6tC,UAAYtD,EAAY,GAAGsD,YAIpE9sC,KAAK86D,wBAAwB/B,EAAaqB,QAhFtClxC,EAAOrZ,MAAP,gDAAAxS,OAA6D4B,sEA0F3BA,EAAIy7D,GAC1C,IAAMK,EAA8B/6D,KAAKg3D,oBAAoB/3D,GAEzD87D,GACG,cAAeA,GACf,cAAeA,GACf,qBAAsBA,GACtB,QAASA,IACZA,EAA4BvlE,MAAQklE,EAAQK,EAA4BH,UACxEpwC,EAAAA,EAAW6K,cACP4K,OAAAA,EAAAA,EAAAA,CAAuC86B,+CAYI,IAAvCC,EAAuCp9D,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAxB,GAAIq9D,EAAoBr9D,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACzC2f,EAAM9K,KAAK8K,MAEjB2L,EAAOrZ,MACH,yBAA0BmrD,EAAcC,EAAe19C,GAJR,IAAA8Q,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IAMnD,IAAA,IAAA6zB,EAAAC,EAAiBusC,EAAjB1lE,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAA+B,CAAA,IAApBpvB,EAAoBuvB,EAAAh5B,MAC3BwK,KAAK82D,sBAAsBhoC,OAAO7vB,GAClCe,KAAKu6D,qBAAqBt7D,GAC1Be,KAAK84D,0BAA0B75D,IATgB,MAAAgb,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,GAAA,IAAAiB,GAAA,EAAAC,GAAA,EAAAC,OAAA/0B,EAAA,IAWnD,IAAA,IAAAg1B,EAAAC,EAAiBqrC,EAAjB3lE,OAAAw4B,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAgC,CAAA,IAArBvwB,EAAqB0wB,EAAAn6B,MAE5BwK,KAAK82D,sBAAsB1qC,IAAIntB,EAAIse,GACnCvd,KAAK84D,0BAA0B75D,IAdgB,MAAAgb,GAAAwV,GAAA,EAAAC,EAAAzV,EAAA,QAAA,IAAAuV,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,QAAA,GAAAqB,EAAA,MAAAC,iDA0BlCiQ,GACjB,IAAMu7B,EAASl7D,KAAK+2D,gBAAgB3hE,IAAIuqC,GAEpCu7B,IACAtjD,aAAasjD,GACbl7D,KAAK+2D,gBAAgBjoC,OAAO6Q,iDAkBfA,GAAe,IAAA+L,EAAA1rC,KAC1B82D,EACA92D,KAAK82D,sBAAsB1hE,IAAIuqC,GAErC,SAAIm3B,GACIrkD,KAAK8K,MAAQu5C,GAptBK,OA4tBX92D,KAAK+2D,gBAAgB3hE,IAAIuqC,IAGpC3/B,KAAK+2D,gBAAgB3qC,IAAIuT,EAAe//B,WACpC,WAAA,OAAM8rC,EAAKotB,0BAA0Bn5B,IAhuBnB,OAouBnB,sCAQA1gC,GACPe,KAAK26D,0CAA0C17D,EAAIwT,KAAK8K,cACjDvd,KAAKg3D,oBAAoB/3D,2CASpB2tC,GAAO,IAAAO,EAAAntC,KACb2/B,EAAgBiN,EAAMysB,mBACtBN,EAAc/4D,KAAKiyC,WAAW2nB,mBAAmBj6B,GAGvD,GADAzW,EAAOrZ,MAAP,6BAAAxS,OAA0CsiC,GAAiBltB,KAAK8K,OAC3Dw7C,GAML,GADA/4D,KAAK62D,kBAAkBl3B,GAAiBltB,KAAK8K,OACxCw7C,EAAY5B,eAAgB,CAI7Bn3D,KAAK4X,aAAa+nB,GAGlB,IAAM5nB,EAAU/X,KAAKy5D,uBAAuB95B,GAE5C3/B,KAAKy2D,YAAY92B,GAAiBxrC,OAAOyL,WAAW,WAChDspB,EAAOrZ,MAAP,6BAAAxS,OACiCsiC,EADjC,4BAAAtiC,OAEU0a,EAFV,QAGAo1B,EAAKv1B,aAAa+nB,GAClBwN,EAAK2rB,0BAA0Bn5B,IAChC5nB,SApBHmR,EAAOtZ,MAAP,0BAAAvS,OAAuCsiC,8CA8B7BiN,GACd,IAAMjN,EAAgBiN,EAAMysB,mBAE5BnwC,EAAOrZ,MAAP,+BAAAxS,OACmCsiC,GAAiBltB,KAAK8K,OAEzDvd,KAAK4X,aAAa+nB,GAClB3/B,KAAK04D,uBAAuB/4B,GAE5B3/B,KAAK84D,0BAA0Bn5B,mDASXiN,GACpB,IAAMjN,EAAgBiN,EAAMysB,mBAE5BnwC,EAAOrZ,MAAP,8CAAAxS,OACkDsiC,GAC9CiN,EAAMuuB,WAEVn7D,KAAK84D,0BAA0Bn5B,mDAUXiN,EAAOp7B,GAC3B,IAAMvS,EAAK2tC,EAAMysB,mBACXqB,EAAQjoD,KAAK8K,MAEnBvd,KAAK26D,0CAA0C17D,EAAIy7D,GAEnD16D,KAAKg3D,oBAAoB/3D,GAAzBmgC,EAAA,GACOp/B,KAAKg3D,oBAAoB/3D,IAAO,GADvC,CAEI6tC,UAAWt7B,EACXopD,UAAWF,gHCv2BRx0C,EAAA,EAAA,CAQXk1C,wBARW,SAQaC,GACpB,IAAMC,EAAcD,GACbA,EAAS3gD,qBAAqB,0BAA0B,GAE/D,GAAK4gD,EAIL,MAAO,CACH1rD,MAAO0rD,EAAYltD,aAAa,kBAChCmtD,cAAeD,EAAYltD,aAAa,kBACxCotD,UAAWF,EAAYltD,aAAa,cACpC0L,OAAQwhD,EAAYltD,aAAa,YAWzCqtD,sBA/BW,SA+BWJ,GAClB,IAAMK,EACAL,EAAS3gD,qBAAqB,wBAAwB,GACtDihD,EAAoBD,GACnBA,EAA2Bv7C,YAC5By7C,EACAP,EAAS3gD,qBAAqB,QAAQ,GACtChlB,EAAOkmE,GACNA,EAAcz7C,aACdy7C,EAAcz7C,YAAYhS,cAC3B0tD,EACAR,EAAS3gD,qBAAqB,cAAc,GAIlD,MAAO,CACHihD,kBAAAA,EACAjmE,KAAAA,EACA8lE,UALEK,GAAsBA,EAAmB17C,cAenD27C,mBA3DW,SA2DQ3/C,GACf,IAAM4/C,EAAQ5/C,GAAYA,EAASzB,qBAAqB,SAAS,GAEjE,OAAOqhD,GAASA,EAAM3tD,aAAa,eASvC4tD,aAvEW,SAuEEX,GACT,IAAMY,EACAZ,EAAS3gD,qBAAqB,cAAc,GAGlD,OAFkBuhD,GAAsBA,EAAmB97C,aAW/D+7C,YArFW,SAqFCb,GACR,OAAOA,EAASjtD,aAAa,QAAQ69B,SAAS,+PC1FtD,IAAI6X,EAGJA,EAAK,WACJ,OAAO9jD,KADH,GAIL,IAEC8jD,EAAIA,GAAK,IAAI7jD,SAAS,cAAb,GACR,MAAOjB,GAEc,YAAlB,oBAAO7K,OAAP,YAAAsL,EAAOtL,WAAqB2vD,EAAI3vD,QAOrCH,EAAOD,QAAU+vD,6jCCIjB,IAAM56B,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GA2CJ4yC,cAiDjB,SAAAA,EACQ3lD,EACA4lD,EACAC,EACA5+C,EACA6+C,EACAznB,EACAzB,EACAmpB,GAAa,IAAA10B,EAAA,mGAAAJ,CAAAznC,KAAAm8D,IACjBt0B,EAAAH,EAAA1nC,KAAA2nC,EAAAw0B,GAAAznE,KAAAsL,KACIwW,EACA4lD,EACAC,EAAW5+C,EAAY6+C,EAAkBznB,EAAW0nB,KAWnDC,iBAAmB,KAQxB30B,EAAK40B,6BAA+B,KAYpC50B,EAAK60B,2BAA6B,KAgBlC70B,EAAK80B,mBAAoB,EAYzB90B,EAAK+0B,oBAAqB,EAS1B/0B,EAAKg1B,oBAAqB,EAE1Bh1B,EAAKi1B,kBAAmB,EACxBj1B,EAAKk1B,QAAS,EAQdl1B,EAAKuL,MAAQA,EAMbvL,EAAKm1B,eAAiB,IAAIC,EAAAA,EAO1Bp1B,EAAKq1B,kBAAoB,IAAIC,EAAAA,EAO7Bt1B,EAAKu1B,cAAe,EAQpBv1B,EAAKw1B,2BAAwB1iE,EA/GZktC,8OAzDoBy1B,EAAAA,wDAShBC,GACrB,IAAMC,EAAgBD,EAAe3jC,KAAK,0BAE1C,GAAI4jC,EAAcxgE,OAAQ,CACtB,IAAM69C,EAAU2iB,EAAc,GAAGpvD,aAAa,WAE9C,GAAgB,SAAZysC,GACe,cAAZA,GACY,cAAZA,GACY,SAAZA,EACH,OAAOA,EAIf,OAAO,sDA4JP,OAAO76C,KAAKy9D,QAAUC,EAAAA,uCAObjsD,GAAS,IAAAi6B,EAAA1rC,KAClBA,KAAKs4C,QAAUvS,QAAQt0B,EAAQ6mC,SAC/Bt4C,KAAK88D,kBAAmB,EACxB98D,KAAKyR,QAAUA,EAMfzR,KAAK29D,aAAc,EAMnB39D,KAAK49D,WAAY,EACjB59D,KAAK69D,oBAAsB93B,QAAQt0B,EAAQosD,qBAC3C79D,KAAK89D,oBAAsB/3B,QAAQt0B,EAAQqsD,qBAE3C,IAAMC,EAAY,CAAEpS,WAAYl6C,EAAQk6C,YAMxC,GAJIl6C,EAAQusD,cACRD,EAAUE,SA9OI,KAiPdj+D,KAAKozC,MAAO,CAEZ2qB,EAAUG,kBAAmB,EAC7BH,EAAUI,YAAc1sD,EAAQ66C,KAAO76C,EAAQ66C,IAAI6R,YACnDJ,EAAUK,WAAa3sD,EAAQ66C,KAAO76C,EAAQ66C,IAAI8R,WAElD,IAAMrpB,EAAqB/0C,KAAKq+D,2BAA2B5sD,QAEzB,IAAvBsjC,IACPgpB,EAAUhpB,mBAAqBA,QAInCgpB,EAAUG,iBACJzsD,EAAQysD,kBACFzsD,EAAQ2sD,aAAe3sD,EAAQ0sD,YAC3CJ,EAAUK,WAAa3sD,EAAQ2sD,WAC/BL,EAAUO,uBACJ7sD,EAAQ8sD,SAAW9sD,EAAQ8sD,QAAQD,uBACzCP,EAAUS,sBAAwB/sD,EAAQ+sD,sBAG1C/sD,EAAQgtD,cACRV,EAAUU,aAAc,GAG5Bz+D,KAAKgsB,eACChsB,KAAKw2D,IAAIkI,qBACH1+D,KAAKg9D,eACLh9D,KAAK60C,UACL70C,KAAKozC,MACL2qB,GAEZ/9D,KAAKgsB,eAAe2yC,eAAiB,SAAAlT,GACjC,GAAKA,EAAL,CAUA,IAAMn0B,EAAYm0B,EAAGn0B,UACf/Z,EAAMppB,OAAO83D,YAAY1uC,MAE/B,GAAI+Z,EAAW,CAC6B,OAApCoU,EAAKgxB,6BACLhxB,EAAKgxB,2BAA6Bn/C,GAItC,IAAIxK,EAAWukB,EAAUvkB,SAEzB,GAAwB,iBAAbA,EAEP,GAAiB,SADjBA,EAAWA,EAAS5E,gBACmB,WAAb4E,GACtB,GAAI24B,EAAKoyB,oBACL,YAED,GAAiB,QAAb/qD,GACH24B,EAAKmyB,oBACL,YAIJnyB,EAAKmxB,qBAEbryC,EAAAA,EAAW6K,cACPmJ,EAAAA,EACA,CACIogC,MAAO,YACPppE,MAAO+nB,EAAMmuB,EAAKgxB,2BAClBpQ,IAAK5gB,EAAK0H,MACVyrB,UAAWnzB,EAAK6wB,cAExB7wB,EAAKmxB,oBAAqB,GAE9BnxB,EAAKozB,iBAAiBxnC,KAU1Bt3B,KAAKgsB,eAAe+yC,uBAAyB,WACE,WAAvCrzB,EAAK1f,eAAegzC,eACpBtzB,EAAKkyB,WAAY,EAC6B,WAAvClyB,EAAK1f,eAAegzC,gBACgB,WAAxCtzB,EAAK1f,eAAeizC,iBACvBvzB,EAAK2kB,KAAKzlC,aAAa2C,KAAK6+B,EAAAA,EAAWhyD,iBAAkBsxC,IAUjE1rC,KAAKgsB,eAAekzC,2BAA6B,WAC7C,IAAM3hD,EAAMppB,OAAO83D,YAAY1uC,MA0B/B,OAxBKmuB,EAAK0H,QACN1H,EAAK2kB,KAAKzF,gBAAV,aAAAvtD,OACiBquC,EAAK1f,eAAemzC,qBAC/B5hD,GAEV2L,EAAO1Z,IACH,cAAAnS,OAAcquC,EAAK1f,eAAemzC,oBAAlC,SAAA9hE,OACequC,EAAK0H,MADpB,OAEA71B,GAEJiN,EAAAA,EAAW6K,cACPqJ,EAAAA,EACA,CACI4tB,IAAK5gB,EAAK0H,MACVqqB,MAAO/xB,EAAK1f,eAAemzC,mBAC3BC,gBAAmB1zB,EAAK1f,eAAegzC,eACvCK,UAAW3zB,EAAKiyB,YAChBnoE,MAAO+nB,IAGfmuB,EAAK2kB,KAAKzlC,aAAa2C,KACnB6+B,EAAAA,EAAW3xD,6BACXixC,EACAA,EAAK1f,eAAemzC,oBAChBzzB,EAAK1f,eAAemzC,oBAC5B,IAAK,WACDzzB,EAAK+wB,6BAA+Bl/C,EACpC,MACJ,IAAK,YAUD,GAP2C,WAAvCmuB,EAAK1f,eAAegzC,gBAChBtzB,EAAKiyB,aACLjyB,EAAK2kB,KAAKzlC,aAAa2C,KACnB6+B,EAAAA,EAAWj1D,oBAAqBu0C,IAIvCA,EAAK0xB,cAAgB1xB,EAAKkyB,UAAW,CAEtCpzC,EAAAA,EAAW6K,cACPmJ,EAAAA,EACA,CACIogC,MAAO,WACPppE,MAAO+nB,EAAMmuB,EAAK+wB,6BAClBnQ,IAAK5gB,EAAK0H,MACVyrB,UAAWnzB,EAAK6wB,cAMxB,IAAM+C,EACAx+D,KAAK6iB,IACH+nB,EAAK+wB,6BACL/wB,EAAKgxB,4BAEbhxB,EAAK2xB,sBAAwB9/C,EAAM+hD,EAEnC90C,EAAAA,EAAW6K,cACPmJ,EAAAA,EACA,CACIogC,MAAO,gBACPppE,MAAOk2C,EAAK2xB,sBACZ/Q,IAAK5gB,EAAK0H,MACVyrB,UAAWnzB,EAAK6wB,cAGxB7wB,EAAK0xB,cAAe,EACpB1xB,EAAK2kB,KAAKzlC,aAAa2C,KACnB6+B,EAAAA,EAAWp1D,uBAAwB00C,GAE3CA,EAAKiyB,aAAc,EACnB,MACJ,IAAK,eACDjyB,EAAKiyB,aAAc,EAIfjyB,EAAKkyB,WACLlyB,EAAK2kB,KAAKzlC,aAAa2C,KACnB6+B,EAAAA,EAAWl1D,uBAAwBw0C,GAE3C,MACJ,IAAK,SACDA,EAAK2kB,KAAKzlC,aAAa2C,KACnB6+B,EAAAA,EAAWh1D,sBAAuBs0C,KAI9C1rC,KAAKgsB,eAAeuzC,oBAAsB,WACtC7zB,EAAK2kB,KAAKzlC,aAAa2C,KAAK6+B,EAAAA,EAAWpzD,qBAAsB0yC,IAIjE1rC,KAAKg9D,eAAewC,YAAYx/D,KAAKqwD,OAEhCrwD,KAAKozC,OAAS3hC,EAAQ+sD,uBAGvBx+D,KAAKw2D,IAAIxjB,YAAY5M,EAAAA,EAAU5J,oBAC3B,SAAAijC,GACI/zB,EAAK1f,eAAe0zC,cAAcD,GAClCv2C,EAAOpZ,KAAK,oDAEZ47B,EAAKwxB,kBAAkBr/D,KAAK,SAAA8hE,GACxBj0B,EAAKk0B,eACA13B,KAAKy3B,GACLn0B,MAAMm0B,gDAYdroC,GAAW,IAAA6V,EAAAntC,KAClB6/D,EAAW,IAAIznB,EAAAA,EAAIp4C,KAAKgsB,eAAe8zC,iBAAiBnlC,KAE9D,GAAIrD,IAAct3B,KAAK88D,iBAAkB,CACrC,IAAMiD,EACAxqC,EAAAA,EAAQE,UACNoqC,EAASvpC,MAAMgB,EAAU0oC,eAAgBH,EAASx+C,SACpD4+C,EAAQ1qC,EAAAA,EAAQuD,kBAAkBxB,EAAUA,WAElD,IAAMyoC,IAAOE,EAAQ,CAMjB,OAHAh7B,EAAAA,EAAqBC,iBAAiB,IAAIhnC,MAFpB,oCAGtBgrB,EAAOtZ,MAHe,8BAO1BmwD,EAAIvvD,MAAQ,uCAERxQ,KAAKkgE,SAC6B,IAA9BlgE,KAAKmgE,cAAcnjE,QAEnB4C,WAAW,WAC2B,IAA9ButC,EAAKgzB,cAAcnjE,SAGvBmwC,EAAKizB,kBAAkBjzB,EAAKgzB,eAC5BhzB,EAAKgzB,cAAgB,KACtB,IAEPngE,KAAKmgE,cAActiE,KAAKy5B,IAExBt3B,KAAKogE,kBAAkB,CAAE9oC,SAG7BpO,EAAO1Z,IAAI,qCAGXxP,KAAK88D,kBAAmB,4CAUduD,GAAY,IAAApyB,EAAAjuC,KAC1B,GAAKA,KAAKsgE,gBAAgB,qBAA1B,CAKAp3C,EAAO1Z,IAAI,oBAAqB6wD,GAUhC,IATA,IAAMtoC,EAAOrxB,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIvc,KAAKq8D,UACxB7qD,KAAM,QACL5c,EAAE,SAAU,CAAE4b,MAAO,oBAClBsuB,OAAQ,iBACR+/B,UAAW7+D,KAAKugE,aAChB/pD,IAAKxW,KAAKwW,MAEZqpD,EAAW,IAAIznB,EAAAA,EAAIp4C,KAAKgsB,eAAe8zC,iBAAiBnlC,KAdpCie,EAAA,SAgBjBE,GACL,IAAM0nB,EAAQH,EAAW/mC,OAAO,SAAAztB,GAAE,OAAIA,EAAGm0D,gBAAkBlnB,IACrDniB,EACApB,EAAAA,EAAQc,WAAWwpC,EAASvpC,MAAMwiB,GAAKj8C,MAAM,QAAQ,IAE3D,GAAI2jE,EAAMxjE,OAAS,EAAG,CAClB,IAAM+iE,EACAxqC,EAAAA,EAAQE,UAAUoqC,EAASvpC,MAAMwiB,GAAM+mB,EAASx+C,SAEtD0+C,EAAIvvD,MAAQ,uCACZunB,EAAKnjC,EAAE,UAAW,CACd+kD,QAAS1L,EAAKsyB,eAAiBtyB,EAAKmuB,SAC9B,YAAc,YACpBtnE,KAAM0rE,EAAM,GAAGC,OAASD,EAAM,GAAGC,OAAS9pC,EAAML,QACjD1hC,EAAE,YAAamrE,GAClB,IAAK,IAAIxrE,EAAI,EAAGA,EAAIisE,EAAMxjE,OAAQzI,IAAK,CACnC,IAAM+iC,EACA/B,EAAAA,EAAQuD,kBAAkB0nC,EAAMjsE,GAAG+iC,WAIrC2W,EAAKqK,UACLhhB,EAAUI,GAAK,WAEnBK,EAAKnjC,EAAE,YAAa0iC,GAAW5mB,KAInC,IAAMgwD,EACAnrC,EAAAA,EAAQO,SACN+pC,EAASvpC,MAAMwiB,GACf,iBAAkB+mB,EAASx+C,SAEnC,GAAIq/C,EAAiB,CACjB,IAAMhoB,EAAMnjB,EAAAA,EAAQ2B,iBAAiBwpC,GAErChoB,EAAIsB,UAAW,EACfjiB,EAAKnjC,EACD,cACA,CAAE4b,MAAO,gCACR/a,EAAEijD,EAAIvhB,oBACJuhB,EAAIvhB,YACXY,EAAKjxB,MAAM4xC,GACX3gB,EAAKrnB,KAETqnB,EAAKrnB,KACLqnB,EAAKrnB,OA9CJooC,EAAM,EAAGA,EAAM+mB,EAASvpC,MAAMt5B,OAAQ87C,IAAOF,EAA7CE,GAqDT94C,KAAKyd,WAAWnF,OACZyf,EAAM,KAAM/3B,KAAK2gE,sBAAsB5oC,GAhlBhC,0DA2lBX,IAAM6oC,EACAl6D,OAAAA,EAAAA,IAAAA,CAAI,CACF6V,GAAIvc,KAAKq8D,UACT7qD,KAAM,QACT5c,EAAE,SAAU,CAAE4b,MAAO,oBAClBsuB,OAAQ,eACR+/B,UAAW7+D,KAAKugE,aAChB/pD,IAAKxW,KAAKwW,MACb5hB,EAAE,YAAa,CAAE4b,MAAO,oCACxB/a,EAAE,UACFib,KAEL1Q,KAAKw8D,kBACEoE,EAAYhsE,EACX,iBAAkB,CACd4b,MAAO,kCACPvR,GAAIe,KAAKw8D,mBAGrBx8D,KAAKyd,WAAWnF,OACZsoD,EACA,KACA5gE,KAAK2gE,sBAAsBC,GAKvB,6CAMKr1D,GAAM,IAAAs1D,EAAA7gE,KACnB,GAA2C,WAAvCA,KAAKgsB,eAAegzC,eAAxB,CAMA,IAAM8B,EAAgB,GAyBtB,GAvBAv1D,EAAKquB,KAAK,gCACL0hB,KAAK,SAACtC,EAAK1hB,GACR,IAAIloB,EAAOmmB,EAAAA,EAAQwD,oBAAoBzB,GAEvCloB,EAAOA,EAAKjS,QAAQ,OAAQ,IAAIA,QAAQ,KAAM,IAI9C,IAAM4jE,EAAe,IAAIC,gBAAgB,CACrChB,cAAe,EAOfS,OAAQ,GACRnpC,UAAWloB,IAGf0xD,EAAcjjE,KAAKkjE,KAGtBD,EAAc9jE,OAAnB,CAsBAksB,EAAOrZ,MAAP,eAAAxS,OACmByjE,EAAc9jE,OADjC,6BAEAgD,KAAKk9D,kBAAkBr/D,KAbF,SAAA8hE,GACjB,IAAA,IAAAzY,EAAA,EAAAA,EAA2B4Z,EAA3B9jE,OAAAkqD,IAA0C,CAArC,IAAM+Z,EAAgBH,EAAJ5Z,GACnB2Z,EAAK70C,eAAek1C,gBAAgBD,GAC/B/4B,KACG,WAAA,OAAMhf,EAAOrZ,MAAM,wBACnB,SAAAoK,GAAG,OAAIiP,EAAOtZ,MAAM,0BAA2BqK,KAG3D0lD,WAlBAz2C,EAAOtZ,MACH,6BAA8BrE,EAAK,IAAMA,EAAK,GAAG41D,gBAhCrDj4C,EAAOnZ,KAAK,uFA6DP4rC,GAAU,IAAAylB,EAAAphE,KAEbu7C,EAAEI,GAAU/hB,KACV,gEAGF0hB,KAAK,SAAC/mD,EAAG8sE,GACX,IAAMrwC,EAAOnwB,OAAOwgE,EAAYjzD,aAAa,SAEzCgzD,EAAKhuB,MAELguB,EAAKpE,eAAesE,aAChBtwC,EAAMxqB,EAAAA,QAAQsI,mBAAmBsyD,EAAK/E,YAE1C9gB,EAAE8lB,GACGznC,KAAK,gDACL0hB,KAAK,SAACimB,EAAIC,GACP,IAAMnrB,EAAQmrB,EAAgBpzD,aAAa,SAEvCioC,GAASA,EAAMr5C,SACXoF,MAAM4uB,IAASA,EAAO,EACtB9H,EAAOnZ,KACH,gBAAA1S,OAAgB2zB,EAAhB,mBAAA,QAAA3zB,OACcg5C,IAElB+qB,EAAKpE,eAAesE,aAChBtwC,EACAxqB,EAAAA,QAAQsI,mBAAmBunC,wDAcnDr2C,KAAKgsB,eACLhsB,KAAKgsB,eAAey1C,uBAEpBv4C,EAAOtZ,MACH,4FAwBA8xD,EAAarY,EAASsY,EAASxvB,GAAa,IAAAyvB,EAAA5hE,KACpDA,KAAK6hE,oBACDH,EACA,WAIIE,EAAKE,kBAAkBzY,EAASsY,IAEpCA,EACAxvB,kCAWDA,GAAa,IAAA4vB,EAAA/hE,KAChB,IAAKA,KAAKu8D,YACN,MAAM,IAAIr+D,MAAM,+CA8BpB8B,KAAKk9D,kBAAkBr/D,KA5BF,SAAA8hE,GAAoB,IAAAnyC,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IACrC,IAAA,IAAAgzB,EAAAC,EAAyBukB,EAAzB78C,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsC,CAAA,IAA3BikB,EAA2B9jB,EAAAn4B,MAClCusE,EAAK/1C,eAAewgB,SAASiF,IAFI,MAAAx3B,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAIrCq0C,EAAK/1C,eAAeg2C,YAAYD,EAAKzF,kBAChCp0B,KAAK,SAAA+5B,GACFF,EAAK/1C,eAAek2C,oBAAoBD,GACnC/5B,KAAK,WAIF65B,EAAKI,oBACDJ,EAAK/1C,eAAe8zC,iBAAiBnlC,KACzCglC,KACD,SAAA/vD,GACCsZ,EAAOtZ,MACH,0BAA2BA,EAAOqyD,GACtCtC,EAAiB/vD,MAE1B,SAAAA,GACCsZ,EAAOtZ,MACH,4BACAA,EACAmyD,EAAKzF,kBACTqD,EAAiB/vD,MAMzB,SAAAA,GACQA,EACAsZ,EAAOtZ,MAAM,eAAgBA,GAE7BsZ,EAAOrZ,MAAM,sEAeToyD,GAChB,IAAIhtD,EAAOvO,OAAAA,EAAAA,IAAAA,CAAI,CACX6V,GAAIvc,KAAKq8D,UACT7qD,KAAM,QACP5c,EAAE,SAAU,CACX4b,MAAO,oBACPsuB,OAAQ,mBACR+/B,UAAW7+D,KAAKugE,aAChB/pD,IAAKxW,KAAKwW,MAGd,IAAI4hC,EAAAA,EAAI6pB,GAAUzoB,SACdvkC,EACAjV,KAAKu8D,YAAc,YAAc,aACrCtnD,EAAOA,EAAK/E,OACZgZ,EAAOpZ,KAAK,qBAAsBmF,GAClCjV,KAAKyd,WAAWnF,OAAOrD,EACnB,WACIiU,EAAOpZ,KAAK,sCAEhB,SAAAF,GACIsZ,EAAOtZ,MAAM,2BAA4BA,IA/1BtC,uCAw2BLwyD,GACN,IAAKpiE,KAAKu8D,YACN,MAAM,IAAIr+D,MAAM,oDAEpB8B,KAAK6hE,oBACDO,EACA,WACIl5C,EAAOpZ,KAAK,0BAEhB,SAAAF,GACIsZ,EAAOtZ,MAAM,qBAAsBA,iDAmB3ByyD,EAAqBhZ,EAASsY,EAASxvB,GAAa,IAAAmwB,EAAAtiE,KAoEpEA,KAAKk9D,kBAAkBr/D,KAnEF,SAAA8hE,GAEjB,GAAIxtB,EAAa,CAAA,IAAA9jB,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IACb,IAAA,IAAA6zB,EAAAC,EAAoB0jB,EAApB78C,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAAiC,CAAA,IAAtBue,EAAsBpe,EAAAh5B,MAC7B8sE,EAAKt2C,eAAewgB,SAASI,IAFpB,MAAA3yB,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,IAMjB,IAAMg0C,EACAD,EAAKE,yBAAyBH,GAC9BI,EACAH,EAAKt2C,eAAe8zC,iBAAiBnlC,IAMrC+nC,EAHAnnB,EAAE8mB,GACCzoC,KAAK,4DAEwB7sB,KAAK,MAEvC21D,IAAoBJ,EAAK9F,mBACzB8F,EAAK9F,iBAAmBkG,GAG5BJ,EAAK1C,aAAa2C,EAAapoD,KAC1B+tB,KAAK,WAwBF,GAvBIo6B,EAAK7E,QAAUC,EAAAA,IACf4E,EAAK7E,MAAQC,EAAAA,EAaT4E,EAAKlvB,QAAUkvB,EAAK3F,mBACpB2F,EAAKK,kBAAkBL,EAAK3F,oBAQhC8F,EAAa,CACb,IAAMG,EACA,IAAIxqB,EAAAA,EAAIkqB,EAAKt2C,eAAe8zC,iBAAiBnlC,KAEnD2nC,EAAKO,mBACD,IAAIzqB,EAAAA,EAAIqqB,GAAcG,GAG9BjD,KACD,SAAA/vD,GACCsZ,EAAOtZ,MAAP,gDAAAvS,OAEQilE,EAAK/F,YAAc,WAAa,WAFxCl/D,OAEoDuS,GAChD2yD,GAEJ5C,EAAiB/vD,MAMzB,SAAAA,GACIA,EAAQ+xD,EAAQ/xD,GAASy5C,+CAcpByZ,EAAiBzZ,EAASsY,GAAS,IAAAoB,EAAA/iE,KAChDA,KAAKqwD,KAAKzlC,aAAa2C,KAAK6+B,EAAAA,EAAWv0D,eAAgBmI,MAMvD,IAAMgjE,EAAgBF,EAAgBG,QAEtCH,EACKlpC,KAAK,yBACL7sB,KAAK,UAAW,YAQrB+1D,EACKlpC,KAAK,+BACLspC,SACLJ,EACKlpC,KAAK,mCACLspC,SAML,IAAMC,EAAiBL,EAAgBlpC,KAAK,kCAE5CupC,EAAep2D,KAAK,OAAQ,SAC5Bo2D,EAAej2D,KAAK,+DAGpBlN,KAAK6hE,oBACDiB,EACA,WAEIC,EAAKlB,oBACDmB,EACA,WACI,IAAMnD,EACA,IAAIznB,EAAAA,EAAI2qB,EAAK/2C,eAAe8zC,iBAAiBnlC,KAEnDooC,EAAKK,oBAAoBvD,EAAUxW,EAASsY,GAE5CoB,EAAK1S,KAAKzlC,aAAa2C,KACnB6+B,EAAAA,EAAWt0D,oBACXirE,EACAC,IAERrB,IAERA,6CAYUtY,EAASsY,GAAS,IAAA0B,EAAArjE,KAG1B6/D,EAAW,IAAIznB,EAAAA,EAAIp4C,KAAKgsB,eAAe8zC,iBAAiBnlC,KAC1D2oC,EAAS58D,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIvc,KAAKq8D,UACxB7qD,KAAM,QACL5c,EAAE,SAAU,CAAE4b,MAAO,oBAClBsuB,OAAQ,iBACR+/B,UAAW7+D,KAAKugE,aAChBgD,UAAWvjE,KAAKwjE,aAChBhtD,IAAKxW,KAAKwW,MAEdxW,KAAK89D,sBACL+B,EAAStnB,qBAAsB,GAE/Bv4C,KAAK69D,sBACLgC,EAASrnB,qBAAsB,GAE/Bx4C,KAAKs4C,UACLunB,EAASvnB,SAAU,GAEvBunB,EAASrmB,SACL8pB,EACAtjE,KAAKugE,eAAiBvgE,KAAKo8D,SAAW,YAAc,YACpD,MAGJkH,EAASA,EAAOpzD,OAChBgZ,EAAOpZ,KAAK,yBAA0BwzD,GACtCtjE,KAAKyd,WAAWnF,OAAOgrD,EACnBja,EACArpD,KAAK2gE,sBAAsB2C,EAAQ,SAAA1zD,GAC/B+xD,EAAQ/xD,GAIRyzD,EAAKhT,KAAKzlC,aAAa2C,KACnB6+B,EAAAA,EAAWpyD,uBAAwBqpE,KAlkCpC,+CAomCGI,GACd,IAAMC,EAAkBD,EAAsB,OAAS,OAEjDE,EACAj9D,OAAAA,EAAAA,IAAAA,CAAI,CACF6V,GAAIvc,KAAKq8D,UACT7qD,KAAM,QAEL5c,EAAE,SAAU,CACT4b,MAAO,oBACPsuB,OAAQ,iBACR+/B,UAAW7+D,KAAKugE,aAChB/pD,IAAKxW,KAAKwW,MAEb5hB,EAAE,UAAW,CACVE,KAAM,QACN+lD,QAAS6oB,IAGrBx6C,EAAOpZ,KAAP,0CAAAzS,OAC8CqmE,IAE9C1jE,KAAKyd,WAAWnF,OACZqrD,EACA,KACA3jE,KAAK2gE,sBAAsBgD,GA7nCpB,iDA2oCK9D,EAAUxW,EAASsY,GAAS,IAAAiC,EAAA5jE,KACxC6jE,EAAkBn9D,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIvc,KAAKq8D,UACjC7qD,KAAM,QACL5c,EAAE,SAAU,CACT4b,MAAO,oBACPsuB,OAAQ,mBACR+/B,UAAW7+D,KAAKugE,aAChB/pD,IAAKxW,KAAKwW,MAGlBqpD,EAASvpC,MAAMr1B,QAAQ,SAAC6iE,EAAY9qB,GAChC,IAAMriB,EAAQpB,EAAAA,EAAQc,WAAWytC,EAAWjnE,MAAM,QAAQ,IAE1DgnE,EAAgBjvE,EAAE,UACd,CACI+kD,QACIiqB,EAAKrD,eAAiBqD,EAAKxH,SACrB,YACA,YACVtnE,KAAM6hC,EAAML,QAGpBupC,EAAS/kB,kBAAkB9B,EAAK6qB,GAChCA,EAAgBnzD,OAIpBmzD,EAAkBA,EAAgB3zD,OAClCgZ,EAAOpZ,KAAK,6BAA8B+zD,GAE1C7jE,KAAKyd,WAAWnF,OAAOurD,EACnBxa,EACArpD,KAAK2gE,sBAAsBkD,EAAiBlC,GA3qCrC,iDA0rCKtY,EAASsY,GAGzB,IAAIoC,EAAkBr9D,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIvc,KAAKq8D,UACjC7qD,KAAM,QACL5c,EAAE,SAAU,CACT4b,MAAO,oBACPsuB,OAAQ,mBACR+/B,UAAW7+D,KAAKugE,aAChB/pD,IAAKxW,KAAKwW,MAGlButD,EAAkBA,EAAgB7zD,OAClCgZ,EAAOpZ,KAAK,4BAA8Bi0D,GAE1C/jE,KAAKyd,WAAWnF,OAAOyrD,EACnB1a,EACArpD,KAAK2gE,sBAAsBoD,EAAiBpC,GA3sCrC,uCAktCLtY,EAASsY,EAASlwD,GACxB,GAAIzR,KAAKy9D,QAAUC,EAAAA,EAAnB,CAIA,IAAKjsD,GAAWs0B,QAAQt0B,EAAQuyD,sBAAuB,CACnD,IAAIC,EACEv9D,OAAAA,EAAAA,IAAAA,CAAI,CACF6V,GAAIvc,KAAKq8D,UACT7qD,KAAM,QAEL5c,EAAE,SAAU,CACT4b,MAAO,oBACPsuB,OAAQ,oBACR+/B,UAAW7+D,KAAKugE,aAChB/pD,IAAKxW,KAAKwW,MAEb5hB,EAAE,UACFA,EAAG6c,GAAWA,EAAQ8H,QAAW,WAEtC9H,GAAWA,EAAQyyD,mBACnBD,EAAiBvzD,KACZ9b,EAAE,QACFa,EAAEgc,EAAQyyD,mBAInBD,EAAmBA,EAAiB/zD,OACpCgZ,EAAOpZ,KAAK,4BAA6Bm0D,GACzCjkE,KAAKyd,WAAWnF,OACZ2rD,EACA5a,EACArpD,KAAK2gE,sBAAsBsD,EAAkBtC,GAlvC1C,UAqvCPz4C,EAAOpZ,KAAP,yCAAAzS,OAAqD2C,OAIzDA,KAAKyd,WAAWg+B,OAAO0oB,UAAUnkE,KAAKwW,2CAQ7B4tD,EAAiBC,GAI1Bn7C,EAAOpZ,KAAP,sBAAAzS,OAAkC2C,MAAQokE,EAAiBC,GAE3DrkE,KAAKylB,4DAamB6+C,EAAeC,GACvC,IAAMC,EAAc,GAiEpB,OA/DAjpB,EAAE+oB,GAAehpB,KAAK,SAACmpB,EAAI1jD,GACvB,IAAMjsB,EAAOymD,EAAEx6B,GAAShU,KAAK,QACzBorB,EAAQ,GAEZojB,EAAEx6B,GACG6Y,KAAK,uDACL0hB,KAAK,WAEF,IAAMxhB,EAAY95B,KAAKoO,aAAa,aAC9BgrB,EACAmiB,EAAEv7C,MACC45B,KAAK,WACL98B,IAAI,WAED,OAAOkD,KAAKoO,aAAa,UAE5BhZ,MAELgkC,EAAMp8B,SACNm7B,GAAK,gBAAA96B,OACkBy8B,EADlB,KAAAz8B,OAEG+7B,EAAM77B,KAAK,KAFd,WAQXg+C,EAAEx6B,GAAS6Y,KACT,mDAGJ0hB,KAAK,WACL,IAAMtqB,EAAOuqB,EAAEv7C,MAAM+M,KAAK,QAEtBw3D,EAAiBtrB,aAAajoB,GAC9B9H,EAAOnZ,KAAP,yCAAA1S,OAC6C2zB,IAMjDuqB,EAAEv7C,MAAM45B,KAAK,cAAc0hB,KAAK,WAC5BnjB,GAAK,UAAA96B,OAAc2zB,EAAd,KAAA3zB,OAAsBk+C,EAAEv7C,MAAM+M,KAAK,SACpCwuC,EAAEv7C,MAAM+M,KAAK,UAAYwuC,EAAEv7C,MAAM+M,KAAK,SAAS/P,SAC/Cm7B,GAAK,IAAA96B,OAAQk+C,EAAEv7C,MAAM+M,KAAK,WAE9BorB,GAAS,WAKjBosC,EAAiBjuC,MAAMr1B,QAAQ,SAACq1B,EAAOouC,GAC9BnvC,EAAAA,EAAQO,SAASQ,EAAjB,SAAAj5B,OAAiCvI,MAGjC0vE,EAAYE,KACbF,EAAYE,GAAM,IAEtBF,EAAYE,IAAOvsC,OAIpBqsC,0CAOKj5D,GACZvL,KAAK2kE,0BAAyB,EAAgBp5D,8CAO/BA,GACfvL,KAAK2kE,0BAAyB,EAAoBp5D,oDAW7Bq5D,EAAOr5D,GAAM,IAAAs5D,EAAA7kE,KAC5B8kE,EAAYF,EAAQ,kBAAoB,qBAE1CA,GACA5kE,KAAK+kE,aAAax5D,GA+CtBvL,KAAKk9D,kBAAkBr/D,KA5CF,SAAA8hE,GACjB,IAAKkF,EAAK74C,eAAe8zC,mBACjB+E,EAAK74C,eAAe8zC,iBAAiBnlC,IAAK,CAC9C,IAAM8yB,EAAM,GAAApwD,OAAMynE,EAAN,qCAKZ,OAHA57C,EAAOtZ,MAAM69C,QACbkS,EAAiBlS,GAKrBvkC,EAAO1Z,IAAP,cAAAnS,OAAyBynE,IACzB57C,EAAO1Z,IACH,yBACAq1D,EAAK74C,eAAemzC,oBAExB,IAAMsD,EACA,IAAIrqB,EAAAA,EAAIysB,EAAK74C,eAAe8zC,iBAAiBnlC,KAC7CA,EAAM,IAAIyd,EAAAA,EAAIysB,EAAK74C,eAAeg5C,kBAAkBrqC,KACpDsqC,EACAL,EACIC,EAAKK,4BAA4B35D,EAAMovB,GACvCkqC,EAAKM,+BAA+B55D,EAAMovB,GAC9C4nC,EACAqC,EACIC,EAAKO,wBAAwBH,GAC7BJ,EAAKQ,2BAA2BJ,GAE1CJ,EAAKjF,aAAa2C,EAAapoD,KAC1B+tB,KAAK,WACF,IAAM06B,EACA,IAAIxqB,EAAAA,EAAIysB,EAAK74C,eAAe8zC,iBAAiBnlC,KAEnDzR,EAAO1Z,IAAP,GAAAnS,OACOynE,EADP,iBACiCrC,EAAaG,GAC9CiC,EAAKhC,mBAAmBJ,EAAaG,GACrCjD,KACD,SAAA/vD,GACCsZ,EAAOtZ,MAAP,GAAAvS,OAAgBynE,EAAhB,YAAqCl1D,GACrC+vD,EAAiB/vD,wDAaR01D,GACrB,IAAMC,EAAY,IAAIntB,EAAAA,EAAI,IAe1B,OAbIp4C,KAAK89D,sBACLyH,EAAUhtB,qBAAsB,GAEhCv4C,KAAK69D,sBACL0H,EAAU/sB,qBAAsB,GAEhCx4C,KAAKs4C,UACLitB,EAAUjtB,SAAU,GAGxBitB,EAAU/pB,WAAW8pB,GACrBtlE,KAAK+kE,aAAaxpB,EAAE+pB,GAAS1rC,KAAK,aAE3B2rC,qDAUgBC,GACvB,IAAMD,EAAY,IAAIntB,EAAAA,EAAIp4C,KAAKgsB,eAAeg5C,kBAAkBrqC,KAahE,OAXA6qC,EAAevkE,QAAQ,SAACk3B,EAAO6gB,IAE3B7gB,EAAQA,EAAMt7B,MAAM,SACdyd,MACN6d,EAAMl3B,QAAQ,SAAAmO,GACVm2D,EAAUjvC,MAAM0iB,GACVusB,EAAUjvC,MAAM0iB,GAAK77C,QAArB,GAAAE,OAAgC+R,EAAhC,QAA4C,QAG1Dm2D,EAAUprD,IAAMorD,EAAUlkD,QAAUkkD,EAAUjvC,MAAM/4B,KAAK,IAElDgoE,kDAUaf,GACpB,IAAMe,EAAY,IAAIntB,EAAAA,EAAIp4C,KAAKgsB,eAAeg5C,kBAAkBrqC,KAOhE,OALA6pC,EAAYvjE,QAAQ,SAACk3B,EAAO6gB,GACxBusB,EAAUjvC,MAAM0iB,IAAQ7gB,IAE5BotC,EAAUprD,IAAMorD,EAAUlkD,QAAUkkD,EAAUjvC,MAAM/4B,KAAK,IAElDgoE,uCAYEE,GACT,GAA2C,WAAvCzlE,KAAKgsB,eAAegzC,eAA6B,CACjD,IAAMpvD,EAAQ,IAAI1R,MAAM,4CAIxB,OAFA8B,KAAKqwD,KAAKzlC,aAAa2C,KAAK6+B,EAAAA,EAAW5yD,qBAAsBoW,EAAO5P,MAE7DorC,QAAQE,OAAO17B,GAG1B,IAAM21D,EACAE,GAAqBzlE,KAAKgsB,eAAeg5C,kBAAkBrqC,IAEjE,IAAK4qC,EAAW,CACZ,IAAM31D,EAAQ,IAAI1R,MAAJ,kEAAAb,OAA4E2C,KAAKy9D,QAI/F,OAFAz9D,KAAKqwD,KAAKzlC,aAAa2C,KAAK6+B,EAAAA,EAAW5yD,qBAAsBoW,EAAO5P,MAE7DorC,QAAQE,OAAO17B,GAG1B,IAAMo1D,EAAoB,IAAIU,sBAAsB,CAChDl0D,KAAMxR,KAAKu8D,YAAc,SAAW,QACpC5hC,IAAK4qC,IAGT,OAAIvlE,KAAKu8D,YACEv8D,KAAK2lE,sBAAsBX,GAG/BhlE,KAAK4lE,sBAAsBZ,iDAShBA,GAAmB,IAAAa,EAAA7lE,KAGrC,OAFAkpB,EAAOrZ,MAAM,2CAEN7P,KAAKgsB,eAAe85C,qBAAqBd,GAC3C98B,KAAK,WAGF,OAFAhf,EAAOrZ,MAAM,gCAENg2D,EAAK75C,eAAe+5C,aAAaF,EAAKvJ,kBACxCp0B,KAAK,SAAA89B,GAGF,OAFA98C,EAAOrZ,MAAM,0CAENg2D,EAAK75C,eAAek2C,oBAAoB8D,qDAW7ChB,GAAmB,IAAAiB,EAAAjmE,KACrC,MAA2C,qBAAvCA,KAAKgsB,eAAegzC,gBAEpB91C,EAAOrZ,MACH,2CAIG7P,KAAKgsB,eAAe85C,qBAAqBd,GAC3C98B,KAAK,WASF,OAAO+9B,EAAKN,sBAAsBX,OAK9C97C,EAAOrZ,MAAM,+BAEN7P,KAAKgsB,eAAeg2C,YAAYhiE,KAAKs8D,kBACvCp0B,KAAK,SAAAg+B,GAGF,OAFAh9C,EAAOrZ,MAAM,0CAENo2D,EAAKj6C,eAAek2C,oBAAoBgE,GAC1Ch+B,KAAK,WAKF,OAJAhf,EAAOrZ,MACH,2CAGGo2D,EAAKj6C,eAAe85C,qBAAqBd,6CAiBvDmB,EAAUC,GAAU,IAAAC,EAAArmE,KACvBsmE,EAAe,SAAA3G,GACjB,IAAM8C,EAAc4D,EAAKr6C,eAAe8zC,iBAAiBnlC,KAKpDwrC,GAAYC,GAAYA,EAASG,eAMlCF,EAAKr6C,eAAew6C,oBAGbL,GAAYA,EAASI,iBAAmBH,IAK/CC,EAAKr6C,eAAew6C,oBACpBH,EAAKr6C,eAAey1C,wBAGxB4E,EAAKr6C,eAAey6C,aAAaN,EAAUC,GAC1Cl+B,KAAK,SAAAw+B,GACEA,IACIP,GAAYC,IACbC,EAAK5I,QAAUC,EAAAA,EAClB2I,EAAKzG,eACA13B,KAAK,WACF,IAAMy+B,EACA,IAAIvuB,EAAAA,EACFiuB,EAAKr6C,eAAe8zC,iBAAiBnlC,KAE7C0rC,EAAKxD,mBACD,IAAIzqB,EAAAA,EAAIqqB,GAAckE,GAC1BhH,KAEJA,GAEJA,OAKZ,OAAO,IAAIv0B,QAAQ,SAACC,EAASC,GACzB+6B,EAAKnJ,kBAAkBr/D,KACnByoE,EACA,SAAA12D,GACQA,GACAsZ,EAAOtZ,MAAM,uBAAwBA,GACrC07B,EAAO17B,KAEPsZ,EAAOpZ,KAAK,uBACZu7B,gEAgBWu7B,EAAkBrC,GAC7C,IAAMiB,EAAiB,GA2DvB,OAzDAjqB,EAAEqrB,GAAkBtrB,KAAK,SAACmpB,EAAI1jD,GAC1B,IAAMjsB,EAAOymD,EAAEx6B,GAAShU,KAAK,QACzBorB,EAAQ,GAEZojB,EAAEx6B,GACG6Y,KAAK,uDACL0hB,KAAK,WAEF,IAAMxhB,EAAY95B,KAAKoO,aAAa,aAC9BgrB,EACAmiB,EAAEv7C,MACC45B,KAAK,WACL98B,IAAI,WACD,OAAOkD,KAAKoO,aAAa,UAE5BhZ,MAELgkC,EAAMp8B,SACNm7B,GAAK,gBAAA96B,OACkBy8B,EADlB,KAAAz8B,OAEG+7B,EAAM77B,KAAK,KAFd,WAOjB,IAAM67B,EAAQ,GAIRmiB,EAAEx6B,GAAS6Y,KACT,mDAEJ0hB,KAAK,WAEL,IAAMtqB,EAAOuqB,EAAEv7C,MAAM+M,KAAK,QAE1BqsB,EAAMv7B,KAAKmzB,KAEfuzC,EAAiBjuC,MAAMr1B,QAAQ,SAACq1B,EAAOouC,GAC9BnvC,EAAAA,EAAQO,SAASQ,EAAjB,SAAAj5B,OAAiCvI,MAGjC0wE,EAAed,KAChBc,EAAed,GAAM,IAEzBtrC,EAAMn4B,QAAQ,SAAA+vB,GACV,IAAM61C,EACAtxC,EAAAA,EAAQqD,UAAUtC,EAAlB,UAAAj5B,OAAmC2zB,IAErC61C,EAAU7pE,SACVwoE,EAAed,IAAf,GAAArnE,OAAyBwpE,EAAUtpE,KAAK,QAAxC,WAGRioE,EAAed,IAAOvsC,OAIvBqtC,+CAeUsB,EAAeC,GAChC,IAAMC,EACA,IAAI5uB,EAAAA,EAAIp4C,KAAKgsB,eAAe8zC,iBAAiBnlC,KAC/CssC,EAAU,IAAIC,EAAAA,EAAUH,EAAQC,GAC9BG,EAAaF,EAAQG,cAE3B,GAAInyE,OAAOy5B,KAAKy4C,GAAYnqE,OAKxB,OAJAksB,EAAOtZ,MAAP,GAAAvS,OACO2C,KADP,+BAAA3C,OACyCypE,GACrCK,IAEG,EAIX,IAAME,GADNJ,EAAU,IAAIC,EAAAA,EAAUF,EAAiBD,IACZK,cAE7B,OAAInyE,OAAOy5B,KAAK24C,GAAcrqE,SAC1BksB,EAAOtZ,MAAP,GAAAvS,OACO2C,KADP,kCAAA3C,OAC4CypE,GACxCO,IAEG,4CAcEz6B,GACb,OAAO5sC,KAAKsnE,6BACR,EAA2B16B,6CAWjBA,GACd,OAAO5sC,KAAKsnE,6BACR,EAA2B16B,uDAUP26B,EAAQ36B,GAAO,IAAA46B,EAAAxnE,KACvC,IAAK4sC,EACD,OAAOxB,QAAQE,OAAO,kCAE1B,IAAMw7B,EAAgBS,EAAS,kBAAoB,iBAC7CjB,EAAe,SAAA3G,GACjB,IAAMxxC,EAAMq5C,EAAKx7C,eAEjB,GAAKmC,EAAL,CAOA,IAAMs5C,EAAct5C,EAAI2xC,iBAAiBnlC,KAEnC4sC,EACIp5C,EAAIu5C,gBAAgB3xE,KAAKo4B,EAAKye,GAC9Bze,EAAIw5C,eAAe5xE,KAAKo4B,EAAKye,MAI3B66B,GAAgBt5C,EAAI62C,kBAAkBrqC,IAG9C6sC,EAAK5H,eACA13B,KAAK,WAIFs/B,EAAKI,qBACDd,EAAe,IAAI1uB,EAAAA,EAAIqvB,IAC3B9H,KAEJA,GAXJA,IAFAA,EAAgB,GAAAtiE,OAAIypE,EAAJ,kBAbhBnH,EACI,iBAAAtiE,OAAiBypE,EAAjB,8BACM,eA4BlB,OAAO,IAAI17B,QAAQ,SAACC,EAASC,GACzBk8B,EAAKtK,kBAAkBr/D,KACnByoE,EACA,SAAA12D,GACQA,EACA07B,EAAO17B,GAEPy7B,uDAgBGw8B,EAAaC,GAAa,IAAAC,EAAA/nE,KAC7C,IAAKA,KAAKgsB,eACN,OAAOof,QAAQE,OACX,uEAIR,IAAM08B,EAAcH,EAAc,eAAiB,iBAC7CI,EAAcH,EAAc,eAAiB,iBAEnD5+C,EAAOpZ,KAAP,eAAAzS,OAA2B4qE,EAA3B,MAAA5qE,OAA2C2qE,EAA3C,aAEA,IAAM1B,EAAe,SAAA3G,GACjB,IAAMuI,EAAkBH,EAAKtK,QAAUC,EAAAA,EAMjCyK,EACAJ,EAAK/7C,eAAeo8C,uBAAuBP,GAE7CE,EAAKpL,oBAAsBmL,IAC3BC,EAAKpL,kBAAoBmL,EAUrBC,EAAK30B,OAAS80B,GACdH,EAAKpF,kBAAkBmF,IAI/B,IAAMO,EACAN,EAAK/7C,eAAes8C,uBAClBP,EAAKpL,mBAAqBoL,EAAKnL,oBAInCsL,IACQC,GAAsBE,GAC9BN,EAAKnI,eACA13B,KACGy3B,EACAA,GAERA,KAIR,OAAO,IAAIv0B,QAAQ,SAACC,EAASC,GACzBy8B,EAAK7K,kBAAkBr/D,KACnByoE,EACA,SAAA12D,GACQA,EACA07B,EAAO17B,GAEPy7B,+CAgBLkyB,GAAgB,IAAAgL,EAAAvoE,KACrBwoE,EACArM,EAAgBsM,kBAAkBlL,GAExC,GAAwB,OAApBiL,EAAJ,CAoBAt/C,EAAOrZ,MACH,GAAAxS,OAAG2C,KAAH,iCAAA,mBAAA3C,OACyBmrE,EADzB,OAGJxoE,KAAKk9D,kBAAkBr/D,KAhBF,SAAA8hE,GACb4I,EAAKjI,gBAAgB,mBACdiI,EAAKG,yBAAyBF,GAGrCD,EAAK3I,eACA13B,KAAKy3B,EAAkBA,GAE5BA,KAUJ,SAAA/vD,GACQA,GACAsZ,EAAOtZ,MAAM,0BAA2BA,UA3BhDsZ,EAAOtZ,MACH,GAAAvS,OAAG2C,KAAH,mDACM,4EAwCO2oE,GACrB,IAAMC,EACuB,SAAvBD,GAC6B,cAAvBA,GAAsC3oE,KAAKu8D,aACpB,cAAvBoM,IAAuC3oE,KAAKu8D,YAQxD,OANIqM,IAAwB5oE,KAAK48D,qBAC7B1zC,EAAOrZ,MAAP,GAAAxS,OACO2C,KADP,8BAAA3C,OACwCurE,IACxC5oE,KAAK48D,mBAAqBgM,GAGvB5oE,KAAKgsB,eAAes8C,uBACvBtoE,KAAK28D,mBAAqB38D,KAAK48D,+DAQpBmK,EAAQ8B,GAEvB,GAAI7oE,KAAKy9D,QAAUC,EAAAA,EAAnB,CAOA,IAAIoL,EAAY,IAAI5B,EAAAA,EAAU2B,EAAQ9B,GAChC7D,EAASx8D,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIvc,KAAKq8D,UAC1B7qD,KAAM,QACL5c,EAAE,SAAU,CACT4b,MAAO,oBACPsuB,OAAQ,gBACR+/B,UAAW7+D,KAAKugE,aAChB/pD,IAAKxW,KAAKwW,MAGMsyD,EAAUtvB,SAAS0pB,IAGvCh6C,EAAOpZ,KAAK,wBAAyBozD,EAAOhzD,QAC5ClQ,KAAKyd,WAAWnF,OACZ4qD,EAAQ,KACRljE,KAAK2gE,sBAAsBuC,GA3hExB,MA6hEPh6C,EAAO1Z,IAAI,yBAIfs5D,EAAY,IAAI5B,EAAAA,EAAUH,EAAQ8B,GAClC,IAAMp9C,EAAM/kB,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIvc,KAAKq8D,UACvB7qD,KAAM,QACL5c,EAAE,SAAU,CACT4b,MAAO,oBACPsuB,OAAQ,aACR+/B,UAAW7+D,KAAKugE,aAChB/pD,IAAKxW,KAAKwW,MAIOsyD,EAAUtvB,SAAS/tB,IAGxCvC,EAAOpZ,KAAK,qBAAsB2b,EAAIvb,QACtClQ,KAAKyd,WAAWnF,OACZmT,EAAK,KAAMzrB,KAAK2gE,sBAAsBl1C,GAjjEnC,MAmjEPvC,EAAO1Z,IAAI,+BA9CX0Z,EAAOnZ,KAAP,4BAAA1S,OAAwC2C,KAAKy9D,MAA7C,4DAoEcsL,EAASC,GAAW,IAAAC,EAAAjpE,KACtC,OAAO,SAAAkpE,GAEH,IAAMt5D,EAAQ,GAGRu5D,EAAa5tB,EAAE2tB,GAAatvC,KAAK,SAEvC,GAAIuvC,EAAWnsE,OAAQ,CACnB4S,EAAM+V,KAAOwjD,EAAWp8D,KAAK,QAC7B,IAAMq8D,EAAiB7tB,EAAE2tB,GAAatvC,KAAK,gBAEvCwvC,EAAepsE,SACf4S,EAAM2J,OAAS6vD,EAAe,GAAGt9D,SAGrC,IAAMu9D,EAAcF,EAAWvvC,KAAK,SAEhCyvC,EAAYrsE,SACZ4S,EAAMF,IAAM25D,EAAYn8D,QAI3Bg8D,IACDt5D,EAAM2J,OAAS,WAGnB3J,EAAMyR,QAAU4nD,EAAKxoE,WAEjBuoE,EACAA,EAAUp5D,GACHq5D,EAAKxL,QAAUC,EAAAA,GACM,mBAAjB9tD,EAAM2J,OAMjB2P,EAAOrZ,MAAP,iBAAAxS,OAA8B0Z,KAAKyK,UAAU5R,KAE7Cq1B,EAAAA,EAAqBC,iBACjB,IAAIhnC,MAAJ,iBAAAb,OACqB0Z,KAAKyK,UAAU5R,uDAUhD,OAAO5P,KAAKgsB,eAAemzC,mDAMvB,IAAAmK,EAAAtpE,KACJA,KAAKy9D,MAAQC,EAAAA,EACb19D,KAAKq9D,2BAAwB1iE,EAE7BqF,KAAKgsB,eAAe2yC,eAAiB,KACrC3+D,KAAKgsB,eAAekzC,2BAA6B,KACjDl/D,KAAKgsB,eAAeuzC,oBAAsB,KAC1Cv/D,KAAKgsB,eAAe+yC,uBAAyB,KAG7C/+D,KAAKk9D,kBAAkBqM,QAEvBvpE,KAAKk9D,kBAAkBr/D,KAAK,SAAA2rE,GAExBF,EAAKtM,eAAewC,YAAY,MAGhC8J,EAAKt9C,gBAAkBs9C,EAAKt9C,eAAevG,QAC3C+jD,MAIJxpE,KAAKk9D,kBAAkBuM,8CAQvB,MAAO,uBAAApsE,OAAuB2C,KAAKozC,MAA5B,KAAA,aAAA/1C,OACoB2C,KAAKu8D,YADzB,SAAAl/D,OAC4C2C,KAAKwW,IADjD,2DAU+B,IAAbkzD,EAAa/gC,EAAb+gC,UACzB,GAAKA,GAAcA,EAAUC,uBAA7B,CAOA,IAAMj7D,EAAM1O,KAAK4pE,mBAEjB,OAAOC,OAAAA,EAAAA,YAAAA,CAAYn7D,GAAO,GAAM,2FCntExCra,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,sBAAA,WAAA,OAAAiX,IAAA9oC,EAAAQ,EAAAqxB,EAAA,6BAAA,WAAA,OAAA4jD,IAYO,IAAM3sC,EAAsB,4BAWtB2sC,EACP,wDClBL,IAAsBC,EAAAA,EAIL,WAKhB,IAAIt0E,GAAI,EAER,SAASu0E,EAAOC,GAEd,SAASC,EAAcC,GACrB,IAAIttD,EAAQotD,EAAGptD,MAAMstD,GACrB,OAAQttD,GAASA,EAAM7f,OAAS,GAAK6f,EAAM,IAAO,GAGpD,SAASutD,EAAeD,GACtB,IAAIttD,EAAQotD,EAAGptD,MAAMstD,GACrB,OAAQttD,GAASA,EAAM7f,OAAS,GAAK6f,EAAM,IAAO,GAGpD,IAoBI5M,EApBAo6D,EAAYH,EAAc,uBAAuB/7D,cAEjDm8D,GADc,gBAAgBptE,KAAK+sE,IACT,WAAW/sE,KAAK+sE,GAC1CM,EAAc,oBAAoBrtE,KAAK+sE,GACvCO,GAAeD,GAAe,kBAAkBrtE,KAAK+sE,GACrDQ,EAAW,OAAOvtE,KAAK+sE,GACvBS,EAAO,QAAQxtE,KAAK+sE,GACpBU,EAAW,YAAYztE,KAAK+sE,GAC5BW,EAAQ,SAAS1tE,KAAK+sE,GACtBY,EAAQ,eAAe3tE,KAAK+sE,GAC5Ba,EAAe,iBAAiB5tE,KAAK+sE,GAErCc,GADiB,kBAAkB7tE,KAAK+sE,IAC7Ba,GAAgB,WAAW5tE,KAAK+sE,IAC3Ce,GAAOX,IAAcK,GAAQ,aAAaxtE,KAAK+sE,GAC/CgB,GAASX,IAAYK,IAAaC,IAAUC,GAAS,SAAS3tE,KAAK+sE,GACnEiB,EAAcd,EAAe,iCAC7Be,EAAoBjB,EAAc,2BAClCkB,EAAS,UAAUluE,KAAK+sE,KAAQ,aAAa/sE,KAAK+sE,GAClDoB,GAAUD,GAAU,YAAYluE,KAAK+sE,GACrCqB,EAAO,QAAQpuE,KAAK+sE,GAGpB,SAAS/sE,KAAK+sE,GAEhBh6D,EAAS,CACPnb,KAAM,QACNy2E,MAAO91E,EACPyuB,QAASinD,GAAqBjB,EAAc,4CAErC,eAAehtE,KAAK+sE,GAE7Bh6D,EAAS,CACPnb,KAAM,QACJy2E,MAAO91E,EACPyuB,QAASgmD,EAAc,sCAAwCiB,GAG5D,kBAAkBjuE,KAAK+sE,GAC9Bh6D,EAAS,CACPnb,KAAM,+BACJ02E,eAAgB/1E,EAChByuB,QAASinD,GAAqBjB,EAAc,2CAGzC,SAAShtE,KAAK+sE,GACrBh6D,EAAS,CACPnb,KAAM,cACJ22E,MAAOh2E,EACPyuB,QAASinD,GAAqBjB,EAAc,kCAGzC,aAAahtE,KAAK+sE,GACzBh6D,EAAS,CACPnb,KAAM,iBACN42E,cAAej2E,EACfyuB,QAASinD,GAAqBjB,EAAc,sCAGvC,aAAahtE,KAAK+sE,GACzBh6D,EAAS,CACLnb,KAAM,aACN62E,UAAWl2E,EACXyuB,QAASgmD,EAAc,wCAGpB,SAAShtE,KAAK+sE,GACrBh6D,EAAS,CACPnb,KAAM,UACJ82E,QAASn2E,EACTyuB,QAASgmD,EAAc,oCAGpB,YAAYhtE,KAAK+sE,GACxBh6D,EAAS,CACPnb,KAAM,WACJ+2E,SAAUp2E,EACVyuB,QAASgmD,EAAc,uCAGpB,UAAUhtE,KAAK+sE,GACtBh6D,EAAS,CACPnb,KAAM,SACJg3E,OAAQr2E,EACRyuB,QAASgmD,EAAc,qCAGpB,YAAYhtE,KAAK+sE,GACxBh6D,EAAS,CACPnb,KAAM,WACJi3E,SAAUt2E,EACVyuB,QAASgmD,EAAc,uCAGpB,YAAYhtE,KAAK+sE,GACxBh6D,EAAS,CACPnb,KAAM,WACJk3E,QAASv2E,EACTyuB,QAASgmD,EAAc,uCAGpBY,GACP76D,EAAS,CACPnb,KAAM,gBACNm3E,OAAQ,gBACRnB,aAAcr1E,GAEZy1E,GACFj7D,EAAOi8D,OAASz2E,EAChBwa,EAAOiU,QAAUgnD,IAGjBj7D,EAAOk8D,KAAO12E,EACdwa,EAAOiU,QAAUgmD,EAAc,8BAG1B,gBAAgBhtE,KAAK+sE,GAC5Bh6D,EAAS,CACPnb,KAAM,oBACNq3E,KAAM12E,EACNyuB,QAASgmD,EAAc,gCAEhBO,EACTx6D,EAAS,CACPnb,KAAM,SACNm3E,OAAQ,YACRxB,SAAUh1E,EACV22E,WAAY32E,EACZkoD,OAAQloD,EACRyuB,QAASgmD,EAAc,0CAEhB,iBAAiBhtE,KAAK+sE,GAC/Bh6D,EAAS,CACPnb,KAAM,iBACNo3E,OAAQz2E,EACRyuB,QAASgnD,GAGJ,WAAWhuE,KAAK+sE,GACvBh6D,EAAS,CACPnb,KAAM,UACJu3E,QAAS52E,EACTyuB,QAASgmD,EAAc,4BAA8BiB,GAGlDR,EACP16D,EAAS,CACPnb,KAAM,WACNm3E,OAAQ,cACRtB,SAAUl1E,EACVyuB,QAASgmD,EAAc,uCAGlB,eAAehtE,KAAK+sE,GAC3Bh6D,EAAS,CACPnb,KAAM,YACNw3E,UAAW72E,EACXyuB,QAASgmD,EAAc,8BAGlB,2BAA2BhtE,KAAK+sE,IACvCh6D,EAAS,CACPnb,KAAM,UACNy3E,QAAS92E,EACTyuB,QAASgmD,EAAc,mDAErB,wCAAwChtE,KAAK+sE,KAC/Ch6D,EAAOu8D,UAAY/2E,EACnBwa,EAAOg8D,OAAS,eAGXvB,EACPz6D,EAAU,CACRnb,KAAM,cACN41E,KAAMj1E,EACNyuB,QAAUgmD,EAAc,yBAGnB,WAAWhtE,KAAK+sE,GACvBh6D,EAAS,CACPnb,KAAM,YACN23E,QAASh3E,EACTyuB,QAASgmD,EAAc,8BAGlB,YAAYhtE,KAAK+sE,GACxBh6D,EAAS,CACPnb,KAAM,WACJ43E,OAAQj3E,EACRyuB,QAASgmD,EAAc,6BAGpB,sBAAsBhtE,KAAK+sE,IAAO,eAAe/sE,KAAK+sE,GAC7Dh6D,EAAS,CACPnb,KAAM,aACNm3E,OAAQ,gBACRU,WAAYl3E,EACZyuB,QAASinD,GAAqBjB,EAAc,oCAGvCW,GACP56D,EAAS,CACPnb,KAAM,QACNm3E,OAAQ,QACRpB,MAAOp1E,EACPyuB,QAASinD,GAAqBjB,EAAc,sCAE9C,cAAchtE,KAAK+sE,KAAQh6D,EAAO28D,SAAWn3E,IAEtC,QAAQyH,KAAK+sE,GACpBh6D,EAAS,CACPnb,KAAM,OACNm3E,OAAQ,OACRY,KAAMp3E,EACNyuB,QAASgmD,EAAc,2BAGlBU,EACP36D,EAAS,CACPnb,KAAM,QACNm3E,OAAQ,QACRrB,MAAOn1E,EACPyuB,QAASgmD,EAAc,yCAA2CiB,GAG7D,YAAYjuE,KAAK+sE,GACxBh6D,EAAS,CACPnb,KAAM,WACJg4E,SAAUr3E,EACVyuB,QAASgmD,EAAc,uCAAyCiB,GAG7D,YAAYjuE,KAAK+sE,GACxBh6D,EAAS,CACPnb,KAAM,WACJi4E,SAAUt3E,EACVyuB,QAASgmD,EAAc,uCAAyCiB,GAG7D,qBAAqBjuE,KAAK+sE,GACjCh6D,EAAS,CACPnb,KAAM,SACJ6oD,OAAQloD,EACRyuB,QAASgmD,EAAc,0CAGpBI,EACPr6D,EAAS,CACPnb,KAAM,UACJovB,QAASinD,GAGN,sBAAsBjuE,KAAK+sE,IAClCh6D,EAAS,CACPnb,KAAM,SACNk4E,OAAQv3E,GAEN01E,IACFl7D,EAAOiU,QAAUinD,IAGZd,GACPp6D,EAAS,CACPnb,KAAoB,UAAbu1E,EAAwB,SAAwB,QAAbA,EAAsB,OAAS,QAGvEc,IACFl7D,EAAOiU,QAAUinD,IAInBl7D,EADM,aAAa/S,KAAK+sE,GACf,CACPn1E,KAAM,YACNm4E,UAAWx3E,EACXyuB,QAASgmD,EAAc,6BAA+BiB,GAI/C,CACPr2E,KAAMo1E,EAAc,gBACpBhmD,QAASkmD,EAAe,kBAKvBn6D,EAAOi8D,QAAU,kBAAkBhvE,KAAK+sE,IACvC,2BAA2B/sE,KAAK+sE,IAClCh6D,EAAOnb,KAAOmb,EAAOnb,MAAQ,QAC7Bmb,EAAOi9D,MAAQz3E,IAEfwa,EAAOnb,KAAOmb,EAAOnb,MAAQ,SAC7Bmb,EAAOk9D,OAAS13E,IAEbwa,EAAOiU,SAAWinD,IACrBl7D,EAAOiU,QAAUinD,KAETl7D,EAAOs7D,OAAS,WAAWruE,KAAK+sE,KAC1Ch6D,EAAOnb,KAAOmb,EAAOnb,MAAQ,QAC7Bmb,EAAOm9D,MAAQ33E,EACfwa,EAAOiU,QAAUjU,EAAOiU,SAAWgmD,EAAc,0BAI9Cj6D,EAAO66D,eAAiBR,IAAWr6D,EAAOy6D,MAGnCz6D,EAAO66D,cAAgBT,GACjCp6D,EAAOo6D,GAAa50E,EACpBwa,EAAOo9D,IAAM53E,EACbwa,EAAOg8D,OAAS,OACPjB,GACT/6D,EAAO+6D,IAAMv1E,EACbwa,EAAOg8D,OAAS,SACPX,GACTr7D,EAAOq7D,KAAO71E,EACdwa,EAAOg8D,OAAS,QACPlB,GACT96D,EAAO86D,QAAUt1E,EACjBwa,EAAOg8D,OAAS,WACPhB,IACTh7D,EAAOg7D,MAAQx1E,EACfwa,EAAOg8D,OAAS,UAjBhBh8D,EAAOq6D,QAAU70E,EACjBwa,EAAOg8D,OAAS,WAoClB,IAAIqB,EAAY,GACZr9D,EAAO86D,QACTuC,EAnBF,SAA4Bh3E,GAC1B,OAAQA,GACN,IAAK,KAAM,MAAO,KAClB,IAAK,KAAM,MAAO,KAClB,IAAK,SAAU,MAAO,OACtB,IAAK,SAAU,MAAO,KACtB,IAAK,SAAU,MAAO,OACtB,IAAK,SAAU,MAAO,QACtB,IAAK,SAAU,MAAO,IACtB,IAAK,SAAU,MAAO,IACtB,IAAK,SAAU,MAAO,MACtB,IAAK,UAAW,MAAO,KACvB,QAAS,QAOCi3E,CAAkBrD,EAAc,mCACnCj6D,EAAO66D,aAChBwC,EAAYpD,EAAc,0CACjBj6D,EAAO+6D,IAEhBsC,GADAA,EAAYpD,EAAc,iCACJ/sE,QAAQ,SAAU,KAC/BktE,EAETiD,GADAA,EAAYpD,EAAc,uCACJ/sE,QAAQ,SAAU,KAC/BmtE,EACTgD,EAAYpD,EAAc,+BACjBj6D,EAAO46D,MAChByC,EAAYpD,EAAc,iCACjBj6D,EAAO08D,WAChBW,EAAYpD,EAAc,mCACjBj6D,EAAO48D,KAChBS,EAAYpD,EAAc,wBACjBj6D,EAAO26D,QAChB0C,EAAYpD,EAAc,8BAExBoD,IACFr9D,EAAOu9D,UAAYF,GAIrB,IAAIG,GAAkBx9D,EAAO86D,SAAWuC,EAAUzwE,MAAM,KAAK,GAkD7D,OAhDKuuE,GACAZ,GACa,QAAbH,GACCC,IAA8B,GAAlBmD,GAAwBA,GAAkB,IAAMpC,IAC7Dp7D,EAAOy6D,KAEVz6D,EAAOm7D,OAAS31E,GAEb41E,GACa,UAAbhB,GACa,QAAbA,GACAC,GACAC,GACAt6D,EAAO08D,YACP18D,EAAO46D,OACP56D,EAAO48D,QAEV58D,EAAOo7D,OAAS51E,GAKdwa,EAAOi8D,QACNj8D,EAAOk8D,MAAQl8D,EAAOiU,SAAW,IACjCjU,EAAOy7D,eAAiBz7D,EAAOiU,SAAW,IAC5CjU,EAAOo8D,SAAWp8D,EAAOiU,SAAW,GAClCjU,EAAO0tC,QAAU1tC,EAAOiU,SAAW,IACnCjU,EAAOu7D,gBAAkBv7D,EAAOiU,SAAW,GAC3CjU,EAAOs8D,SAAWt8D,EAAOiU,SAAW,IACpCjU,EAAO+8D,QAAU/8D,EAAOiU,SAAW,GACnCjU,EAAOs7D,OAASt7D,EAAOiU,SAAW,IAClCjU,EAAOo9D,KAAOp9D,EAAOu9D,WAAav9D,EAAOu9D,UAAU3wE,MAAM,KAAK,IAAM,GACpEoT,EAAO08D,YAAc18D,EAAOiU,SAAW,MACpCjU,EAAO88D,UAAY98D,EAAOiU,SAAW,GAE3CjU,EAAOhN,EAAIxN,EAEHwa,EAAOk8D,MAAQl8D,EAAOiU,QAAU,IACrCjU,EAAO0tC,QAAU1tC,EAAOiU,QAAU,IAClCjU,EAAOs8D,SAAWt8D,EAAOiU,QAAU,IACnCjU,EAAO+8D,QAAU/8D,EAAOiU,QAAU,GAClCjU,EAAOs7D,OAASt7D,EAAOiU,QAAU,IACjCjU,EAAOo9D,KAAOp9D,EAAOu9D,WAAav9D,EAAOu9D,UAAU3wE,MAAM,KAAK,GAAK,GAChEoT,EAAO88D,UAAY98D,EAAOiU,QAAU,GAE1CjU,EAAOrb,EAAIa,EACNwa,EAAOvN,EAAIjN,EAEXwa,EAGT,IAAIytC,EAASssB,EAA4B,oBAAdhiC,WAA4BA,UAAUmV,WAAkB,IAuBnF,SAASuwB,EAAoBxpD,GAC3B,OAAOA,EAAQrnB,MAAM,KAAKG,OAU5B,SAASF,EAAI4sD,EAAK57B,GAChB,IAAiBv5B,EAAb0b,EAAS,GACb,GAAI7P,MAAMjK,UAAU2G,IAClB,OAAOsD,MAAMjK,UAAU2G,IAAIpI,KAAKg1D,EAAK57B,GAEvC,IAAKv5B,EAAI,EAAGA,EAAIm1D,EAAI1sD,OAAQzI,IAC1B0b,EAAOpS,KAAKiwB,EAAS47B,EAAIn1D,KAE3B,OAAO0b,EAeT,SAASguC,EAAgB0vB,GAgBvB,IAdA,IAAIC,EAAY9sE,KAAK6gC,IAAI+rC,EAAoBC,EAAS,IAAKD,EAAoBC,EAAS,KACpFE,EAAS/wE,EAAI6wE,EAAU,SAAUzpD,GACnC,IAAI4pD,EAAQF,EAAYF,EAAoBxpD,GAM5C,OAAOpnB,GAHPonB,GAAoB,IAAI9jB,MAAM0tE,EAAQ,GAAGvwE,KAAK,OAG3BV,MAAM,KAAM,SAAUkxE,GACvC,OAAO,IAAI3tE,MAAM,GAAK2tE,EAAM/wE,QAAQO,KAAK,KAAOwwE,IAC/CC,cAIIJ,GAAa,GAAG,CAEvB,GAAIC,EAAO,GAAGD,GAAaC,EAAO,GAAGD,GACnC,OAAO,EAEJ,GAAIC,EAAO,GAAGD,KAAeC,EAAO,GAAGD,GAO1C,OAAQ,EANR,GAAkB,IAAdA,EAEF,OAAO,GA2Bf,SAASK,EAAqBC,EAAaC,EAAYlE,GACrD,IAAImE,EAAU1wB,EAGY,iBAAfywB,IACTlE,EAAKkE,EACLA,OAAa,QAGI,IAAfA,IACFA,GAAa,GAEXlE,IACFmE,EAAUpE,EAAOC,IAGnB,IAAI/lD,EAAU,GAAKkqD,EAAQlqD,QAC3B,IAAK,IAAI8G,KAAWkjD,EAClB,GAAIA,EAAY93E,eAAe40B,IACzBojD,EAAQpjD,GAAU,CACpB,GAAoC,iBAAzBkjD,EAAYljD,GACrB,MAAM,IAAI9sB,MAAM,6DAA+D8sB,EAAU,KAAO1oB,OAAO4rE,IAIzG,OAAOjwB,EAAgB,CAAC/5B,EAASgqD,EAAYljD,KAAa,EAKhE,OAAOmjD,EA+BT,OAvKAzwB,EAAOxgD,KAAO,SAAUmxE,GACtB,IAAK,IAAI95E,EAAI,EAAGA,EAAI85E,EAAYrxE,SAAUzI,EAAG,CAC3C,IAAI+5E,EAAcD,EAAY95E,GAC9B,GAA0B,iBAAf+5E,GACLA,KAAe5wB,EACjB,OAAO,EAIb,OAAO,GA8ITA,EAAOuwB,qBAAuBA,EAC9BvwB,EAAOO,gBAAkBA,EACzBP,EAAO6wB,MANP,SAAeL,EAAaC,EAAYlE,GACtC,OAAQgE,EAAqBC,EAAaC,EAAYlE,IAYxDvsB,EAAOH,QAAUysB,EAMjBtsB,EAAOssB,OAASA,EACTtsB,GAnmB6B1pD,EAAOD,QAASC,EAAOD,QAAUg2E,IACjB91E,EAAAA,IAAAA,CAE9C,SAF2D81E,iCCRnE11E,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAghD,IAAA,IAAAsH,EAAAn6E,EAAA,GAQA,SAASo6E,EAAYC,EAAQC,GAEzB,IAAKA,EACD,OAAO,EAIX,GAAID,EAAO1xE,SAAW2xE,EAAO3xE,OACzB,OAAO,EAGX,IAAK,IAAIzI,EAAI,EAAGC,EAAIk6E,EAAO1xE,OAAQzI,EAAIC,EAAGD,IAEtC,GAAIm6E,EAAOn6E,aAAc6L,OAASuuE,EAAOp6E,aAAc6L,OAEnD,IAAKsuE,EAAOn6E,GAAGq6E,OAAOD,EAAOp6E,IACzB,OAAO,OAER,GAAIm6E,EAAOn6E,KAAOo6E,EAAOp6E,GAG5B,OAAO,EAIf,OAAO,EAQI,SAAS2yE,EAAU2H,EAAOC,GAGrC,GAFA9uE,KAAK6uE,MAAQA,EACb7uE,KAAK8uE,SAAWA,GACXD,EACD,MAAM,IAAI3wE,MAAM,yBACb,IAAK4wE,EACR,MAAM,IAAI5wE,MAAM,4BAQxBgpE,EAAU/wE,UAAUixE,YAAc,WAE9B,IAAM2H,EAAW/uE,KAAK6uE,MAAMp2B,kBACtBu2B,EAAehvE,KAAK8uE,SAASr2B,kBAC7Bw2B,EAAW,GAoFjB,OAlFAh6E,OAAOy5B,KAAKsgD,GAAc/tE,QAAQ,SAAAiuE,GAC9B,IAAMC,EAAUJ,EAASG,GACnBE,EAAcJ,EAAaE,GAE5BC,IAAWC,GAQhBn6E,OAAOy5B,KAAK0gD,EAAYh2C,OAAOn4B,QAAQ,SAAA+vB,GACnC,IAAkD,IAA9C/7B,OAAOy5B,KAAKygD,EAAQ/1C,OAAO96B,QAAQ0yB,GAG9Bi+C,EAASC,KACVD,EAASC,GAAkB,CACvBr2B,WAAYu2B,EAAYv2B,WACxBC,IAAKs2B,EAAYt2B,IACjB1f,MAAO,GACPK,WAAY,KAGpBw1C,EAASC,GAAgB91C,MAAMpI,GAAQo+C,EAAYh2C,MAAMpI,QACtD,GAAIo+C,EAAYh2C,MAAMpI,GAAMmH,OACpBg3C,EAAQ/1C,MAAMpI,GAAMmH,MAAO,MAGOx9B,IADvBw0E,EAAQ/1C,MAAMpI,GAAMmH,MAAMyB,KAC5C,SAAAxqB,GAAI,OAA8B,IAA1BA,EAAK9Q,QAAQ,kBAEoB3D,IADtBy0E,EAAYh2C,MAAMpI,GAAMmH,MAAMyB,KACjD,SAAAxqB,GAAI,OAA8B,IAA1BA,EAAK9Q,QAAQ,aAGhB2wE,EAASC,KACVD,EAASC,GAAkB,CACvBr2B,WAAYu2B,EAAYv2B,WACxBC,IAAKs2B,EAAYt2B,IACjB1f,MAAO,GACPK,WAAY,KAGpBw1C,EAASC,GAAgB91C,MAAMpI,GACzBo+C,EAAYh2C,MAAMpI,OAMpCo+C,EAAY31C,WAAWx4B,QAAQ,SAAAouE,GAK3B,IAFA,IAAIn0D,GAAU,EAEL3mB,EAAI,EAAGA,EAAI46E,EAAQ11C,WAAWz8B,OAAQzI,IAAK,CAChD,IAAM+6E,EAAcH,EAAQ11C,WAAWllC,GAEvC,GAAI86E,EAAev1C,YAAcw1C,EAAYx1C,WACtC20C,EAAYY,EAAej2C,MAAOk2C,EAAYl2C,OAAQ,CAEzDle,GAAU,EACV,OAIHA,IAII+zD,EAASC,KACVD,EAASC,GAAkB,CACvBr2B,WAAYu2B,EAAYv2B,WACxBC,IAAKs2B,EAAYt2B,IACjB1f,MAAO,GACPK,WAAY,KAGpBw1C,EAASC,GAAgBz1C,WAAW57B,KAAKwxE,OAvE7CJ,EAASC,GAAkBE,IA4E5BH,GAMX/H,EAAU/wE,UAAUqjD,SAAW,SAAS+1B,GACpC,IAAMC,EAAgBxvE,KAAKonE,cAEvBqI,GAAW,EA+Df,OA7DAx6E,OAAOy5B,KAAK8gD,GAAevuE,QAAQ,SAAA43C,GAC/B42B,GAAW,EACX,IAAMn5C,EAAQk5C,EAAc32B,GAE5B02B,EAAO36E,EAAE,UAAW,CAAEE,KAAMwhC,EAAMwiB,MAElCy2B,EAAO36E,EAAE,cACL,CAAE4b,MAAO,6BACL8lB,MAAOA,EAAMwiB,MAKrB7jD,OAAOy5B,KAAK4H,EAAM8C,OAAOn4B,QAAQ,SAAAsgD,GAC7B,IAAMmuB,EAAYp5C,EAAM8C,MAAMmoB,GAE9BguB,EAAO36E,EAAE,SAAU,CAAE4b,MAAO,oCAC5B++D,EAAOzoE,MAAM,CAAEkqB,KAAM0+C,EAAU1+C,OAG/B0+C,EAAUv3C,MAAMl3B,QAAQ,SAAAmO,GACpB,IAAM4pC,EAAM5pC,EAAK9Q,QAAQ,KACnBi8C,EAAKnrC,EAAKsP,OAAOs6B,EAAM,GAG7B,GADAu2B,EAAO36E,EAAE,cACgB,IAArB2lD,EAAGj8C,QAAQ,KACXixE,EAAOzoE,MAAM,CAAEhS,KAAMylD,QAClB,CACH,IAAMo1B,EAAKp1B,EAAG19C,MAAM,IAAK,GACnB/H,EAAO66E,EAAG,GACVn6E,EAAQ+/B,EAAAA,EAAQC,mBAAmBm6C,EAAG,IAE5CJ,EAAOzoE,MAAM,CAAEhS,KAAAA,IACfy6E,EAAOzoE,MAAM,CAAEtR,MAAAA,IAEnB+5E,EAAO7+D,OAEX6+D,EAAO7+D,OAIX4lB,EAAMmD,WAAWx4B,QAAQ,SAAAu5B,GACjBA,EAAUpB,MAAMp8B,SAEhBuyE,EAAO36E,EAAE,aAAc,CACnBklC,UAAWU,EAAUV,UACrBtpB,MAAO,oCAGXgqB,EAAUpB,MAAMn4B,QAAQ,SAAA+vB,GACpBu+C,EAAO36E,EAAE,SAAU,CAAEo8B,KAAAA,IAChBtgB,OAET6+D,EAAO7+D,QAIf6+D,EAAO7+D,KACP6+D,EAAO7+D,OAGJ++D,kBCtNX,IAOIG,EACAC,EARAC,EAAU97E,EAAOD,QAAU,GAU/B,SAASg8E,IACL,MAAM,IAAI7xE,MAAM,mCAEpB,SAAS8xE,IACL,MAAM,IAAI9xE,MAAM,qCAsBpB,SAAS+xE,EAAWC,GAChB,GAAIN,IAAqBhwE,WAErB,OAAOA,WAAWswE,EAAK,GAG3B,IAAKN,IAAqBG,IAAqBH,IAAqBhwE,WAEhE,OADAgwE,EAAmBhwE,WACZA,WAAWswE,EAAK,GAE3B,IAEI,OAAON,EAAiBM,EAAK,GAC/B,MAAMlxE,GACJ,IAEI,OAAO4wE,EAAiBl7E,KAAK,KAAMw7E,EAAK,GAC1C,MAAMlxE,GAEJ,OAAO4wE,EAAiBl7E,KAAKsL,KAAMkwE,EAAK,MAvCnD,WACG,IAEQN,EADsB,mBAAfhwE,WACYA,WAEAmwE,EAEzB,MAAO/wE,GACL4wE,EAAmBG,EAEvB,IAEQF,EADwB,mBAAjBj4D,aACcA,aAEAo4D,EAE3B,MAAOhxE,GACL6wE,EAAqBG,GAjB5B,GAwED,IAEIG,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAanzE,OACbozE,EAAQD,EAAa9yE,OAAO+yE,GAE5BE,GAAc,EAEdF,EAAMpzE,QACNwzE,KAIR,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAIt4D,EAAUk4D,EAAWM,GACzBF,GAAW,EAGX,IADA,IAAI1vE,EAAMyvE,EAAMpzE,OACV2D,GAAK,CAGP,IAFAwvE,EAAeC,EACfA,EAAQ,KACCE,EAAa3vE,GACdwvE,GACAA,EAAaG,GAAYj+D,MAGjCi+D,GAAc,EACd3vE,EAAMyvE,EAAMpzE,OAEhBmzE,EAAe,KACfE,GAAW,EAnEf,SAAyBI,GACrB,GAAIZ,IAAuBj4D,aAEvB,OAAOA,aAAa64D,GAGxB,IAAKZ,IAAuBG,IAAwBH,IAAuBj4D,aAEvE,OADAi4D,EAAqBj4D,aACdA,aAAa64D,GAExB,IAEWZ,EAAmBY,GAC5B,MAAOzxE,GACL,IAEI,OAAO6wE,EAAmBn7E,KAAK,KAAM+7E,GACvC,MAAOzxE,GAGL,OAAO6wE,EAAmBn7E,KAAKsL,KAAMywE,KAgD7CC,CAAgB34D,IAiBpB,SAAS44D,EAAKT,EAAK32C,GACfv5B,KAAKkwE,IAAMA,EACXlwE,KAAKu5B,MAAQA,EAYjB,SAASq3C,KA5BTd,EAAQe,SAAW,SAAUX,GACzB,IAAIvyE,EAAO,IAAIyC,MAAMxC,UAAUZ,OAAS,GACxC,GAAIY,UAAUZ,OAAS,EACnB,IAAK,IAAIzI,EAAI,EAAGA,EAAIqJ,UAAUZ,OAAQzI,IAClCoJ,EAAKpJ,EAAI,GAAKqJ,UAAUrJ,GAGhC67E,EAAMvyE,KAAK,IAAI8yE,EAAKT,EAAKvyE,IACJ,IAAjByyE,EAAMpzE,QAAiBqzE,GACvBJ,EAAWO,IASnBG,EAAKx6E,UAAUkc,IAAM,WACjBrS,KAAKkwE,IAAIpyE,MAAM,KAAMkC,KAAKu5B,QAE9Bu2C,EAAQgB,MAAQ,UAChBhB,EAAQ9kD,SAAU,EAClB8kD,EAAQiB,IAAM,GACdjB,EAAQkB,KAAO,GACflB,EAAQ5rD,QAAU,GAClB4rD,EAAQnC,SAAW,GAInBmC,EAAQnjD,GAAKikD,EACbd,EAAQ98B,YAAc49B,EACtBd,EAAQlsB,KAAOgtB,EACfd,EAAQhwB,IAAM8wB,EACdd,EAAQhjD,eAAiB8jD,EACzBd,EAAQjhD,mBAAqB+hD,EAC7Bd,EAAQviD,KAAOqjD,EACfd,EAAQmB,gBAAkBL,EAC1Bd,EAAQoB,oBAAsBN,EAE9Bd,EAAQvsB,UAAY,SAAUzuD,GAAQ,MAAO,IAE7Cg7E,EAAQqB,QAAU,SAAUr8E,GACxB,MAAM,IAAIoJ,MAAM,qCAGpB4xE,EAAQsB,IAAM,WAAc,MAAO,KACnCtB,EAAQuB,MAAQ,SAAUC,GACtB,MAAM,IAAIpzE,MAAM,mCAEpB4xE,EAAQyB,MAAQ,WAAa,OAAO,iCCvLpCl9E,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,kBAAA,WAAA,OAAAsrD,IAGO,IAAMA,EAAkB,wDCH/Bn9E,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAurD,IAgBAt9E,OAAOu9E,aAAev9E,OAAOu9E,cAAgBv9E,OAAOw9E,mBAEpD,IAAInuB,EAAU,KAkEC,SAASiuB,EAAoBllD,EAAQ8oC,EAAUj2D,GAC1DY,KAAKusB,OAASA,EACdvsB,KAAK4xE,WAAa,KAClB5xE,KAAK6xE,cAAgBxc,EACrBr1D,KAAKy2C,WAAa,EAClBz2C,KAAKZ,SAAWA,EArEhBjL,OAAOu9E,eACPluB,EAAU,IAAIkuB,cAUNI,SAAWtuB,EAAQsuB,UAgE/BL,EAAoBt7E,UAAU4vB,MAAQ,WAClC,GAAK0rD,EAAoBM,wBAAzB,CAGAvuB,EAAQnuC,SACR,IAAM28D,EAAWxuB,EAAQyuB,iBAEzBD,EAASE,sBAxF2B,GAyFpCF,EAASG,QA/FsB,KAiGhB3uB,EAAQ4uB,wBAAwBpyE,KAAKusB,QAE7C3W,QAAQo8D,GAGf,IAAMpvD,EAAO5iB,KAEbA,KAAK4xE,WAAapnC,YACd,WACI,IAAMjR,EAAQ,IAAI84C,WAAWL,EAASM,mBAEtCN,EAASO,sBAAsBh5C,GAC/B,IAzDUi5C,EAAUC,EACxBj9E,EACEk9E,EAuDQj8B,EA9ElB,SAAoCk8B,GAMhC,IAJA,IAAIC,EAAY,EAEV51E,EAAS21E,EAAQ31E,OAEdzI,EAAI,EAAGA,EAAIyI,EAAQzI,IACpBq+E,EAAYD,EAAQp+E,KACpBq+E,EAAYD,EAAQp+E,IAI5B,OAAOs+E,aAAaD,EAAY,KAAO,KAAKE,QAAQ,IAkEzBC,CAA2Bx5C,GAE1Ckd,IAAe7zB,EAAK6zB,aACpB7zB,EAAK6zB,YA5DC+7B,EA4DyB/7B,EA5Dfg8B,EA4D2B7vD,EAAK6zB,WA3DxDjhD,EAAQ,EAIRA,GAHEk9E,EAAOD,EAAYD,GAEd,GACCC,EAAY,GACbC,GAAQ,GACPD,EAAY,GAEZD,EAGLK,WAAWr9E,EAAMs9E,QAAQ,KAiDpBlwD,EAAKxjB,SAASwjB,EAAK6zB,cAG3Bz2C,KAAK6xE,iBAObJ,EAAoBt7E,UAAU64B,KAAO,WAC7BhvB,KAAK4xE,aACL9pC,cAAc9nC,KAAK4xE,YACnB5xE,KAAK4xE,WAAa,OAU1BH,EAAoBM,sBAAwB,WACxC,OAAOhsC,QAAQyd,qBCjJnB,IAAMwvB,EAAyBj4E,EAAQ,KAQjCmwB,EAAa,CAgBfC,WAhBe,SAiBP4d,EACAt7B,EACAwlE,EACAC,EACAC,EACAtf,GACJ,IAAMh/D,EAAIyR,SAEJ8sE,EAASv+E,EAAE0X,cADD,UAEV8mE,EAAgBx+E,EAAE6lB,qBAFR,UAEsC,GAItD,GAFA04D,EAAO3lE,MAAQA,EAEXylE,EAAa,CAGb,IAAMI,EAAWN,IAEjB,GAAIM,EAAU,CACV,IAAMC,EAAYD,EAASvqC,IACrByqC,EACAD,EAAUh1E,UAAU,EAAGg1E,EAAUE,YAAY,KAAO,GAEtDF,GAAaC,IAEbzqC,EAAMyqC,EAAgBzqC,IAK9BoqC,IACAC,EAAOM,OAASP,GAEhBtf,IACAuf,EAAOzuD,QAAUkvC,GAGrBuf,EAAOrqC,IAAMA,EACTkqC,EACAI,EAAc1iE,WAAWgjE,aAAaP,EAAQC,GAE9CA,EAAc1iE,WAAWrE,YAAY8mE,KAOjDp/E,EAAOD,QAAUm3B,gCCzEjB72B,EAAAgB,EAAA6wB,GAAA7xB,EAAAQ,EAAAqxB,EAAA,KAAA,WAAA,OAAA0tD,IAAAv/E,EAAAQ,EAAAqxB,EAAA,MAAA,WAAA,OAAA2tD,IAKO,IAAMD,EAAK,KAOLC,EAAM,26BCLnB,IAAM3qD,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAKnBuqD,EAAoB,CACtBC,WAAc,SACdC,aAAgB,WAChBC,YAAe,WAQnB,SAASC,EAA8BjlC,EAAa9/B,GAChD8/B,EAAYklC,WAAahlE,MAMRilE,cAcjB,SAAAA,EACQniC,EACA1lB,EACAqgB,EACAynC,EACAC,EACAxnC,GAAW,IAAAjF,EAAA,mGAAAJ,CAAAznC,KAAAo0E,IACfvsC,EAAAH,EAAA1nC,KAAA2nC,EAAAysC,GAAA1/E,KAAAsL,QAGKuqC,iBAAmB1C,EAAKmL,YAC7BnL,EAAKgY,oBAAsBhY,EAAKiY,IAAMjY,EAAK/a,eAM3C+a,EAAK0sC,WAAa,GAClB1sC,EAAKoK,WAAaA,EAClBpK,EAAK4O,YAAc,EACnB5O,EAAKr2B,KAAO8iE,EACZzsC,EAAK+E,MAAQA,EACb/E,EAAKiF,UAAYA,EACjBjF,EAAKzsC,SAAW,IAAIuvB,IASpBkd,EAAK2sC,UAAW,EAShB3sC,EAAK4sC,uBAAyBJ,EAE9BxsC,EAAK6sC,WAAWnoD,GArCDsb,wPApBiBhd,EAAAA,6CAoExBrZ,EAAMrC,GACd,GAAK2kE,EAAkB19E,eAAeob,IAWtC,GANIrC,EACAnP,KAAK5E,SAASgxB,IAAI5a,EAAMrC,GAExBnP,KAAK5E,SAAS0zB,OAAOtd,GAGrBxR,KAAKusB,OAAQ,CAAA,IAAAiB,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IACb,IAAA,IAAAgzB,EAAAC,EAAoB5tB,KAAKusB,OAAOiiB,YAAhCl5C,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA6C,CAAAG,EAAAn4B,MACnCs+E,EAAkBtiE,IAASrC,GAFxB,MAAA8K,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,UAVbxE,EAAOtZ,MAAP,wBAAAvS,OAAqCmU,kDAsBzC,GAAKxR,KAAKusB,OAAV,CADkB,IAAA8B,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IAQlB,IAAA,IAAA6zB,EAAAC,EAAmBzuB,KAAK5E,SAASszB,OAAjCp5B,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAAyC,CAAA,IAA9B7c,EAA8Bgd,EAAAh5B,MAAAg6B,GAAA,EAAAC,GAAA,EAAAC,OAAA/0B,EAAA,IAErC,IAAA,IAAAg1B,EAAAC,EAAyB5vB,KAAKusB,OAAO2Z,iBAArC5wC,OAAAw4B,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAuD,CAAAG,EAAAn6B,MACxCs+E,EAAkBtiE,SAAS7W,GAHL,MAAAsf,GAAAwV,GAAA,EAAAC,EAAAzV,EAAA,QAAA,IAAAuV,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,QAAA,GAAAqB,EAAA,MAAAC,KARvB,MAAAzV,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,GAcdvuB,KAAKy0E,wBACLP,EAA8Bl0E,KAAKusB,YAAQ5xB,QAb3CuuB,EAAOnZ,KAAP,GAAA1S,OACO2C,KADP,0FAwBGusB,GACP,GAAIvsB,KAAKusB,SAAWA,IAIpBvsB,KAAKusB,OAASA,EAMVvsB,KAAKusB,QAAQ,CAAA,IAAAuD,GAAA,EAAAC,GAAA,EAAAC,OAAAr1B,EAAA,IACb,IAAA,IAAAs1B,EAAAC,EAAmBlwB,KAAK5E,SAASszB,OAAjCp5B,OAAAw4B,cAAAgC,GAAAG,EAAAC,EAAAnC,QAAAC,MAAA8B,GAAA,EAAyC,CAAA,IAA9Bte,EAA8Bye,EAAAz6B,MACrCwK,KAAK20E,YAAYnjE,EAAMxR,KAAK5E,SAAShG,IAAIoc,KAFhC,MAAAyI,GAAA8V,GAAA,EAAAC,EAAA/V,EAAA,QAAA,IAAA6V,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,QAAA,GAAA2B,EAAA,MAAAC,GAIThwB,KAAKy0E,wBACLP,EACIl0E,KAAKusB,OAAQvsB,KAAKy0E,2DAS9B,OAAOz0E,KAAKwR,4CAOZ,OAAOxR,KAAK21C,YAAc9I,EAAAA,+CAU1B,OAAO7sC,KAAK4sC,OAAS5sC,KAAK4sC,MAAM9b,6CAOhC,OAAO9wB,KAAK21C,YAAc9I,EAAAA,oCAS1B,MAAM,IAAI3uC,MAAM,2EAOhB,OAAO8B,KAAKusB,6CAQZ,OAAOvsB,KAAKusB,OAASvsB,KAAKusB,OAAOttB,GAAK,wCAQtC,OAAOe,KAAK4sC,2CAQZ,OAAO5sC,KAAK4sC,MAAQ5sC,KAAK4sC,MAAM3tC,GAAK,6CASpC,OAAIe,KAAK22C,eACE,MAGJ32C,KAAK8sC,UAAY9sC,KAAK8sC,UAAY,0DASrB8nC,GAChB50E,KAAKiyC,YAAc2iC,GACnB50E,KAAKiyC,WAAW4iC,eAAe70E,KAAM40E,kCActCA,GACC50E,KAAKusB,SACLvsB,KAAK60E,eAAeD,GACpBptC,EAAAA,EAASe,kBAAkBqsC,EAAW50E,KAAKusB,SAE/CvsB,KAAKu0E,WAAW12E,KAAK+2E,GACrB50E,KAAK80E,wBAAwBF,GAC7B50E,KAAK+0E,mBAAmBH,kCAWrBA,GACH,IAAK,IAAIzkD,EAAKnwB,KAAKu0E,WAAYhgF,EAAI47B,EAAGnzB,OAAS,EAAGzI,GAAK,IAAKA,EAAG,CAC3D,IAAMK,EAAIu7B,EAAG57B,GAERqgF,IACD50E,KAAKg1E,eAAepgF,GACpB4yC,EAAAA,EAASe,kBAAkB3zC,EAAG,OAE7BggF,GAAahgF,IAAMggF,GACpBzkD,EAAG7yB,OAAO/I,EAAG,GAIjBqgF,IACA50E,KAAKg1E,eAAeJ,GACpBptC,EAAAA,EAASe,kBAAkBqsC,EAAW,8CAW/BA,2CAWAA,+CAYIA,sCAcf,OAJA50E,KAAK6uB,qBAEL7uB,KAAKw0E,UAAW,EAETppC,QAAQC,qFAgBf,OAAIrrC,KAAKusB,OACEib,EAAAA,EAASkB,YAAY1oC,KAAKusB,QAG9B,wCAUP,YAAkC,IAAvBvsB,KAAKusB,OAAO0oD,QACZj1E,KAAKusB,OAAO0oD,6CAcbx+B,EAAYtoB,GAClBnuB,KAAKy2C,aAAeA,IACpBz2C,KAAKy2C,WAAaA,EAClBz2C,KAAKutB,KACD+rC,EAAAA,0BACA7iB,EACAtoB,sCASR,IAAMulB,EAAW1zC,KAAKk1E,cAChBC,EAAUn1E,KAAKo1E,aAErB,OAAO1hC,GAAYyhC,EAAZ,GAAA93E,OAAyBq2C,EAAzB,KAAAr2C,OAAqC83E,GAAY,4CAW7CtzC,GAAqB,IAAA6J,EAAA1rC,KAChC,OAAKwnC,EAAAA,EAAS6H,wBAAwB,UAOlCrvC,KAAKumE,eACEn7B,QAAQC,UAIfD,QAAQ+K,IACJn2C,KAAKu0E,WAAWz3E,IACZ,SAAA0b,GAAO,OACHA,EAAQ8pB,UAAUT,GACb2J,MAAM,SAAA57B,GAOH,MANAsZ,EAAOnZ,KACH,+GAGAyI,EACA5I,GACEA,OAGrBs4B,KAAK,WACFwD,EAAKne,KACD+rC,EAAAA,2BACAz3B,KA5BLuJ,QAAQE,OACX,IAAIptC,MAAM,8JCvanB,SAASszC,EAAqByJ,GACjC,IAAIo6B,EAAYp6B,EAMhB,OAJIA,GAAUp6C,OAAOy0E,mBACjBD,EAAY,GAGTA,EAAY,EAfvBhhF,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAsrB,6LCKM+jC,aAWF,SAAAA,EAAYhjD,EAAQijD,EAAaC,gGAAchuC,CAAAznC,KAAAu1E,GAC3Cv1E,KAAK01E,QAAUnjD,EACfvyB,KAAK21E,eAAeH,GACpBx1E,KAAK41E,cAAgBH,IAAgB,EACrCz1E,KAAK61E,oBAAmB,GACxB71E,KAAK81E,yBAA2B,EAChC91E,KAAK+1E,sBAAwB,EAC7B/1E,KAAKg2E,UAAW,6DAShB,OAAOh2E,KAAK01E,iDASZ,OAAO11E,KAAKw1E,mDASDS,GACXj2E,KAAKw1E,YAAcS,yCASnB,OAAOj2E,KAAK41E,0DASZ,OAAO51E,KAAK+1E,sBAAwB,6CAWrBG,GACf,IAAKl2E,KAAKm2E,qBAAuBD,EAC7Bl2E,KAAK+1E,sBAAwBtjE,KAAK8K,WAC/B,GAAIvd,KAAKm2E,sBAAwBD,EAAsB,CAC1D,IACME,EADM3jE,KAAK8K,MACSvd,KAAK+1E,sBAE/B/1E,KAAK81E,0BAA4BM,EACjCp2E,KAAK+1E,sBAAwB,yDAUjC,IAAIM,EAAQr2E,KAAK81E,yBAMjB,OAJI91E,KAAKm2E,sBACLE,GAAS5jE,KAAK8K,MAAQvd,KAAK+1E,uBAGxBM,oCASP,OAAOr2E,KAAKg2E,iDASZh2E,KAAKg2E,UAAW,EAChBh2E,KAAK61E,oBAAmB,wCAIhC7hF,EAAOD,QAAUwhF,iBCjIjBvhF,EAAOD,QAAU,SAASC,GAoBzB,OAnBKA,EAAOsiF,kBACXtiF,EAAOuiF,UAAY,aACnBviF,EAAOwiF,MAAQ,GAEVxiF,EAAOyiF,WAAUziF,EAAOyiF,SAAW,IACxCxhF,OAAOC,eAAelB,EAAQ,SAAU,CACvCmB,YAAY,EACZC,IAAK,WACJ,OAAOpB,EAAOQ,KAGhBS,OAAOC,eAAelB,EAAQ,KAAM,CACnCmB,YAAY,EACZC,IAAK,WACJ,OAAOpB,EAAOO,KAGhBP,EAAOsiF,gBAAkB,GAEnBtiF,kBCRRA,EAAOD,QAZsB,CASzB2iF,iBAAkB,yvCCkBtB,IAAMxtD,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAMJmoB,cAoBjB,SAAAA,EAAA/I,GAYG,IAAAd,MAXC7E,EAWD2F,EAXC3F,SACAE,EAUDyF,EAVCzF,WACA9C,EASDuI,EATCvI,UACAsD,EAQDiF,EARCjF,WACAiO,EAODhJ,EAPCgJ,MACA1O,EAMD0F,EANC1F,SACA0J,EAKDhE,EALCgE,WACApgB,EAIDoc,EAJCpc,OACAqgB,EAGDjE,EAHCiE,MACAE,EAEDnE,EAFCmE,UAED6pC,EAAAhuC,EADCmG,QAAAA,OACD,IAAA6nC,EADW,GACXA,+FAAAlvC,CAAAznC,KAAA0xC,KACC1xC,OAAA2nC,EAAA+J,GAAAh9C,KAAAsL,KACqB,KACjBusB,EACAqgB,EAC4B,WAAA,OAAM/E,EAAKta,KAAK+pB,EAAAA,sBAC5ClX,EACA0M,IANJjF,oDAQK+uC,sBAAuB,EAC5B,IAAMC,EAAS/nC,EAAQlV,KAAK,SAAA56B,GAAC,OAAIA,EAAE83E,UAAFjkC,EAAAA,EAAAhL,OAVlC,OAYKgvC,GACAhvC,EAAKkvC,mBAAmBF,GAQ5BhvC,EAAK8J,MAAQA,EACb9J,EAAK5E,SAAWA,EAChB4E,EAAK8E,WAAaA,EAEd3hB,EAAAA,EAAQod,kBAGRP,EAAKnE,WAAakJ,EAAMmF,cAActQ,OAItCoG,EAAKmvC,aAAepqC,EAAMrK,kBAK1BsF,EAAKnE,WAAa1Y,EAAAA,EAAQgO,YAAc,KAAO0K,EAGnDmE,EAAK7E,SAAWA,EAUhB6E,EAAKovC,cAAgB7rC,QAAQC,UAS7BxD,EAAKqvC,YAAch0C,EAMnB2E,EAAKsvC,aAAc,EAKnBtvC,EAAKuvC,cAAe,EAOpBvvC,EAAKwvC,eAAgB,EAQrBxvC,EAAKyvC,cAAkC,KAAlBzvC,EAAK7E,cAAkBroC,EAAYktC,EAAK7E,SAE7D6E,EAAK0vC,cAAgB,EAErB1vC,EAAK2vC,wBAA0B,SAAAzrC,GAC3B,IAAM0rC,EAAkB5vC,EAAKyvC,cAE7BzvC,EAAK6vC,+BAA+B3rC,SAMO,IAA/BlE,EAAK8vC,WAAWv1D,iBACa,IAAvBylB,EAAKyvC,gBACXvrC,EAAQnS,KAAK,SAAA/kC,GAAC,OAAIA,EAAEmuC,WAAa6E,EAAKyvC,sBAOf,IAApBG,QAAiE,IAAvB5vC,EAAKyvC,iBAE1DzvC,EAAKsvC,aAAc,IAQvBtvC,EAAK8O,gBAAkBnP,EAAAA,EAAS6H,wBAAwB,YACxDxH,EAAK+vC,4BAA8B/vC,EAAKkP,eAAehhD,KAApB88C,EAAAA,EAAAhL,KACnCL,EAAAA,EAASwL,YACL5M,EAAAA,EAAUlJ,4BACV2K,EAAK+vC,8BAGbpwC,EAAAA,EAASwL,YAAY5M,EAAAA,EAAUhJ,wBAAyByK,EAAK2vC,yBAE7D3vC,EAAKgwC,gCA9HNhwC,wPAhCsCusC,EAAAA,8CAuKrC,OAAIp0E,KAAKumE,gBAAkBvmE,KAAKm7D,UAGrBn7D,KAAKm3E,YAGsB,UAA/Bn3E,KAAK23E,WAAWv1D,YAA0BpiB,KAAKm3E,oEAO1B,IAAAzrC,EAAA1rC,KACvBA,KAAK83E,qCAIV93E,KAAK20E,YAAY,aAAc,WAC3BjpC,EAAK6rC,cAAgBpjF,OAAO83D,YAAY1uC,MACxCmuB,EAAKqsC,+BAGT/3E,KAAK20E,YAAY,eAAgB,WAC7BjpC,EAAKqsC,6BACLvtD,EAAAA,EAAWyK,oBACP2J,EAAAA,EACA,CACIyB,WAAcqL,EAAKiK,UACnBqiC,WAAc,QACdxiF,MAAOrB,OAAO83D,YAAY1uC,MAAQmuB,EAAK6rC,kBAI/Cv3E,KAAKumE,gBAAkBvmE,KAAK8sC,YAAcC,EAAAA,EAAUE,QACpDjtC,KAAK20E,YAAY,cAAe,WACvBjpC,EAAKusC,mBACNvsC,EAAKqsC,2FAajB,OAAQ/3E,KAAKumE,gBAAkBvmE,KAAK8sC,YAAcC,EAAAA,EAAUC,6DAO5D,IAAMx3C,GAASwK,KAAKi4E,kBAEpBj4E,KAAKutB,KAAKkqB,EAAAA,oBAAqBjiD,GAG/Bg1B,EAAAA,EAAW6K,cAAc8K,OAAAA,EAAAA,EAAAA,CAA4BngC,KAAK21C,UAAWngD,IACrEg1B,EAAAA,EAAWkJ,QAAQ3c,KAAKyK,UAAU,CAC9B1sB,KAAM2iD,EAAAA,oBACNjoC,IAAKha,4DAYkBu2C,GAC3B,IAAMa,EAAQ5sC,KAAK23E,WACbnxC,EAAI,GAAAnpC,OAAMuvC,EAAMpG,KAAZ,SACNI,EAASmF,EAAQnS,KAAK,SAAA/kC,GAAC,OAAIA,EAAE2xC,OAASA,GAAQ3xC,EAAEyyC,QAAUsF,EAAMtF,QAEpE,IAAKV,GAAiC,YAAvB5mC,KAAKs3E,cAA6B,CAI7C,IAAMhwC,GAASsF,EAAMtF,OAAS,IAAInqC,QAAQ,aAAc,IAExDypC,EAASmF,EAAQnS,KAAK,SAAA/kC,GAAC,OAAIA,EAAE2xC,OAASA,GAAQ3xC,EAAEyyC,QAAUA,IAI1DtnC,KAAKs3E,cADL1wC,EACqBA,EAAO5D,cAEProC,qCAWlB4xB,GACP2rD,EAAAvwC,EAAA+J,EAAAv7C,WAAA,aAAA6J,MAAAtL,KAAAsL,KAAiBusB,GAEbA,GAEAvsB,KAAKm4E,WAAan4E,KAAKo4E,UACvBlvD,EAAOrZ,MAAP,qBAAAxS,OAAkC2C,KAAKm4E,WAAvC,QAAA96E,OAAwD2C,QAExDkpB,EAAOrZ,MAAP,4BAAAxS,OAAyC2C,kDAW9B62E,GACf72E,KAAKq4E,cAAgBxB,EACrB72E,KAAKs4E,gBAAkBt4E,KAAKusB,OAC5BvsB,KAAK00E,WAAW10E,KAAKq4E,cAAcE,YAAYv4E,KAAKs4E,8DAUhDt4E,KAAKq4E,gBACLr4E,KAAKq4E,cAAcG,aACnBx4E,KAAK00E,WAAW10E,KAAKs4E,iBACrBt4E,KAAKs4E,qBAAkB39E,+CASXk8E,GACZ72E,KAAKq4E,gBACLr4E,KAAKy4E,oBACLz4E,KAAKq4E,mBAAgB19E,GAErBk8E,GACA72E,KAAK+2E,mBAAmBF,qCAUtBA,GAAQ,IAAA1pC,EAAAntC,KACd,QAAkC,IAAvBA,KAAKq4E,oBAAmD,IAAXxB,EACpD,OAAOzrC,QAAQC,UAGnB,QAAsB,IAAXwrC,IAA2BA,EAAOC,UAAU92E,MACnD,OAAOorC,QAAQE,OAAO,IAAIptC,MAAM,kCAGpC,IAAkC,IAA9B8B,KAAK42E,qBACL,OAAOxrC,QAAQE,OAAO,IAAIptC,MAAM,mCAGpC,GAAI8B,KAAKm7D,UAGL,OAFAn7D,KAAKq4E,cAAgBxB,EAEdzrC,QAAQC,UAGnB,IAAM4G,EAAajyC,KAAKiyC,WAExB,OAAKA,GAMLjyC,KAAK42E,sBAAuB,EAGrB3kC,EAAWymC,YAAY14E,MACzBkoC,KAAK,WAMF,OALAiF,EAAKwrC,oBAAoB9B,GACrB1pC,EAAKo5B,gBACLp5B,EAAKonC,WAAWtzE,QAAQ,SAAA23E,GAAI,OAAIpxC,EAAAA,EAASe,kBAAkBqwC,EAAMzrC,EAAK5gB,UAGnE0lB,EAAWzF,SAASW,KAE9BjF,KAAK,WACFiF,EAAKypC,sBAAuB,IAE/BprC,MAAM,SAAA57B,GAMH,MAHAu9B,EAAKypC,sBAAuB,EAC5BzpC,EAAKwrC,sBACLzvD,EAAOtZ,MAAM,sCAAuCA,GAC9CA,MA1BV5P,KAAK24E,oBAAoB9B,GAElBzrC,QAAQC,0CAkCnB,OAAOrrC,KAAK64E,gBAAe,oCAS3B,OAAO74E,KAAK64E,gBAAe,0CAYhB/nD,GACX,IAAMgoD,EAAW94E,KAAK+4E,UAAUhjF,KAAKiK,KAAM8wB,GAI3C,OAFA9wB,KAAKi3E,cAAgBj3E,KAAKi3E,cAAc/uC,KAAK4wC,EAAUA,GAEhD94E,KAAKi3E,gDAWNnmD,GAAO,IAAAmd,EAAAjuC,KACb,GAAIA,KAAKm7D,YAAcrqC,EACnB,OAAOsa,QAAQC,UAGnB,GAAIrrC,KAAKw0E,SACL,OAAOppC,QAAQE,OAAO,IAAI3Y,EAAAA,EAAgBoe,EAAAA,oBAG9C,IAAIlB,EAAUzE,QAAQC,UAGhB2tC,EAAc,WAAA,OAAM9vD,EAAOpZ,KAAP,QAAAzS,OAAoB4wC,EAApB,MAAA5wC,OAA6ByzB,KAEvD,GAAI9wB,KAAK22C,gBACE32C,KAAK8sC,YAAcC,EAAAA,EAAUC,UAC5BhiB,EAAAA,EAAQiuD,8BAChBD,IACIh5E,KAAK4sC,QACL5sC,KAAK4sC,MAAMssC,SAAWpoD,QAEvB,GAAIA,EACP+e,EAAU,IAAIzE,QAAQ,SAACC,EAASC,GAC5B0tC,IACA/qC,EAAKkrC,kCACD,WACQlrC,EAAKoqC,eACLpqC,EAAKwqC,oBAMTxqC,EAAKmrC,sBACLnrC,EAAKorC,aACLprC,EAAKymC,WAAW,MAChBrpC,KAEJC,SAEL,CACH0tC,IAGA,IAAMM,EAAgB,CAClBv2C,eAAgB/iC,KAAKu5E,cACrBxtC,QAAS,CAAEc,EAAAA,GACXiC,QAAS9uC,KAAKq4E,cAAgB,CAAEr4E,KAAKq4E,eAAkB,GACvDn1C,WAAYljC,KAAKw5E,uBAGjBxuD,EAAAA,EAAQod,iBACRyH,EACMrI,EAAAA,EAASyL,kCAAkCh+C,OAAOwkF,OAChD,GACAH,EACA,CAAExmD,YAAa,CAAEyO,MAAOvhC,KAAKg3E,kBAEjCh3E,KAAK0jC,aACL41C,EAAc51C,WAAa1jC,KAAK0jC,YAGpCmM,EACMrI,EAAAA,EAAS0L,+BAA+BomC,IAGlDzpC,EAAQ3H,KAAK,SAAAwxC,GACT,IAAMt5C,EAAY6N,EAAK0H,UACjBgkC,EACA3uD,EAAAA,EAAQod,iBACJsxC,EAAY9/C,KACV,SAAA9pB,GAAI,OAAIA,EAAK88B,MAAMpG,OAASpG,IAC9Bs5C,EAAY9/C,KACV,SAAA9pB,GAAI,OAAIA,EAAKswB,YAAcA,IAEvC,IAAIu5C,EAaA,MAAM,IAAIhnD,EAAAA,EAAgBqe,EAAAA,uBAU9B,OAtBI/C,EAAKymC,WAAWiF,EAAWptD,QAC3B0hB,EAAKrB,MAAQ+sC,EAAW/sC,MAIpBqB,EAAKnB,YAAc6sC,EAAW7sC,YAC9B5jB,EAAOnZ,KAAP,GAAA1S,OACO4wC,EADP,0CAEIA,EAAKnB,UAAW6sC,EAAW7sC,WAC/BmB,EAAKnB,UAAY6sC,EAAW7sC,WAMhCmB,EAAKoqC,eACLpqC,EAAK8oC,mBAAmB9oC,EAAKoqC,eAGjCpqC,EAAKsmC,WAAWz3E,IACZ,SAAA87E,GAAI,OAAIpxC,EAAAA,EAASe,kBAAkBqwC,EAAM3qC,EAAK1hB,UAE3C0hB,EAAK2rC,mCAIpB,OAAO/pC,EACF3H,KAAK,WAAA,OAAM+F,EAAK4rC,gBAAgB/oD,KAChCoX,KAAK,WAAA,OAAM+F,EAAK1gB,KAAK3F,EAAAA,mBAAoBqmB,8DASjB,IAAA4yB,EAAA7gE,KAC7B,OAAKA,KAAKiyC,WAcH,IAAI7G,QAAQ,SAACC,EAASC,GACzBu1B,EAAK5uB,WAAW6nC,uBAAuBjZ,GAClC34B,KAAKmD,EAAS,SAAAz7B,GAAK,OAAI07B,EAAO,IAAIptC,MAAM0R,QAftCw7B,QAAQC,oEA0BW0uC,EAAiBlmB,GAC1C7zD,KAAKiyC,WAKVjyC,KAAKiyC,WAAW+nC,wBAAwBh6E,MAAMkoC,KAC1C6xC,EACA,SAAAnqE,GAAK,OAAIikD,EAAc,IAAI31D,MAAM0R,MANjCmqE,4CAgBQ9jC,GAAM,IAAAmrB,EAAAphE,KAClB,OAAKA,KAAKiyC,YAAejyC,KAAKiyC,WAAWoe,KAIlC,IAAIjlB,QAAQ,SAAAC,GACf+1B,EAAKnvB,WAAWoe,KACZ+Q,EAAKzqB,eACC,eACA,gBAAgBV,EAAM5K,KAPzBD,QAAQC,4CAoBb,IAAAu2B,EAAA5hE,KACNA,KAAK24E,sBAEL,IAAI9oC,EAAUzE,QAAQC,UAkBtB,OAhBIrrC,KAAKiyC,aACLpC,EAAU7vC,KAAKiyC,WAAWymC,YAAY14E,OAGtCA,KAAKusB,SACLvsB,KAAKq5E,aACLr5E,KAAKi6E,UAGTzyC,EAAAA,EAAS1a,eAAesZ,EAAAA,EAAUhJ,wBAAyBp9B,KAAKw3E,yBAE5Dx3E,KAAK43E,6BACLpwC,EAAAA,EAAS1a,eAAesZ,EAAAA,EAAUlJ,4BAC9Bl9B,KAAK43E,6BAGN/nC,EAAQ3H,KAAK,WAAA,OAAAgwC,EAAAvwC,EAAA+J,EAAAv7C,WAAA,UAAAyrE,GAAAltE,KAAAktE,uCAYpB,OAAK5hE,KAAKusB,YAGNvsB,KAAKumE,gBAAmBvmE,KAAK44D,eAIzB54D,KAAK4sC,QAAU5sC,KAAK4sC,MAAMssC,iDASvBjnC,GACXjyC,KAAKiyC,WAAaA,EAMlB,IAAK,IAAI19C,EAAI,EAAGA,EAAIyL,KAAKu0E,WAAWv3E,OAAQzI,IACxCyL,KAAK80E,wBAAwB90E,KAAKu0E,WAAWhgF,sCAUjD,OAAO,wCASP,OAAOyL,KAAKs3E,eAAiBt3E,KAAKgjC,oDAUlC,OAAOhjC,KAAKiyC,YAAcjyC,KAAKiyC,WAAW4mB,4DAUrB1qC,EAAK+rD,GAAW,IAAAnY,EAAA/hE,KACjCk6E,EAAY,IACZl6E,KAAKo3E,cAAe,GAExB,IAAMjY,EAAqBhxC,EAAIgsD,qBAE3Bn6E,KAAKq3E,eAAwC,cAAvBlY,IACtBv/D,WAAW,WACFmiE,EAAKqV,eACNluD,EAAOnZ,KAAP,GAAA1S,OAAe0kE,EAAf,gDAAA1kE,OACM68E,IAEN1vD,EAAAA,EAAWqB,UAAU+I,UAAU+J,EAAAA,EAAe,CAAE0B,WAAc0hC,EAAKpsB,cAExE,KACH31C,KAAKq3E,eAAgB,iDAWzB,GAAIr3E,KAAKumE,gBAAkBvmE,KAAK8sC,YAAcC,EAAAA,EAAUE,OAAQ,CAQ5D,IAAImtC,EAEJ,IACIA,EAAgBp6E,KAAK4sC,MAAMmF,cAC7B,MAAO/yC,IAKT,OAAIo7E,GAAiB,eAAgBA,EAC1BA,EAAcl3C,gBAGO,IAArBljC,KAAKk3E,YACLl3E,KAAKk3E,YAMT/zC,EAAAA,EAAiBC,2CAkB5BpjC,KAAKq6E,uBAAwB,EAE7B,IACI7yC,EAAAA,EAAS+F,gBAAgBvtC,KAAKusB,QADlC,QAGIvsB,KAAKq6E,uBAAwB,2CAkB7Br6E,KAAKumE,gBACEvmE,KAAK8sC,YAAcC,EAAAA,EAAUE,QACO,mBAA7BjtC,KAAK4sC,MAAM0tC,gBACzBt6E,KAAK4sC,MAAM0tC,gBAEXt6E,KAAKk3E,YACCl3E,KAAKk3E,cAAgB/zC,EAAAA,EAAiB8uB,YAClC9uB,EAAAA,EAAiBC,KACjBD,EAAAA,EAAiB8uB,uDAgB/B,SAAIjyD,KAAKumE,iBACDvmE,KAAKm7D,YAAan7D,KAAKq6E,uBAAyBr6E,KAAK8sC,YAAcC,EAAAA,EAAUC,YAIhFhtC,KAAKusB,SAaKvsB,KAAKu6E,eAAiBv6E,KAAKs4E,gBAAkBt4E,KAAKusB,QAEnDiiB,YAAYgsC,KAAK,SAAA5tC,GAAK,QAC7B,eAAgBA,GAA+B,SAArBA,EAAMxqB,YACzB,UAAWwqB,IAA0B,IAAhBA,EAAM9b,4CASzC,MAAA,cAAAzzB,OAAqB2C,KAAK2xC,MAA1B,KAAAt0C,OAAmC2C,KAAK21C,UAAxC,qVCh3Ba8kC,aAMjB,SAAAA,IAA0B,IAAdhpE,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,gGAAI6pC,CAAAznC,KAAAy6E,GACtBz6E,KAAK0d,YAAcjM,EAAQgM,WAC3Bzd,KAAK06E,MAAQjpE,EAAQ/b,KAErBsK,KAAK26E,cAAclpE,EAAQ+pD,WAC3Bx7D,KAAK46E,UAAUnpE,EAAQqI,kEASvB,OAAO9Z,KAAK6mD,uCASZ,OAAO7mD,KAAK66E,0DASZ,OAAO76E,KAAK86E,uDASZ,OAAO96E,KAAK+6E,0CASZ,OAAO/6E,KAAK06E,uCAUP9qE,GACL5P,KAAK6mD,OAASj3C,+CAUGu/B,GACjBnvC,KAAK86E,mBAAqB3rC,oCASpBr1B,GACN9Z,KAAK+6E,QAAUjhE,mCAoBoC,IAAA+tB,EAAA7nC,KAA/Cg7E,EAA+CryC,EAA/CqyC,QAASC,EAAsCtyC,EAAtCsyC,YAAaC,EAAyBvyC,EAAzBuyC,YAAaxnC,EAAY/K,EAAZ+K,SACvC,OAAO,IAAItI,QAAQ,SAACC,EAASC,GACzBzD,EAAKnqB,YAAYpF,OACbuvB,EAAKszC,UAAU,CACXr8C,OAAQ,QACRk8C,QAAAA,EACAE,YAAAA,EACAD,YAAAA,EACAvnC,SAAAA,IAEJ,SAAAzjC,GAKI43B,EAAK+yC,UAAU,WACf/yC,EAAK8yC,cACDS,EAAAA,EAAkBtf,mBAAmB7rD,IAEzCo7B,KAEJ,SAAAz7B,GACIi4B,EAAKwzC,gBAAgBzrE,GAErB07B,EAAO17B,uCAcD,IAAA87B,EAAA1rC,KAAfk7E,EAAeryC,EAAfqyC,YACH,OAAO,IAAI9vC,QAAQ,SAACC,EAASC,GACzBI,EAAKhuB,YAAYpF,OACbozB,EAAKyvC,UAAU,CACXr8C,OAAQ,OACRo8C,YAAAA,IAEJ7vC,EACAC,0CAqBuD,IAAvDxM,EAAuDuK,EAAvDvK,OAAQk8C,EAA+C3xC,EAA/C2xC,QAASC,EAAsC5xC,EAAtC4xC,YAAaC,EAAyB7xC,EAAzB6xC,YAAaxnC,EAAYrK,EAAZqK,SACnD,OAAOhtC,OAAAA,EAAAA,IAAAA,CAAI,CACP6V,GAAI2+D,EACJ1pE,KAAM,QAET5c,EAAE,QAAS,CACR4b,MAAS,kCACTsuB,OAAUA,EACVw8C,SAAYN,EACZO,eAAkBv7E,KAAK06E,MACvBc,SAAY9nC,EACZ+nC,sBAAyBR,IAE5BvqE,6CAUWgrE,GACZ,IAAM9rE,EAAQ8rE,EAAQhhE,qBAAqB,SAAS,GAEpD1a,KAAK27E,SAAS/rE,EAAM6mE,SAAS,GAAG3qE,+CAUtB0vD,GACVx7D,KAAK66E,WAAarf,6aCjN1B,IAEMogB,EAAwB,SAKxBC,aAKF,SAAAA,IAAc,IAAAh0C,EAAA7nC,kGAAAynC,CAAAznC,KAAA67E,GACV77E,KAAK87E,cAAgB,IAAIjxD,EAAAA,EACzB7qB,KAAK+7E,oBAAsB,GAE3B/pC,EAAAA,EAAIgB,YACA5M,EAAAA,EAAUjJ,oBACV,SAAA4O,GAAO,OACHlE,EAAKi0C,cAAcvuD,KACfyuD,EAAAA,oBACAjwC,KACZiG,EAAAA,EAAIgB,YACA5M,EAAAA,EAAU/I,sBACV,SAAA0O,GAAO,OACHlE,EAAKo0C,iBACDp0C,EAAK6H,uBACL3D,KACZiG,EAAAA,EAAIgB,YACA5M,EAAAA,EAAU7J,oBACV,SAAA4J,GAAkB,OACd0B,EAAKq0C,0BAA0B/1C,KAKvCnmC,KAAKm8E,yBAA2B,IAAI/wC,QAAQ,SAAAC,GACnCrD,UAAUo0C,YAMfp0C,UAAUo0C,YAAYC,MAAM,CAAEvnF,KAAM8mF,IAC/B1zC,KAAK,WAAA,OAAMmD,GAAQ,IAAO,WAAA,OAAMA,GAAQ,KANzCA,GAAQ,8EAkBMlF,GACtBnmC,KAAK+7E,sVAAL38C,CAAA,GACOp/B,KAAK+7E,oBACL51C,4CASMm2C,EAAUvwC,GACvB,IAAMnF,EACAmF,EAAQnS,KACN,SAAA/kC,GAAC,MAAe,gBAAXA,EAAE2xC,MAA0B3xC,EAAEmuC,WAAas5C,IAEpD11C,GACApc,EAAAA,EAAWqH,0BACPmgB,EAAAA,EAAIuB,4BAA4B3M,6CAQ3BxnC,GACb4yC,EAAAA,EAAIjK,iBAAiB3oC,mDAUrB,OAAO4yC,EAAAA,EAAInI,wEAUSmF,GACpB,OAAOgD,EAAAA,EAAI3C,wBAAwBL,qDAUbx9B,GAAM,IAAAk6B,EAAA1rC,KAC5B,OAAO,IAAIorC,QAAQ,SAAAC,GAGX75B,KAAQk6B,EAAKqwC,oBACb1wC,EAAQK,EAAKqwC,oBAAoBvqE,IAMrCk6B,EAAKywC,yBAAyBj0C,KAAK,SAAAq0C,GAC/B,GAAKA,EAAL,CAMA,IAAMC,EAAW,GAEjB,OAAQhrE,GACR,KAAKq7B,EAAAA,EACD2vC,EAAS3+E,KACLmqC,UAAUo0C,YAAYC,MAAM,CACxBvnF,KAAM8mF,KAEd,MACJ,KAAK/uC,EAAAA,EACD2vC,EAAS3+E,KACLmqC,UAAUo0C,YAAYC,MAAM,CACxBvnF,KAjJE,gBAmJV,MACJ,QACI0nF,EAAS3+E,KACLmqC,UAAUo0C,YAAYC,MAAM,CACxBvnF,KAAM8mF,KAEdY,EAAS3+E,KACLmqC,UAAUo0C,YAAYC,MAAM,CACxBvnF,KA3JE,gBA+Jds2C,QAAQ+K,IAAIqmC,GAAUt0C,KAClB,SAAAu0C,GAAO,OAAIpxC,EAAQoxC,EAAQC,MAAM,SAAAC,GAO7B,MAtKU,aAmKUA,EAAiBlf,OAC9Bkf,EAAiB7iE,YAI5B,WAAA,OAAMuxB,GAAQ,UAzCdA,GAAQ,+DAsDpB,OAAQrgB,EAAAA,EAAQgO,2DAShB,OAAOgZ,EAAAA,EAAItC,oEAWM1M,GACjB,IAAM7B,EAAmB6Q,EAAAA,EAAIsB,oCAU7B,OARInS,GAAoBA,EAAiBnkC,OAAS,GAI9CgD,KAAKi8E,iBACDj5C,EAAUgP,EAAAA,EAAIsB,qCAGftB,EAAAA,EAAIwB,qBAAqBxQ,4CAQnB9N,EAAO/lB,GACpBnP,KAAK87E,cAAc9oC,YAAY9d,EAAO/lB,+CAQtB+lB,EAAO/lB,GACvBnP,KAAK87E,cAAchvD,eAAeoI,EAAO/lB,qCAOnC+lB,GAAgB,IAAA,IAAA0nD,EAAA3sC,EAAAryC,UAAAZ,OAANW,EAAM,IAAAyC,MAAA6vC,EAAA,EAAAA,EAAA,EAAA,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANvyC,EAAMuyC,EAAA,GAAAtyC,UAAAsyC,IACtB0sC,EAAA58E,KAAK87E,eAAcvuD,KAAnBzvB,MAAA8+E,EAAA,CAAwB1nD,GAAxB73B,OAAkCM,4CAalC,OAAOqtB,EAAAA,EAAQ4gB,qDAIR1lB,EAAA,EAAA,IAAI21D,iBCxPnB,IAAInzD,EAAS,CACTi7B,MAAS,EACT9zC,MAAS,EACTC,KAAQ,EACRN,IAAO,EACPO,KAAQ,EACRH,MAAS,GAObyY,EAAOw0D,iBAAmBltE,QAM1B,IAAImtE,EAAmB,CAAEz0D,EAAOw0D,kBAOhCx0D,EAAOO,mBAAqB,SAASC,IACY,IAAzCi0D,EAAiBx+E,QAAQuqB,IACzBi0D,EAAiBj/E,KAAKgrB,IAS9BR,EAAOS,sBAAwB,SAASD,GACpC,IAAIk0D,EAAeD,EAAiBx+E,QAAQuqB,IACtB,IAAlBk0D,GACAD,EAAiBx/E,OAAOy/E,EAAc,IAO9C,IAAIC,EAAgB,GA0DpB,SAASxtE,IACL,IAAI0Z,EAAStrB,UAAU,GAAI6R,EAAQ7R,UAAU,GACzCD,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GACjD,KAAG8qB,EAAOjZ,GAASyZ,EAAOzZ,OAQ1B,IAJA,IAAIwtE,IACI/zD,EAAOzX,QAAQyrE,mBACZF,EAAcE,oBAnD7B,WACI,IAAID,EAAa,CACbh2B,WAAY,GACZk2B,aAAc,GACd/tE,KAAM,KACNguE,OAAQ,MAGRxtE,EAAQ,IAAI1R,MACZ8Q,EAAQY,EAAMZ,MAAOY,EAAMZ,MAAMnS,MAAM,MAAQ,GACnD,IAAImS,GAASA,EAAMhS,OAAS,EACxB,OAAOigF,EAEX,IAAItoF,EAAI,KAIR,OAHGqa,EAAM,KACLra,EAAIqa,EAAM,GAAG6N,MAAM,iDAEnBloB,GAAKA,EAAEqI,QAAU,GAEe,IAA7BgS,EAAM,GAAG1Q,QAAQ,QAEhB2+E,EAAWh2B,WAAaj4C,EAAM,GAAG0P,OAAO,EAAG1P,EAAM,GAAG1Q,QAAQ,MAG5D2+E,EAAWh2B,WAAaj4C,EAAM,GAAG0P,OAAO,EAAG1P,EAAM,GAAG1Q,QAAQ,MAEzD2+E,IAGXA,EAAWh2B,WAAatyD,EAAE,GAC1BsoF,EAAWE,aAAexoF,EAAE,GAC5BsoF,EAAW7tE,KAAOza,EAAE,GACpBsoF,EAAWG,OAASzoF,EAAE,GACfsoF,GAkBwCI,GAC3Cp0D,EAAa6zD,EAAiBz/E,OAAO6rB,EAAOD,YACxC10B,EAAI,EAAGA,EAAI00B,EAAWjsB,OAAQzI,IAAK,CACvC,IAAIkB,EAAIwzB,EAAW10B,GACfC,EAAIiB,EAAEga,GACV,GAAGjb,GAAmB,mBAAPA,EAAmB,CAC9B,IAAI8oF,EAAc,GAEdp0D,EAAOjqB,IACPq+E,EAAYz/E,KAAK,IAAMqrB,EAAOjqB,GAAK,KAGnCg+E,GAAcA,EAAWh2B,WAAWjqD,OAAS,GAC7CsgF,EAAYz/E,KAAK,IAAMo/E,EAAWh2B,WAAa,OAGnD,IAAIs2B,EAAeD,EAAYjgF,OAAOM,GAEtCnJ,EAAEuB,KAAKN,GAAGqI,MAAMrI,EAAG8nF,KAiB/B,SAASl1D,EAAO5Y,EAAOxQ,EAAIgqB,EAAYxX,GACnCzR,KAAKf,GAAKA,EACVe,KAAKyR,QAAUA,GAAW,GAC1BzR,KAAKipB,WAAaA,EACdjpB,KAAKipB,aACLjpB,KAAKipB,WAAa,IAEtBjpB,KAAKyP,MAAQiZ,EAAOjZ,GAEpB,IADA,IAAI+tE,EAAUvoF,OAAOy5B,KAAKhG,GAClBn0B,EAAI,EAAGA,EAAIipF,EAAQxgF,OAAQzI,IAC/ByL,KAAKw9E,EAAQjpF,IACTib,EAAIzZ,KAAK,KAAMiK,KAAMw9E,EAAQjpF,IA3GzC8zB,EAAOU,iBAAmB,SAAStX,GAC/BurE,EAAgBvrE,GAAW,IAkH/B4W,EAAOlyB,UAAUizB,SAAW,SAAU3Z,GAClCzP,KAAKyP,MAAQiZ,EAAOjZ,IAExBzb,EAAOD,QAAUs0B,EAKjBA,EAAOK,OAAS,CACZC,MAAO,QACPje,MAAO,QACPC,KAAM,OACN8yE,IAAK,MACL7yE,KAAM,OACNpB,MAAO,wCCxMV,SAAAxV,wOAID,IAAI0pF,EAAW,CAIfA,mBAA8B,WAC5B,OAAO58E,KAAK2U,SAAShV,SAAS,IAAIie,OAAO,EAAG,MAI9Cg/D,EAASC,WAAaD,EAASE,qBAG/BF,EAASG,WAAa,SAASC,GAC7B,OAAOA,EAAK/tB,OAAOlzD,MAAM,MAAMC,IAAI,SAASsS,GAC1C,OAAOA,EAAK2gD,UAIhB2tB,EAASK,cAAgB,SAASD,GAEhC,OADYA,EAAKjhF,MAAM,QACVC,IAAI,SAASH,EAAM0B,GAC9B,OAAQA,EAAQ,EAAI,KAAO1B,EAAOA,GAAMozD,OAAS,UAKrD2tB,EAASM,eAAiB,SAASF,GACjC,IAAIG,EAAWP,EAASK,cAAcD,GACtC,OAAOG,GAAYA,EAAS,IAI9BP,EAASQ,iBAAmB,SAASJ,GACnC,IAAIG,EAAWP,EAASK,cAAcD,GAEtC,OADAG,EAAS1nD,QACF0nD,GAITP,EAASS,YAAc,SAASL,EAAM1/E,GACpC,OAAOs/E,EAASG,WAAWC,GAAMxkD,OAAO,SAASlqB,GAC/C,OAAgC,IAAzBA,EAAK9Q,QAAQF,MAOxBs/E,EAASU,eAAiB,SAAShvE,GAoBjC,IAnBA,IAAIxQ,EAQA04B,EAAY,CACdE,YANA54B,EADmC,IAAjCwQ,EAAK9Q,QAAQ,gBACP8Q,EAAK7Q,UAAU,IAAI1B,MAAM,KAEzBuS,EAAK7Q,UAAU,IAAI1B,MAAM,MAIf,GAClB46B,UAAW/V,SAAS9iB,EAAM,GAAI,IAC9BmU,SAAUnU,EAAM,GAAGuP,cACnBqN,SAAUkG,SAAS9iB,EAAM,GAAI,IAC7B84B,GAAI94B,EAAM,GACV43B,KAAM9U,SAAS9iB,EAAM,GAAI,IAEzB4S,KAAM5S,EAAM,IAGLrK,EAAI,EAAGA,EAAIqK,EAAM5B,OAAQzI,GAAK,EACrC,OAAQqK,EAAMrK,IACZ,IAAK,QACH+iC,EAAU+mD,eAAiBz/E,EAAMrK,EAAI,GACrC,MACF,IAAK,QACH+iC,EAAUgnD,YAAc58D,SAAS9iB,EAAMrK,EAAI,GAAI,IAC/C,MACF,IAAK,UACH+iC,EAAUinD,QAAU3/E,EAAMrK,EAAI,GAC9B,MACF,IAAK,QACH+iC,EAAUzB,MAAQj3B,EAAMrK,EAAI,GAC5B+iC,EAAUknD,iBAAmB5/E,EAAMrK,EAAI,GACvC,MACF,QACE+iC,EAAU14B,EAAMrK,IAAMqK,EAAMrK,EAAI,GAItC,OAAO+iC,GAITomD,EAASe,eAAiB,SAASnnD,GACjC,IAAIqD,EAAM,GACVA,EAAI98B,KAAKy5B,EAAUE,YACnBmD,EAAI98B,KAAKy5B,EAAUG,WACnBkD,EAAI98B,KAAKy5B,EAAUvkB,SAAS2rE,eAC5B/jD,EAAI98B,KAAKy5B,EAAU9b,UACnBmf,EAAI98B,KAAKy5B,EAAUI,IACnBiD,EAAI98B,KAAKy5B,EAAUd,MAEnB,IAAIhlB,EAAO8lB,EAAU9lB,KAkBrB,OAjBAmpB,EAAI98B,KAAK,OACT88B,EAAI98B,KAAK2T,GACI,SAATA,GAAmB8lB,EAAU+mD,gBAC7B/mD,EAAUgnD,cACZ3jD,EAAI98B,KAAK,SACT88B,EAAI98B,KAAKy5B,EAAU+mD,gBACnB1jD,EAAI98B,KAAK,SACT88B,EAAI98B,KAAKy5B,EAAUgnD,cAEjBhnD,EAAUinD,SAAgD,QAArCjnD,EAAUvkB,SAAS5E,gBAC1CwsB,EAAI98B,KAAK,WACT88B,EAAI98B,KAAKy5B,EAAUinD,UAEjBjnD,EAAUzB,QACZ8E,EAAI98B,KAAK,SACT88B,EAAI98B,KAAKy5B,EAAUzB,QAEd,aAAe8E,EAAIp9B,KAAK,MAKjCmgF,EAASiB,gBAAkB,SAASvvE,GAClC,OAAOA,EAAKsP,OAAO,IAAI7hB,MAAM,MAK/B6gF,EAASkB,YAAc,SAASxvE,GAC9B,IAAIxQ,EAAQwQ,EAAKsP,OAAO,GAAG7hB,MAAM,KAC7BgiF,EAAS,CACX5jD,YAAavZ,SAAS9iB,EAAM23B,QAAS,KASvC,OANA33B,EAAQA,EAAM,GAAG/B,MAAM,KAEvBgiF,EAAO/pF,KAAO8J,EAAM,GACpBigF,EAAOC,UAAYp9D,SAAS9iB,EAAM,GAAI,IAEtCigF,EAAOE,YAA+B,IAAjBngF,EAAM5B,OAAe0kB,SAAS9iB,EAAM,GAAI,IAAM,EAC5DigF,GAKTnB,EAASsB,YAAc,SAAS7jD,GAC9B,IAAI9C,EAAK8C,EAAMF,YAIf,YAHmCtgC,IAA/BwgC,EAAM8jD,uBACR5mD,EAAK8C,EAAM8jD,sBAEN,YAAc5mD,EAAK,IAAM8C,EAAMrmC,KAAO,IAAMqmC,EAAM2jD,WAC9B,IAAtB3jD,EAAM4jD,YAAoB,IAAM5jD,EAAM4jD,YAAc,IAAM,QAMjErB,EAASnlD,YAAc,SAASnpB,GAC9B,IAAIxQ,EAAQwQ,EAAKsP,OAAO,GAAG7hB,MAAM,KACjC,MAAO,CACLoC,GAAIyiB,SAAS9iB,EAAM,GAAI,IACvB45B,UAAW55B,EAAM,GAAGN,QAAQ,KAAO,EAAIM,EAAM,GAAG/B,MAAM,KAAK,GAAK,WAChEqC,IAAKN,EAAM,KAMf8+E,EAASwB,YAAc,SAASC,GAC9B,MAAO,aAAeA,EAAgBlgF,IAAMkgF,EAAgBC,cACvDD,EAAgB3mD,WAA2C,aAA9B2mD,EAAgB3mD,UACxC,IAAM2mD,EAAgB3mD,UACtB,IACN,IAAM2mD,EAAgBjgF,IAAM,QAMlCw+E,EAAStmD,UAAY,SAAShoB,GAI5B,IAHA,IACImrC,EADAskC,EAAS,GAETjgF,EAAQwQ,EAAKsP,OAAOtP,EAAK9Q,QAAQ,KAAO,GAAGzB,MAAM,KAC5CH,EAAI,EAAGA,EAAIkC,EAAM5B,OAAQN,IAEhCmiF,GADAtkC,EAAK37C,EAAMlC,GAAGqzD,OAAOlzD,MAAM,MACjB,GAAGkzD,QAAUxV,EAAG,GAE5B,OAAOskC,GAITnB,EAAS2B,UAAY,SAASlkD,GAC5B,IAAI/rB,EAAO,GACPipB,EAAK8C,EAAMF,YAIf,QAHmCtgC,IAA/BwgC,EAAM8jD,uBACR5mD,EAAK8C,EAAM8jD,sBAET9jD,EAAMmkD,YAAcrqF,OAAOy5B,KAAKyM,EAAMmkD,YAAYtiF,OAAQ,CAC5D,IAAIs7B,EAAS,GACbrjC,OAAOy5B,KAAKyM,EAAMmkD,YAAYr+E,QAAQ,SAASs+E,GAC7CjnD,EAAOz6B,KAAK0hF,EAAQ,IAAMpkD,EAAMmkD,WAAWC,MAE7CnwE,GAAQ,UAAYipB,EAAK,IAAMC,EAAO/6B,KAAK,KAAO,OAEpD,OAAO6R,GAKTsuE,EAAS8B,YAAc,SAASpwE,GAC9B,IAAIxQ,EAAQwQ,EAAKsP,OAAOtP,EAAK9Q,QAAQ,KAAO,GAAGzB,MAAM,KACrD,MAAO,CACL2U,KAAM5S,EAAM23B,QACZkpD,UAAW7gF,EAAMrB,KAAK,OAI1BmgF,EAASgC,YAAc,SAASvkD,GAC9B,IAAIhD,EAAQ,GACRE,EAAK8C,EAAMF,YAYf,YAXmCtgC,IAA/BwgC,EAAM8jD,uBACR5mD,EAAK8C,EAAM8jD,sBAET9jD,EAAMwkD,cAAgBxkD,EAAMwkD,aAAa3iF,QAE3Cm+B,EAAMwkD,aAAa1+E,QAAQ,SAAS2+E,GAClCznD,GAAS,aAAeE,EAAK,IAAMunD,EAAGpuE,MACrCouE,EAAGH,WAAaG,EAAGH,UAAUziF,OAAS,IAAM4iF,EAAGH,UAAY,IACxD,SAGDtnD,GAKTulD,EAASmC,eAAiB,SAASzwE,GACjC,IAAI0wE,EAAK1wE,EAAK9Q,QAAQ,KAClBM,EAAQ,CACVoyB,KAAMtP,SAAStS,EAAKsP,OAAO,EAAGohE,EAAK,GAAI,KAErCC,EAAQ3wE,EAAK9Q,QAAQ,IAAKwhF,GAO9B,OANIC,GAAS,GACXnhF,EAAMwK,UAAYgG,EAAKsP,OAAOohE,EAAK,EAAGC,EAAQD,EAAK,GACnDlhF,EAAMpJ,MAAQ4Z,EAAKsP,OAAOqhE,EAAQ,IAElCnhF,EAAMwK,UAAYgG,EAAKsP,OAAOohE,EAAK,GAE9BlhF,GAKT8+E,EAASsC,OAAS,SAASC,GACzB,IAAInnC,EAAM4kC,EAASS,YAAY8B,EAAc,UAAU,GACvD,GAAInnC,EACF,OAAOA,EAAIp6B,OAAO,IAItBg/D,EAASxmD,iBAAmB,SAAS9nB,GACnC,IAAIxQ,EAAQwQ,EAAKsP,OAAO,IAAI7hB,MAAM,KAClC,MAAO,CACLqjF,UAAWthF,EAAM,GAAGuP,cACpB3Y,MAAOoJ,EAAM,KAOjB8+E,EAASyC,kBAAoB,SAASF,EAActnD,GAKlD,MAAO,CACLynD,KAAM,OACNC,aANU3C,EAASS,YAAY8B,EAAetnD,EAC5C,kBAKkB77B,IAAI4gF,EAASxmD,oBAKrCwmD,EAAS4C,oBAAsB,SAAShoD,EAAQioD,GAC9C,IAAI5lD,EAAM,WAAa4lD,EAAY,OAInC,OAHAjoD,EAAO+nD,aAAap/E,QAAQ,SAASu/E,GACnC7lD,GAAO,iBAAmB6lD,EAAGN,UAAY,IAAMM,EAAGhrF,MAAQ,SAErDmlC,GAKT+iD,EAAS+C,iBAAmB,SAASR,EAActnD,GACjD,IAAIR,EAAQulD,EAASG,WAAWoC,GAWhC,MARoB,CAClBzB,kBAFFrmD,EAAQA,EAAM96B,OAAOqgF,EAASG,WAAWllD,KAEfW,OAAO,SAASlqB,GACtC,OAAwC,IAAjCA,EAAK9Q,QAAQ,kBACnB,GAAGogB,OAAO,IACbuuC,SAAU90B,EAAMmB,OAAO,SAASlqB,GAC9B,OAAsC,IAA/BA,EAAK9Q,QAAQ,gBACnB,GAAGogB,OAAO,MAMjBg/D,EAASgD,mBAAqB,SAASpoD,GACrC,MAAO,eAAiBA,EAAOkmD,iBAAmB,iBAC/BlmD,EAAO20B,SAAW,QAIvCywB,EAASiD,mBAAqB,SAASV,GASrC,IARA,IAAIW,EAAc,CAChBC,OAAQ,GACRC,iBAAkB,GAClBC,cAAe,GACfC,KAAM,IAGJrqD,EADQ+mD,EAASG,WAAWoC,GACd,GAAGpjF,MAAM,KAClBtI,EAAI,EAAGA,EAAIoiC,EAAM35B,OAAQzI,IAAK,CACrC,IAAI8jC,EAAK1B,EAAMpiC,GACX0sF,EAAavD,EAASS,YACtB8B,EAAc,YAAc5nD,EAAK,KAAK,GAC1C,GAAI4oD,EAAY,CACd,IAAI9lD,EAAQuiD,EAASkB,YAAYqC,GAC7BC,EAAQxD,EAASS,YACjB8B,EAAc,UAAY5nD,EAAK,KAQnC,OANA8C,EAAMmkD,WAAa4B,EAAMlkF,OAAS0gF,EAAStmD,UAAU8pD,EAAM,IAAM,GACjE/lD,EAAMwkD,aAAejC,EAASS,YAC1B8B,EAAc,aAAe5nD,EAAK,KACnCv7B,IAAI4gF,EAAS8B,aAChBoB,EAAYC,OAAOhjF,KAAKs9B,GAEhBA,EAAMrmC,KAAK4pF,eACjB,IAAK,MACL,IAAK,SACHkC,EAAYG,cAAcljF,KAAKs9B,EAAMrmC,KAAK4pF,iBAWlD,OAJAhB,EAASS,YAAY8B,EAAc,aAAah/E,QAAQ,SAASmO,GAC/DwxE,EAAYE,iBAAiBjjF,KAAK6/E,EAASnlD,YAAYnpB,MAGlDwxE,GAKTlD,EAASyD,oBAAsB,SAAS36C,EAAM6kB,GAC5C,IAAI1wB,EAAM,GAGVA,GAAO,KAAO6L,EAAO,IACrB7L,GAAO0wB,EAAKw1B,OAAO7jF,OAAS,EAAI,IAAM,IACtC29B,GAAO,sBACPA,GAAO0wB,EAAKw1B,OAAO/jF,IAAI,SAASq+B,GAC9B,YAAmCxgC,IAA/BwgC,EAAM8jD,qBACD9jD,EAAM8jD,qBAER9jD,EAAMF,cACZ19B,KAAK,KAAO,OAEfo9B,GAAO,uBACPA,GAAO,8BAGP0wB,EAAKw1B,OAAO5/E,QAAQ,SAASk6B,GAC3BR,GAAO+iD,EAASsB,YAAY7jD,GAC5BR,GAAO+iD,EAAS2B,UAAUlkD,GAC1BR,GAAO+iD,EAASgC,YAAYvkD,KAE9B,IAAIimD,EAAW,EAef,OAdA/1B,EAAKw1B,OAAO5/E,QAAQ,SAASk6B,GACvBA,EAAMimD,SAAWA,IACnBA,EAAWjmD,EAAMimD,YAGjBA,EAAW,IACbzmD,GAAO,cAAgBymD,EAAW,QAEpCzmD,GAAO,iBAEP0wB,EAAKy1B,iBAAiB7/E,QAAQ,SAASogF,GACrC1mD,GAAO+iD,EAASwB,YAAYmC,KAGvB1mD,GAKT+iD,EAAS4D,2BAA6B,SAASrB,GAC7C,IAcIj+B,EAdAu/B,EAAqB,GACrBX,EAAclD,EAASiD,mBAAmBV,GAC1CuB,GAAuD,IAA9CZ,EAAYG,cAAcziF,QAAQ,OAC3CmjF,GAA6D,IAAjDb,EAAYG,cAAcziF,QAAQ,UAG9C86B,EAAQskD,EAASS,YAAY8B,EAAc,WAC9CnjF,IAAI,SAASsS,GACZ,OAAOsuE,EAASmC,eAAezwE,KAEhCkqB,OAAO,SAAS16B,GACf,MAA2B,UAApBA,EAAMwK,YAEXswB,EAAcN,EAAMp8B,OAAS,GAAKo8B,EAAM,GAAGpI,KAG3C0wD,EAAQhE,EAASS,YAAY8B,EAAc,oBAC9CnjF,IAAI,SAASsS,GACZ,IAAIxQ,EAAQwQ,EAAKvS,MAAM,KAEvB,OADA+B,EAAM23B,QACC33B,EAAM9B,IAAI,SAASH,GACxB,OAAO+kB,SAAS/kB,EAAM,QAGtB+kF,EAAM1kF,OAAS,GAAK0kF,EAAM,GAAG1kF,OAAS,GAAK0kF,EAAM,GAAG,KAAOhoD,IAC7DsoB,EAAgB0/B,EAAM,GAAG,IAG3Bd,EAAYC,OAAO5/E,QAAQ,SAASk6B,GAClC,GAAiC,QAA7BA,EAAMrmC,KAAK4pF,eAA2BvjD,EAAMmkD,WAAWqC,IAAK,CAC9D,IAAIC,EAAW,CACb5wD,KAAM0I,EACNmoD,iBAAkBngE,SAASyZ,EAAMmkD,WAAWqC,IAAK,IACjDG,IAAK,CACH9wD,KAAMgxB,IAGVu/B,EAAmB1jF,KAAK+jF,GACpBJ,KACFI,EAAW7qE,KAAKuK,MAAMvK,KAAKyK,UAAUogE,KAC5BG,IAAM,CACb/wD,KAAMgxB,EACN3oC,UAAWooE,EAAY,aAAe,OAExCF,EAAmB1jF,KAAK+jF,OAII,IAA9BL,EAAmBvkF,QAAgB08B,GACrC6nD,EAAmB1jF,KAAK,CACtBmzB,KAAM0I,IAKV,IAAIyL,EAAYu4C,EAASS,YAAY8B,EAAc,MAenD,OAdI96C,EAAUnoC,SAEVmoC,EADsC,IAApCA,EAAU,GAAG7mC,QAAQ,WACXojB,SAASyjB,EAAU,GAAGzmB,OAAO,GAAI,IACF,IAAlCymB,EAAU,GAAG7mC,QAAQ,SAEqB,IAAvCojB,SAASyjB,EAAU,GAAGzmB,OAAO,GAAI,IAAa,IACnD,UAEK/jB,EAEd4mF,EAAmBtgF,QAAQ,SAASq3B,GAClCA,EAAO0pD,WAAa78C,KAGjBo8C,GAIT7D,EAASuE,oBAAsB,SAAShC,GACtC,IAAIiC,EAAiB,GAKjBC,EAAazE,EAASS,YAAY8B,EAAc,WAC/CnjF,IAAI,SAASsS,GACZ,OAAOsuE,EAASmC,eAAezwE,KAEhCkqB,OAAO,SAASx9B,GACf,MAAyB,UAAlBA,EAAIsN,YACV,GACH+4E,IACFD,EAAeE,MAAQD,EAAW3sF,MAClC0sF,EAAelxD,KAAOmxD,EAAWnxD,MAKnC,IAAIqxD,EAAQ3E,EAASS,YAAY8B,EAAc,gBAC/CiC,EAAeI,YAAcD,EAAMrlF,OAAS,EAC5CklF,EAAeK,SAA4B,IAAjBF,EAAMrlF,OAIhC,IAAIwlF,EAAM9E,EAASS,YAAY8B,EAAc,cAG7C,OAFAiC,EAAeM,IAAMA,EAAIxlF,OAAS,EAE3BklF,GAKTxE,EAAS+E,UAAY,SAASxC,GAC5B,IAAIrhF,EACA8jF,EAAOhF,EAASS,YAAY8B,EAAc,WAC9C,GAAoB,IAAhByC,EAAK1lF,OAEP,MAAO,CAACuvB,QADR3tB,EAAQ8jF,EAAK,GAAGhkE,OAAO,GAAG7hB,MAAM,MACV,GAAI+vC,MAAOhuC,EAAM,IAEzC,IAAI+jF,EAAQjF,EAASS,YAAY8B,EAAc,WAC9CnjF,IAAI,SAASsS,GACZ,OAAOsuE,EAASmC,eAAezwE,KAEhCkqB,OAAO,SAAS16B,GACf,MAA2B,SAApBA,EAAMwK,YAEf,OAAIu5E,EAAM3lF,OAAS,EAEV,CAACuvB,QADR3tB,EAAQ+jF,EAAM,GAAGntF,MAAMqH,MAAM,MACP,GAAI+vC,MAAOhuC,EAAM,SAFzC,GAUF8+E,EAASkF,kBAAoB,WAC3B,OAAO9hF,KAAK2U,SAAShV,WAAWie,OAAO,EAAG,KAO5Cg/D,EAASmF,wBAA0B,SAASC,EAAQC,GAClD,IACI7+D,OAAsBvpB,IAAZooF,EAAwBA,EAAU,EAOhD,MAAO,+BANHD,GAGUpF,EAASkF,qBAIkB,IAAM1+D,EAAU,yCAK3Dw5D,EAASsF,kBAAoB,SAASC,EAAa53B,EAAM75C,EAAM+a,GAC7D,IAAIoO,EAAM+iD,EAASyD,oBAAoB8B,EAAYz8C,KAAM6kB,GAyBzD,GAtBA1wB,GAAO+iD,EAASgD,mBACZuC,EAAYC,YAAYC,sBAG5BxoD,GAAO+iD,EAAS4C,oBACZ2C,EAAYG,cAAcD,qBACjB,UAAT3xE,EAAmB,UAAY,UAEnCmpB,GAAO,SAAWsoD,EAAYnqC,IAAM,OAEhCmqC,EAAYzqD,UACdmC,GAAO,KAAOsoD,EAAYzqD,UAAY,OAC7ByqD,EAAYI,WAAaJ,EAAYK,YAC9C3oD,GAAO,iBACEsoD,EAAYI,UACrB1oD,GAAO,iBACEsoD,EAAYK,YACrB3oD,GAAO,iBAEPA,GAAO,iBAGLsoD,EAAYI,UAAW,CAEzB,IAAI5hC,EAAO,QAAUl1B,EAAOttB,GAAK,IAC7BgkF,EAAYI,UAAUz2C,MAAM3tC,GAAK,OACrC07B,GAAO,KAAO8mB,EAGd9mB,GAAO,UAAYsoD,EAAYM,uBAAuB,GAAGvyD,KACrD,IAAMywB,EACNwhC,EAAYM,uBAAuB,GAAGzB,MACxCnnD,GAAO,UAAYsoD,EAAYM,uBAAuB,GAAGzB,IAAI9wD,KACzD,IAAMywB,EACV9mB,GAAO,oBACHsoD,EAAYM,uBAAuB,GAAGvyD,KAAO,IAC7CiyD,EAAYM,uBAAuB,GAAGzB,IAAI9wD,KAC1C,QAUR,OANA2J,GAAO,UAAYsoD,EAAYM,uBAAuB,GAAGvyD,KACrD,UAAY0sD,EAASC,WAAa,OAClCsF,EAAYI,WAAaJ,EAAYM,uBAAuB,GAAGzB,MACjEnnD,GAAO,UAAYsoD,EAAYM,uBAAuB,GAAGzB,IAAI9wD,KACzD,UAAY0sD,EAASC,WAAa,QAEjChjD,GAIT+iD,EAAS8F,aAAe,SAASvD,EAActnD,GAG7C,IADA,IAAIR,EAAQulD,EAASG,WAAWoC,GACvB1rF,EAAI,EAAGA,EAAI4jC,EAAMn7B,OAAQzI,IAChC,OAAQ4jC,EAAM5jC,IACZ,IAAK,aACL,IAAK,aACL,IAAK,aACL,IAAK,aACH,OAAO4jC,EAAM5jC,GAAGmqB,OAAO,GAK7B,OAAIia,EACK+kD,EAAS8F,aAAa7qD,GAExB,YAGT+kD,EAAS+F,QAAU,SAASxD,GAG1B,OAFYvC,EAASG,WAAWoC,GACd,GAAGpjF,MAAM,KACd,GAAG6hB,OAAO,IAGzBg/D,EAASgG,WAAa,SAASzD,GAC7B,MAAyC,MAAlCA,EAAapjF,MAAM,IAAK,GAAG,IAGpC6gF,EAASrnD,WAAa,SAAS4pD,GAC7B,IACIrhF,EADQ8+E,EAASG,WAAWoC,GACd,GAAGvhE,OAAO,GAAG7hB,MAAM,KACrC,MAAO,CACL2pC,KAAM5nC,EAAM,GACZ43B,KAAM9U,SAAS9iB,EAAM,GAAI,IACzBmU,SAAUnU,EAAM,GAChB63B,IAAK73B,EAAMjD,MAAM,GAAG4B,KAAK,OAI7BmgF,EAASiG,WAAa,SAAS1D,GAC7B,IACIrhF,EADO8+E,EAASS,YAAY8B,EAAc,MAAM,GACnCvhE,OAAO,GAAG7hB,MAAM,KACjC,MAAO,CACL2jD,SAAU5hD,EAAM,GAChBiiD,UAAWjiD,EAAM,GACjBglF,eAAgBliE,SAAS9iB,EAAM,GAAI,IACnCilF,QAASjlF,EAAM,GACfklF,YAAallF,EAAM,GACnBmlF,QAASnlF,EAAM,KAKG,WAAlBa,EAAOzL,KACTA,EAAOD,QAAU2pF,wCClqBnB,IAAIsG,EAAUhwF,EAAOD,QAAU,CAC7BymD,EAAG,CAAC,CACF1lD,KAAM,UACNmvF,IAAK,YAEPjvF,EAAG,CAAC,CAEFF,KAAM,SACNmvF,IAAK,wCACLC,MAAO,CAAC,WAAY,YAAa,iBAAkB,UAAW,QAAS,WACvEC,OAAQ,wBAGV7tF,EAAG,CAAC,CAAExB,KAAM,SACZP,EAAG,CAAC,CAAEO,KAAM,gBACZsvF,EAAG,CAAC,CAAEtvF,KAAM,QACZkK,EAAG,CAAC,CAAElK,KAAM,UACZuB,EAAG,CAAC,CAAEvB,KAAM,UACZuvF,EAAG,CAAC,CAAEvvF,KAAM,cACZO,EAAG,CAAC,CAAEP,KAAM,YAEZW,EAAG,CAAC,CACFX,KAAM,SACNmvF,IAAK,eACLC,MAAO,CAAC,QAAS,QACjBC,OAAQ,UAEVvvF,EAAG,CAAC,CACFE,KAAM,aACNmvF,IAAK,mBACLC,MAAO,CAAC,UAAW,MACnBC,OAAQ,eAEVjhF,EAAG,CAAC,CACFrF,KAAM,YACNomF,IAAK,4BACLC,MAAO,CAAC,OAAQ,SAChBC,OAAQ,UAEVxvF,EAAG,CAAC,CAGFsvF,IAAK,mCACLC,MAAO,CAAC,OAAQ,OAAQ,WAAY,YACpCC,OAAQ,gBAEVlhF,EAAG,CACD,CACEpF,KAAM,MACNomF,IAAK,0DACLC,MAAO,CAAC,UAAW,QAAS,OAAQ,YACpCC,OAAQ,SAAUnvF,GAChB,OAAQA,EAAEsvF,SACR,qBACAtvF,EAAEuvF,KACF,kBACA,iBAGN,CAEE1mF,KAAM,OACNomF,IAAK,wBACLC,MAAO,CAAC,UAAW,UACnBC,OAAQ,cAEV,CACErvF,KAAM,UACNmvF,IAAK,gBACLE,OAAQ,cAEV,CACErvF,KAAM,OACNmvF,IAAK,sCACLC,MAAO,CAAC,OAAQ,UAAW,QAAS,WACpCC,OAAQ,SAAUnvF,GAChB,OAAqB,MAAbA,EAAE+uF,QACR,qBACA,YAGN,CACElmF,KAAM,eACNomF,IAAK,kCACLC,MAAO,CAAC,UAAW,SACnBC,OAAQ,yBAEV,CACEtmF,KAAM,SACNomF,IAAK,6CACLC,MAAO,CAAC,UAAW,OAAQ,WAC3BC,OAAQ,SAAUnvF,GAChB,OAAqB,MAAbA,EAAEomD,QACR,mBACA,kBAGN,CAEEv9C,KAAM,MACNomF,IAAK,6CACLC,MAAO,CAAC,QAAS,YAAa,MAAO,UACrCC,OAAQ,SAAUnvF,GAChB,MAAO,aAAeA,EAAEwjC,UAAY,MAAQ,MAAQ,OAASxjC,EAAEuG,OAAS,MAAQ,MAGpF,CACEsC,KAAM,SACNomF,IAAK,0CACLC,MAAO,CAAC,KAAM,QAAS,SAAU,iBACjCC,OAAQ,SAAUnvF,GAChB,OAA2B,MAAnBA,EAAEwvF,cACR,qBACA,oBAGN,CACE1vF,KAAM,QACNmvF,IAAK,eACLE,OAAQ,YAEV,CACErvF,KAAM,MACNmvF,IAAK,gBACLE,OAAQ,UAEV,CACErvF,KAAM,OACNmvF,IAAK,aACLE,OAAQ,WAEV,CACErvF,KAAM,QACNmvF,IAAK,eACLE,OAAQ,YAEV,CACErvF,KAAM,WACNmvF,IAAK,kBACLE,OAAQ,eAEV,CACErvF,KAAM,YACNmvF,IAAK,0CAEP,CACEnvF,KAAM,UACNmvF,IAAK,eAEP,CACEnvF,KAAM,WACNmvF,IAAK,mBACLE,OAAQ,gBAEV,CACErvF,KAAM,SACNmvF,IAAK,iBACLE,OAAQ,cAEV,CACErvF,KAAM,cACNmvF,IAAK,2BACLC,MAAO,CAAC,OAAQ,QAChBC,OAAQ,qBAEV,CAKEtmF,KAAK,aACLomF,IAAK,+KACLC,MAAO,CAAC,aAAc,YAAa,YAAa,WAAY,KAAM,OAAQ,OAAQ,QAAS,QAAS,UAAW,aAAc,aAAc,gBAC3IC,OAAQ,SAAUnvF,GAChB,IAAIkP,EAAM,qCAaV,OAXAA,GAAmB,MAAXlP,EAAEyvF,MAAiB,qBAAuB,OAGlDvgF,GAAqB,MAAblP,EAAE4iC,QAAmB,cAAgB,KAEzB,MAAhB5iC,EAAE2iC,aACJzzB,GAAO,kBAGTA,GAA2B,MAAnBlP,EAAE,cAAyB,iBAAmB,KACtDkP,GAA6B,MAArBlP,EAAE,gBAA2B,mBAAqB,OAI9D,CACEF,KAAM,kBACNmvF,IAAK,wBAEP,CACEnvF,KAAM,mBACNmvF,IAAK,0BACLE,OAAQ,wBAEV,CACErvF,KAAM,aACNmvF,IAAK,qBACLE,OAAQ,kBAEV,CACEtmF,KAAM,QACNomF,IAAK,iCACLC,MAAO,CAAC,KAAM,YAAa,SAC3BC,OAAQ,SAAUnvF,GAChB,IAAIkP,EAAM,UAOV,OANmB,MAAflP,EAAEoU,YACJlF,GAAO,MACQ,MAAXlP,EAAEQ,QACJ0O,GAAO,QAGJA,IAGX,CAEErG,KAAM,aAENomF,IAAK,mEACLC,MAAO,CAAC,YAAa,SACrBC,OAAQ,oBAEV,CACErvF,KAAM,eACNmvF,IAAK,gCACLC,MAAO,CAAC,WAAY,SACpBC,OAAQ,wBAEV,CACEtmF,KAAM,SACNomF,IAAK,oBACLC,MAAO,CAAC,OAAQ,QAChBC,OAAQ,eAEV,CACErvF,KAAM,UACNmvF,IAAK,eAEP,CACEnvF,KAAM,YACNmvF,IAAK,iBAEP,CACEnvF,KAAM,UACNmvF,IAAK,uCACLC,MAAO,CAAC,gBAAiB,MAAO,kBAChCC,OAAQ,SAAUnvF,GAChB,OAA4B,MAApBA,EAAE0vF,eACR,mBACA,kBAGN,CACE5vF,KAAM,cACNmvF,IAAK,0BACLE,OAAQ,oBAEV,CACEtmF,KAAM,OACNomF,IAAK,sCACLC,MAAO,CAAC,KAAM,YAAa,UAC3BC,OAAQ,SAAUnvF,GAChB,OAAQA,EAAEsjC,OAAU,eAAiB,cAGzC,CAGEz6B,KAAM,aACNomF,IAAK,IAAIU,OAEP,wKAMFT,MAAO,CAAC,KAAM,OAAQ,SAAU,OAAQ,UACxCC,OAAQ,SAAUnvF,GAChB,MAAO,sBAAwBA,EAAE4vF,KAAO,SAAW,MAGvD,CAEE9vF,KAAM,YACNmvF,IAAK,IAAIU,OAEP,2FAQFT,MAAO,CAAC,OAAQ,QAAS,OAAQ,SACjCC,OAAQ,SAAUnvF,GAChB,MAAO,mBAAqBA,EAAE4vF,KAAO,SAAW,MAGpD,CAIE9vF,KAAM,eACNmvF,IAAK,kCACLC,MAAO,CAAC,SACRC,OAAQ,iBAEV,CAGErvF,KAAM,YACNmvF,IAAK,8BACLE,OAAQ,gBAEV,CACEtmF,KAAM,UACNqmF,MAAO,CAAC,YAMdjvF,OAAOy5B,KAAKs1D,GAAS/iF,QAAQ,SAAUnL,GAC1BkuF,EAAQluF,GACdmL,QAAQ,SAAUnF,GAChBA,EAAImoF,MACPnoF,EAAImoF,IAAM,QAEPnoF,EAAIqoF,SACProF,EAAIqoF,OAAS,2BC9UnB,IAAMU,EAAkB9pF,EAAQ,KAK1B+pF,EAAa,aACbC,EAAY,YAOZC,EAAgB,SAASp4C,GAE3B5sC,KAAK4sC,MAAQA,EAGb5sC,KAAKilF,SAAW,KAIhBjlF,KAAKwD,KAAO,KAIZxD,KAAKlL,KAAO,KAGZkL,KAAKklF,UAAY,MAQrB,SAASC,EAAcC,GACnB,QAA+BzqF,IAA3ByqF,EAAcH,SACd,MAAM,IAAI/mF,MAAM,yEAGpBknF,EAAcH,SAASl/D,QACvBq/D,EAAcF,UAAY,IAAIzyE,KAQlC,SAAS4yE,EAAaD,GAClB,QAA+BzqF,IAA3ByqF,EAAcH,SACd,MAAM,IAAI/mF,MAAM,wEAGpBknF,EAAcH,SAASj2D,OAO3B,SAASs2D,IACL,GAAIC,cAAcC,gBAAgBV,GAC9B,OAAOA,EACJ,GAAIS,cAAcC,gBAAgBT,GACrC,OAAOA,EAEX,MAAM,IAAI7mF,MACN,6DASR,SAASunF,EAAcC,GAGnB1lF,KAAK2lF,UAAY,GAGjB3lF,KAAK4lF,SAAWN,IAGhBtlF,KAAK6lF,aAAc,EAGnB7lF,KAAK0lF,gBAAkBA,EAM3BD,EAAcH,yBAA2BA,EAOzCG,EAActvF,UAAUq2C,SAAW,SAASI,GACxC,GAAIA,EAAM+J,eAAgB,CAEtB,IAAMyuC,EAAgBplF,KAAK8lF,yBAAyBl5C,GAIpD5sC,KAAK2lF,UAAU9nF,KAAKunF,GAGpBplF,KAAK+lF,cAID/lF,KAAK6lF,aACLV,EAAcC,KAU1BK,EAActvF,UAAU2vF,yBAA2B,SAASl5C,GACxD,IAAMw4C,EAAgB,IAAIJ,EAAcp4C,GAGlCo5C,EAAiBZ,EAAcx4C,MAAMq5C,oBACrC15D,EA2KV,WACI,GAA2B,oBAAhBgd,YACP,OAAO,IAAIA,YAEf,MAAM,IAAIrrC,MAAM,qCA/KDgoF,GAmBf,OAjBAF,EAAehgD,iBAAiB/kC,QAAQ,SAAAxL,GAAC,OAAI82B,EAAOigB,SAAS/2C,KAG7D2vF,EAAcH,SAAW,IAAIM,cAAch5D,EACvC,CAAE45D,SAAUnmF,KAAK4lF,WAIrBR,EAAc5hF,KAAO,GAGrB4hF,EAAcH,SAASmB,gBAAkB,SAASC,GAC1CA,EAAU7iF,KAAK8pB,KAAO,GACtB83D,EAAc5hF,KAAK3F,KAAKwoF,EAAU7iF,OAInC4hF,GAaXK,EAActvF,UAAUuiF,YAAc,SAAS9rC,GAC3C,IAAIA,EAAM25B,eAAV,CAIA,IACIhyE,EADEglC,EAAQv5B,KAAK2lF,UAGnB,IAAKpxF,EAAI,EAAGA,EAAIglC,EAAMv8B,OAAQzI,IAC1B,GAAIglC,EAAMhlC,GAAGq4C,MAAMysB,qBAAuBzsB,EAAMysB,mBAAoB,CAChE,IAAMitB,EAAmB/sD,EAAMhlC,GAE3ByL,KAAK6lF,YACLR,EAAaiB,GAGb/sD,EAAMj8B,OAAO/I,EAAG,GAM5ByL,KAAK+lF,gBAQTN,EAActvF,UAAU4vF,YAAc,WAClC,IAAM9zC,EAAajyC,KAAK0lF,gBAExB1lF,KAAK2lF,UAAU1kF,QAAQ,SAAAmkF,GACnB,GAAIA,EAAcx4C,MAAMta,UACpB8yD,EAActwF,KAAO,sBAClB,CACH,IAAMmK,EAAKmmF,EAAcx4C,MAAMysB,mBAEzB4c,EADchkC,EAAW2nB,mBAAmB36D,GACtBsnF,iBAEZ,cAAZtQ,IACAmP,EAActwF,KAAOmhF,OASrCwP,EAActvF,UAAU4vB,MAAQ,WAC5B,GAAI/lB,KAAK6lF,YACL,MAAM,IAAI3nF,MAAM,sCAKpB8B,KAAK6lF,aAAc,EAGnB7lF,KAAK2lF,UAAU1kF,QAAQ,SAAAmkF,GAAa,OAAID,EAAcC,KAGtDz1E,QAAQH,IAAR,2DAAAnS,OAEQ2C,KAAK2lF,UAAU3oF,OAFvB,wBAQJyoF,EAActvF,UAAU64B,KAAO,WAE3BhvB,KAAK6lF,aAAc,EAGnB7lF,KAAK2lF,UAAU1kF,QAAQ,SAAAmkF,GAAa,OAAIC,EAAaD,KACrDz1E,QAAQH,IAAI,sBAMhBi2E,EAActvF,UAAUqwF,SAAW,WAAW,IAAA3+C,EAAA7nC,KAC1CA,KAAK2lF,UAAU1kF,QAAQ,SAAAmkF,GACnB,IAAMtH,EAAO,IAAI2I,KAAKrB,EAAc5hF,KAAM,CAAEgO,KAAMq2B,EAAK+9C,WACjDz2C,EAAMjG,IAAIC,gBAAgB20C,GAC1B76E,EAAIqD,SAASiG,cAAc,KAEjCjG,SAASyC,KAAKuD,YAAYrJ,GAC1BA,EAAEqG,MAAQ,gBACVrG,EAAEyjF,KAAOv3C,EACTlsC,EAAEujF,SAAF,QAAAnpF,OAAqBwqC,EAAK+9C,SAAS/oF,MAAM,KAAK,IAC9CoG,EAAE0jF,QACFxyF,OAAO+0C,IAAIkG,gBAAgBD,MASnCs2C,EAActvF,UAAUywF,oBAAsB,WAAW,IAAAl7C,EAAA1rC,KACrD,GAAIA,KAAK6lF,YACL,MAAM,IAAI3nF,MACN,kEAIR8B,KAAK+lF,cAEL,IAAMxsD,EAAQ,GAUd,OARAv5B,KAAK2lF,UAAU1kF,QACX,SAAAgkF,GAAQ,OACJ1rD,EAAM17B,KACF,IAAIgnF,EACA,IAAI4B,KAAKxB,EAASzhF,KAAM,CAAEgO,KAAMk6B,EAAKk6C,WACrCX,EAASnwF,KACTmwF,EAASC,cAElB3rD,GAOXksD,EAActvF,UAAU0wF,YAAc,WAClC,OAAO7mF,KAAK4lF,UAkBhB5xF,EAAOD,QAAU0xF,iBC3RjBzxF,EAAOD,QAlCU,CAsBb+yF,gBAtBa,SAsBGC,EAAY32D,EAAU42D,GAGlC,MAAmB,iBAFPD,EAGD,KAHCA,EAMD5pF,QAAQ,SAAUizB,GACxBjzB,QAAQ,iBAAiC,IAAhB6pF,mCC9BtC3yF,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAA+gE,IAAA,IAAAC,EAAA7yF,EAAA,GAAA8yF,EAAA9yF,EAAA,IAAA+yF,EAAA/yF,EAAA,IAAAgzF,EAAAhzF,EAAA,GAAAizF,EAAAjzF,EAAA,IAmBe,SAAS4yF,EAAgBM,EAAO78B,EAAOj5C,GAClDzR,KAAKunF,MAAQA,EACbvnF,KAAK0qD,MAAQA,EACb1qD,KAAKyR,QAAUA,EACfzR,KAAKyqB,KAAO,IAAIggC,EAAAA,EAAKh5C,EAASi5C,GAG9B1qD,KAAKuqC,iBAAiB2iB,EAAAA,kBAClB,SAACs6B,EAAS93E,EAAKs8C,EAAa7sB,GACxB3U,EAAAA,EAAWyK,oBACP+J,OAAAA,EAAAA,EAAAA,CAA4BwoD,EAAS93E,EAAKyvB,MAItDn/B,KAAKuqC,iBAAiB2iB,EAAAA,wBAClB,SAAAx9C,GAMQA,GACA8a,EAAAA,EAAW6K,cACPoyD,EAAAA,EACA,CAAEp4E,QAASK,IAEnB8a,EAAAA,EAAWkJ,QACP3c,KAAKyK,UACD,CACIviB,GAAIwoF,EAAAA,EACJ/3E,IAAAA,OAUxBu3E,EAAgB9wF,UAAUyf,QAAU,WAAuB,IAAdnE,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACnDoC,KAAKyqB,KAAK7U,QAAQnE,EAAQxS,GAAIwS,EAAQw7C,WAU1Cg6B,EAAgB9wF,UAAUogB,OAAS,SAAS9E,GACxCzR,KAAKyqB,KAAKlU,OAAO9E,IAOrBw1E,EAAgB9wF,UAAUmjB,WAAa,WAAkB,IAAAouE,EAKrD,OAAOA,EAAA1nF,KAAKyqB,MAAKnR,WAAVxb,MAAA4pF,EAAA9pF,YAQXqpF,EAAgB9wF,UAAUwxF,OAAS,WAC/B,OAAO3nF,KAAKyqB,KAAKk9D,UAOrBV,EAAgB9wF,UAAUyxF,SAAW,SAASl9B,GAC1C1qD,KAAK0qD,MAAQA,GAWjBu8B,EAAgB9wF,UAAU0xF,oBAAsB,SAAS/yF,EAAM2c,GAC3D,OAAO,IAAIq2E,EAAAA,EAAgB,CACvBhzF,KAAAA,EACAyG,OAAQkW,EACRgM,WAAYzd,QASpBinF,EAAgB9wF,UAAUo0C,iBAAmB,SAASrV,EAAOxI,GACzD1sB,KAAKyqB,KAAKuoB,YAAY9d,EAAOxI,IAQjCu6D,EAAgB9wF,UAAU0pD,oBAAsB,SAAS3qB,EAAOxI,GAC5D1sB,KAAKyqB,KAAKqC,eAAeoI,EAAOxI,IAMpCu6D,EAAgB9wF,UAAU4xF,mBAAqB,WAC3C,OAAO/nF,KAAKyqB,KAAKmgC,iBAUrBq8B,EAAgB9wF,UAAUu1D,WAAa,SAASs8B,GAAyB,IAAhBC,EAAgBrqF,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,IAAAA,UAAA,GACrE,OAAOoC,KAAKyqB,KAAK4gC,KAAKK,WAAWs8B,EAASC,IAU9ChB,EAAgB9wF,UAAU+xF,cAAgB,SAASF,GAAyB,IAAhBC,EAAgBrqF,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,IAAAA,UAAA,GACxE,OAAOoC,KAAKyqB,KAAK4gC,KAAK68B,cAAcF,EAASC,ozBC1GjD,IAAM/+D,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAiDV,SAASu+D,GAAgBr2E,GACpC,IAAKA,EAAQ3c,MAAQ2c,EAAQ3c,KAAKqZ,gBAAkBsD,EAAQ3c,KAAM,CAC9D,IAAMkwC,EACA,8GAIN,MADA9b,EAAOtZ,MAAMo1B,GACP,IAAI9mC,MAAM8mC,GAEpBhlC,KAAK4qB,aAAe,IAAIC,EAAAA,EACxB7qB,KAAKyR,QAAUA,EACfzR,KAAKmoF,aAAe,IAAIC,EAAAA,EAA4BpoF,MACpDA,KAAK05D,aAAe,GACpB15D,KAAKqoF,MAAM52E,GACXzR,KAAKsoF,mBAAqB,IAAIC,EAAAA,EAAmBvoF,MAMjDA,KAAKwoF,iBAAmB,KACxBxoF,KAAKyoF,oBAAsB,KAC3BzoF,KAAK0oF,YAAc,KACnB1oF,KAAK2oF,sBAAuB,EAC5B3oF,KAAK4oF,aAAc,EACnB5oF,KAAK6oF,iBAAkB,EACvB7oF,KAAK8oF,iBAAkB,EACvB9oF,KAAK+oF,iBAAmB,CACpBtmD,OAAO,EACPlB,OAAO,GAEXvhC,KAAKgpF,gBAAiB,EAGtBhpF,KAAKipF,kBAAoB,KAMzBjpF,KAAKkpF,YAAa,EAGlBlpF,KAAKo1B,WAAa,GAOlBp1B,KAAKmpF,kBACC,IAAIC,EAAAA,EAAkBppF,KAAMA,KAAK4qB,aAAcnZ,GAMrDzR,KAAKqpF,oBACC,IAAIC,EAAAA,EAAoBtpF,KAAMyR,EAAQlW,OAAOguF,cAAgB,IAMnEvpF,KAAKwpF,4BAA8B,IAAIC,EAAAA,EAA2BzpF,MAKlEA,KAAK0pF,4BAA6B,EAKlC1pF,KAAK2pF,sBAAwB,IAAIC,EAAAA,EAAsB5pF,MAUvDA,KAAK6pF,qBAAuB,KAE5B,IAAMC,EACApoE,SAASjQ,EAAQlW,OAAO+wD,KAAO76C,EAAQlW,OAAO+wD,IAAIy9B,eAAgB,IAOxE/pF,KAAK+pF,eAAiB3nF,MAAM0nF,GAAS,EAAIA,EACzC5gE,EAAOpZ,KAAP,mBAAAzS,OAA+B2C,KAAK+pF,iBAQpC/pF,KAAKgqF,4BAA6B,EAQlChqF,KAAKssD,KAAM,EAMXtsD,KAAKiqF,iBAAmB,KAExBjqF,KAAKkqF,kBAAoB,IAAIC,EAAAA,EAAWnqF,KAAKqwD,MAC7CrwD,KAAKoqF,iBAAmB,IAAIC,EAAAA,EAAiBrqF,KAAKqwD,MAItDy3B,GAAgB3xF,UAAUkhD,YAAcywC,GAcxCA,GAAgBwC,gBAAkB,SAAS57E,EAAK67E,GAC5C,IAAIh8B,EAEJ,GAAIg8B,EAEAh8B,EAAct0B,EAAAA,EAAW2vB,gBAAgB,GAAGz7C,kBACzC,CAIHogD,EAAc/nD,EAAAA,QAAQiI,eAAeC,GAAKgQ,OAAO,EAAG,GAC/CvQ,cAIM,eAEHjR,KAAKqxD,KACTA,EAAct0B,EAAAA,EAAW2vB,gBAAgB,GAAGz7C,eAIpD,OAAOogD,GAQXu5B,GAAgB3xF,UAAUkyF,MAAQ,WAAuB,IAAAxgD,EAAA7nC,KAAdyR,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAG7C6T,EAAQgM,aACRzd,KAAKyd,WAAahM,EAAQgM,WAC1Bzd,KAAKyqB,KAAOzqB,KAAKyd,WAAWgN,KAG5BzqB,KAAKmoF,aAAaqC,sBAR+B,IAW7CjvF,EAAWyE,KAAKyR,QAAhBlW,OA4DR,GA1DAyE,KAAKqwD,KAAOrwD,KAAKyqB,KAAKgkC,WAClBzuD,KAAKyR,QAAQ3c,KACbyG,EACAusF,GAAgBwC,iBAIpBtqF,KAAKyqF,4BACCzqF,KAAKyqF,4BAA4B10F,KAAKiK,MAC5CA,KAAKqwD,KAAKrd,YACNoZ,EAAAA,uBAAmCpsD,KAAKyqF,6BAE5CzqF,KAAK0qF,yBAA2B1qF,KAAK0qF,yBAAyB30F,KAAKiK,MACnEA,KAAKqwD,KAAKrd,YACNoZ,EAAAA,oBAAgCpsD,KAAK0qF,0BAEzC1qF,KAAK2qF,4BACC3qF,KAAK2qF,4BAA4B50F,KAAKiK,MAC5CA,KAAKqwD,KAAKrd,YACNoZ,EAAAA,uBAAmCpsD,KAAK2qF,6BAE5C3qF,KAAK4qF,kBAAoB5qF,KAAK4qF,kBAAkB70F,KAAKiK,MACrDA,KAAKqwD,KAAKrd,YAAYoZ,EAAAA,8BAClBpsD,KAAK4qF,mBAET5qF,KAAK6qF,WAAa,IAAIC,EAAAA,EAAWvvF,EAAOsvF,YAAc,IAEtD7qF,KAAK+qF,QAAU,IAAIC,EAAAA,EACfhrF,KACAzE,EACA,SAAC8T,EAASkN,GACN,IACIsrB,EAAKgP,YACDxnC,EAASkN,GAAI,GACnB,MAAO3M,GACLsZ,EAAOnZ,KAAK,iDAInB/P,KAAKw2D,MACNx2D,KAAKw2D,IAAM,IAAIxkB,EAAAA,EAAIhyC,KAAMyR,GACzBzR,KAAKmoF,aAAa8C,qBAGtBjrF,KAAK+6D,4BACC,IAAIxE,EAAAA,EACFv2D,KAAKw2D,IACLx2D,KACA,CAKI42D,eAAgBr7D,EAAO2vF,8BACvBv0B,kBAAmBp7D,EAAO4vF,mCAEtCnrF,KAAK+6D,4BAA4B9lD,QAE5BjV,KAAK6vB,WAAY,CAClB,IAAI1F,EAAqBnqB,KAAK64D,WAE1Bt9D,EAAO6vF,0BAA4B7vF,EAAOi6E,cAC1CrrD,EAAqB5uB,EAAOi6E,aAGhCx1E,KAAK6vB,WAAa,IAAIrF,EAAAA,EAAWxqB,KAAKyqB,KAAM,CACxCN,mBAAAA,EACAmB,yBAA0BtrB,KAAKyd,WAAWhM,QAAQu8C,MAAM9nD,OACxDqkB,OAAQhvB,EAAOgvB,QAAP,GAAAltB,OAAoB2C,KAAKyd,WAAWhM,QAAQu8C,MAAM9nD,OAAlD,KAAA7I,OAA4D2C,KAAKyR,QAAQ3c,MACjFs2B,gBAAiB7vB,EAAO8vF,yBACxBrhE,YAAazuB,EAAOyuB,YACpBC,gBAAiB1uB,EAAO0uB,gBACxBmG,SAAUpwB,KAAKyR,QAAQ3c,KACvBo1B,qBAAsB3uB,EAAO+vF,cAC7BjhE,gBAAiB9uB,EAAO8uB,gBACxBC,mBAAoB/uB,EAAO+uB,qBAInCtqB,KAAKmoF,aAAaoD,yBAIlBvrF,KAAKmoF,aAAaqD,2BAEdjwF,EAAOkwF,sBAEP,IAAIC,EAAAA,EACA1rF,KACA,WAAA,OACI6nC,EAAKjd,aAAa2C,KAAKknB,EAAAA,oBAG/B,iBAAkBl5C,GAClByE,KAAK2rF,SAASpwF,EAAOqwF,cAOzB5rF,KAAK6rF,aAAe,IAAIC,EAAAA,EAAqB9rF,MAG7CA,KAAK+rF,4BAA8B,IAAIC,EAAAA,EAA4BhsF,MAE/DzE,GAAUA,EAAOq0D,gBAAkBr0D,EAAOq0D,eAAeq8B,YACzDjsF,KAAKksF,4BACD,SAAU3wF,EAAOq0D,eAAeq8B,aAQ5CnE,GAAgB3xF,UAAUoH,KAAO,SAAS0vD,GAAU,IAAAvhB,EAAA1rC,KAC5CA,KAAKqwD,MACLrwD,KAAKqwD,KAAK9yD,KAAK0vD,GAAU/kB,KAAK,WAAA,OAAMwD,EAAKygD,wBAYjDrE,GAAgB3xF,UAAUi2F,2BAA6B,SAAS36E,GAC5D,OAAO26E,EAAAA,EAA2B13F,KAAKsL,uUAAhCo/B,CAAA,GACA3tB,EADA,CAEH28C,iBAAkB05B,GAAgBwC,oBAO1CxC,GAAgB3xF,UAAUk2F,SAAW,WACjC,OAAOrsF,KAAKqwD,MAAQrwD,KAAKqwD,KAAKi8B,QAOlCxE,GAAgB3xF,UAAUo2F,aAAe,WACrC,OAAOxmD,QAAQ/lC,KAAKyR,QAAQlW,OAAO+wD,KAAOtsD,KAAKyR,QAAQlW,OAAO+wD,IAAI4sB,eAGxB,IAA5Bl5E,KAAKyR,QAAQlW,OAAO+wD,KAQtCw7B,GAAgB3xF,UAAUq2F,qBAAuB,WAC7C,OAAOzmD,QAAQ/lC,KAAKyR,QAAQlW,OAAOgjE,SAC5Bv+D,KAAKyR,QAAQlW,OAAOgjE,QAAQkuB,cAOvC3E,GAAgB3xF,UAAUu2F,MAAQ,WAAW,IAAAv/C,EAAAntC,KA6CzC,GA5CIA,KAAK+6D,8BACL/6D,KAAK+6D,4BAA4B1tC,UACjCrtB,KAAK+6D,4BAA8B,MAEnC/6D,KAAKqpF,sBACLrpF,KAAKqpF,oBAAoBh8D,UACzBrtB,KAAKqpF,oBAAsB,MAG3BrpF,KAAKwpF,8BACLxpF,KAAKwpF,4BAA4Bn8D,UACjCrtB,KAAKwpF,4BAA8B,MAGnCxpF,KAAK6qF,aACL7qF,KAAK6qF,WAAW77D,OAChBhvB,KAAK6qF,WAAa,MAGlB7qF,KAAK+qF,UACL/qF,KAAK+qF,QAAQ/7D,OACbhvB,KAAK+qF,QAAU,MAGnB/qF,KAAKw1C,iBAAiBv0C,QAAQ,SAAA2rC,GAAK,OAAIO,EAAKw/C,oBAAoB//C,KAEhE5sC,KAAKw2D,IAAIo2B,qBACL5sF,KAAK6vB,YACL7vB,KAAK6vB,WAAWxC,UAGpBrtB,KAAK6sF,mBAAqB7sF,KAAK6sF,kBAAkBC,SAG7C9sF,KAAKwoF,mBACLxoF,KAAKwoF,iBAAiB/iE,QACtBzlB,KAAKwoF,iBAAmB,MAExBxoF,KAAKiqF,mBACLjqF,KAAKiqF,iBAAiBxkE,QACtBzlB,KAAKiqF,iBAAmB,MAIxBjqF,KAAKqwD,KAAM,CACX,IAAMA,EAAOrwD,KAAKqwD,KAqBlB,OAlBAA,EAAKvjC,eACDs/B,EAAAA,uBACApsD,KAAKyqF,6BACTp6B,EAAKvjC,eACDs/B,EAAAA,oBACApsD,KAAK0qF,0BACTr6B,EAAKvjC,eACDs/B,EAAAA,uBACApsD,KAAK2qF,6BAETt6B,EAAKvjC,eACDs/B,EAAAA,8BACApsD,KAAK4qF,mBAET5qF,KAAKmoF,aAAa4E,sBAElB/sF,KAAKqwD,KAAO,KAELA,EAAKq8B,QACPxkD,KAAK,WACEiF,EAAKqpB,KACLrpB,EAAKqpB,IAAIw2B,YAGhBxhD,MAAM,SAAA57B,GAOH,MAHAu9B,EAAKwsB,kBAAkB14D,QACnB,SAAA83D,GAAW,OAAI5rB,EAAK8/C,aAAal0B,EAAY4uB,YAE3C/3E,IAKlB,OAAOw7B,QAAQE,OACX,IAAIptC,MAAM,6CAMlB4pF,GAAgB3xF,UAAUgyD,QAAU,WAChC,OAAOnoD,KAAKyR,QAAQ3c,MAMxBgzF,GAAgB3xF,UAAU+2F,cAAgB,WACtC,OAAOltF,KAAKyd,YAMhBqqE,GAAgB3xF,UAAUg3F,cAAgB,WACtC,OAAOntF,KAAK4oF,aAMhBd,GAAgB3xF,UAAUi3F,WAAa,WACnC,OAAOrnD,QAAQ/lC,KAAKqtF,eAMxBvF,GAAgB3xF,UAAUm3F,aAAe,WACrC,OAAOttF,KAAKqtF,cAMhBvF,GAAgB3xF,UAAUo3F,sBAAwB,WAC9C,OAAOvtF,KAAKqwD,MAAQrwD,KAAKqwD,KAAKm9B,UAAUD,yBAS5CzF,GAAgB3xF,UAAUs3F,mBAAqB,SAASC,GAAa,IAAAz/C,EAAAjuC,KACjE,OAAO,IAAIorC,QAAQ,SAACC,EAASC,GACpB2C,EAAKs/C,wBAKNG,EACAz/C,EAAKoiB,KAAKm9B,UAAUG,iBAAiBtiD,EAASC,GAE9C2C,EAAKoiB,KAAKm9B,UAAUI,YAAYviD,EAASC,GAPzCA,OAiBZw8C,GAAgB3xF,UAAUq/C,eAAiB,SAASpV,GAChD,IAAIsV,EAAS,GAMb,OAJI11C,KAAKw2D,MACL9gB,EAAS11C,KAAKw2D,IAAIhhB,eAAepV,IAG9BsV,GAOXoyC,GAAgB3xF,UAAU03F,mBAAqB,WAC3C,OAAO7tF,KAAKw2D,IAAMx2D,KAAKw2D,IAAIq3B,qBAAuB,MAOtD/F,GAAgB3xF,UAAU23F,mBAAqB,WAC3C,OAAO9tF,KAAKw2D,IAAMx2D,KAAKw2D,IAAIs3B,qBAAuB,MAYtDhG,GAAgB3xF,UAAUw2B,GAAK,SAASohE,EAAS5+E,GACzCnP,KAAK4qB,cACL5qB,KAAK4qB,aAAa+B,GAAGohE,EAAS5+E,IAYtC24E,GAAgB3xF,UAAU2pD,IAAM,SAASiuC,EAAS5+E,GAC1CnP,KAAK4qB,cACL5qB,KAAK4qB,aAAakC,eAAeihE,EAAS5+E,IAKlD24E,GAAgB3xF,UAAUo0C,iBAAmBu9C,GAAgB3xF,UAAUw2B,GACvEm7D,GAAgB3xF,UAAU0pD,oBAAsBioC,GAAgB3xF,UAAU2pD,IAQ1EgoC,GAAgB3xF,UAAU63F,mBAAqB,SAASC,EAAS9+E,GACzDnP,KAAKqwD,MACLrwD,KAAKqwD,KAAK69B,oBAAoBD,EAAS9+E,IAS/C24E,GAAgB3xF,UAAUg4F,sBAAwB,SAASF,EAAS9+E,GAC5DnP,KAAKqwD,MACLrwD,KAAKqwD,KAAK+9B,uBAAuBH,EAAS9+E,IAUlD24E,GAAgB3xF,UAAUk4F,gBAAkB,SACpCh/E,GAA+B,IAAtBi/E,EAAsB1wF,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAR,OAC3B,GAAIoC,KAAKqwD,KAAM,CACX,IAAMmlB,GAAex1E,KAAKqwD,KAAKk+B,gBAAgB,SAAW,IAAI/4F,MAE9DwK,KAAKqwD,KAAKxZ,YAAYxnC,EAASi/E,EAAa9Y,KAWpDsS,GAAgB3xF,UAAUq4F,uBAAyB,SAC3CvvF,EAAIoQ,GAA+B,IAAtBi/E,EAAsB1wF,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAR,OAC3BoC,KAAKqwD,MACLrwD,KAAKqwD,KAAKo+B,mBAAmBxvF,EAAIoQ,EAASi/E,IASlDxG,GAAgB3xF,UAAUu4F,YAAc,SAAS55F,EAAM+4B,GAC/C7tB,KAAKqwD,MACLrwD,KAAKqwD,KAAKs+B,cAAc75F,EAAM+4B,GAC9B7tB,KAAKqwD,KAAKx4C,gBAEVqR,EAAOnZ,KAAK,iDAUpB+3E,GAAgB3xF,UAAUy4F,gBAAkB,SAAS95F,EAAM+4B,GACvD7tB,KAAK0uF,YAAY55F,EAAM+4B,GACvB7tB,KAAK6uF,cAAc/5F,IAOvBgzF,GAAgB3xF,UAAU04F,cAAgB,SAAS/5F,GAC3CkL,KAAKqwD,MACLrwD,KAAKqwD,KAAKy+B,mBAAmBh6F,IAQrCgzF,GAAgB3xF,UAAUw/E,eAAiB,SAAS7gF,GAC5CkL,KAAKqwD,OAELrwD,KAAKqwD,KAAKy+B,mBAAmB,QAE7B9uF,KAAKqwD,KAAKs+B,cAAc,OAAQ,CAC5BvmF,WAAY,CAAEoI,MAAO,mCACrBhb,MAAOV,IAEXkL,KAAKqwD,KAAKx4C,iBAQlBiwE,GAAgB3xF,UAAU44F,WAAa,SAASC,GACxChvF,KAAKqwD,MAAQrwD,KAAKivF,eAClBjvF,KAAKqwD,KAAK0+B,WAAWC,IAQ7BlH,GAAgB3xF,UAAU+4F,eAAiB,WACvC,QAAyBv0F,IAArBqF,KAAKmvF,YAA2B,CAChCnvF,KAAKmvF,YAAc,IAAIC,EAAAA,EAGvB,IAAMC,EAAmBrvF,KAAKw1C,eAAe3I,EAAAA,GAJbrf,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAMhC,IAAA,IAAAgzB,EAAAC,EAAyByhE,EAAzB/5F,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,CAAA,IAAhCioB,EAAgC9nB,EAAAn4B,MACvCwK,KAAKmvF,YAAY3iD,SAASiJ,IAPE,MAAAx7B,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAWhC,IAAMopB,EAAoB92C,KAAKw2D,IAAI1gB,gBAAgBjJ,EAAAA,GAXnBxe,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IAahC,IAAA,IAAA6zB,EAAAC,EAA0BqoB,EAA1BxhD,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAA6C,CAAA,IAAlC+qC,EAAkC5qC,EAAAh5B,MACzCwK,KAAKmvF,YAAY3iD,SAAS4sB,IAdE,MAAAn/C,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,IAkBpC,OAAOvuB,KAAKmvF,aAQhBrH,GAAgB3xF,UAAUm5F,uBAAyB,WAC/C,OAAOtvF,KAAKqwD,KAAKk/B,qBAUrBzH,GAAgB3xF,UAAUq2C,SAAW,SAASI,GAC1C,GAAIA,EAAM25B,eAAgB,CAEtB,IAAMipB,EAAkBxvF,KAAKw2D,IAAIs3B,qBAEjC,GAAI0B,EAGA,OAAI5iD,IAAU4iD,EACHpkD,QAAQC,QAAQuB,GAGpBxB,QAAQE,OAAO,IAAIptC,MACtB,oDAKZ,OAAO8B,KAAKymE,aAAa,KAAM75B,IAQnCk7C,GAAgB3xF,UAAUs5F,2BAA6B,SAC/Ch5C,EACAtoB,GACJ,IAAMuhE,EAAY1vF,KAAK2vF,0BAOlBxhE,GAAOuhE,IAAcvhE,GACtBnuB,KAAK4qB,aAAa2C,KACdknB,EAAAA,0BACAz0C,KAAK64D,WAAYpiB,IAQ7BqxC,GAAgB3xF,UAAUy5F,qBAAuB,SAAShjD,GAStD,IAAIijD,EAEJ,GATI7vF,KAAKgpF,gBAAkBp8C,EAAM+J,iBAAmB/J,EAAMuuB,YACtDn7D,KAAKgpF,gBAAiB,EAGtBhpF,KAAKqwD,KAAKy/B,gBAAgB9vF,KAAKqwD,KAAK0/B,WAAW,IAK/C/vF,KAAKipF,kBAAmB,CACxB,IAAM+G,EAAUxpF,EAAAA,QAAQsI,mBAAmB9O,KAAKipF,mBAEhD4G,EAAmB7vF,KAAK05D,aAAas2B,GAGzChwF,KAAK4qB,aAAa2C,KAAKknB,EAAAA,mBAA0C7H,EAAOijD,IAO5E/H,GAAgB3xF,UAAUw2F,oBAAsB,SAAS//C,GACrDA,EAAMqjD,eAAe,MACrBjwF,KAAKw2D,IAAI05B,iBAAiBtjD,GAC1BA,EAAMiT,oBAAoByZ,EAAAA,mBACtB1sB,EAAMujD,aACVvjD,EAAMiT,oBAAoByZ,EAAAA,0BACtB1sB,EAAMwjD,mBAKNxjD,EAAM25B,gBAAkB35B,EAAME,YAAcC,EAAAA,EAAUC,SACtDhtC,KAAK6vB,WAAWkB,wBAAuB,GAG3C/wB,KAAK4qB,aAAa2C,KAAKknB,EAAAA,cAAqC7H,IAShEk7C,GAAgB3xF,UAAUuiF,YAAc,SAAS9rC,GAC7C,OAAO5sC,KAAKymE,aAAa75B,EAAO,OAYpCk7C,GAAgB3xF,UAAUswE,aAAe,SAASN,EAAUC,GAAU,IAAAvF,EAAA7gE,KAElE,OAAImmE,GACIA,EAASqO,SACFppC,QAAQE,OACX,IAAI3Y,EAAAA,EAAgBskB,EAAAA,oBAG5BmvB,GACIA,EAASoO,SACFppC,QAAQE,OACX,IAAI3Y,EAAAA,EAAgBskB,EAAAA,oBAKzBj3C,KAAKqwF,gBAAgBlqB,EAAUC,GACjCl+B,KAAK,WAUF,OATIi+B,GACAtF,EAAK8rB,oBAAoBxmB,GAEzBC,GAGAvF,EAAKyvB,eAAelqB,GAGjBh7B,QAAQC,WAChB,SAAAz7B,GAAK,OAAIw7B,QAAQE,OAAO,IAAIptC,MAAM0R,OAe7Ck4E,GAAgB3xF,UAAUk6F,gBAAkB,SAASlqB,EAAUC,GAC3D,IAAMmqB,EAAuB,GAgB7B,OAdIvwF,KAAKwoF,iBACL+H,EAAqB1yF,KACjBmC,KAAKwoF,iBAAiB/hB,aAAaN,EAAUC,IAEjDl9C,EAAOpZ,KAAK,0CAGZ9P,KAAKiqF,iBACLsG,EAAqB1yF,KACjBmC,KAAKiqF,iBAAiBxjB,aAAaN,EAAUC,IAEjDl9C,EAAOpZ,KAAK,0CAGTs7B,QAAQ+K,IAAIo6C,IAOvBzI,GAAgB3xF,UAAUm6F,eAAiB,SAASlqB,GAChD,GAAIA,EAASzvB,gBAAmByvB,EAASG,gBAC9BH,EAASt5B,YAAcC,EAAAA,EAAUC,QAAU,CAElD,IACMpG,EADUoL,EAAAA,EAAIsB,oCAEN1Z,KACN,SAAA/kC,GAAC,OACGA,EAAE2xC,OAAF,GAAAnpC,OAAc+oE,EAASuR,WAAWnxC,KAAlC,UACO3xC,EAAEyyC,QAAU8+B,EAASuR,WAAWrwC,QAE/CV,GACApc,EAAAA,EAAWqH,0BACPmgB,EAAAA,EAAIuB,4BAA4B3M,IAGxCw/B,EAASG,iBACTvmE,KAAK6uF,cAAc,aACnB7uF,KAAK0uF,YAAY,YAAa,CAC1Bl5F,MAAO4wE,EAASt5B,UAChB1kC,WAAY,CACRoI,MAAO,qCAInBxQ,KAAKw2D,IAAIg6B,cAAcpqB,GAGnBA,EAASzvB,eACT32C,KAAKqwD,KAAKogC,aAAarqB,EAASjL,WAEhCn7D,KAAKqwD,KAAKqgC,aAAatqB,EAASjL,WAGpCiL,EAAS+pB,YAAcnwF,KAAK4vF,qBAAqB75F,KAAKiK,KAAMomE,GAC5DA,EAASgqB,kBAAoBpwF,KAAKyvF,2BAA2B15F,KAAKiK,MAClEomE,EAAS77B,iBACL+uB,EAAAA,mBACA8M,EAAS+pB,aACb/pB,EAAS77B,iBACL+uB,EAAAA,0BACA8M,EAASgqB,mBAEbhqB,EAAS6pB,eAAejwF,MAExBA,KAAK4qB,aAAa2C,KAAKknB,EAAAA,YAAmC2xB,IAY9D0hB,GAAgB3xF,UAAU2jF,uBAAyB,SAASltC,GACxD,IAAM+jD,EAAsB,GAkB5B,OAhBI3wF,KAAKwoF,iBACLmI,EAAoB9yF,KAAKmC,KAAKwoF,iBAAiBoI,iBAAiBhkD,IAEhE1jB,EAAOpZ,KACH,uEAIJ9P,KAAKiqF,iBACL0G,EAAoB9yF,KAAKmC,KAAKiqF,iBAAiB2G,iBAAiBhkD,IAEhE1jB,EAAOpZ,KACH,uEAIDs7B,QAAQ+K,IAAIw6C,IAUvB7I,GAAgB3xF,UAAU6jF,wBAA0B,SAASptC,GACzD,IAAMikD,EAAuB,GAiB7B,OAfI7wF,KAAKwoF,iBACLqI,EAAqBhzF,KACjBmC,KAAKwoF,iBAAiBsI,kBAAkBlkD,IAE5C1jB,EAAOpZ,KACH,+DAEJ9P,KAAKiqF,iBACL4G,EAAqBhzF,KACjBmC,KAAKiqF,iBAAiB6G,kBAAkBlkD,IAE5C1jB,EAAOpZ,KACH,+DAGDs7B,QAAQ+K,IAAI06C,IAOvB/I,GAAgB3xF,UAAU46F,QAAU,WAChC,OAAO/wF,KAAKqwD,KAAK+vB,MAUrB0H,GAAgB3xF,UAAU66F,SAAW,WACjC,OAAKhxF,KAAKyd,WAIHjX,EAAAA,QAAQmI,iBAAiB3O,KAAKyd,WAAWkqE,YACxC3nF,KAAKyR,QAAQlW,OAAO01F,aAJjB,MAYfnJ,GAAgB3xF,UAAU84F,YAAc,WACpC,OAAOjvF,KAAKqwD,KAAOrwD,KAAKqwD,KAAK4+B,cAAgB,MAQjDnH,GAAgB3xF,UAAU+6F,KAAO,SAASjkC,GAAU,IAAAmU,EAAAphE,KAChD,OAAKA,KAAKivF,cAIH,IAAI7jD,QAAQ,SAACC,EAASC,GACzB81B,EAAK/Q,KAAK8gC,SACNlkC,GAAY,GACZ,WAAA,OAAM5hB,KACN,SAAApxB,GAAG,OAAIqxB,EAAOrxB,IACd,WAAA,OAAMqxB,EAAO8lD,EAAAA,4BARVhmD,QAAQE,OAAO,IAAIptC,MAAM,4BAgBxC4pF,GAAgB3xF,UAAUk7F,OAAS,WAC/B,OAAOrxF,KAAKkxF,QAWhBpJ,GAAgB3xF,UAAUm7F,kBAAoB,SAAS3xD,GACnD3/B,KAAKuxF,mBAAmB,CAAE5xD,KAe9BmoD,GAAgB3xF,UAAUo7F,mBAAqB,SAAS94B,GACpD,IAAKr4D,MAAMG,QAAQk4D,GACf,MAAM,IAAIv6D,MAAM,sDAGpB8B,KAAKw2D,IAAIg7B,gBAAgB/4B,IAU7BqvB,GAAgB3xF,UAAUs7F,eAAiB,SAAS9xD,GAChD3/B,KAAKw2D,IAAIk7B,YAAY/xD,IAOzBmoD,GAAgB3xF,UAAU+jE,SAAW,WACjC,OAAOl6D,KAAKw2D,IAAI0D,YAWpB4tB,GAAgB3xF,UAAUw1F,SAAW,SAASgG,GAC1C,IAAK9wF,OAAO+wF,UAAUD,KAAW9wF,OAAO6gB,SAASiwE,EAAO,IACpD,MAAM,IAAIzzF,MAAJ,4BAAAb,OAAsCs0F,IAEhD,IAAM37F,EAAI6K,OAAO8wF,GAEjB,GAAI37F,GAAK,EACL,MAAM,IAAI67F,WAAW,mCAMzB,GAJA7xF,KAAKw2D,IAAIm1B,SAAS31F,GAIdgK,KAAKiqF,iBAAkB,CACvB,IAAM6H,EAAsB,IAAN97F,EAEtBgK,KAAKiqF,iBACA8H,wBAAuB,EAAMD,GAC7BtmD,MAAM,SAAA57B,GACHsZ,EAAOtZ,MAAP,2CAAAvS,OAC+Cy0F,EAD/C,KAEIliF,OAepBk4E,GAAgB3xF,UAAUq+C,UAAY,SAAS7U,GAC3C,OAAO3/B,KAAKw2D,IAAIhiB,UAAU7U,IAO9BmoD,GAAgB3xF,UAAUwjE,gBAAkB,WACxC,OAAO1kE,OAAOy5B,KAAK1uB,KAAK05D,cAAc58D,IAAI,SAAShH,GAC/C,OAAOkK,KAAK05D,aAAa5jE,IAC1BkK,OASP8nF,GAAgB3xF,UAAU67F,oBACpB,WAA8B,IAArBC,EAAqBr0F,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,IAAAA,UAAA,GAExB87D,EAAe15D,KAAK25D,kBAOxB,OALKs4B,IACDv4B,EAAeA,EAAapgC,OAAO,SAAAjjC,GAAC,OAAKA,EAAE26F,cAIxCt3B,EAAa18D,OAAS,GAQrC8qF,GAAgB3xF,UAAUyjE,mBAAqB,SAAS36D,GACpD,OAAOe,KAAK05D,aAAaz6D,IAO7B6oF,GAAgB3xF,UAAU+7F,gBAAkB,SAASjzF,GACjD,IAAM85D,EAAc/4D,KAAK45D,mBAAmB36D,GAEvC85D,GAGL/4D,KAAKqwD,KAAK8hC,KAAKp5B,EAAY4uB,WAQ/BG,GAAgB3xF,UAAUi8F,qBAAuB,WACzCpyF,KAAKqyF,0BACGryF,KAAKwoF,kBAAoBxoF,KAAKgyF,sBAAwB,KAC9D79F,OAAOyjB,aAAa5X,KAAKqyF,yBACzBryF,KAAKqyF,wBAA0B,OASvCvK,GAAgB3xF,UAAUg2F,mBAAqB,WAAW,IAAAvqB,EAAA5hE,MAEjDA,KAAKwoF,kBACCxoF,KAAKgyF,uBAAyB,IAC7BhyF,KAAKqyF,0BACbryF,KAAKqyF,wBAA0Bl+F,OAAOyL,WAAW,WAC7CgiE,EAAKywB,wBAA0B,KAC/B7nE,EAAAA,EAAW6K,cAAc6K,OAAAA,EAAAA,EAAAA,CACrBnC,EAAAA,EACA,CACIuuB,KAAK,EACL92D,MArwCM,QAAA,OA+wC1BsyF,GAAgB3xF,UAAU25F,gBAAkB,SAAS7wF,GACjD,IAAM85D,EAAc/4D,KAAK45D,mBAAmB36D,GAEvC85D,GAGL/4D,KAAKqwD,KAAKy/B,gBAAgB/2B,EAAY4uB,UAAU,IAoBpDG,GAAgB3xF,UAAUm8F,eAAiB,SACnC5jF,EAAK6jF,EAAMnS,EAAM4Q,EAAUwB,EAAS14E,EAAQgzC,EAAU2lC,GAC1D,IAAMxzF,EAAKuH,EAAAA,QAAQsI,mBAAmBJ,GAEtC,GAAW,UAAPzP,GAAkBe,KAAK64D,aAAe55D,EAA1C,CAIA,IAAM85D,EACA,IAAI25B,EAAAA,EAAiBhkF,EAAK1O,KAAMuyF,EAAMvB,EAAUwB,EAAS14E,EAAQgzC,GAEvEiM,EAAY45B,MAAQvS,EACpBrnB,EAAY65B,SAAWH,EACvBzyF,KAAK05D,aAAaz6D,GAAM85D,EACxB/4D,KAAK4qB,aAAa2C,KACdknB,EAAAA,YACAx1C,EACA85D,GAEJ/4D,KAAK6yF,gBAAgB95B,GAErB/4D,KAAK8yF,uBACL9yF,KAAKmsF,uBAWTrE,GAAgB3xF,UAAU08F,gBAAkB,SAAS95B,GAAa,IAAAgJ,EAAA/hE,KAC9D+4D,EAAYg6B,cACP7qD,KAAK,SAAA/0B,GACF4lD,EAAYi6B,cAAgB7/E,EAASgc,IAAI,0BACzC4yC,EAAKkxB,oBAED9/E,EAASgc,IAAI,qCACb4pC,EAAYm6B,YAAY,mBAAmB,KAGlD1nD,MAAM,WAAA,OAAM,KASrBs8C,GAAgB3xF,UAAUg9F,wBAA0B,SAASzkF,EAAK+jF,GAI9D,IACMW,EADQpzF,KAAK25D,kBACU//B,KAAK,SAAAvjC,GAAC,OAAIA,EAAEsxF,WAAaj5E,IAEtD,GAAI0kF,EAAgB,CAChBA,EAAeR,SAAWH,EAC1B,IAAMxzF,EAAKuH,EAAAA,QAAQsI,mBAAmBJ,GAEtC1O,KAAK4qB,aAAa2C,KACdknB,EAAAA,iBACAx1C,EACAwzF,GAOHW,EAAeR,UAChB5yF,KAAK8yF,wBAIbhL,GAAgB3xF,UAAU82F,aAAe,SAASv+E,GAAK,IAAA4zD,EAAAtiE,KAC7Cf,EAAKuH,EAAAA,QAAQsI,mBAAmBJ,GAEtC,GAAW,UAAPzP,GAAkBe,KAAK64D,aAAe55D,EAA1C,CAIA,IAAM85D,EAAc/4D,KAAK05D,aAAaz6D,UAE/Be,KAAK05D,aAAaz6D,GAEHe,KAAKw2D,IAAIhgB,mBAAmBv3C,GAEpCgC,QACV,SAAA2rC,GAAK,OACD01B,EAAK13C,aAAa2C,KAAKknB,EAAAA,cAAqC7H,KAGhEmsB,GACA/4D,KAAK4qB,aAAa2C,KACdknB,EAAAA,UAAiCx1C,EAAI85D,GAG7C/4D,KAAK8yF,sBAAqB,GAC1B9yF,KAAKoyF,yBAYTtK,GAAgB3xF,UAAUk9F,eAAiB,SAASC,EAAgBtD,EAASuD,GACzE,IAAM1D,EAAmB7vF,KAAK05D,aAAas2B,GAE3C,GAAIsD,EAMA,OALAtzF,KAAK4qB,aAAa2C,KACdknB,EAAAA,OAA8Bo7C,QAElC7vF,KAAK0sF,QAKT,IAAM8G,EAAoBxzF,KAAK05D,aAAa65B,GAE5CvzF,KAAK4qB,aAAa2C,KACdknB,EAAAA,mBAA0Co7C,EAAkB2D,IAOpE1L,GAAgB3xF,UAAUs9F,mBAAqB,SAASrT,GAEpDpgF,KAAK4qB,aAAa2C,KACdknB,EAAAA,kBAAyCz0C,KAAK64D,WAAYunB,IAGlE0H,GAAgB3xF,UAAUu9F,kBAAoB,SAAShlF,EAAK0xE,GACxD,IAAMnhF,EAAKuH,EAAAA,QAAQsI,mBAAmBJ,GAChCqqD,EAAc/4D,KAAK45D,mBAAmB36D,GAEvC85D,IAGLA,EAAY45B,MAAQvS,EACpBpgF,KAAK4qB,aAAa2C,KAAKknB,EAAAA,kBAAyCx1C,EAAImhF,KAGxE0H,GAAgB3xF,UAAUw9F,qBAAuB,SAASjlF,EAAK8mE,GAC3D,IAAMv2E,EAAKuH,EAAAA,QAAQsI,mBAAmBJ,GAChCqqD,EAAc/4D,KAAK45D,mBAAmB36D,GAEvC85D,GAIDA,EAAY66B,eAAiBpe,IAIjCzc,EAAY66B,aAAepe,EAC3Bx1E,KAAK4qB,aAAa2C,KACdknB,EAAAA,qBACAx1C,EACAu2E,KAURsS,GAAgB3xF,UAAU8hE,mBAAqB,SAASrrB,GAAO,IAAAm2B,EAAA/iE,KAC3D,IAAI4sC,EAAMwG,OAAUpzC,KAAK85D,cAKlB,GAAKltB,EAAMwG,QAASpzC,KAAK85D,cAAzB,CAOP,IAAM76D,EAAK2tC,EAAMysB,mBACXN,EAAc/4D,KAAK45D,mBAAmB36D,GAE5C,GAAK85D,EAAL,CAOAA,EAAY86B,QAAQh2F,KAAK+uC,GAErB5sC,KAAKmvF,aACLnvF,KAAKmvF,YAAY3iD,SAASI,GAG9B,IAAMuX,EAAUnkD,KAAK4qB,aAErBgiB,EAAMrC,iBACF+uB,EAAAA,mBACA,WAAA,OAAMnV,EAAQ52B,KAAKknB,EAAAA,mBAA0C7H,KACjEA,EAAMrC,iBACF+uB,EAAAA,0BACA,SAAC7iB,EAAYtoB,GACS40C,EAAK4sB,4BAELxhE,GACdg2B,EAAQ52B,KACJknB,EAAAA,0BACAx1C,EACAw3C,KAKhB0N,EAAQ52B,KAAKknB,EAAAA,YAAmC7H,QA/B5C1jB,EAAOtZ,MAAP,gCAAAvS,OAA6C4B,SAV7CiqB,EAAOpZ,KACH,8DANJoZ,EAAOpZ,KACH,8DAuDZg4E,GAAgB3xF,UAAU29F,eAAiB,SAASzyE,EAAS2kD,GACrDhmE,KAAKiqF,mBAAqB5oE,IAC1B6H,EAAOpZ,KAAK,iBACZ9P,KAAKiqF,iBAAiB8J,UAAU/tB,KAYxC8hB,GAAgB3xF,UAAU69F,gBAAkB,SAAS3yE,EAAS4yE,GACtDj0F,KAAKiqF,mBAAqB5oE,IAC1B6H,EAAOpZ,KAAK,wBACZ9P,KAAKiqF,iBAAiBiK,iBAAiBD,KAU/CnM,GAAgB3xF,UAAUgiE,qBAAuB,SAASg8B,GAAc,IAAA9wB,EAAArjE,KACpEA,KAAK25D,kBAAkB14D,QAAQ,SAAA83D,GAG3B,IAFA,IAAMrjB,EAASqjB,EAAYvqB,YAElBj6C,EAAI,EAAGA,EAAImhD,EAAO14C,OAAQzI,IAC/B,GAAImhD,EAAOnhD,KAAO4/F,EAAc,CAG5Bp7B,EAAY86B,QAAQv2F,OAAO/I,EAAG,GAE9B8uE,EAAKz4C,aAAa2C,KACdknB,EAAAA,cAAqC0/C,GAErC9wB,EAAK8rB,aACL9rB,EAAK8rB,YAAYzW,YAAYyb,GAGjC,QAGTn0F,OAMP8nF,GAAgB3xF,UAAUi+F,mBAAqB,SACvCC,EACA3yB,GAEJ,IAAI4yB,EAECtpE,EAAAA,EAAQupE,cAMDv0F,KAAKusF,gBAAmBvsF,KAAKwsF,uBAM9BxsF,KAAKiqF,mBAEZqK,EAAe,CACX/6E,OAAQ,OACR2qD,kBAAmB,0BACnBswB,SAAU,sCAVdF,EAAe,CACX/6E,OAAQ,UACR2qD,kBAAmB,eACnBswB,SAAU,0CATdF,EAAe,CACX/6E,OAAQ,2BACR2qD,kBAAmB,oBACnBswB,SAAU,gDAiBdF,EACAt0F,KAAKy0F,oBAAoBJ,EAAeC,GAExCt0F,KAAK00F,uBAAuBL,EAAe3yB,IAOnDomB,GAAgB3xF,UAAUw+F,eAAiB,SACnCN,EACA3yB,EACAnkD,GAEJ,GAAI82E,EAAcjhD,MACdpzC,KAAKo0F,mBAAmBC,EAAe3yB,OACpC,CACH,IAAK1hE,KAAKqwD,KAAKukC,QAAQP,EAAch4B,WAAY,CAC7C,IAAMukB,EAAc,6CASpB,YAPA5gF,KAAKy0F,oBACDJ,EAAe,CACX96E,OAAQ,iBACR2qD,kBAAmB0c,EACnB4T,SAAU5T,IAKtB5gF,KAAK60F,uBAAuBR,EAAe3yB,EAAankD,KAOhEuqE,GAAgB3xF,UAAU0+F,uBAAyB,SAC3CR,EACA3yB,EACAnkD,GAAK,IAAAqmD,EAAA5jE,KAGTA,KAAKwoF,iBAAmB6L,EACxBr0F,KAAKqwD,KAAKzF,gBAAgB,oBAAsBrtC,EAE5Cvd,KAAKkpF,YACL1+D,EAAAA,EAAWyK,oBACPiL,OAAAA,EAAAA,EAAAA,CAAkBtC,EAAAA,EAAuB,CAAE0uB,KAAK,KAGxD,IAAMwoC,EACAv5C,EAAEmmB,GACC9nC,KAAK,4DACL7sB,KAAK,UAEd/M,KAAK4qB,aAAa2C,KACdknB,EAAAA,sBACAqgD,GAEJ90F,KAAKoyF,uBACL5nE,EAAAA,EAAW6K,cAAc6K,OAAAA,EAAAA,EAAAA,CACrBpC,EAAAA,EACA,CACIwuB,KAAK,EACL92D,MAAO+nB,KAEf,IACI82E,EAAchsC,WAAWroD,KAAKqwD,KAAMrwD,KAAKw2D,IAAKx2D,KAAKyR,QAAQlW,QAC7D,MAAOqU,GACLq1B,EAAAA,EAAqBC,iBAAiBt1B,GAI1C5P,KAAK+0F,kBAAkBrzB,EAAa2yB,EAAcroE,gBAGlD,IACIqoE,EAAcW,YACVtzB,EACA,WAIQkC,EAAK9J,eAAiB8J,EAAK4kB,kBAC3B5kB,EAAKqxB,yCAGb,SAAArlF,GACIq1B,EAAAA,EAAqBC,iBAAiBt1B,GACtCsZ,EAAOtZ,MACH,2CAA4CA,IAEpD5P,KAAKw1C,kBAOTtsB,EAAOpZ,KAAK,4CACZ9P,KAAK6vB,WAAWZ,eACZjvB,KAAKwoF,iBAAiBx8D,eACtB,SACJhsB,KAAK6vB,WAAW9D,iBAAiB/rB,KAAKwoF,iBAAiBx8D,gBACzD,MAAOhtB,GACLimC,EAAAA,EAAqBC,iBAAiBlmC,GACtCkqB,EAAOtZ,MAAM5Q,KAarB8oF,GAAgB3xF,UAAU4+F,kBAAoB,SAASzvB,EAAS9e,GAC5D,IAUI0uC,EAVArhD,EAAQ,KACNshD,EACA55C,EAAE+pB,GACC1rC,KAAK,iCACLw7D,QAQT,OANyB,IAArBD,EAAUn4F,SACV62C,EAAQshD,EAAU,GAAG/mF,aAAa,QAK9BpO,KAAKyR,QAAQlW,OAAO85F,mBAC5B,IAAK,cACL,KAAK,EACL,UAAK16F,EACDu6F,EAAoB,cACpB,MACJ,IAAK,YACDA,EAAoB,YAIE,gBAAtBA,GACIlqE,EAAAA,EAAQsqE,yBACZJ,EAAoB,aAGE,gBAAtBA,EACAl1F,KAAKw2D,IAAI++B,wBAAwB/uC,EAAI,MACR,cAAtB0uC,GAAqCrhD,GAC5C7zC,KAAKw2D,IAAI++B,wBAAwB,KAAM1hD,IAgB/Ci0C,GAAgB3xF,UAAUs+F,oBAAsB,SACxCJ,EACA5iF,GACAA,GAAWA,EAAQ+iF,UACnBvvD,EAAAA,EAAqBC,iBAAiB,IAAIhnC,MAAMuT,EAAQ+iF,WAI5DH,EAAclwB,UACV,KACA,SAAAv0D,GACIsZ,EAAOnZ,KACH,qEACiCH,IACtC,CACC2J,OAAQ9H,GAAWA,EAAQ8H,OAC3B2qD,kBAAmBzyD,GAAWA,EAAQyyD,kBACtCF,sBAAsB,KAclC8jB,GAAgB3xF,UAAUq/F,YAAc,SAChCnB,EACAjwB,EACAC,GACJn7C,EAAOpZ,KAAP,eAAAzS,OACmB+mE,EADnB,OAAA/mE,OACwCgnE,EADxC,UAAAhnE,OAEQg3F,EAAcjhD,QAClBihD,IAAkBr0F,KAAKwoF,kBACvBxoF,KAAKkpF,YAAa,EAElB1+D,EAAAA,EAAW6K,cACP6K,OAAAA,EAAAA,EAAAA,CAAkBlC,EAAAA,EAAyB,CAAEsuB,KAAK,KAGlDtsD,KAAK6vB,aACL7vB,KAAK6vB,WAAW5D,gBACZjsB,KAAKwoF,iBAAiBx8D,gBAC1B9C,EAAOpZ,KAAK,0BACZ9P,KAAK6vB,WAAW3B,cACZluB,KAAKwoF,iBAAiBx8D,iBAI9BhsB,KAAKwoF,iBAAmB,KAGxBxoF,KAAKw2D,IAAIg/B,eACFnB,IAAkBr0F,KAAKiqF,kBAGN,YAApB7lB,GAAgD,iBAAfC,GACjCn7C,EAAOpZ,KAAK,6BACZ0a,EAAAA,EAAWqB,UAAUopB,uBAAuB,CAAEwgD,aAAa,KAChC,uBAApBrxB,GACW,eAAfC,GAIH75C,EAAAA,EAAWqB,UAAUopB,uBAAuB,CAAEygD,WAAW,IAE7D11F,KAAK21F,mBAELzsE,EAAOtZ,MACH,2CACAykF,EAAc79E,IACd69E,EAAch4B,UACd+H,EACAC,IAQZyjB,GAAgB3xF,UAAUy/F,kBAAoB,SAASvB,GAC9CA,EAAcjhD,QACfpzC,KAAK0sF,QACL1sF,KAAK4qB,aAAa2C,KAAKknB,EAAAA,oBAI/BqzC,GAAgB3xF,UAAU88F,kBAAoB,WAK1C,IAJA,IAAItK,GAAuB,EACrBjvB,EAAe15D,KAAK25D,kBAGjBplE,EAAI,EAAGA,EAAImlE,EAAa18D,OAAQzI,GAAK,EAC1C,GAAImlE,EAAanlE,GAAGshG,eAAgB,CAChClN,GAAuB,EACvB,MAGJA,IAAyB3oF,KAAK2oF,uBAC9B3oF,KAAK2oF,qBAAuBA,EAC5B3oF,KAAK4qB,aAAa2C,KACdknB,EAAAA,qBACAk0C,KASZb,GAAgB3xF,UAAU2/F,gBAAkB,WACxC,OAAO91F,KAAK2oF,sBAOhBb,GAAgB3xF,UAAU0iE,SAAW,WACjC,OACI74D,KAAKqwD,MAAQrwD,KAAKqwD,KAAK0/B,UACjBvpF,EAAAA,QAAQsI,mBAAmB9O,KAAKqwD,KAAK0/B,WACrC,MAGdjI,GAAgB3xF,UAAU4/F,UAAY,SAASC,EAAOC,EAAU7gF,GAC5D,IAAKpV,KAAK0oF,YAAa,CACnB,IAAMwN,EAAiBl2F,KAAK2vF,0BAE5B,IAAKuG,EAGD,YAFAhtE,EAAOnZ,KAAK,wCAKhB,IAAM0lC,EAAaz1C,KAAK6tF,qBAExB,IAAKp4C,EAGD,YAFAvsB,EAAOnZ,KAAK,2CAIhB/P,KAAK0oF,YAAc,IAAIyN,EAAAA,EAAiB1gD,EAAYygD,GAGxDl2F,KAAK0oF,YAAYqN,UAAUC,EAAOC,EAAU7gF,IAUhD0yE,GAAgB3xF,UAAUigG,eAAiB,SAAS3kF,GAChD,OAAIzR,KAAKqwD,KACErwD,KAAKoqF,iBAAiBgM,eAAe3kF,GAGzC25B,QAAQE,OAAO,IAAIptC,MAAM,wCAUpC4pF,GAAgB3xF,UAAUkgG,cAAgB,SAAS76B,GAC/C,OAAIx7D,KAAKqwD,KACErwD,KAAKoqF,iBAAiBiM,cAAc76B,GAGxCpwB,QAAQE,OAAO,IAAIptC,MAAM,wCAMpC4pF,GAAgB3xF,UAAUmgG,sBAAwB,WAC9C,QAAIt2F,KAAKqwD,MACErwD,KAAKqwD,KAAKimC,yBAUzBxO,GAAgB3xF,UAAUy4D,KAAO,SAAS3T,GACtC,OAAIj7C,KAAKqwD,KACErwD,KAAKqwD,KAAKzB,KAAK3T,GAGnB,IAAI7P,QAAQ,SAACC,EAASC,GACzBA,EAAO,IAAIptC,MAAM,0CAOzB4pF,GAAgB3xF,UAAUogG,OAAS,WAC/B,OAAIv2F,KAAKqwD,KACErwD,KAAKqwD,KAAKkmC,SAGd,IAAInrD,QAAQ,SAACC,EAASC,GACzBA,EAAO,IAAIptC,MAAM,0CAOzB4pF,GAAgB3xF,UAAUqgG,iBAAmB,WACzC,OAAOx2F,KAAK4uD,KAAK,0BAOrBk5B,GAAgB3xF,UAAUsgG,gBAAkB3O,GAAgB3xF,UAAUogG,OAKtEzO,GAAgB3xF,UAAUugG,eAAiB,WACvC,OAAI12F,KAAKqwD,KACErwD,KAAKqwD,KAAKqmC,iBAGd,MAMX5O,GAAgB3xF,UAAUwgG,YAAc,WACpC,OAAI32F,KAAKqwD,KACErwD,KAAKqwD,KAAKsmC,cAGd,MAWX7O,GAAgB3xF,UAAUw5F,wBAA0B,WAChD,OAAI3vF,KAAK85D,cACE95D,KAAKiqF,iBAAiBj+D,eAG1BhsB,KAAKwoF,iBAAmBxoF,KAAKwoF,iBAAiBx8D,eAAiB,MAW1E87D,GAAgB3xF,UAAUgkF,mBAAqB,WAC3C,IAAM+b,EAAiBl2F,KAAK2vF,0BAE5B,OAAOuG,EAAiBA,EAAe/b,qBAAuB,MASlE2N,GAAgB3xF,UAAUygG,oBAAsB,SAASC,GAChD72F,KAAKivF,gBAGVjvF,KAAK+oF,iBAAmB8N,EACxB72F,KAAKqwD,KAAKy+B,mBAAmB,cAC7B9uF,KAAKqwD,KAAKs+B,cAAc,aAAc,CAClCvmF,WAAY,CACRq6B,MAAOo0D,EAAOp0D,MACdlB,MAAOs1D,EAAOt1D,MACd/wB,MAAO,0CAGfxQ,KAAKqwD,KAAKx4C,iBAOdiwE,GAAgB3xF,UAAU2gG,oBAAsB,WAC5C,OAAO92F,KAAK+oF,kBAMhBjB,GAAgB3xF,UAAU4gG,kBAAoB,WAC1C,OAAO/2F,KAAK6oF,iBAMhBf,GAAgB3xF,UAAU6gG,kBAAoB,WAC1C,OAAOh3F,KAAK8oF,iBAMhBhB,GAAgB3xF,UAAU8gG,QAAU,WAChC,IAAMzzF,EAAOxD,KAAKyqB,KAAKysE,eAEjBC,EAAW,GAEjBA,EAASC,KAAO,IAAI3kF,KACpB0kF,EAAShoD,IAAMh7C,OAAO4vB,SAAS2iE,KAC/ByQ,EAASltB,GAAKjiC,UAAUmV,UAExB,IAAM3tC,EAAMxP,KAAKyqB,KAAK4sE,aAQtB,OANI7nF,IACA2nF,EAAS1sE,KAAOjb,GAGpBhM,EAAK2zF,SAAWA,EAET3zF,GAMXskF,GAAgB3xF,UAAU4xF,mBAAqB,WAC3C,OAAO/nF,KAAKqwD,KAAKzF,iBAMrBk9B,GAAgB3xF,UAAU+1F,4BAA8B,SAASp3F,EAAMU,GACnEwK,KAAK0uF,YAAL,qBAAArxF,OAAsCvI,GAAQ,CAAEU,MAAAA,KAMpDsyF,GAAgB3xF,UAAUmhG,+BAAiC,SAASxiG,GAChEkL,KAAK6uF,cAAL,qBAAAxxF,OAAwCvI,IACxCkL,KAAKqwD,KAAKx4C,gBASdiwE,GAAgB3xF,UAAUohG,4BAA8B,SAASziG,GAC7D,IAAMoB,EAAW8J,KAAKqwD,KAAKmnC,QAAQC,MAAM79D,KAAK,SAAA79B,GAAI,OAC9CA,EAAK+P,UAAL,qBAAAzO,OAAsCvI,KAG1C,OAAOoB,EAAWA,EAASV,WAAQmF,GAWvCmtF,GAAgB3xF,UAAUs+B,aAAe,SACjCijE,EACAC,GACJ,OAAO33F,KAAK6vB,WAAW4E,aAAaijE,EAAiBC,IAUzD7P,GAAgB3xF,UAAUo6B,mBAAqB,WAC3C,OAAOvwB,KAAK6vB,WAAWU,sBAU3Bu3D,GAAgB3xF,UAAU0+E,eAAiB,SAASjoC,EAAOgoC,GACvD,IAAMtiD,EAAUsa,EAAMta,UAClBtB,EAAO,KACLoiB,EAAQxG,EAAMwG,MACdwkD,EAAexkD,EAAQxG,EAAMysB,mBAAqB,QAClD68B,EACA9iD,EACIpzC,KAAKiqF,kBAAoBjqF,KAAKiqF,iBAAiBj+D,eAC/ChsB,KAAKwoF,kBAAoBxoF,KAAKwoF,iBAAiBx8D,eAErDsG,EAEI4jE,IACAllE,EAAOklE,EAAe2B,aAAajrD,IAGvC5b,EAAO4b,EAAMkrD,UAEZljB,EAAU31E,IAAO+xB,GAASklE,GAI/Bl2F,KAAK6vB,WAAWwC,4BACZ6jE,EACAllE,EACAsB,EACAslE,EACAhrD,EAAMmrD,gBACNnjB,EAAU31E,KAUlB6oF,GAAgB3xF,UAAUq+B,mBAAqB,SAASnlB,GACpDmb,EAAAA,EAAWkJ,QAAQrkB,IAWvBy4E,GAAgB3xF,UAAU6hG,SAAW,SAASC,GAC1C,OAAOj4F,KAAKqwD,KAAOrwD,KAAKqwD,KAAKukC,QAAQqD,GAAU,MAMnDnQ,GAAgB3xF,UAAU+hG,+BAAiC,WACvDl4F,KAAK4qB,aAAa2C,KAAKknB,EAAAA,kBACnB28C,EAAAA,+BAWRtJ,GAAgB3xF,UAAUgiG,oBAAsB,SAAS57E,EAAI6e,GACzDp7B,KAAKw2D,IAAI4hC,mBAAmB77E,EAAI6e,IASpC0sD,GAAgB3xF,UAAUkiG,yBAA2B,SAASj9D,GAC1Dp7B,KAAKm4F,oBAAoB,GAAI/8D,IAiBjC0sD,GAAgB3xF,UAAU0gD,YAAc,SAChCxnC,GAEgC,IADhCkN,EACgC3e,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAD3B,GACL06F,EAAgC16F,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,IAAAA,UAAA,GAC9B26F,EAAW94F,EAAU4P,GAK3B,GAAoB,WAAhBkpF,IACQD,GAA0C,WAAhBC,EAMtC,GAAID,EACAt4F,KAAKm4F,oBAAoB57E,EAAIlN,OAC1B,CACH,IAAImpF,EAAgBnpF,EAIhBi/E,EAAc,OAElB,GAAoB,WAAhBiK,EAA0B,CAC1BjK,EAAc,eAGTkK,EAAcpiG,eAAeo0D,EAAAA,KAC9BguC,EAAchuC,EAAAA,GAAuB,IAGzC,IACIguC,EAAgBzhF,KAAKyK,UAAUg3E,GACjC,MAAOx5F,GAGL,YAFAkqB,EAAOtZ,MAAM,6CAA8C5Q,IAM/Dud,EACAvc,KAAKwuF,uBAAuBjyE,EAAIi8E,EAAelK,GAG/CtuF,KAAKquF,gBAAgBmK,EAAelK,QAnCxCplE,EAAOtZ,MAAP,kCAAAvS,OAA+Ck7F,KAyCvDzQ,GAAgB3xF,UAAUsiG,wBAA0B,WAChD,OAAOz4F,KAAK85D,cACN95D,KAAKgqF,2BAA6BhqF,KAAK0pF,4BAQjD5B,GAAgB3xF,UAAUs0F,4BAA8B,SAASppE,GACzDA,EAAQ+xB,MACRpzC,KAAKgqF,4BAA6B,EAElChqF,KAAK0pF,4BAA6B,EAElCroE,EAAQ+xB,QAAUpzC,KAAK85D,eACvB95D,KAAK4qB,aAAa2C,KAAKknB,EAAAA,yBAS/BqzC,GAAgB3xF,UAAUuiG,uBAAyB,SAASr3E,GAGpDA,EAAQ+xB,OAGR5oB,EAAAA,EAAWqB,UAAUopB,uBAAuB,CAAEygD,WAAW,IAErD11F,KAAKiqF,kBACLz/D,EAAAA,EAAWyK,oBACPqL,OAAAA,EAAAA,EAAAA,CACIlC,EAAAA,EACA,CACIygC,UAAW7+D,KAAKiqF,iBAAiB1tB,eAIjDv8D,KAAK21F,gBAAgB,qBAAsB,eACpCt0E,GAAWrhB,KAAKwoF,mBAAqBnnE,IACxCrhB,KAAKyqB,KAAKokC,mBACV7uD,KAAK6sF,kBAAoB,IAAI8L,EAAAA,EAAsB34F,MACnDA,KAAK6sF,kBAAkB9mE,MAAM1E,KAG7B6H,EAAOpZ,KAAK,uDACZuR,EAAQu3E,+BAUpB9Q,GAAgB3xF,UAAUu0F,yBAA2B,SAASrpE,GACtDA,EAAQ+xB,MACRpzC,KAAKgqF,4BAA6B,GAElChqF,KAAK0pF,4BAA6B,EAClC1pF,KAAK6sF,mBAAqB7sF,KAAK6sF,kBAAkBC,UAGjDzrE,EAAQ+xB,QAAUpzC,KAAK85D,eACvB95D,KAAK4qB,aAAa2C,KAAKknB,EAAAA,sBAU/BqzC,GAAgB3xF,UAAUu+F,uBAAyB,SAC3CL,EACA3yB,GACJ1hE,KAAKgqF,4BAA6B,EAGlChqF,KAAKiqF,iBAAmBoK,EAExBr0F,KAAKiqF,iBAAiB5hC,WAAWroD,KAAKqwD,KAAMrwD,KAAKw2D,IAAKx2D,KAAKyR,QAAQlW,QAEnE2tB,EAAOpZ,KAAK,4CAEZ,IAAI+oF,EAAWryF,EAAAA,QAAQsI,mBAAmB9O,KAAKiqF,iBAAiB5tB,WAEhE,GAAIr8D,KAAKyR,QAAQlW,OAAO+vF,cAAe,CACnC,IAAMvyB,EAAc/4D,KAAK05D,aAAam/B,GAElC9/B,IACA8/B,EAAW9/B,EAAY+/B,cAAgBD,GAI/C74F,KAAK6vB,WAAWZ,eACZjvB,KAAKiqF,iBAAiBj+D,eACtB6sE,GAEJ,IAAM1mD,EAAcnyC,KAAKw1C,iBAEzBx1C,KAAKiqF,iBAAiB+K,YAClBtzB,EACA,WACIx4C,EAAOrZ,MAAM,wCAEjB,SAAAD,GACIsZ,EAAOtZ,MACH,+CAAgDA,IAExDuiC,IAOR21C,GAAgB3xF,UAAU4iG,oBAAsB,WAC5C/4F,KAAKg5F,iBACD,MAAOh5F,KAAKwoF,iBAAiBx8D,eAAe8pB,oBAOpDgyC,GAAgB3xF,UAAU8iG,oBAAsB,WAC5Cj5F,KAAKg5F,iBACD,MAAOh5F,KAAKiqF,iBAAiBj+D,eAAe8pB,oBAUpDgyC,GAAgB3xF,UAAU6iG,iBAAmB,SAASE,EAAStjD,GAAc,IAAApmB,GAAA,EAAAC,GAAA,EAAAC,OAAA/0B,EAAA,IACzE,IAAA,IAAAg1B,EAAAC,EAAoBgmB,EAApBtgD,OAAAw4B,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAkC,CAAA,IAAvBod,EAAuBjd,EAAAn6B,MAC9B0zB,EAAOpZ,KAAP,iBAAAzS,OAA6B67F,EAA7B,YAAA77F,OAA+CuvC,IAC/C5sC,KAAKw2D,IAAI5rC,aAAa2C,KAAK6Y,EAAAA,mBAA8BwG,IAHY,MAAA3yB,GAAAwV,GAAA,EAAAC,EAAAzV,EAAA,QAAA,IAAAuV,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,QAAA,GAAAqB,EAAA,MAAAC,KAc7Eo4D,GAAgB3xF,UAAUw0F,4BAA8B,SAChD0J,GAC0B,OAA1Br0F,KAAKiqF,mBAILjqF,KAAKm5F,yBACCn5F,KAAKiqF,iBAAiB5sB,uBAGF,OAA1Br9D,KAAKwoF,mBACLxoF,KAAKo5F,yBACCp5F,KAAKwoF,iBAAiBnrB,uBAGhC,IAAIrvC,GAAO,EACLqrE,EAAmBr5F,KAAKyR,QAAQlW,OAAO89F,iBAmB7C,GAhBKhF,EAAcjhD,MAERpzC,KAAKiqF,mBAAqBoK,GACjCnrE,EAAOtZ,MAAM,0DAEboe,GAAO,IACCqmE,EAAc93B,aACS,iBAArB88B,GACPv4F,KAAK2U,SAAW4jF,IACnBnwE,EAAOpZ,KAAP,+BAAAzS,OAA2Cg8F,EAA3C,SACA7uE,EAAAA,EAAWqB,UAAUopB,uBAAuB,CAAEwgD,aAAa,IAC3Dz1F,KAAK21F,gBAAgB,UAAW,gBAEhC3nE,GAAO,GAZPA,GAAO,GAeN5rB,MAAMpC,KAAKm5F,4BACR/2F,MAAMpC,KAAKo5F,0BAA2B,CAC1C,IAAME,EACAt5F,KAAKm5F,yBAA2Bn5F,KAAKo5F,yBAE3C5uE,EAAAA,EAAW6K,cACPoJ,EAAAA,EACA,CAAEjpC,MAAO8jG,IAGbjF,EAAcjhD,QAAUpzC,KAAK85D,eAC7B95D,KAAK4qB,aAAa2C,KAAKknB,EAAAA,wBAGvBzmB,IAMJhuB,KAAKu5F,eAAc,GAGfv5F,KAAKwoF,iBACLxoF,KAAKw5F,yBAELtwE,EAAOpZ,KAAK,mDAGhB9P,KAAKi5F,sBAGDj5F,KAAKwoF,kBACLxoF,KAAKi1F,wCAGT/rE,EAAOpZ,KAAK,6CACZ9P,KAAK6vB,WAAW9D,iBAAiB/rB,KAAKiqF,iBAAiBj+D,gBAEvDxB,EAAAA,EAAWyK,oBACPqL,OAAAA,EAAAA,EAAAA,CACInC,EAAAA,EACA,CACI0gC,UAAW7+D,KAAKiqF,iBAAiB1tB,iBAajDurB,GAAgB3xF,UAAUy0F,kBAAoB,WAA0B,IAAjBx1D,EAAiBx3B,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAC1D67F,GAAWC,GAAAA,CAAQtkE,EAAYp1B,KAAKo1B,YAG1C,GADAp1B,KAAKo1B,WAAaA,EACdqkE,EAAS,CACTz5F,KAAK4qB,aAAa2C,KACdknB,EAAAA,mBACAz0C,KAAKo1B,YAGa,CAIlB,eAGA,aACA,gBAGUn0B,QAAQ,SAAAnL,QACM6E,IAApBy6B,EAAWt/B,IACX00B,EAAAA,EAAWqB,UAAUopB,uBAArB0kD,EAAA,GACK7jG,EAAIqH,QAAQ,IAAK,KAAOi4B,EAAWt/B,SAaxDgyF,GAAgB3xF,UAAUyjG,YAAc,SAAS9jG,GAC7C,OAAOkK,KAAKo1B,WAAWt/B,IAO3BgyF,GAAgB3xF,UAAU0jG,4BAA8B,WAChD75F,KAAK6pF,uBACL3gE,EAAOpZ,KAAK,mCACZ8H,aAAa5X,KAAK6pF,sBAClB7pF,KAAK6pF,qBAAuB,OASpC/B,GAAgB3xF,UAAUqjG,uBAAyB,WAC/Cx5F,KAAK85F,oBACD,MAAO95F,KAAKwoF,iBAAiBx8D,eAAe8pB,oBAQpDgyC,GAAgB3xF,UAAU4jG,uBAAyB,WAC/C/5F,KAAK85F,oBACD,MAAO95F,KAAKiqF,iBAAiBj+D,eAAe8pB,oBAUpDgyC,GAAgB3xF,UAAU2jG,oBAAsB,SACxCE,EACApkD,GAAc,IAAA9lB,GAAA,EAAAC,GAAA,EAAAC,OAAAr1B,EAAA,IAClB,IAAA,IAAAs1B,EAAAC,EAAoB0lB,EAApBtgD,OAAAw4B,cAAAgC,GAAAG,EAAAC,EAAAnC,QAAAC,MAAA8B,GAAA,EAAkC,CAAA,IAAvB8c,EAAuB3c,EAAAz6B,MAC9B0zB,EAAOpZ,KAAP,mBAAAzS,OAA+B28F,EAA/B,YAAA38F,OAAyDuvC,IACzD5sC,KAAKw2D,IAAI5rC,aAAa2C,KAAK6Y,EAAAA,qBAAgCwG,IAH7C,MAAA3yB,GAAA8V,GAAA,EAAAC,EAAA/V,EAAA,QAAA,IAAA6V,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,QAAA,GAAA2B,EAAA,MAAAC,KAWtB83D,GAAgB3xF,UAAU8jG,qCAAuC,WAC7D/wE,EAAOpZ,KAAK,sDACZ9P,KAAKwoF,iBAAiBuJ,wBAAuB,GAAM,GAAM7pD,KACrD,WACIhf,EAAOpZ,KAAK,oDAEhB,SAAAF,GACIsZ,EAAOtZ,MACH,2DACAA,MAWhBk4E,GAAgB3xF,UAAUojG,cAAgB,SAASvgC,GAC/C,GAAIh5D,KAAKssD,MAAQ0M,EAAjB,CAMA,GADAh5D,KAAKssD,IAAM0M,EACPA,EAAW,CACX9vC,EAAOpZ,KAAK,wCAIZ0a,EAAAA,EAAWqB,UAAUopB,uBAAuB,CACxCygD,WAAW,EACXD,aAAa,IAKjB,IAAM3D,EAAwC,IAAxB9xF,KAAKw2D,IAAI0D,WAE/Bl6D,KAAKiqF,iBACA8H,wBAAuB,EAAMD,GAC7BtmD,MAAM,SAAA57B,GACHsZ,EAAOtZ,MACH,8CAAA,IAAAvS,OACUy0F,EADV,KAC4BliF,UAGxCsZ,EAAOpZ,KAAK,mCAIZ9P,KAAKwoF,kBACLxoF,KAAK6vB,WAAWW,gCACZxwB,KAAKwoF,iBAAiBx8D,gBAAiBgtC,GAI/Ch5D,KAAK0oF,YAAc,KAGnB1oF,KAAK4qB,aAAa2C,KACdknB,EAAAA,WACAz0C,KACAA,KAAKssD,KAGTtsD,KAAK4qB,aAAa2C,KACdvtB,KAAKy4F,0BACChkD,EAAAA,uBACAA,EAAAA,0BAjDNvrB,EAAOrZ,MAAP,8CAAAxS,OAA2D27D,KAyDnE8uB,GAAgB3xF,UAAU+jG,iBAAmB,SAAS79B,GAElD,GADAr8D,KAAK65F,8BACD75F,KAAKiqF,iBACL/gE,EAAOtZ,MAAM,oCADjB,CAMA5P,KAAKgqF,4BAA6B,EAClChqF,KAAKiqF,iBACCjqF,KAAKyqB,KAAKhN,WAAWg+B,OAAO0+C,oBAC1Bn6F,KAAKqwD,KAAK0/B,UACV1zB,GACRnzC,EAAOpZ,KACH,gCAAiC9P,KAAKqwD,KAAK0/B,UAAW1zB,GAE1Dr8D,KAAKiqF,iBAAiB5hC,WAAWroD,KAAKqwD,KAAMrwD,KAAKw2D,IAAKx2D,KAAKyR,QAAQlW,QAEnE2tB,EAAOpZ,KAAK,4CAEZ,IAAI+oF,EAAWryF,EAAAA,QAAQsI,mBAAmB9O,KAAKiqF,iBAAiB5tB,WAEhE,GAAIr8D,KAAKyR,QAAQlW,OAAO+vF,cAAe,CACnC,IAAMvyB,EAAc/4D,KAAK05D,aAAam/B,GAElC9/B,IACA8/B,EAAW9/B,EAAY+/B,cAAgBD,GAI/C74F,KAAK6vB,WAAWZ,eACZjvB,KAAKiqF,iBAAiBj+D,eACtB6sE,GAKJ,IAAM1mD,EAAcnyC,KAAKw1C,iBAEzBx1C,KAAKiqF,iBAAiBmQ,OAAOjoD,KAOjC21C,GAAgB3xF,UAAU8+F,sCAAwC,WAC9D/rE,EAAOpZ,KAAK,wDACZ9P,KAAKwoF,iBAAiBuJ,wBAAuB,GAAO,GAAO7pD,KACvD,WACIhf,EAAOpZ,KAAK,uDAEhB,SAAAF,GACIsZ,EAAOtZ,MACH,4DACAA,MAWhBk4E,GAAgB3xF,UAAU28F,qBAAuB,SAASuH,GACtD,GAAKrvE,EAAAA,EAAQupE,eACLv0F,KAAKusF,iBACNvsF,KAAKwsF,uBAFZ,CAOA,IAAM8N,EAAQt6F,KAAK25D,kBACb4gC,EAAYD,EAAMt9F,OAClBiyF,EAAcjvF,KAAKivF,cACnBuL,OACkD7/F,IAAlD2/F,EAAM1gE,KAAK,SAAAvjC,GAAC,MAAmB,gBAAfA,EAAEu8F,WAGlB6H,EAA8B,IAAdF,IAAoBC,EAa1C,GAXAtxE,EAAOrZ,MAAP,qBAAAxS,OACyB4xF,EADzB,iBAAA5xF,OAEQk9F,EAFR,kBAAAl9F,OAEkCm9F,EAFlC,QAAAn9F,OAGQo9F,KAGHA,GAAiBz6F,KAAK6pF,sBACvB7pF,KAAK65F,+BAIJ75F,KAAKiqF,kBAAoBwQ,EAAe,CACzC,IAAM1xC,EAAOwxC,GAAaD,EAAM,GAG1BI,EAAO16F,KAAK64D,WACZ8hC,EAAU5xC,EAAKmQ,QAErB,GAAIwhC,EAAOC,EAKP,YAJAzxE,EAAOrZ,MACH,2DACqC6qF,EAAMC,GAG5C,GAAID,IAASC,EAGhB,YAFAzxE,EAAOtZ,MAAM,kBAAmB8qF,EAAMC,GAK1C,IAAMjsF,EAAMq6C,EAAK4+B,SAEjB,GAAI0S,EAAe,CACf,GAAIr6F,KAAK6pF,qBAGL,YAFA3gE,EAAOtZ,MAAM,+CAIjBsZ,EAAOpZ,KAAP,wBAAAzS,OAC4BqR,EAD5B,WAAArR,OAEQ2C,KAAK+pF,eAFb,gBAGA/pF,KAAK6pF,qBAAuBjqF,WACxBI,KAAKk6F,iBAAiBnkG,KAAKiK,KAAM0O,GACX,IAAtB1O,KAAK+pF,qBAET7gE,EAAOpZ,KAAP,wBAAAzS,OAAoCqR,IACpC1O,KAAKk6F,iBAAiBxrF,QAEnB1O,KAAKiqF,mBAAqBwQ,IACjCvxE,EAAOpZ,KAAP,uBAAAzS,OAAmC2C,KAAKiqF,iBAAiB5tB,YAGrDr8D,KAAKiqF,iBAAiB1tB,aAAeg+B,EAAY,GACjD/vE,EAAAA,EAAWyK,oBACPqL,OAAAA,EAAAA,EAAAA,CAAejC,EAAAA,IAEvBr+B,KAAK21F,wBArELzsE,EAAOpZ,KAAK,sBAiFpBg4E,GAAgB3xF,UAAUw/F,gBAAkB,SACpCp8E,EACA2qD,GACJ,GAAKlkE,KAAKiqF,iBAAV,CAMA,IAAM2Q,EAAoB56F,KAAK85D,cAG3B8gC,IACI56F,KAAKwoF,kBACLxoF,KAAKi6F,uCAITj6F,KAAK+5F,0BAIT7wE,EAAOpZ,KAAK,4CACZ9P,KAAK6vB,WAAW5D,gBAAgBjsB,KAAKiqF,iBAAiBj+D,gBACtD9C,EAAOpZ,KAAK,yCACZ9P,KAAK6vB,WAAW3B,cAAcluB,KAAKiqF,iBAAiBj+D,gBAEpDhsB,KAAKiqF,iBAAiB9lB,UAClB,WACIj7C,EAAOpZ,KAAK,iCAEhB,SAAAF,GAcQ2J,GACA2P,EAAOtZ,MACH,iEAC6BA,IAEtC,CACC2J,OAAQA,GAAkB,UAC1B2qD,kBAAmBA,GACO,yBAC1BF,qBAAsBhkE,KAAKqwD,MACpBrwD,KAAK45D,mBACJpzD,EAAAA,QAAQsI,mBAAmB9O,KAAKiqF,iBAAiB5tB,cAGjEr8D,KAAKiqF,iBAAmB,KAGxBjqF,KAAKu5F,eAAc,GAEfqB,IAEI56F,KAAKwoF,iBACLxoF,KAAK+4F,sBAEL7vE,EAAOpZ,KAAK,uDAjEhBoZ,EAAOtZ,MAAM,kCA4ErBk4E,GAAgB3xF,UAAU2jE,YAAc,WACpC,OAAO95D,KAAKssD,KAShBw7B,GAAgB3xF,UAAU0kG,sBAAwB,WAC9C,OAAI76F,KAAK85D,cACE95D,KAAKiqF,iBAAiBj+D,eAAemuD,qBAGzC,MAOX2N,GAAgB3xF,UAAU2kG,gBAAkB,WACxC,IAAMR,EAAQt6F,KAAK25D,kBAGnB,GAAqB,IAAjB2gC,EAAMt9F,OAKN,MAAM,IAAIkB,MACN,kEALJ,IAAM68F,EAAUT,EAAM,GAAG3S,SAEzB3nF,KAAKk6F,iBAAiBa,IAU9BjT,GAAgB3xF,UAAU6kG,eAAiB,WACvCh7F,KAAK21F,mBAOT7N,GAAgB3xF,UAAU8kG,gBAAkB,WACxC,OAAOj7F,KAAK2pF,sBAAsBuR,YAWtCpT,GAAgB3xF,UAAUglG,2BAA6B,SAC/CzmD,GACJ10C,KAAKw2D,IAAI2kC,2BAA2BzmD,IAgBxCozC,GAAgB3xF,UAAUilG,wBACpB,SAASC,EAAY7lB,GACnB,OAAKx1E,KAAKqwD,KAIHrwD,KAAKkqF,kBACPkR,wBAAwBC,EAAY7lB,GAJ9B,IAAIt3E,MAAMo9F,EAAAA,6TC/lG7B,IAAIC,EAAmB,IAGnBC,EAAiB,4BAGjBC,EAAuB,EACvBC,EAAyB,EAGzBpmB,EAAmB,iBAGnBqmB,EAAU,qBACVC,EAAW,iBACXC,EAAW,yBACXC,EAAU,mBACVC,EAAU,gBACVC,EAAW,iBACXC,EAAU,oBACVC,EAAS,6BACTC,EAAS,eACTC,EAAY,kBACZC,EAAU,gBACVC,EAAY,kBAEZC,EAAW,iBACXC,EAAY,kBACZC,EAAS,eACTC,EAAY,kBACZC,EAAY,kBACZC,EAAe,qBAGfC,EAAiB,uBACjBC,EAAc,oBAkBdC,EAAe,8BAGfC,EAAW,mBAGXC,EAAiB,GACrBA,EAxBiB,yBAwBYA,EAvBZ,yBAwBjBA,EAvBc,sBAuBYA,EAtBX,uBAuBfA,EAtBe,uBAsBYA,EArBZ,uBAsBfA,EArBsB,8BAqBYA,EApBlB,wBAqBhBA,EApBgB,yBAoBY,EAC5BA,EAAetB,GAAWsB,EAAerB,GACzCqB,EAAeJ,GAAkBI,EAAenB,GAChDmB,EAAeH,GAAeG,EAAelB,GAC7CkB,EAAejB,GAAYiB,EAAehB,GAC1CgB,EAAed,GAAUc,EAAeb,GACxCa,EAAeX,GAAaW,EAAeT,GAC3CS,EAAeR,GAAUQ,EAAeP,GACxCO,EAxCiB,qBAwCY,EAG7B,IAAIC,EAA8B,gBAAjB,IAAOC,EAAP,YAAA19F,EAAO09F,KAAsBA,GAAUA,EAAOloG,SAAWA,QAAUkoG,EAGhFC,EAA0B,WAAf,oBAAOx6E,KAAP,YAAAnjB,EAAOmjB,QAAoBA,MAAQA,KAAK3tB,SAAWA,QAAU2tB,KAGxE/uB,EAAOqpG,GAAcE,GAAYn9F,SAAS,cAATA,GAGjCo9F,EAAgC,UAAlB59F,EAAO1L,IAAuBA,IAAYA,EAAQ4X,UAAY5X,EAG5EupG,EAAaD,GAAgC,UAAjB59F,EAAOzL,IAAsBA,IAAWA,EAAO2X,UAAY3X,EAGvFupG,EAAgBD,GAAcA,EAAWvpG,UAAYspG,EAGrDG,EAAcD,GAAiBL,EAAWptB,QAG1C2tB,EAAY,WACd,IACE,OAAOD,GAAeA,EAAYrsB,SAAWqsB,EAAYrsB,QAAQ,QACjE,MAAOnyE,KAHK,GAOZ0+F,EAAmBD,GAAYA,EAASE,aAuD5C,SAASC,EAAUrkE,EAAOskE,GAIxB,IAHA,IAAIx/F,GAAS,EACTrB,EAAkB,MAATu8B,EAAgB,EAAIA,EAAMv8B,SAE9BqB,EAAQrB,GACf,GAAI6gG,EAAUtkE,EAAMl7B,GAAQA,EAAOk7B,GACjC,OAAO,EAGX,OAAO,EAkET,SAASukE,EAAWhhG,GAClB,IAAIuB,GAAS,EACT4R,EAAS7P,MAAMtD,EAAIwwB,MAKvB,OAHAxwB,EAAImE,QAAQ,SAASzL,EAAOM,GAC1Bma,IAAS5R,GAAS,CAACvI,EAAKN,KAEnBya,EAwBT,SAAS8tF,EAAW3xE,GAClB,IAAI/tB,GAAS,EACT4R,EAAS7P,MAAMgsB,EAAIkB,MAKvB,OAHAlB,EAAInrB,QAAQ,SAASzL,GACnBya,IAAS5R,GAAS7I,IAEbya,EAIT,IAeM+tF,EAvCW99F,EAAMqiD,EAwBnB07C,EAAa79F,MAAMjK,UACnB+nG,EAAYj+F,SAAS9J,UACrBgoG,EAAclpG,OAAOkB,UAGrBioG,EAAavqG,EAAK,sBAGlBwqG,EAAeH,EAAUz9F,SAGzBrK,EAAiB+nG,EAAY/nG,eAG7BkoG,GACEN,EAAM,SAASO,KAAKH,GAAcA,EAAW1vE,MAAQ0vE,EAAW1vE,KAAK8vE,UAAY,KACvE,iBAAmBR,EAAO,GAQtCS,GAAuBN,EAAY19F,SAGnCi+F,GAAa/Z,OAAO,IACtB0Z,EAAa3pG,KAAK0B,GAAgB+G,QA7PjB,sBA6PuC,QACvDA,QAAQ,yDAA0D,SAAW,KAI5EwhG,GAASpB,EAAgB1pG,EAAK8qG,YAAShkG,EACvCrF,GAASzB,EAAKyB,OACd+8E,GAAax+E,EAAKw+E,WAClBusB,GAAuBT,EAAYS,qBACnCthG,GAAS2gG,EAAW3gG,OACpBuhG,GAAiBvpG,GAASA,GAAOC,iBAAcoF,EAG/CmkG,GAAmB7pG,OAAO8pG,sBAC1BC,GAAiBL,GAASA,GAAOM,cAAWtkG,EAC5CukG,IAnEah/F,EAmEQjL,OAAOy5B,KAnET6zB,EAmEettD,OAlE7B,SAASuL,GACd,OAAON,EAAKqiD,EAAU/hD,MAoEtB2+F,GAAWC,GAAUvrG,EAAM,YAC3B82B,GAAMy0E,GAAUvrG,EAAM,OACtBu3C,GAAUg0D,GAAUvrG,EAAM,WAC1Bi4B,GAAMszE,GAAUvrG,EAAM,OACtBwrG,GAAUD,GAAUvrG,EAAM,WAC1ByrG,GAAeF,GAAUnqG,OAAQ,UAGjCsqG,GAAqBC,GAASL,IAC9BM,GAAgBD,GAAS70E,IACzB+0E,GAAoBF,GAASp0D,IAC7Bu0D,GAAgBH,GAAS1zE,IACzB8zE,GAAoBJ,GAASH,IAG7BQ,GAAcvqG,GAASA,GAAOa,eAAYwE,EAC1CmlG,GAAgBD,GAAcA,GAAYE,aAAUplG,EASxD,SAASqlG,GAAKC,GACZ,IAAI5hG,GAAS,EACTrB,EAAoB,MAAXijG,EAAkB,EAAIA,EAAQjjG,OAG3C,IADAgD,KAAKupE,UACIlrE,EAAQrB,GAAQ,CACvB,IAAIkjG,EAAQD,EAAQ5hG,GACpB2B,KAAKosB,IAAI8zE,EAAM,GAAIA,EAAM,KA+F7B,SAASC,GAAUF,GACjB,IAAI5hG,GAAS,EACTrB,EAAoB,MAAXijG,EAAkB,EAAIA,EAAQjjG,OAG3C,IADAgD,KAAKupE,UACIlrE,EAAQrB,GAAQ,CACvB,IAAIkjG,EAAQD,EAAQ5hG,GACpB2B,KAAKosB,IAAI8zE,EAAM,GAAIA,EAAM,KA4G7B,SAASE,GAASH,GAChB,IAAI5hG,GAAS,EACTrB,EAAoB,MAAXijG,EAAkB,EAAIA,EAAQjjG,OAG3C,IADAgD,KAAKupE,UACIlrE,EAAQrB,GAAQ,CACvB,IAAIkjG,EAAQD,EAAQ5hG,GACpB2B,KAAKosB,IAAI8zE,EAAM,GAAIA,EAAM,KA+F7B,SAASG,GAASxyE,GAChB,IAAIxvB,GAAS,EACTrB,EAAmB,MAAV6wB,EAAiB,EAAIA,EAAO7wB,OAGzC,IADAgD,KAAKsgG,SAAW,IAAIF,KACX/hG,EAAQrB,GACfgD,KAAKyrB,IAAIoC,EAAOxvB,IA2CpB,SAASkiG,GAAMN,GACb,IAAIz8F,EAAOxD,KAAKsgG,SAAW,IAAIH,GAAUF,GACzCjgG,KAAKstB,KAAO9pB,EAAK8pB,KAmGnB,SAASkzE,GAAchrG,EAAOirG,GAC5B,IAAIC,EAAQngG,GAAQ/K,GAChBmrG,GAASD,GAASE,GAAYprG,GAC9BqrG,GAAUH,IAAUC,GAAS1B,GAASzpG,GACtCsrG,GAAUJ,IAAUC,IAAUE,GAAUlD,GAAanoG,GACrDurG,EAAcL,GAASC,GAASE,GAAUC,EAC1C7wF,EAAS8wF,EAloBf,SAAmB/qG,EAAGgrG,GAIpB,IAHA,IAAI3iG,GAAS,EACT4R,EAAS7P,MAAMpK,KAEVqI,EAAQrI,GACfia,EAAO5R,GAAS2iG,EAAS3iG,GAE3B,OAAO4R,EA2nBoBgxF,CAAUzrG,EAAMwH,OAAQsF,QAAU,GACzDtF,EAASiT,EAAOjT,OAEpB,IAAK,IAAIlH,KAAON,GACTirG,IAAarqG,EAAe1B,KAAKc,EAAOM,IACvCirG,IAEQ,UAAPjrG,GAEC+qG,IAAkB,UAAP/qG,GAA0B,UAAPA,IAE9BgrG,IAAkB,UAAPhrG,GAA0B,cAAPA,GAA8B,cAAPA,IAEtDorG,GAAQprG,EAAKkH,KAElBiT,EAAOpS,KAAK/H,GAGhB,OAAOma,EAWT,SAASkxF,GAAa5nE,EAAOzjC,GAE3B,IADA,IAAIkH,EAASu8B,EAAMv8B,OACZA,KACL,GAAIokG,GAAG7nE,EAAMv8B,GAAQ,GAAIlH,GACvB,OAAOkH,EAGX,OAAQ,EA0BV,SAASqkG,GAAW7rG,GAClB,OAAa,MAATA,OACemF,IAAVnF,EAAsBonG,EAAeP,EAEtCwC,IAAkBA,MAAkB5pG,OAAOO,GA0arD,SAAmBA,GACjB,IAAI8rG,EAAQlrG,EAAe1B,KAAKc,EAAOqpG,IACnC31F,EAAM1T,EAAMqpG,IAEhB,IACErpG,EAAMqpG,SAAkBlkG,EACxB,IAAI4mG,GAAW,EACf,MAAOviG,IAET,IAAIiR,EAASwuF,GAAqB/pG,KAAKc,GACnC+rG,IACED,EACF9rG,EAAMqpG,IAAkB31F,SAEjB1T,EAAMqpG,KAGjB,OAAO5uF,EA1bHuxF,CAAUhsG,GA4iBhB,SAAwBA,GACtB,OAAOipG,GAAqB/pG,KAAKc,GA5iB7BisG,CAAejsG,GAUrB,SAASksG,GAAgBlsG,GACvB,OAAOmsG,GAAansG,IAAU6rG,GAAW7rG,IAAUmmG,EAiBrD,SAASiG,GAAYpsG,EAAOqsG,EAAOC,EAASC,EAAY/yF,GACtD,OAAIxZ,IAAUqsG,IAGD,MAATrsG,GAA0B,MAATqsG,IAAmBF,GAAansG,KAAWmsG,GAAaE,GACpErsG,GAAUA,GAASqsG,GAAUA,EAmBxC,SAAyB5rG,EAAQ4rG,EAAOC,EAASC,EAAYC,EAAWhzF,GACtE,IAAIizF,EAAW1hG,GAAQtK,GACnBisG,EAAW3hG,GAAQshG,GACnBM,EAASF,EAAWrG,EAAWwG,GAAOnsG,GACtCosG,EAASH,EAAWtG,EAAWwG,GAAOP,GAKtCS,GAHJH,EAASA,GAAUxG,EAAUW,EAAY6F,IAGhB7F,EACrBiG,GAHJF,EAASA,GAAU1G,EAAUW,EAAY+F,IAGhB/F,EACrBkG,EAAYL,GAAUE,EAE1B,GAAIG,GAAavD,GAAShpG,GAAS,CACjC,IAAKgpG,GAAS4C,GACZ,OAAO,EAETI,GAAW,EACXK,GAAW,EAEb,GAAIE,IAAcF,EAEhB,OADAtzF,IAAUA,EAAQ,IAAIuxF,IACd0B,GAAYtE,GAAa1nG,GAC7BwsG,GAAYxsG,EAAQ4rG,EAAOC,EAASC,EAAYC,EAAWhzF,GAiKnE,SAAoB/Y,EAAQ4rG,EAAO34F,EAAK44F,EAASC,EAAYC,EAAWhzF,GACtE,OAAQ9F,GACN,KAAK4zF,EACH,GAAK7mG,EAAOysG,YAAcb,EAAMa,YAC3BzsG,EAAO0sG,YAAcd,EAAMc,WAC9B,OAAO,EAET1sG,EAASA,EAAO2sG,OAChBf,EAAQA,EAAMe,OAEhB,KAAK/F,EACH,QAAK5mG,EAAOysG,YAAcb,EAAMa,aAC3BV,EAAU,IAAI3vB,GAAWp8E,GAAS,IAAIo8E,GAAWwvB,KAKxD,KAAK/F,EACL,KAAKC,EACL,KAAKK,EAGH,OAAOgF,IAAInrG,GAAS4rG,GAEtB,KAAK7F,EACH,OAAO/lG,EAAOnB,MAAQ+sG,EAAM/sG,MAAQmB,EAAOoZ,SAAWwyF,EAAMxyF,QAE9D,KAAKmtF,EACL,KAAKE,EAIH,OAAOzmG,GAAW4rG,EAAQ,GAE5B,KAAK1F,EACH,IAAI0G,EAAU/E,EAEhB,KAAKrB,EACH,IAAIqG,EAAYhB,EAAUrG,EAG1B,GAFAoH,IAAYA,EAAU9E,GAElB9nG,EAAOq3B,MAAQu0E,EAAMv0E,OAASw1E,EAChC,OAAO,EAGT,IAAIC,EAAU/zF,EAAM5Z,IAAIa,GACxB,GAAI8sG,EACF,OAAOA,GAAWlB,EAEpBC,GAAWpG,EAGX1sF,EAAMod,IAAIn2B,EAAQ4rG,GAClB,IAAI5xF,EAASwyF,GAAYI,EAAQ5sG,GAAS4sG,EAAQhB,GAAQC,EAASC,EAAYC,EAAWhzF,GAE1F,OADAA,EAAK,OAAW/Y,GACTga,EAET,KAAK0sF,EACH,GAAImD,GACF,OAAOA,GAAcprG,KAAKuB,IAAW6pG,GAAcprG,KAAKmtG,GAG9D,OAAO,EA9NDmB,CAAW/sG,EAAQ4rG,EAAOM,EAAQL,EAASC,EAAYC,EAAWhzF,GAExE,KAAM8yF,EAAUrG,GAAuB,CACrC,IAAIwH,EAAeX,GAAYlsG,EAAe1B,KAAKuB,EAAQ,eACvDitG,EAAeX,GAAYnsG,EAAe1B,KAAKmtG,EAAO,eAE1D,GAAIoB,GAAgBC,EAAc,CAChC,IAAIC,EAAeF,EAAehtG,EAAOT,QAAUS,EAC/CmtG,EAAeF,EAAerB,EAAMrsG,QAAUqsG,EAGlD,OADA7yF,IAAUA,EAAQ,IAAIuxF,IACfyB,EAAUmB,EAAcC,EAActB,EAASC,EAAY/yF,IAGtE,IAAKwzF,EACH,OAAO,EAGT,OADAxzF,IAAUA,EAAQ,IAAIuxF,IA6NxB,SAAsBtqG,EAAQ4rG,EAAOC,EAASC,EAAYC,EAAWhzF,GACnE,IAAI8zF,EAAYhB,EAAUrG,EACtB4H,EAAWC,GAAWrtG,GACtBstG,EAAYF,EAASrmG,OAErBwmG,EADWF,GAAWzB,GACD7kG,OAEzB,GAAIumG,GAAaC,IAAcV,EAC7B,OAAO,EAGT,IADA,IAAIzkG,EAAQklG,EACLllG,KAAS,CACd,IAAIvI,EAAMutG,EAAShlG,GACnB,KAAMykG,EAAYhtG,KAAO+rG,EAAQzrG,EAAe1B,KAAKmtG,EAAO/rG,IAC1D,OAAO,EAIX,IAAIitG,EAAU/zF,EAAM5Z,IAAIa,GACxB,GAAI8sG,GAAW/zF,EAAM5Z,IAAIysG,GACvB,OAAOkB,GAAWlB,EAEpB,IAAI5xF,GAAS,EACbjB,EAAMod,IAAIn2B,EAAQ4rG,GAClB7yF,EAAMod,IAAIy1E,EAAO5rG,GAGjB,IADA,IAAIwtG,EAAWX,IACNzkG,EAAQklG,GAAW,CAC1BztG,EAAMutG,EAAShlG,GACf,IAAIqlG,EAAWztG,EAAOH,GAClB6tG,EAAW9B,EAAM/rG,GAErB,GAAIisG,EACF,IAAI6B,EAAWd,EACXf,EAAW4B,EAAUD,EAAU5tG,EAAK+rG,EAAO5rG,EAAQ+Y,GACnD+yF,EAAW2B,EAAUC,EAAU7tG,EAAKG,EAAQ4rG,EAAO7yF,GAGzD,UAAmBrU,IAAbipG,EACGF,IAAaC,GAAY3B,EAAU0B,EAAUC,EAAU7B,EAASC,EAAY/yF,GAC7E40F,GACD,CACL3zF,GAAS,EACT,MAEFwzF,IAAaA,EAAkB,eAAP3tG,GAE1B,GAAIma,IAAWwzF,EAAU,CACvB,IAAII,EAAU5tG,EAAOohD,YACjBysD,EAAUjC,EAAMxqD,YAGhBwsD,GAAWC,GACV,gBAAiB7tG,GAAU,gBAAiB4rG,KACzB,mBAAXgC,GAAyBA,aAAmBA,GACjC,mBAAXC,GAAyBA,aAAmBA,KACvD7zF,GAAS,GAKb,OAFAjB,EAAK,OAAW/Y,GAChB+Y,EAAK,OAAW6yF,GACT5xF,EAzRA8zF,CAAa9tG,EAAQ4rG,EAAOC,EAASC,EAAYC,EAAWhzF,GA3D5Dg1F,CAAgBxuG,EAAOqsG,EAAOC,EAASC,EAAYH,GAAa5yF,IAsEzE,SAASi1F,GAAazuG,GACpB,SAAK0tD,GAAS1tD,KAwaE0K,EAxaiB1K,EAyaxB8oG,GAAeA,KAAcp+F,MAtaxB+iD,GAAWztD,GAASkpG,GAAa3B,GAChC7/F,KAAKsiG,GAAShqG,IAoa/B,IAAkB0K,EA9YlB,SAASgkG,GAASjuG,GAChB,GAyZIkuG,GADe3uG,EAxZFS,IAyZGT,EAAM6hD,YACtBvkC,EAAwB,mBAARqxF,GAAsBA,EAAKhuG,WAAcgoG,EAEtD3oG,IAAUsd,EA3Zf,OAAOosF,GAAWjpG,GAuZtB,IAAqBT,EACf2uG,EACArxF,EAvZA7C,EAAS,GACb,IAAK,IAAIna,KAAOb,OAAOgB,GACjBG,EAAe1B,KAAKuB,EAAQH,IAAe,eAAPA,GACtCma,EAAOpS,KAAK/H,GAGhB,OAAOma,EAgBT,SAASwyF,GAAYlpE,EAAOsoE,EAAOC,EAASC,EAAYC,EAAWhzF,GACjE,IAAI8zF,EAAYhB,EAAUrG,EACtB2I,EAAY7qE,EAAMv8B,OAClBwmG,EAAY3B,EAAM7kG,OAEtB,GAAIonG,GAAaZ,KAAeV,GAAaU,EAAYY,GACvD,OAAO,EAGT,IAAIrB,EAAU/zF,EAAM5Z,IAAImkC,GACxB,GAAIwpE,GAAW/zF,EAAM5Z,IAAIysG,GACvB,OAAOkB,GAAWlB,EAEpB,IAAIxjG,GAAS,EACT4R,GAAS,EACTo0F,EAAQvC,EAAUpG,EAA0B,IAAI2E,QAAW1lG,EAM/D,IAJAqU,EAAMod,IAAImN,EAAOsoE,GACjB7yF,EAAMod,IAAIy1E,EAAOtoE,KAGRl7B,EAAQ+lG,GAAW,CAC1B,IAAIE,EAAW/qE,EAAMl7B,GACjBslG,EAAW9B,EAAMxjG,GAErB,GAAI0jG,EACF,IAAI6B,EAAWd,EACXf,EAAW4B,EAAUW,EAAUjmG,EAAOwjG,EAAOtoE,EAAOvqB,GACpD+yF,EAAWuC,EAAUX,EAAUtlG,EAAOk7B,EAAOsoE,EAAO7yF,GAE1D,QAAiBrU,IAAbipG,EAAwB,CAC1B,GAAIA,EACF,SAEF3zF,GAAS,EACT,MAGF,GAAIo0F,GACF,IAAKzG,EAAUiE,EAAO,SAAS8B,EAAUY,GACnC,GA72BazuG,EA62BOyuG,GAANF,EA52BXl1E,IAAIr5B,KA62BFwuG,IAAaX,GAAY3B,EAAUsC,EAAUX,EAAU7B,EAASC,EAAY/yF,IAC/E,OAAOq1F,EAAKxmG,KAAK0mG,GA/2B/B,IAAyBzuG,IAi3BX,CACNma,GAAS,EACT,YAEG,GACDq0F,IAAaX,IACX3B,EAAUsC,EAAUX,EAAU7B,EAASC,EAAY/yF,GACpD,CACLiB,GAAS,EACT,OAKJ,OAFAjB,EAAK,OAAWuqB,GAChBvqB,EAAK,OAAW6yF,GACT5xF,EAyKT,SAASqzF,GAAWrtG,GAClB,OApZF,SAAwBA,EAAQuuG,EAAUC,GACxC,IAAIx0F,EAASu0F,EAASvuG,GACtB,OAAOsK,GAAQtK,GAAUga,EAhuB3B,SAAmBspB,EAAO1L,GAKxB,IAJA,IAAIxvB,GAAS,EACTrB,EAAS6wB,EAAO7wB,OAChB0nG,EAASnrE,EAAMv8B,SAEVqB,EAAQrB,GACfu8B,EAAMmrE,EAASrmG,GAASwvB,EAAOxvB,GAEjC,OAAOk7B,EAwtB2BorE,CAAU10F,EAAQw0F,EAAYxuG,IAkZzD2uG,CAAe3uG,EAAQy4B,GAAMm2E,IAWtC,SAASC,GAAWhoG,EAAKhH,GACvB,IAsHiBN,EACbgc,EAvHAhO,EAAO1G,EAAIwjG,SACf,OAuHgB,WADZ9uF,EAAI/R,EADSjK,EArHAM,KAuHmB,UAAR0b,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAVhc,EACU,OAAVA,GAxHDgO,EAAmB,iBAAP1N,EAAkB,SAAW,QACzC0N,EAAK1G,IAWX,SAASsiG,GAAUnpG,EAAQH,GACzB,IAAIN,EAxjCN,SAAkBS,EAAQH,GACxB,OAAiB,MAAVG,OAAiB0E,EAAY1E,EAAOH,GAujC/BivG,CAAS9uG,EAAQH,GAC7B,OAAOmuG,GAAazuG,GAASA,OAAQmF,EAp2BvCqlG,GAAK7pG,UAAUozE,MAvEf,WACEvpE,KAAKsgG,SAAWhB,GAAeA,GAAa,MAAQ,GACpDt/F,KAAKstB,KAAO,GAsEd0yE,GAAK7pG,UAAL,OAzDA,SAAoBL,GAClB,IAAIma,EAASjQ,KAAKmvB,IAAIr5B,WAAekK,KAAKsgG,SAASxqG,GAEnD,OADAkK,KAAKstB,MAAQrd,EAAS,EAAI,EACnBA,GAuDT+vF,GAAK7pG,UAAUf,IA3Cf,SAAiBU,GACf,IAAI0N,EAAOxD,KAAKsgG,SAChB,GAAIhB,GAAc,CAChB,IAAIrvF,EAASzM,EAAK1N,GAClB,OAAOma,IAAWurF,OAAiB7gG,EAAYsV,EAEjD,OAAO7Z,EAAe1B,KAAK8O,EAAM1N,GAAO0N,EAAK1N,QAAO6E,GAsCtDqlG,GAAK7pG,UAAUg5B,IA1Bf,SAAiBr5B,GACf,IAAI0N,EAAOxD,KAAKsgG,SAChB,OAAOhB,QAA8B3kG,IAAd6I,EAAK1N,GAAsBM,EAAe1B,KAAK8O,EAAM1N,IAyB9EkqG,GAAK7pG,UAAUi2B,IAZf,SAAiBt2B,EAAKN,GACpB,IAAIgO,EAAOxD,KAAKsgG,SAGhB,OAFAtgG,KAAKstB,MAAQttB,KAAKmvB,IAAIr5B,GAAO,EAAI,EACjC0N,EAAK1N,GAAQwpG,SAA0B3kG,IAAVnF,EAAuBgmG,EAAiBhmG,EAC9DwK,MAuHTmgG,GAAUhqG,UAAUozE,MApFpB,WACEvpE,KAAKsgG,SAAW,GAChBtgG,KAAKstB,KAAO,GAmFd6yE,GAAUhqG,UAAV,OAvEA,SAAyBL,GACvB,IAAI0N,EAAOxD,KAAKsgG,SACZjiG,EAAQ8iG,GAAa39F,EAAM1N,GAE/B,QAAIuI,EAAQ,IAIRA,GADYmF,EAAKxG,OAAS,EAE5BwG,EAAK8W,MAELhd,GAAO5I,KAAK8O,EAAMnF,EAAO,KAEzB2B,KAAKstB,KACA,KA0DT6yE,GAAUhqG,UAAUf,IA9CpB,SAAsBU,GACpB,IAAI0N,EAAOxD,KAAKsgG,SACZjiG,EAAQ8iG,GAAa39F,EAAM1N,GAE/B,OAAOuI,EAAQ,OAAI1D,EAAY6I,EAAKnF,GAAO,IA2C7C8hG,GAAUhqG,UAAUg5B,IA/BpB,SAAsBr5B,GACpB,OAAOqrG,GAAanhG,KAAKsgG,SAAUxqG,IAAQ,GA+B7CqqG,GAAUhqG,UAAUi2B,IAlBpB,SAAsBt2B,EAAKN,GACzB,IAAIgO,EAAOxD,KAAKsgG,SACZjiG,EAAQ8iG,GAAa39F,EAAM1N,GAQ/B,OANIuI,EAAQ,KACR2B,KAAKstB,KACP9pB,EAAK3F,KAAK,CAAC/H,EAAKN,KAEhBgO,EAAKnF,GAAO,GAAK7I,EAEZwK,MAyGTogG,GAASjqG,UAAUozE,MAtEnB,WACEvpE,KAAKstB,KAAO,EACZttB,KAAKsgG,SAAW,CACdz8F,KAAQ,IAAIm8F,GACZljG,IAAO,IAAK6tB,IAAOw1E,IACnB96E,OAAU,IAAI26E,KAkElBI,GAASjqG,UAAT,OArDA,SAAwBL,GACtB,IAAIma,EAAS60F,GAAW9kG,KAAMlK,GAAjB,OAAgCA,GAE7C,OADAkK,KAAKstB,MAAQrd,EAAS,EAAI,EACnBA,GAmDTmwF,GAASjqG,UAAUf,IAvCnB,SAAqBU,GACnB,OAAOgvG,GAAW9kG,KAAMlK,GAAKV,IAAIU,IAuCnCsqG,GAASjqG,UAAUg5B,IA3BnB,SAAqBr5B,GACnB,OAAOgvG,GAAW9kG,KAAMlK,GAAKq5B,IAAIr5B,IA2BnCsqG,GAASjqG,UAAUi2B,IAdnB,SAAqBt2B,EAAKN,GACxB,IAAIgO,EAAOshG,GAAW9kG,KAAMlK,GACxBw3B,EAAO9pB,EAAK8pB,KAIhB,OAFA9pB,EAAK4oB,IAAIt2B,EAAKN,GACdwK,KAAKstB,MAAQ9pB,EAAK8pB,MAAQA,EAAO,EAAI,EAC9BttB,MAyDTqgG,GAASlqG,UAAUs1B,IAAM40E,GAASlqG,UAAU0H,KAnB5C,SAAqBrI,GAEnB,OADAwK,KAAKsgG,SAASl0E,IAAI52B,EAAOgmG,GAClBx7F,MAkBTqgG,GAASlqG,UAAUg5B,IANnB,SAAqB35B,GACnB,OAAOwK,KAAKsgG,SAASnxE,IAAI35B,IAqG3B+qG,GAAMpqG,UAAUozE,MA3EhB,WACEvpE,KAAKsgG,SAAW,IAAIH,GACpBngG,KAAKstB,KAAO,GA0EdizE,GAAMpqG,UAAN,OA9DA,SAAqBL,GACnB,IAAI0N,EAAOxD,KAAKsgG,SACZrwF,EAASzM,EAAI,OAAW1N,GAG5B,OADAkK,KAAKstB,KAAO9pB,EAAK8pB,KACVrd,GA0DTswF,GAAMpqG,UAAUf,IA9ChB,SAAkBU,GAChB,OAAOkK,KAAKsgG,SAASlrG,IAAIU,IA8C3ByqG,GAAMpqG,UAAUg5B,IAlChB,SAAkBr5B,GAChB,OAAOkK,KAAKsgG,SAASnxE,IAAIr5B,IAkC3ByqG,GAAMpqG,UAAUi2B,IArBhB,SAAkBt2B,EAAKN,GACrB,IAAIgO,EAAOxD,KAAKsgG,SAChB,GAAI98F,aAAgB28F,GAAW,CAC7B,IAAI6E,EAAQxhG,EAAK88F,SACjB,IAAK31E,IAAQq6E,EAAMhoG,OAASu+F,EAAmB,EAG7C,OAFAyJ,EAAMnnG,KAAK,CAAC/H,EAAKN,IACjBwK,KAAKstB,OAAS9pB,EAAK8pB,KACZttB,KAETwD,EAAOxD,KAAKsgG,SAAW,IAAIF,GAAS4E,GAItC,OAFAxhG,EAAK4oB,IAAIt2B,EAAKN,GACdwK,KAAKstB,KAAO9pB,EAAK8pB,KACVttB,MA+hBT,IAAI6kG,GAAc/F,GAA+B,SAAS7oG,GACxD,OAAc,MAAVA,EACK,IAETA,EAAShB,OAAOgB,GA9sClB,SAAqBsjC,EAAOskE,GAM1B,IALA,IAAIx/F,GAAS,EACTrB,EAAkB,MAATu8B,EAAgB,EAAIA,EAAMv8B,OACnCioG,EAAW,EACXh1F,EAAS,KAEJ5R,EAAQrB,GAAQ,CACvB,IAAIxH,EAAQ+jC,EAAMl7B,GACdw/F,EAAUroG,EAAO6I,EAAOk7B,KAC1BtpB,EAAOg1F,KAAczvG,GAGzB,OAAOya,EAmsCAi1F,CAAYpG,GAAiB7oG,GAAS,SAASkvG,GACpD,OAAOvG,GAAqBlqG,KAAKuB,EAAQkvG,OAsd7C,WACE,MAAO,IA5cL/C,GAASf,GAkCb,SAASH,GAAQ1rG,EAAOwH,GAEtB,SADAA,EAAmB,MAAVA,EAAiBs4E,EAAmBt4E,KAE1B,iBAATxH,GAAqBwnG,EAAS9/F,KAAK1H,KAC1CA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQwH,EA4D7C,SAASwiG,GAASt/F,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOm+F,EAAa3pG,KAAKwL,GACzB,MAAOlB,IACT,IACE,OAAQkB,EAAO,GACf,MAAOlB,KAEX,MAAO,GAmCT,SAASoiG,GAAG5rG,EAAOqsG,GACjB,OAAOrsG,IAAUqsG,GAAUrsG,GAAUA,GAASqsG,GAAUA,GA5IrD1C,IAAYiD,GAAO,IAAIjD,GAAS,IAAIiG,YAAY,MAAQtI,GACxDnyE,IAAOy3E,GAAO,IAAIz3E,KAAQwxE,GAC1B/wD,IAzzCY,oBAyzCDg3D,GAAOh3D,GAAQC,YAC1Bvf,IAAOs2E,GAAO,IAAIt2E,KAAQ2wE,GAC1B4C,IApzCY,oBAozCD+C,GAAO,IAAI/C,OACzB+C,GAAS,SAAS5sG,GAChB,IAAIya,EAASoxF,GAAW7rG,GACpB2uG,EAAOl0F,GAAUqsF,EAAY9mG,EAAM6hD,iBAAc18C,EACjD0qG,EAAalB,EAAO3E,GAAS2E,GAAQ,GAEzC,GAAIkB,EACF,OAAQA,GACN,KAAK9F,GAAoB,OAAOzC,EAChC,KAAK2C,GAAe,OAAOtD,EAC3B,KAAKuD,GAAmB,MAr0Cf,mBAs0CT,KAAKC,GAAe,OAAOlD,EAC3B,KAAKmD,GAAmB,MAh0Cf,mBAm0Cb,OAAO3vF,IA8IX,IAAI2wF,GAAcc,GAAgB,WAAa,OAAO9jG,UAApB,IAAsC8jG,GAAkB,SAASlsG,GACjG,OAAOmsG,GAAansG,IAAUY,EAAe1B,KAAKc,EAAO,YACtDopG,GAAqBlqG,KAAKc,EAAO,WA0BlC+K,GAAUH,MAAMG,QAgDpB,IAAI0+F,GAAWD,IA4Of,WACE,OAAO,GA1LT,SAAS/7C,GAAWztD,GAClB,IAAK0tD,GAAS1tD,GACZ,OAAO,EAIT,IAAI0T,EAAMm4F,GAAW7rG,GACrB,OAAO0T,GAAO+yF,GAAW/yF,GAAOgzF,GAAUhzF,GAAO2yF,GAAY3yF,GAAOqzF,EA6BtE,SAAS+I,GAAS9vG,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GAAS8/E,EA4B7C,SAASpyB,GAAS1tD,GAChB,IAAIgc,EAAI/R,EAAUjK,GAClB,OAAgB,MAATA,IAA0B,UAARgc,GAA4B,YAARA,GA2B/C,SAASmwF,GAAansG,GACpB,OAAgB,MAATA,GAAiC,UAAhBiK,EAAOjK,GAoBjC,IAAImoG,GAAeD,EAhiDnB,SAAmBx9F,GACjB,OAAO,SAAS1K,GACd,OAAO0K,EAAK1K,IA8hDsB+vG,CAAU7H,GAnvBhD,SAA0BloG,GACxB,OAAOmsG,GAAansG,IAClB8vG,GAAS9vG,EAAMwH,WAAaigG,EAAeoE,GAAW7rG,KA+wB1D,SAASk5B,GAAKz4B,GACZ,OA1NgB,OADGT,EA2NAS,IA1NKqvG,GAAS9vG,EAAMwH,UAAYimD,GAAWztD,GA0NjCgrG,GAAcvqG,GAAUiuG,GAASjuG,GA3NhE,IAAqBT,EAqQrBxB,EAAOD,QAlNP,SAAiByB,EAAOqsG,GACtB,OAAOD,GAAYpsG,EAAOqsG,+DCtmD5B,SAAAt4E,GAAAl1B,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAkiE,IAAA,IAAAod,EAAAnxG,EAAA,GAAAoxG,EAAApxG,EAAA,GAAAqxG,EAAArxG,EAAA,IAAAsxG,EAAAtxG,EAAA2B,EAAA0vG,GAAAE,EAAAvxG,EAAA,IAAAwxG,EAAAxxG,EAAA2B,EAAA4vG,GAAAE,EAAAzxG,EAAA,GAAA0xG,EAAA1xG,EAAA,IAAA2xG,EAAA3xG,EAAA,GAAA4xG,EAAA5xG,EAAA,GAAA6xG,EAAA7xG,EAAA,GAAA8xG,EAAA9xG,EAAA2B,EAAAkwG,GAAAE,EAAA/xG,EAAA,IAAAgyG,EAAAhyG,EAAA2B,EAAAowG,GAAAE,EAAAjyG,EAAA,GAAAkyG,EAAAlyG,EAAA,GAAAmyG,EAAAnyG,EAAA2B,EAAAuwG,GAuBMr9E,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAMV,SAAS6+D,EAA4Bn2C,GAChDjyC,KAAKiyC,WAAaA,EAClBjyC,KAAKymG,cAAgB,GAGrBx0D,EAAWtlB,GAAG8nB,EAAAA,mBACV,SAAA7H,GACI,GAAKA,EAAMta,WAAc2f,EAAWpiB,WAApC,CAGA,IAAMxO,EACAurB,EAAMwG,MACFnB,EAAWg4C,iBAAmBh4C,EAAWu2C,iBAI7Cr6D,EAAO9M,GAAWA,EAAQ2K,gBAAmB,KAEnDimB,EAAWpiB,WAAWgB,cAClB1C,EACAye,EAAMuuB,UACNvuB,EAAM+I,cAOtByyC,EAA4BjyF,UAAUo1F,uBAAyB,WAAW,IAAA1jD,EAAA7nC,KAChEiyC,EAAajyC,KAAKiyC,WAClBy0D,EAAWz0D,EAAWoe,KAE5BrwD,KAAK2mG,kBAAoB,IAAIC,EAAAA,EAAsBF,EAC/C1mG,KAAKiyC,WAAWrnB,cAEpB87E,EAAS1zD,YAAYoZ,EAAAA,EAAWv0D,eAAgB,SAAAw8F,GACvCA,EAAcjhD,OAMfnB,EAAWukB,IAAIo2B,uBAMvB8Z,EAAS1zD,YACLoZ,EAAAA,EAAWt0D,oBACX,SAACu8F,EAAe/uB,IAGX+uB,EAAcjhD,OACRnB,EAAW8iD,kBACVzvB,EAAS+uB,EAAcroE,kBAIvC06E,EAAS1zD,YAAYoZ,EAAAA,EAAW51D,qBAC5B,SAAAqwG,GAIIr8E,EAAAA,EAAW6K,cAAckL,OAAAA,EAAAA,EAAAA,IAEzB0R,EAAWg3C,kBAAoB4d,EAG/B50D,EAAWukB,IAAIi6B,cAAa,GAAMvoD,KAC9B,WACI+J,EAAW+2C,gBAAiB,EAC5B/2C,EAAWg3C,kBAAoB,OAElCz9C,MACG,SAAA57B,GACIqiC,EAAWg3C,kBAAoB,KAC/B//D,EAAOnZ,KACH,gDAAiDH,OAKzE5P,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAWjyD,gBACtCs6C,EAAAA,iBAEJz0C,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW/zD,WACtCo8C,EAAAA,mBAGJiyD,EAAS1zD,YAAYoZ,EAAAA,EAAW/zD,WAC5B,WACIwvC,EAAKoK,WAAWy3C,4BAA6B,EAG7Cz0F,OAAOy5B,KAAKg4E,EAAS97C,iBAAiB3pD,QAAQ,SAAAnL,GAC1C,IAAMo/B,EACAqK,OAAAA,EAAAA,EAAAA,CAAiC,cAAAliC,OACjBvH,GACd,CAAEN,MAAOkxG,EAAS97C,gBAAgB90D,KAE1C00B,EAAAA,EAAW6K,cAAcH,KAI7BjgC,OAAOy5B,KAAKg4E,EAASj8E,KAAKmgC,iBAAiB3pD,QAAQ,SAAAnL,GAC/C,IAAMo/B,EACAqK,OAAAA,EAAAA,EAAAA,CAAiC,QAAAliC,OACvBvH,GACR,CAAEN,MAAOkxG,EAASj8E,KAAKmgC,gBAAgB90D,KAE/C00B,EAAAA,EAAW6K,cAAcH,OAIrCwxE,EAAS1zD,YAAYoZ,EAAAA,EAAW5yD,qBAAsB,SAACwF,EAAGqiB,GACjDA,EAAQ+xB,OACTnB,EAAWrnB,aAAa2C,KAAKknB,EAAAA,kBACzB28C,EAAAA,oBAA2CpyF,KAIvDgB,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAWxyD,gBACtC66C,EAAAA,kBACA28C,EAAAA,kBAEJpxF,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW1yD,mBACtC+6C,EAAAA,kBACA28C,EAAAA,kBACJpxF,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAWzyD,+BACtC86C,EAAAA,kBACA28C,EAAAA,mBAEJpxF,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAWvyD,qBACtC46C,EAAAA,kBACA28C,EAAAA,sBAEJpxF,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAWrzD,kBACtC07C,EAAAA,kBACA28C,EAAAA,mBAEJpxF,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW31D,wBACtCg+C,EAAAA,kBACA28C,EAAAA,yBAEJpxF,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW11D,YACtC+9C,EAAAA,kBACA28C,EAAAA,2BACJsV,EAAS1zD,YACLoZ,EAAAA,EAAW11D,YACX,WAAA,OAAM8zB,EAAAA,EAAW6K,cAAcwJ,OAAAA,EAAAA,EAAAA,MAEnC7+B,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW3yD,kBACtCg7C,EAAAA,kBACA28C,EAAAA,mBAEJpxF,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAWx0D,kBACtC68C,EAAAA,kBACA28C,EAAAA,mBAEJsV,EAAS1zD,YAAYoZ,EAAAA,EAAWh1D,sBAC5B,SAAAi9F,GACIpiD,EAAWymD,uBAAuBrE,KAG1Cr0F,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAWh0D,cACtCq8C,EAAAA,kBACA28C,EAAAA,sBAEJpxF,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAWt1D,oBACtC29C,EAAAA,iBACA28C,EAAAA,YAEJpxF,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW10D,mBACtC+8C,EAAAA,kBACA28C,EAAAA,oBAEJsV,EAAS1zD,YAAYoZ,EAAAA,EAAWz0D,WAC5B,WACI6yB,EAAAA,EAAW6K,cAAc0K,OAAAA,EAAAA,EAAAA,IACzBkS,EAAWrnB,aAAa2C,KACpBknB,EAAAA,kBACA28C,EAAAA,cAGZsV,EAAS1zD,YAAYoZ,EAAAA,EAAWpyD,uBAC5B,SAAAq6F,GACI7pE,EAAAA,EAAWyK,oBACPiL,OAAAA,EAAAA,EAAAA,CACIrC,EAAAA,EACA,CAAEyuB,IAAK+nC,EAAcjhD,WAGrCpzC,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW9yD,uBACtCm7C,EAAAA,wBAEJz0C,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW/xD,6BACtCo6C,EAAAA,8BAEJz0C,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW7xD,kCACtCk6C,EAAAA,mCAEJz0C,KAAK2mG,kBAAkBG,QACnB16C,EAAAA,EAAW5xD,mCACXi6C,EAAAA,oCAEJz0C,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAWnzD,qBACtCw7C,EAAAA,sBAEJiyD,EAASK,+BAA+B,SAACn6F,EAAMhM,GAC3C,IAAMm4D,EAAc9mB,EAAW2nB,mBAAmBh5D,GAE7Cm4D,GAILA,EAAYm6B,YACRtmF,EAAKd,QAAQvN,UAAU,qBAAqBvB,QAC5C4P,EAAKpX,SAGbkxG,EAAS1zD,YAAYoZ,EAAAA,EAAWr0D,OAC5Bk6C,EAAWohD,eAAet9F,KAAKk8C,IACnCy0D,EAAS1zD,YAAYoZ,EAAAA,EAAWhyD,iBAC5B63C,EAAW2jD,kBAAkB7/F,KAAKk8C,IAEtCjyC,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW1zD,iBACtC+7C,EAAAA,oBAEJiyD,EAAS1zD,YAAYoZ,EAAAA,EAAW9zD,kBAC5B25C,EAAWqgD,eAAev8F,KAAKk8C,IACnCy0D,EAAS1zD,YAAYoZ,EAAAA,EAAWj0D,4BAC5B85C,EAAWkhD,wBAAwBp9F,KAAKk8C,IAC5Cy0D,EAAS1zD,YAAYoZ,EAAAA,EAAW7zD,gBAC5B05C,EAAWg7C,aAAal3F,KAAKk8C,IACjCjyC,KAAK2mG,kBAAkBG,QAAQ16C,EAAAA,EAAW5zD,SACtCi8C,EAAAA,iBAEJiyD,EAAS1zD,YAAYoZ,EAAAA,EAAW90D,qBAC5B26C,EAAW0hD,qBAAqB59F,KAAKk8C,IAEzCy0D,EAAS1zD,YAAYoZ,EAAAA,EAAWp0D,mBAAoB,SAAAooF,GAChDnuC,EAAWwhD,mBAAmBrT,GAG1BnuC,EAAWpiB,YAAcoiB,EAAWg9C,eACpCh9C,EAAWtlB,GAAG8nB,EAAAA,uBACV,SAAAuyD,GACI,IAAMC,EAAY,CACdr3F,MAAOo3F,EAAgBE,WACvBjoG,GAAI,kBACJ6a,OAAQktF,EAAgBG,aAG5B38E,EAAAA,EAAWkJ,QAAQ3c,KAAKyK,UAAUylF,QAKlDP,EAAS1zD,YAAYoZ,EAAAA,EAAW3zD,iBAC5Bw5C,EAAWyhD,kBAAkB39F,KAAKk8C,IAEtCy0D,EAAS1zD,YAAYo0D,EAAAA,EAAqB1wB,iBACtC,SAACkS,EAAayE,GACVp7C,EAAW22C,YAAcA,EACzB32C,EAAWo7C,aAAeA,EAC1Bp7C,EAAWrnB,aAAa2C,KACpBknB,EAAAA,oBAA2Cm0C,EAC3CyE,KAGZqZ,EAAS1zD,YACLoZ,EAAAA,EAAWn0D,iBAGX,SAACyW,EAAK8mE,EAAa6xB,EAAKC,EAAOC,GAC3B,IAAMtoG,EAAKuH,EAAAA,QAAQsI,mBAAmBJ,GAEtCujC,EAAWrnB,aAAa2C,KACpBknB,EAAAA,iBACAx1C,EAAIooG,EAAKE,EAAI/xB,KAGzBkxB,EAAS1zD,YACLoZ,EAAAA,EAAWl0D,yBAGX,SAACwW,EAAK8mE,EAAa6xB,EAAKC,EAAOC,GAC3B,IAAMtoG,EAAKuH,EAAAA,QAAQsI,mBAAmBJ,GAEtCujC,EAAWrnB,aAAa2C,KACpBknB,EAAAA,yBACAx1C,EAAIooG,EAAKE,KAGrBb,EAAS1zD,YAAYoZ,EAAAA,EAAWjzD,gBAC5B,SAACuV,EAAKoL,GACF,IAAM7a,EAAKuH,EAAAA,QAAQsI,mBAAmBJ,GAChCqqD,EAAc9mB,EAAW2nB,mBAAmB36D,GAE7C85D,GAAeA,EAAYgiB,UAAYjhE,IAG5Ci/C,EAAYgiB,QAAUjhE,EACtBm4B,EAAWrnB,aAAa2C,KACpBknB,EAAAA,oBAA2Cx1C,EAAI6a,MAG3D4sF,EAAS1zD,YAAYoZ,EAAAA,EAAW1xD,sBAC5B,SAACkG,EAAMw6B,GACH,IAAMn8B,EAAKuH,EAAAA,QAAQsI,mBAAmBlO,GAChCm4D,EAAc9mB,EAAW2nB,mBAAmB36D,GAE9C85D,EACA9mB,EAAWrnB,aAAa2C,KACpBknB,EAAAA,0BACAskB,EAAa39B,GAEjBlS,EAAOnZ,KACH,6DAAA,gBAAA1S,OACkBuD,GAClBw6B,KAIhBsrE,EAASxY,oBAAoB,aAAc,SAAC1qF,EAAM5C,GAC9C,IAAIquF,GAAc,EAElB,GAAIh9C,EAAW4mB,aAAej4D,GAAQqxC,EAAWg9C,cAC7CA,GAAc,MACX,CACH,IAAMl2B,EAAc9mB,EAAW2nB,mBAAmBh5D,GAE9Cm4D,GAAeA,EAAYk2B,gBAC3BA,GAAc,GAItB,GAAKA,EAAL,CAIA,IAAMpG,EAA4C,SAA1BrlF,EAAK4E,WAAWq6B,MAClCqmD,EAA4C,SAA1BtlF,EAAK4E,WAAWm5B,MAEpCimE,GAAU,EAEV3e,IAAoB52C,EAAW82C,iBAAiBtmD,QAChDwP,EAAW82C,iBAAiBtmD,MAAQomD,EACpC2e,GAAU,GAGV1e,IAAoB72C,EAAW82C,iBAAiBxnD,QAChD0Q,EAAW82C,iBAAiBxnD,MAAQunD,EACpC0e,GAAU,GAGVA,GACAv1D,EAAWrnB,aAAa2C,KACpBknB,EAAAA,2BACAxC,EAAW82C,qBAKnB92C,EAAWpiB,aAEX62E,EAAS1zD,YAAYoZ,EAAAA,EAAWh1D,sBAC5B,SAAAiqB,GACI4wB,EAAWpiB,WAAWe,6BAClBvP,EAAQ2K,kBAIpB06E,EAAS1zD,YAAYoZ,EAAAA,EAAW71D,yBAC5B,SAACyI,EAAGwnD,GACAvU,EAAWpiB,WAAW4D,0BAA0Bz0B,EAAGwnD,OAQnE4hC,EAA4BjyF,UAAU80F,kBAAoB,WACtD,IAAMh5C,EAAajyC,KAAKiyC,WAClBukB,EAAMvkB,EAAWukB,IAEvBA,EAAIxjB,YACA5M,EAAAA,EAAUxJ,mBACVqV,EAAWgmB,mBAAmBliE,KAAKk8C,IAEvCukB,EAAIxjB,YACA5M,EAAAA,EAAUtJ,qBACVmV,EAAWkmB,qBAAqBpiE,KAAKk8C,IAEzCukB,EAAIxjB,YAAY5M,EAAAA,EAAUzf,yBACtB,SAAA1nB,GACQgzC,EAAWw2C,sBAAwBxpF,GAAMgzC,EAAWoe,OACpDpe,EAAWw2C,oBAAsBxpF,EACjCgzC,EAAWrnB,aAAa2C,KACpBknB,EAAAA,yBAAgDx1C,GAEhDgzC,EAAWpiB,YAAcoiB,EAAW4mB,aAAe55D,GAEnDgzC,EAAWpiB,WAAWyB,yBAClB2gB,EAAWoe,KAAKhC,YAKpCmI,EAAIxjB,YAAY5M,EAAAA,EAAUhK,kBAAmB,WACzC,IAAM7e,EAAMppB,OAAO83D,YAAY1uC,MACzBznB,EAAM,sBAGZozB,EAAO1Z,IAAP,UAAAnS,OAAqBvH,GAAOynB,GAC5B00B,EAAWoe,KAAKzF,gBAAgB90D,GAAOynB,EACvCiN,EAAAA,EAAW6K,cACPkK,OAAAA,EAAAA,EAAAA,CAAkCzpC,EAAK,CAAEN,MAAO+nB,KAEpD00B,EAAWrnB,aAAa2C,KAAKknB,EAAAA,uBAGjC+hB,EAAIxjB,YAAY5M,EAAAA,EAAUvf,0BACtB,SAACjmB,EAAMw6B,GACH,IAAM29B,EAAc9mB,EAAW2nB,mBAAmBh5D,GAE9Cm4D,EACA9mB,EAAWrnB,aAAa2C,KACpBknB,EAAAA,0BACAskB,EAAa39B,GAEjBlS,EAAOnZ,KACH,sDAAA,gBAAA1S,OACsBuD,GACtBw6B,KAIhBo7B,EAAIxjB,YAAY5M,EAAAA,EAAU9I,oBACtB,SAACnP,EAAK0H,GACG1H,EAAIilB,OACL5oB,EAAAA,EAAWkJ,QACP3c,KAAKyK,UAAU,CACXviB,GAAI,cACJzJ,MAAOqgC,OAI3B2gC,EAAIxjB,YAAY5M,EAAAA,EAAU7I,qBACtB,SAACpP,EAAK0H,GACG1H,EAAIilB,OACL5oB,EAAAA,EAAWkJ,QACP3c,KAAKyK,UAAU,CACXviB,GAAI,eACJzJ,MAAOqgC,OAK3B2gC,EAAIxjB,YAAY5M,EAAAA,EAAUlK,qBACtB,SAACl9B,EAAGmvB,GACA8jB,EAAWpiB,WAAWyD,uBAAuBt0B,EAAGmvB,GAC3CA,EAAIilB,OACLnB,EAAWrnB,aAAa2C,KAAKknB,EAAAA,kBACzB28C,EAAAA,oBAA2CpyF,KAI3Dw3D,EAAIxjB,YAAY5M,EAAAA,EAAUjK,oBACtB,SAACn9B,EAAGmvB,GACA8jB,EAAWpiB,WAAWwD,sBAAsBr0B,EAAGmvB,GAC1CA,EAAIilB,OACLnB,EAAWrnB,aAAa2C,KAAKknB,EAAAA,kBACzB28C,EAAAA,oBAA2CpyF,KAI3Dw3D,EAAIxjB,YAAY5M,EAAAA,EAAUpJ,6BACtB,SAACh+B,EAAGmvB,GACA8jB,EAAWpiB,WAAW0D,uBAAuBv0B,EAAGmvB,GAC3CA,EAAIilB,OACLnB,EAAWrnB,aAAa2C,KAAKknB,EAAAA,kBACzB28C,EAAAA,oBAA2CpyF,KAI3Dw3D,EAAIxjB,YAAY5M,EAAAA,EAAUnJ,8BACtB,SAACj+B,EAAGmvB,GACA8jB,EAAWpiB,WAAW2D,wBAAwBx0B,EAAGmvB,GAC5CA,EAAIilB,OACLnB,EAAWrnB,aAAa2C,KAAKknB,EAAAA,kBACzB28C,EAAAA,oBAA2CpyF,KAI3Dw3D,EAAIxjB,YAAY5M,EAAAA,EAAU1J,yBACtB,SAACkQ,EAAO5b,GAKA4b,EAAM25B,gBAAkB35B,EAAME,YAAcC,EAAAA,EAAUC,SACtDiF,EAAWpiB,WAAWkB,wBAAuB,EAAMC,MAQnEo3D,EAA4BjyF,UAAU42F,oBAAsB,WAAW,IAAArhD,EAAA1rC,KAC7DiyC,EAAajyC,KAAKiyC,WAExBA,EAAWxnB,KAAK4gC,KAAKv+B,eACjBs/B,EAAAA,EAAWtzD,4BACXkH,KAAKymG,cAAcr6C,EAAAA,EAAWtzD,qCAC3BkH,KAAKymG,cAAcr6C,EAAAA,EAAWtzD,6BAErC7D,OAAOy5B,KAAK1uB,KAAKymG,eAAexlG,QAAQ,SAAAq0B,GACpC2c,EAAWxnB,KAAKqC,eACZwI,EACAoW,EAAK+6D,cAAcnxE,MAE3Bt1B,KAAKymG,cAAgB,IAOzBre,EAA4BjyF,UAAUq0F,mBAAqB,WACvD,IAAMv4C,EAAajyC,KAAKiyC,WAElBw1D,EAA0B,SAAA7mG,GAC5B,IAAMm4D,EACA9mB,EAAW2nB,mBACbpzD,EAAAA,QAAQsI,mBAAmBlO,IAE3Bm4D,GACA9mB,EAAWrnB,aAAa2C,KACpBknB,EAAAA,4BACAskB,IAIZ9mB,EAAWxnB,KAAK4gC,KAAKrY,YACjBoZ,EAAAA,EAAWtzD,4BACX2uG,GACJznG,KAAKymG,cAAcr6C,EAAAA,EAAWtzD,6BACxB2uG,EAENznG,KAAK0nG,2BACDt7C,EAAAA,EAAWx1D,cACXq7C,EAAW0iD,eAAe5+F,KAAKk8C,IACnCjyC,KAAK0nG,2BACDt7C,EAAAA,EAAWz1D,cACXs7C,EAAW6hD,eAAe/9F,KAAKk8C,IACnCjyC,KAAK0nG,2BACDt7C,EAAAA,EAAW9xD,eACX23C,EAAW+hD,gBAAgBj+F,KAAKk8C,IACpCjyC,KAAK0nG,2BACDt7C,EAAAA,EAAWv1D,WACXo7C,EAAWujD,YAAYz/F,KAAKk8C,IAEhCjyC,KAAK0nG,2BAA2Bt7C,EAAAA,EAAWlyD,uBACvC,SAACytG,EAAYC,GACL31D,EAAWxgC,QAAQlW,OAAOssG,mBAI9B51D,EAAW42C,gBAAkB8e,EAC7B11D,EAAW62C,gBAAkB8e,EAI7B31D,EAAWuD,iBAAiBv0C,QAAQ,SAAA2rC,GAChC,OAAQA,EAAM+I,WACd,KAAK9I,EAAAA,EACDoF,EAAW42C,iBAAmBj8C,EAAMqJ,OACpC,MACJ,KAAKpJ,EAAAA,EACDoF,EAAW62C,iBAAmBl8C,EAAMqJ,UAK5ChE,EAAWrnB,aAAa2C,KAAKknB,EAAAA,mBAOzC2zC,EAA4BjyF,UAAUuxG,2BAA6B,SAC3DpyE,EAAW5I,GACf1sB,KAAKymG,cAAcnxE,GAAa5I,EAChC1sB,KAAKiyC,WAAWxnB,KAAKuoB,YAAY1d,EAAW5I,IAMhD07D,EAA4BjyF,UAAUq1F,yBAA2B,WAC7D,IAAMv5C,EAAajyC,KAAKiyC,WAEnBA,EAAWpiB,aAKhBoiB,EAAWpiB,WAAWpD,sBAAsB,SAAC0B,EAAK6C,EAAMvhB,EAAO6iB,GAC3D2f,EAAWukB,IAAI5f,cAAczoB,EAAK6C,EAAMvhB,EAAO6iB,KAMnD2f,EAAWpiB,WAAW9C,0BAA0B,WAC5CklB,EAAWrnB,aAAa2C,KACpBknB,EAAAA,8BAIHxC,EAAWxgC,QAAQlW,OAAOkjE,aAC3BxsB,EAAWpiB,WAAW1C,yBAAyB,SAACgB,EAAK8F,GACjDge,EAAWuD,eAAe3I,EAAAA,GAAiB5rC,QAAQ,SAAA2rC,GAC/C,IAAM5b,EAAO7C,EAAI0pE,aAAajrD,GAEzB5b,GAASiD,EAAM79B,eAAe46B,IAInC4b,EAAMk7D,yBAAyB35E,EAAK8F,EAAMjD,uEChpB1D,SAAS41E,EAAsB79D,EAAKg/D,GAChC,IAAKh/D,IAAQg/D,GAAmC,mBAApBh/D,EAAIiK,aACJ,mBAAd+0D,EAAKx6E,KACf,MAAM,IAAIrvB,MAAM,qDAEpB8B,KAAK+oC,IAAMA,EACX/oC,KAAK+nG,KAAOA,EAWhBnB,EAAsBzwG,UAAU2wG,QAAU,WAAkB,IAAA,IAAA72D,EAAAryC,UAAAZ,OAANW,EAAM,IAAAyC,MAAA6vC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANvyC,EAAMuyC,GAAAtyC,UAAAsyC,GACxD,IAAM83D,EAAWrqG,EAAK,GAItBA,EAAK,GAAKqC,KAAK+nG,KAGf/nG,KAAK+oC,IAAIiK,YACLg1D,EACA/nG,SAAS9J,UAAUJ,KAAK+H,MAAMkC,KAAK+nG,KAAKx6E,KAAM5vB,KAGtD3J,EAAOD,QAAU6yG,ilBC3BjB,IAGM19E,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GA4CnB0+E,aAIF,SAAAA,iGAAcxgE,CAAAznC,KAAAioG,GACVjoG,KAAK2S,+DAeL3S,KAAKw0E,UAAW,EAMhBx0E,KAAKkoG,kBAAoB,IAAIp8E,IAO7B9rB,KAAKmoG,MAAQ,GAMbnoG,KAAKooG,oBAAsB,GAO3BpoG,KAAKqoG,eAAiB,GAEtBroG,KAAKi1C,uBAAuB,CACxBqzD,eAAkBz+E,EAAAA,EAASC,kBAC3By+E,WAAcvgE,UAAUmV,UACxBqrD,aAAgBx9E,EAAAA,EAAQm9B,8CAQ5Bj/B,EAAOnZ,KAAK,mCAER/P,KAAKkoG,mBAAqBloG,KAAKkoG,kBAAkB56E,KAAO,GACxDttB,KAAKkoG,kBAAkBjnG,QAAQ,SAAAkO,GACI,mBAApBA,EAAQke,SACfle,EAAQke,YAKpBrtB,KAAKyoG,qBAAqB,IAC1BzoG,KAAKw0E,UAAW,+CAQCp5E,GAAU,IAAAysC,EAAA7nC,KAC3B,IAAIA,KAAKw0E,SAAT,CAIAx0E,KAAKkoG,kBAAoB,IAAIp8E,IAAI1wB,GAEjC4E,KAAK0oG,qBAGL,IAAMP,EAAQnoG,KAAKmoG,MAEnBnoG,KAAKmoG,MAAQ,KACTA,GACAA,EAAMlnG,QAAQ,SAAAi0B,GAAK,OAAI2S,EAAK8gE,WAAWzzE,mDAS1B,IAAAwW,EAAA1rC,KACjBA,KAAKkoG,kBAAkBjnG,QAAQ,SAAAkO,GAC3B,IACIA,EAAQy5F,kBAAkBl9D,EAAK08D,qBACjC,MAAOx4F,GACLsZ,EAAOnZ,KAAK,mDAAA,uBAAA1S,OACiBuS,sDAelBwlB,GACnBp1B,KAAKooG,sVAALhpE,CAAA,GACOp/B,KAAKooG,oBACLhzE,GAGPp1B,KAAK0oG,+DAQS5zG,GACdkL,KAAKqoG,eAAiBvzG,EACtBkL,KAAKi1C,uBAAuB,CAAE4zD,gBAAmB/zG,sCAgB3CwgC,GAA4B,IAAjBF,EAAiBx3B,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAC9B,IAAIoC,KAAKw0E,SAAT,CAIA,IAAIt/C,EAAQ,KAEa,iBAAdI,EACPJ,EAAQ,CACJ1jB,KAAMgsB,EAAAA,EACNsB,OAAQxJ,EACRyJ,cAAezJ,EACfmK,OAAQnK,EACRltB,WAAYgtB,GAEY,WAArB31B,EAAO61B,KACdJ,EAAQI,GAGPt1B,KAAK8oG,sBAAsB5zE,GAOhCl1B,KAAK2oG,WAAWzzE,GANZhM,EAAOtZ,MAAP,mCAAAvS,OACuC0Z,KAAKyK,UAAU0T,oDAoBxCA,GAClB,IAAKA,EACD,OAAO,EAGNA,EAAM1jB,OACP0jB,EAAM1jB,KAAOgsB,EAAAA,GAGjB,IAAMhsB,EAAO0jB,EAAM1jB,KAEnB,OAAIA,IAASgsB,EAAAA,GAAoBhsB,IAASisB,EAAAA,GACnCjsB,IAASmsB,EAAAA,GAAWnsB,IAASksB,EAAAA,GAChCxU,EAAOtZ,MAAP,uBAAAvS,OAAoCmU,KAE7B,GAGPA,IAASisB,EAAAA,EACFsI,QAAQ7Q,EAAMpgC,OAKzBogC,EAAM4J,OAAS5J,EAAM4J,QAAU5J,EAAMpgC,MAAQogC,EAAM6J,cACnD7J,EAAM6J,cAAgB7J,EAAM6J,eAAiB7J,EAAMpgC,MAAQogC,EAAM4J,OACjE5J,EAAMuK,OAASvK,EAAMuK,QAAUvK,EAAMpgC,MAAQogC,EAAM4J,QAC5C5J,EAAM6J,cAER7J,EAAM4J,QAAW5J,EAAM6J,eAAkB7J,EAAMuK,UAQhDjuB,IAASksB,EAAAA,IACTxI,EAAM6zE,WAAa7zE,EAAM6zE,YAAc,sBACvC7zE,EAAM8zE,cAAgB9zE,EAAM8zE,eAAiB,aACjB,eAAxB9zE,EAAM8zE,eAAmC9zE,EAAMzC,cAC/CyC,EAAMzC,YAAczyB,KAAKqoG,gBAIxBnzE,EAAM6zE,YAAe7zE,EAAM+zE,UACxB/zE,EAAM8zE,eAAkB9zE,EAAMzC,gBAClCvJ,EAAOtZ,MACH,gFAGG,IArBXsZ,EAAOtZ,MACH,6DAEG,6CAgCEslB,GACb,QAAIl1B,KAAKmoG,QACLnoG,KAAKmoG,MAAMtqG,KAAKq3B,GAIZl1B,KAAKmoG,MAAMnrG,OAzTJ,KA0TPgD,KAAKmoG,MAAM7qG,OAAO,EAAG,IAGlB,sCAYJ43B,GACHl1B,KAAKkpG,iBAAiBh0E,IAGtBl1B,KAAKkoG,kBAAkBjnG,QAAQ,SAAAkO,GAC3B,IACIA,EAAQylB,UAAUM,GACpB,MAAOl2B,GACLkqB,EAAOnZ,KAAP,kCAAA1S,OAA8C2B,4CAOnDknB,EAAA,EAAA,IAAI+hF,i8BC/VnB,IAAM/+E,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAWJnB,cAIjB,SAAAA,IAAc,IAAAyf,EAAA,mGAAAJ,CAAAznC,KAAAooB,GACVyf,EAAAH,EAAA1nC,KAAA2nC,EAAAvf,GAAA1zB,KAAAsL,OACAkpB,EAAOpZ,KAAP,sBAAAzS,OAC0BwqC,EAAKsgB,UAD/B,WAAA9qD,OACkDwqC,EAAK2tB,eAH7C3tB,wPAJ+BgW,EAAAA,kEAkBzC,QACI79C,KAAKg5B,aACFh5B,KAAK4iC,UACL5iC,KAAKirB,iBACLjrB,KAAKmpG,4DAUZ,OAAQnpG,KAAK4iC,WAAa5iC,KAAKg5B,sDAgB/B,OAAOh5B,KAAK2kC,YACL3kC,KAAK+yD,cACL/yD,KAAK2yD,UACL3yD,KAAKizD,uDAUZ,OAAOjzD,KAAKopG,aACJppG,KAAKqpG,kBAAkB,gDAU/B,OAAOrpG,KAAKopG,aACJppG,KAAKqpG,kBAAkB,8CAS/B,OAAOrpG,KAAK8oC,mBACL9oC,KAAKg5B,aACLh5B,KAAKirB,iBACLjrB,KAAKmpG,kFAUZ,OAAOnpG,KAAKg5B,aAAeh5B,KAAKopG,wEAUhC,OAAOppG,KAAK8oC,mBAAqB9oC,KAAKirB,iBAC/BjrB,KAAK2iC,wEAWZ,OAAQ3iC,KAAKg5B,cAAgBh5B,KAAK4iC,WAC1B5iC,KAAKmpG,oEASb,OAAQnpG,KAAK4iC,6DAQb,OAAOoF,UAAUC,mBACuC,IAA1CD,UAAUC,aAAaqhE,qBACqB,IAA5CthE,UAAUC,aAAasC,iEAUrC,OAAOvqC,KAAK8oC,mBACL9oC,KAAK4iC,UACL5iC,KAAKg5B,aACLh5B,KAAKirB,iBACLjrB,KAAKmpG,mFAQZ,OAAOnpG,KAAK8oC,mBAAqB9oC,KAAKirB,iBAC/BjrB,KAAK2iC,kEAiBZ,OAAQ3iC,KAAKg5B,cAAgBh5B,KAAK4iC,qDASlC,OAAO5iC,KAAKg5B,aAAeh5B,KAAK2iC,wDAShC,OAAQ3iC,KAAKg5B,cAAgBh5B,KAAKupG,8DAQlC,OAAOvpG,KAAK8oC,mBAAqB9oC,KAAKg5B,aAC/Bh5B,KAAK2iC,mBAAqB3iC,KAAKirB,wDAgBtC,OAAQjrB,KAAKmpG,sBACLnpG,KAAK2iC,mBAAqB3iC,KAAKwpG,gDASvC,OAAQxpG,KAAKupG,4DASb,QAAIvpG,KAAKg5B,gBAILh5B,KAAK2iC,wBAAyD,IAA7BxuC,OAAOs1G,oBAIjCx0G,OAAOy5B,KAAK+6E,kBAAkBtzG,WAC7BmI,QAAQ,qBAAuB,2CAiB3C,OAAI0B,KAAK2kC,YACG3kC,KAAKqpG,kBAHe,OAM5BrpG,KAAKg5B,cAAeh5B,KAAKmpG,yBAIzBnpG,KAAK8oC,mBACE9oC,KAAK0pG,4BAXgB,yCAwBhC,OAAO1pG,KAAKooC,kBAAoBpoC,KAAK4iC,2DAQrC,YAA4C,IAA9BoF,UAAUutB,sBACkB,IAA3BvtB,UAAUC,mBAET,IADED,UAAUC,aAAastB,+DAWzC,OAAOv1D,KAAK8oC,mBAAqB9oC,KAAK0pG,4BAA8B,sDASpE,GAAI1pG,KAAK8oC,kBAAmB,CAExB,GAAI9oC,KAAK2yD,SAEL,OAAO9xD,OAAO6gB,SAASouD,EAAQnC,SAASZ,SAAU,IAQtD,IAAM9C,EAAKjiC,UAAUmV,UAErB,GAAI8sB,EAAGptD,MAAM,UAIT,OAFMhc,OAAO6gB,SAASuoD,EAAGptD,MAAM,oBAAoB,GAAI,IAM/D,OAAQ;;;;;;;;;;;;;;;;;;;CCxVhB,WACE,aAEA,IAAIrT,MAAQ,wBACRmgG,OAA2B,YAAlB,oBAAOx1G,OAAP,YAAAsL,QAAOtL,SAChBN,KAAO81G,OAASx1G,OAAS,GACzBN,KAAK+1G,mBACPD,QAAS,GAEX,IAAIE,YAAcF,QAA0B,YAAhB,oBAAO/mF,KAAP,YAAAnjB,QAAOmjB,OAC/BknF,SAAWj2G,KAAKk2G,mBAAwC,iBAAnB,IAAOj6B,QAAP,YAAArwE,QAAOqwE,WAAwBA,QAAQnC,UAAYmC,QAAQnC,SAAS/gE,KACzGk9F,QACFj2G,KAAOspG,OACE0M,aACTh2G,KAAO+uB,MAET,IAAIonF,WAAan2G,KAAKo2G,qBAAyC,WAAlBxqG,QAAOzL,SAAuBA,OAAOD,QAC9Em2G,IAAsCj2G,oBAAAA,KACtCk2G,cAAgBt2G,KAAKu2G,wBAAiD,oBAAhBhF,YACtDiF,UAAY,mBAAmBxtG,MAAM,IACrCytG,MAAQ,CAAC,IAAK,MAAO,SAAU,YAC/BC,MAAQ,CAAC,EAAG,EAAG,GAAI,IACnBC,aAAe,CAAC,MAAO,QAAS,SAAU,SAAU,cAAe,UACnEC,mBAAqB,mEAAmE5tG,MAAM,IAE9F6tG,OAAS,GAAIC,QACjB,GAAIR,aAAc,CAChB,IAAIvH,OAAS,IAAIwC,YAAY,IAC7BuF,QAAU,IAAIt4B,WAAWuwB,QACzB8H,OAAS,IAAIE,YAAYhI,SAGvB/uG,KAAKk2G,mBAAsB3pG,MAAMG,UACnCH,MAAMG,QAAU,SAAUzE,GACxB,MAA+C,mBAAxC7G,OAAOkB,UAAUsK,SAAS/L,KAAKoH,MAItCquG,eAAiBt2G,KAAKg3G,gCAAmCzF,YAAY0F,SACvE1F,YAAY0F,OAAS,SAAUhvG,GAC7B,MAAsB,WAAf2D,QAAO3D,IAAoBA,EAAI8mG,QAAU9mG,EAAI8mG,OAAOvrD,cAAgB+tD,cA6D/E,IAAI2F,mBAAqB,SAAUC,GACjC,OAAO,SAAU37F,GACf,OAAO,IAAI47F,KAAI,GAAMC,OAAO77F,GAAS27F,OAwBrCG,aAAe,WACjB,IAAIC,EAASL,mBAAmB,OAC5BjB,UACFsB,EAASC,SAASD,IAEpBA,EAAOv1G,OAAS,WACd,OAAO,IAAIo1G,KAEbG,EAAOF,OAAS,SAAU77F,GACxB,OAAO+7F,EAAOv1G,SAASq1G,OAAO77F,IAEhC,IAAK,IAAI9a,EAAI,EAAGA,EAAIi2G,aAAaxtG,SAAUzI,EAAG,CAC5C,IAAIid,EAAOg5F,aAAaj2G,GACxB62G,EAAO55F,GAAQu5F,mBAAmBv5F,GAEpC,OAAO45F,GAGLC,SAAW,SAAXA,SAAqBD,QACvB,IAAIrxD,OAASuxD,KAAK,qBACd3M,OAAS2M,KAAK,4BACdC,WAAa,SAAUl8F,GACzB,GAAuB,iBAAZA,EACT,OAAO0qC,OAAOyxD,WAAW,OAAON,OAAO77F,EAAS,QAAQo8F,OAAO,OAE/D,GAAIp8F,MAAAA,EACF,MAAM7F,MAKV,OAJa6F,EAAQgoC,cAAgB+tD,cACjC/1F,EAAU,IAAIgjE,WAAWhjE,IAGzBjP,MAAMG,QAAQ8O,IAAY+1F,YAAY0F,OAAOz7F,IAC/CA,EAAQgoC,cAAgBsnD,OACjB5kD,OAAOyxD,WAAW,OAAON,OAAO,IAAIvM,OAAOtvF,IAAUo8F,OAAO,OAE5DL,OAAO/7F,IAGlB,OAAOk8F,YAST,SAASN,IAAIS,GACX,GAAIA,EACFhB,OAAO,GAAKA,OAAO,IAAMA,OAAO,GAAKA,OAAO,GAAKA,OAAO,GACxDA,OAAO,GAAKA,OAAO,GAAKA,OAAO,GAAKA,OAAO,GAC3CA,OAAO,GAAKA,OAAO,GAAKA,OAAO,IAAMA,OAAO,IAC5CA,OAAO,IAAMA,OAAO,IAAMA,OAAO,IAAMA,OAAO,IAAM,EACpD1qG,KAAK0qG,OAASA,OACd1qG,KAAK2qG,QAAUA,aAEf,GAAIR,aAAc,CAChB,IAAIvH,EAAS,IAAIwC,YAAY,IAC7BplG,KAAK2qG,QAAU,IAAIt4B,WAAWuwB,GAC9B5iG,KAAK0qG,OAAS,IAAIE,YAAYhI,QAE9B5iG,KAAK0qG,OAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGnE1qG,KAAK2rG,GAAK3rG,KAAK4rG,GAAK5rG,KAAK6rG,GAAK7rG,KAAK8rG,GAAK9rG,KAAK+lB,MAAQ/lB,KAAK+rG,MAAQ/rG,KAAKgsG,OAAS,EAChFhsG,KAAKisG,UAAYjsG,KAAKksG,QAAS,EAC/BlsG,KAAKo1F,OAAQ,EAYf6V,IAAI90G,UAAU+0G,OAAS,SAAU77F,GAC/B,IAAIrP,KAAKisG,UAAT,CAIA,IAAIE,EAAW36F,EAAI/R,QAAU4P,GAC7B,GAAa,WAATmC,EAAmB,CACrB,GAAa,WAATA,EAWF,MAAMhI,MAVN,GAAgB,OAAZ6F,EACF,MAAM7F,MACD,GAAI2gG,cAAgB96F,EAAQgoC,cAAgB+tD,YACjD/1F,EAAU,IAAIgjE,WAAWhjE,QACpB,KAAKjP,MAAMG,QAAQ8O,IACnB86F,cAAiB/E,YAAY0F,OAAOz7F,IACvC,MAAM7F,MAMZ2iG,GAAY,EAKd,IAHA,IAAIxmF,EAAiBpxB,EAAX8J,EAAQ,EAAMrB,EAASqS,EAAQrS,OAAQ0tG,EAAS1qG,KAAK0qG,OAC3DC,EAAU3qG,KAAK2qG,QAEZtsG,EAAQrB,GAAQ,CAUrB,GATIgD,KAAKksG,SACPlsG,KAAKksG,QAAS,EACdxB,EAAO,GAAKA,EAAO,IACnBA,EAAO,IAAMA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAC5CA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAC3CA,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAAMA,EAAO,IAC5CA,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAM,GAGlDyB,EACF,GAAIhC,aACF,IAAK51G,EAAIyL,KAAK+lB,MAAO1nB,EAAQrB,GAAUzI,EAAI,KAAM8J,EAC/CssG,EAAQp2G,KAAO8a,EAAQhR,QAGzB,IAAK9J,EAAIyL,KAAK+lB,MAAO1nB,EAAQrB,GAAUzI,EAAI,KAAM8J,EAC/CqsG,EAAOn2G,GAAK,IAAM8a,EAAQhR,IAAUksG,MAAY,EAANh2G,UAI9C,GAAI41G,aACF,IAAK51G,EAAIyL,KAAK+lB,MAAO1nB,EAAQrB,GAAUzI,EAAI,KAAM8J,GAC/CsnB,EAAOtW,EAAQlN,WAAW9D,IACf,IACTssG,EAAQp2G,KAAOoxB,EACNA,EAAO,MAChBglF,EAAQp2G,KAAO,IAAQoxB,GAAQ,EAC/BglF,EAAQp2G,KAAO,IAAe,GAAPoxB,GACdA,EAAO,OAAUA,GAAQ,OAClCglF,EAAQp2G,KAAO,IAAQoxB,GAAQ,GAC/BglF,EAAQp2G,KAAO,IAASoxB,GAAQ,EAAK,GACrCglF,EAAQp2G,KAAO,IAAe,GAAPoxB,IAEvBA,EAAO,QAAoB,KAAPA,IAAiB,GAAqC,KAA9BtW,EAAQlN,aAAa9D,IACjEssG,EAAQp2G,KAAO,IAAQoxB,GAAQ,GAC/BglF,EAAQp2G,KAAO,IAASoxB,GAAQ,GAAM,GACtCglF,EAAQp2G,KAAO,IAASoxB,GAAQ,EAAK,GACrCglF,EAAQp2G,KAAO,IAAe,GAAPoxB,QAI3B,IAAKpxB,EAAIyL,KAAK+lB,MAAO1nB,EAAQrB,GAAUzI,EAAI,KAAM8J,GAC/CsnB,EAAOtW,EAAQlN,WAAW9D,IACf,IACTqsG,EAAOn2G,GAAK,IAAMoxB,GAAQ4kF,MAAY,EAANh2G,KACvBoxB,EAAO,MAChB+kF,EAAOn2G,GAAK,KAAO,IAAQoxB,GAAQ,IAAO4kF,MAAY,EAANh2G,KAChDm2G,EAAOn2G,GAAK,KAAO,IAAe,GAAPoxB,IAAiB4kF,MAAY,EAANh2G,MACzCoxB,EAAO,OAAUA,GAAQ,OAClC+kF,EAAOn2G,GAAK,KAAO,IAAQoxB,GAAQ,KAAQ4kF,MAAY,EAANh2G,KACjDm2G,EAAOn2G,GAAK,KAAO,IAASoxB,GAAQ,EAAK,KAAU4kF,MAAY,EAANh2G,KACzDm2G,EAAOn2G,GAAK,KAAO,IAAe,GAAPoxB,IAAiB4kF,MAAY,EAANh2G,OAElDoxB,EAAO,QAAoB,KAAPA,IAAiB,GAAqC,KAA9BtW,EAAQlN,aAAa9D,IACjEqsG,EAAOn2G,GAAK,KAAO,IAAQoxB,GAAQ,KAAQ4kF,MAAY,EAANh2G,KACjDm2G,EAAOn2G,GAAK,KAAO,IAASoxB,GAAQ,GAAM,KAAU4kF,MAAY,EAANh2G,KAC1Dm2G,EAAOn2G,GAAK,KAAO,IAASoxB,GAAQ,EAAK,KAAU4kF,MAAY,EAANh2G,KACzDm2G,EAAOn2G,GAAK,KAAO,IAAe,GAAPoxB,IAAiB4kF,MAAY,EAANh2G,MAK1DyL,KAAKosG,cAAgB73G,EACrByL,KAAK+rG,OAASx3G,EAAIyL,KAAK+lB,MACnBxxB,GAAK,IACPyL,KAAK+lB,MAAQxxB,EAAI,GACjByL,KAAK6D,OACL7D,KAAKksG,QAAS,GAEdlsG,KAAK+lB,MAAQxxB,EAOjB,OAJIyL,KAAK+rG,MAAQ,aACf/rG,KAAKgsG,QAAUhsG,KAAK+rG,MAAQ,YAAc,EAC1C/rG,KAAK+rG,MAAQ/rG,KAAK+rG,MAAQ,YAErB/rG,OAGTirG,IAAI90G,UAAUk2G,SAAW,WACvB,IAAIrsG,KAAKisG,UAAT,CAGAjsG,KAAKisG,WAAY,EACjB,IAAIvB,EAAS1qG,KAAK0qG,OAAQn2G,EAAIyL,KAAKosG,cACnC1B,EAAOn2G,GAAK,IAAM+1G,MAAU,EAAJ/1G,GACpBA,GAAK,KACFyL,KAAKksG,QACRlsG,KAAK6D,OAEP6mG,EAAO,GAAKA,EAAO,IACnBA,EAAO,IAAMA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAC5CA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAC3CA,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAAMA,EAAO,IAC5CA,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAM,GAEtDA,EAAO,IAAM1qG,KAAK+rG,OAAS,EAC3BrB,EAAO,IAAM1qG,KAAKgsG,QAAU,EAAIhsG,KAAK+rG,QAAU,GAC/C/rG,KAAK6D,SAGPonG,IAAI90G,UAAU0N,KAAO,WACnB,IAAIZ,EAAGC,EAAGtO,EAAGC,EAAGy3G,EAAIC,EAAI7B,EAAS1qG,KAAK0qG,OAElC1qG,KAAKo1F,MAQPlyF,IADAA,IALAD,IADAA,EAAIynG,EAAO,GAAK,YACN,EAAIznG,IAAM,IAAM,WAAa,IAIvCrO,IADAA,IAAM,WADNC,IADAA,IAAM,WAAiB,WAAJoO,GAAkBynG,EAAO,GAAK,YACvC,GAAK71G,IAAM,IAAMoO,GAAK,KACH,UAALA,IAAoBynG,EAAO,GAAK,aAC9C,GAAK91G,IAAM,IAAMC,GAAK,IACjBA,EAAIoO,IAAOynG,EAAO,GAAK,aAC5B,GAAKxnG,IAAM,IAAMtO,GAAK,GAEhCqO,EAAIjD,KAAK2rG,GACTzoG,EAAIlD,KAAK4rG,GACTh3G,EAAIoL,KAAK6rG,GAST3oG,IADAA,KALAD,IADAA,KADApO,EAAImL,KAAK8rG,IACE5oG,GAAKtO,EAAIC,IAAO61G,EAAO,GAAK,YAC7B,EAAIznG,IAAM,IAAMC,GAAK,IAI/BtO,IADAA,IAAMsO,GADNrO,IADAA,IAAMD,EAAKqO,GAAKC,EAAItO,IAAO81G,EAAO,GAAK,YAC7B,GAAK71G,IAAM,IAAMoO,GAAK,IAChBA,EAAIC,IAAOwnG,EAAO,GAAK,YAC7B,GAAK91G,IAAM,IAAMC,GAAK,IAChBA,EAAIoO,IAAOynG,EAAO,GAAK,aAC7B,GAAKxnG,IAAM,IAAMtO,GAAK,GAUlCsO,IADAA,KALAD,IADAA,IAAMpO,EAAKqO,GAAKtO,EAAIC,IAAO61G,EAAO,GAAK,YAC7B,EAAIznG,IAAM,IAAMC,GAAK,IAI/BtO,IADAA,IAAMsO,GADNrO,IADAA,IAAMD,EAAKqO,GAAKC,EAAItO,IAAO81G,EAAO,GAAK,aAC7B,GAAK71G,IAAM,IAAMoO,GAAK,IAChBA,EAAIC,IAAOwnG,EAAO,GAAK,aAC7B,GAAK91G,IAAM,IAAMC,GAAK,IAChBA,EAAIoO,IAAOynG,EAAO,GAAK,WAC7B,GAAKxnG,IAAM,IAAMtO,GAAK,EAQhCsO,IADAA,KALAD,IADAA,IAAMpO,EAAKqO,GAAKtO,EAAIC,IAAO61G,EAAO,GAAK,aAC7B,EAAIznG,IAAM,IAAMC,GAAK,IAI/BtO,IADAA,IAAMsO,GADNrO,IADAA,IAAMD,EAAKqO,GAAKC,EAAItO,IAAO81G,EAAO,GAAK,aAC7B,GAAK71G,IAAM,IAAMoO,GAAK,IAChBA,EAAIC,IAAOwnG,EAAO,IAAM,QAC9B,GAAK91G,IAAM,IAAMC,GAAK,IAChBA,EAAIoO,IAAOynG,EAAO,IAAM,aAC9B,GAAKxnG,IAAM,IAAMtO,GAAK,EAQhCsO,IADAA,KALAD,IADAA,IAAMpO,EAAKqO,GAAKtO,EAAIC,IAAO61G,EAAO,IAAM,aAC9B,EAAIznG,IAAM,IAAMC,GAAK,IAI/BtO,IADAA,IAAMsO,GADNrO,IADAA,IAAMD,EAAKqO,GAAKC,EAAItO,IAAO81G,EAAO,IAAM,WAC9B,GAAK71G,IAAM,IAAMoO,GAAK,IAChBA,EAAIC,IAAOwnG,EAAO,IAAM,aAC9B,GAAK91G,IAAM,IAAMC,GAAK,IAChBA,EAAIoO,IAAOynG,EAAO,IAAM,aAC9B,GAAKxnG,IAAM,IAAMtO,GAAK,EAQhCsO,IADAA,KAHArO,IADAA,IAAMqO,EAAKtO,IADXqO,IADAA,IAAMrO,EAAKC,GAAKqO,EAAItO,IAAO81G,EAAO,GAAK,YAC7B,EAAIznG,IAAM,IAAMC,GAAK,GACXA,IAAOwnG,EAAO,GAAK,aAC7B,EAAI71G,IAAM,IAAMoO,GAAK,GAGpBA,IADXrO,IADAA,IAAMqO,EAAKC,GAAKrO,EAAIoO,IAAOynG,EAAO,IAAM,YAC9B,GAAK91G,IAAM,IAAMC,GAAK,GACZA,IAAO61G,EAAO,GAAK,YAC7B,GAAKxnG,IAAM,IAAMtO,GAAK,EAQhCsO,IADAA,KAHArO,IADAA,IAAMqO,EAAKtO,IADXqO,IADAA,IAAMrO,EAAKC,GAAKqO,EAAItO,IAAO81G,EAAO,GAAK,YAC7B,EAAIznG,IAAM,IAAMC,GAAK,GACXA,IAAOwnG,EAAO,IAAM,WAC9B,EAAI71G,IAAM,IAAMoO,GAAK,GAGpBA,IADXrO,IADAA,IAAMqO,EAAKC,GAAKrO,EAAIoO,IAAOynG,EAAO,IAAM,YAC9B,GAAK91G,IAAM,IAAMC,GAAK,GACZA,IAAO61G,EAAO,GAAK,YAC7B,GAAKxnG,IAAM,IAAMtO,GAAK,EAQhCsO,IADAA,KAHArO,IADAA,IAAMqO,EAAKtO,IADXqO,IADAA,IAAMrO,EAAKC,GAAKqO,EAAItO,IAAO81G,EAAO,GAAK,YAC7B,EAAIznG,IAAM,IAAMC,GAAK,GACXA,IAAOwnG,EAAO,IAAM,aAC9B,EAAI71G,IAAM,IAAMoO,GAAK,GAGpBA,IADXrO,IADAA,IAAMqO,EAAKC,GAAKrO,EAAIoO,IAAOynG,EAAO,GAAK,YAC7B,GAAK91G,IAAM,IAAMC,GAAK,GACZA,IAAO61G,EAAO,GAAK,aAC7B,GAAKxnG,IAAM,IAAMtO,GAAK,EAQhCsO,IADAA,KAHArO,IADAA,IAAMqO,EAAKtO,IADXqO,IADAA,IAAMrO,EAAKC,GAAKqO,EAAItO,IAAO81G,EAAO,IAAM,aAC9B,EAAIznG,IAAM,IAAMC,GAAK,GACXA,IAAOwnG,EAAO,GAAK,WAC7B,EAAI71G,IAAM,IAAMoO,GAAK,GAGpBA,IADXrO,IADAA,IAAMqO,EAAKC,GAAKrO,EAAIoO,IAAOynG,EAAO,GAAK,aAC7B,GAAK91G,IAAM,IAAMC,GAAK,GACZA,IAAO61G,EAAO,IAAM,aAC9B,GAAKxnG,IAAM,IAAMtO,GAAK,EAUhCsO,IADAA,KAHAqpG,GADA13G,IADAA,KAHAy3G,EAAKppG,EAAItO,IAETqO,IADAA,IAAMqpG,EAAKz3G,GAAK61G,EAAO,GAAK,SAClB,EAAIznG,IAAM,IAAMC,GAAK,IACfwnG,EAAO,GAAK,aAClB,GAAK71G,IAAM,IAAMoO,GAAK,GACvBA,IAETrO,IADAA,IAAM23G,EAAKrpG,GAAKwnG,EAAO,IAAM,aACnB,GAAK91G,IAAM,IAAMC,GAAK,IAChB61G,EAAO,IAAM,WACnB,GAAKxnG,IAAM,GAAKtO,GAAK,EAU/BsO,IADAA,KAHAqpG,GADA13G,IADAA,KAHAy3G,EAAKppG,EAAItO,IAETqO,IADAA,IAAMqpG,EAAKz3G,GAAK61G,EAAO,GAAK,aAClB,EAAIznG,IAAM,IAAMC,GAAK,IACfwnG,EAAO,GAAK,aAClB,GAAK71G,IAAM,IAAMoO,GAAK,GACvBA,IAETrO,IADAA,IAAM23G,EAAKrpG,GAAKwnG,EAAO,GAAK,YAClB,GAAK91G,IAAM,IAAMC,GAAK,IAChB61G,EAAO,IAAM,aACnB,GAAKxnG,IAAM,GAAKtO,GAAK,EAU/BsO,IADAA,KAHAqpG,GADA13G,IADAA,KAHAy3G,EAAKppG,EAAItO,IAETqO,IADAA,IAAMqpG,EAAKz3G,GAAK61G,EAAO,IAAM,YACnB,EAAIznG,IAAM,IAAMC,GAAK,IACfwnG,EAAO,GAAK,YAClB,GAAK71G,IAAM,IAAMoO,GAAK,GACvBA,IAETrO,IADAA,IAAM23G,EAAKrpG,GAAKwnG,EAAO,GAAK,YAClB,GAAK91G,IAAM,IAAMC,GAAK,IAChB61G,EAAO,GAAK,WAClB,GAAKxnG,IAAM,GAAKtO,GAAK,EAU/BsO,IADAA,KAHAqpG,GADA13G,IADAA,KAHAy3G,EAAKppG,EAAItO,IAETqO,IADAA,IAAMqpG,EAAKz3G,GAAK61G,EAAO,GAAK,YAClB,EAAIznG,IAAM,IAAMC,GAAK,IACfwnG,EAAO,IAAM,YACnB,GAAK71G,IAAM,IAAMoO,GAAK,GACvBA,IAETrO,IADAA,IAAM23G,EAAKrpG,GAAKwnG,EAAO,IAAM,YACnB,GAAK91G,IAAM,IAAMC,GAAK,IAChB61G,EAAO,GAAK,YAClB,GAAKxnG,IAAM,GAAKtO,GAAK,EAQ/BsO,IADAA,KAHArO,IADAA,IAAMqO,IADND,IADAA,IAAMrO,GAAKsO,GAAKrO,IAAM61G,EAAO,GAAK,YACxB,EAAIznG,IAAM,IAAMC,GAAK,IACftO,IAAM81G,EAAO,GAAK,aACxB,GAAK71G,IAAM,IAAMoO,GAAK,KAEhCrO,IADAA,IAAMqO,GAAKpO,GAAKqO,IAAMwnG,EAAO,IAAM,aACzB,GAAK91G,IAAM,IAAMC,GAAK,IAChBoO,IAAMynG,EAAO,GAAK,WACxB,GAAKxnG,IAAM,IAAMtO,GAAK,EAQhCsO,IADAA,KAHArO,IADAA,IAAMqO,IADND,IADAA,IAAMrO,GAAKsO,GAAKrO,IAAM61G,EAAO,IAAM,aACzB,EAAIznG,IAAM,IAAMC,GAAK,IACftO,IAAM81G,EAAO,GAAK,aACxB,GAAK71G,IAAM,IAAMoO,GAAK,KAEhCrO,IADAA,IAAMqO,GAAKpO,GAAKqO,IAAMwnG,EAAO,IAAM,UACzB,GAAK91G,IAAM,IAAMC,GAAK,IAChBoO,IAAMynG,EAAO,GAAK,aACxB,GAAKxnG,IAAM,IAAMtO,GAAK,EAQhCsO,IADAA,KAHArO,IADAA,IAAMqO,IADND,IADAA,IAAMrO,GAAKsO,GAAKrO,IAAM61G,EAAO,GAAK,aACxB,EAAIznG,IAAM,IAAMC,GAAK,IACftO,IAAM81G,EAAO,IAAM,WACzB,GAAK71G,IAAM,IAAMoO,GAAK,KAEhCrO,IADAA,IAAMqO,GAAKpO,GAAKqO,IAAMwnG,EAAO,GAAK,aACxB,GAAK91G,IAAM,IAAMC,GAAK,IAChBoO,IAAMynG,EAAO,IAAM,aACzB,GAAKxnG,IAAM,IAAMtO,GAAK,EAQhCsO,IADAA,KAHArO,IADAA,IAAMqO,IADND,IADAA,IAAMrO,GAAKsO,GAAKrO,IAAM61G,EAAO,GAAK,YACxB,EAAIznG,IAAM,IAAMC,GAAK,IACftO,IAAM81G,EAAO,IAAM,aACzB,GAAK71G,IAAM,IAAMoO,GAAK,KAEhCrO,IADAA,IAAMqO,GAAKpO,GAAKqO,IAAMwnG,EAAO,GAAK,YACxB,GAAK91G,IAAM,IAAMC,GAAK,IAChBoO,IAAMynG,EAAO,GAAK,YACxB,GAAKxnG,IAAM,IAAMtO,GAAK,EAE5BoL,KAAKo1F,OACPp1F,KAAK2rG,GAAK1oG,EAAI,YAAc,EAC5BjD,KAAK4rG,GAAK1oG,EAAI,WAAa,EAC3BlD,KAAK6rG,GAAKj3G,EAAI,YAAc,EAC5BoL,KAAK8rG,GAAKj3G,EAAI,WAAa,EAC3BmL,KAAKo1F,OAAQ,IAEbp1F,KAAK2rG,GAAK3rG,KAAK2rG,GAAK1oG,GAAK,EACzBjD,KAAK4rG,GAAK5rG,KAAK4rG,GAAK1oG,GAAK,EACzBlD,KAAK6rG,GAAK7rG,KAAK6rG,GAAKj3G,GAAK,EACzBoL,KAAK8rG,GAAK9rG,KAAK8rG,GAAKj3G,GAAK,IAc7Bo2G,IAAI90G,UAAUq2G,IAAM,WAClBxsG,KAAKqsG,WAEL,IAAIV,EAAK3rG,KAAK2rG,GAAIC,EAAK5rG,KAAK4rG,GAAIC,EAAK7rG,KAAK6rG,GAAIC,EAAK9rG,KAAK8rG,GAExD,OAAOzB,UAAWsB,GAAM,EAAK,IAAQtB,UAAe,GAALsB,GAC7CtB,UAAWsB,GAAM,GAAM,IAAQtB,UAAWsB,GAAM,EAAK,IACrDtB,UAAWsB,GAAM,GAAM,IAAQtB,UAAWsB,GAAM,GAAM,IACtDtB,UAAWsB,GAAM,GAAM,IAAQtB,UAAWsB,GAAM,GAAM,IACtDtB,UAAWuB,GAAM,EAAK,IAAQvB,UAAe,GAALuB,GACxCvB,UAAWuB,GAAM,GAAM,IAAQvB,UAAWuB,GAAM,EAAK,IACrDvB,UAAWuB,GAAM,GAAM,IAAQvB,UAAWuB,GAAM,GAAM,IACtDvB,UAAWuB,GAAM,GAAM,IAAQvB,UAAWuB,GAAM,GAAM,IACtDvB,UAAWwB,GAAM,EAAK,IAAQxB,UAAe,GAALwB,GACxCxB,UAAWwB,GAAM,GAAM,IAAQxB,UAAWwB,GAAM,EAAK,IACrDxB,UAAWwB,GAAM,GAAM,IAAQxB,UAAWwB,GAAM,GAAM,IACtDxB,UAAWwB,GAAM,GAAM,IAAQxB,UAAWwB,GAAM,GAAM,IACtDxB,UAAWyB,GAAM,EAAK,IAAQzB,UAAe,GAALyB,GACxCzB,UAAWyB,GAAM,GAAM,IAAQzB,UAAWyB,GAAM,EAAK,IACrDzB,UAAWyB,GAAM,GAAM,IAAQzB,UAAWyB,GAAM,GAAM,IACtDzB,UAAWyB,GAAM,GAAM,IAAQzB,UAAWyB,GAAM,GAAM,KAa1Db,IAAI90G,UAAUsK,SAAWwqG,IAAI90G,UAAUq2G,IAYvCvB,IAAI90G,UAAUs1G,OAAS,WACrBzrG,KAAKqsG,WAEL,IAAIV,EAAK3rG,KAAK2rG,GAAIC,EAAK5rG,KAAK4rG,GAAIC,EAAK7rG,KAAK6rG,GAAIC,EAAK9rG,KAAK8rG,GACxD,MAAO,CACA,IAALH,EAAYA,GAAM,EAAK,IAAOA,GAAM,GAAM,IAAOA,GAAM,GAAM,IACxD,IAALC,EAAYA,GAAM,EAAK,IAAOA,GAAM,GAAM,IAAOA,GAAM,GAAM,IACxD,IAALC,EAAYA,GAAM,EAAK,IAAOA,GAAM,GAAM,IAAOA,GAAM,GAAM,IACxD,IAALC,EAAYA,GAAM,EAAK,IAAOA,GAAM,GAAM,IAAOA,GAAM,GAAM,MAcjEb,IAAI90G,UAAUojC,MAAQ0xE,IAAI90G,UAAUs1G,OAYpCR,IAAI90G,UAAUs2G,YAAc,WAC1BzsG,KAAKqsG,WAEL,IAAIzJ,EAAS,IAAIwC,YAAY,IACzBsF,EAAS,IAAIE,YAAYhI,GAK7B,OAJA8H,EAAO,GAAK1qG,KAAK2rG,GACjBjB,EAAO,GAAK1qG,KAAK4rG,GACjBlB,EAAO,GAAK1qG,KAAK6rG,GACjBnB,EAAO,GAAK1qG,KAAK8rG,GACVlJ,GAcTqI,IAAI90G,UAAUysG,OAASqI,IAAI90G,UAAUs2G,YAYrCxB,IAAI90G,UAAUu2G,OAAS,WAErB,IADA,IAAIC,EAAIC,EAAIC,EAAIC,EAAY,GAAIf,EAAQ/rG,KAAKu5B,QACpChlC,EAAI,EAAGA,EAAI,IAClBo4G,EAAKZ,EAAMx3G,KACXq4G,EAAKb,EAAMx3G,KACXs4G,EAAKd,EAAMx3G,KACXu4G,GAAarC,mBAAmBkC,IAAO,GACrClC,mBAA0C,IAAtBkC,GAAM,EAAIC,IAAO,IACrCnC,mBAA0C,IAAtBmC,GAAM,EAAIC,IAAO,IACrCpC,mBAAwB,GAALoC,GAMvB,OAJAF,EAAKZ,EAAMx3G,GACXu4G,GAAarC,mBAAmBkC,IAAO,GACrClC,mBAAoBkC,GAAM,EAAK,IAC/B,MAIJ,IAAI54G,QAAUo3G,eAEVnB,UACFh2G,OAAOD,QAAUA,SAmBjBF,KAAKk5G,IAAMh5G,QACPm2G,MACFj2G,8BAAAA,WACE,OAAOF,SADHW,KAAAX,QAAAM,oBAAAN,QAAAC,aAAA2G,IAAAC,gCAAA5G,OAAAD,QAAA6G,iCA5pBZ,iHCTA,IAAMq/B,EAAal/B,EAAQ,IASrBmpF,EAAQ,CACV,UAAW,QAAS,UAAW,QAAS,QAAS,WAAY,OAC7D,SAAU,QAAS,WAAY,MAAO,OAAQ,WAAY,UAC1D,UAAW,WAAY,QAAS,UAAW,MAAO,OAAQ,YAC1D,UAAW,OAAQ,OAAQ,QAAS,UAAW,QAAS,WAAY,QACpE,SAAU,UAAW,QAAS,SAAU,SAAU,SAAU,QAC5D,SAAU,SAAU,WAAY,SAAU,SAAU,SAAU,UAC9D,WAAY,SAAU,SAAU,WAAY,QAAS,QAAS,QAC9D,UAAW,WAAY,QAAS,QAAS,OAAQ,QAAS,QAAS,SACnE,QAAS,SAAU,QAAS,KAAM,SAAU,OAAQ,QAAS,SAC7D,SAAU,SAAU,OAAQ,SAAU,UAAW,WAAY,UAC7D,QAAS,SAAU,OAAQ,QAAS,OAAQ,QAAS,YACrD,aAAc,OAAQ,QAAS,QAAS,aAAc,aACtD,UAAW,SAAU,OAAQ,QAAS,YAAa,YAAa,YAChE,aAAc,aAAc,cAAe,YAAa,UACxD,WAAY,SAAU,SAAU,SAAU,aAAc,MAAO,UAC/D,UAAW,SAAU,SAAU,UAAW,UAAW,MAAO,OAAQ,QACpE,SAAU,QAAS,SAAU,SAAU,SAAU,QAAS,SAAU,QACpE,QAAS,QAAS,QAAS,SAAU,QAAS,UAAW,OAAQ,WACjE,OAAQ,SAAU,OAAQ,QAAS,SAAU,SAAU,UAAW,SAClE,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,UACzD,SAAU,SAAU,QAAS,QAAS,QAAS,QAAS,QAAS,UACjE,SAAU,SAAU,QAAS,UAAW,UAAW,OAAQ,QAAS,OACpE,QAAS,QAAS,OAAQ,SAAU,MAAO,OAAQ,MAAO,SAC1D,WAAY,QAAS,QAAS,YAAa,YAAa,WAAY,QACpE,WAAY,YAAa,SAAU,SAAU,OAAQ,QAAS,SAC9D,WAAY,WAAY,WAAY,WAAY,SAAU,QAAS,QACnE,SAAU,QAAS,SAAU,QAAS,QAAS,SAAU,SAAU,OACnE,UAAW,WAAY,YAAa,WAAY,UAAW,YAC3D,OAAQ,UAAW,UAAW,QAAS,QAAS,SAAU,UAC1D,aAAc,SAAU,YAAa,YAAa,UAAW,aAC7D,WAAY,UAAW,SAAU,SAAU,OAAQ,QAAS,MAC5D,UAAW,UAAW,OAAQ,YAAa,UAAW,QAAS,SAC/D,QAAS,MAAO,SAAU,UAAW,OAAQ,QAAS,UAAW,QACjE,SAAU,QAAS,OAAQ,SAAU,UAAW,SAAU,UAAW,OACrE,OAAQ,SAAU,UAAW,UAAW,OAAQ,MAAO,SAAU,SACjE,QAAS,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,WACjE,SAAU,QAAS,UAAW,SAAU,SAAU,OAAQ,UAC1D,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,YAC1D,SAAU,SAAU,UAAW,YAAa,WAAY,UACxD,UAAW,UAAW,SAAU,SAAU,SAAU,SAAU,SAC9D,MAAO,QAAS,OAAQ,OAAQ,QAAS,QAAS,OAAQ,QAAS,OACnE,SAAU,SAAU,UAAW,SAAU,QAAS,UAAW,QAC7D,OAAQ,aAAc,SAAU,SAAU,WAAY,OAAQ,UAC9D,OAAQ,QAAS,QAAS,MAAO,WAAY,WAAY,UACzD,SAAU,QAAS,SAAU,WAAY,aAAc,YACvD,UAAW,WAAY,WAAY,WAAY,UAAW,SAC1D,WAAY,UAAW,QAAS,OAAQ,QAAS,SAAU,UAC3D,WAAY,QAAS,SAAU,OAAQ,UAAW,SAAU,QAC5D,QAAS,SAAU,QAAS,SAAU,SAAU,UAAW,SAAU,OACrE,SAAU,QAAS,SAAU,QAAS,SAAU,QAAS,SACzD,UAAW,QAAS,KAAM,SAAU,QAAS,SAAU,SAAU,QACjE,OAAQ,OAAQ,SAAU,WAAY,UAAW,SAAU,QAC3D,UAAW,QAAS,SAAU,SAAU,UAAW,SAAU,SAC7D,UAAW,UAAW,UAAW,QAAS,UAAW,UAAW,SAChE,SAAU,UAAW,UAAW,SAAU,UAAW,UAAW,UAChE,SAAU,UAAW,UAAW,QAAS,OAAQ,QAAS,OAAQ,QAClE,SAAU,UAAW,QAAS,UAAW,YAAa,SAAU,UAChE,WAAY,UAAW,QAAS,UAAW,WAAY,QAAS,YAChE,QAAS,QAAS,SAAU,WAAY,SAAU,QAAS,QAC3D,SAAU,QAAS,SAAU,QAAS,OAAQ,MAAO,QAAS,SAC9D,QAAS,WAAY,SAAU,UAAW,SAAU,OAAQ,QAC5D,SAAU,UAAW,OAAQ,QAAS,UAAW,OAAQ,UACzD,SAAU,SAAU,UAAW,SAAU,UAAW,UAAW,SAC/D,SAAU,SAAU,UAAW,UAAW,aAAc,UACxD,UAAW,UAAW,OAAQ,QAAS,UAAW,SAAU,WAC5D,SAAU,QAAS,SAAU,QAAS,SAAU,WAAY,SAC5D,UAAW,WAAY,UAAW,SAAU,UAAW,QAAS,YAChE,SAAU,WAAY,WAAY,UAAW,WAAY,SACzD,UAAW,SAAU,SAAU,OAAQ,WAAY,QAAS,UAC5D,UAAW,SAAU,YAAa,YAAa,UAAW,SAC1D,WAAY,WAAY,YAAa,YAAa,WAAY,UAC9D,QAAS,QAAS,SAAU,UAAW,QAAS,SAAU,UAC1D,UAAW,YAAa,YAAa,QAAS,SAAU,QAAS,OACjE,QAAS,WAAY,QAAS,SAAU,WAAY,SAAU,WAC9D,UAAW,WAAY,UAAW,UAAW,UAAW,YACxD,QAAS,UAAW,WAAY,QAAS,OAAQ,UAAW,UAC5D,UAAW,UAAW,UAAW,OAAQ,WAAY,WAAY,QACjE,QAAS,SAAU,UAAW,aAAc,YAAa,aACzD,YAAa,YAAa,WAAY,aAAc,cACpD,UAAW,QAAS,QAAS,SAAU,QAAS,SAAU,QAC1D,WAAY,QAAS,SAAU,QAAS,aAAc,QAAS,WAC/D,QAAS,QAAS,SAAU,UAAW,UAAW,WAAY,OAC9D,UAAW,UAAW,aAAc,aAAc,UAAW,OAC7D,SAAU,QAAS,SAAU,QAAS,YAAa,WAAY,UAC/D,QAAS,UAAW,WAAY,SAAU,QAAS,QAAS,OAAQ,OACpE,QAAS,OAAQ,UAAW,QAAS,UAAW,SAAU,OAAQ,SAClE,SAAU,WAAY,aAAc,SAAU,SAAU,SAAU,QAClE,SAAU,YAAa,aAAc,WAAY,SAAU,OAC3D,UAAW,SAAU,WAAY,UAAW,SAAU,SAAU,SAChE,SAAU,YAAa,UAAW,UAAW,SAAU,UAAW,OAClE,OAAQ,WAAY,MAAO,QAAS,WAAY,SAAU,UAC1D,WAAY,WAAY,YAAa,aAAc,OAAQ,UAC3D,UAAW,SAAU,OAAQ,SAAU,SAAU,UAAW,QAC5D,QAAS,SAAU,SAAU,QAAS,SAAU,QAAS,SAAU,OACnE,SAAU,SAAU,SAAU,UAAW,SAAU,SAAU,SAC7D,SAAU,QAAS,MAAO,OAAQ,SAAU,OAAQ,WAAa,UACjE,SAAU,UAAW,WAAY,WAAY,SAAU,SAAU,QACjE,QAAS,SAAU,SAAU,UAAW,UAAW,QAAS,QAC5D,SAAU,UAAW,SAAU,QAAS,SAAU,SAAU,UAC5D,QAAS,SAAU,UAAW,SAAU,UAAW,SAAU,UAC7D,SAAU,SAAU,SAAU,QAAS,UAAW,QAAS,OAAQ,QACnE,QAAS,SAAU,QAAS,UAAW,OAAQ,SAAU,MAAO,SAChE,QAAS,QAAS,SAAU,OAAQ,WAAY,SAAU,UAC1D,SAAU,SAAU,UAAW,MAAO,QAAS,OAAQ,QAAS,QAChE,SAAU,UAAW,UAAW,UAAW,QAAS,UAAW,OAC/D,QAAS,SAAU,UAAW,SAAU,UAAW,WAAY,QAC/D,UAAW,WAAY,UAAW,WAAY,YAAa,SAAU,OACrE,QAAS,SAAU,OAAQ,UAAW,UAAW,SAAU,SAC3D,QAAS,SAAU,QAAS,UAAW,UAAW,UAAW,UAC7D,UAAW,SAAU,UAAW,SAAU,WAAY,WAAY,UAClE,UAAW,QAAS,UAAW,QAAS,QAAS,QAAS,UAC1D,QAAS,UAAW,SAAU,SAAU,UAAW,QAAS,SAC5D,QAAS,SAAU,SAAU,UAAW,OAAQ,OAAQ,OAAQ,QAChE,OAAQ,QAAS,UAAW,UAAW,WAAY,WAAY,WAC/D,UAAW,UAAW,YAAa,MAAO,SAAU,SAAU,UAC9D,QAAS,UAAW,SAAU,QAAS,OAAQ,SAAU,SAAU,QACnE,WAAY,UAAW,SAAU,SAAU,SAAU,OAAQ,UAC7D,QAAS,QAAS,QAAS,OAAQ,QAAS,SAAU,QAAS,SAC/D,UAAW,SAAU,QAAS,SAAU,QAAS,OAAQ,UACzD,UAAW,UAAW,aAAc,SAAU,SAAU,OAAQ,QAChE,KAAM,MAAO,MAAO,QAAS,OAAQ,QAAS,UAAW,SAAU,SACnE,SAAU,OAAQ,UAAW,SAAU,UAAW,QAAS,SAC3D,QAAS,SAAU,QAAS,SAAU,QAAS,SAAU,QAAS,OAClE,SAAU,SAAU,SAAU,OAAQ,QAAS,SAAU,SACzD,WAAY,WAAY,WAAY,UAAW,SAAU,QAAS,SAClE,UAAW,WAAY,WAAY,MAAO,QAAS,SAAU,QAC7D,UAAW,SAAU,SAAU,UAAW,QAAS,YAAa,QAChE,SAAU,SAAU,SAAU,QAAS,YAAa,OAAQ,QAC5D,QAAS,SAAU,UAAW,QAAS,YAAa,QAAS,SAC7D,OAAQ,SAAU,OAAQ,SAAU,QAAS,SAAU,SAAU,UACjE,OAAQ,QAAS,OAAQ,OAAQ,QAAS,OAAQ,QAAS,OAAQ,SACnE,QAAS,QAAS,QAAS,QAAS,QAAS,SAAU,OAAQ,UAC/D,SAAU,SAAU,QAAS,UAAW,UAAW,QAAS,OAAQ,OACpE,QAAS,SAAU,WAAY,SAAU,SAAU,QAAS,OAC5D,UAAW,WAAY,aAAc,QAAS,SAAU,QAAS,SACjE,OAAQ,QAAS,MAAO,OAAQ,QAAS,QAAS,OAAQ,SAC1D,UAAW,UAAW,MAAO,WAAY,OAAQ,QAAS,QAAS,QACnE,SAAU,OAAQ,QAAS,OAAQ,SAAU,OAAQ,SAAU,YAC/D,YAAa,UAAW,QAAS,QAAS,QAAS,OAAQ,YAC3D,YAAa,OAAQ,UAAW,YAAa,QAAS,SAAU,UAChE,UAAW,UAAW,SAAU,WAAY,OAAQ,QAAS,QAC7D,UAAW,QAAS,QAAS,SAAU,SAAU,UAAW,OAAQ,QACpE,UAAW,OAAQ,SAAU,UAAW,MAAO,SAAU,OACzD,aAAc,QAAS,MAAO,UAAW,SAAU,WAAY,UAC/D,WAAY,QAAS,OAAQ,QAAS,QAAS,UAAW,WAC1D,OAAQ,SAAU,UAAW,MAAO,SAAU,QAAS,SAAU,WACjE,SAAU,SAAU,MAAO,OAAQ,WAAY,UAAW,WAC1D,WAAY,SAAU,SAAU,QAAS,SAAU,SAAU,OAC7D,WAAY,QAAS,QAAS,YAAa,WAAY,OAAQ,QAC/D,SAAU,SAAU,QAAS,WAAY,MAAO,WAAY,YAC5D,UAAW,UAAW,UAAW,UAAW,OAAQ,QAAS,OAC7D,SAAU,UAAW,SAAU,UAAW,YAAa,YACvD,UAAW,YAAa,YAAa,SAAU,QAAS,UAAW,QACnE,OAAQ,QAAS,UAAW,SAAU,WAAY,YAAa,WAC/D,aAAc,WAAY,QAAS,SAAU,UAAW,SAAU,QAClE,SAAU,YAAa,QAAS,SAAU,OAAQ,UAAW,YAC7D,YAAa,UAAW,OAAQ,OAAQ,UAAW,SAAU,WAC7D,UAAW,SAAU,UAAW,SAAU,UAAW,UAAW,WAChE,QAAS,QAAS,SAAU,QAAS,MAAO,QAAS,UAAW,OAChE,UAAW,UAAW,YAAa,UAAW,WAAY,MAAO,WACjE,SAAU,YAAa,YAAa,aAAc,WAAY,WAC9D,UAAW,SAAU,YAAa,SAAU,UAAW,QAAS,UAChE,WAAY,SAAU,QAAS,SAAU,WAAY,MAAO,SAC5D,SAAU,UAAW,WAAY,QAAS,QAAS,UAAW,OAC9D,OAAQ,UAAW,WAAY,WAAY,WAAY,WACvD,WAAY,UAAW,SAAU,OAAQ,SAAU,SAAU,UAC7D,SAAU,UAAW,QAAS,SAAU,UAAW,SAAU,QAC7D,SAAU,WAAY,QAAS,SAAU,QAAS,YAAa,SAC/D,UAAW,QAAS,OAAQ,QAAS,WAAY,WAAY,UAC7D,QAAS,WAAY,UAAW,UAAW,SAAU,YAAa,SAClE,QAAS,YAAa,WAAY,SAAU,SAAU,MAAO,SAC7D,OAAQ,UAAW,MAAO,OAAQ,YAAa,SAAU,SAAU,SACnE,SAAU,MAAO,UAAW,QAAS,QAAS,QAAS,SAAU,OACjE,QAAS,SAAU,OAAQ,QAAS,SAAU,SAAU,UAAW,SACnE,WAAY,QAAS,SAAU,UAAW,SAAU,SAAU,SAC9D,QAAS,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,QACnE,UAAW,SAAU,QAAS,SAAU,QAAS,QAAS,SAC1D,SAAU,QAAS,SAAU,SAAU,UAAW,YAAa,QAC/D,YAAa,QAAS,UAAW,SAAU,UAAW,UAAW,WACjE,WAAY,UAAW,QAAS,SAAU,SAAU,SAAU,UAC9D,UAAW,QAAS,YAAa,UAAW,UAAW,QAAS,SAChE,WAAY,QAAS,SAAU,SAAU,SAAU,SAAU,QAC7D,OAAQ,SAAU,UAAW,WAAY,QAAS,UAAW,SAC7D,SAAU,OAAQ,SAAU,SAAU,OAAQ,QAAS,WAAY,SACnE,QAAS,MAAO,UAAW,OAAQ,MAAO,QAAS,SAAU,UAC7D,WAAY,MAAO,MAAO,QAAS,SAAU,MAAO,QAAS,SAC7D,WAAY,UAAW,OAAQ,OAAQ,SAAU,QAAS,QAAS,SACnE,UAAW,WAAY,WAAY,OAAQ,UAAW,OAAQ,SAC9D,SAAU,SAAU,SAAU,SAAU,OAAQ,SAAU,QAAS,QACnE,MAAO,OAAQ,QAAS,MAAO,WAAY,SAAU,SAAU,OAC/D,QAAS,WAAY,UAAW,OAAQ,YAAa,SAAU,UAC/D,UAAW,QAAS,SAAU,YAAa,UAAW,WAAY,OAClE,OAAQ,QAAS,QAAS,QAAS,SAAU,QAAS,SAAU,SAChE,QAAS,QAAS,UAAW,OAAQ,QAAS,SAAU,QAAS,QACjE,QAAS,SAAU,QAAS,QAAS,WAAY,QAAS,UAC1D,QAAS,QAAS,QAAS,QAAS,UAAW,SAAU,MAAO,OAChE,QAAS,OAAQ,UAAW,UAAW,QAAS,SAAU,SAAU,QACpE,QAAS,SAAU,SAAU,OAAQ,SAAU,WAAY,YAC3D,QAAS,QAAS,QAAS,QAAS,SAAU,UAAW,SACzD,UAAW,SAAU,SAAU,QAAS,SAAU,QAAS,SAC3D,UAAW,SAAU,QAAS,UAAW,MAAO,QAAS,SAAU,QACnE,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,SAC3D,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,UAAW,OACrE,WAAY,SAAU,SAAU,MAAO,WAAY,WAAY,OAC/D,WAAY,UAAW,UAAW,SAAU,OAAQ,UAAW,SAC/D,WAAY,WAAY,WAAY,SAAU,QAAS,SAAU,UACjE,SAAU,QAAS,UAAW,SAAU,UAAW,WAAY,SAC/D,QAAS,SAAU,SAAU,UAAW,SAAU,UAAW,QAC7D,OAAQ,QAAS,UAAW,SAAU,UAAW,QAAS,UAC1D,QAAS,OAAQ,SAAU,QAAS,QAAS,SAAU,UAAW,SAClE,QAAS,KAAM,OAAQ,QAAS,SAAU,SAAU,UAAW,SAC/D,QAAS,UAAW,UAAW,QAAS,OAAQ,MAAO,OAAQ,SAC/D,SAAU,OAAQ,QAAS,SAAU,UAAW,WAAY,OAC5D,YAAa,YAAa,UAAW,SAAU,WAAY,UAC3D,QAAS,MAAO,QAAS,UAAW,WAAY,WAAY,SAC5D,UAAW,QAAS,SAAU,QAAS,SAAU,QAAS,OAAQ,SAClE,WAAY,SAAU,YAAa,OAAQ,SAAU,UAAW,SAChE,UAAW,WAAY,QAAS,QAAS,QAAS,SAAU,UAC5D,SAAU,MAAO,QAAS,QAAS,UAAW,QAAS,OAAQ,OAC/D,QAAS,SAAU,OAAQ,QAAS,QAAS,SAAU,UACvD,WAAY,QAAS,SAAU,SAAU,QAAS,SAAU,OAC5D,SAAU,SAAU,SAAU,UAAW,UAAW,UAAW,SAC/D,SAAU,SAAU,UAAW,QAAS,QAAS,OAAQ,QAAS,OAClE,QAAS,QAAS,QAAS,SAAU,OAAQ,SAAU,SAAU,SACjE,UAAW,UAAW,OAAQ,QAAS,UAAW,QAAS,OAAQ,SACnE,UAAW,UAAW,SAAU,SAAU,SAAU,OAAQ,OAC5D,SAAU,UAAW,QAAS,OAAQ,UAAW,WAAY,SAC7D,SAAU,OAAQ,SAAU,SAAU,QAAS,SAAU,WACzD,SAAU,WAAY,QAAS,YAAa,WAAY,UACxD,UAAW,WAAY,YAAa,YAAa,WAAY,WAC7D,UAAW,UAAW,WAAY,SAAU,UAAW,UAAW,UAClE,SAAU,QAAS,MAAO,OAAQ,SAAU,SAAU,QAAS,SAC/D,SAAU,WAAY,SAAU,QAAS,SAAU,SAAU,SAC7D,QAAS,QAAS,SAAU,SAAU,SAAU,QAAS,SAAU,QACnE,QAAS,SAAU,SAAU,QAAS,SAAU,QAAS,QAAS,SAClE,SAAU,SAAU,MAAO,UAAW,SAAU,WAAY,QAC5D,UAAW,UAAW,UAAW,UAAW,QAAS,SAAU,QAC/D,WAAY,SAAU,OAAQ,UAAW,UAAW,QAAS,QAC7D,QAAS,QAAS,WAAY,SAAU,SAAU,OAAQ,QAAS,SACnE,QAAS,SAAU,OAAQ,QAAS,SAAU,QAAS,MAAO,WAC9D,OAAQ,MAAO,OAAQ,OAAQ,UAAW,UAAW,QAAS,OAC9D,OAAQ,OAAQ,QAAS,OAAQ,SAAU,QAAS,OAAQ,QAAS,OACrE,SAAU,WAAY,UAAW,WAAY,YAAa,aAC1D,aAAc,SAAU,UAAW,UAAW,WAAY,OAAQ,SAClE,OAAQ,OAAQ,QAAS,UAAW,QAAS,QAAS,OAAQ,QAC9D,OAAQ,WAAY,YAAa,QAAS,SAAU,QAAS,UAC7D,SAAU,QAAS,SAAU,OAAQ,QAAS,UAAW,QAAS,QAClE,QAAS,QAAS,SAAU,SAAU,WAAY,WAAY,WAC9D,YAAa,SAAU,UAAW,QAAS,SAAU,SAAU,SAC/D,UAAW,UAAW,SAAU,UAAW,QAAS,UAAW,WAC/D,SAAU,QAAS,QAAS,SAAU,MAAO,QAAS,SAAU,SAChE,SAAU,OAAQ,MAAO,OAAQ,QAAS,UAAW,OAAQ,QAC7D,SAAU,QAAS,QAAS,SAAU,QAAS,SAAU,QAAS,SAClE,SAAU,MAAO,QAAS,OAAQ,UAAW,WAAY,QAAS,SAClE,SAAU,SAAU,UAAW,UAAW,WAAY,QAAS,OAC/D,SAAU,SAAU,QAAS,SAAU,SAAU,OAAQ,QAAS,UAClE,OAAQ,MAAO,QAAS,OAAQ,QAAS,QAAS,MAAO,OAAQ,QACjE,SAAU,QAAS,OAAQ,SAAU,UAAW,UAAW,QAC3D,UAAW,WAAY,SAAU,QAAS,OAAQ,SAAU,OAC5D,UAAW,QAAS,UAAW,UAAW,SAAU,SAAU,UAC9D,SAAU,OAAQ,WAAY,UAAW,QAAS,OAAQ,SAC1D,SAAU,YAAa,QAAS,QAAS,OAAQ,OAAQ,SAAU,OACnE,MAAO,SAAU,QAAS,SAAU,QAAS,QAAS,OAAQ,UAC9D,QAAS,SAAU,SAAU,UAAW,UAAW,OAAQ,SAC3D,QAAS,SAAU,MAAO,QAAS,SAAU,UAAW,WACxD,SAAU,MAAO,QAAS,QAAS,QAAS,UAAW,QAAS,WAChE,SAAU,UAAW,QAAS,UAAW,SAAU,OAAQ,QAC3D,SAAU,MAAO,SAAU,QAAS,OAAQ,QAAS,QAAS,OAC9D,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,SAAU,MAAO,OAAQ,QACpE,OAAQ,OAAQ,QAAS,UAAW,QAAS,UAAW,QAAS,MACjE,QAAS,OAAQ,QAAS,OAAQ,YAAa,OAAQ,WACvD,UAAW,WAAY,WAAY,UAAW,WAAY,QAAS,QACnE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,MAClE,SAAU,QAAS,UAAW,SAAU,WAAY,YAAa,SACjE,WAAY,SAAU,OAAQ,QAAS,QAAS,QAAS,UACzD,UAAW,WAAY,UAAW,UAAW,SAAU,UAAW,SAClE,UAAW,UAAW,QAAS,SAAU,SAAU,UAAW,OAC9D,OAAQ,SAAU,YAAa,YAAa,WAAY,WACxD,YAAa,UAAW,SAAU,QAAS,SAAU,SAAU,WAC/D,YAAa,YAAa,aAAc,aAAc,YAAa,QACnE,SAAU,SAAU,UAAW,aAAc,QAAS,SAAU,SAChE,SAAU,UAAW,UAAW,WAAY,WAAY,UACxD,UAAW,QAAS,UAAW,WAAY,WAAY,UAAW,UAClE,WAAY,SAAU,QAAS,SAAU,SAAU,UAAW,UAC9D,aAAc,WAAY,UAAW,OAAQ,SAAU,SAAU,SACjE,UAAW,SAAU,SAAU,SAAU,UAAW,UAAW,WAC/D,WAAY,QAAS,SAAU,UAAW,UAAW,QAAS,SAC9D,OAAQ,SAAU,WAAY,SAAU,QAAS,QAAS,SAC1D,UAAW,WAAY,UAAW,UAAW,OAAQ,SAAU,SAC/D,OAAQ,QAAS,SAAU,UAAW,UAAW,WAAY,UAC7D,WAAY,QAAS,MAAO,QAAS,SAAU,aAAc,aAC7D,cAAe,SAAU,UAAW,SAAU,UAAW,MAAO,OAChE,UAAW,WAAY,OAAQ,SAAU,UAAW,QAAS,QAC7D,UAAW,UAAW,WAAY,SAAU,UAAW,OAAQ,SAC/D,SAAU,SAAU,QAAS,SAAU,QAAS,SAAU,UAC1D,SAAU,SAAU,SAAU,UAAW,SAAU,UAAW,WAC9D,WAAY,OAAQ,QAAS,SAAU,UAAW,SAAU,SAC5D,OAAQ,MAAO,UAAW,QAAS,UAAW,WAAY,UAC1D,UAAW,SAAU,UAAW,WAAY,SAAU,UAAW,OACjE,QAAS,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,SAClE,OAAQ,UAAW,SAAU,UAAW,WAAY,SAAU,SAC9D,WAAY,QAAS,UAAW,WAAY,SAAU,UAAW,UACjE,UAAW,WAAY,WAAY,SAAU,SAAU,QAAS,OAChE,SAAU,UAAW,SAAU,YAAa,aAAc,UAC1D,QAAS,QAAS,SAAU,SAAU,SAAU,WAAY,SAC5D,OAAQ,QAAS,QAAS,SAAU,SAAU,UAAW,WACzD,SAAU,OAAQ,SAAU,SAAU,UAAW,MAAO,OAAQ,SAChE,QAAS,OAAQ,SAAU,OAAQ,QAAS,QAAS,UAAW,SAChE,SAAU,SAAU,QAAS,QAAS,OAAQ,SAAU,QAAS,SACjE,WAAY,UAAW,OAAQ,QAAS,MAAO,UAAW,UAC1D,UAAW,SAAU,YAAa,YAAa,YAAa,SAC5D,SAAU,OAAQ,MAAO,QAAS,OAAQ,OAAQ,QAAS,QAAS,QACpE,SAAU,OAAQ,SAAU,QAAS,SAAU,SAAU,OAAQ,SACjE,SAAU,MAAO,WAAY,YAAa,UAAW,OAAQ,WAC7D,WAAY,OAAQ,SAAU,UAAW,SAAU,YAAa,QAChE,SAAU,QAAS,QAAS,OAAQ,UAAW,OAAQ,OAAQ,OAC/D,QAAS,MAAO,OAAQ,SAAU,QAAS,SAAU,QAAS,OAC9D,QAAS,OAAQ,OAAQ,UAAW,WAAY,SAAU,QAAS,SACnE,SAAU,UAAW,OAAQ,UAAW,MAAO,OAAQ,SAAU,OACjE,SAAU,OAAQ,UAAW,MAAO,QAAS,SAAU,OAAQ,SAC/D,OAAQ,MAAO,OAAQ,MAAO,OAAQ,QAAS,OAAQ,OAAQ,SAC/D,QAAS,MAAO,QAAS,OAAQ,MAAO,OAAQ,OAAQ,UAAW,MACnE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,SAAU,UAC3D,OAAQ,QAAS,QAAS,QAAS,UAAW,UAAW,UAAW,QACpE,UAAW,SAAU,UAAW,OAAQ,OAAQ,SAAU,OAAQ,UAClE,QAAS,OAAQ,MAAO,OAAQ,SAAU,QAAS,QAAS,QAC5D,SAAU,QAAS,QAAS,QAAS,SAAU,UAAW,WAAY,MACtE,WAAY,WAAY,UAAW,QAAS,SAAU,OAAQ,QAC9D,UAAW,SAAU,SAAU,QAAS,UAAW,WAAY,QAC/D,SAAU,WAAY,WAAY,QAAS,QAAS,OAAQ,QAC5D,QAAS,SAAU,SAAU,SAAU,UAAW,SAAU,SAC5D,SAAU,OAAQ,SAAU,QAAS,QAAS,SAAU,WACxD,UAAW,UAAW,QAAS,SAAU,WAAY,YACrD,aAAc,WAAY,QAAS,UAAW,UAAW,SAAU,QACnE,UAAW,UAAW,UAAW,SAAU,WAAY,MAAO,SAC9D,SAAU,UAAW,SAAU,UAAW,QAAS,QAAS,UAC5D,QAAS,SAAU,QAAS,SAAU,SAAU,UAAW,QAAS,QACpE,SAAU,QAAS,UAAW,YAAa,SAAU,SAAU,UAC/D,UAAW,OAAQ,QAAS,MAAO,UAAW,WAAY,SAC1D,SAAU,OAAQ,SAAU,UAAW,SAAU,UAAW,QAAS,OACrE,QAAS,QAAS,SAAU,WAAY,OAAQ,SAAU,QAC1D,WAAY,YAAa,OAAQ,QAAS,SAAU,OAAQ,QAC5D,QAAS,SAAU,OAAQ,MAAO,MAAO,QAAS,WAAY,QAC9D,UAAW,OAAQ,QAAS,UAAW,WAAY,QAAS,UAC5D,UAAW,SAAU,WAAY,OAAQ,SAAU,SAAU,QAC7D,OAAQ,YAAa,QAAS,OAAQ,QAAS,OAAQ,SAAU,SACjE,UAAW,UAAW,QAAS,QAAS,QAAS,QAAS,MAAO,WACjE,SAAU,UAAW,UAAW,UAAW,OAAQ,UAAW,QAC9D,SAAU,UAAW,SAAU,OAAQ,UAAW,QAAS,MAAO,UAClE,QAAS,YAAa,OAAQ,OAAQ,UAAW,UAAW,WAC5D,YAAa,UAAW,WAAY,UAAW,UAAW,SAAU,OACpE,UAAW,UAAW,YAAa,WAAY,UAAW,UAC1D,QAAS,SAAU,SAAU,OAAQ,SAAU,QAAS,SAAU,UAClE,SAAU,UAAW,MAAO,QAAS,QAAS,UAAW,QAAS,QAClE,OAAQ,QAAS,UAAW,OAAQ,SAAU,OAAQ,SAAU,UAChE,QAAS,OAAQ,QAAS,SAAU,OAAQ,QAAS,QAAS,QAC9D,QAAS,UAAW,QAAS,SAAU,UAAW,UAAW,QAC7D,QAAS,OAAQ,QAAS,SAAU,QAAS,QAAS,WACtD,YAAa,MAAO,UAAW,WAAY,SAAU,QAAS,SAC9D,QAAS,SAAU,SAAU,WAAY,QAAS,UAAW,QAC7D,WAAY,UAAW,UAAW,SAAU,QAAS,QAAS,SAC9D,QAAS,OAAQ,UAAW,UAAW,WAAY,SAAU,WAC7D,WAAY,OAAQ,UAAW,SAAU,SAAU,OAAQ,YAC3D,UAAW,SAAU,SAAU,SAAU,SAAU,WAAY,OAC/D,OAAQ,SAAU,UAAW,QAAS,QAAS,SAAU,WACzD,SAAU,SAAU,UAAW,SAAU,UAAW,SAAU,SAC9D,QAAS,SAAU,QAAS,QAAS,SAAU,UAAW,SAC1D,SAAU,OAAQ,SAAU,UAAW,SAAU,WAAY,UAC7D,WAAY,UAAW,SAAU,UAAW,QAAS,MAAO,SAC5D,SAAU,SAAU,UAAW,SAAU,SAAU,QAAS,MAAO,SACnE,SAAU,UAAW,SAAU,OAAQ,QAAS,SAAU,QAC1D,UAAW,QAAS,QAAS,QAAS,QAAS,SAAU,SACzD,UAAW,SAAU,QAAS,OAAQ,WAAY,UAAW,UAC7D,SAAU,WAAY,SAAU,UAAW,YAAa,YACxD,WAAY,UAAW,UAAW,WAAY,QAAS,SAAU,UACjE,QAAS,SAAU,SAAU,QAAS,QAAS,SAAU,UAAW,QACpE,UAAW,OAAQ,QAAS,SAAU,SAAU,QAAS,SAAU,SACnE,YAAa,SAAU,UAAW,MAAO,QAAS,QAAS,SAC3D,QAAS,QAAS,SAAU,QAAS,OAAQ,QAAS,OAAQ,QAC9D,UAAW,UAAW,UAAW,OAAQ,SAAU,SAAU,MAAO,QACpE,UAAW,SAAU,WAAY,UAAW,WAAY,UAAW,QACnE,OAAQ,SAAU,QAAS,OAAQ,WAAY,SAAU,OAAQ,SACjE,OAAQ,WAAY,WAAY,UAAW,UAAW,WAAY,SAClE,SAAU,QAAS,UAAW,MAAO,QAAS,SAAU,QAAS,SACjE,UAAW,UAAW,WAAY,QAAS,UAAW,OAAQ,OAC9D,QAAS,QAAS,OAAQ,MAAO,MAAO,QAAS,SAAU,SAC3D,QAAS,OAAQ,OAAQ,QAAS,WAAY,SAAU,MAAO,QAC/D,SAAU,QAAS,SAAU,SAAU,MAAO,WAAY,WAC1D,QAAS,UAAW,SAAU,UAAW,QAAS,SAAU,UAC5D,SAAU,OAAQ,UAAW,SAAU,WAAY,UAAW,UAC9D,OAAQ,SAAU,SAAU,UAAW,SAAU,QAAS,QAAS,OACnE,QAAS,SAAU,QAAS,SAAU,SAAU,UAAW,UAC3D,QAAS,SAAU,SAAU,SAAU,MAAO,SAAU,QAAS,QACjE,QAAS,SAAU,OAAQ,WAAY,YAAa,YAAa,UACjE,SAAU,MAAO,QAAS,UAAW,SAAU,OAAQ,QAAS,QAChE,QAAS,QAAS,OAAQ,QAAS,SAAU,SAAU,QAAS,SAChE,OAAQ,QAAS,SAAU,UAAW,SAAU,SAAU,SAC1D,WAAY,QAAS,UAAW,UAAW,SAAU,QAAS,SAC9D,WAAY,OAAQ,QAAS,QAAS,QAAS,UAAW,WAC1D,WAAY,SAAU,QAAS,SAAU,WAAY,SAAU,SAC/D,WAAY,WAAY,OAAQ,OAAQ,OAAQ,SAAU,UAC1D,WAAY,SAAU,WAAY,WAAY,OAAQ,QAAS,QAC/D,SAAU,UAAW,SAAU,SAAU,QAAS,OAAQ,SAC1D,SAAU,OAAQ,SAAU,QAAS,UAAW,SAAU,aAC1D,UAAW,QAAS,SAAU,UAAW,SAAU,UAAW,SAC9D,UAAW,UAAW,QAAS,UAAW,UAAW,WAAY,UACjE,UAAW,aAAc,OAAQ,QAAS,UAAW,UAAW,SAChE,SAAU,SAAU,QAAS,QAAS,SAAU,SAAU,SAC1D,WAAY,WAAY,YAAa,SAAU,UAAW,UAC1D,QAAS,QAAS,SAAU,SAAU,UAAW,SAAU,UAC3D,SAAU,UAAW,SAAU,UAAW,WAAY,UAAW,UACjE,SAAU,SAAU,YAAa,UAAW,UAAW,OAAQ,UAC/D,UAAW,SAAU,SAAU,OAAQ,QAAS,YAAa,QAC7D,QAAS,QAAS,OAAQ,QAAS,OAAQ,OAAQ,MAAO,OAAQ,OAClE,QAAS,OAAQ,OAAQ,QAc7BlwF,EAAOD,QAAU,CACb2sD,iBARJ,WACI,IAAM5rD,EAAOmlC,EAAWwvB,cAAcy6B,GAChC3uE,EAAS0kB,EAAW4vB,kBAAkB,GAE5C,MAAA,GAAAxsD,OAAUvI,EAAV,KAAAuI,OAAkBkY,ogBC7atB,IAAM0vB,EAAuBlqC,EAAQ,IAC/BmuB,EAASnuB,EAAQ,GAAqBiuB,UAAUO,GAMhDyjF,EAAuB,GAkF7B,SAASC,EAAoBC,EAAaC,GACtC,OAAKA,GAAgBA,GAAgB,IACzBD,GAAeA,GAAe,EAC/B,EAGJpsG,KAAKssG,MAAOF,EAAcC,EAAgB,KAOrD,SAASE,IACLrtG,KAAKstG,KAAO,GACZttG,KAAKutG,QAAU,CACX/mB,SAAU,EACVgnB,OAAQ,GAEZxtG,KAAK0jC,WAAa,GAClB1jC,KAAKytG,UAAY,EAiDrB,SAASC,IAML1tG,KAAKmlC,UAAY,GAMjBnlC,KAAKutG,QAAU,GAMfvtG,KAAK2tG,WAAa,KAMlB3tG,KAAK6oB,UAAY,GAkBN,SAAS+kF,EAChB5hF,EACAJ,EACAiiF,EACAjjF,GAgBJ5qB,KAAK8tG,aAAe9iF,EAAAA,EAAQm9B,UAC5B,IAAMz5B,EAAOs+E,EAAqBhtG,KAAK8tG,cAEvC,IAAKp/E,EAED,KAAA,qBAAArxB,OAA2B2C,KAAK8tG,aAAhC,sBAOJ9tG,KAAK+tG,qBACC/iF,EAAAA,EAAQm+E,sBAAwBn+E,EAAAA,EAAQgO,YAU9Ch5B,KAAKguG,cACChuG,KAAK+tG,qBACD/tG,KAAKiuG,6BAA6Bv/E,GAClC1uB,KAAKkuG,0BAA0Bx/E,GAEzC1uB,KAAKgsB,eAAiBA,EACtBhsB,KAAKmuG,0BAA4B,KACjCnuG,KAAKouG,yBAA2B,KAChCpuG,KAAKquG,mBAAqB,KAC1BruG,KAAKsuG,oBAAsB,KAC3BtuG,KAAKuuG,wBAA0B,GAC/BvuG,KAAKwuG,sBAAwB,KAC7BxuG,KAAK4qB,aAAeA,EACpB5qB,KAAKyuG,gBAAkB,IAAIf,EAG3B1tG,KAAK0uG,yBAA2B9iF,EAEhC5rB,KAAK2uG,gBAAkB,KACvB3uG,KAAK4uG,mBAAqBf,EAM1B7tG,KAAK6uG,WAAa,IAAIlkF,IAnQ1BqiF,EAAqB8B,EAAAA,EAAS5yD,SAAW,CACrClrB,KAAQ,OACR+9E,gBAAmB,kBACnBC,YAAe,cACfC,YAAe,cACfC,cAAiB,gBACjBh1B,UAAa,YACbi1B,cAAiB,gBACjBz3E,GAAM,YACNlB,KAAQ,aACRzjB,SAAY,aAEhBi6F,EAAqB8B,EAAAA,EAAS9yD,QAAU,CACpCozD,iBAAoB,gCACpBC,cAAiB,6BACjBC,cAAiB,oBACjBC,cAAiB,oBACjBC,aAAgB,mBAChBC,iBAAoB,uBACpBz+E,KAAQ,OACR+9E,gBAAmB,kBACnBE,YAAe,cACfD,YAAe,cACfE,cAAiB,gBACjBh1B,UAAa,YACbw1B,wBAA2B,0BAC3BC,uBAA0B,yBAC1BC,oBAAuB,sBACvBC,mBAAsB,qBACtBC,sBAAyB,wBACzBC,kBAAqB,oBACrBC,gBAAmB,kBACnBC,iBAAoB,mBACpBC,qBAAwB,UACxBC,oBAAuB,0BACvBC,mBAAsB,yBACtB14E,GAAM,KACNlB,KAAQ,OACRzjB,SAAY,YAEhBi6F,EAAqB8B,EAAAA,EAAS1yD,MAAQ,CAClCizD,cAAiB,6BACjBC,cAAiB,gBACjBC,cAAiB,WACjBC,aAAgB,eAChBC,iBAAoB,mBACpBz+E,KAAQ,OACR+9E,gBAAmB,kBACnBE,YAAe,cACfD,YAAe,cACfE,cAAiB,gBACjBh1B,UAAa,YACbw1B,wBAA2B,cAC3BC,uBAA0B,aAC1BC,oBAAuB,cACvBC,mBAAsB,aACtBC,sBAAyB,kBACzBC,kBAAqB,kBACrBC,gBAAmB,aACnBC,iBAAoB,aACpBC,qBAAwB,iBAE5BlD,EAAqB8B,EAAAA,EAAS7yD,OACxB+wD,EAAqB8B,EAAAA,EAAS9yD,QACpCgxD,EAAqB8B,EAAAA,EAASxyD,MACxB0wD,EAAqB8B,EAAAA,EAAS9yD,QACpCgxD,EAAqB8B,EAAAA,EAASvyD,UACxBywD,EAAqB8B,EAAAA,EAAS9yD,QACpCgxD,EAAqB8B,EAAAA,EAASzyD,QACxB2wD,EAAqB8B,EAAAA,EAAS9yD,QACpCgxD,EAAqB8B,EAAAA,EAAStyD,cACxBwwD,EAAqB8B,EAAAA,EAAS9yD,QAoCpCqxD,EAAUl3G,UAAUk6G,QAAU,SAAS/C,GACnCttG,KAAKstG,KAAOA,GAAQ,IAOxBD,EAAUl3G,UAAUm6G,cAAgB,SAAS5sE,GACzC1jC,KAAK0jC,WAAaA,GAAc,IAQpC2pE,EAAUl3G,UAAUo6G,WAAa,SAAShD,GACtCvtG,KAAKutG,QAAQ/mB,UAAY+mB,EAAQ/mB,SACjCxmF,KAAKutG,QAAQC,QAAUD,EAAQC,QAOnCH,EAAUl3G,UAAUq6G,aAAe,WAC/BxwG,KAAKutG,QAAQ/mB,SAAW,EACxBxmF,KAAKutG,QAAQC,OAAS,GAO1BH,EAAUl3G,UAAUs6G,aAAe,SAAShD,GACxCztG,KAAKytG,UAAYA,GAAa,GA4HlCG,EAAez3G,UAAU64B,KAAO,WACxBhvB,KAAKwuG,wBACL1mE,cAAc9nC,KAAKwuG,uBACnBxuG,KAAKwuG,sBAAwB,MAG7BxuG,KAAK2uG,kBACL7mE,cAAc9nC,KAAK2uG,iBACnB3uG,KAAK2uG,gBAAkB,OAQ/Bf,EAAez3G,UAAU09D,cAAgB,SAASjkD,GAC9Cq1B,EAAqBC,iBAAiBt1B,GACtCsZ,EAAOtZ,MAAM,kBAAmBA,GAChC5P,KAAKgvB,QAMT4+E,EAAez3G,UAAU4vB,MAAQ,SAAS2qF,GAAsB,IAAA7oE,EAAA7nC,KACtD4iB,EAAO5iB,KAET0wG,IACA1wG,KAAKwuG,sBAAwBhkE,YACzB,WAEI5nB,EAAKoJ,eAAekvE,SAChB,SAAA70C,GACI,IAAIo2B,EAAU,KAMVA,EAJCp2B,GAAWA,EAAOp2C,QACS,mBAAlBo2C,EAAOp2C,OAGPo2C,EAAOp2C,SAFPo2C,EAIdzjC,EAAKwrF,yBAA2B3xB,EAC5B50C,EAAKkmE,qBACLnrF,EAAK+tF,6BAEL/tF,EAAKguF,0BAGThuF,EAAKurF,0BACCvrF,EAAKwrF,0BAEf,SAAAx+F,GAAK,OAAIgT,EAAKixC,cAAcjkD,MAGpCgT,EAAK8rF,2BAIT1jF,EAAAA,EAAQ6lF,0BACR7wG,KAAK2uG,gBAAkBnkE,YACnB,WAEI5nB,EAAKoJ,eAAekvE,SAChB,SAAA70C,GACI,IAAIo2B,EAAU,KAQVA,EANCp2B,GAAWA,EAAOp2C,QACS,mBAAlBo2C,EAAOp2C,OAKPo2C,EAAOp2C,SAHPo2C,EAMdzjC,EAAKyrF,mBAAqB5xB,EAC1B,IACQ50C,EAAKkmE,qBACLnrF,EAAKkuF,wBAELluF,EAAKmuF,qBAEX,MAAO/xG,GACLimC,EAAqBC,iBAAiBlmC,GACtCkqB,EAAOtZ,MAAP,mBAAAvS,OAAgC2B,GAAKA,GAGzC4jB,EAAK0rF,oBAAsB1rF,EAAKyrF,oBAEpC,SAAAz+F,GAAK,OAAIgT,EAAKixC,cAAcjkD,MAGpCgT,EAAKgsF,sBAajBhB,EAAez3G,UAAU+3G,0BAA4B,SAASx/E,GAI1D,IAcIsiF,EAEJ,OAAQhxG,KAAK8tG,cACb,KAAKgB,EAAAA,EAAS9yD,OACd,KAAK8yD,EAAAA,EAAS7yD,MACd,KAAK6yD,EAAAA,EAASxyD,KACd,KAAKwyD,EAAAA,EAASvyD,SAQVy0D,EAAgB,SAACp1E,EAAM9lC,GAAP,OAAe8lC,EAAKq1E,KAAKn7G,IACzC,MACJ,KAAKg5G,EAAAA,EAAStyD,aAIVw0D,EAAgB,SAASp1E,EAAM9lC,GAC3B,IAAIN,EAaJ,OAXAomC,EAAK/N,OAAO2sD,KAAK,SAAA02B,GACb,QAAIA,EAAK96G,eAAeN,KACpBN,EAAQ07G,EAAKp7G,IAEN,KAORN,GAEX,MACJ,KAAKs5G,EAAAA,EAAS1yD,KACV40D,EAAgB,SAACp1E,EAAM9lC,GAAP,OAAe8lC,EAAK9lC,IACpC,MACJ,QACIk7G,EAAgB,SAACp1E,EAAM9lC,GAAP,OAAe8lC,EAAK9lC,IAMxC,OAAO,SAAC8lC,EAAM9mC,GAAP,OAAgBk8G,EAAcp1E,EA7DjB,SAAS9mC,GACzB,IAAMgB,EAAM44B,EAAK55B,GAEjB,GAAIgB,EACA,OAAOA,EAIX,KAAA,iBAAAuH,OAAuBvI,EAAvB,sBAqDuCq8G,CAAYr8G,MAW3D84G,EAAez3G,UAAUi7G,mBAAqB,SAAS/qD,EAAQvxD,GAC3D,IAAIU,EAAQwK,KAAKguG,cAAc3nD,EAAQvxD,GAMvC,MAJqB,iBAAVU,IACPA,EAAQqL,OAAOrL,IAGf4M,MAAM5M,GACC,EAGJsL,KAAK6gC,IAAI,EAAGnsC,IAQvBo4G,EAAez3G,UAAU46G,mBAAqB,WAAW,IAAArlE,EAAA1rC,KACrD,GAAKA,KAAKsuG,oBAAV,CAIA,IAAM+C,EAAerxG,KAAKguG,cACpBsD,EAAgB,GAEtB,IAAK,IAAMt4D,KAAOh5C,KAAKquG,mBACnB,GAAKruG,KAAKquG,mBAAmBj4G,eAAe4iD,GAA5C,CAGA,IAAMz7B,EAAMvd,KAAKquG,mBAAmBr1D,GAGpC,GAAKz7B,EAAL,CAIA,IACI,IAAM6xF,EAAmBiC,EAAa9zF,EAAK,oBACrC8xF,EAAgBgC,EAAa9zF,EAAK,kBAEpC6xF,GAAoBC,KACpBrvG,KAAKyuG,gBAAgBtpE,UAAY,CAC7BqhD,SAAY1lF,KAAKssG,MAAMgC,EAAmB,KAC1C5B,OAAU1sG,KAAKssG,MAAMiC,EAAgB,OAG/C,MAAOrwG,IAET,GAAiB,sBAAbue,EAAI/L,KAA8B,GAAA,aAAA,WAClC,IAAIyjE,OAAM,EAAEv9C,OAAE,EAAE04E,OAAkB,EAAEmB,OAAO,EACvCpB,OAAmB,EAAEtwE,OAAG,EAAEruB,OAAI,EAElC,IAEI,KADAyjE,EAASo8B,EAAa9zF,EAAK,qBAEvB,MAAA,WAGJma,EAAK25E,EAAa9zF,EAAK,iBACvB/L,EAAO6/F,EAAa9zF,EAAK,iBACzBg0F,EAAUF,EAAa9zF,EAAK,gBAC5B6yF,EAAqBiB,EAAa9zF,EAAK,sBACvC4yF,EAAsBkB,EAAa9zF,EAAK,uBACxCsiB,EAAM6L,EAAK0lE,mBAAmB7zF,EAAK,wBACrC,MAAOve,IACT,IAAK04B,IAAOlmB,IAAS+/F,GAAsB,SAAXt8B,EAC5B,MAAA,WAIJ,IAAMu8B,EAA2B9lE,EAAK+iE,gBAAgB5lF,UAiBtD,OAfK2oF,EAAyBh3B,KACtB,SAAA/kF,GAAC,OACGA,EAAEiiC,KAAOA,GACFjiC,EAAE+b,OAASA,GACX/b,EAAE87G,UAAYA,KAC7BC,EAAyB3zG,KAAK,CAC1B65B,GAAAA,EACAlmB,KAAAA,EACA+/F,QAAAA,EACAjlD,IAAK5gB,EAAK1f,eAAeonB,MACzBg9D,mBAAAA,EACAD,oBAAAA,EACAtwE,IAAAA,IAGR,WAvCkC,GAuClC,SAGJ,GAAiB,kBAAbtiB,EAAI/L,KAA0B,CAE9B,GAAkB,cAAd+L,EAAIkgD,QAA0BlgD,EAAIk0F,SAClC,SAGJ,IAAMC,EAAQ1xG,KAAKquG,mBAAmB9wF,EAAIo0F,kBACpCC,EAAS5xG,KAAKquG,mBAAmB9wF,EAAIs0F,mBAE3C7xG,KAAKyuG,gBAAgB5lF,UAAUhrB,KAAK,CAChC65B,GAAE,GAAAr6B,OAAKu0G,EAAOE,UAAZ,KAAAz0G,OAAyBu0G,EAAOG,YAClCvgG,KAAMkgG,EAAM7oF,UACZ0oF,QAAO,GAAAl0G,OAAKq0G,EAAMI,UAAX,KAAAz0G,OAAwBq0G,EAAMK,YACrCzlD,IAAKtsD,KAAKgsB,eAAeonB,MACzBg9D,mBAAoBsB,EAAMM,cAC1B7B,oBAAqByB,EAAOI,gBAcpC,GATmB,yBAAfz0F,EAAI00F,QACJjyG,KAAKyuG,gBAAgB5lF,UAAUhrB,KAAK,CAChC65B,GAAIna,EAAI+xF,cACR99F,KAAM+L,EAAIxK,SACVw+F,QAASh0F,EAAIiyF,aACbljD,IAAKtsD,KAAKgsB,eAAeonB,SAIhB,SAAb71B,EAAI/L,MAAgC,gBAAb+L,EAAI/L,MACX,eAAb+L,EAAI/L,MAAsC,UAAb+L,EAAI/L,SAMpCwZ,EAAAA,EAAQ4X,UACS,eAAbrlB,EAAI/L,MAAsC,gBAAb+L,EAAI/L,MADzC,CAKA,IAAM0gG,EAASlyG,KAAKsuG,oBAAoBt1D,GACpChoB,EAAOhxB,KAAKoxG,mBAAmB7zF,EAAK,QAOxC,GAJiB,UAAbA,EAAI/L,MAAoBpR,MAAMG,QAAQgd,EAAI40F,WAC1CnhF,EAAOnwB,OAAO0c,EAAI40F,QAAQ,KAGzBD,GAAWlhF,IAcXhG,EAAAA,EAAQ4X,WACgB,IAAjBrlB,EAAI60F,WAA0C,IAArB70F,EAAI80F,cADzC,CAKA,IAAIC,EAAYtyG,KAAK6uG,WAAWz5G,IAAI47B,GAE/BshF,IACDA,EAAY,IAAIjF,EAChBrtG,KAAK6uG,WAAWziF,IAAI4E,EAAMshF,IAG9B,IAAIC,GAAmB,EACnBz8G,EAAM,kBACN08G,EAAanB,EAAa9zF,EAAKznB,GAE/B,MAAO08G,GACkC,KAAfA,IAC1BD,GAAmB,EAGf,OADJC,EAAanB,EAAa9zF,EAD1BznB,EAAM,iBAGFozB,EAAOnZ,KAAK,oDAGfyiG,GAAcA,EAAa,KAC5BA,EAAa,GAGjB,IAAMC,EAAgBzyG,KAAKoxG,mBAAmBc,EAAQp8G,GAChD48G,EAAc5xG,KAAK6gC,IAAI,EAAG6wE,EAAaC,GAEvCE,EACA3yG,KAAKoxG,mBAAmB7zF,EAAK,eAC7Bq1F,EACA5yG,KAAKoxG,mBAAmBc,EAAQ,eAChCW,EAAkB/xG,KAAK6gC,IAAI,EAAGgxE,EAAiBC,GAErDN,EAAUjC,QAAQ,CACdyC,aAAcJ,EAAcG,EAC5B7D,YAAa6D,EACbN,iBAAAA,IAGJ,IAAMQ,EACA/yG,KAAKoxG,mBAAmB7zF,EAAK,iBAC7By1F,EACAhzG,KAAKoxG,mBAAmBc,EAAQ,iBAChChD,EACApuG,KAAK6gC,IAAI,EAAGoxE,EAAmBC,GAEjC94B,EAAY,EAGZ+4B,EAAsB5B,EAAa9zF,EAAK,aAET,iBAAxB01F,GAC2B,iBAAxBA,IACVA,EAAsBpyG,OAAOoyG,GACxB7wG,MAAM6wG,KACP3B,EAActgF,GAAQiiF,EAClBA,EAAsB,IACtB/4B,EAAY+4B,EACN5B,EAAaa,EAAQ,gBAIvCh4B,EAAYp5E,KAAK6gC,IAAI,EAAGu4C,GAExB,IAAMg5B,EAAS31F,EAAI41F,UAAYjB,EAAOiB,UAClCC,EAAsB,EAAGC,EAAkB,EAE3CH,EAAS,IAETE,EAAsBtyG,KAAKssG,MAAuB,EAAhB8B,EAAqBgE,GACvDG,EAAkBvyG,KAAKssG,MAAmB,EAAZlzB,EAAiBg5B,IAGnDZ,EAAU/B,WAAW,CACjB/pB,SAAY4sB,EACZ5F,OAAU6F,IAGd,IAAM3vE,EAAa,CACfjC,OAAQ,KACRmC,MAAO,MAGX,IACI,IAAInC,OAAM,EAAEmC,OAAK,GAEZnC,EAAS4vE,EAAa9zF,EAAK,8BACxBqmB,EAAQytE,EAAa9zF,EAAK,4BAC9BmmB,EAAWjC,OAASA,EACpBiC,EAAWE,MAAQA,IACXnC,EAAS4vE,EAAa9zF,EAAK,0BAC/BqmB,EAAQytE,EAAa9zF,EAAK,yBAC9BmmB,EAAWjC,OAASA,EACpBiC,EAAWE,MAAQA,GAEzB,MAAO5kC,IAGT,IAAI+lC,OAAS,EAEb,IACIA,EAAYssE,EAAa9zF,EAAK,0BACvB8zF,EAAa9zF,EAAK,sBAAwB,EACnD,MAAOve,GAGL,IACI+lC,EAAY/kC,KAAKoxG,mBAAmB7zF,EAAK,iBAC3C,MAAOtD,KAEbq4F,EAAU7B,aAAa3vG,KAAKssG,MAAMroE,GAAa,IAE3CrB,EAAWjC,QAAUiC,EAAWE,MAChC0uE,EAAUhC,cAAc5sE,GAExB4uE,EAAUhC,cAAc,SAIhCtwG,KAAK4qB,aAAa2C,KACdX,EAAAA,EAAkC5sB,KAAKgsB,eAAgBslF,GAE3DtxG,KAAKszG,0BAMT1F,EAAez3G,UAAUm9G,sBAAwB,WAAW,IAAAnmE,EAAAntC,KAElDmtG,EAAe,CACjB3mB,SAAU,EACVgnB,OAAQ,GAENN,EAAc,CAChB1mB,SAAU,EACVgnB,OAAQ,GAER+F,EAAkB,EAClBC,EAAgB,EACdC,EAAc,GACdC,EAAa,GACfC,EAAuB,EACvBC,EAAqB,EACrBC,EAAuB,EACvBC,EAAqB,EAjB+BtmF,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAmBxD,IAAA,IAAAgzB,EAAAC,EAAkC5tB,KAAK6uG,WAAvCv5G,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmD,CAAA,IAAA0sB,EAAAC,EAAAxsB,EAAAn4B,MAAA,GAAtCw7B,EAAsCkpB,EAAA,GAAhCo4D,EAAgCp4D,EAAA,GAEzCozD,EAAOgF,EAAUhF,KACjB97F,EAAO87F,EAAKiF,iBAAmB,WAAa,SAElDpF,EAAa37F,IAAS87F,EAAKwF,aAC3B5F,EAAY17F,IAAS87F,EAAK0B,YAG1BuE,GAAmBjB,EAAU/E,QAAQ/mB,SACrCgtB,GAAiBlB,EAAU/E,QAAQC,OAGnC,IAAM5gE,EAAQ5sC,KAAKgsB,eAAe0qB,eAAe1lB,GAEjD,GAAI4b,EAAO,CACHA,EAAM+J,gBACNg9D,GAAwBrB,EAAU/E,QAAQ/mB,SAC1CotB,GAAsBtB,EAAU/E,QAAQC,SAExCqG,GAAwBvB,EAAU/E,QAAQ/mB,SAC1CstB,GAAsBxB,EAAU/E,QAAQC,QAG5C,IAAM7tE,EAAgBiN,EAAMysB,mBAE5B,GAAI15B,EAAe,CACf,IAAM+D,EAAa4uE,EAAU5uE,WAE7B,GAAIA,EAAWE,OACJF,EAAWjC,SACW,IAAtBiC,EAAWE,QACY,IAAvBF,EAAWjC,OAAe,CACjC,IAAMsyE,EAAkBN,EAAY9zE,IAAkB,GAEtDo0E,EAAgB/iF,GAAQ0S,EACxB+vE,EAAY9zE,GAAiBo0E,EAEjC,GAA4B,IAAxBzB,EAAU7E,UAAiB,CAC3B,IAAMuG,EAAiBN,EAAW/zE,IAAkB,GAEpDq0E,EAAehjF,GAAQshF,EAAU7E,UACjCiG,EAAW/zE,GAAiBq0E,QAGhC9qF,EAAOtZ,MAAP,iCAAAvS,OAA8CuvC,IAItD0lE,EAAU9B,gBApE0C,MAAAv2F,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAuExD1tB,KAAKyuG,gBAAgBlB,QAAU,CAC3BC,OAAUgG,EACVhtB,SAAY+sB,GAGhBvzG,KAAKyuG,gBAAgBlB,QAAQ9qE,MAAQ,CACjC+qE,OAAUoG,EACVptB,SAAYmtB,GAGhB3zG,KAAKyuG,gBAAgBlB,QAAQhsE,MAAQ,CACjCisE,OAAUsG,EACVttB,SAAYqtB,GAGhB7zG,KAAKyuG,gBAAgBd,WAAa,CAC9Bt3B,MACI42B,EACIC,EAAY1mB,SAAW0mB,EAAYM,OACnCL,EAAa3mB,SAAW2mB,EAAaK,QAC7ChnB,SACIymB,EAAoBC,EAAY1mB,SAAU2mB,EAAa3mB,UAC3DgnB,OACIP,EAAoBC,EAAYM,OAAQL,EAAaK,SAG7D,IACIyG,EADEC,EAAiB,GAGvBj/G,OAAOy5B,KAAK1uB,KAAKuuG,yBAAyBttG,QAAQ,SAAA+vB,GAAQ,IAAAmjF,EAC5BhnE,EAAKohE,wBAAwBv9E,GAA/CxtB,EAD8C2wG,EAC9C3wG,KAAM8uB,EADwC6hF,EACxC7hF,QACR8hF,EAAgB5wG,EAAK6wG,OAAO,SAACC,EAAKC,GAAN,OAAuBD,EAAMC,IAAgB/wG,EAAKxG,OAEpF,GAAIs1B,EACA2hF,EAAsBG,MACnB,CACH,IAAMxnE,EAAQO,EAAKnhB,eAAe0qB,eAAe71C,OAAOmwB,IAExD,GAAI4b,EAAO,CACP,IAAMjN,EAAgBiN,EAAMysB,mBAExB15B,IACAu0E,EAAev0E,GAAiBy0E,OAKhDp0G,KAAKuuG,wBAA0B,GAE/BvuG,KAAK4qB,aAAa2C,KACdX,EAAAA,EACA5sB,KAAKgsB,eACL,CACImZ,UAAanlC,KAAKyuG,gBAAgBtpE,UAClCooE,QAAWvtG,KAAKyuG,gBAAgBlB,QAChCI,WAAc3tG,KAAKyuG,gBAAgBd,WACnCjqE,WAAc+vE,EACdhG,UAAaiG,EACb7qF,UAAa7oB,KAAKyuG,gBAAgB5lF,UAClCorF,oBAAAA,EACAC,eAAAA,IAERl0G,KAAKyuG,gBAAgB5lF,UAAY,IAMrC+kF,EAAez3G,UAAUy6G,wBAA0B,WAC/C,GAAK5wG,KAAKmuG,0BAAV,CAIA,IAAMkD,EAAerxG,KAAKguG,cAE1B,IAAK,IAAMh1D,KAAOh5C,KAAKouG,yBACnB,GAAKpuG,KAAKouG,yBAAyBh4G,eAAe4iD,GAAlD,CAIA,IAAMz7B,EAAMvd,KAAKouG,yBAAyBp1D,GAE1C,GAAiB,SAAbz7B,EAAI/L,MAAgC,UAAb+L,EAAI/L,KAA/B,CAIA,IAAM0gG,EAASlyG,KAAKmuG,0BAA0Bn1D,GAC1ChoB,EAAOhxB,KAAKoxG,mBAAmB7zF,EAAK,QAMxC,IAJKyT,GAAQ5wB,MAAMG,QAAQgd,EAAI40F,WAC3BnhF,EAAOnwB,OAAO0c,EAAI40F,QAAQ,KAGzBD,EAKL,GAAKlhF,EAAL,CAQA,IAAIylB,OAAU,EAEd,IACIA,EACM46D,EAAa9zF,EAAK,oBACb8zF,EAAa9zF,EAAK,oBAC/B,MAAOve,GAIL,OAHAkqB,EAAOnZ,KAAK,0DACZ+3B,cAAc9nC,KAAKwuG,uBAKvB,GAAI/3D,EAAY,CACZ,IAAInkB,OAAO,EAIPA,EADa,SAAb/U,EAAI/L,MACO6/F,EAAa9zF,EAAK,oBAIlBA,EAAI80F,aAUfrnF,EAAAA,EAAQ4X,SACR6T,EAAaA,EAAa,EAAI31C,KAAK8iB,IAAI,GAAI6yB,EAAa,IAAM,EAK9DA,GAA0B,MAGxBzlB,KAAQhxB,KAAKuuG,0BACfvuG,KAAKuuG,wBAAwBv9E,GAAQ,CACjCsB,QAAAA,EACA9uB,KAAM,KAGdxD,KAAKuuG,wBAAwBv9E,GAAMxtB,KAAK3F,KAAK44C,GAE7Cz2C,KAAK4qB,aAAa2C,KACdX,EAAAA,EACA5sB,KAAKgsB,eACLgF,EACAylB,EACAnkB,SA7DC7f,KAAK8K,MAAQA,EAAI41F,UAAa,KAC/BjqF,EAAOnZ,KAAK,kBANhBmZ,EAAOnZ,KAAP,GAAA1S,OAAe2zB,EAAf,yBA0FZ48E,EAAez3G,UAAU83G,6BAA+B,SAASv/E,GAkB7D,OAAO,SAACkN,EAAM9mC,GAAP,OAAgB8mC,EAdH,SAAS9mC,GACzB,IAAMgB,EAAM44B,EAAK55B,GAEjB,GAAIgB,EACA,OAAOA,EAIX,KAAA,iBAAAuH,OAAuBvI,EAAvB,sBAMwBq8G,CAAYr8G,MAU5C84G,EAAez3G,UAAUq+G,oBAAsB,SAASh6D,GACpD,IAAIhlD,EAAQglD,EAMZ,MAJqB,iBAAVhlD,IACPA,EAAQqL,OAAOrL,IAGf4M,MAAM5M,GACC,EAGJsL,KAAK6gC,IAAI,EAAGnsC,IAavBo4G,EAAez3G,UAAUs+G,kBAAoB,SAASl3F,EAAK20F,EAAQwC,GAC/D,IAAMC,EAAW30G,KAAKw0G,oBAAoBj3F,EAAIm3F,IACxCE,EAAc50G,KAAKw0G,oBAAoBtC,EAAOwC,IAC9CG,EAAiB/zG,KAAK6gC,IAAI,EAAGgzE,EAAWC,GAExC1B,EAAS31F,EAAI41F,UAAYjB,EAAOiB,UAClC2B,EAAc,EAOlB,OALI5B,EAAS,IAET4B,EAAch0G,KAAKssG,MAAwB,EAAjByH,EAAsB3B,IAG7C4B,GAMXlH,EAAez3G,UAAU26G,sBAAwB,WAAW,IAAA7iE,EAAAjuC,KACxD,GAAKA,KAAKsuG,oBAAV,CAIA,IAAM+C,EAAerxG,KAAKguG,cACpBsD,EAAgB,GAEtBtxG,KAAKquG,mBAAmBptG,QAAQ,SAAAsc,GAI5B,GAAiB,mBAAbA,EAAI/L,MACD+L,EAAIw3F,WACU,cAAdx3F,EAAIkgD,MAAuB,CAE9B,IAAMu3C,EAA2Bz3F,EAAIy3F,yBAC/BC,EAA2B13F,EAAI03F,0BAEjCD,GAA4BC,KAC5BhnE,EAAKwgE,gBAAgBtpE,UAAY,CAC7BqhD,SAAY1lF,KAAKssG,MAAM4H,EAA2B,KAClDxH,OAAU1sG,KAAKssG,MAAM6H,EAA2B,OAIxD,IAAMC,EACAjnE,EAAKogE,mBAAmBj5G,IAAImoB,EAAIs0F,mBAChCsD,EACAlnE,EAAKogE,mBAAmBj5G,IAAImoB,EAAIo0F,kBAKtC,GAAIuD,GAAuBC,EAAoB,CAG3C,IAAMC,EAAkB/D,EAAa6D,EAAqB,MACpDG,EAAahE,EAAa6D,EAAqB,QAC/Cx9E,EAAE,GAAAr6B,OAAM+3G,EAAN,KAAA/3G,OAAyBg4G,GAE3BC,EAAiBjE,EAAa8D,EAAoB,MAClDI,EAAYlE,EAAa8D,EAAoB,QAE7CK,EAAO,GAAAn4G,OAAMi4G,EAAN,KAAAj4G,OAAwBk4G,GAC/B/jG,EAAO6/F,EAAa6D,EAAqB,YAGzC1D,EAA2BvjE,EAAKwgE,gBAAgB5lF,UAEjD2oF,EAAyBh3B,KACtB,SAAA/kF,GAAC,OACGA,EAAEiiC,KAAOA,GACNjiC,EAAE+b,OAASA,GACX/b,EAAE87G,UAAYiE,KACzBhE,EAAyB3zG,KAAK,CAC1B65B,GAAAA,EACAlmB,KAAAA,EACAgkG,QAAAA,EACAlpD,IAAKre,EAAKjiB,eAAeonB,MACzBg9D,mBAAoB+E,EAAmBnD,cACvC7B,oBAAqB+E,EAAoBlD,cACzCyD,YAAaN,EAAmBM,YAChC51E,IAAgC,IAA3BtiB,EAAI2yF,6BASlB,GAAiB,gBAAb3yF,EAAI/L,MAAuC,iBAAb+L,EAAI/L,KAAyB,CAClE,IAAM0gG,EAASjkE,EAAKqgE,oBAAoBl5G,IAAImoB,EAAIte,IAC1C+xB,EAAOid,EAAKumE,oBAAoBj3F,EAAIyT,MAE1C,IAAKkhF,IAAWlhF,EACZ,OAGJ,IAAIshF,EAAYrkE,EAAK4gE,WAAWz5G,IAAI47B,GAE/BshF,IACDA,EAAY,IAAIjF,EAChBp/D,EAAK4gE,WAAWziF,IAAI4E,EAAMshF,IAG9B,IAAIC,GAAmB,EACnBz8G,EAAM,kBAEO,iBAAbynB,EAAI/L,OACJ+gG,GAAmB,EACnBz8G,EAAM,eAGV,IAAI08G,EAAaj1F,EAAIznB,KAEhB08G,GAAcA,EAAa,KAC5BA,EAAa,GAGjB,IAAMC,EAAgBxkE,EAAKumE,oBAAoBtC,EAAOp8G,IAChD48G,EAAc5xG,KAAK6gC,IAAI,EAAG6wE,EAAaC,GAEvCE,EACA1kE,EAAKumE,oBAAoBj3F,EAAIyxF,aAC7B4D,EACA3kE,EAAKumE,oBAAoBtC,EAAOlD,aAChC6D,EACA/xG,KAAK6gC,IAAI,EAAGgxE,EAAiBC,GAEnCN,EAAUjC,QAAQ,CACdyC,aAAcJ,EAAcG,EAC5B7D,YAAa6D,EACbN,iBAAAA,IAGa,gBAAbh1F,EAAI/L,KAEJ8gG,EAAU/B,WAAW,CACjB/pB,SAAYv4C,EAAKwmE,kBACDl3F,EAAK20F,EAAQ,iBAC7B1E,OAAU,KAQd8D,EAActgF,GAAQid,EAAKumE,oBAAoBj3F,EAAI28D,WACnDo4B,EAAU/B,WAAW,CACjB/pB,SAAY,EACZgnB,OAAUv/D,EAAKwmE,kBACHl3F,EAAK20F,EAAQ,gBAUjC,IAAM/C,EAAgB5xF,EAAI4xF,cAEtBA,GACAmD,EAAU7B,aAAa3vG,KAAKssG,MAAM+B,GAAiB,SAQpD,GAAiB,UAAb5xF,EAAI/L,KAAkB,CAE7B,IAAMkyB,EAAa,CACfjC,OAAQlkB,EAAIm4F,YACZ9xE,MAAOrmB,EAAIo4F,YAIX5wE,EAAYxnB,EAAIq4F,gBAEpB,IAAK7wE,EAAW,CAEZ,IAAMmtE,EAASjkE,EAAKqgE,oBAAoBl5G,IAAImoB,EAAIte,IAEhD,GAAIizG,EAAQ,CACR,IAAMgB,EAAS31F,EAAI41F,UAAYjB,EAAOiB,UAEtC,GAAID,EAAS,GAAK31F,EAAIs4F,WAIlB9wE,GAFMxnB,EAAIs4F,WAAa3D,EAAO2D,YAEW3C,EAAU,IAI3D,IAAKnuE,EACD,OAIR,IAAM+wE,EAAkBv4F,EAAIu4F,gBACtB9kF,EAAOid,EAAKjiB,eAAe+pF,iBAAiBD,GAC9CxD,EAAYrkE,EAAK4gE,WAAWz5G,IAAI47B,GAE/BshF,IACDA,EAAY,IAAIjF,EAChBp/D,EAAK4gE,WAAWziF,IAAI4E,EAAMshF,IAE9BA,EAAU7B,aAAa3vG,KAAKssG,MAAMroE,GAAa,IAE3CrB,EAAWjC,QAAUiC,EAAWE,MAChC0uE,EAAUhC,cAAc5sE,GAExB4uE,EAAUhC,cAAc,SAKpCtwG,KAAK4qB,aAAa2C,KACdX,EAAAA,EAAkC5sB,KAAKgsB,eAAgBslF,GAE3DtxG,KAAKszG,0BAMT1F,EAAez3G,UAAUw6G,2BAA6B,WAAW,IAAA9vC,EAAA7gE,KACxDA,KAAKmuG,2BAIVnuG,KAAKouG,yBAAyBntG,QAAQ,SAAAsc,GAClC,GAAiB,UAAbA,EAAI/L,KAAR,CAKA,IAAMilC,EAAal5B,EAAIk5B,WAEvB,GAAKA,EAAL,CAIA,IAAMq/D,EAAkBv4F,EAAIu4F,gBACtB9kF,EAAO6vC,EAAK70C,eAAe+pF,iBAAiBD,GAElD,GAAI9kF,EAAM,CACN,IAAMsB,EACAtB,IAAS6vC,EAAK70C,eAAe6rE,aAC/Bh3B,EAAK70C,eAAewpB,eAAe3I,EAAAA,IAEvCg0B,EAAKj2C,aAAa2C,KACdX,EAAAA,EACAi0C,EAAK70C,eACLgF,EACAylB,EACAnkB,2VC9xChB,IAAMpJ,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAKJmpE,aAiBjB,SAAAA,EAAYhkF,EAAKujC,EAAYujC,EAAawgC,EAAQxjB,EAAS14E,EAAQgzC,gGAAUrlB,CAAAznC,KAAA0yF,GACzE1yF,KAAKi2G,KAAOvnG,EACZ1O,KAAKk2G,IAAM1vG,EAAAA,QAAQsI,mBAAmBJ,GACtC1O,KAAKm2G,YAAclkE,EACnBjyC,KAAK4zF,aAAepe,EACpBx1E,KAAKgzF,eAAgB,EACrBhzF,KAAK6zF,QAAU,GACf7zF,KAAK2yF,MAAQ,OACb3yF,KAAK+6E,QAAUjhE,EACf9Z,KAAKo2G,QAAUJ,EACfh2G,KAAKq2G,SAAW7jB,EAChBxyF,KAAKs2G,kBAAoBngD,EAAAA,EAA4BjR,OACrDllD,KAAKu2G,YAAc,GACnBv2G,KAAKw2G,UAAY1pD,iEAUjB,OAAO9sD,KAAKm2G,gDAMJrhH,GACR,OAAOkL,KAAKu2G,YAAYzhH,yDAYxB,OACIkL,KAAKwuC,YAAYgsC,KACb,SAAAi8B,GAAU,OACNA,EAAW9gE,YAAc9I,EAAAA,GAClB4pE,EAAWC,oEASb58F,GACjB9Z,KAAKs2G,kBAAoBx8F,gDAWzB,OAAO9Z,KAAKs2G,sDASJxhH,EAAMU,GACd,IAAMmhH,EAAW32G,KAAKu2G,YAAYzhH,GAE9BU,IAAUmhH,IACV32G,KAAKu2G,YAAYzhH,GAAQU,EACzBwK,KAAKm2G,YAAYvrF,aAAa2C,KAC1BknB,EAAAA,6BACAz0C,KACAlL,EACA6hH,EACAnhH,wCASR,OAAOwK,KAAK6zF,QAAQl4F,qDAQHykC,GACjB,OAAOpgC,KAAKwuC,YAAYlV,OAAO,SAAAsT,GAAK,OAAIA,EAAM+I,YAAcvV,oCAO5D,OAAOpgC,KAAKk2G,qCAOZ,OAAOl2G,KAAKi2G,8CAOZ,OAAOj2G,KAAK4zF,kDAOZ,OAAO5zF,KAAKq2G,6CAOZ,OAAOr2G,KAAK+6E,8CAOZ,MAAsB,cAAf/6E,KAAK2yF,yCASZ,OAAO3yF,KAAKo2G,+CAOZ,OAAOp2G,KAAK42G,kBAAkB/pE,EAAAA,6CAchBzM,GACd,OAAOpgC,KAAKwuC,YAAY6lE,OACpB,SAACvjF,EAAO8b,GAAR,OACI9b,IAAU8b,EAAM+I,YAAcvV,GAAawM,EAAMuuB,aACrD,0CAOJ,OAAOn7D,KAAK42G,kBAAkB/pE,EAAAA,qCAO9B,OAAO7sC,KAAK2yF,6CAOZ,OAAO3yF,KAAKgzF,oDAQY,IAAAnrD,EAAA7nC,KAAhB+X,EAAgBna,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAN,IAClB,OAAOoC,KAAKm2G,YAAY1rF,KAAK4gC,KAAK0nC,YAAY/yF,KAAKi2G,KAAMl+F,GACpDyzB,MAAM,SAAA57B,GAGH,OAAIA,GAASA,EAAMynC,cAAgB/0C,OACxBulC,EAAKsuE,YAAY1rF,KAAK4gC,KAAK0nC,YAAYlrD,EAAKouE,KAAMl+F,IAG7DmR,EAAOnZ,KAAP,kCAAA1S,OAA8CwqC,EAAKouE,MAAQrmG,GAEpDw7B,QAAQE,OAAO17B,2CAU9B,OAAO5P,KAAK4yF,+GCtQpBv+F,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAkmE,IAAA,IAAAyqB,EAAAxiH,EAAA,IAAAyiH,EAAAziH,EAAA,IA2De,SAAS+3F,EAATzjD,GAYZ,IAEKouE,EAFLlvE,EAAA7nC,KAVCf,EAUD0pC,EAVC1pC,GACAguD,EASDtkB,EATCskB,SACAmB,EAQDzlB,EARCylB,iBAIA4oD,EAIDruE,EAJCquE,kBAGAC,EACDtuE,EADCsuE,aAEIC,GAAW,EAEXzsF,EAAO,IAAIggC,EAAAA,EAAKzqD,KAAKyd,WAAWhM,SAE9Bq+D,EAAU,IAAI1kC,QAAQ,SAACC,EAASC,GAIlCyrE,EAAgBzrE,EAGhB7gB,EAAKuoB,YACDzU,EAAAA,wBACA,WACI9T,OAAO9vB,IAEf8vB,EAAKuoB,YACDh8C,EAAAA,uBACA,WACQkgH,IAKJF,GAAqBA,IAGRvsF,EAAKgkC,WACd5mB,EAAKp2B,QAAQ3c,KACb+yC,EAAKp2B,QAAQlW,OACb6yD,GAGCo/B,UAAUryE,eACV+sB,KAAK,WACFzd,GAAQA,EAAKnR,aAET49F,IAOJrvE,EAAKtqC,KAAK05G,GAEV5rE,OAEHG,MAAM,SAAA3C,GAAwB,IAArBj5B,EAAqBi5B,EAArBj5B,MAAOP,EAAcw5B,EAAdx5B,QACbob,EAAKnR,aAELgyB,EAAO,CACH6rE,oBAAqBvnG,EACrBP,QAAAA,SAIpBob,EAAKuoB,YACD/7C,EAAAA,kBACA,SAACmgH,EAAiB/nG,EAAS28C,GACvB1gB,EAAO,CACH8rE,gBAAAA,EACAprD,YAAAA,EACA38C,QAAAA,IAEJob,OAAO9vB,IAGfu8G,GAAYzsF,EAAK7U,QAAQ3W,EAAIguD,KAgBjC,OANA6iB,EAAQgd,OAAS,WACboqB,GAAW,EACXH,EAAc,IACdtsF,GAAQA,EAAKnR,cAGVw2D,8qCCnJX,IAAM5mD,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAKnB8tF,cAKF,SAAAA,EAAY5sF,GAAM,IAAAod,EAAA,mGAAAJ,CAAAznC,KAAAq3G,IACdxvE,EAAAH,EAAA1nC,KAAA2nC,EAAA0vE,GAAA3iH,KAAAsL,QACKyqB,KAAOA,EACZod,EAAKyvE,MAAQ,GAHCzvE,wPALYwiB,EAAAA,yCAezB5sC,GACDy6D,EAAAvwC,EAAA0vE,EAAAlhH,WAAA,OAAA6J,MAAAtL,KAAAsL,KAAWyd,GAGXzd,KAAKyd,WAAWxF,WAAWjY,KAAKu3G,WAAWxhH,KAAKiK,MAAO,KACnD,WAAY,KAAM,KAAM,KAAM,MAClCA,KAAKyd,WAAWxF,WAAWjY,KAAKw3G,sBAAsBzhH,KAAKiK,MACvD,KAAM,WAAY,cAAe,MACrCA,KAAKyd,WAAWxF,WAAWjY,KAAKy3G,gBAAgB1hH,KAAKiK,MAAO,KACxD,WAAY,QAAS,MACzBA,KAAKyd,WAAWxF,WAAWjY,KAAK03G,UAAU3hH,KAAKiK,MAAO,KAClD,UAAW,KAAM,MACrBA,KAAKyd,WAAWxF,WAAWjY,KAAK23G,OAAO5hH,KAAKiK,MACxC,iCAAkC,KAAM,MAAO,KAAM,yCASlD0O,EAAKu+C,EAAUx7C,GACtB,IAAM8f,EAAU/qB,EAAAA,QAAQqI,kBAAkBH,GAE1C,GAAI1O,KAAKs3G,MAAM/lF,GAAU,CACrB,IAAMyT,EAAS,+BAGf,MADA9b,EAAOtZ,MAAMo1B,GACP,IAAI9mC,MAAM8mC,GAOpB,OALAhlC,KAAKs3G,MAAM/lF,GAAW,IAAIqmF,EAAAA,EAAS53G,KAAKyd,WAAY/O,EAChDu+C,EAAUjtD,KAAKyqB,KAAMhZ,GACzBzR,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAW70D,gBAAiByI,KAAKs3G,MAAM/lF,IAEpCvxB,KAAKs3G,MAAM/lF,mCAOd7iB,GACJ1O,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAW50D,kBAAmBwI,KAAKs3G,MAAM5oG,WACtC1O,KAAKs3G,MAAM5oG,sCAOX8K,GACP,IAAM5Y,EAAO4Y,EAAKpL,aAAa,QAG/B,GAAIoL,EAAKpL,aAAa,QAClB,OAAO,EAGX,IAAMiiD,EAAOrwD,KAAKs3G,MAAM9wG,EAAAA,QAAQqI,kBAAkBjO,IAElD,OAAKyvD,IAKD9U,EAAE/hC,GAAMogB,KAAK,sEACY58B,QACzBqzD,EAAKwnD,yBAGTxnD,EAAKknD,WAAW/9F,IAET,iDAOWA,GAClB,IAAM5Y,EAAO4Y,EAAKpL,aAAa,QACzBiiD,EAAOrwD,KAAKs3G,MAAM9wG,EAAAA,QAAQqI,kBAAkBjO,IAElD,OAAKyvD,IAILA,EAAKmnD,sBAAsBh+F,EAAM5Y,IAE1B,2CAOK4Y,GACZ,IAAM5Y,EAAO4Y,EAAKpL,aAAa,QACzBiiD,EAAOrwD,KAAKs3G,MAAM9wG,EAAAA,QAAQqI,kBAAkBjO,IAElD,OAAKyvD,IAILA,EAAKonD,gBAAgBj+F,EAAM5Y,IAEpB,qCAOD8O,GAEN,IAAM9O,EAAO8O,EAAItB,aAAa,QACxBiiD,EAAOrwD,KAAKs3G,MAAM9wG,EAAAA,QAAQqI,kBAAkBjO,IAElD,OAAKyvD,IAILA,EAAKqnD,UAAUhoG,EAAK9O,IAEb,kCAOJ6b,GACH,IAAM7b,EAAO6b,EAAGrO,aAAa,QACvBiiD,EAAOrwD,KAAKs3G,MAAM9wG,EAAAA,QAAQqI,kBAAkBjO,IAGlD,OAAKyvD,IAILA,EAAKsnD,OAAOl7F,IAEL,wCAQAyJ,EAAA,EAAA,SAASukC,GACpBjkD,EAAAA,QAAQ8J,oBAAoB,OAAQ,IAAI+mG,EAAoB5sD,+/BCzKhE,IAAMvhC,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAEZy1B,EAAS,CAClB84D,YADkB,SACNnrG,EAAY8qF,GACpB,IAD2B,IAAAsgB,EACP33G,MAAMQ,KAAK+L,EAAW8pE,UAA1CvvB,EAAA,EAAAA,EAAA6wD,EAAA/6G,OAAAkqD,IAAqD,CAOjD,IAPC,IAAM/2C,EAAK4nG,EAAA7wD,GACNt6C,EAAO,CACTxE,WAAY,GACZquE,SAAU,GACV3qE,QAASqE,EAAMrE,SAJ8BksG,EAO9B53G,MAAMQ,KAAKuP,EAAM/H,YAApCq/C,EAAA,EAAAA,EAAAuwD,EAAAh7G,OAAAyqD,IAAiD,CAA5C,IAAM16C,EAAIirG,EAAAvwD,GACX76C,EAAKxE,WAAW2E,EAAKjY,MAAQiY,EAAKvX,MAEtC,IAAM0X,EAAO1G,EAAAA,QAAQmH,QAAQwC,GAEzBjD,IAIAN,EAAKpX,MAAQgR,EAAAA,QAAQ2G,YAAYD,IAErCuqF,EAAM55F,KAAK+O,GACX5M,KAAK83G,YAAY3nG,EAAOvD,EAAK6pE,YAGrCwhC,YAxBkB,SAwBNxgB,EAAOygB,GACf,IAAK,IAAI3jH,EAAI,EAAGA,EAAIkjG,EAAMz6F,OAAQzI,IAAK,CACnC,IAAMqY,EAAO6qF,EAAMljG,GAEfqY,IACAsrG,EAAOtjH,EAAEgY,EAAKd,QAASc,EAAKxE,YACxBwE,EAAKpX,OACL0iH,EAAOziH,EAAEmX,EAAKpX,OAEdoX,EAAK6pE,UACLz2E,KAAKi4G,YAAYrrG,EAAK6pE,SAAUyhC,GAEpCA,EAAOxnG,SAcvB,SAASynG,EAA2B3+F,EAAM1L,GAGtC,IAFA,IAAMw+B,EAAM,GAEH/3C,EAAI,EAAGA,EAAIilB,EAAKxc,OAAQzI,IACzBilB,EAAKjlB,GAAGuX,UAAYgC,GACpBw+B,EAAIzuC,KAAK2b,EAAKjlB,IAItB,OAAO+3C,MAUUsrE,cAejB,SAAAA,EAAYn6F,EAAY/O,EAAKu+C,EAAUxC,EAAMh5C,GAAS,IAAAo2B,EAAA,mGAAAJ,CAAAznC,KAAA43G,IAClD/vE,EAAAH,EAAA1nC,KAAA2nC,EAAAiwE,GAAAljH,KAAAsL,QACKyqB,KAAOggC,EACZ5iB,EAAKpqB,WAAaA,EAClBoqB,EAAKwmB,QAAU7nD,EAAAA,QAAQqI,kBAAkBH,GACzCm5B,EAAKkoD,UAAYrhF,EACjBm5B,EAAKolB,SAAWA,EAChB/jC,EAAOpZ,KAAP,iBAAAzS,OAA6BwqC,EAAKkoD,YAClCloD,EAAKuwE,QAAU,GACfvwE,EAAK2vD,QAAU,GACf3vD,EAAKwwE,aAAe,GACpBxwE,EAAKykD,QAAS,EACdzkD,EAAKu4C,KAAO,KACZv4C,EAAKqzC,YAAc,KACnBrzC,EAAKywE,mBAAoB,EACzBzwE,EAAKp2B,QAAUA,GAAW,GAC1Bo2B,EAAK2lD,UACC,IAAI+qB,EAAAA,EAAU1wE,EAAKwmB,QAASxmB,EAAKpd,KAAMod,EAAKjd,aAAc,CACxDnN,WAAYoqB,EAAKpd,KAAKhZ,QACtBwgC,WAAYpK,EAAKp2B,UAEzBo2B,EAAK2wE,gBAAgB/mG,GACrBo2B,EAAK4wE,cAAgB,GACrB5wE,EAAK6wE,YAAc,KACnB7wE,EAAK8wE,SAAW,KAChB9wE,EAAK+iB,gBAAkB,GACvB/iB,EAAK+wE,4BAA8B,KAEnC/wE,EAAKgxE,QAAS,EACdhxE,EAAK0nD,oBAAsBupB,EAAAA,IA7BuBjxE,wPAfpBD,EAAAA,sDAoDJ,IAAdn2B,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACtBoC,KAAKw3F,QAAQj7E,GAAKvc,KAAK+vF,UACvB/vF,KAAKw3F,QAAQuhB,IAAM,iCACnB/4G,KAAKw3F,QAAQC,MAAQ,GAEjBhmF,EAAQ65E,eACRtrF,KAAKw3F,QAAQC,MAAM55F,KAAK,CACpBiO,QAAW,WACXtW,MAASq0B,EAAAA,EAASC,oBAO1B9pB,KAAKg5G,wBAAuB,GAExBvnG,EAAQm+C,gBAAkBn+C,EAAQm+C,eAAeq8B,YACjDjsF,KAAKw3F,QAAQC,MAAM55F,KAAK,CACpBiO,QAAW,SACX1D,WAAc,CACVnJ,GAAIwS,EAAQm+C,eAAeq8B,WAC3Bz7E,MAAO,8DAYlBy8C,GAAU,IAAAvhB,EAAA1rC,KAGX,OAFAA,KAAKitD,SAAWA,EAET,IAAI7hB,QAAQ,SAAAC,GACfK,EAAKj6B,QAAQwnG,cACN/vF,EAAOpZ,KAAK,8BAGb47B,EAAKj6B,QAAQwnG,aACT7tE,QAAQC,UACRK,EAAK8hD,UAAU0rB,2BAEjBhxE,KAAK,WACTwD,EAAK7zB,cAAa,GAClBwzB,6CASC8tE,GACT,IAAM58F,EAAKvc,KAAKw3F,QAAQj7E,GAExB,GAAKA,IAAQvc,KAAKssF,QAAW6sB,GAA7B,CAKA,IAAM3/F,EAAO5S,OAAAA,EAAAA,MAAAA,CAAM,CAAE2V,GAAAA,IAOjB48F,IACA3/F,EAAK5kB,EAAE,IAAK,CAAE4b,MAAOxQ,KAAKw3F,QAAQuhB,MAE9B/4G,KAAKitD,UACLzzC,EAAK5kB,EAAE,YAAYa,EAAEuK,KAAKitD,UAAUv8C,KAExC8I,EAAK9I,MAGTsuC,EAAOi5D,YAAYj4G,KAAKw3F,QAAQC,MAAOj+E,GACvCxZ,KAAKyd,WAAWjG,KAAKgC,GACjB2/F,GAKAn5G,KAAKyd,WAAW9F,2CASpBuR,EAAO1Z,IAAI,WAAYxP,KAAK+vF,WAC5B,IAAMv2E,EAAO5S,OAAAA,EAAAA,MAAAA,CAAM,CAAE2V,GAAIvc,KAAK+vF,UAC1Bv+E,KAAM,gBAEVxR,KAAKw3F,QAAQx6F,OAAS,EActBgD,KAAKyd,WAAW9F,QAChB3X,KAAKyd,WAAWjG,KAAKgC,GACrBxZ,KAAKyd,WAAW9F,gDAMJ,IAAAw1B,EAAAntC,KAGNo5G,EACA1yG,OAAAA,EAAAA,IAAAA,CAAI,CACF8K,KAAM,MACN+K,GAAIvc,KAAKquD,UAERz5D,EAAE,QAAS,CAAE4b,MAAOhK,EAAAA,QAAQS,GAAGO,aAExCxH,KAAKyd,WAAWnF,OAAO8gG,EAAS,SAAAnpG,GAC5B,IAAM4oG,EAGM,IAFNt9D,EAAEtrC,GAAQ2pB,KAAK,+CACZ58B,OAGL67G,IAAW1rE,EAAK0rE,SAChB1rE,EAAKviB,aAAa2C,KAAK6+B,EAAAA,EAAW1zD,iBAAkBmgH,GACpD1rE,EAAK0rE,OAASA,IAEnB,SAAAjpG,GACCq1B,EAAAA,EAAqBC,iBAAiBt1B,GACtCsZ,EAAOtZ,MAAM,4BAA6BA,sDAU9C,IAAMypG,EAAU3yG,OAAAA,EAAAA,IAAAA,CAAI,CAAE8K,KAAM,MACxB+K,GAAIvc,KAAKquD,UACRz5D,EAAE,QAAS,CAAE4b,MAAO,yCACpB5b,EAAE,IAAK,CAAE4b,MAAO,gBACbgB,KAAM,WAERoR,EAAO5iB,KAEbA,KAAKyd,WAAWnF,OAAO+gG,EAAS,SAAAC,GAC5B,IAAK/9D,EAAE+9D,GAAM1/E,KACL,qEACwC58B,OAAQ,CACpD,IAAMgoC,EAAS,oCAKf,OAHAC,EAAAA,EAAqBC,iBAAiB,IAAIhnC,MAAM8mC,SAChD9b,EAAOtZ,MAAMo1B,GAKjB,IAAMu0E,EAAa7yG,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIqG,EAAKyrC,QAC9B78C,KAAM,QACL5c,EAAE,QAAS,CAAE4b,MAAO,yCAEzB+oG,EAAW3kH,EAAE,IAAK,CAAE4b,MAAO,gBACvBgB,KAAM,WAEV+nG,EAAW3kH,EAAE,QAAS,CAAE4kH,IAAO,cAC1B5kH,EAAE,SACFa,EAAE,6CAA6Cib,KAAKA,KAEzD6oG,EAAW3kH,EAAE,QAAS,CAAE4kH,IAAO,yBAC1B5kH,EAAE,SAASa,EAAE,UAAUib,KAAKA,KAEjCkS,EAAKnF,WAAWnF,OAAOihG,IAExB,SAAA3pG,GACCq1B,EAAAA,EAAqBC,iBAAiBt1B,GACtCsZ,EAAOtZ,MAAM,0CAA2CA,wCAQrD4J,GACP,IAAM5Y,EAAO4Y,EAAKpL,aAAa,QACzBqrG,EAAS,GACTC,EAAWlgG,EAAKkB,qBAAqB,UAAU,GAEjDg/F,IACAD,EAAO3/F,OAAS4/F,EAASv5F,aAAe,IAE5C,IAAIw5F,GAAkB,EAClBC,GAAmB,EACjBC,EACArgG,EAAKwB,uBACH,sCAAuC,KAAK,GAC9C8+F,EACAD,GAAYA,EAASn/F,qBAAqB,QAAQ,GAExD++F,EAAOM,YACDD,GAAeA,EAAY1rG,aAAa,eAC9CqrG,EAAOr5B,KAAO05B,GAAeA,EAAY1rG,aAAa,QAGtD,IAAMM,EAAMorG,GAAeA,EAAY1rG,aAAa,OAEpDqrG,EAAO/qG,IAAMA,EACb+qG,EAAO7kB,QACDlmF,GAA+D,IAAxDA,EAAIpQ,QAAJ,GAAAjB,OAAe2C,KAAKwtF,UAAUwsB,kBAA9B,MACbP,EAAOQ,eACDvrG,GAAOA,EAAIpQ,QAAQ,KAAO,GACrB0B,KAAKyR,QAAQw/E,eACRviF,EAAInQ,UAAUmQ,EAAIpQ,QAAQ,KAAO,EAAGoQ,EAAIpQ,QAAQ,MAEhE0B,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWlzD,kBAAmB,CACjDghH,iBAAkBT,EAAOQ,eACzB5+C,SAAU7hD,IAGd,IAAM2gG,EAAM3gG,EAAK0G,cAAc,KAE3Bi6F,GACAA,EAAIj3C,SAGR,IAAMu0B,EAAQ,GAEdz4C,EAAO84D,YAAYt+F,EAAMi+E,GACzBz3F,KAAKy4G,cAAc73G,GAAQ62F,EA4B3B,IAxBA,IAAM2iB,EAA6B,SAAAxtG,GAC/B,IAAMkgD,EAAW,GACXutD,EAAWztG,EAAK6pE,SAAS78C,KAAK,SAAAhlC,GAAC,MAAkB,SAAdA,EAAEkX,UAE3C,GAAIuuG,EAAU,CACVvtD,EAASj7C,KAAO,GAChB,IAFU,IAAAyoG,EAEQ,CAAE,KAAM,OAAQ,UAFxB1hE,EAAA,WAEL,IAAM1vC,EAAGoxG,EAAAC,GACJpqG,EACAkqG,EAAS5jC,SAAS78C,KAAK,SAAAhlC,GAAC,OAAIA,EAAEkX,UAAY5C,IAE5CiH,IACA28C,EAASj7C,KAAK3I,GAAOiH,EAAM3a,QALnC+kH,EAAA,EAAAA,EAAAD,EAAAt9G,OAAAu9G,IAA8C3hE,IASlD,IAAMqJ,EAAYr1C,EAAK6pE,SAAS78C,KAAK,SAAAhlC,GAAC,MAAkB,UAAdA,EAAEkX,UAM5C,OAJIm2C,IACA6K,EAASjzB,MAAQooB,EAAUzsD,OAGxBs3D,GAGFv4D,EAAI,EAAGA,EAAIkjG,EAAMz6F,OAAQzI,IAAK,CACnC,IAAMqY,EAAO6qF,EAAMljG,GAEnB,OAAQqY,EAAKd,SACb,IAAK,MAAO,IACA1D,EAAewE,EAAfxE,WAER,IAAKA,EACD,MAJI,IAMAoJ,EAASpJ,EAAToJ,KAERioG,EAAOhnB,QAAUjhF,EACjB,MAEJ,IAAK,OACDioG,EAAOlnB,KAAO3lF,EAAKpX,MACnB,MACJ,IAAK,SACDikH,EAAOx6G,GAAK2N,EAAKpX,MACjB,MACJ,IAAK,WACDikH,EAAOjnB,QAAU5lF,EAAKpX,MACtB,MACJ,IAAK,WACDikH,EAAO3sD,SAAWstD,EAA2BxtG,GAC7C,MACJ,IAAK,OAAQ,IACDxE,EAAewE,EAAfxE,WAER,IAAKA,EACD,MAIS,YAFIA,EAATtT,OAGJ2kH,EAAOv1F,QAAU9b,EAAW5S,QAOxC,GAAIoL,IAASZ,KAAK+vF,UAAW,CACzB,IAAMyqB,EACuB,UAAvBf,EAAOM,YAA0BN,EAAOr5B,KAAO,OAQrD,GANIpgF,KAAKogF,OAASo6B,IACdx6G,KAAKogF,KAAOo6B,EACZx6G,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAWp0D,mBACXgI,KAAKogF,QAERpgF,KAAKssF,OAAQ,CACdtsF,KAAKssF,QAAS,EACd,IAAM/uE,EAAMvd,KAAK4qD,gBAAgB,cAC3Bz2D,OAAO83D,YAAY1uC,MAEzB2L,EAAO1Z,IAAI,uBAAwB+N,GAG/Bvd,KAAKitD,WACLjtD,KAAK64G,QAAS,GAKlB74G,KAAK6X,eAEL7X,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAW/zD,kBAEnC,QAA2BsC,IAAvBqF,KAAKo4G,QAAQx3G,GAEpBZ,KAAKo4G,QAAQx3G,GAAQ64G,EACrBvwF,EAAO1Z,IAAI,UAAW5O,EAAM64G,GAC5BE,OAAoCh/G,IAAlB8+G,EAAO3/F,OACzB8/F,OAAsCj/G,IAAnB8+G,EAAOv1F,QACtBu1F,EAAO7kB,QACP50F,KAAKy6G,WAAW75G,EAAM8N,IAKtB1O,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAW9zD,kBACXsI,EACA64G,EAAOlnB,KACPknB,EAAOr5B,KACPq5B,EAAOQ,eACPR,EAAOjnB,QACPinB,EAAO3/F,OACP2/F,EAAO3sD,SACP2sD,EAAOhnB,SAIXknB,GAAkB,OAEnB,CAGH,IAAMe,EAAe16G,KAAKo4G,QAAQx3G,GAE9B85G,EAAat6B,OAASq5B,EAAOr5B,OAC7Bs6B,EAAat6B,KAAOq5B,EAAOr5B,KAC3BpgF,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAW3zD,iBAAkBmI,EAAM64G,EAAOr5B,OAI9Cs6B,EAAajoB,UAAYgnB,EAAOhnB,UAChCioB,EAAajoB,QAAUgnB,EAAOhnB,QAC9BzyF,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAWj0D,4BACXyI,EACA64G,EAAOhnB,UAGXgnB,EAAO7kB,UAWP8lB,EAAa9lB,SAAU,EACvB50F,KAAKy6G,WAAW75G,EAAM8N,IAItB+qG,EAAOjkC,cACPklC,EAAallC,YAAcikC,EAAOjkC,aAIlCklC,EAAa5gG,SAAW2/F,EAAO3/F,SAC/B6/F,GAAkB,EAClBe,EAAa5gG,OAAS2/F,EAAO3/F,QAG7B4gG,EAAax2F,UAAYu1F,EAAOv1F,UAChC01F,GAAmB,EACnBc,EAAax2F,QAAUu1F,EAAOv1F,SAMtC,IAAK,IAAI3vB,EAAI,EAAGA,EAAIkjG,EAAMz6F,OAAQzI,IAAK,CACnC,IAAMqY,EAAO6qF,EAAMljG,GAEnB,OAAQqY,EAAKd,SACb,IAAK,OACD,IAAK2tG,EAAO7kB,QAAS,CACjB,IAAMpf,EACAx1E,KAAKyqB,KAAKhZ,QAAQkpG,YACdn0G,EAAAA,QAAQsI,mBAAmBlO,GAC3B64G,EAAOlnB,KAEjBvyF,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAW90D,qBACXsJ,EACA40E,GAER,MACJ,IAAK,qBACGikC,EAAO7kB,UAAY50F,KAAKs4G,oBACxBt4G,KAAKs4G,mBAAoB,EACzBt4G,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAW11D,cAEtC,MACJ,IAAK,wBACD,GAAI+iH,EAAO7kB,QAAS,CAGhB,IAFA,IAAMx/D,EAAa,GAEV14B,EAAI,EAAGA,EAAIkQ,EAAK6pE,SAASz5E,OAAQN,IAAK,CAAA,IACnC0L,EAAewE,EAAK6pE,SAAS/5E,GAA7B0L,WAEJA,GAAcA,EAAWtS,MACzBs/B,EAAWhtB,EAAWtS,KAAOsS,EAAW5S,OAIhDwK,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAWr1D,8BAA+Bq+B,GAElD,MACJ,IAAK,uBAAwB,IACjBhtB,EAAewE,EAAfxE,WAER,IAAKA,EACD,MAJqB,IAOjB0R,EAAW1R,EAAX0R,OAEJA,GAAUA,IAAW9Z,KAAKuvF,sBAC1BvvF,KAAKuvF,oBAAsBz1E,EAC3B9Z,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAW/xD,6BACXyf,IAKR,MAEJ,IAAK,eACD,IAAM8gG,EAAMhuG,EAAKxE,WAEjB,IAAKwyG,EACD,MAEJ56G,KAAK04G,YAAckC,EAAIC,OAAS,KAChC76G,KAAK24G,SAAWiC,EAAIE,KAAO,KAC3B96G,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWnzD,sBAClC,MAEJ,QACI+G,KAAK+6G,YAAYnuG,EAAMhM,IAK3B+4G,GACA35G,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAWjzD,gBACXyH,EACA64G,EAAO3/F,QAGX8/F,GACA1wF,EAAOpZ,KAAP,wBAAAzS,OAAoCqR,EAApC,MAAArR,OAA4Co8G,EAAOv1F,6CAShDtjB,EAAMq3F,GACbj4F,KAAKk7E,YAAct6E,EAEnBsoB,EAAOpZ,KAAP,iBAAAzS,OAA6BuD,EAA7B,gBAAAvD,OAAgD46F,2DAOrBvrE,GAC3B1sB,KAAK44G,4BAA8BlsF,sCAQ3B9f,EAAMhM,GAGd,IACI,IAAIo6G,EAAch7G,KAAKq4G,aAAazrG,EAAKd,SAErCc,EAAKd,QAAQgvB,WAAW,wBACxBkgF,EAAc,CAAEh7G,KAAK44G,8BAGrBoC,GACAA,EAAY/5G,QAAQ,SAAAkO,GAChBA,EAAQvC,EAAMpG,EAAAA,QAAQsI,mBAAmBlO,GAAOA,KAG1D,MAAO5B,GACLimC,EAAAA,EAAqBC,iBAAiBlmC,GACtCkqB,EAAOtZ,MAAP,oBAAAvS,OAAiCuP,EAAKd,QAAtC,UAAuD9M,wCAUnDqQ,EAASi/E,EAAa2sB,GAC9B,IAAMvrG,EAAM/I,OAAAA,EAAAA,KAAAA,CAAK,CAAE4V,GAAIvc,KAAKquD,QACxB78C,KAAM,cAKU,SAAhB88E,EACA5+E,EAAI9a,EAAE05F,EAAaj/E,GAASqB,KAE5BhB,EAAI9a,EAAE05F,EAAa,CAAE99E,MAAO,4BAA8BnB,GACrDqB,KAELuqG,GACAvrG,EAAI9a,EAAE,OAAQ,CAAE4b,MAAO,oCAClB/a,EAAEwlH,GACFvqG,KACAA,KAET1Q,KAAKyd,WAAWjG,KAAK9H,GACrB1P,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWtyD,qBAAsBuV,8CAWzCpQ,EAAIoQ,EAASi/E,EAAa2sB,GACzC,IAAMvrG,EAAM/I,OAAAA,EAAAA,KAAAA,CAAK,CAAE4V,GAAE,GAAAlf,OAAK2C,KAAKquD,QAAV,KAAAhxD,OAAqB4B,GACtCuS,KAAM,SAKU,SAAhB88E,EACA5+E,EAAI9a,EAAE05F,EAAaj/E,GAASqB,KAE5BhB,EAAI9a,EAAE05F,EAAa,CAAE99E,MAAO,4BAA8BnB,GACrDqB,KAELuqG,GACAvrG,EAAI9a,EAAE,OAAQ,CAAE4b,MAAO,oCAClB/a,EAAEwlH,GACFvqG,KACAA,KAGT1Q,KAAKyd,WAAWjG,KAAK9H,GACrB1P,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAWryD,6BAA8BsV,sCAQtC2/E,GACP,IAAMt/E,EAAM/I,OAAAA,EAAAA,KAAAA,CAAK,CAAE4V,GAAIvc,KAAKquD,QACxB78C,KAAM,cAEV9B,EAAI9a,EAAE,UAAWo6F,GACjBhvF,KAAKyd,WAAWjG,KAAK9H,6CASPhB,EAAKwsG,UACZl7G,KAAKy4G,cAAc/pG,GAEtBwsG,IAIJl7G,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAW7zD,gBAAiBmW,GAEnD1O,KAAKwtF,UAAU2tB,gBAAgBzsG,kDAQb8K,EAAM5Y,GAAM,IAAAqtC,EAAAjuC,KAE9B,GAAIu7C,EAAE/hC,GAAMogB,KAAK,8CAA8C58B,OAC3D,OAAO,EAIX,GAAIu+C,EAAE/hC,GAAMogB,KAAK,2DACC58B,OAAQ,CACtB,IAAIuc,EACE6hG,EACA7/D,EAAE/hC,GAAMogB,KACN,kEAUR,OAPIwhF,EAAap+G,SACbuc,EAAS6hG,EAAaluG,QAG1BlN,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWh0D,cAAemhB,GACjDvZ,KAAKyd,WAAW+wC,KAAK6sD,QAAQr7G,KAAKquD,UAE3B,EAIX,IAAMilC,EACA/3C,EAAE/hC,GACCogB,KACG,sEAEH58B,OACHs+G,EACA//D,EAAE/hC,GACCogB,KACG,sEAEH58B,OACHu+G,EAActmH,OAAOy5B,KAAK1uB,KAAKo4G,SAErC,GAAIkD,EAAQ,CACR,IAIIE,EAJEC,EACAlgE,EAAE/hC,GACHogB,KAAK,8DAIN6hF,EAAYz+G,SACZw+G,EAAYC,EAAY1uG,KAAK,SAK7BwuG,EAAY3hF,KAAK,SAAAlrB,GAAG,OAAIlI,EAAAA,QAAQsI,mBAAmBJ,KAAS8sG,KAI5Dx7G,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAWr0D,OACXu7F,EACAkoB,EACAh1G,EAAAA,QAAQsI,mBAAmBlO,IAIlC0yF,EAGMioB,EAAYv+G,OAAS,IAI5Bu+G,EAAYt6G,QAAQ,SAAAyN,GAChB,IAAM+qG,EAASxrE,EAAKmqE,QAAQ1pG,UAErBu/B,EAAKmqE,QAAQ1pG,GACpBu/B,EAAKytE,kBAAkBhtG,EAAK+qG,EAAO7kB,WAEvC50F,KAAKyd,WAAW+wC,KAAK6sD,QAAQr7G,KAAKquD,SAI7BitD,GACDt7G,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAW5zD,mBAjB/BwH,KAAKo4G,QAAQx3G,GACpBZ,KAAK07G,kBAAkB96G,GAAM,sCA0B3B8O,EAAK9O,GACX,IAAM2xF,EACAh3C,EAAE7rC,GAAKkqB,KAAK,kDACT1sB,QACF1G,EAAAA,QAAQsI,mBAAmBlO,GAE5BymG,EAAM9rD,EAAE7rC,GAAKkqB,KAAK,SAAS1sB,OAC3BsE,EAAO9B,EAAItB,aAAa,QAE9B,GAAa,UAAToD,EAIA,OAHAxR,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWt1D,oBAC9BykD,EAAE7rC,GAAKkqB,KAAK,SAAS1sB,OAAQm6F,IAE1B,EAGX,IAAMrY,EAAUzzC,EAAE7rC,GAAKkqB,KAAK,YAE5B,GAAIo1D,EAAQhyF,OAAQ,CAChB,IAAM2+G,EAAc3sB,EAAQ9hF,QAExByuG,GAA+B,KAAhBA,KACf37G,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWjyD,gBAAiBwhH,GACnDzyF,EAAO1Z,IAAP,yBAAAnS,OAAoCs+G,KAK5C,IAAIC,EAAQrgE,EAAE7rC,GAAKkqB,KAAK,UAAU7sB,KAAK,SAEvC,IAAK6uG,IAEDA,EAAQrgE,EAAE7rC,GAAKkqB,KAAK,6BAA6B7sB,KAAK,UAE3C,CAEP,IAAM8uG,EACAD,EAAM/+F,MAAM,2CAElB++F,EAAK,GAAAv+G,OAAMw+G,EAAU,GAAhB,KAAAx+G,OAAsBw+G,EAAU,GAAhC,KAAAx+G,OAAsCw+G,EAAU,GAAhD,KAITj7G,IAASZ,KAAKquD,SACP9S,EAAE7rC,GACAkqB,KACG,sEAEH58B,QACTgD,KAAK87G,gBAET,IAAMtrD,EAAcjV,EAAE7rC,GAAKkqB,KAAK,iBAAiB1sB,OAC3CujD,EAAazwD,KAAKyqB,KAAKimC,sBAAsBF,GAK/CC,QAAwB91D,IAAVihH,EACd57G,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAW1xD,sBAC9BkG,EAAM6vD,GAKV42C,IACa,SAAT71F,EACAxR,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWl0D,yBAC1B0I,EAAM2xF,EAAM8U,EAAKrnG,KAAK+vF,UAAW6rB,GACzB,cAATpqG,GACPxR,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWn0D,iBAC1B2I,EAAM2xF,EAAM8U,EAAKrnG,KAAK+vF,UAAW6rB,4CAUrCpiG,EAAM5Y,GAClB,GAAI26C,EAAE/hC,GACGogB,KACG,mFAGH58B,OACLksB,EAAO1Z,IAAI,uBAAwB5O,GACnCZ,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWrzD,wBAC/B,GAAIwiD,EAAE/hC,GACJogB,KACG,kFAGH58B,OAAQ,CACIwJ,EAAAA,QAAQmI,iBAAiB6K,EAAKpL,aAAa,SAE3CpO,KAAKyqB,KAAKhZ,QAAQu8C,MAAMC,gBAKrCjuD,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWxyD,kBAGlCsvB,EAAOnZ,KAAK,eAAgByJ,GAC5BxZ,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAWzyD,sCAEZ4hD,EAAE/hC,GAAMogB,KAAK,8BAA8B58B,QAClDksB,EAAOnZ,KAAK,oDACRyJ,GACJxZ,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWvyD,wBAElCqvB,EAAOnZ,KAAK,eAAgByJ,GAC5BxZ,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAW1yD,kDAQrCgV,GACD,IAAMqtG,EAASr1G,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIvc,KAAKquD,QAC1B78C,KAAM,QACL5c,EAAE,QAAS,CAAE4b,MAAO,yCACpB5b,EAAE,OAAQ,CAAE29F,KAAM/rF,EAAAA,QAAQsI,mBAAmBJ,GAC1C0xE,KAAM,SACTxrF,EAAE,UAAUa,EAAE,yBAAyBib,KAAKA,KAAKA,KAEtD1Q,KAAKyd,WAAWnF,OACZyjG,EACA,SAAA9rG,GAAM,OAAIiZ,EAAO1Z,IAAI,8BAA+Bd,EAAKuB,IACzD,SAAAL,GAAK,OAAIsZ,EAAO1Z,IAAI,2BAA4BI,sCAY/C9Z,EAAKgnB,EAAWk/F,EAASC,GAAgB,IAAAp7C,EAAA7gE,KAE9CA,KAAKyd,WAAWnF,OACZ5R,OAAAA,EAAAA,IAAAA,CAAI,CACA6V,GAAIvc,KAAKquD,QACT78C,KAAM,QAEL5c,EAAE,QAAS,CAAE4b,MAAO,yCACzB,SAAA87B,GACI,GAAIiP,EAAEjP,GACG1S,KACG,0EAEH58B,OAAQ,CACb,IAAMk/G,EACAx1G,OAAAA,EAAAA,IAAAA,CAAI,CACF6V,GAAIskD,EAAKxS,QACT78C,KAAM,QAEL5c,EAAE,QAAS,CACR4b,MAAO,yCAGnB0rG,EAAWtnH,EAAE,IAAK,CACd4b,MAAO,gBACPgB,KAAM,WAEV0qG,EACKtnH,EAAE,QAAS,CAAE4kH,IAAO,cACpB5kH,EAAE,SACFa,EAAE,6CACFib,KACAA,KACLwrG,EACKtnH,EAAE,QAAS,CAAE4kH,IAAO,8BACpB5kH,EAAE,SACFa,EAAEK,GACF4a,KACAA,KAILwrG,EACKtnH,EAAE,QAAS,CAAE4kH,IAAO,yBACpB5kH,EAAE,SACFa,EAAE,UACFib,KACAA,KAGLmwD,EAAKpjD,WAAWnF,OAAO4jG,EAAYp/F,EAAWk/F,QAE9CC,KAGRD,yCAUMlmH,EAAK+3B,GACfA,EAAO/hB,QAAUhW,EACjBkK,KAAK8uF,mBAAmBh5F,GACxBkK,KAAKw3F,QAAQC,MAAM55F,KAAKgwB,2CASZ/3B,GACZ,OAAOkK,KAAKw3F,QAAQC,MAAM79D,KAAK,SAAAhtB,GAAI,OAAI9W,IAAQ8W,EAAKd,qDAOrChW,GACf,IAAM2hG,EAAQz3F,KAAKw3F,QAAQC,MAAMn+D,OAAO,SAAA1sB,GAAI,OAAI9W,IAAQ8W,EAAKd,UAE7D9L,KAAKw3F,QAAQC,MAAQA,8CAQL3iG,EAAMqa,GACtB,GAAuB,mBAAZA,EACP,MAAM,IAAIjR,MAAM,+BAEpB,IAAI88G,EAAch7G,KAAKq4G,aAAavjH,GAE/BkmH,IACDh7G,KAAKq4G,aAAavjH,GAAQkmH,EAAc,KAEN,IAAlCA,EAAY18G,QAAQ6Q,GACpB6rG,EAAYn9G,KAAKsR,GAEjB+Z,EAAOnZ,KAAP,sDAAA1S,OAC0DvI,mDAS3CA,EAAMqa,GACzB,IAAM6rG,EAAch7G,KAAKq4G,aAAavjH,GAChCqnH,EAAanB,EAAcA,EAAY18G,QAAQ6Q,IAAY,GAG7C,IAAhBgtG,EACAnB,EAAY19G,OAAO6+G,EAAY,GAE/BjzF,EAAOnZ,KAAP,gBAAA1S,OAA4BvI,EAA5B,wDAYAmjG,GACJ,IAAMwhB,EAASz5G,KAAKo4G,QAAQngB,GAE5B,OAAIwhB,EACOA,EAAO7kB,QAGX,2CAOP,MAAqB,cAAd50F,KAAKogF,2CAOF2a,GACV,OAAI/6F,KAAKo4G,QAAQrd,GACN/6F,KAAKo4G,QAAQrd,GAAS3a,KAG1B,0CAQEnqC,EAAM72C,GACfY,KAAKo8G,sBAAsBnmE,GACvB72C,GACAA,EAAS62C,wCASJA,EAAM72C,GACf,OAAOY,KAAKq8G,sBAAsBpmE,EAAM72C,kDAOrB62C,GACnBj2C,KAAK8uF,mBAAmB,cACxB9uF,KAAK2uF,cACD,aACA,CACIvmF,WAAY,CAAEoI,MAAS,kCACvBhb,MAAOygD,EAAKx1C,2DASFw1C,EAAM72C,GACxBY,KAAKs8G,uBAAuBrmE,GACxBj2C,KAAKyd,YACLzd,KAAK6X,eAELzY,GACAA,mDAQe62C,GACnBj2C,KAAK8uF,mBAAmB,cACxB9uF,KAAK2uF,cACD,aACA,CACIvmF,WAAY,CAAEoI,MAAS,kCACvBhb,MAAOygD,EAAKx1C,2DAQFw1C,GAClBj2C,KAAKg5G,uBAAuB/iE,GACvBj2C,KAAKyd,YAGVzd,KAAK6X,4DAcY8gD,EAAYv4B,GAE7B,IAAM5mB,EAAOxZ,KAAKy4G,cAAL,GAAAp7G,OAAsB2C,KAAKquD,QAA3B,KAAAhxD,OAAsCs7D,IAEnD,IAAKn/C,EAED,OAAO,KAEX,IAAMhW,EAAO,CACTstB,OAAO,EACPgc,eAAWnyC,GAEX4hH,EAAY,KAEhB,GAAIn8E,IAAcyM,EAAAA,EACd0vE,EAAYpE,EAA2B3+F,EAAM,kBAC1C,CAAA,GAAI4mB,IAAcyM,EAAAA,EAUrB,OAFA3jB,EAAOtZ,MAAP,2BAAAvS,OAAwC+iC,IAEjC,KATPm8E,EAAYpE,EAA2B3+F,EAAM,cAC7C,IAAMgjG,EAAgBrE,EAA2B3+F,EAAM,aAEnDgjG,EAAcx/G,OAAS,IACvBwG,EAAKspC,UAAY0vE,EAAc,GAAGhnH,OAU1C,OAFAgO,EAAKstB,MAAQyrF,EAAUv/G,OAAS,GAA4B,SAAvBu/G,EAAU,GAAG/mH,MAE3CgO,kDAOP,QAAIxD,KAAKwtF,WACExtF,KAAKwtF,UAAUivB,mDAUzBxhE,GACD,OAAOj7C,KAAKyd,WAAWquC,KAAK8C,KAAK3T,EAAQ,aACrCz0C,EAAAA,QAAQqI,kBAAkB7O,KAAK+vF,WAAY/vF,KAAKitD,SAChDjtD,KAAKk7E,8CAOT,OAAOl7E,KAAKyd,WAAWquC,KAAKyqC,kDAO5B,OAAOv2F,KAAK04G,kDAOZ,OAAO14G,KAAK24G,iDAQAjqG,EAAKunC,GACjB/sB,EAAOpZ,KAAK,WAAYmmC,GACxB,IAAMymE,EAAYh2G,OAAAA,EAAAA,IAAAA,CACd,CAAE6V,GAAIvc,KAAKk7E,YACP1pE,KAAM,QACT5c,EAAE,OAAQ,CACP4b,MAAO,iCACP9B,IAAAA,IAEHjZ,EAAEwgD,EAAKx1C,YACPiQ,KAEL1Q,KAAKyd,WAAWnF,OACZokG,EACA,SAAAzsG,GAAM,OAAIiZ,EAAO1Z,IAAI,WAAYS,IACjC,SAAAL,GAAK,OAAIsZ,EAAO1Z,IAAI,iBAAkBI,oCAOvC6M,GAGH,GAFaA,EAAGrO,aAAa,UAEhBpO,KAAKk7E,YAAlB,CAKA,IAAMjlC,EAAOsF,EAAE9+B,GAAImd,KAAK,QAEpBqc,EAAKj5C,QAA0B,SAAhBi5C,EAAK/oC,OACpBlN,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAW51D,qBAAsBy/C,EAAKlpC,KAAK,UAKlEmc,EAAOnZ,KAAK,2FAZZmZ,EAAOnZ,KAAK,oEAuBZ,IAAAqxD,EAAAphE,KACJ,OAAO,IAAIorC,QAAQ,SAACC,EAASC,GACzB,IAAMvzB,EAAUnY,WAAW,WAAA,OAAM+8G,GAAU,IAAO,KAC5C/xF,EAAew2C,EAAKx2C,aAM1B,SAAS+xF,IAA4B,IAAlBC,EAAkBh/G,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,IAAAA,UAAA,GACjCgtB,EAAakC,eAAes/B,EAAAA,EAAW5zD,SAAUmkH,GACjD/kG,aAAaG,GACT6kG,EAEAtxE,EAAO,IAAIptC,MAAM,qEAGjBmtC,IAGRzgB,EAAa+B,GAAGy/B,EAAAA,EAAW5zD,SAAUmkH,GACrCv7C,EAAKi6C,0HC95CjB,SAAA9xF,GAAAl1B,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAqyF,IAAA,IAAA/S,EAAAnxG,EAAA,GAAAwoH,EAAAxoH,EAAA,GAAAyoH,EAAAzoH,EAAA,IAEM60B,EAASnuB,EAAQ,GAAqBiuB,UAAUO,GAIhD6iC,EAAarxD,EAAQ,GACrBqsG,EACArsG,EAAQ,IACRkqC,EAAuBlqC,EAAQ,IASrC,SAASgiH,EAAsBC,GAC3B,IAAIC,EAAQ,EAEZ,OAAO,SAAStqG,GAEZ,IAAIA,EAAJ,CAOA,IAAMoF,EAAUjX,KAAK8iB,IAAI,EAAGq5F,EAAQ,GAIpC,OAFAA,GAAS,EAEFllG,EAAUilG,EAVbC,EAAQ,GAuBL,SAAS1E,EAAUnoF,EAAU3F,EAAM05B,EAAS1yC,GA0BvD,SAASib,EAASwI,GACd,GAAIA,EAAM1xB,MAAQ0xB,EAAM1xB,KAAKq9C,UAAW,CACpC,GAAI3rB,EAAMgoF,SAAW/oH,OAAO4vB,SAASm5F,OAKjC,YAJAh0F,EAAOnZ,KAAP,6CAAA1S,OAEQ63B,EAAMgoF,SAIlBrzF,EAAAA,EAASg3B,UAAY3rB,EAAM1xB,KAAKq9C,WAlCxC7gD,KAAKowB,SAAWA,EAChBpwB,KAAKm9G,YAAc1yF,EACnBzqB,KAAKo9G,eAAiBL,EAAsB,KAC5C/8G,KAAKq9G,oBAAsBN,EAAsB,KAGjD/8G,KAAKs9G,qBAAsB,EAC3Bt9G,KAAKyR,QAAUA,EAKfzR,KAAKu9G,kBACCv9G,KAAKyR,QAAQgM,WAAWuwC,YAC4BrzD,IAA/CqF,KAAKyR,QAAQgM,WAAWuwC,MAAMwvD,aAEzCx9G,KAAK4qB,aAAeu5B,EAEpBnkD,KAAKyd,WAAazd,KAAKm9G,YAAY1/F,WAuB/BtpB,OAAOo2C,iBACPp2C,OAAOo2C,iBAAiB,UAAW7d,GAAU,GAE7Cv4B,OAAOspH,YAAY,YAAa/wF,GAMxC6rF,EAAUpiH,UAAUo3F,sBAAwB,WACxC,OAAOvtF,KAAKs9G,qBAGhB/E,EAAUpiH,UAAUsmH,oBAAsB,WACtC,OAAOz8G,KAAKu9G,mBAGhBhF,EAAUpiH,UAAUglH,gBAAkB,SAASzsG,GAC3Cwa,EAAOpZ,KAAP,8BAAAzS,OAA0CqR,IAGzB,UAFAlI,EAAAA,QAAQsI,mBAAmBJ,KAGxCwa,EAAOpZ,KACH,gDACJ9P,KAAK4qB,aAAa2C,KAAK6+B,EAAWz0D,cAI1C4gH,EAAUpiH,UAAUunH,gBAAkB,SAASC,GACtC39G,KAAK49G,eACN59G,KAAK49G,aAAeD,EACpBz0F,EAAOpZ,KAAP,sBAAAzS,OAAkC2C,KAAK49G,iBAI/CrF,EAAUpiH,UAAU6jH,gBAAkB,WAClC,OAAOh6G,KAAK49G,cAGhBrF,EAAUpiH,UAAU0nH,kBAAoB,WAEpC,IAAIC,EAAiB99G,KAAKyR,QAAQgM,WAAWuwC,MAAM+vD,MAQnD,OAJKD,IACDA,EAAc,SAAAzgH,OAAY2C,KAAKyR,QAAQgM,WAAWuwC,MAAM9nD,SAGrD43G,GAGXvF,EAAUpiH,UAAU6nH,mBAAqB,WAErC,IA4GIC,EA5GE1yG,EAAO7E,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIvc,KAAK69G,oBACxBrsG,KAAM,QAGFqvC,EAAch3B,EAAAA,EAAdg3B,UACFq9D,EAAar0F,EAAAA,EAAS82B,UACtBplD,EAASyE,KAAKyR,QAAQwgC,WAwG5B,OAtGA/oB,EAAOpZ,KAAP,eAAAzS,OAA2BwjD,EAA3B,kBAAAxjD,OAAqD6gH,IAErD3yG,EAAK3W,EAAE,aAAc,CACjB4b,MAAO,kCACP6/C,KAAMrwD,KAAKowB,SACX+tF,cAAeD,IAGfr9D,GACAt1C,EAAKzE,MAAM,CAAEs3G,aAAcv9D,SAEgBlmD,IAA3CqF,KAAKyR,QAAQgM,WAAW4gG,gBACxB9yG,EAAK3W,EACD,WAAY,CACRE,KAAM,iBACNU,MAAOwK,KAAKyR,QAAQgM,WAAW4gG,iBAChC3tG,UAI2B/V,IAAlCqF,KAAKyR,QAAQgM,WAAWuwC,YAC0BrzD,IAA/CqF,KAAKyR,QAAQgM,WAAWuwC,MAAMwvD,cACjCjyG,EAAK3W,EACD,WAAY,CACRE,KAAM,eACNU,MAAOwK,KAAKyR,QAAQgM,WAAWuwC,MAAMwvD,eACtC9sG,UAEiB/V,IAAxBY,EAAOqwF,cACPrgF,EAAK3W,EACD,WAAY,CACRE,KAAM,eACNU,MAAO+F,EAAOqwF,eACfl7E,KAEXnF,EAAK3W,EACD,WAAY,CACRE,KAAM,aACNU,MAAOuwC,QAAQxqC,EAAOowD,cACvBj7C,UAEkB/V,IAArBY,EAAO+iH,WACP/yG,EAAK3W,EACG,WAAY,CACRE,KAAM,YACNU,MAAOuwC,QAAQxqC,EAAO+iH,aACvB5tG,UAEW/V,IAAtBY,EAAOgjH,YACPhzG,EAAK3W,EACG,WAAY,CACRE,KAAM,aACNU,MAAOuwC,QAAQxqC,EAAOgjH,cACvB7tG,UAEgB/V,IAA3BY,EAAOijH,iBACPjzG,EAAK3W,EACG,WAAY,CACRE,KAAM,kBACNU,MAAO+F,EAAOijH,kBACf9tG,KAGfnF,EAAK3W,EACD,WAAY,CACRE,KAAM,gBACNU,OAAiD,IAA1CwK,KAAKyR,QAAQgM,WAAWouC,gBAChCn7C,UACyB/V,IAA5BY,EAAOkjH,kBACPlzG,EAAK3W,EACD,WAAY,CACRE,KAAM,mBACNU,MAAO+F,EAAOkjH,mBACf/tG,KAEPnV,EAAOmjH,cACPnzG,EAAK3W,EACD,WAAY,CACRE,KAAM,eACNU,MAAO+F,EAAOmjH,eACfhuG,KAEPnV,EAAOojH,YACPpzG,EAAK3W,EACD,WAAY,CACRE,KAAM,aACNU,MAAO+F,EAAOojH,aACfjuG,KAEPnV,EAAOgjE,SAAWhjE,EAAOgjE,QAAQqgD,MACa,iBAApCrjH,EAAOgjE,QAAQqgD,KAAKC,aAC1B/9G,KAAK2U,SAAWla,EAAOgjE,QAAQqgD,KAAKC,aACpCtzG,EAAK3W,EACD,WAAY,CACRE,KAAM,OACNU,OAAO,IACRkb,KAMP1Q,KAAKyR,QAAQwgC,WAAWojD,mBAChC,IAAK,cACL,KAAK,EACL,UAAK16F,EACDsjH,GAAW,EACX,MACJ,IAAK,YACDA,GAAW,EA4Cf,OAxCIA,IAAajzF,EAAAA,EAAQsqE,yBACrB2oB,GAAW,GAGf1yG,EAAK3W,EACD,WAAY,CACRE,KAAM,WACNU,MAAOyoH,IACRvtG,UAEyC/V,IAA5CqF,KAAKyR,QAAQwgC,WAAW42C,iBACxBt9E,EAAK3W,EACD,WAAY,CACRE,KAAM,kBACNU,MAAOwK,KAAKyR,QAAQwgC,WAAW42C,kBAChCn4E,UAEqC/V,IAA5CqF,KAAKyR,QAAQwgC,WAAW62C,iBACxBv9E,EAAK3W,EACD,WAAY,CACRE,KAAM,kBACNU,MAAOwK,KAAKyR,QAAQwgC,WAAW62C,kBAChCp4E,UAE4B/V,IAAnCqF,KAAKyR,QAAQwgC,WAAW6sE,QACxBvzG,EAAK3W,EACD,WAAY,CACRE,KAAM,SACNU,MAAOwK,KAAKyR,QAAQwgC,WAAW6sE,SAChCpuG,UAEiD/V,IAAxDqF,KAAKyR,QAAQwgC,WAAW8sE,6BACxBxzG,EAAK3W,EACD,WAAY,CACRE,KAAM,8BACNU,MAAOwK,KAAKyR,QAAQwgC,WAAW8sE,8BAChCruG,KAEXnF,EAAKmF,KAEEnF,GAIXgtG,EAAUpiH,UAAU6oH,eAAiB,SAASC,GAE1C,IAAMp+D,EAAYtF,EAAE0jE,GAAUrlF,KAAK,cAAc7sB,KAAK,cAElD8zC,IACA33B,EAAOpZ,KAAP,wBAAAzS,OAAoCwjD,IACpCh3B,EAAAA,EAASg3B,UAAYA,IAI7B03D,EAAUpiH,UAAU+oH,mBAAqB,SAASD,GAE9Cj/G,KAAK09G,gBAAgBniE,EAAE0jE,GAAUrlF,KAAK,cAAc7sB,KAAK,aAEzD,IAAMoyG,EACA5jE,EAAE0jE,GAAUrlF,KACV,6DAC+C58B,OAAS,EAEhEksB,EAAOpZ,KAAP,2BAAAzS,OAAuC8hH,IAEvCn/G,KAAKs9G,oBAAsB/hE,EAAE0jE,GAAUrlF,KACnC,2DACiD58B,OAAS,EAE9DksB,EAAOpZ,KAAP,oCAAAzS,OACwC2C,KAAKs9G,sBAExCt9G,KAAKs9G,qBAENt9G,KAAKg/G,eAAeC,GAIxB,IAAM5xB,EAAe9xC,EAAE0jE,GAAUrlF,KAAK,eAAe7sB,KAAK,YAE1D/M,KAAK4qB,aAAa2C,KAAK65E,EAAqB1wB,iBACxCyoC,EAAuB9xB,GAIvB9xC,EAAE0jE,GAAUrlF,KACZ,gEACkD58B,SAClDgD,KAAKu9G,mBAAoB,GAG7Br0F,EAAOpZ,KAAP,yBAAAzS,OAAqC2C,KAAKu9G,qBAa9ChF,EAAUpiH,UAAU+iH,wBAA0B,WAAW,IAAArxE,EAAA7nC,KACrD,OAAO,IAAIorC,QAAQ,SAAAC,GAEfxD,EAAK61E,gBAAgB71E,EAAKp2B,QAAQgM,WAAWmgG,cAG7C/1E,EAAKpqB,WAAWnF,OACZuvB,EAAKm2E,qBACL,SAAA/tG,GAAM,OAAI43B,EAAKu3E,gCAAgCnvG,EAAQo7B,IACvD,SAAAz7B,GAAK,OAAIi4B,EAAKw3E,8BAA8BzvG,EAAOy7B,KAMvDxD,EAAKpqB,WAAW9F,WAaxB4gG,EAAUpiH,UAAUkpH,8BAAgC,SAASzvG,EAAOxQ,GAAU,IAAAssC,EAAA1rC,KAGpEs/G,EACA/jE,EAAE3rC,GAAOgqB,KAAK,0BAA0B58B,QACnCu+C,EAAE3rC,GAAOgqB,KAAK,yBAAyB58B,OAMlD,GAJIsiH,IACAp2F,EAAOpZ,KAAK,+BACZ+Z,EAAAA,EAASg3B,eAAYlmD,GAErB4gD,EAAE3rC,GAAOgqB,KAAK,4BAA4B58B,OAC1CgD,KAAK4qB,aAAa2C,KAAK6+B,EAAWx0D,uBADtC,CAOA,IAAM2nH,EAAiBhkE,EAAE3rC,GAAOgqB,KAAK,4BAErC,GAAI2lF,EAAeviH,OAAQ,CAEvB,IAEIw3F,EAFEgrB,EAAYD,EAAexyG,KAAK,cAChC0yG,EAAgBlkE,EAAE3rC,GAAOgqB,KAAK,eAWpC,OARI6lF,IACAjrB,EAAWirB,EAAcvyG,aAE7BlN,KAAK4qB,aAAa2C,KACd6+B,EAAW3yD,kBACX+lH,EACAhrB,GAMR,GAAIj5C,EAAE3rC,GAAOgqB,KAAK,yBAAyB58B,OAWvC,OAVAksB,EAAOnZ,KAAK,uCAAwCH,GACnCpJ,EAAAA,QAAQmI,iBAAiBiB,EAAMxB,aAAa,SAE5CpO,KAAKyR,QAAQgM,WAAWuwC,MAAMC,kBAG3CjuD,KAAKs9G,qBAAsB,QAE/Bt9G,KAAK4qB,aAAa2C,KAAK6+B,EAAW31D,yBAItC,IAAMipH,EAAS1/G,KAAKq9G,sBACdr4E,EAAM,4BAAA3nC,OAA+BqiH,GAE3Cz6E,EAAqBC,iBAAiB,IAAIhnC,MAAM8mC,IAChD9b,EAAOtZ,MAAMo1B,EAAQp1B,GAGrB,IAAMkuG,EAAiB99G,KAAK69G,oBACtB8B,EAAWD,EAAS,IAKrBJ,GACDt/G,KAAK4qB,aAAa2C,KACd6+B,EAAW10D,mBACXomH,EACA6B,GAIR3/G,KAAKo9G,gBAAe,GACpBjpH,OAAOyL,WACH,WAAA,OAAM8rC,EAAKwtE,0BAA0BhxE,KAAK9oC,IAC1CsgH,KAYRnH,EAAUpiH,UAAUipH,gCAAkC,SAC9CnvG,EACA7Q,GAAU,IAAA+tC,EAAAntC,KAQd,GANAA,KAAKk/G,mBAAmBjvG,GAGxBjQ,KAAKq9G,qBAAoB,GAG0B,SAA/C9hE,EAAEtrC,GAAQ2pB,KAAK,cAAc7sB,KAAK,SAElC/M,KAAKo9G,gBAAe,GAGpBh+G,QACG,CACH,IAAMsgH,EAAS1/G,KAAKo9G,iBAEpBl0F,EAAOpZ,KAAP,4BAAAzS,OAAwCqiH,IACxCvrH,OAAOyL,WACH,WAAA,OAAMutC,EAAK+rE,0BAA0BhxE,KAAK9oC,IAC1CsgH,KAIZnH,EAAUpiH,UAAUglB,aAAe,WAAW,IAAA8yB,EAAAjuC,KAC1C,OAAO,IAAIorC,QAAQ,SAACC,EAASC,GACzB2C,EAAKxwB,WAAWnF,OACZ21B,EAAK+vE,qBACL,SAAA/tG,GACIg+B,EAAK+wE,eAAe/uG,GACpBo7B,KAEJ,SAAAqwC,GAAO,OAAIpwC,EAAO,CACd17B,MAAO2rC,EAAEmgC,GAAS9hD,KAAK,mBAClB79B,KAAK,WACVsT,QAASksC,EAAEmgC,GAAS9hD,KAAK,iBACpB1sB,cAMrBqrG,EAAUpiH,UAAUy3F,YAAc,SAASgyB,EAAaC,GACpD7/G,KAAK8/G,cAAyB,EAAOF,EAAaC,IAUtDtH,EAAUpiH,UAAU2pH,aAAe,SAASC,EAAOC,EAAOh3C,GACtD,IAAMvsD,EAAK/V,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIvc,KAAK69G,oBACtBrsG,KAAM,QACJ1K,EAAQ,CACV0J,MAAO,kCACP6/C,KAAMrwD,KAAKowB,SACX+tF,cAAet0F,EAAAA,EAAS82B,WAExBz8C,EAAM,WAeV,SAAS4iD,EAAY9hB,EAAQ/qB,GACzBgrB,EAAqBC,iBAAiB,IAAIhnC,MAAM8mC,IAChD9b,EAAOtZ,MAAMo1B,EAAQ/qB,GACrB+uD,EAAU/uD,GAhBV8lG,IACAj5G,EAAMi5G,OAAQ,EACd77G,EAAG,SAAA7G,OAAY6G,IAEnBuY,EAAG7nB,EAAE,YAAakS,GAclB9G,KAAKyd,WAAWnF,OACZmE,EACA,SAAAxM,GAEI,IAAIk/B,EAAMoM,EAAEtrC,GAAQ2pB,KAAK,aAAa7sB,KAAK,QAE3CoiC,EAAM8wE,mBAAmB9wE,KAErBjmB,EAAOpZ,KAAP,OAAAzS,OAAmB6G,EAAnB,MAAA7G,OAA2B8xC,IAC3B6wE,EAAM7wE,IAEN2X,EAAW,iBAAAzpD,OAAkB6G,EAAlB,mBAAwC+L,IAG3D62C,EAAY/wD,UAAK4E,EAAjB,OAAA0C,OAAmC6G,EAAnC,aAIRq0G,EAAUpiH,UAAUw3F,iBAAmB,SAASiyB,EAAaC,GACzD7/G,KAAK8/G,cAAyB,EAAMF,EAAaC,IAGrDtH,EAAUpiH,UAAU+pH,OAAS,SAAS9gH,GAClC,IAAMqd,EAAK/V,OAAAA,EAAAA,IAAAA,CAAI,CAAE6V,GAAIvc,KAAK69G,oBACtBrsG,KAAM,QACFqvC,EAAch3B,EAAAA,EAAdg3B,UAEHA,GAKLpkC,EAAG7nB,EAAE,SAAU,CACX4b,MAAO,kCACP4tG,aAAcv9D,IAElB7gD,KAAKyd,WAAWnF,OACZmE,EACA,SAAAxM,GAEI,IAAIkwG,EAAY5kE,EAAEtrC,GAAQ2pB,KAAK,UAAU7sB,KAAK,cAE1CozG,IACAA,EAAYF,mBAAmBE,IAEnCj3F,EAAOpZ,KAAP,oBAAAzS,OAAgC8iH,GAAalwG,GAC7C4Z,EAAAA,EAASg3B,eAAYlmD,EACrByE,EAAS+gH,IAEb,SAAAvwG,GAGIq1B,EAAqBC,iBAAiB,IAAIhnC,MAF3B,iBAGfgrB,EAAOtZ,MAHQ,eAGMA,MAzBzBxQ,2yCChkBR,IAAM8pB,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GASnB62F,cAQF,SAAAA,EAAY31F,EAAMG,EAAciqB,GAAW,IAAAhN,EAAA,mGAAAJ,CAAAznC,KAAAogH,IACvCv4E,EAAAH,EAAA1nC,KAAA2nC,EAAAy4E,GAAA1rH,KAAAsL,QACKyqB,KAAOA,EACZod,EAAKjd,aAAeA,EACpBid,EAAKinB,SAAW,GAChBjnB,EAAKw4E,aAAexrE,EAAUoa,IAC9BpnB,EAAKy4E,aAAezrE,EAAUyX,IAC9BzkB,EAAKy0B,iBAAmB,CACpBikD,qBAAqB,EACrBC,qBAAqB,GATc34E,wPARV44E,EAAAA,yCAyB5BhjG,GACDy6D,EAAAvwC,EAAAy4E,EAAAjqH,WAAA,OAAA6J,MAAAtL,KAAAsL,KAAWyd,GACXzd,KAAKyd,WAAWxF,WAAWjY,KAAK0gH,SAAS3qH,KAAKiK,MAC1C,oBAAqB,KAAM,MAAO,KAAM,uCAOvCyc,GACL,IAAMjG,EAAM+kC,EAAE9+B,GAAImd,KAAK,UAAU7sB,KAAK,OAChC+xB,EAASyc,EAAE9+B,GAAImd,KAAK,UAAU7sB,KAAK,UACnC4zG,EAAUlkG,EAAGrO,aAAa,QAG1BwyG,EAAMl6G,OAAAA,EAAAA,IAAAA,CAAI,CAAE8K,KAAM,SACpB+K,GAAIokG,EACJ1hH,GAAIwd,EAAGrO,aAAa,QAGxB8a,EAAO1Z,IAAP,aAAAnS,OAAwByhC,EAAxB,UAAAzhC,OAAuCsjH,GAAWlkG,GAClD,IAAIokG,EAAO7gH,KAAK8uD,SAASt4C,GAEzB,GAAe,qBAAXsoB,EAA+B,CAC/B,IAAK+hF,EAaD,OAZAD,EAAI95G,MAAM,CAAE0K,KAAM,UAClBovG,EAAIhsH,EAAE,QAAS,CAAE4c,KAAM,WAClB5c,EAAE,iBAAkB,CACjB4b,MAAO,wCAEVE,KACA9b,EAAE,kBAAmB,CAClB4b,MAAO,6BAEf0Y,EAAOnZ,KAAK,qBAAsB0M,GAClCzc,KAAKyd,WAAWjG,KAAKopG,IAEd,EAIX,GAAID,IAAYE,EAAKxkD,UAcjB,OAbAnzC,EAAOnZ,KACH,8BAA+ByG,EAAKqqG,EAAKxkD,UAAW5/C,GACxDmkG,EAAI95G,MAAM,CAAE0K,KAAM,UAClBovG,EAAIhsH,EAAE,QAAS,CAAE4c,KAAM,WAClB5c,EAAE,iBAAkB,CACjB4b,MAAO,wCAEVE,KACA9b,EAAE,kBAAmB,CAClB4b,MAAO,6BAEfxQ,KAAKyd,WAAWjG,KAAKopG,IAEd,OAER,QAAajmH,IAATkmH,EAYP,OATAD,EAAI95G,MAAM,CAAE0K,KAAM,UAClBovG,EAAIhsH,EAAE,QAAS,CAAE4c,KAAM,WAClB5c,EAAE,sBAAuB,CACtB4b,MAAO,wCAEVE,KACLwY,EAAOnZ,KAAK,uBAAwByG,EAAKiG,GACzCzc,KAAKyd,WAAWjG,KAAKopG,IAEd,EAEX,IAAMrjG,EAAMppB,OAAO83D,YAAY1uC,MAKzB61B,EAAgD,UAAxC5sC,EAAAA,QAAQsI,mBAAmB6xG,GAIzC,OAAQ7hF,GACR,IAAK,mBACD5V,EAAO1Z,IAAI,sCAAuC+N,GAClD,IAAMujG,EAAavlE,EAAE9+B,GAAImd,KAAK,qBAE9B,GAAIknF,GAAcA,EAAW9jH,OAAS,EAAG,CACrC,IAAM2qG,EAAamZ,EAAW/zG,KAAK,SAC7B66F,EAAakZ,EAAW/zG,KAAK,SAEnC/M,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAWlyD,uBACI,SAAfytG,EACe,SAAfC,GAGR1+E,EAAOpZ,KAAP,wBAAAzS,OAC4BsjH,EAD5B,QAAAtjH,OAEW+1C,EAAQ,GAAK,QAFxB,SAGAytE,EACM,IAAI1kD,EAAAA,EACF5gB,EAAE9+B,GAAImd,KAAK,UAAU7sB,KAAK,OAC1BwuC,EAAE9+B,GAAI1P,KAAK,MACX4zG,EACA3gH,KAAKyd,WACLzd,KAAKs8D,iBACLlpB,EAAQpzC,KAAKsgH,aAAetgH,KAAKqgH,aACjCjtE,GACgB,GAExBpzC,KAAK8uD,SAAS+xD,EAAKrqG,KAAOqqG,EAE1B7gH,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWx1D,cAC9BiqH,EAAMtlE,EAAE9+B,GAAImd,KAAK,WAAYrc,GACjC,MAEJ,IAAK,iBACDvd,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAWz1D,cAAekqH,EAAMtlE,EAAE9+B,GAAImd,KAAK,YAC/C,MAEJ,IAAK,iBACDinF,EAAKE,eAAexlE,EAAE9+B,GAAImd,KAAK,YAC/B,MAEJ,IAAK,iBACD55B,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAW9xD,eAAgBumH,EAAMtlE,EAAE9+B,GAAImd,KAAK,YAChD,MAEJ,IAAK,oBACD1Q,EAAO1Z,IAAI,iBAAkBqxG,EAAKrqG,KAClC,IAAI4tD,EAAkB,KAClBC,EAAa,KAEb9oB,EAAE9+B,GAAImd,KAAK,kBAAkB58B,SAC7BonE,EACM7oB,EAAE9+B,GAAImd,KAAK,yBAAyB,GAAG9tB,QAC7Cu4D,EAAa9oB,EAAE9+B,GAAImd,KAAK,uBAAuB1sB,QAEnDlN,KAAKmkE,UAAU08C,EAAKrqG,IAAK4tD,EAAiBC,GAC1CrkE,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWv1D,WAC9BgqH,EAAMz8C,EAAiBC,GAC3B,MAEJ,IAAK,oBACDn7C,EAAOpZ,KAAK,iCAAkCyN,GAC9CiN,EAAAA,EAAW6K,cAAc6K,OAAAA,EAAAA,EAAAA,CACrBjC,EAAAA,EACA,CACIquB,IAAKlZ,EACL59C,MAAO+nB,KAGfsjG,EAAKG,iBAAiBzlE,EAAE9+B,GAAImd,KAAK,WAAY,WACzC,IAAMqnF,EAAc9sH,OAAO83D,YAAY1uC,MAEvC2L,EAAOpZ,KAAK,oCAAqCmxG,GACjDz2F,EAAAA,EAAW6K,cAAc6K,OAAAA,EAAAA,EAAAA,CACrBhC,EAAAA,EACA,CACIouB,IAAKlZ,EACL59C,MAAOyrH,MAEhB,SAAArxG,GACCq1B,EAAAA,EAAqBC,iBAAiBt1B,GACtCsZ,EAAOtZ,MAAM,2BAA4BA,GACzCixG,EAAKK,wBAET,MACJ,IAAK,YACL,IAAK,aACDL,EAAKM,gBAAgB5lE,EAAE9+B,GAAImd,KAAK,oBAChC,MACJ,IAAK,eACL,IAAK,gBACDinF,EAAKO,mBAAmB7lE,EAAE9+B,GAAImd,KAAK,oBACnC,MACJ,QACI1Q,EAAOnZ,KAAK,gCAAiC+uB,GAC7C8hF,EAAI95G,MAAM,CAAE0K,KAAM,UAClBovG,EAAIhsH,EAAE,QAAS,CAAE4c,KAAM,WAClB5c,EAAE,cACC,CAAE4b,MAAO,wCACZE,KAKT,OAFA1Q,KAAKyd,WAAWjG,KAAKopG,IAEd,8CAUSS,EAAIt4D,GACpB,IAAM83D,EACA,IAAI1kD,EAAAA,EACFliC,EAAAA,EAAW2vB,gBAAgB,IAC3By3D,EACAt4D,EACA/oD,KAAKyd,WACLzd,KAAKs8D,iBACLt8D,KAAKsgH,cACK,GACM,GAIxB,OAFAtgH,KAAK8uD,SAAS+xD,EAAKrqG,KAAOqqG,EAEnBA,oCASDrqG,EAAK4tD,EAAiBC,GACxBrkE,KAAK8uD,SAAS14D,eAAeogB,KACI,UAA7BxW,KAAK8uD,SAASt4C,GAAKinD,OACnBz9D,KAAK8uD,SAASt4C,GAAK8qG,aAAal9C,EAAiBC,UAE9CrkE,KAAK8uD,SAASt4C,wDAOD,IAAAk1B,EAAA1rC,KAaxBA,KAAKyd,WAAWnF,OACZ5R,OAAAA,EAAAA,IAAAA,CAAI,CAAE8K,KAAM,MACR+K,GAAIvc,KAAKyd,WAAWvX,SACnBtR,EAAE,WAAY,CAAE4b,MAAO,wBAC5B,SAAA87B,GACI,IAAMi1E,EAAa,GAEnBhmE,EAAEjP,GAAK1S,KAAK,qBAAqB0hB,KAAK,SAACtC,EAAKntC,GAGxC,IAAM21G,EAAO,GACPhwG,GAFN3F,EAAK0vC,EAAE1vC,IAESkB,KAAK,QAErB,OAAQyE,GACR,IAAK,OACDgwG,EAAKryE,IAAL,QAAA9xC,OAAmBwO,EAAGkB,KAAK,SACvBlB,EAAGkB,KAAK,UACRy0G,EAAKryE,KAAL,IAAA9xC,OAAgBwO,EAAGkB,KAAK,UAE5Bw0G,EAAW1jH,KAAK2jH,GAChB,MACJ,IAAK,OACL,IAAK,QACDA,EAAKryE,IAAL,GAAA9xC,OAAcmU,EAAd,KACA,IAAMgvC,EAAW30C,EAAGkB,KAAK,YAKzB,GAAIyzC,EAAU,CACV,IAAM3jC,EACAmrB,UAAUmV,UAAUtgC,MAClB,4BAEJA,GAAS6E,SAAS7E,EAAM,GAAI,IAAM,GAClC2kG,EAAKryE,KAAL,GAAA9xC,OAAemjD,EAAf,KAGAghE,EAAKhhE,SAAWA,EAGxBghE,EAAKryE,KAAOtjC,EAAGkB,KAAK,QACPlB,EAAGkB,KAAK,UAGjBy0G,EAAKryE,KAAL,IAAA9xC,OAAgBwO,EAAGkB,KAAK,UAE5B,IAAM8b,EAAYhd,EAAGkB,KAAK,aAEtB8b,GAA2B,QAAdA,IACb24F,EAAKryE,KAAL,cAAA9xC,OAA0BwrB,IAG9B24F,EAAKC,WAAa51G,EAAGkB,KAAK,aACfy0G,EAAKC,WAChBF,EAAW1jH,KAAK2jH,MAMxB,IAAM/vG,EAAUi6B,EAAKjhB,KAAKhZ,QAEtBA,EAAQ46C,cAGR3gB,EAAK20E,aAAanxD,WACZqyD,EAAWjoF,OAAO,SAAAhjC,GAAC,OAAIA,EAAE64C,IAAIrU,WAAW,YAG9CrpB,EAAQ66C,KAAO76C,EAAQ66C,IAAID,cAC3B3gB,EAAK40E,aAAapxD,WAAaqyD,IAGpC,SAAAtnG,GACCiP,EAAOnZ,KAAK,kCAAmCkK,GAC/CiP,EAAOnZ,KAAK,mFASf,IAAAo9B,EAAAntC,KACCwD,EAAO,GAgBb,OAdAvO,OAAOy5B,KAAK1uB,KAAK8uD,UAAU7tD,QAAQ,SAAAuV,GAC/B,IACMgwC,EADUrZ,EAAK2hB,SAASt4C,GACXwV,eAEfw6B,GAAMA,EAAGk7D,YAETl+G,EAAI,UAAAnG,OAAWmZ,IAAS,CACpBkrG,UAAWl7D,EAAGk7D,UACdztF,MAAOuyB,EAAGvyB,MACVkb,IAAKh7C,OAAO4vB,SAAS2iE,SAK1BljF,uCAYA,SAAS+rD,EAAW9E,EAAM7/B,EAAciqB,GACnDruC,EAAAA,QAAQ8J,oBACJ,SACA,IAAI8vG,EAAuB31D,EAAM7/B,EAAciqB,oECzYvD7gD,EAAOD,QAAU,CAAE81E,YAhBnB,SAAqBxkD,GACjB,IAAKA,EACD,OAAO,EAGX,IAAoB9wB,EAAVsP,EAAO,EAEjB,IAAKtP,EAAI,EAAGA,EAAI8wB,EAAOroB,OAAQzI,IAE3BsP,GADOwhB,EAAOljB,WAAW5N,GACVuM,KAAK8iB,IAAI,GAAIyB,EAAOroB,OAAS,EAAIzI,GAChDsP,EAAO/C,KAAK+iB,IAAW,EAAPhgB,GAGpB,OAAOA,wQChBX,IAAMqlB,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAOJ+zC,aAiBjB,SAAAA,EACQ9mD,EACA4lD,EACAC,EACA5+C,EACA6+C,EACAznB,EACA0nB,gGAAa90B,CAAAznC,KAAAs9D,GACjBt9D,KAAKwW,IAAMA,EACXxW,KAAKo8D,SAAWA,EAChBp8D,KAAKq8D,UAAYA,EACjBr8D,KAAKyd,WAAaA,EAClBzd,KAAKs8D,iBAAmBA,EACxBt8D,KAAK60C,UAAYA,EAOjB70C,KAAKu8D,YAAcA,EAMnBv8D,KAAKkgE,SAAU,EAKflgE,KAAKmgE,cAAgB,GAMrBngE,KAAKqwD,KAAO,KAMZrwD,KAAKy9D,MAAQ,KAMbz9D,KAAKw2D,IAAM,+DA6BJnG,EAAMmG,EAAK/kD,GAClB,GAAmB,OAAfzR,KAAKy9D,MAAgB,CACrB,IAAMz4B,EAAM,kCAAA3nC,OAC4B2C,KAAKwW,IADjC,kCAAAnZ,OAEM2C,KAAKy9D,OAGvB,MADAv0C,EAAOtZ,MAAMo1B,GACP,IAAI9mC,MAAM8mC,GAEpBhlC,KAAKqwD,KAAOA,EACZrwD,KAAKw2D,IAAMA,EACXx2D,KAAKy9D,MAAQC,EAAAA,EACb19D,KAAK2hH,aAAalwG,wCASTA,6CAWIkqC,uCASb,OAAO37C,KAAKy9D,yCAUL9hB,0CAOGA,sCAeJ0N,EAASsY,EAASlwD,wCAWhBgqC,EAAQ4N,EAASsY,+CAMzB,OAAO3hE,KAAKu8D,YAAcv8D,KAAKo8D,SAAWp8D,KAAKq8D,+CA/G/C,OAAOr8D,KAAKu8D,YAAcv8D,KAAKo8D,SAAWp8D,KAAKq8D,+CAQ/C,OAAOr8D,KAAKu8D,YAAcv8D,KAAKq8D,UAAYr8D,KAAKo8D,i/BCtFxD,IAAMlzC,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAMJ0zC,cAIjB,SAAAA,IAAc,IAAAp1B,EAAA,mGAAAJ,CAAAznC,KAAAi9D,IACVp1B,EAAAH,EAAA1nC,KAAA2nC,EAAAs1B,GAAAvoE,KAAAsL,QAUK4hH,WAAa,IAAIj3F,IAMtBkd,EAAK6+D,SAAW,KAjBN7+D,wPAJ8Bg6E,EAAAA,gDA4BhCxxD,GAAM,IAAA3kB,EAAA1rC,KACR8hH,EAAc9hH,KAAK0mG,SAEzB1mG,KAAK0mG,SAAWr2C,EACZyxD,IACAA,EAAY1zB,uBACR,aAAcpuF,KAAK+hH,mBACvBD,EAAY1zB,uBACR,aAAcpuF,KAAKgiH,mBACvBF,EAAY1zB,uBACR,YAAapuF,KAAKiiH,oBAEtB5xD,IAEArwD,KAAK+hH,kBAAoB,SAACn1G,EAAMhM,GAC5B8qC,EAAK9gB,aAAa2C,KACd20F,EAAAA,EACAthH,EAAMisC,EAAAA,EAAgC,SAAfjgC,EAAKpX,QAEpC66D,EAAK69B,oBAAoB,aAAcluF,KAAK+hH,mBAE5C/hH,KAAKgiH,kBAAoB,SAACp1G,EAAMhM,GAC5B8qC,EAAK9gB,aAAa2C,KACd20F,EAAAA,EACAthH,EAAMisC,EAAAA,EAAgC,SAAfjgC,EAAKpX,QAEpC66D,EAAK69B,oBAAoB,aAAcluF,KAAKgiH,mBAE5ChiH,KAAKiiH,kBAAoB,SAACr1G,EAAMhM,GAC5B8qC,EAAK9gB,aAAa2C,KACd20F,EAAAA,EACAthH,EAAMgM,EAAKpX,QAEnB66D,EAAK69B,oBAAoB,YAAaluF,KAAKiiH,6DAOlC5rE,EAAOjW,GACpB,GAAIpgC,KAAK0mG,SACL,OAAO1mG,KAAK0mG,SAASyb,qBAAqB9rE,EAAOjW,GAErDlX,EAAOtZ,MAAM,uFAMJohB,GACT,OAAOhxB,KAAK4hH,WAAWxsH,IAAI47B,wCASlBA,EAAM2nC,GACf,GAAoB,iBAAT3nC,EACP,MAAM,IAAI3vB,UAAJ,QAAAhE,OAAsB2zB,EAAtB,uBAEVhxB,KAAK4hH,WAAWx1F,IAAI4E,EAAM2nC,i9BCxFbkpD,gaAAuBj6E,EAAAA,iDAO3B5W,GACT,MAAM,IAAI9yB,MAAM,4DAcHm4C,EAAOjW,GACpB,MAAM,IAAIliC,MAAM,qTCnCHi/D,aAIjB,SAAAA,iGAAc11B,CAAAznC,KAAAm9D,GACVn9D,KAAKoiH,OAAS30G,EAAAA,EAAM2iE,MAAMpwE,KAAKqiH,mBAAmBtsH,KAAKiK,MAAO,GAC9DA,KAAKsiH,UAAW,yDAOhBtiH,KAAKoiH,OAAOG,kDAMGC,EAAM7iD,GACrB6iD,EAAK7iD,gCAoBJ6iD,EAAMpjH,GACHY,KAAKsiH,SACLljH,GAAYA,EAAS,IAAIlB,MAAM,+BAInC8B,KAAKoiH,OAAOvkH,KAAK2kH,EAAMpjH,sCAQvBY,KAAKsiH,UAAW,yDC3DxB,SAAAxyC,EAAA2yC,GAAA,IAAA7nH;;;;;;;;;;;;;;;CASC,WAEG,IAGI/G,EAAM6uH,EAHNj1G,EAAQ,GAeZ,SAASk1G,EAAUC,GACf,IAAIC,GAAS,EACb,OAAO,WACH,GAAIA,EAAQ,MAAM,IAAI3kH,MAAM,gCAC5B2kH,GAAS,EACTD,EAAG9kH,MAAMjK,EAAM+J,YAdX,OADZ/J,EAAOmM,QAEL0iH,EAAiB7uH,EAAK4Z,OAGxBA,EAAMq1G,WAAa,WAEf,OADAjvH,EAAK4Z,MAAQi1G,EACNj1G,GAcX,IAAIs1G,EAAY9tH,OAAOkB,UAAUsK,SAE7BuiH,EAAW5iH,MAAMG,SAAW,SAAUzE,GACtC,MAA+B,mBAAxBinH,EAAUruH,KAAKoH,IAGtBmnH,EAAQ,SAAUv5D,EAAK57B,GACvB,GAAI47B,EAAIzoD,QACJ,OAAOyoD,EAAIzoD,QAAQ6sB,GAEvB,IAAK,IAAIv5B,EAAI,EAAGA,EAAIm1D,EAAI1sD,OAAQzI,GAAK,EACjCu5B,EAAS47B,EAAIn1D,GAAIA,EAAGm1D,IAIxBw5D,EAAO,SAAUx5D,EAAK57B,GACtB,GAAI47B,EAAI5sD,IACJ,OAAO4sD,EAAI5sD,IAAIgxB,GAEnB,IAAI2uD,EAAU,GAId,OAHAwmC,EAAMv5D,EAAK,SAAUhnD,EAAGnO,EAAG0O,GACvBw5E,EAAQ5+E,KAAKiwB,EAASprB,EAAGnO,EAAG0O,MAEzBw5E,GAaP0mC,EAAQ,SAAUrnH,GAClB,GAAI7G,OAAOy5B,KACP,OAAOz5B,OAAOy5B,KAAK5yB,GAEvB,IAAI4yB,EAAO,GACX,IAAK,IAAIttB,KAAKtF,EACNA,EAAI1F,eAAegL,IACnBstB,EAAK7wB,KAAKuD,GAGlB,OAAOstB,QAMY,IAAZohD,GAA6BA,EAAQe,UAgB5CpjE,EAAMojE,SAAWf,EAAQe,SAErBpjE,EAAMg1G,kBADkB,IAAjBA,EACc,SAAUG,GAE7BH,EAAaG,IAIMn1G,EAAMojE,UAvBH,mBAAjB4xC,GACPh1G,EAAMojE,SAAW,SAAU+xC,GAEvBH,EAAaG,IAEjBn1G,EAAMg1G,aAAeh1G,EAAMojE,WAG3BpjE,EAAMojE,SAAW,SAAU+xC,GACvBhjH,WAAWgjH,EAAI,IAEnBn1G,EAAMg1G,aAAeh1G,EAAMojE,UAgBnCpjE,EAAM6tC,KAAO,SAAUoO,EAAK57B,EAAU1uB,GAElC,GADAA,EAAWA,GAAY,cAClBsqD,EAAI1sD,OACL,OAAOoC,IAEX,IAAIgkH,EAAY,EAIhB,SAASp1F,EAAK/T,GACRA,GACA7a,EAAS6a,GACT7a,EAAW,eAGXgkH,GAAa,IACI15D,EAAI1sD,QACjBoC,IAXV6jH,EAAMv5D,EAAK,SAAUhnD,GACjBorB,EAASprB,EAAGigH,EAAU30F,OAe9BvgB,EAAMxM,QAAUwM,EAAM6tC,KAEtB7tC,EAAM41G,WAAa,SAAU35D,EAAK57B,EAAU1uB,GAExC,GADAA,EAAWA,GAAY,cAClBsqD,EAAI1sD,OACL,OAAOoC,IAEX,IAAIgkH,EAAY,GACF,SAAVE,IACAx1F,EAAS47B,EAAI05D,GAAY,SAAUnpG,GAC3BA,GACA7a,EAAS6a,GACT7a,EAAW,eAGXgkH,GAAa,IACI15D,EAAI1sD,OACjBoC,IAGAkkH,MAKhBA,IAEJ71G,EAAM81G,cAAgB91G,EAAM41G,WAE5B51G,EAAM+1G,UAAY,SAAU95D,EAAK+5D,EAAO31F,EAAU1uB,GACrCskH,EAAWD,GACjB3lH,MAAM,KAAM,CAAC4rD,EAAK57B,EAAU1uB,KAEnCqO,EAAMk2G,aAAel2G,EAAM+1G,UAE3B,IAAIE,EAAa,SAAUD,GAEvB,OAAO,SAAU/5D,EAAK57B,EAAU1uB,GAE5B,GADAA,EAAWA,GAAY,cAClBsqD,EAAI1sD,QAAUymH,GAAS,EACxB,OAAOrkH,IAEX,IAAIgkH,EAAY,EACZQ,EAAU,EACVC,EAAU,GAEd,SAAUC,IACN,GAAIV,GAAa15D,EAAI1sD,OACjB,OAAOoC,IAGX,KAAOykH,EAAUJ,GAASG,EAAUl6D,EAAI1sD,QAEpC6mH,GAAW,EACX/1F,EAAS47B,GAFTk6D,GAAW,GAEY,GAAI,SAAU3pG,GAC7BA,GACA7a,EAAS6a,GACT7a,EAAW,eAIXykH,GAAW,GADXT,GAAa,IAEI15D,EAAI1sD,OACjBoC,IAGA0kH,OApBpB,KA8BJC,EAAa,SAAUnB,GACvB,OAAO,WACH,IAAIjlH,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,WACtC,OAAOglH,EAAG9kH,MAAM,KAAM,CAAC2P,EAAM6tC,MAAMj+C,OAAOM,MAS9CqmH,EAAW,SAAUpB,GACrB,OAAO,WACH,IAAIjlH,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,WACtC,OAAOglH,EAAG9kH,MAAM,KAAM,CAAC2P,EAAM41G,YAAYhmH,OAAOM,MAKpDsmH,EAAY,SAAUC,EAAQx6D,EAAK57B,EAAU1uB,GAI7C,GAHAsqD,EAAMw5D,EAAKx5D,EAAK,SAAUhnD,EAAGnO,GACzB,MAAO,CAAC8J,MAAO9J,EAAGiB,MAAOkN,KAExBtD,EAME,CACH,IAAIq9E,EAAU,GACdynC,EAAOx6D,EAAK,SAAUhnD,EAAGtD,GACrB0uB,EAASprB,EAAElN,MAAO,SAAUykB,EAAKugC,GAC7BiiC,EAAQ/5E,EAAErE,OAASm8C,EACnBp7C,EAAS6a,MAEd,SAAUA,GACT7a,EAAS6a,EAAKwiE,UAblBynC,EAAOx6D,EAAK,SAAUhnD,EAAGtD,GACrB0uB,EAASprB,EAAElN,MAAO,SAAUykB,GACxB7a,EAAS6a,QAezBxM,EAAM3Q,IAAMinH,EAAWE,GACvBx2G,EAAM02G,UAAYH,EAASC,GAC3Bx2G,EAAM22G,SAAW,SAAU16D,EAAK+5D,EAAO31F,EAAU1uB,GAC7C,OAAOilH,EAAUZ,EAAVY,CAAiB36D,EAAK57B,EAAU1uB,IAG3C,IAAIilH,EAAY,SAASZ,GACrB,OA3CkB,SAASA,EAAOb,GAClC,OAAO,WACH,IAAIjlH,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,WACtC,OAAOglH,EAAG9kH,MAAM,KAAM,CAAC4lH,EAAWD,IAAQpmH,OAAOM,KAwC9C2mH,CAAgBb,EAAOQ,IAKlCx2G,EAAM4mG,OAAS,SAAU3qD,EAAK66D,EAAMz2F,EAAU1uB,GAC1CqO,EAAM41G,WAAW35D,EAAK,SAAUhnD,EAAGtD,GAC/B0uB,EAASy2F,EAAM7hH,EAAG,SAAUuX,EAAKugC,GAC7B+pE,EAAO/pE,EACPp7C,EAAS6a,MAEd,SAAUA,GACT7a,EAAS6a,EAAKsqG,MAItB92G,EAAM+2G,OAAS/2G,EAAM4mG,OAErB5mG,EAAMg3G,MAAQh3G,EAAM4mG,OAEpB5mG,EAAMi3G,YAAc,SAAUh7D,EAAK66D,EAAMz2F,EAAU1uB,GAC/C,IAAIulH,EAAWzB,EAAKx5D,EAAK,SAAUhnD,GAC/B,OAAOA,IACRsrE,UACHvgE,EAAM4mG,OAAOsQ,EAAUJ,EAAMz2F,EAAU1uB,IAG3CqO,EAAMm3G,MAAQn3G,EAAMi3G,YAEpB,IAAIG,EAAU,SAAUX,EAAQx6D,EAAK57B,EAAU1uB,GAC3C,IAAIq9E,EAAU,GAIdynC,EAHAx6D,EAAMw5D,EAAKx5D,EAAK,SAAUhnD,EAAGnO,GACzB,MAAO,CAAC8J,MAAO9J,EAAGiB,MAAOkN,KAEjB,SAAUA,EAAGtD,GACrB0uB,EAASprB,EAAElN,MAAO,SAAUglD,GACpBA,GACAiiC,EAAQ5+E,KAAK6E,GAEjBtD,OAEL,SAAU6a,GACT7a,EAAS8jH,EAAKzmC,EAAQ3vE,KAAK,SAAU7J,EAAGC,GACpC,OAAOD,EAAE5E,MAAQ6E,EAAE7E,QACnB,SAAUqE,GACV,OAAOA,EAAElN,YAIrBiY,EAAM6rB,OAASyqF,EAAWc,GAC1Bp3G,EAAMq3G,aAAed,EAASa,GAE9Bp3G,EAAMs3G,OAASt3G,EAAM6rB,OACrB7rB,EAAMu3G,aAAev3G,EAAMq3G,aAE3B,IAAIG,EAAU,SAAUf,EAAQx6D,EAAK57B,EAAU1uB,GAC3C,IAAIq9E,EAAU,GAIdynC,EAHAx6D,EAAMw5D,EAAKx5D,EAAK,SAAUhnD,EAAGnO,GACzB,MAAO,CAAC8J,MAAO9J,EAAGiB,MAAOkN,KAEjB,SAAUA,EAAGtD,GACrB0uB,EAASprB,EAAElN,MAAO,SAAUglD,GACnBA,GACDiiC,EAAQ5+E,KAAK6E,GAEjBtD,OAEL,SAAU6a,GACT7a,EAAS8jH,EAAKzmC,EAAQ3vE,KAAK,SAAU7J,EAAGC,GACpC,OAAOD,EAAE5E,MAAQ6E,EAAE7E,QACnB,SAAUqE,GACV,OAAOA,EAAElN,YAIrBiY,EAAM69B,OAASy4E,EAAWkB,GAC1Bx3G,EAAMy3G,aAAelB,EAASiB,GAE9B,IAAI1nE,EAAU,SAAU2mE,EAAQx6D,EAAK57B,EAAUq3F,GAC3CjB,EAAOx6D,EAAK,SAAUhnD,EAAGtD,GACrB0uB,EAASprB,EAAG,SAAUuN,GACdA,GACAk1G,EAAcziH,GACdyiH,EAAgB,cAGhB/lH,OAGT,SAAU6a,GACTkrG,OAGR13G,EAAMu8D,OAAS+5C,EAAWxmE,GAC1B9vC,EAAM23G,aAAepB,EAASzmE,GAE9B9vC,EAAM+sE,KAAO,SAAU9wB,EAAK57B,EAAUq3F,GAClC13G,EAAM6tC,KAAKoO,EAAK,SAAUhnD,EAAGtD,GACzB0uB,EAASprB,EAAG,SAAU83C,GACdA,IACA2qE,GAAc,GACdA,EAAgB,cAEpB/lH,OAEL,SAAU6a,GACTkrG,GAAc,MAItB13G,EAAM43G,IAAM53G,EAAM+sE,KAElB/sE,EAAMivE,MAAQ,SAAUhzB,EAAK57B,EAAUq3F,GACnC13G,EAAM6tC,KAAKoO,EAAK,SAAUhnD,EAAGtD,GACzB0uB,EAASprB,EAAG,SAAU83C,GACbA,IACD2qE,GAAc,GACdA,EAAgB,cAEpB/lH,OAEL,SAAU6a,GACTkrG,GAAc,MAItB13G,EAAM0oC,IAAM1oC,EAAMivE,MAElBjvE,EAAM63G,OAAS,SAAU57D,EAAK57B,EAAU1uB,GACpCqO,EAAM3Q,IAAI4sD,EAAK,SAAUhnD,EAAGtD,GACxB0uB,EAASprB,EAAG,SAAUuX,EAAKsrG,GACnBtrG,EACA7a,EAAS6a,GAGT7a,EAAS,KAAM,CAAC5J,MAAOkN,EAAG6iH,SAAUA,OAG7C,SAAUtrG,EAAKwiE,GACd,GAAIxiE,EACA,OAAO7a,EAAS6a,GAOhB7a,EAAS,KAAM8jH,EAAKzmC,EAAQ3vE,KAJnB,SAAU04G,EAAMC,GACrB,IAAIxiH,EAAIuiH,EAAKD,SAAUriH,EAAIuiH,EAAMF,SACjC,OAAOtiH,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,IAEE,SAAUR,GAC5C,OAAOA,EAAElN,YAMzBiY,EAAMi4G,KAAO,SAAUC,EAAOvmH,GAC1BA,EAAWA,GAAY,aACvB,IAAIsvB,EAAOy0F,EAAMwC,GACbC,EAAiBl3F,EAAK1xB,OAC1B,IAAK4oH,EACD,OAAOxmH,IAGX,IAAIq9E,EAAU,GAEVl5B,EAAY,GACZvQ,EAAc,SAAU4vE,GACxBr/D,EAAU/nB,QAAQonF,IAUlBiD,EAAe,WACfD,IACA3C,EAAM1/D,EAAU5nD,MAAM,GAAI,SAAUinH,GAChCA,OAIR5vE,EAAY,WACR,IAAK4yE,EAAgB,CACjB,IAAIE,EAAc1mH,EAElBA,EAAW,aAEX0mH,EAAY,KAAMrpC,MAI1BwmC,EAAMv0F,EAAM,SAAUttB,GAClB,IAAIohH,EAAOQ,EAAS2C,EAAMvkH,IAAMukH,EAAMvkH,GAAI,CAACukH,EAAMvkH,IAC7C2kH,EAAe,SAAU9rG,GACzB,IAAItc,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAIjD,GAHID,EAAKX,QAAU,IACfW,EAAOA,EAAK,IAEZsc,EAAK,CACL,IAAI+rG,EAAc,GAClB/C,EAAME,EAAM1mC,GAAU,SAASwpC,GAC3BD,EAAYC,GAAQxpC,EAAQwpC,KAEhCD,EAAY5kH,GAAKzD,EACjByB,EAAS6a,EAAK+rG,GAEd5mH,EAAW,kBAGXq9E,EAAQr7E,GAAKzD,EACb8P,EAAMg1G,aAAaoD,IAGvBK,EAAW1D,EAAK7mH,MAAM,EAAGmF,KAAK+iB,IAAI2+F,EAAKxlH,OAAS,KAAO,GACvDmpH,EAAQ,WACR,OAlaiBr4F,EAkaQ,SAAU7qB,EAAGP,GAClC,OAAQO,GAAKw5E,EAAQrmF,eAAesM,IAnab6hH,GAoaxB,IApaS76D,EAkaGw8D,GAjaf7R,OACG3qD,EAAI2qD,OAAOvmF,EAAUy2F,IAEhCtB,EAAMv5D,EAAK,SAAUhnD,EAAGnO,EAAG0O,GACvBshH,EAAOz2F,EAASy2F,EAAM7hH,EAAGnO,EAAG0O,KAEzBshH,MA6Zc9nC,EAAQrmF,eAAegL,GApalC,IAAUsoD,EAAK57B,EAAUy2F,GAsa/B,GAAI4B,IACA3D,EAAKA,EAAKxlH,OAAS,GAAG+oH,EAActpC,OAEnC,CAODzpC,EANe,SAAXtmB,IACIy5F,MA1DK,SAAUvD,GAC3B,IAAK,IAAIruH,EAAI,EAAGA,EAAIgvD,EAAUvmD,OAAQzI,GAAK,EACvC,GAAIgvD,EAAUhvD,KAAOquH,EAEjB,YADAr/D,EAAUjmD,OAAO/I,EAAG,GAwDhBu4B,CAAeJ,GACf81F,EAAKA,EAAKxlH,OAAS,GAAG+oH,EAActpC,UAQxDhvE,EAAM24G,MAAQ,SAASC,EAAO7D,EAAMpjH,GAChC,IACIknH,EAAW,GAEM,mBAAVD,IACPjnH,EAAWojH,EACXA,EAAO6D,EACPA,EANgB,GASpBA,EAAQ3kG,SAAS2kG,EAAO,KATJ,EAUpB,IAAIE,EAAc,SAASC,EAAiBC,GAQxC,IAPA,IAAIC,EAAe,SAASlE,EAAMmE,GAC9B,OAAO,SAASC,GACZpE,EAAK,SAASvoG,EAAKhK,GACf22G,GAAgB3sG,GAAO0sG,EAAc,CAAC1sG,IAAKA,EAAKhK,OAAQA,KACzDw2G,KAGJJ,GACHC,EAASzoH,KAAK6oH,EAAalE,IAAQ6D,GAAO,KAE9C54G,EAAMo5G,OAAOP,EAAU,SAASt4F,EAAMxqB,GAClCA,EAAOA,EAAKA,EAAKxG,OAAS,IACzBwpH,GAAmBpnH,GAAUoE,EAAKyW,IAAKzW,EAAKyM,WAIrD,OAAO7Q,EAAWmnH,IAAgBA,GAGtC94G,EAAMq5G,UAAY,SAAUnB,EAAOvmH,GAE/B,GADAA,EAAWA,GAAY,cAClB4jH,EAAS2C,GAAQ,CACpB,IAAI1rG,EAAM,IAAI/b,MAAM,6DACpB,OAAOkB,EAAS6a,GAElB,IAAK0rG,EAAM3oH,OACP,OAAOoC,KAEQ,SAAf2nH,EAAyBj5F,GACzB,OAAO,SAAU7T,GACb,GAAIA,EACA7a,EAAStB,MAAM,KAAMF,WACrBwB,EAAW,iBAEV,CACD,IAAIzB,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAC7CmwB,EAAOD,EAASC,OAChBA,EACApwB,EAAKE,KAAKkpH,EAAah5F,IAGvBpwB,EAAKE,KAAKuB,GAEdqO,EAAMg1G,aAAa,WACf30F,EAAShwB,MAAM,KAAMH,OAKrCopH,CAAat5G,EAAMqgB,SAAS63F,GAA5BoB,IAGJ,IAAIC,EAAY,SAAS9C,EAAQyB,EAAOvmH,GAEpC,GADAA,EAAWA,GAAY,aACnB4jH,EAAS2C,GACTzB,EAAOpnH,IAAI6oH,EAAO,SAAU/C,EAAIxjH,GACxBwjH,GACAA,EAAG,SAAU3oG,GACT,IAAItc,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAC7CD,EAAKX,QAAU,IACfW,EAAOA,EAAK,IAEhByB,EAAS1K,KAAK,KAAMulB,EAAKtc,MAGlCyB,OAEF,CACD,IAAIq9E,EAAU,GACdynC,EAAO5oE,KAAK6nE,EAAMwC,GAAQ,SAAUvkH,EAAGhC,GACnCumH,EAAMvkH,GAAG,SAAU6Y,GACf,IAAItc,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAC7CD,EAAKX,QAAU,IACfW,EAAOA,EAAK,IAEhB8+E,EAAQr7E,GAAKzD,EACbyB,EAAS6a,MAEd,SAAUA,GACT7a,EAAS6a,EAAKwiE,OAK1BhvE,EAAMw5G,SAAW,SAAUtB,EAAOvmH,GAC9B4nH,EAAU,CAAElqH,IAAK2Q,EAAM3Q,IAAKw+C,KAAM7tC,EAAM6tC,MAAQqqE,EAAOvmH,IAG3DqO,EAAMy5G,cAAgB,SAASvB,EAAOlC,EAAOrkH,GACzC4nH,EAAU,CAAElqH,IAAKunH,EAAUZ,GAAQnoE,KAAMooE,EAAWD,IAAUkC,EAAOvmH,IAGzEqO,EAAMo5G,OAAS,SAAUlB,EAAOvmH,GAE5B,GADAA,EAAWA,GAAY,aACnB4jH,EAAS2C,GACTl4G,EAAM02G,UAAUwB,EAAO,SAAU/C,EAAIxjH,GAC7BwjH,GACAA,EAAG,SAAU3oG,GACT,IAAItc,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAC7CD,EAAKX,QAAU,IACfW,EAAOA,EAAK,IAEhByB,EAAS1K,KAAK,KAAMulB,EAAKtc,MAGlCyB,OAEF,CACD,IAAIq9E,EAAU,GACdhvE,EAAM41G,WAAWF,EAAMwC,GAAQ,SAAUvkH,EAAGhC,GACxCumH,EAAMvkH,GAAG,SAAU6Y,GACf,IAAItc,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAC7CD,EAAKX,QAAU,IACfW,EAAOA,EAAK,IAEhB8+E,EAAQr7E,GAAKzD,EACbyB,EAAS6a,MAEd,SAAUA,GACT7a,EAAS6a,EAAKwiE,OAK1BhvE,EAAMqgB,SAAW,SAAU63F,GAavB,OAZmB,SAAfwB,EAAyB9oH,GACzB,IAAIukH,EAAK,SAALA,IAIA,OAHI+C,EAAM3oH,QACN2oH,EAAMtnH,GAAOP,MAAM,KAAMF,WAEtBglH,EAAG70F,QAKd,OAHA60F,EAAG70F,KAAO,WACN,OAAQ1vB,EAAQsnH,EAAM3oH,OAAS,EAAKmqH,EAAa9oH,EAAQ,GAAI,MAE1DukH,EAEJuE,CAAa,IAGxB15G,EAAM3P,MAAQ,SAAU8kH,GACpB,IAAIjlH,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GACjD,OAAO,WACH,OAAOglH,EAAG9kH,MACN,KAAMH,EAAKN,OAAO+C,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,eAKzD,IAAIyC,EAAU,SAAU6jH,EAAQx6D,EAAKk5D,EAAIxjH,GACrC,IAAI/J,EAAI,GACR6uH,EAAOx6D,EAAK,SAAUhnD,EAAG0kH,GACrBxE,EAAGlgH,EAAG,SAAUuX,EAAKnW,GACjBzO,EAAIA,EAAEgI,OAAOyG,GAAK,IAClBsjH,EAAGntG,MAER,SAAUA,GACT7a,EAAS6a,EAAK5kB,MAGtBoY,EAAMpQ,OAAS0mH,EAAW1jH,GAC1BoN,EAAM45G,aAAerD,EAAS3jH,GAE9BoN,EAAM65G,OAAS,SAAUpqH,EAAM4wB,EAAU1uB,GACjClC,IACA4wB,EAAS,SAAU7T,GACf,GAAIA,EACA,OAAO7a,EAAS6a,GAEpBxM,EAAM65G,OAAOpqH,EAAM4wB,EAAU1uB,KAIjCA,KAIRqO,EAAM85G,SAAW,SAAUz5F,EAAU5wB,EAAMkC,GACvC0uB,EAAS,SAAU7T,GACf,GAAIA,EACA,OAAO7a,EAAS6a,GAEpB,IAAItc,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAC7CV,EAAKY,MAAM,KAAMH,GACjB8P,EAAM85G,SAASz5F,EAAU5wB,EAAMkC,GAG/BA,OAKZqO,EAAM+5G,MAAQ,SAAUtqH,EAAM4wB,EAAU1uB,GAC/BlC,IASDkC,IARA0uB,EAAS,SAAU7T,GACf,GAAIA,EACA,OAAO7a,EAAS6a,GAEpBxM,EAAM+5G,MAAMtqH,EAAM4wB,EAAU1uB,MAQxCqO,EAAMg6G,QAAU,SAAU35F,EAAU5wB,EAAMkC,GACtC0uB,EAAS,SAAU7T,GACf,GAAIA,EACA,OAAO7a,EAAS6a,GAEpB,IAAItc,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAC5CV,EAAKY,MAAM,KAAMH,GAIlByB,IAHAqO,EAAMg6G,QAAQ35F,EAAU5wB,EAAMkC,MAQ1CqO,EAAM2iE,MAAQ,SAAUs3C,EAAQC,GAI5B,SAASC,EAAQ7iH,EAAGvB,EAAM4yC,EAAKh3C,GAO7B,GANK2F,EAAE6+G,UACL7+G,EAAE6+G,SAAU,GAETZ,EAASx/G,KACVA,EAAO,CAACA,IAEM,GAAfA,EAAKxG,OAEL,OAAOyQ,EAAMg1G,aAAa,WAClB19G,EAAE8iH,OACF9iH,EAAE8iH,UAIb5E,EAAMz/G,EAAM,SAASg/G,GACjB,IAAI5mF,EAAO,CACPp4B,KAAMg/G,EACNpjH,SAA8B,mBAAbA,EAA0BA,EAAW,MAGtDg3C,EACFrxC,EAAE4gH,MAAMnqF,QAAQI,GAEhB72B,EAAE4gH,MAAM9nH,KAAK+9B,GAGX72B,EAAE+iH,WAAa/iH,EAAE4gH,MAAM3oH,SAAW+H,EAAE4iH,aACpC5iH,EAAE+iH,YAENr6G,EAAMg1G,aAAa19G,EAAE+qE,gBAjCPn1E,IAAhBgtH,IACAA,EAAc,GAoClB,IAAII,EAAU,EACVhjH,EAAI,CACJ4gH,MAAO,GACPgC,YAAaA,EACbG,UAAW,KACXE,MAAO,KACPH,MAAO,KACPjE,SAAS,EACTvvG,QAAQ,EACRxW,KAAM,SAAU2F,EAAMpE,GACpBwoH,EAAQ7iH,EAAGvB,GAAM,EAAOpE,IAE1BmjH,KAAM,WACJx9G,EAAE8iH,MAAQ,KACV9iH,EAAE4gH,MAAQ,IAEZnqF,QAAS,SAAUh4B,EAAMpE,GACvBwoH,EAAQ7iH,EAAGvB,GAAM,EAAMpE,IAEzB0wE,QAAS,WACL,IAAK/qE,EAAEsP,QAAU0zG,EAAUhjH,EAAE4iH,aAAe5iH,EAAE4gH,MAAM3oH,OAAQ,CACxD,IAAIwlH,EAAOz9G,EAAE4gH,MAAMpvF,QACfxxB,EAAEijH,OAA4B,IAAnBjjH,EAAE4gH,MAAM3oH,QACnB+H,EAAEijH,QAEND,GAAW,EACX,IAUIX,EAAKzE,EAVE,WACPoF,GAAW,EACPvF,EAAKpjH,UACLojH,EAAKpjH,SAAStB,MAAM0kH,EAAM5kH,WAE1BmH,EAAE8iH,OAAS9iH,EAAE4gH,MAAM3oH,OAAS+qH,IAAY,GACxChjH,EAAE8iH,QAEN9iH,EAAE+qE,YAGN43C,EAAOlF,EAAKh/G,KAAM4jH,KAG1BpqH,OAAQ,WACJ,OAAO+H,EAAE4gH,MAAM3oH,QAEnB6mH,QAAS,WACL,OAAOkE,GAEXE,KAAM,WACF,OAAOljH,EAAE4gH,MAAM3oH,OAAS+qH,IAAY,GAExC3yG,MAAO,YACc,IAAbrQ,EAAEsP,SACNtP,EAAEsP,QAAS,EACXtP,EAAE+qE,YAENz6D,OAAQ,YACa,IAAbtQ,EAAEsP,SACNtP,EAAEsP,QAAS,EACXtP,EAAE+qE,aAGV,OAAO/qE,GAGX0I,EAAMy6G,cAAgB,SAAUR,EAAQC,GAEpC,SAASQ,EAAcllH,EAAGC,GACxB,OAAOD,EAAEuY,SAAWtY,EAAEsY,SAiDxB,IAAIzW,EAAI0I,EAAM2iE,MAAMs3C,EAAQC,GAU5B,OAPA5iH,EAAElH,KAAO,SAAU2F,EAAMgY,EAAUpc,IAnCnC,SAAiB2F,EAAGvB,EAAMgY,EAAUpc,GAOlC,GANK2F,EAAE6+G,UACL7+G,EAAE6+G,SAAU,GAETZ,EAASx/G,KACVA,EAAO,CAACA,IAEM,GAAfA,EAAKxG,OAEL,OAAOyQ,EAAMg1G,aAAa,WAClB19G,EAAE8iH,OACF9iH,EAAE8iH,UAIb5E,EAAMz/G,EAAM,SAASg/G,GACjB,IAAI5mF,EAAO,CACPp4B,KAAMg/G,EACNhnG,SAAUA,EACVpc,SAA8B,mBAAbA,EAA0BA,EAAW,MAG1D2F,EAAE4gH,MAAMroH,OApCd,SAAuB8qH,EAAUxsF,EAAMysF,GAGrC,IAFA,IAAIC,GAAO,EACPC,EAAMH,EAASprH,OAAS,EACrBsrH,EAAMC,GAAK,CAChB,IAAIzvE,EAAMwvE,GAAQC,EAAMD,EAAM,IAAO,GACjCD,EAAQzsF,EAAMwsF,EAAStvE,KAAS,EAClCwvE,EAAMxvE,EAENyvE,EAAMzvE,EAAM,EAGhB,OAAOwvE,EAyBYE,CAAczjH,EAAE4gH,MAAO/pF,EAAMusF,GAAiB,EAAG,EAAGvsF,GAE/D72B,EAAE+iH,WAAa/iH,EAAE4gH,MAAM3oH,SAAW+H,EAAE4iH,aACpC5iH,EAAE+iH,YAENr6G,EAAMg1G,aAAa19G,EAAE+qE,WASzB83C,CAAQ7iH,EAAGvB,EAAMgY,EAAUpc,WAItB2F,EAAEy2B,QAEFz2B,GAGX0I,EAAMg7G,MAAQ,SAAUf,EAAQtsF,GAC5B,IAAIstF,GAAc,EACd/C,EAAc,GAEd8C,EAAQ,CACR9C,MAAOA,EACPvqF,QAASA,EACT0sF,UAAW,KACXE,MAAO,KACPH,MAAO,KACPc,SAAS,EACT9qH,KAAM,SAAU2F,EAAMpE,GACb4jH,EAASx/G,KACVA,EAAO,CAACA,IAEZy/G,EAAMz/G,EAAM,SAASg/G,GACjBmD,EAAM9nH,KAAK,CACP2F,KAAMg/G,EACNpjH,SAA8B,mBAAbA,EAA0BA,EAAW,OAE1DqpH,EAAME,SAAU,EACZF,EAAMX,WAAanC,EAAM3oH,SAAWo+B,GACpCqtF,EAAMX,cAGdr6G,EAAMg1G,aAAagG,EAAM34C,UAE7BA,QAAS,SAASA,IACd,IAAI44C,EAAJ,CACA,GAAqB,IAAjB/C,EAAM3oH,OAGN,OAFGyrH,EAAMZ,QAAUY,EAAME,SAASF,EAAMZ,aACxCY,EAAME,SAAU,GAIpB,IAAIphB,EAAwB,iBAAZnsE,EACFuqF,EAAMroH,OAAO,EAAG89B,GAChBuqF,EAAMroH,OAAO,EAAGqoH,EAAM3oH,QAEhC8sC,EAAKo5E,EAAK3b,EAAI,SAAUib,GACxB,OAAOA,EAAKh/G,OAGbilH,EAAMT,OAAOS,EAAMT,QACtBU,GAAU,EACVhB,EAAO59E,EAAI,WACP4+E,GAAU,EAEV,IAAI/qH,EAAOC,UACXqlH,EAAM1b,EAAI,SAAU/jG,GACZA,EAAKpE,UACLoE,EAAKpE,SAAStB,MAAM,KAAMH,KAIlCmyE,QAGR9yE,OAAQ,WACJ,OAAO2oH,EAAM3oH,QAEjB6mH,QAAS,WACL,OAAO6E,IAGf,OAAOD,GAGX,IAAIG,EAAc,SAAU9zH,GACxB,OAAO,SAAU8tH,GACb,IAAIjlH,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GACjDglH,EAAG9kH,MAAM,KAAMH,EAAKN,OAAO,CAAC,SAAU4c,GAClC,IAAItc,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GAC1B,oBAAZ+R,UACHsK,EACItK,QAAQC,OACRD,QAAQC,MAAMqK,GAGbtK,QAAQ7a,IACbmuH,EAAMtlH,EAAM,SAAU+E,GAClBiN,QAAQ7a,GAAM4N,YAOtC+K,EAAM+B,IAAMo5G,EAAY,OACxBn7G,EAAM6jE,IAAMs3C,EAAY,OAKxBn7G,EAAMo7G,QAAU,SAAUjG,EAAIkG,GAC1B,IAAIvE,EAAO,GACPwE,EAAS,GACbD,EAASA,GAAU,SAAUpmH,GACzB,OAAOA,GAEX,IAAIsmH,EAAW,WACX,IAAIrrH,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,WAClCwB,EAAWzB,EAAK2c,MAChBxkB,EAAMgzH,EAAOhrH,MAAM,KAAMH,GACzB7H,KAAOyuH,EACP92G,EAAMojE,SAAS,WACXzxE,EAAStB,MAAM,KAAMymH,EAAKzuH,MAGzBA,KAAOizH,EACZA,EAAOjzH,GAAK+H,KAAKuB,IAGjB2pH,EAAOjzH,GAAO,CAACsJ,GACfwjH,EAAG9kH,MAAM,KAAMH,EAAKN,OAAO,CAAC,WACxBknH,EAAKzuH,GAAO8H,UACZ,IAAImH,EAAIgkH,EAAOjzH,UACRizH,EAAOjzH,GACd,IAAK,IAAIvB,EAAI,EAAGC,EAAIuQ,EAAE/H,OAAQzI,EAAIC,EAAGD,IACnCwQ,EAAExQ,GAAGuJ,MAAM,KAAMF,iBAO/B,OAFAorH,EAASzE,KAAOA,EAChByE,EAASC,WAAarG,EACfoG,GAGXv7G,EAAMy7G,UAAY,SAAUtG,GAC1B,OAAO,WACL,OAAQA,EAAGqG,YAAcrG,GAAI9kH,MAAM,KAAMF,aAI7C6P,EAAM44G,MAAQ,SAAUpJ,EAAOnvF,EAAU1uB,GAErC,IADA,IAAI+pH,EAAU,GACL50H,EAAI,EAAGA,EAAI0oH,EAAO1oH,IACvB40H,EAAQtrH,KAAKtJ,GAEjB,OAAOkZ,EAAM3Q,IAAIqsH,EAASr7F,EAAU1uB,IAGxCqO,EAAM27G,YAAc,SAAUnM,EAAOnvF,EAAU1uB,GAE3C,IADA,IAAI+pH,EAAU,GACL50H,EAAI,EAAGA,EAAI0oH,EAAO1oH,IACvB40H,EAAQtrH,KAAKtJ,GAEjB,OAAOkZ,EAAM02G,UAAUgF,EAASr7F,EAAU1uB,IAG9CqO,EAAM47G,IAAM,WACR,IAAIC,EAAM1rH,UACV,OAAO,WACH,IAAIsU,EAAOlS,KACPrC,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,WAClCwB,EAAWzB,EAAK2c,MACpB7M,EAAM4mG,OAAOiV,EAAK3rH,EAAM,SAAU4rH,EAAS3G,EAAIwE,GAC3CxE,EAAG9kH,MAAMoU,EAAMq3G,EAAQlsH,OAAO,CAAC,WAC3B,IAAI4c,EAAMrc,UAAU,GAChB4rH,EAAWppH,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GACrDwpH,EAAGntG,EAAKuvG,QAGhB,SAAUvvG,EAAKwiE,GACXr9E,EAAStB,MAAMoU,EAAM,CAAC+H,GAAK5c,OAAOo/E,QAK9ChvE,EAAMg8G,QAAU,WACd,OAAOh8G,EAAM47G,IAAIvrH,MAAM,KAAMsC,MAAMjK,UAAU63E,QAAQt5E,KAAKkJ,aAG5D,IAAI8rH,EAAa,SAAUxF,EAAQoF,GAC/B,IAAIK,EAAK,WACL,IAAIz3G,EAAOlS,KACPrC,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,WAClCwB,EAAWzB,EAAK2c,MACpB,OAAO4pG,EAAOoF,EAAK,SAAU1G,EAAIwE,GAC7BxE,EAAG9kH,MAAMoU,EAAMvU,EAAKN,OAAO,CAAC+pH,MAEhChoH,IAEJ,GAAIxB,UAAUZ,OAAS,EAAG,CACtB,IAAIW,EAAOyC,MAAMjK,UAAUwF,MAAMjH,KAAKkJ,UAAW,GACjD,OAAO+rH,EAAG7rH,MAAMkC,KAAMrC,GAGtB,OAAOgsH,GAGfl8G,EAAMm8G,UAAY7F,EAAW2F,GAC7Bj8G,EAAMo8G,gBAAkB7F,EAAS0F,GAEjCj8G,EAAMq8G,QAAU,SAAUlH,EAAIxjH,IAC1B,SAAS2uB,EAAK9T,GACV,GAAIA,EAAK,CACL,GAAI7a,EACA,OAAOA,EAAS6a,GAEpB,MAAMA,EAEV2oG,EAAG70F,GAEPA,IAIiC/5B,EAAOD,QACxCC,EAAOD,QAAU0Z,OAIX9S,KAAAC,EAAA,WACF,OAAO6S,GADL3P,MAAA/J,EAAC,OAADC,EAAAD,QAAA6G,GAhlCb,yECTD,SAAA2uB,GAAA,IAAA02B,EAAA5rD,EAAA,GAAA01H,EAAA11H,EAAA,GAAA21H,EAAA31H,EAAA,IAAA41H,EAAA51H,EAAA2B,EAAAg0H,GASM9gG,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAkBrBokC,GAAmB,EAQjBu8D,EAA8B,6BAO9BC,EACA,wDAKSjkG,EAAA,EAAA,WAEX1f,EAAAA,QAAQgJ,IAAM,SAASC,EAAOC,GAe1B,OATAwZ,EAAOy6B,MAAM,UAAWl0C,EAAOC,GACZ,iBAARA,IAC6B,IAA7BA,EAAIpR,QAAQ,cAC0C,IAAtDoR,EAAIpR,QAAQ,uCAEnBmR,EAAQjJ,EAAAA,QAAQiE,SAASG,MAIrB6E,GACR,KAAKjJ,EAAAA,QAAQiE,SAASC,OAGO,IAArBijD,GACOu8D,EAA4BhtH,KAAKwS,KACxCwZ,EAAOrZ,MAAM,yBACb89C,GAAmB,GAEvB,MACJ,KAAKnnD,EAAAA,QAAQiE,SAASG,KAClBse,EAAOnZ,KAAP,YAAA1S,OAAwBqS,IACxB,IAAM06G,EAAmBD,EAAuB5rB,KAAK7uF,GAEjD06G,GAAgD,IAA5BA,EAAiBptH,SACrC2wD,EAAkBjsC,SAAS0oG,EAAiB,GAAI,IAChDlhG,EAAOrZ,MAAP,2BAAAxS,OAAwCswD,KAE5C,MACJ,KAAKnnD,EAAAA,QAAQiE,SAASjB,MACtB,KAAKhD,EAAAA,QAAQiE,SAASI,MAElB6E,EAAG,YAAArS,OAAeqS,GAClBu1B,EAAAA,EAAqBC,iBAAiB,IAAIhnC,MAAMwR,IAChDwZ,EAAOtZ,MAAMF,KAarBlJ,EAAAA,QAAQonD,mBAAqB,WACzB,OAAOD,GAGXnnD,EAAAA,QAAQ2lD,gBAAkB,SAASryC,GAC/B,OAAQA,GACR,KAAKtT,EAAAA,QAAQ+C,OAAOC,MAChB,MAAO,QACX,KAAKhD,EAAAA,QAAQ+C,OAAOE,WAChB,MAAO,aACX,KAAKjD,EAAAA,QAAQ+C,OAAOG,SAChB,MAAO,WACX,KAAKlD,EAAAA,QAAQ+C,OAAOI,eAChB,MAAO,iBACX,KAAKnD,EAAAA,QAAQ+C,OAAOK,SAChB,MAAO,WACX,KAAKpD,EAAAA,QAAQ+C,OAAOM,UAChB,MAAO,YACX,KAAKrD,EAAAA,QAAQ+C,OAAOO,aAChB,MAAO,eACX,KAAKtD,EAAAA,QAAQ+C,OAAOQ,cAChB,MAAO,gBACX,KAAKvD,EAAAA,QAAQ+C,OAAOS,SAChB,MAAO,WACX,QACI,MAAO,+tCCvHnB,IAAMkf,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAsBnB8gG,EAA0B,GAO1BC,cAMF,SAAAA,EAAY7/F,GAAM,IAAAod,EAAA,mGAAAJ,CAAAznC,KAAAsqH,IACdziF,EAAAH,EAAA1nC,KAAA2nC,EAAA2iF,GAAA51H,KAAAsL,QACKuqH,YAAc,EACnB1iF,EAAKpd,KAAOA,EACZod,EAAK2iF,kBAAoB,IAAIpqH,MAAMiqH,GAJrBxiF,wPANa44E,EAAAA,yCAiB1BhjG,GACDy6D,EAAAvwC,EAAA2iF,EAAAn0H,WAAA,OAAA6J,MAAAtL,KAAAsL,KAAWyd,GACXjX,EAAAA,QAAQ6E,aAAa,OAAQ,8CAa5BqD,EAAK26C,EAASz5C,EAAOmI,GACtB/X,KAAKyqH,6BAEL,IAAMhuG,EAAK/V,OAAAA,EAAAA,IAAAA,CAAI,CACX8K,KAAM,MACN+K,GAAI7N,IAGR+N,EAAG7nB,EAAE,OAAQ,CAAE4b,MAAOhK,EAAAA,QAAQS,GAAG0lD,OACjC3sD,KAAKyd,WAAWnF,OAAOmE,EAAI4sC,EAASz5C,EAAOmI,yCAYjCskD,GAAqC,IAAA3wB,EAAA1rC,KAA1Bq1D,EAA0Bz3D,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GA7EjC,IA8Ed,GAAIoC,KAAK4xE,WAAY,CACjB,IAAM5sC,EAAS,8BAKf,OAHAC,EAAAA,EAAqBC,iBAAiB,IAAIhnC,MAAM8mC,SAChD9b,EAAOtZ,MAAMo1B,GAIjBhlC,KAAK4xE,WAAaz9E,OAAOq2C,YAAY,WACjCkB,EAAKkhB,KAAKyP,EAAW,WACjB3wB,EAAK6+E,YAAc,GACpB,SAAA36G,GACC87B,EAAK6+E,aAAe,EACpB,IAAMvlF,EAAM,QAAA3nC,OAAWuS,EAAQ,QAAU,WAErC87B,EAAK6+E,aAnFF,GAoFHtlF,EAAAA,EAAqBC,iBAAiB,IAAIhnC,MAAM8mC,IAChD9b,EAAOtZ,MAAMo1B,EAAQp1B,IASrBsZ,EAAOnZ,KAAKi1B,EAAQp1B,IAnGnB,OAsGVylD,GACHnsC,EAAOpZ,KAAP,iCAAAzS,OAA6Cg4D,EAA7C,+CAOIr1D,KAAK4xE,aACLz9E,OAAO2zC,cAAc9nC,KAAK4xE,YAC1B5xE,KAAK4xE,WAAa,KAClB5xE,KAAKuqH,YAAc,EACnBrhG,EAAOpZ,KAAK,+EAShB9P,KAAKwqH,kBAAkB3sH,MAAK,IAAI4U,MAAOC,WAGnC1S,KAAKwqH,kBAAkBxtH,OAASqtH,GAChCrqH,KAAKwqH,kBAAkBj0F,qDAa3B,IAAMm0F,EAAgB1qH,KAAKwqH,kBAAkB7uH,QAM7C+uH,EAAc7sH,MAAK,IAAI4U,MAAOC,WAE9B,IAAIi4G,EAAc,EACdC,EAAaF,EAAc,GAkB/B,OAhBAA,EAAczpH,QAAQ,SAAAjC,GAClB,IAAM6rH,EAAkB7rH,EAAI4rH,EAExBC,EAAkBF,IAClBA,EAAcE,GAGlBD,EAAa5rH,IAMjB2rH,GAzKc,IA4KP7pH,KAAK6gC,IAAIgpF,EAAa,wCAQtBzkG,EAAA,EAAA,SAASuE,GACpBjkB,EAAAA,QAAQ8J,oBAAoB,OAAQ,IAAIg6G,EAAqB7/F,ssCC3LjE,IAAMvB,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAOnBuhG,gaAA6BrK,EAAAA,yCAK1BhjG,GACDy6D,EAAAvwC,EAAAmjF,EAAA30H,WAAA,OAAA6J,MAAAtL,KAAAsL,KAAWyd,GAEXzd,KAAKyd,WAAWxF,WACZjY,KAAK+qH,OAAOh1H,KAAKiK,MAdV,kBAc6B,KAAM,MAAO,KAAM,qCAOxDyc,GACHyM,EAAOpZ,KAAK,UAAW2M,gCAatBF,EAAI3b,EAAMwvB,EAAU46F,EAAU9vC,GAAa,IAAArzC,EAAA7nC,KAC5C,OAAO,IAAIorC,QAAQ,SAACC,EAASC,GACzB,GAAK4vC,EAAL,CAKA,IAAMhgF,EAAMwL,OAAAA,EAAAA,IAAAA,CAAI,CACZ8K,KAAM,MACN+K,GAAI2+D,IAGRhgF,EAAItG,EAAE,OAAQ,CACV4b,MAhDG,kBAiDH+L,GAAAA,EACA3b,KAAAA,IAEJ1F,EAAItG,EAAE,SAAU,CACZE,KAAM,cACNU,MAAO46B,IACR1f,KAECs6G,GAAYA,EAAShuH,QACrB9B,EAAItG,EAAE,SAAU,CACZE,KAAM,kBACNU,MAAOw1H,IACRt6G,KAGPm3B,EAAKpqB,WAAWnF,OACZpd,EACA,SAAA+U,GACIiZ,EAAOpZ,KAAK,eAAgBG,GAG5B,IAAMkN,EAAWo+B,EAAEtrC,GAAQ2pB,KAAK,OAAO7sB,KAAK,OAE5C86B,EAAKojF,aAAe9tG,EAASuB,OAAO,QAAQ1hB,QAC5CksB,EAAOpZ,KAAP,2BAAAzS,OAAuCwqC,EAAKojF,eAC5C5/E,KAEJ,SAAAz7B,GACIsZ,EAAOpZ,KAAK,cAAeF,GAC3B07B,EAAO17B,UAxCX07B,EAAO,IAAIptC,MAAM,uDAkDpB,IAAAwtC,EAAA1rC,KACL,OAAO,IAAIorC,QAAQ,SAACC,EAASC,GACzB,IAAKI,EAAKu/E,aAIN,OAHA3/E,EAAO,IAAIptC,MAAM,6BACjBgrB,EAAOnZ,KAAK,uBAKhB,IAAM7U,EAAMwL,OAAAA,EAAAA,IAAAA,CAAI,CACZ8K,KAAM,MACN+K,GAAImvB,EAAKu/E,eAGb/vH,EAAItG,EAAE,SAAU,CACZ4b,MAvGG,oBA0GPk7B,EAAKjuB,WAAWnF,OAAOpd,EAAK,SAAA+U,GACxBiZ,EAAOpZ,KAAK,iBAAkBG,GAC9By7B,EAAKu/E,aAAe,KACpB5/E,KACD,SAAAz7B,GACCsZ,EAAOpZ,KAAK,gBAAiBF,GAC7B87B,EAAKu/E,aAAe,KACpB3/E,EAAO,IAAIptC,MAAM,2DASlBgoB,EAAA,EAAA,WACX1f,EAAAA,QAAQ8J,oBAAoB,OAAQ,IAAIw6G,qrCC7HtCI,cAIF,SAAAA,IAAc,IAAArjF,EAAA,mGAAAJ,CAAAznC,KAAAkrH,IACVrjF,EAAAH,EAAA1nC,KAAA2nC,EAAAujF,GAAAx2H,KAAAsL,QACKwP,IAAM,GAFDq4B,wPAJU44E,EAAAA,yCAanBhjG,GACDy6D,EAAAvwC,EAAAujF,EAAA/0H,WAAA,OAAA6J,MAAAtL,KAAAsL,KAAWyd,GACXzd,KAAKyd,WAAWpG,SAAWrX,KAAKmrH,YAAYp1H,KAAKiK,MACjDA,KAAKyd,WAAWnG,UAAYtX,KAAKorH,YAAYr1H,KAAKiK,0CAO1CkY,GACRlY,KAAKwP,IAAI3R,KAAK,EAAE,IAAI4U,MAAOC,UAAW,WAAYwF,wCAO1CA,GACRlY,KAAKwP,IAAI3R,KAAK,EAAE,IAAI4U,MAAOC,UAAW,WAAYwF,yCAO3CgO,EAAA,EAAA,WACX1f,EAAAA,QAAQ8J,oBAAoB,SAAU,IAAI46G,4OC1CzBG,aAIjB,SAAAA,iGAAc5jF,CAAAznC,KAAAqrH,GACVrrH,KAAKsrH,cAAgB,KACrBtrH,KAAKurH,aAAe,kEAQVC,GAAmB,IAAA3jF,EAAA7nC,KAC7BwrH,EAAkBj0G,aAAe,SAAAd,GAGzBoxB,EAAKyjF,gBAAkB70G,EAAM,IAC7BoxB,EAAK0jF,cAAe,IAAI94G,MAAOC,WAEnCm1B,EAAKyjF,cAAgB70G,qDAUzB,OAAOzW,KAAKurH,cACN,IAAI94G,MAAOC,UAAY1S,KAAKurH,aAC5B,23BC/Bd,IAAMriG,EAASnuB,EAAQ,GAAqBiuB,UAAUO,GAKhDkiG,EAAsB,CAAE,WAAY,OAAQ,OAAQ,QACpDC,EAAkC,CAAE,WAAY,OAAQ,QAQ9D,SAASC,EAAkB1oH,EAAGC,GAC1B,IAAIopC,EAAM,EAMV,OAJAo/E,EAAgClxC,KAAK,SAAA1kF,GAAG,OAC8B,KAAjEw2C,EAAQrpC,EAAEnN,GAAOoN,EAAEpN,GAAS,EAAQmN,EAAEnN,GAAOoN,EAAEpN,KAAU,KAGvDw2C,EAUX,SAASs/E,EAAYl/D,EAAYv5C,GAC7B,IAAM04G,EAAmBn/D,EAAW5/C,KAAK6+G,GAAmBtX,OACxD,SAACyX,EAAkBh/D,GAAnB,MAAA,GAAAzvD,OACIouH,EAAoBpX,OAChB,SAAC37D,EAAK5iD,EAAKkjD,GAAX,OACIN,GACe,IAARM,EAAY,GAAK,MACjB8T,EAASh3D,GAAOg3D,EAASh3D,GAAO,KAC3C,IANR,MAOK,IACHi2H,EAAiB54G,EAASrG,OAAOunG,OACnC,SAAC37D,EAAKsvC,GAAN,MAAA,GAAA3qF,OAAqBq7C,EAAMsvC,EAA3B,MAAuC,IAE3C,OAAOvjF,OAAAA,EAAAA,SAAAA,CAASonH,EAAmBE,OAMlBzgE,cAOjB,SAAAA,IAAkE,IAAAzjB,MAAtDpqB,EAAsD7f,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAzC,GAAIgP,EAAqChP,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAA9B,6BAIhC,+FAJ8D6pC,CAAAznC,KAAAsrD,KAC9DtrD,OAAA2nC,EAAA2jB,GAAA52D,KAAAsL,OAAA6nC,oDACKj7B,KAAOA,EACZi7B,EAAKmkF,MAAQvuG,EAAWuuG,OACnBnkF,EAAKmkF,MACN,MAAM,IAAI9tH,MACN,uDAIR2pC,EAAKokF,sBAAwBh3H,OAAOY,OAAO,MAC3CgyC,EAAKqkF,aAAej3H,OAAOY,OAAO,MAClCgyC,EAAK3jB,QAAU,GACf2jB,EAAKyvE,MAAQ,IAAIxrF,IAEjB,IAAM0iC,EAAO/wC,EAAW+wC,KAfsC,OAiB9DA,EAAKxb,YAAYoZ,EAAAA,EAAW70D,gBACxB,SAAA84D,GAAI,OAAIxoB,EAAKskF,aAAa97D,KAC9B7B,EAAKxb,YAAYoZ,EAAAA,EAAW50D,kBACxB,SAAA64D,GAAI,OAAIxoB,EAAKukF,gBAAgB/7D,KACjCp7D,OAAOy5B,KAAK8/B,EAAK8oD,OAAOr2G,QAAQ,SAAAyN,GAC5Bm5B,EAAKskF,aAAa39D,EAAK8oD,MAAM5oG,MAGjClI,EAAAA,QAAQ6E,aAAa,OAAQ,mCAC7Bw8B,EAAKmkF,MAAMtgE,WAAWllD,EAAAA,QAAQS,GAAGolH,MACjC5uG,EAAWxF,WAAW4vB,EAAKykF,YAAYv2H,KAAjB88C,EAAAA,EAAAhL,KAA6BrhC,EAAAA,QAAQS,GAAGolH,MAE9DxkF,EAAK0kF,iBAAmB1kF,EAAK2kF,yBAAyBz2H,KAA9B88C,EAAAA,EAAAhL,KA7BsCA,wPAPpCD,EAAAA,+CA8CnBogD,GAAyB,IAAhBC,EAAgBrqF,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,IAAAA,UAAA,GAChCoC,KAAKgsH,MAAMtgE,WAAWs8B,GACtBhoF,KAAKysH,mBACDxkC,GACAjoF,KAAKioF,+CAWCD,GAAyB,IAAhBC,EAAgBrqF,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,IAAAA,UAAA,GACnCoC,KAAKgsH,MAAM9jC,cAAcF,GACzBhoF,KAAKysH,mBACDxkC,GACAjoF,KAAKioF,0CAQTjoF,KAAKs3G,MAAMr2G,QAAQ,SAAAovD,GAAI,OAAIA,EAAKx4C,qDASxBnJ,GAAqB,IAAAg9B,EAAA1rC,KAAhB+X,EAAgBna,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAN,IACjBiU,EACAnD,KAAO1O,KAAKksH,aAAelsH,KAAKksH,aAAax9G,GAAO,KAE1D,KAAKmD,GAAUA,EAAKqS,WAAWlkB,KAAKisH,uBAAwB,CACxD,IAAMr/G,EAAOiF,EAAI,GAAAxU,OAAMwU,EAAKjF,KAAX,KAAAvP,OAAmBwU,EAAKqS,SAAY,KAErD,OAAOlkB,KAAK0sH,cAAch+G,EAAK9B,EAAMmL,GAChCmwB,KAAK,SAAAS,GAA8B,IAA3Bx1B,EAA2Bw1B,EAA3Bx1B,SAAUu5C,EAAiB/jB,EAAjB+jB,WACf,GAAI76C,EAAM,CACN,IAAM86G,EAAMf,EACRxrH,MAAMQ,KAAK8rD,GACXtsD,MAAMQ,KAAKuS,IAETy5G,EAAY,GAAAvvH,OAAMwU,EAAKjF,KAAX,KAAAvP,OAAmBsvH,GAErC,OAAIC,IAAiBhgH,GACjB8+B,EAAKugF,sBAAsBW,GAAgBz5G,EAEpCA,GAIPu4B,EAAKugF,sBAAsBW,GACpBlhF,EAAKugF,sBAAsBW,IAGtC1jG,EAAOtZ,MAAP,iBAAAvS,OAA8BuP,EAA9B,kBAAAvP,OACIuvH,IAEGxhF,QAAQE,OAAO,gCAKtC,OAAOF,QAAQC,QAAQrrC,KAAKisH,sBAAsBp6G,EAAKqS,2DASlCxV,GAAqB,IAAhBqJ,EAAgBna,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAN,IACpC,OAAOoC,KAAK0sH,cAAch+G,EAAK,KAAMqJ,yCAW3BrJ,EAAK9B,EAAMmL,GAAS,IAAAo1B,EAAAntC,KAC9B,OAAO,IAAIorC,QAAQ,SAACC,EAASC,GAAV,OACf6B,EAAK6+E,MAAMl8G,KAAKpB,EAAK9B,EAAM,SAAAuP,GACvB,IAAMhJ,EAAW,IAAI2Y,IACf4gC,EAAa,IAAI5gC,IAEvByvB,EAAEp/B,GACGyd,KAAK,kBACL0hB,KACG,SAACM,EAAG/vC,GAAJ,OAAWsH,EAASsY,IAAI5f,EAAGuC,aAAa,UAChDmtC,EAAEp/B,GACGyd,KAAK,mBACL0hB,KACG,SAACM,EAAG/vC,GAAJ,OAAW6gD,EAAWjhC,IAAI,CACtBja,KAAM3F,EAAGuC,aAAa,QACtBtZ,KAAM+W,EAAGuC,aAAa,QACtBy+G,SAAUhhH,EAAGuC,aAAa,gBAEtCi9B,EAAQ,CACJl4B,SAAAA,EACAu5C,WAAAA,KACLphB,EAAQvzB,0CASNs4C,GACTrwD,KAAKs3G,MAAM7rF,IAAI4kC,GACfA,EAAKrd,YAAYoZ,EAAAA,EAAW7zD,gBAAiByH,KAAKusH,kBAClDvsH,KAAK8sH,wBAAwBz8D,2CAQjBA,GACZrwD,KAAKs3G,MAAMxoF,OAAOuhC,GAClBA,EAAKvjC,eAAes/B,EAAAA,EAAW7zD,gBAAiByH,KAAKusH,kEAOjCl8D,GACpBA,EAAKs+B,cAAc,IAAK,CACpBvmF,WAAY,CACRoI,MAAOhK,EAAAA,QAAQS,GAAGolH,KAClBxoH,KA3OH,QA4OG+I,KAAM5M,KAAK4M,KACXoU,IAAKhhB,KAAKkkB,2DAQE,IAAA+pB,EAAAjuC,KAEpBA,KAAKs3G,MAAMr2G,QAAQ,SAAAovD,GAAI,OAAIpiB,EAAK6+E,wBAAwBz8D,gDAOxDrwD,KAAKkkB,QACC0nG,EAAY5rH,KAAKgsH,MAAMe,YAAa/sH,KAAKgsH,MAAMgB,WAErDhtH,KAAKitH,4DAOG/0G,GACR,IAAMtX,EAAOsX,EAAO9J,aAAa,QAC3Bi9C,EAAOnzC,EAAOgI,cAAc,KAC5BgE,EAAUmnC,EAAKj9C,aAAa,OAC5BxB,EAAOy+C,EAAKj9C,aAAa,QACzB8+G,EAAaltH,KAAKksH,aAAatrH,GAUrC,OARAZ,KAAKksH,aAAatrH,GAAQ,CAAEsjB,QAAAA,EACxBtX,KAAAA,GACAsgH,GAAcA,EAAWhpG,UAAYA,GACrClkB,KAAK4qB,aAAa2C,KAAK6+B,EAAAA,EAAWtzD,4BAC9B8H,IAID,mDAOc8N,GACjBA,KAAO1O,KAAKksH,qBACLlsH,KAAKksH,aAAax9G,gGC9SrC,SAAA6a,GAAA,IAAML,EAASnuB,EAAQ,GAAqBiuB,UAAUO,GAOtD,SAAS4sE,EAAiB1gD,EAAYygD,GAClC,IAAMlgD,EAAaP,EAAWkiC,WAE9B,IAAK3hC,EACD,MAAM,IAAI93C,MAAM,oDAEpB8B,KAAKmtH,WACCj3B,EAAelqE,eAAeohG,iBAAiBp3E,GACrD9sB,EAAOrZ,MAAM,0BAGjBsmF,EAAiBhgG,UAAU4/F,UAAY,SAASC,EAAOC,EAAU7gF,GAC7DpV,KAAKmtH,WAAWE,WAAWr3B,EAAOC,GAAY,IAAK7gF,GAAS,MAGhEphB,EAAOD,QAAUoiG,mTCdjB,IAUqBnK,aAMjB,SAAAA,EAAY/5C,gGAAYxK,CAAAznC,KAAAgsF,GACpBhsF,KAAKiyC,WAAaA,EAElBA,EAAW1H,iBACPkK,EAAAA,0BACAz0C,KAAKstH,YAAYv3H,KAAKiK,OAE1BA,KAAKutH,SAAWvtH,KAAKiyC,WAAW4mB,sEASxB55D,EAAIw3C,IAKPz2C,KAAKiyC,WAAW6nB,eACdrjB,GAtCiB,IAuChBx3C,IAAOe,KAAKutH,UACLvtH,KAAKiyC,WAAW47C,qBAAqB1yB,WAIpDn7D,KAAKiyC,WAAWukB,IAAI5rC,aAAa2C,KAC7B6Y,EAAAA,EAAUzf,yBACV1nB,mVC/CZ,IAAMiqB,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAMJuqB,aAWjB,SAAAA,EAAY9nB,EAAgB6nB,EAAOsQ,GAC/B,+FADwC1c,CAAAznC,KAAA8zC,IACnC9nB,IAAmB6nB,EACpB,MAAM,IAAIxyC,UACN,kDACD,GAAI2qB,GAAkB6nB,EACzB,MAAM,IAAIxyC,UACN,qDA4BR,GAzBI2qB,EACA9C,EAAOrZ,MAAM,qCAEbqZ,EAAOrZ,MAAP,6BAAAxS,OAA0Cw2C,EAA1C,MAKJ7zC,KAAKoyC,SAAW,KAGhBpyC,KAAK87E,cAAgB33B,EAIrBnkD,KAAK06E,MAAQ,KAGb16E,KAAKwtH,oBAAqB,EAG1BxtH,KAAKytH,mBAAoB,EAIrBzhG,EAAgB,CAChB,IAAM0hG,EACA1hG,EAAe2hG,kBACb,mBAAoB,CAChB56G,SAAU,uCAItB/S,KAAK4tH,eAAeF,GACpB1tH,KAAK06E,MAAQ,mBAGN7mC,IACP7zC,KAAKwtH,oBAAqB,EAC1BxtH,KAAK6tH,OAASh6E,EACd7zC,KAAK8tH,kFAWT,IAAMC,EAAK,IAAIvpG,UAAUxkB,KAAK6tH,QAG9B7tH,KAAK4tH,eAAeG,GACpB/tH,KAAK06E,MAAQ,8DAQS,IAAA7yC,EAAA7nC,KAClBguH,EAAW,EAWfhuH,KAAKiuH,cAAgBruH,WATN,SAATsuH,IACErmF,EAAKsmF,WAGTtmF,EAAKimF,eAAejmF,EAAKgmF,QACzBG,EAAWltH,KAAK6iB,IAAe,EAAXqqG,EAAc,IAClCnmF,EAAKomF,cAAgBruH,WAAWsuH,EAAmB,IAAXF,KAGO,IAAXA,oDASpChuH,KAAKiuH,gBACLr2G,aAAa5X,KAAKiuH,eAClBjuH,KAAKiuH,mBAAgBtzH,qDAUHyzH,GAAY,IAAA1iF,EAAA1rC,KAClC,GAAKA,KAAKwtH,mBAAV,CADkC,IAI1B7nG,EAAiByoG,EAAjBzoG,KAAMpM,EAAW60G,EAAX70G,OAEdiR,EAAAA,EAAW6K,cAAcyL,OAAAA,EAAAA,EAAAA,CAA+Bnb,EAAMpM,IAC9DvZ,KAAKwtH,oBAAqB,EAC1BxtH,KAAK87E,cAAcl4B,KAAKxd,EAAAA,EAAUhK,kBAAmB,WACjDsP,EAAK2iF,yBACL3iF,EAAK8hF,oBAAqB,IAE9BxtH,KAAKsuH,2DAkBL,GAHAtuH,KAAKytH,mBAAoB,EACzBztH,KAAKquH,yBACLruH,KAAKwtH,oBAAqB,EACtBxtH,KAAKoyC,SAAU,CACf,IACIpyC,KAAKoyC,SAAS3sB,QAChB,MAAO7V,IAET5P,KAAKoyC,SAAW,uCAUpB,OAAOpyC,KAAKoyC,WAA0C,SAA7BpyC,KAAKoyC,SAAShwB,YAChCpiB,KAAKoyC,SAAShwB,aAAeoC,UAAU+pG,0CAYtChyG,EAAI6e,GACZp7B,KAAK0X,MAAM,CACP82G,aAAc,kBACdC,WAAYrzF,EACZ7e,GAAAA,gDAQY/mB,GAChB,IAAMk5H,EAAa,CACfF,aAAc,oBACd78B,MAAOn8F,GAGXwK,KAAK0X,MAAMg3G,GACXxlG,EAAO1Z,IAAP,yBAAAnS,OAAoC7H,sDAUdmjE,GACtBzvC,EAAO1Z,IACH,kEACAmpD,GAEJ34D,KAAK0X,MAAM,CACP82G,aAAc,6BACdG,eAAgBh2D,GAAc,4DAYTi2D,GACzB1lG,EAAO1Z,IACH,oEACAo/G,GAEJ5uH,KAAK0X,MAAM,CACP82G,aAAc,gCACdK,kBAAmBD,+DASQE,GAC/B5lG,EAAO1Z,IAAI,kDAAA,uBAAAnS,OACkByxH,EADlB,YAEX9uH,KAAK0X,MAAM,CACP82G,aAAc,0BACd95E,eAAgBo6E,2CAOTC,GAAS,IAAA5hF,EAAAntC,KACdmkD,EAAUnkD,KAAK87E,cAErBizC,EAAQtqG,OAAS,WACbyE,EAAOpZ,KAAP,GAAAzS,OAAe8vC,EAAKutC,MAApB,oBAQAv2B,EAAQ52B,KAAK6Y,EAAAA,EAAUhK,oBAG3B2yF,EAAQpqG,QAAU,SAAAuQ,GAGK,cAAfiY,EAAKutC,OACLxxD,EAAOtZ,MAAP,kBAAAvS,OAA+B63B,EAAM7lB,WAI7C0/G,EAAQhqG,UAAY,SAAA4jB,GAAc,IAE1B7sC,EAFe0H,EAAWmlC,EAAXnlC,KAInB,IACI1H,EAAMib,KAAKuK,MAAM9d,GACnB,MAAOoM,GAML,OALAq1B,EAAAA,EAAqBC,iBAAiBt1B,QACtCsZ,EAAOtZ,MACH,4CACApM,EAAMoM,GAKd,IAAM4+G,EAAe1yH,EAAI0yH,aAEzB,OAAQA,GACR,IAAK,qCAED,IAAMQ,EAA0BlzH,EAAIkzH,wBAEpC9lG,EAAOpZ,KACH,uCACAk/G,GACJ7qE,EAAQ52B,KACJ6Y,EAAAA,EAAUzf,yBACVqoG,GACJ,MAEJ,IAAK,wCACD,IAAMC,EAAWnzH,EAAImzH,SACfr2D,EAA0B,SAAf98D,EAAIm5E,OAErB/rD,EAAOpZ,KAAP,uCAAAzS,OAC2C4xH,EAD3C,cAAA5xH,OAEQu7D,IACRzU,EAAQ52B,KAAK6Y,EAAAA,EAAU/J,6BACnB4yF,EAAUr2D,GAEd,MAEJ,IAAK,kBACDzU,EAAQ52B,KACJ6Y,EAAAA,EAAUvf,0BAA2B/qB,EAAI8E,KACzC9E,EAAI2yH,YAER,MAEJ,IAAK,4BAED,IAAMn6E,EAAiBx4C,EAAIw4C,eAE3BprB,EAAOpZ,KAAK,6BACRwkC,EAAgBx4C,GACpBqoD,EAAQ52B,KAAK6Y,EAAAA,EAAU9J,uBACnBgY,EAAgBx4C,GAEpB,MAEJ,IAAK,sBACD,IAAM2jE,EAAa3jE,EAAI2jE,WAEvBv2C,EAAOpZ,KAAP,mCAAAzS,OAA+CoiE,IAC/Ctb,EAAQ52B,KAAK6Y,EAAAA,EAAU5J,oBAAqBijC,GAC5C,MAEJ,QACIv2C,EAAOrZ,MAAM,mCAAoC/T,GAMjDqoD,EAAQ52B,KAAR,mBAAAlwB,OAAgCmxH,GAAgB1yH,KAKxDizH,EAAQlqG,QAAU,SAAAqQ,GACdhM,EAAOpZ,KAAP,qBAAAzS,OAAiC8vC,EAAKsgF,kBAAoB,SAAW,WAElD,cAAftgF,EAAKutC,QACAvtC,EAAKsgF,oBACNvkG,EAAOtZ,MAAP,mBAAAvS,OAAgC63B,EAAMvP,KAAtC,KAAAtoB,OAA8C63B,EAAM3b,SACpD4zB,EAAK+hF,0BAA0Bh6F,KAKvCiY,EAAKiF,SAAW,MAIpBpyC,KAAKoyC,SAAW28E,gCAUdL,GACF,IAAMK,EAAU/uH,KAAKoyC,SAErB,IAAKpyC,KAAKmuH,SAEN,MADAjlG,EAAOtZ,MAAM,2CACP,IAAI1R,MAAM,qBAGpB6wH,EAAQv3G,KAAKT,KAAKyK,UAAUktG,iCAzP5B,OAAO1uH,KAAK06E,i3BC/HpB,IAAMxxD,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GACnB4lG,EAAmB,EAInBC,EAAiB,CAHC,IACA,IACA,KAqCT,SAAS/5E,EAChBmhB,EACAv3D,EACA+9D,EACAnoB,EACA/hB,EACAsgB,EACA3hC,GAAS,IAAAo2B,EAAA7nC,KAUbA,KAAKqvH,uBAAgD,IAAxB59G,EAAQgtD,aAUrCz+D,KAAKyjE,qBAAsB,EAO3BzjE,KAAKw2D,IAAMA,EAMXx2D,KAAKf,GAAKA,EAOVe,KAAKozC,MAAQA,EASbpzC,KAAK41C,aAAe,IAAIjrB,IAMxB3qB,KAAKmyC,YAAc,IAAIxnB,IAQvB3qB,KAAKsvH,cAAgB,GAoBrBtvH,KAAKuvH,WAAa,IAAI5kG,IAKtB3qB,KAAKwvH,WAAa,KAKlBxvH,KAAKyvH,YAAc,KAMnBzvH,KAAKg9D,eAAiBA,EAGtBh9D,KAAK0vH,sBAAwB1vH,KAAK0vH,sBAAsB35H,KAAKiK,MAC7DA,KAAKg9D,eAAerwC,GAChBu1F,EAAAA,EACAliH,KAAK0vH,uBAET1vH,KAAK2vH,kBAAoB3vH,KAAK2vH,kBAAkB55H,KAAKiK,MACrDA,KAAKg9D,eAAerwC,GAChBu1F,EAAAA,EACAliH,KAAK2vH,mBACT3vH,KAAKyR,QAAUA,EAEfzR,KAAKgsB,eACC,IAAIwb,EAAAA,EAASa,sBAAsBwM,EAAW/hB,GACpD9yB,KAAK0hH,UAAY,GACjB1hH,KAAKi0B,MAAQ,GACbj0B,KAAK4vH,cAAgB,KAMrB5vH,KAAKi+D,SAAWxsD,EAAQwsD,SACxB,IAAM4xD,EAAU90H,EAAQ,KAAsB80H,QAE9C7vH,KAAK8vH,QAAU,IAAID,EACnB,IAAME,EAAYh1H,EAAQ,KAE1BiF,KAAKgwH,UAAY,IAAID,EAAU,CAAEE,YAAad,EAC1Ce,wBAAwB,IAC5BlwH,KAAKmwH,eAAiB,IAAIC,EAAAA,EAAepwH,KAAKS,YAO9CT,KAAKqwH,eAAiB,IAAIC,EAAAA,EAAetwH,MAMzCA,KAAK4qB,aAAe4rC,EAAI5rC,aACxB5qB,KAAKuwH,YAAc,IAAIC,EAAAA,EAGvBxwH,KAAK2jD,MAAQ,SAAC8sE,EAAM3gH,GAChBoZ,EAAOrZ,MAAM4gH,EAAM3gH,GAEnB+3B,EAAK65E,UAAU7jH,KAAK,CAChBu5F,KAAM,IAAI3kF,KACVjB,KAAMi/G,EACNj7H,MAAOsa,GAAQ,MAGvB9P,KAAK2+D,eAAiB,KACtB3+D,KAAKgsB,eAAe2yC,eAAiB,SAAAzpC,GACjC2S,EAAK8b,MACD,iBACA5sC,KAAKyK,UAAU0T,EAAMoC,UAAW,KAAM,MAEd,OAAxBuQ,EAAK82B,gBACL92B,EAAK82B,eAAezpC,IAG5Bl1B,KAAKgsB,eAAe0kG,YACd,SAAAx7F,GAAK,OAAI2S,EAAK8oF,mBAAmBz7F,EAAM3I,SAC7CvsB,KAAKgsB,eAAe4kG,eACd,SAAA17F,GAAK,OAAI2S,EAAKgpF,qBAAqB37F,EAAM3I,SAC/CvsB,KAAK++D,uBAAyB,KAC9B/+D,KAAKgsB,eAAe+yC,uBAAyB,SAAA7pC,GACzC2S,EAAK8b,MAAM,yBAA0B9b,EAAKm3B,gBACN,OAAhCn3B,EAAKk3B,wBACLl3B,EAAKk3B,uBAAuB7pC,IAGpCl1B,KAAKk/D,2BAA6B,KAClCl/D,KAAKgsB,eAAekzC,2BAA6B,SAAAhqC,GAC7C2S,EAAK8b,MAAM,6BAA8B9b,EAAKs3B,oBACN,OAApCt3B,EAAKq3B,4BACLr3B,EAAKq3B,2BAA2BhqC,IAGxCl1B,KAAKu/D,oBAAsB,KAC3Bv/D,KAAKgsB,eAAeuzC,oBAAsB,SAAArqC,GACtC2S,EAAK8b,MAAM,uBACsB,OAA7B9b,EAAK03B,qBACL13B,EAAK03B,oBAAoBrqC,IAGjCl1B,KAAK8wH,cAAgB,KACrB9wH,KAAKgsB,eAAe8kG,cAAgB,SAAA57F,GAChC2S,EAAK8b,MAAM,iBACgB,OAAvB9b,EAAKipF,eACLjpF,EAAKipF,cAAc57F,IAIvBl1B,KAAKi+D,WACLj+D,KAAK4vH,cAAgBz7H,OAAOq2C,YAAY,WACpC3C,EAAKqzD,SAAS,SAAAjnE,GACV,GAAIA,EAAMhkB,QACqB,mBAAjBgkB,EAAMhkB,OAGhB,IAFA,IAAMwsE,EAAUxoD,EAAMhkB,SADiB2oC,EAAA,SAG9BrkD,GACL,IAAM+3C,EAAMmwC,EAAQloF,GAEpB+3C,EAAI43C,QAAQjjF,QAAQ,SAAAnM,GAChB+yC,EAAKkpF,aAAazkF,EAAKx3C,EAAMw3C,EAAI2kE,KAAKn8G,OAJrCP,EAAI,EAAGA,EAAIkoF,EAAQz/E,SAAUzI,EAAGqkD,EAAhCrkD,QAQT0/B,EAAMhzB,QAAQ,SAAA5L,GAAC,OAAIwyC,EAAKkpF,aAAa17H,EAAG,GAAIA,MAEjD,eAIJ,MAGP6zB,EAAOpZ,KAAP,cAAAzS,OAA0B2C,OAY9Bq1C,EAAwBl/C,UAAU46H,aAC5B,SAAS1qE,EAAQvxD,EAAMk8H,GACrB,IAAM/xH,EAAE,GAAA5B,OAAMgpD,EAAOpnD,GAAb,KAAA5B,OAAmBvI,GACvBwB,EAAI0J,KAAKi0B,MAAMh1B,GACbse,EAAM,IAAI9K,KAEXnc,IACD0J,KAAKi0B,MAAMh1B,GAAM3I,EAAI,CACjB4uF,UAAW3nE,EACX0zG,QAAS1zG,EACTsQ,OAAQ,GACRw4F,MAAO,KAGf/vH,EAAEu3B,OAAOhwB,KAAKmzH,GACd16H,EAAE+vH,MAAMxoH,KAAK0f,EAAI7K,WACbpc,EAAEu3B,OAAO7wB,OAASgD,KAAKi+D,WACvB3nE,EAAEu3B,OAAO0I,QACTjgC,EAAE+vH,MAAM9vF,SAEZjgC,EAAE26H,QAAU1zG,GAMpB,IAAM2zG,EAAU,SAAStwC,GACrB,OAAI,MAAOA,EACA,GAGX,SAAAvjF,OAAgBujF,EAAYpvE,KAA5B,QAAAnU,OAAuCujF,EAAYjmD,MAYvD0a,EAAwBl/C,UAAUgkF,mBAAqB,WACnD,IAAM1c,EAAQz9D,KAAKgsB,eAAemzC,mBAElC,MAAc,cAAV1B,EACO,YAGJA,GAaXpoB,EAAwBl/C,UAAUg7H,0BAA4B,SACtD/wF,GACJ,IAAIgxF,GAAsB,EAO1B,OALIhxF,IAAcyM,EAAAA,EACdukF,EAAsBpxH,KAAKqvH,oBACpBjvF,IAAcyM,EAAAA,IACrBukF,EAAsBpxH,KAAKyjE,qBAE3B2tD,EACOpxH,KAAKqxH,mBAAmBjxF,GAAa,WAAa,WAGtD,YAQXiV,EAAwBl/C,UAAUm7H,cAAgB,WAC9C,OAAQtxH,KAAKyR,QAAQysD,kBACdlzC,EAAAA,EAAQumG,uBAONvmG,EAAAA,EAAQgO,aACNh5B,KAAKyR,QAAQ6sD,yBAS5BjpB,EAAwBl/C,UAAUu5H,sBAAwB,SAClD/2D,EACA7rB,GAEJ,GAAK6rB,EAAL,CAKA,IAAM64D,EAAaxxH,KAAK81C,gBAAgB6iB,EAAY9rB,EAAAA,GAEhD2kF,EAAWx0H,QAEXw0H,EAAW,GAAGC,cAAc3kF,QAR5B5jB,EAAOtZ,MAAP,yCAAAvS,OAAsD2C,QAmB9Dq1C,EAAwBl/C,UAAUw5H,kBAAoB,SAC9Ch3D,EACAv4B,EACA+6B,GAEJ,GAAKxC,EAAL,CAKA,IAAM/rB,EAAQ5sC,KAAK81C,gBAAgB6iB,EAAYv4B,GAE3CwM,EAAM5vC,QAEN4vC,EAAM,GAAG8kF,QAAQv2D,QARjBjyC,EAAOtZ,MAAM,wCAkBrBylC,EAAwBl/C,UAAUq/C,eAAiB,SAASpV,GACxD,IAAIsV,EAASt1C,MAAMQ,KAAKZ,KAAKmyC,YAAYtkB,UAMzC,YAJkBlzB,IAAdylC,IACAsV,EAASA,EAAOpc,OAAO,SAAAsT,GAAK,OAAIA,EAAM+I,YAAcvV,KAGjDsV,GASXL,EAAwBl/C,UAAUk7H,mBAAqB,SAASjxF,GAC5D,IAAKA,EACD,MAAM,IAAIliC,MAAM,2BAGpB,OAAO8B,KAAKw1C,eAAepV,GAAWpjC,OAAS,GAUnDq4C,EAAwBl/C,UAAU2/C,gBAAkB,SAC5C6iB,EACAv4B,GACJ,IAAMwV,EAAe,GACf+7E,EACAh5D,EAAa,CAAEA,GAAe34D,KAAK41C,aAAalnB,OAHvClB,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAKf,IAAA,IAAAgzB,EAAAC,EAAuB+jG,EAAvBr8H,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAkC,CAAA,IAAvByhG,EAAuBthG,EAAAn4B,MACxBo8H,EAAmB5xH,KAAK41C,aAAaxgD,IAAI65H,GAE/C,GAAK2C,EAAL,CAH8B,IAAAvjG,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IAU9B,IAAA,IAAA6zB,EAAAC,EAA6BmjG,EAAiBljG,OAA9Cp5B,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAAsD,CAAA,IAA3CimD,EAA2C9lD,EAAAh5B,MAElD,IAAK4qC,GAAaA,IAAck0C,EAAgB,CAC5C,IAAMu9C,EAAaD,EAAiBx8H,IAAIk/E,GAEpCu9C,GACAj8E,EAAa/3C,KAAKg0H,KAhBA,MAAA53G,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,MALnB,MAAAtU,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GA2Bf,OAAOkoB,GASXP,EAAwBl/C,UAAUugD,eAAiB,SAAS1lB,GACxD,GAAoB,iBAATA,EACP,MAAM,IAAI9yB,MAAJ,QAAAb,OAAkB2zB,EAAlB,qBAFoD,IAAAxB,GAAA,EAAAC,GAAA,EAAAC,OAAA/0B,EAAA,IAI9D,IAAA,IAAAg1B,EAAAC,EAAyB5vB,KAAKmyC,YAAYtkB,SAA1Cv4B,OAAAw4B,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAoD,CAAA,IAAzCiiB,EAAyC9hB,EAAAn6B,MAChD,GAAIwK,KAAK63F,aAAapmD,KAAgBzgB,EAClC,OAAOygB,GAN+C,MAAAx3B,GAAAwV,GAAA,EAAAC,EAAAzV,EAAA,QAAA,IAAAuV,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,QAAA,GAAAqB,EAAA,MAAAC,GAAA,IAAAI,GAAA,EAAAC,GAAA,EAAAC,OAAAr1B,EAAA,IAS9D,IAAA,IAAAs1B,EAAAC,EAA0BlwB,KAAK81C,kBAA/BxgD,OAAAw4B,cAAAgC,GAAAG,EAAAC,EAAAnC,QAAAC,MAAA8B,GAAA,EAAkD,CAAA,IAAvCspC,EAAuCnpC,EAAAz6B,MAC9C,GAAI4jE,EAAY0+B,YAAc9mE,EAC1B,OAAOooC,GAX+C,MAAAn/C,GAAA8V,GAAA,EAAAC,EAAA/V,EAAA,QAAA,IAAA6V,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,QAAA,GAAA2B,EAAA,MAAAC,GAe9D,OAAO,MASXqlB,EAAwBl/C,UAAU4/G,iBAAmB,SAAS92G,GAE1D,IAAM6yH,EAAgB,SAAAllF,GAAK,OAAIA,EAAM+qC,WAAW14E,KAAOA,GACjDwyC,EAAazxC,KAAKw1C,iBAAiB5b,KAAKk4F,GAE9C,GAAIrgF,EACA,OAAOzxC,KAAK63F,aAAapmD,GAG7B,IAAM2nB,EAAcp5D,KAAK81C,kBAAkBlc,KAAKk4F,GAEhD,OAAI14D,EACOA,EAAY0+B,UAGhB,MAOXziD,EAAwBl/C,UAAUw6H,mBAAqB,SAASpkG,GAAQ,IAAAmf,EAAA1rC,KAC9D0zC,EAAW1B,EAAAA,EAAItJ,YAAYnc,GAEjC,GAAKylB,EAAAA,EAAIyB,iBAAiBC,GAA1B,EASI1oB,EAAAA,EAAQ8d,mBAAqB9d,EAAAA,EAAQ4X,YACrCrW,EAAOwlG,WAAa,SAAA78F,GAChBwW,EAAKsmF,kBAAkBzlG,EAAQ2I,EAAM0X,QAEzCrgB,EAAO0lG,cAAgB,SAAA/8F,GACnBwW,EAAKwmF,oBAAoB3lG,EAAQ2I,EAAM0X,SAK/C,IAAMulF,EAAoB5lG,EAAOyZ,iBAtBmC/U,GAAA,EAAAC,GAAA,EAAAC,OAAAx2B,EAAA,IAwBpE,IAAA,IAAAy2B,EAAAC,EAAyB8gG,EAAzB78H,OAAAw4B,cAAAmD,GAAAG,EAAAC,EAAAtD,QAAAC,MAAAiD,GAAA,EAA4C,CAAA,IAAjC+kB,EAAiC5kB,EAAA57B,MACxCwK,KAAKgyH,kBAAkBzlG,EAAQypB,IAzBiC,MAAA/7B,GAAAiX,GAAA,EAAAC,EAAAlX,EAAA,QAAA,IAAAgX,GAAA,MAAAI,EAAAjD,QAAAiD,EAAAjD,SAAA,QAAA,GAAA8C,EAAA,MAAAC,GA2BpE,IAAMihG,EAAoB7lG,EAAO2Z,iBA3BmC1U,GAAA,EAAAC,GAAA,EAAAC,OAAA/2B,EAAA,IA6BpE,IAAA,IAAAg3B,EAAAC,EAAyBwgG,EAAzB98H,OAAAw4B,cAAA0D,GAAAG,EAAAC,EAAA7D,QAAAC,MAAAwD,GAAA,EAA4C,CAAA,IAAjCggG,EAAiC7/F,EAAAn8B,MACxCwK,KAAKgyH,kBAAkBzlG,EAAQilG,IA9BiC,MAAAv3G,GAAAwX,GAAA,EAAAC,EAAAzX,EAAA,QAAA,IAAAuX,GAAA,MAAAI,EAAAxD,QAAAwD,EAAAxD,SAAA,QAAA,GAAAqD,EAAA,MAAAC,SAIhExI,EAAOpZ,KACH,GAAAzS,OAAG2C,KAAH,4DAAA,OAAA3C,OACUq2C,KAsCtB2B,EAAwBl/C,UAAU67H,kBAAoB,SAASzlG,EAAQqgB,GACnE,IAAM8G,EAAW1B,EAAAA,EAAItJ,YAAYnc,GAC3B6T,EAAYwM,EAAMpG,KAKxB,GAHAtd,EAAOpZ,KAAP,GAAAzS,OAAe2C,KAAf,wBAA2C0zC,EAAUtT,GAGhDA,EAAL,CAUA,IACMiyF,EADY,IAAIj6E,EAAAA,EAAIp4C,KAAKglE,kBAAkBrqC,KAEjCrE,MAAMgD,OAAO,SAAAg5F,GAAG,OAAIA,EAAIx3F,WAAJ,KAAAz9B,OAAoB+iC,MAExD,GAAKiyF,EAAWr1H,OAAhB,CAWA,IAAI6pE,EAAYtxC,EAAAA,EAAQqD,UAAUy5F,EAAW,GAAI,WAIjD,IAFAxrD,EACMA,EAAUvtC,OAAO,SAAAlqB,GAAI,OAA0C,IAAtCA,EAAK9Q,QAAL,QAAAjB,OAAqBq2C,OACrC12C,OAAf,CAYA,IAAMy9B,EAAUosC,EAAU,GAAGtoE,UAAU,GAAG1B,MAAM,KAAK,GAC/C01H,EAAY1xH,OAAO45B,GACnB+3F,EAAkBxyH,KAAKg9D,eAAey1D,aAAaF,GAEzD,GAAInwH,MAAMmwH,IAAcA,EAAY,EAChCttF,EAAAA,iBACI,IAAI/mC,MAAJ,iBAAAb,OACqBo9B,EADrB,6BAAAp9B,OAEQq2C,EAFR,iBAAAr2C,OAEgC+iC,UAIjC,GAAKoyF,EAAL,CAWPtpG,EAAO1Z,IAAP,GAAAnS,OAAc2C,KAAd,oBAAsCwyH,EAAiBD,GAEvD,IAAMG,EACA1yH,KAAKg9D,eAAe21D,iBAAiBH,EAAiBpyF,GAE5D,GAAKsyF,EAAL,CASA,IAAM5hG,EAAQ4hG,EAAc5hG,MACtBgc,EAAY4lF,EAAc5lF,UAEhC9sC,KAAK4yH,mBACDJ,EAAiBjmG,EAAQqgB,EAAOxM,EAAW0M,EAAWylF,EAAWzhG,QAZjEmU,EAAAA,iBACI,IAAI/mC,MAAJ,GAAAb,OACO2C,KADP,uCAAA3C,OAEQm1H,UAnBZvtF,EAAAA,iBACI,IAAI/mC,MAAJ,4BAAAb,OAEQk1H,EAFR,6BAAAl1H,OAGQq2C,EAHR,iBAAAr2C,OAGgC+iC,UA5BpC6E,EAAAA,iBACI,IAAI/mC,MAAJ,8BAAAb,OAEQq2C,EAFR,mCAAAr2C,OAEkD+iC,UAlBtD6E,EAAAA,iBACI,IAAI/mC,MAAJ,2BAAAb,OAEQ+iC,EAFR,2CAAA/iC,OAGQq2C,UAlBZzO,EAAAA,iBACI,IAAI/mC,MAAJ,oDAAAb,OACwDq2C,MAiGpE2B,EAAwBl/C,UAAUy8H,mBAAqB,SAC/CJ,EACAjmG,EACAqgB,EACAxM,EACA0M,EACA9b,EACAF,GACJ,IAAI+hG,EAAkB7yH,KAAK41C,aAAaxgD,IAAIo9H,GAEvCK,IACDA,EAAkB,IAAIloG,IACtB3qB,KAAK41C,aAAaxpB,IAAIomG,EAAiBK,IAG3C,IAAMC,EAAgBD,EAAgBz9H,IAAIgrC,GAE1C,GAAI0yF,GAAiBA,EAAcn7C,aAAe/qC,EAG9C1jB,EAAOpZ,KACH,GAAAzS,OAAG2C,KAAH,sDAAA,GAAA3C,OACSm1H,EADT,MAAAn1H,OAC6B+iC,QALrC,CAQW0yF,GACP5pG,EAAOtZ,MACH,GAAAvS,OAAG2C,KAAH,iCAAA,GAAA3C,OACSm1H,EADT,KAAAn1H,OAC4B+iC,IAGpC,IAAMg5B,EACA,IAAI25D,EAAAA,EACE/yH,KAAKw2D,IACLx2D,KAAKw2D,IAAIvkB,WACTugF,EACAjmG,EACAqgB,EACAxM,EACA0M,EACA9b,EACAF,EACA9wB,KAAKozC,OAEjBy/E,EAAgBzmG,IAAIgU,EAAWg5B,GAE/Bp5D,KAAK4qB,aAAa2C,KAAK6Y,EAAAA,EAAUxJ,mBAAoBw8B,KAUzD/jB,EAAwBl/C,UAAU06H,qBAAuB,SAAStkG,GAC9D,GAAKylB,EAAAA,EAAIghF,aAAazmG,GAAtB,CAUA,IAAM6lG,EAAoB7lG,EAAO2Z,iBAXqClU,GAAA,EAAAC,GAAA,EAAAC,OAAAv3B,EAAA,IAatE,IAAA,IAAAw3B,EAAAC,EAAyBggG,EAAzB98H,OAAAw4B,cAAAkE,GAAAG,EAAAC,EAAArE,QAAAC,MAAAgE,GAAA,EAA4C,CAAA,IAAjCw/F,EAAiCr/F,EAAA38B,MACxCwK,KAAKkyH,oBAAoB3lG,EAAQilG,IAdiC,MAAAv3G,GAAAgY,GAAA,EAAAC,EAAAjY,EAAA,QAAA,IAAA+X,GAAA,MAAAI,EAAAhE,QAAAgE,EAAAhE,SAAA,QAAA,GAAA6D,EAAA,MAAAC,GAgBtE,IAAMigG,EAAoB5lG,EAAOyZ,iBAhBqChT,GAAA,EAAAC,GAAA,EAAAC,OAAAv4B,EAAA,IAkBtE,IAAA,IAAAw4B,EAAAC,EAAyB++F,EAAzB78H,OAAAw4B,cAAAkF,GAAAG,EAAAC,EAAArF,QAAAC,MAAAgF,GAAA,EAA4C,CAAA,IAAjCgjB,EAAiC7iB,EAAA39B,MACxCwK,KAAKkyH,oBAAoB3lG,EAAQypB,IAnBiC,MAAA/7B,GAAAgZ,GAAA,EAAAC,EAAAjZ,EAAA,QAAA,IAAA+Y,GAAA,MAAAI,EAAAhF,QAAAgF,EAAAhF,SAAA,QAAA,GAAA6E,EAAA,MAAAC,QACtE,CACI,IAAMj0B,EAAK+yC,EAAAA,EAAItJ,YAAYnc,GAE3BrD,EAAOpZ,KAAP,6DAAAzS,OACiE4B,MAyBzEo2C,EAAwBl/C,UAAU+7H,oBAAsB,SAChD3lG,EACAqgB,GACJ,IAAM8G,EAAW1B,EAAAA,EAAItJ,YAAYnc,GAC3B4oD,EAAUvoC,GAASoF,EAAAA,EAAIpJ,WAAWgE,GAExC1jB,EAAOpZ,KAAP,GAAAzS,OAAe2C,KAAf,6BAAA3C,OAA+Cq2C,EAA/C,MAAAr2C,OAA4D83E,IAEvDzhC,EAOAyhC,EAOAn1E,KAAKizH,uBAAuBv/E,EAAUyhC,IAWvCjsD,EAAOnZ,KAAP,GAAA1S,OACO2C,KADP,uCAAA3C,OACiDq2C,EADjD,8BAAAr2C,OAEiB83E,IAnBjBlwC,EAAAA,iBACI,IAAI/mC,MAAJ,GAAAb,OAAa2C,KAAb,gDARJilC,EAAAA,iBACI,IAAI/mC,MAAJ,GAAAb,OAAa2C,KAAb,kDAqCZq1C,EAAwBl/C,UAAU+8H,oBAAsB,SAChDx/E,EACAyhC,GAAS,IAAAvhD,GAAA,EAAAC,GAAA,EAAAC,OAAAn5B,EAAA,IAEb,IAAA,IAAAo5B,EAAAC,EAA+Bh0B,KAAK41C,aAAa/nB,SAAjDv4B,OAAAw4B,cAAA8F,GAAAG,EAAAC,EAAAjG,QAAAC,MAAA4F,GAAA,EAA2D,CAAA,IAAhDg+F,EAAgD79F,EAAAv+B,MAAA0+B,GAAA,EAAAC,GAAA,EAAAC,OAAAz5B,EAAA,IACvD,IAAA,IAAA05B,EAAAC,EAAyBs9F,EAAiB/jG,SAA1Cv4B,OAAAw4B,cAAAoG,GAAAG,EAAAC,EAAAvG,QAAAC,MAAAkG,GAAA,EAAoD,CAAA,IAAzC29F,EAAyCx9F,EAAA7+B,MAGhD,GAAIq8H,EAAW38C,eAAiBxhC,GACzBm+E,EAAWz8C,cAAgBD,EAC9B,OAAO08C,GANwC,MAAA53G,GAAAka,GAAA,EAAAC,EAAAna,EAAA,QAAA,IAAAia,GAAA,MAAAI,EAAAlG,QAAAkG,EAAAlG,SAAA,QAAA,GAAA+F,EAAA,MAAAC,KAF9C,MAAAna,GAAA4Z,GAAA,EAAAC,EAAA7Z,EAAA,QAAA,IAAA2Z,GAAA,MAAAI,EAAA5F,QAAA4F,EAAA5F,SAAA,QAAA,GAAAyF,EAAA,MAAAC,KAyBjBuhB,EAAwBl/C,UAAUqgD,mBAAqB,SAASH,GAC5D,IAAMC,EAAgB,GAChBu8E,EAAkB7yH,KAAK41C,aAAaxgD,IAAIihD,GAE9C,GAAIw8E,EAAiB,CACjB,IAAMM,EAAoBN,EAAgBz9H,IAAIy3C,EAAAA,GACxCumF,EAAoBP,EAAgBz9H,IAAIy3C,EAAAA,GAE9CsmF,GAAqB78E,EAAcz4C,KAAKs1H,GACxCC,GAAqB98E,EAAcz4C,KAAKu1H,GAExCpzH,KAAK41C,aAAa9mB,OAAOunB,GAO7B,OAJAntB,EAAOrZ,MAAP,GAAAxS,OACO2C,KADP,+BAAA3C,OACyCg5C,EADzC,YAAAh5C,OAEQi5C,EAAct5C,SAEfs5C,GAQXjB,EAAwBl/C,UAAUk9H,mBAAqB,SAASC,GAC5DA,EAAYjmG,UACZ,IAAMsS,EAAgB2zF,EAAYj6D,mBAC5Bw5D,EAAkB7yH,KAAK41C,aAAaxgD,IAAIuqC,GAEzCkzF,EAGOA,EAAgB/jG,OAAOwkG,EAAY39E,YAC3CzsB,EAAOtZ,MAAP,oBAAAvS,OACwBi2H,EADxB,gCAHApqG,EAAOtZ,MAAP,+CAAAvS,OACmDsiC,IAKvD3/B,KAAK4qB,aAAa2C,KAAK6Y,EAAAA,EAAUtJ,qBAAsBw2F,IAa3Dj+E,EAAwBl/C,UAAU88H,uBAAyB,SACnDv/E,EACAyhC,GACJ,IAAMm+C,EAActzH,KAAKkzH,oBAAoBx/E,EAAUyhC,GAMvD,OAJIm+C,GACAtzH,KAAKqzH,mBAAmBC,GAGrBA,GA8GX,IAAMC,EAAiB,SAASr7F,GAC5B,GAAoB,WAAhBz4B,EAAOy4B,IAA8B,OAATA,GACL,iBAAbA,EAAKyC,IAGf,OAFAzR,EAAOnZ,KAAK,mDAELmoB,EAIX,IAAMqqB,EAAYxnD,EAAQ,IACpBsmB,EAAUkhC,EAAUjhC,MAAM4W,EAAKyC,UAEd,IAAZtZ,QACyB,IAAlBA,EAAQiV,OACfl2B,MAAMG,QAAQ8gB,EAAQiV,QAC7BjV,EAAQiV,MAAMr1B,QAAQ,SAAAm5B,GASlB,IAAMo5F,EAAa,GACbC,EAAe,GAcrB,QAZgC,IAArBr5F,EAAMX,YACVr5B,MAAMG,QAAQ65B,EAAMX,aACvBW,EAAMX,WAAWx4B,QAAQ,SAAA44B,QACU,IAApBA,EAAMC,WACU,QAApBD,EAAMC,gBACkB,IAAhBD,EAAMT,OACbo6F,EAAW31H,KAAKgD,OAAOg5B,EAAMT,MAAMv8B,MAAM,KAAK,OAM1DuD,MAAMG,QAAQ65B,EAAMhB,OAAQ,CAC5B,IAAI7kC,EAEJ,IAAKA,EAAI,EAAGA,EAAI6lC,EAAMhB,MAAMp8B,OAAQzI,IACF,WAA1BkL,EAAO26B,EAAMhB,MAAM7kC,UACa,IAAtB6lC,EAAMhB,MAAM7kC,GAAG0K,IACtBu0H,EAAWl1H,QAAQ87B,EAAMhB,MAAM7kC,GAAG0K,KAAO,IAC5Cw0H,EAAa51H,KAAKu8B,EAAMhB,MAAM7kC,WACvB6lC,EAAMhB,MAAM7kC,IAI3B,IAAKA,EAAI,EAAGA,EAAI6lC,EAAMhB,MAAMp8B,OAAQzI,SACF,IAAnB6lC,EAAMhB,MAAM7kC,IACnBk/H,EAAa51H,KAAKu8B,EAAMhB,MAAM7kC,IAItC6lC,EAAMhB,MA0BtB,WAAuD,IAAhBytC,EAAgBjpE,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAC/C,IAAKotB,EAAAA,EAAQ2Z,aAAe3Z,EAAAA,EAAQ0oG,qBAAqB,IACrD,OAAO7sD,EAGX,IAAI8sD,EAAa53F,EAAQ8qC,GAsBzB,OApB2BA,EAAUvtC,OAAO,SAAAgB,GAAQ,MACzB,YAAvBA,EAASlxB,WAA8C,MAAnBkxB,EAAS9kC,QAC5CsH,IAAI,SAAAw9B,GAAQ,OAAIA,EAASr7B,KAEXgC,QAAQ,SAAA2yH,GAEvB,IAAMC,EAAYF,EAAc/5F,KAAK,SAAAxqB,GAAI,OACrCA,EAAKnQ,KAAO20H,GAA6B,UAAnBxkH,EAAKhG,YAE/ByqH,EAAUr+H,MAAV,YAAA6H,OAA8Bu2H,IAG9BD,EACMA,EAAcr6F,OAAO,SAAAlqB,GAAI,OAAIA,EAAKnQ,KAAO20H,KAIjC/1H,KAAKg2H,KAGhBF,EArDmBG,CAA8BL,MAKxD,IAAMM,EAASxxE,EAAUrD,MAAM79B,GAG/B,OAAO,IAAIqkD,sBAAsB,CAC7Bl0D,KAAM0mB,EAAK1mB,KACXmpB,IAAKo5F,KA2Fb1+E,EAAwBl/C,UAAU0hG,aAAe,SAASpmD,GACtD,IAAMpY,EAAWr5B,KAAKg0H,SAASviF,EAAWE,OAE1C,OAAOtY,GAAYA,EAASD,MAAM,IAmBtCic,EAAwBl/C,UAAU89H,oCAC5B,SAAS/7F,GACP,IAAMyC,EAAM4nB,EAAAA,EAAUjhC,MAAM4W,EAAKyC,KAC3B4G,EAAQ5G,EAAIrE,MAAMsD,KAAK,SAAAjD,GAAK,MAAmB,UAAfA,EAAMnlB,OAE5C,GAAI+vB,EAAM2yF,aAAc,CACpB,IAAM96F,EAAQ,GAQd,GANAmI,EAAMnI,MAAMn4B,QAAQ,SAAA+vB,GACO,SAAnBA,EAAK5nB,WACLgwB,EAAMv7B,KAAKmzB,EAAK/xB,MAGxBsiC,EAAM9H,WAAa8H,EAAM9H,YAAc,GACnC8H,EAAM9H,WAAWG,KAAK,SAAAC,GAAK,MAAwB,QAApBA,EAAMC,YAErC,OAAO5B,EAEXqJ,EAAM9H,WAAW57B,KAAK,CAClBi8B,UAAW,MACXV,MAAOA,EAAM77B,KAAK,OAI1B,OAAO,IAAImoE,sBAAsB,CAC7Bl0D,KAAM0mB,EAAK1mB,KACXmpB,IAAK4nB,EAAAA,EAAUrD,MAAMvkB,MAKjC,IAAMw5F,EAAU,CACZn1D,eADY,WAER,OAAOh/D,KAAKgsB,eAAegzC,gBAE/BG,mBAJY,WAKR,OAAOn/D,KAAKgsB,eAAemzC,oBAE/BW,iBAPY,WAQR,IAAI5nC,EAAOl4B,KAAKgsB,eAAe8zC,iBAE/B,OAAK5nC,GAMLl4B,KAAK2jD,MAAM,oCAAqCutE,EAAQh5F,IAGpDlN,EAAAA,EAAQu+E,oBACRrxE,EAAOl4B,KAAK8vH,QAAQsE,QAAQl8F,GAC5Bl4B,KAAK2jD,MAAM,8CACPutE,EAAQh5F,IAEZA,EAAOl4B,KAAKi0H,oCAAoC/7F,GAChDl4B,KAAK2jD,MAAM,yDACPutE,EAAQh5F,KAGZlN,EAAAA,EAAQiuD,gCACR/gD,EAAOl4B,KAAKqwH,eAAegE,mCAAmCn8F,GAC9DhP,EAAOrZ,MACH,uDAAwDqoB,IAWhEA,EAxIgB,SAAS4nC,EAAkBruD,GAC/C,IAAKquD,EACD,MAAM,IAAI5hE,MAAM,mCAGpB,IAAMo2H,EAAc,IAAIlyE,EAAAA,EAAiB0d,EAAiBnlC,KACpD45F,EAAaD,EAAYE,YAAY,SACvC/6B,GAAU,EAEV86B,GAAuC,aAAzBA,EAAW/7F,YACrB/mB,EAAQgtD,YACR81D,EAAW/7F,UAAY,WAEvB+7F,EAAW/7F,UAAY,WAG3BihE,GAAU,GAGd,IAAMg7B,EAAaH,EAAYE,YAAY,SAO3C,OALIC,GAAuC,aAAzBA,EAAWj8F,YACzBi8F,EAAWj8F,UAAY,WACvBihE,GAAU,GAGVA,EACO,IAAI/zB,sBAAsB,CAC7Bl0D,KAAMsuD,EAAiBtuD,KACvBmpB,IAAK25F,EAAYI,aAIlB50D,EAuGI60D,CAAgBz8F,EAAMl4B,KAAKyR,SAGlCymB,EAAOl4B,KAAKqwH,eAAeuE,2BAA2B18F,KAnClDhP,EAAOrZ,MAAM,iDAEN,KAqCfm1D,kBAlDY,WAmDR,IAAI9sC,EAAOl4B,KAAKgsB,eAAeg5C,kBAW/B,OATAhlE,KAAK2jD,MAAM,qCAAsCutE,EAAQh5F,IAGrDlN,EAAAA,EAAQu+E,oBACRrxE,EAAOl4B,KAAK8vH,QAAQsE,QAAQl8F,GAC5Bl4B,KAAK2jD,MACD,+CAAgDutE,EAAQh5F,KAGzDA,GAAQ,KAIvBjjC,OAAOy5B,KAAKylG,GAASlzH,QAAQ,SAAAlF,GACzB9G,OAAOC,eACHmgD,EAAwBl/C,UACxB4F,EAAM,CACF3G,IAAK++H,EAAQp4H,OAKzBs5C,EAAwBl/C,UAAU69H,SAAW,SAASriF,GAClD,OAAO3xC,KAAKuvH,WAAWn6H,IAAIu8C,IAO/B0D,EAAwBl/C,UAAUq2C,SAAW,SAASI,GAClD,IAAM+E,EAAQ/E,EAAM+E,MAIpB,GAFAzoB,EAAOpZ,KAAP,OAAAzS,OAAmBuvC,EAAnB,SAAAvvC,OAAgC2C,OAE5BA,KAAKmyC,YAAYhjB,IAAIwiB,GACrBzoB,EAAOtZ,MAAP,GAAAvS,OAAgBuvC,EAAhB,mBAAAvvC,OAAuC2C,WAD3C,CAMAA,KAAKmyC,YAAY/lB,IAAIulB,EAAO/E,GAE5B,IAAMioF,EAAejoF,EAAMq5C,oBAa3B,GAXI4uC,EACA70H,KAAK80H,WAAWD,KAGR7pG,EAAAA,EAAQiuD,+BACLrsC,EAAM+J,gBACL/J,EAAM25B,iBAAmB35B,EAAMuuB,YAC3CjyC,EAAOtZ,MAAP,GAAAvS,OAAgB2C,KAAhB,2BAAA3C,OAA8CuvC,IAI9C5hB,EAAAA,EAAQiuD,+BACDrsC,EAAM25B,gBAAkB35B,EAAMuuB,UAAW,CAChD,IAAM9hC,EAAWr5B,KAAK+0H,0BAA0BnoF,GAEhD5sC,KAAKmwH,eAAe6E,eAAe37F,EAASD,MAAM,IAClD,IAAMW,EACAV,EAASqiB,OAAO9hB,KAAK,SAAAqoB,GAAS,MAA4B,QAAxBA,EAAUnoB,YAE9CC,GACA/5B,KAAKgwH,UAAUiF,aAAal7F,EAASX,OAEzC,IAAM87F,EACA77F,EAASqiB,OAAOpiB,OACd,SAAA2oB,GAAS,MAA4B,QAAxBA,EAAUnoB,YAE/B,GAAIo7F,EAAW,CACX,IAAMC,EAAiB,IAAIxqG,IAE3BuqG,EAAUj0H,QAAQ,SAAA04B,GACd,IAAMD,EAAcC,EAASP,MAAM,GAC7Bg8F,EAAUz7F,EAASP,MAAM,GAE/B+7F,EAAe/oG,IAAIsN,EAAa07F,KAEpCp1H,KAAKuwH,YAAY0E,aAAaE,OAY1C9/E,EAAwBl/C,UAAUwxE,eAAiB,SAAS/6B,GACxD,IAAK5sC,KAAKq1H,oBAAoB,iBAAkBzoF,GAE5C,OAAO,EAGX1jB,EAAOpZ,KAAP,UAAAzS,OAAsBuvC,EAAtB,kBAAAvvC,OAA4C2C,OAC5C,IAAMs1H,EAAe1oF,EAAMq5C,oBAE3B,OAAKqvC,GAMLt1H,KAAK80H,WAAWQ,IAET,IAPHpsG,EAAOtZ,MAAP,iBAAAvS,OACqBuvC,EADrB,kBAAAvvC,OAC2C2C,KAD3C,yBAGO,IAYfq1C,EAAwBl/C,UAAU2+H,WAAa,SAAS7lF,GACpDjvC,KAAKgsB,eAAeupG,UAAUtmF,GAC9BjvC,KAAKsvH,cAAczxH,KAAKoxC,IAO5BoG,EAAwBl/C,UAAUq/H,cAAgB,SAASvmF,GACnDjkB,EAAAA,EAAQyqG,oBACRz1H,KAAK01H,0BAA0BzmF,GAE/BjvC,KAAKgsB,eAAe2pG,aAAa1mF,GAErCjvC,KAAKsvH,cACCtvH,KAAKsvH,cAAch2F,OAAO,SAAA/M,GAAM,OAAIA,IAAW0iB,KAczDoG,EAAwBl/C,UAAUk/H,oBAAsB,SAChDpuE,EACAxV,GACJ,IAAMmkF,EAAa51H,KAAKmyC,YAAYhjB,IAAIsiB,EAAWE,OAOnD,OALKikF,GACD1sG,EAAOtZ,MAAP,GAAAvS,OACO4pD,EADP,MAAA5pD,OACsBo0C,EADtB,wBAAAp0C,OACuD2C,OAGpD41H,GASXvgF,EAAwBl/C,UAAU0/H,kBAAoB,SAAS5mF,GAC3D,OAAOjvC,KAAKsvH,cAAchxH,QAAQ2wC,IAAgB,GAUtDoG,EAAwBl/C,UAAUuiF,YAAc,SAASjnC,GACrD,IAAM6jF,EAAe7jF,EAAWw0C,oBAEhCjmF,KAAK2jD,MACD,eACAlS,EAAWE,MAAO2jF,EAAeA,EAAar2H,QAAKtE,GAElDqF,KAAKq1H,oBAAoB,eAAgB5jF,KAI9CzxC,KAAKmyC,YAAYrjB,OAAO2iB,EAAWE,OACnC3xC,KAAKuvH,WAAWzgG,OAAO2iB,EAAWE,OAE9B2jF,IACItqG,EAAAA,EAAQyqG,oBACRz1H,KAAK01H,0BAA0BJ,GAE/Bt1H,KAAKgsB,eAAe2pG,aAAaL,MAY7CjgF,EAAwBl/C,UAAU2/H,mBAAqB,SAASvpG,GAC5D,IAAMqgB,EAAQrgB,EAAOiiB,YAAY,GAEjC,GAAK5B,EAOL,OAAO5sC,KAAKgsB,eAAe+pG,aAAan8F,KAAK,SAAAtjC,GAAC,OAAIA,EAAEs2C,QAAUA,IAN1D1jB,EAAOtZ,MAAM,mCAqBrBylC,EAAwBl/C,UAAUswE,aAAe,SAASN,EAAUC,GAAU,IAAAj5B,EAAAntC,KAC1E,GAAIgrB,EAAAA,EAAQyqG,qBAAuBtvD,GAAYC,EAAU,CAGrD,IAAM4vD,EAASh2H,KAAK81H,mBAAmB3vD,EAAS8f,qBAC1C15D,EAAS65C,EAAS6f,oBAExB,GAAI+vC,GAAUzpG,EAAQ,CAClB,IAAMqgB,EAAQrgB,EAAOiiB,YAAY,GAEjC,GAAI5B,EACA,OAAOopF,EAAOvvD,aAAa75B,EAAOrgB,GAAQ2b,KAAK,WAQ3C,IAAMlX,EAAOmc,EAAKoiF,WAAWn6H,IAAI+wE,EAASx0B,OAoB1C,OAlBAxE,EAAKgF,YAAYrjB,OAAOq3C,EAASx0B,OACjCxE,EAAKoiF,WAAWzgG,OAAOq3C,EAASx0B,OAChCxE,EAAKmiF,cACCniF,EAAKmiF,cAAch2F,OAAO,SAAAhjC,GAAC,OAAIA,IAAMi2B,IAE3C4gB,EAAKgF,YAAY/lB,IAAIg6C,EAASz0B,MAAOy0B,GAIrCA,EAAS+R,WAAahS,EAASgS,WAC/BhrC,EAAKmiF,cAAczxH,KAAK0uB,GAExB4gB,EAAKoiF,WAAWnjG,IAAIg6C,EAASz0B,MAAO3gB,GACpCmc,EAAKviB,aAAa2C,KACd6Y,EAAAA,EAAU1J,yBACV0pC,EACA6vD,EAAmBjlG,KAEhB,KAavB,OAPIm1C,GACAnmE,KAAK04E,YAAYvS,GAEjBC,GACApmE,KAAKwsC,SAAS45B,GAGXh7B,QAAQC,SAAQ,IAU3BgK,EAAwBl/C,UAAUuxE,gBAAkB,SAASj2B,GACzD,IAAM6jF,EAAe7jF,EAAWw0C,oBAMhC,OAJAjmF,KAAK2jD,MACD,mBACAlS,EAAWE,MAAO2jF,EAAeA,EAAar2H,GAAK,QAElDe,KAAKq1H,oBAAoB,mBAAoB5jF,KAK9C6jF,GACApsG,EAAOpZ,KAAP,YAAAzS,OACgBo0C,EADhB,kBAAAp0C,OAC2C2C,OAC3CA,KAAKw1H,cAAcF,IAEZ,IAGXpsG,EAAOtZ,MAAP,2CAAAvS,OAAwDo0C,KAEjD,KAOX4D,EAAwBl/C,UAAUu/H,0BAA4B,SACtDnpG,GACJ,GAAKA,EAAL,CAKA,IAAMypG,EAASh2H,KAAK81H,mBAAmBvpG,GAEnCypG,EACAh2H,KAAKgsB,eAAe0sD,YAAYs9C,GAEhC9sG,EAAO1Z,IAAI,yCAInB6lC,EAAwBl/C,UAAUw3H,kBAAoB,SAASrmF,EAAO4uF,GAGlE,OAFAl2H,KAAK2jD,MAAM,oBAAqBrc,EAAO4uF,GAEhCl2H,KAAKgsB,eAAe2hG,kBAAkBrmF,EAAO4uF,IAWxD7gF,EAAwBl/C,UAAUggI,4BAA8B,SACxDC,GACJ,IAAIC,EAASD,EAASz7F,IAEhB27F,EAAkBD,EAAO/3H,QAAQ,WACjCi4H,EAAgBF,EAAO/3H,QAAQ,mBAAoBg4H,GACrDE,EAAkBH,EAAO5iD,YAAY,gBAEzC,IAAuB,IAAnB8iD,IACwB,IAArBC,GACAA,IAAoBD,EACvB,OAAOH,EAGX,IAAMK,EAAcJ,EAAO/3H,QAAQ,OAAQi4H,GACrCG,EAASL,EAAO93H,UAAUg4H,EAAeE,EAAc,GAG7DD,GADAH,EAASA,EAAOl5H,QAAQu5H,EAAQ,KACPjjD,YAAY,gBACrC,IAAMkjD,EAAgBN,EAAO/3H,QAAQ,OAAQk4H,GACvCI,EAAUP,EAAO16H,MAAM,EAAGg7H,GAC1BE,EAAgBH,EAAO3mE,OACvB+mE,EAAUT,EAAO16H,MAAMg7H,GAI7B,OAFAN,EAAM,GAAAh5H,OAAMu5H,EAAN,QAAAv5H,OAAoBw5H,GAApBx5H,OAAoCy5H,GAEnC,IAAIpxD,sBAAsB,CAC7Bl0D,KAAM4kH,EAAS5kH,KACfmpB,IAAK07F,KAYbhhF,EAAwBl/C,UAAU4gI,2BAA6B,SACvDj3D,GACJ,IAAMw0D,EAAc,IAAIlyE,EAAAA,EAAiB0d,EAAiBnlC,KACtDq8F,GAAoB,EAClBzC,EAAaD,EAAYE,YAAY,SAE3C,GAAID,EAAY,CACZ,IAAM0C,EACAj3H,KAAKmxH,0BAA0BtkF,EAAAA,GAEjC0nF,EAAW/7F,YAAcy+F,IACzB1C,EAAW/7F,UAAYy+F,EACvB/tG,EAAOpZ,KAAP,qCAAAzS,OACyC45H,IACzCD,GAAoB,QAGxB9tG,EAAOnZ,KAAK,oDAGhB,IAAM0kH,EAAaH,EAAYE,YAAY,SAE3C,GAAIC,EAAY,CACZ,IAAMyC,EACAl3H,KAAKmxH,0BAA0BtkF,EAAAA,GAEjC4nF,EAAWj8F,YAAc0+F,IACzBzC,EAAWj8F,UAAY0+F,EACvBhuG,EAAOpZ,KAAP,qCAAAzS,OACyC65H,IACzCF,GAAoB,QAGxB9tG,EAAOnZ,KAAK,mDAGhB,OAAIinH,EACO,IAAItxD,sBAAsB,CAC7Bl0D,KAAMsuD,EAAiBtuD,KACvBmpB,IAAK25F,EAAYI,aAIlB50D,GAGXzqB,EAAwBl/C,UAAU+rE,oBAAsB,SAAS0e,GAAa,IAAA3yC,EAAAjuC,KACtEo2H,EAAWx1C,EAIf,GAFA5gF,KAAK2jD,MAAM,oCAAqCutE,EAAQkF,IAEpDp2H,KAAKyR,QAAQ0sD,aAAen+D,KAAKyR,QAAQ2sD,WAAY,CACrD,IAAM+4D,EAAY50E,EAAAA,EAAUjhC,MAAM80G,EAASz7F,KACrCzB,EAAai+F,EAAU7gG,MAAMsD,KAAK,SAAAjlC,GAAC,MAAe,UAAXA,EAAE6c,OAE3CxR,KAAKyR,QAAQ0sD,YACb5oC,EAAAA,EAAQkG,gBAAgBvC,EAAY,QAEpC3D,EAAAA,EAAQwF,iBAAiB7B,EAAY,QAGzCk9F,EAAW,IAAI1wD,sBAAsB,CACjCl0D,KAAM4kH,EAAS5kH,KACfmpB,IAAK4nB,EAAAA,EAAUrD,MAAMi4E,KAGzBn3H,KAAK2jD,MAAM,4CACPutE,EAAQkF,IAehB,OAZAA,EAAWp2H,KAAK+2H,2BAA2BX,GAE3CA,EAAWp2H,KAAKm2H,4BAA4BC,GAGxCprG,EAAAA,EAAQu+E,oBACR6sB,EAAWp2H,KAAK8vH,QAAQsH,cAAchB,GACtCp2H,KAAK2jD,MACD,oDACAutE,EAAQkF,KAGT,IAAIhrF,QAAQ,SAACC,EAASC,GACzB2C,EAAKjiB,eAAek2C,oBAAoBk0D,GACnCluF,KAAK,WACF+F,EAAK0V,MAAM,gCACX,IAAM6rE,EAAaj6F,EAAAA,EAAQqF,SAASw7F,EAASz7F,KAEzC60F,IAAevhF,EAAKuhF,aACpBvhF,EAAKuhF,WAAaA,EAClBvhF,EAAKrjB,aAAa2C,KACd6Y,EAAAA,EAAU9I,oBAAqB2Q,EAAMuhF,IAE7CnkF,KACD,SAAApxB,GACCg0B,EAAK0V,MAAM,+BAAgC1pC,GAC3Cg0B,EAAKrjB,aAAa2C,KACd6Y,EAAAA,EAAUpJ,6BACV/iB,EAAKg0B,GACT3C,EAAOrxB,QAkBvBo7B,EAAwBl/C,UAAUiyE,uBAAyB,SAAS6M,GAChE/rD,EAAOrZ,MAAP,GAAAxS,OAAgB2C,KAAhB,4BAAA3C,OAA+C43E,IAC/C,IAAMwkB,EAAUz5F,KAAKqvH,sBAAwBp6C,EAI7C,OAFAj1E,KAAKqvH,oBAAsBp6C,EAEpBwkB,GAaXpkD,EAAwBl/C,UAAUkhI,mCAC5B,SAASn/F,GACP,IAAMyC,EAAM4nB,EAAAA,EAAUjhC,MAAM4W,EAAKyC,KAC3B4G,EAAQ5G,EAAIrE,MAAMsD,KAAK,SAAAjD,GAAK,MAAmB,UAAfA,EAAMnlB,OAsB5C,OAnBA+vB,EAAMmZ,KAAO,CACT,CACIz7C,GAtyDQ,IAuyDRu5B,UAAW,QAEf,CACIv5B,GAzyDQ,IA0yDRu5B,UAAW,QAEf,CACIv5B,GA5yDQ,IA6yDRu5B,UAAW,SAInB+I,EAAM2yF,aAAe,CACjB1+H,MAAK,YAAA6H,OAAc+xH,EAAe7xH,KAAK,OAGpC,IAAImoE,sBAAsB,CAC7Bl0D,KAAM0mB,EAAK1mB,KACXmpB,IAAK4nB,EAAAA,EAAUrD,MAAMvkB,MAIjC0a,EAAwBl/C,UAAU2vE,qBAAuB,SAAS8a,GAAa,IAAA/f,EAAA7gE,KAU3E,GATAA,KAAK2jD,MAAM,qCAAsCutE,EAAQtwC,IAIzDA,EAAc5gF,KAAKgwH,UAAUsH,uBAAuB12C,GACpD5gF,KAAK2jD,MACD,kDACAutE,EAAQtwC,IAER5gF,KAAKyR,QAAQ2sD,WAAY,CACzB,IAAM+4D,EAAY50E,EAAAA,EAAUjhC,MAAMs/D,EAAYjmD,KACxCzB,EAAai+F,EAAU7gG,MAAMsD,KAAK,SAAAjlC,GAAC,MAAe,UAAXA,EAAE6c,OAE/C+jB,EAAAA,EAAQwF,iBAAiB7B,EAAY,QAGrC0nD,EAAc,IAAIlb,sBAAsB,CACpCl0D,KAAMovE,EAAYpvE,KAClBmpB,IAAK4nB,EAAAA,EAAUrD,MAAMi4E,KA4C7B,OAvCInsG,EAAAA,EAAQu+E,mBAER3oB,EAAc,IAAIlb,sBAAsB,CACpCl0D,KAAMovE,EAAYpvE,KAClBmpB,IAAK36B,KAAKuwH,YAAYgH,SAAS32C,EAAYjmD,OAG/C36B,KAAK2jD,MACD,iDACAutE,EAAQtwC,IAGZA,EAAc5gF,KAAK8vH,QAAQsH,cAAcx2C,GACzC5gF,KAAK2jD,MACD,+CACAutE,EAAQtwC,IAER5gF,KAAKsxH,kBAEL1wC,EAAc5gF,KAAKq3H,mCAAmCz2C,GACtD5gF,KAAK2jD,MACD,oDACAutE,EAAQtwC,MAKhBA,EAAc2yC,EAAe3yC,GAK7B51D,EAAAA,EAAQm+E,uBAAyBn+E,EAAAA,EAAQ2X,oBACzCzZ,EAAOrZ,MAAM,oDAGb+wE,EAAc5gF,KAAKw3H,wBAAwB52C,IAGxC,IAAIx1C,QAAQ,SAACC,EAASC,GACzBu1B,EAAK70C,eAAe85C,qBAAqB8a,GACpC14C,KAAK,WACF24B,EAAKld,MAAM,iCACX,IAAM8rE,EAAcl6F,EAAAA,EAAQqF,SAASgmD,EAAYjmD,KAE7C80F,IAAgB5uD,EAAK4uD,cACrB5uD,EAAK4uD,YAAcA,EACnB5uD,EAAKj2C,aAAa2C,KACd6Y,EAAAA,EAAU7I,qBAAsBsjC,EAAM4uD,IAE9CpkF,KACD,SAAApxB,GACC4mD,EAAKld,MAAM,gCAAiC1pC,GAC5C4mD,EAAKj2C,aAAa2C,KACd6Y,EAAAA,EAAUnJ,8BACVhjB,EACA4mD,GACJv1B,EAAOrxB,QAiBvBo7B,EAAwBl/C,UAAUqhI,wBAA0B,SACpD52C,GACJ,IAAMu2C,EAAY50E,EAAAA,EAAUjhC,MAAMs/D,EAAYjmD,KACxCzB,EAAai+F,EAAU7gG,MAAMsD,KAAK,SAAAjlC,GAAC,MAAe,UAAXA,EAAE6c,OAE/C,IAAK0nB,EAGD,OAFAhQ,EAAOrZ,MAAM,gDAEN+wE,EAGX,GAAI1nD,EAAWgC,IAAIs/C,KAAK,SAAAt/C,GAAG,MAAgC,SAA5BA,EAAIC,MAAMhtB,gBAGrC,OAFA+a,EAAOrZ,MAAM,uDAEN+wE,EAOX,IApBiB,IAkBb62C,EAFI37F,EAAwB5C,EAAxB4C,KAAMR,EAAkBpC,EAAlBoC,SAAUJ,EAAQhC,EAARgC,IAClBw8F,EAAgBp8F,EAAS76B,WAAW5D,MAAM,KAGvCtI,EAAI,IAAKA,GAAK,GAAIA,IACvB,IAAKmjI,EAAczrF,SAAS13C,GAAI,CAC5BkjI,EAAmBljI,EACnBmjI,EAAc75H,KAAKtJ,GACnB2kC,EAAWoC,SAAWo8F,EAAcn6H,KAAK,KACzC,MAIR,YAAgC,IAArBk6H,GACPvuG,EAAOtZ,MAAM,gDAENgxE,IAGX1lD,EAAIr9B,KAAK,CACLs9B,MAAO,OACPC,QAASq8F,EACTlzC,KAAM,MAGVzoD,EAAKj+B,KAAK,CACNtC,OAAQ,yEAGR6/B,QAASq8F,IAGbvuG,EAAOrZ,MAAP,+BAAAxS,OACmCo6H,EADnC,uBAGO,IAAI/xD,sBAAsB,CAC7Bl0D,KAAMovE,EAAYpvE,KAClBmpB,IAAK4nB,EAAAA,EAAUrD,MAAMi4E,OAiB7B9hF,EAAwBl/C,UAAUmyE,uBAAyB,SAAS2M,GAChE/rD,EAAOrZ,MAAP,GAAAxS,OAAgB2C,KAAhB,4BAAA3C,OAA+C43E,IAC/C,IAAMwkB,EAAUz5F,KAAKyjE,sBAAwBwR,EAI7C,OAFAj1E,KAAKyjE,oBAAsBwR,EAEpBwkB,GAOXpkD,EAAwBl/C,UAAUsrE,qBAAuB,WACrD,IAAMtf,EAAU5sB,EAAAA,EAAQyE,eAExB9Q,EAAOpZ,KAAP,GAAAzS,OAAe2C,KAAf,kCAAA3C,OAAoD8kD,IACpDniD,KAAKmwH,eAAe6E,eAAe7yE,IAOvC9M,EAAwBl/C,UAAUqwE,kBAAoB,WAClDt9C,EAAOpZ,KAAK,gCACZ9P,KAAKmwH,eAAewH,uBAQxBtiF,EAAwBl/C,UAAUsvB,MAAQ,WACtCzlB,KAAK2jD,MAAM,QAGX3jD,KAAKg9D,eAAeld,IAChBoiE,EAAAA,EAAoCliH,KAAK2vH,mBAC7C3vH,KAAKg9D,eAAeld,IAChBoiE,EAAAA,EAAyCliH,KAAK0vH,uBAPD,IAAAkI,GAAA,EAAAC,GAAA,EAAAC,OAAAn9H,EAAA,IASjD,IAAA,IAAAo9H,EAAAC,EAAyBh4H,KAAK41C,aAAa/nB,SAA3Cv4B,OAAAw4B,cAAA8pG,GAAAG,EAAAC,EAAAjqG,QAAAC,MAAA4pG,GAAA,EAAqD,CAAA,IAA1CK,EAA0CF,EAAAviI,MAAA0iI,GAAA,EAAAC,GAAA,EAAAC,OAAAz9H,EAAA,IACjD,IAAA,IAAA09H,EAAAC,EAA0BL,EAAWpqG,SAArCv4B,OAAAw4B,cAAAoqG,GAAAG,EAAAC,EAAAvqG,QAAAC,MAAAkqG,GAAA,EAA+C,CAAA,IAApC9+D,EAAoCi/D,EAAA7iI,MAC3CwK,KAAKqzH,mBAAmBj6D,IAFqB,MAAAn/C,GAAAk+G,GAAA,EAAAC,EAAAn+G,EAAA,QAAA,IAAAi+G,GAAA,MAAAI,EAAAlqG,QAAAkqG,EAAAlqG,SAAA,QAAA,GAAA+pG,EAAA,MAAAC,KATJ,MAAAn+G,GAAA49G,GAAA,EAAAC,EAAA79G,EAAA,QAAA,IAAA29G,GAAA,MAAAI,EAAA5pG,QAAA4pG,EAAA5pG,SAAA,QAAA,GAAAypG,EAAA,MAAAC,GAcjD93H,KAAK41C,aAAa2zB,QAElBvpE,KAAKsvH,cAAgB,GAEhBtvH,KAAKw2D,IAAI+hE,sBAAsBv4H,OAChCkpB,EAAOtZ,MAAM,4CAEU,OAAvB5P,KAAK4vH,gBACLz7H,OAAO2zC,cAAc9nC,KAAK4vH,eAC1B5vH,KAAK4vH,cAAgB,MAEzB1mG,EAAOpZ,KAAP,WAAAzS,OAAuB2C,KAAvB,QACAA,KAAKgsB,eAAevG,SA8OxB,SAASwwG,EAAmB30E,GACxB,OAAIA,GAAWA,EAAQ5F,QAAU4F,EAAQ5F,OAAO1+C,OACrCskD,EAAQ5F,OAAO,GAAGtiB,MAAM,GACxBkoB,GAAWA,EAAQloB,OAASkoB,EAAQloB,MAAMp8B,OAC1CskD,EAAQloB,MAAM,GAGlB,KAvLXic,EAAwBl/C,UAAU4vE,aAAe,SAASjzC,GACtD,GAAI9H,EAAAA,EAAQgO,aAAeh5B,KAAKsxH,gBAAiB,CAC7C,IAGMkH,EAAY,CACdC,UAAW,CACP,CACIhiH,IAxmEI,IAymEJiiH,sBAAuB,GAE3B,CACIjiH,IA3mEI,IA4mEJiiH,sBAAuB,GAE3B,CACIjiH,IA9mEI,OAimEVzW,KAAKgsB,eAAe+pG,aAAan8F,KAAK,SAAAo8F,GAAM,OACzB,OAAjBA,EAAOppF,OAAwC,UAAtBopF,EAAOppF,MAAMpG,OAiBlCmyF,cAAcH,GAG9B,OAAOx4H,KAAK44H,sBAAqB,EAAoB9lG,IAGzDuiB,EAAwBl/C,UAAU6rE,YAAc,SAASlvC,GACrD,OAAO9yB,KAAK44H,sBAAqB,EAAkB9lG,IAGvDuiB,EAAwBl/C,UAAUyiI,qBAAuB,SACjDC,EACA/lG,GAAa,IAAAsuC,EAAAphE,KACXk5F,EAAU2/B,EAAU,QAAU,SAEpC74H,KAAK2jD,MAAL,SAAAtmD,OAAoB67F,GAAWniF,KAAKyK,UAAUsR,EAAa,KAAM,MAEjE,IAAMgmG,EAAgB,SAACC,EAAWC,EAAWC,GACzC,IA2EI,GA1EA73D,EAAKzd,MAAL,SAAAtmD,OACa67F,EADb,2BAC+Cg4B,EAAQ6H,IAGnD/tG,EAAAA,EAAQu+E,oBAERwvB,EAAY33D,EAAK0uD,QAAQsE,QAAQ2E,GACjC33D,EAAKzd,MAAL,SAAAtmD,OACa67F,EADb,qCAEIg4B,EAAQ6H,IACR33D,EAAKkwD,kBAELyH,EACM33D,EAAK6yD,oCAAoC8E,GAC/C33D,EAAKzd,MACD,SAAAtmD,OAAS67F,EAAT,4BACE,sBAAuBg4B,EAAQ6H,MAYxC/tG,EAAAA,EAAQu+E,oBAGJnoC,EAAKiwD,mBAAmBxkF,EAAAA,IACrBu0B,EAAK+uD,eAAe+I,wBACxB93D,EAAKK,uBAITs3D,EAAY,IAAIrzD,sBAAsB,CAClCl0D,KAAMunH,EAAUvnH,KAChBmpB,IAAKymC,EAAK+uD,eAAegJ,gCACrBJ,EAAUp+F,OAGlBymC,EAAKzd,MACD,SAAAtmD,OAAS67F,EAAT,6BACO,8CACPg4B,EAAQ6H,KAIZ33D,EAAKkwD,kBAELyH,EAAY33D,EAAK4uD,UAAUoJ,sBAAsBL,GACjD33D,EAAKzd,MACD,SAAAtmD,OAAS67F,GACH,uCACNg4B,EAAQ6H,MAGX33D,EAAK3vD,QAAQk6C,YAAc3gC,EAAAA,EAAQ4gC,gBAEpCmtE,EAAY,IAAIrzD,sBAAsB,CAClCl0D,KAAMunH,EAAUvnH,KAChBmpB,IAAKymC,EAAKmvD,YAAY8I,eAAeN,EAAUp+F,OAGnDymC,EAAKzd,MACD,SAAAtmD,OAAS67F,GACF,0CACPg4B,EAAQ6H,MAKXF,EAAS,CACV,IAAM7zD,EACA,IAAI5sB,EAAAA,EAAIgpB,EAAK4D,kBAAkBrqC,KAC/BmlC,EAAmB,IAAI1nB,EAAAA,EAAI2gF,EAAUp+F,KArKnBurC,EAuKDlB,EAvKQgB,EAuKWlG,GAtKhD90C,EAAAA,EAAQ8d,mBAAqB9d,EAAAA,EAAQC,kBA+BvCi7C,GAASF,GACFE,EAAM5vC,OAAS0vC,EAAO1vC,OACtB4vC,EAAM5vC,MAAMt5B,SAAWgpE,EAAO1vC,MAAMt5B,SAC3CgpE,EAAO1vC,MAAMr1B,QAAQ,SAACgC,EAAG1O,GACjBghC,EAAAA,EAAQO,SACJowC,EAAM5vC,MAAM/hC,GACZ,kBACA2xE,EAAM7kD,WACV2kD,EAAO1vC,MAAM/hC,GACP0O,EAAE9F,QAAQ,kBAAmB,sBAG3C6oE,EAAO7rD,IAAM6rD,EAAO3kD,QAAU2kD,EAAO1vC,MAAM/4B,KAAK,KA8HxCw7H,EAAY,IAAIrzD,sBAAsB,CAClCl0D,KAAMunH,EAAUvnH,KAChBmpB,IAAKmlC,EAAiB3lD,MAI9B,IAAM8/B,EAvzClB,SAAwB/hB,GAKpB,IAAM+hB,EAAU,IAAItvB,IAMd2uG,EAAY,IAAI3uG,IAEtB,GAAoB,WAAhBlrB,EAAOy4B,IAA8B,OAATA,GACL,iBAAbA,EAAKyC,IAGf,OAFAzR,EAAOnZ,KAAK,mDAELkqC,EAGX,IAAM54B,EAAUkhC,EAAAA,EAAUjhC,MAAM4W,EAAKyC,KAErC,IAAKv6B,MAAMG,QAAQ8gB,EAAQiV,OACvB,OAAO2jB,EAvBe,IAAAs/E,GAAA,EAAAC,GAAA,EAAAC,OAAA9+H,EAAA,IA0B1B,IAAA,IAAA++H,EAAAC,EAAoBt4G,EAAQiV,MAA5BhhC,OAAAw4B,cAAAyrG,GAAAG,EAAAC,EAAA5rG,QAAAC,MAAAurG,GAAA,EAAmC,CAAA,IAAxBn/F,EAAwBs/F,EAAAlkI,MAC/B,GAAK4K,MAAMG,QAAQ65B,EAAMhB,OAAzB,CAIA,GAAIh5B,MAAMG,QAAQ65B,EAAMX,YAAa,CAAA,IAAAmgG,GAAA,EAAAC,GAAA,EAAAC,OAAAn/H,EAAA,IACjC,IAAA,IAAAo/H,EAAAC,EAAoB5/F,EAAMX,WAA1BnkC,OAAAw4B,cAAA8rG,GAAAG,EAAAC,EAAAjsG,QAAAC,MAAA4rG,GAAA,EAAsC,CAAA,IAA3B//F,EAA2BkgG,EAAAvkI,MAClC,QAA+B,IAApBqkC,EAAMC,gBACa,IAAhBD,EAAMT,MAAuB,CAEvC,IAAM6gG,EACApgG,EAAMT,MAAMv8B,MAAM,KAAKC,IACrB,SAAA29B,GAAO,OAAI/Y,SAAS+Y,EAAS,MAC/B+mB,EAAcy4E,EAAW,GAI/BpgG,EAAMT,MAAQ6gG,EAGTX,EAAUnqG,IAAIqyB,IACf83E,EAAUltG,IAAIo1B,EAAa,IAE/B83E,EAAUlkI,IAAIosD,GAAa3jD,KAAKg8B,KAlBP,MAAA5f,GAAA4/G,GAAA,EAAAC,EAAA7/G,EAAA,QAAA,IAAA2/G,GAAA,MAAAI,EAAA5rG,QAAA4rG,EAAA5rG,SAAA,QAAA,GAAAyrG,EAAA,MAAAC,IALN,IAAAI,GAAA,EAAAC,GAAA,EAAAC,OAAAz/H,EAAA,IA2B/B,IAAA,IAAA0/H,EAAAC,EAAmBlgG,EAAMhB,MAAzB9jC,OAAAw4B,cAAAosG,GAAAG,EAAAC,EAAAvsG,QAAAC,MAAAksG,GAAA,EAAgC,CAAA,IAArBlpG,EAAqBqpG,EAAA7kI,MAC5B,GAAuB,SAAnBw7B,EAAK5nB,UAAT,CAIA,IAAMq4C,EAAOzwB,EAAKx7B,MACd6jC,EAAW4gB,EAAQ7kD,IAAIqsD,GAEtBpoB,IACDA,EAAW,CACPD,MAAO,GACPsiB,OAAQ,GACR+F,KAAAA,GAEJxH,EAAQ7tB,IAAIq1B,EAAMpoB,IAGtB,IAAM+nB,EAAapwB,EAAK/xB,GAIxB,GAFAo6B,EAASD,MAAMv7B,KAAKujD,GAEhBk4E,EAAUnqG,IAAIiyB,GAAa,CAC3B,IAAM3nB,EAAa6/F,EAAUlkI,IAAIgsD,GADNm5E,GAAA,EAAAC,GAAA,EAAAC,OAAA9/H,EAAA,IAG3B,IAAA,IAAA+/H,EAAAC,EAAoBlhG,EAApBnkC,OAAAw4B,cAAAysG,GAAAG,EAAAC,EAAA5sG,QAAAC,MAAAusG,GAAA,EAAgC,CAAA,IAArB1gG,EAAqB6gG,EAAAllI,MAC5B6jC,EAASqiB,OAAO79C,KAAKg8B,IAJE,MAAA5f,GAAAugH,GAAA,EAAAC,EAAAxgH,EAAA,QAAA,IAAAsgH,GAAA,MAAAI,EAAAvsG,QAAAusG,EAAAvsG,SAAA,QAAA,GAAAosG,EAAA,MAAAC,OAhDJ,MAAAxgH,GAAAkgH,GAAA,EAAAC,EAAAngH,EAAA,QAAA,IAAAigH,GAAA,MAAAI,EAAAlsG,QAAAksG,EAAAlsG,SAAA,QAAA,GAAA+rG,EAAA,MAAAC,MA1BT,MAAAngH,GAAAu/G,GAAA,EAAAC,EAAAx/G,EAAA,QAAA,IAAAs/G,GAAA,MAAAI,EAAAvrG,QAAAurG,EAAAvrG,SAAA,QAAA,GAAAorG,EAAA,MAAAC,GAoF1B,OAAOx/E,EAmuCiB2gF,CAAe7B,GAE/B7vG,EAAOrZ,MAAM,wBAAyBoqC,GACtCmnB,EAAKy5D,sBAAsB5gF,GAE3B++E,EAAUD,GACZ,MAAO/5H,GACLoiE,EAAKzd,MAAL,SAAAtmD,OAAoB67F,EAApB,WAAsCl6F,GACtCoiE,EAAKzd,MAAL,SAAAtmD,OAAoB67F,EAApB,WAAsCg4B,EAAQ6H,IAC9C7vG,EAAOtZ,MAAP,SAAAvS,OAAsB67F,EAAtB,WAAwCl6F,EAAGkyH,EAAQ6H,IAEnDE,EAASj6H,GA3LU,IAASknE,EAAOF,GA2M3C,OAAO,IAAI56B,QAAQ,SAACC,EAASC,IAGrButF,EACYz3D,EAAKp1C,eAAeg2C,YAAYlvC,GAEhCsuC,EAAKp1C,eAAe+5C,aAAajzC,IAI5CoV,KACG,SAAAvN,GAAG,OAAIm+F,EAAcn+F,EAAK0Q,EAASC,IACnC,SAAA17B,GAAK,OAxBK,SAACqK,EAAKg/G,GACxB73D,EAAKzd,MAAL,SAAAtmD,OAAoB67F,EAApB,aAAwCj/E,GACxC,IAAMk5B,EACA0lF,EACIzyF,EAAAA,EAAUjK,oBACViK,EAAAA,EAAUlK,qBAEpBklC,EAAKx2C,aAAa2C,KAAK4lB,EAAWl5B,EAAKmnD,GAEvC63D,EAASh/G,GAeQ6gH,CAAclrH,EAAO07B,QA0B9C+J,EAAwBl/C,UAAU0kI,sBAAwB,SAAS5gF,GAAS,IAAA8gF,GAAA,EAAAC,GAAA,EAAAC,OAAAtgI,EAAA,IACxE,IAAA,IAAAugI,EAAAC,EAAoBn7H,KAAKmyC,YAAYtkB,SAArCv4B,OAAAw4B,cAAAitG,GAAAG,EAAAC,EAAAptG,QAAAC,MAAA+sG,GAAA,EAA+C,CAAA,IAApCnuF,EAAoCsuF,EAAA1lI,MACrC4lI,EAAYxuF,EAAMurC,WAExB,GAAIl+B,EAAQ9qB,IAAIisG,GAAY,CACxB,IAAMj5E,EAAUlI,EAAQ7kD,IAAIgmI,GAE5B,IAAKj5E,EAGD,YAFAj5B,EAAOtZ,MAAP,sBAAAvS,OAAmC+9H,EAAnC,QAAA/9H,OAAmD2C,OAIvD,IAAMkiD,EAAUliD,KAAKuvH,WAAWn6H,IAAIw3C,EAAM+E,OACpC0pF,EAAapF,EAAmB9zE,GAChCm5E,EAAarF,EAAmB/zE,GAGlCm5E,IAAeC,GACI,OAAfA,EACApyG,EAAOpZ,KAAP,8BAAAzS,OACkCuvC,EADlC,QAAAvvC,OAC8C2C,MAC1CmiD,GAEJj5B,EAAOtZ,MAAP,wBAAAvS,OAC4BuvC,EAD5B,KAAAvvC,OACqC+9H,EADrC,QAAA/9H,OACqD2C,KADrD,WAEemiD,GAEnBniD,KAAKuvH,WAAWnjG,IAAIwgB,EAAM+E,MAAOwQ,GAEjCniD,KAAK4qB,aAAa2C,KACd6Y,EAAAA,EAAU1J,yBAA0BkQ,EAAOyuF,IAE/CnyG,EAAOrZ,MACH,kBAAAxS,OAAkBg+H,EAAlB,UAAAh+H,OAAqCuvC,EAArC,KAAAvvC,OAA8C+9H,GAA9C,0BAAA/9H,OAC6B2C,YAE7B4sC,EAAM25B,gBAAmB35B,EAAMuuB,WAIvCjyC,EAAOnZ,KAAP,uCAAA1S,OAAmDuvC,EAAnD,WAAAvvC,OAAkE+9H,EAAlE,QAAA/9H,OAAkF2C,QAxClB,MAAAia,GAAA+gH,GAAA,EAAAC,EAAAhhH,EAAA,QAAA,IAAA8gH,GAAA,MAAAI,EAAA/sG,QAAA+sG,EAAA/sG,SAAA,QAAA,GAAA4sG,EAAA,MAAAC,KA6C5E5lF,EAAwBl/C,UAAU+qE,gBAAkB,SAAS5pC,GAQzD,OAPAt3B,KAAK2jD,MAAM,kBAAmB5sC,KAAKyK,UAAU,CACzC8V,UAAWA,EAAUA,UACrBmpC,OAAQnpC,EAAUmpC,OAClBT,cAAe1oC,EAAU0oC,cACzBwe,iBAAkBlnD,EAAUknD,kBAC7B,KAAM,MAEFx+E,KAAKgsB,eAAek1C,gBAAgB5pC,IAY/C+d,EAAwBl/C,UAAU+kG,SAAW,SAAS97F,EAAU0Y,GAIxDkT,EAAAA,EAAQm+E,sBAAwBn+E,EAAAA,EAAQgO,aACjChO,EAAAA,EAAQC,gBAEfjrB,KAAKgsB,eAAekvE,WACfhzD,KAAK9oC,GACLosC,MAAM1zB,GAAY,cAMvB9X,KAAKgsB,eAAekvE,SAAS97F,IAWrCi2C,EAAwBl/C,UAAU4+H,0BAA4B,SAASnoF,GACnE,IAAM+E,EAAQ/E,EAAM+E,MAChBtY,EAAWr5B,KAAKg0H,SAASriF,GAK7B,GAHItY,GACAnQ,EAAOtZ,MAAP,4CAAAvS,OAAyDs0C,IAEzD3xC,KAAKsxH,gBAAiB,CACtBj4F,EAAW,CACPD,MAAO,GACPsiB,OAAQ,IAEZ,IAAK,IAAInnD,EAAI,EAAGA,EAAI46H,EAAkB56H,IAClC8kC,EAASD,MAAMv7B,KAAK03B,EAAAA,EAAQyE,gBAEhCX,EAASqiB,OAAO79C,KAAK,CACjBu7B,MAAOC,EAASD,MAAMz9B,QACtBm+B,UAAW,aAGfT,EAAW,CACPD,MAAO,CAAE7D,EAAAA,EAAQyE,gBACjB0hB,OAAQ,IAGhB,IAAK17C,KAAKyR,QAAQk6C,YAAc3gC,EAAAA,EAAQ4gC,cAOpC,IAFA,IAAM2vE,EAAeliG,EAASD,MAAMp8B,OAE3BzI,EAAI,EAAGA,EAAIgnI,IAAgBhnI,EAAG,CACnC,IAAMmlC,EAAcL,EAASD,MAAM7kC,GAC7B6gI,EAAU7/F,EAAAA,EAAQyE,eAExBX,EAASD,MAAMv7B,KAAKu3H,GACpB/7F,EAASqiB,OAAO79C,KAAK,CACjBu7B,MAAO,CAAEM,EAAa07F,GACtBt7F,UAAW,QAOvB,OAHAT,EAASooB,KAAO7U,EAAMurC,WACtBn4E,KAAKuvH,WAAWnjG,IAAIulB,EAAOtY,GAEpBA,GAiDXgc,EAAwBl/C,UAAUupE,cAAgB,SAASD,GACnDz/D,KAAKyR,QAAQ+sD,wBACbt1C,EAAOrZ,MAAM,4BAAA,uBAAAxS,OACgBoiE,IAjDP,SAASy2B,EAAgBz2B,GACnD,GAAKy2B,EAAe6/B,WAApB,CAMA,IAAMyF,EAActlC,EAAe6/B,aAC9Bn8F,KAAK,SAAAo8F,GAAM,MAA0B,UAAtBA,EAAOppF,MAAMpG,OAEjC,GAAKg1F,EAKL,GAAKA,EAAYC,cAAjB,CAKA,IAAMn8C,EAAak8C,EAAYC,gBAE3Bh8D,GACAv2C,EAAOrZ,MAAM,+CAGbyvE,EAAWm5C,UAAUx3H,QAAQ,SAAAjC,GACzBA,EAAEi2E,QAAS,MAGf/rD,EAAOrZ,MAAM,kDAGb,CAAE,EAAG,GAAI5O,QAAQ,SAAAy6H,GACTp8C,EAAWm5C,UAAUiD,KACrBp8C,EAAWm5C,UAAUiD,GAAUzmD,QAAS,MAIpDumD,EAAY7C,cAAcr5C,QAvBtBp2D,EAAOrZ,MAAM,qDALbqZ,EAAOnZ,KAAK,0DATZmZ,EAAOrZ,MAAM,qCAgDb8rH,CAAsB37H,KAAKgsB,eAAgByzC,KASnDpqB,EAAwBl/C,UAAUsK,SAAW,WACzC,MAAA,OAAApD,OAAc2C,KAAKf,GAAnB,SAAA5B,OAA6B2C,KAAKozC,MAAlC,84BC5/EJ,IAAMlqB,EAASnuB,EAAQ,GAAqBiuB,UAAUO,GAChD6c,EAAYrrC,EAAQ,GAEtB6gI,GAA2B,EAC3BC,GAA2B,EAMzBC,EAAkB,CACpB,QAAS,UAAW,iBAAkB,UAAW,QAAS,QAAS,aAAc,iBAAkB,YACnG,QAAS,OAAQ,UAAW,aAAc,UAAW,UAAW,WAQ/C/I,cAmBjB,SAAAA,EACQv8D,EACAvkB,EACAugF,EACAjmG,EACAqgB,EACAxM,EACA0M,EACA9b,EACAF,EACAsiB,GAAO,IAAAvL,MAaX,+FAbWJ,CAAAznC,KAAA+yH,KACX/yH,OAAA2nC,EAAAorF,GAAAr+H,KAAAsL,KACIiyC,EACA1lB,EACAqgB,EACA,aAGAxM,EACA0M,IARJjF,oDASK2uB,IAAMA,EAGS,iBAATxlC,EACP,MAAM,IAAI3vB,UAAJ,QAAAhE,OAAsB2zB,EAAtB,qBAdC,OAgBX6W,EAAK7W,KAAOA,EACZ6W,EAAK2qF,gBAAkBA,EACvB3qF,EAAK/W,MAAQA,EACb+W,EAAKuL,MAAQA,EAEblqB,EAAOrZ,MAAP,2BAAAxS,OAAAw1C,EAAAA,EAAAhL,MAKAA,EAAKk0F,aAAejrG,EAGhB+W,EAAK2uB,KAAO3uB,EAAK+E,OACjB/E,EAAKm0F,qBAETn0F,EAAKo0F,mBAAqB,GAC1BH,EAAgB76H,QAAQ,SAAAi0B,GACpB2S,EAAKo0F,mBAAmB/mG,GAAS2S,EAAKq0F,uBAAuBnmI,KAA5B88C,EAAAA,EAAAhL,IAAuC3S,KAlCjE2S,wPA7B2BusC,EAAAA,yDAyErB,IAAA1oC,EAAA1rC,KACjBA,KAAK4sC,MAAMrC,iBAAiB,OAAQ,WAAA,OAAMmB,EAAKywF,iBAC/Cn8H,KAAK4sC,MAAMrC,iBAAiB,SAAU,WAAA,OAAMmB,EAAK0wF,mBACjDp8H,KAAK4sC,MAAMrC,iBAAiB,QAAS,WACjCrhB,EAAOrZ,MAAP,mBAAAxS,OAAgCoV,KAAK8K,MAArC,OAAAlgB,OAAgDquC,6CAYpDxiB,EAAOrZ,MAAP,kBAAAxS,OAA+BoV,KAAK8K,MAApC,OAAAlgB,OAA+C2C,OAE/CA,KAAKw2D,IAAI5rC,aAAa2C,KAAK6Y,EAAUvJ,kBAAmB78B,+CAWxDkpB,EAAOrZ,MAAP,oBAAAxS,OAAiCoV,KAAK8K,MAAtC,OAAAlgB,OAAiD2C,OAEjDA,KAAKw2D,IAAI5rC,aAAa2C,KAAK6Y,EAAUrJ,oBAAqB/8B,sCAOtDxK,GACAwK,KAAK8wB,QAAUt7B,IAIfA,IACAwK,KAAK+7H,cAAe,GAIpB/7H,KAAKusB,SACLvsB,KAAKusB,OAAOuE,MAAQt7B,GAGxBwK,KAAK8wB,MAAQt7B,EACbwK,KAAKutB,KAAK+rC,EAAAA,mBAAqCt5D,yCAS/C,OAAOA,KAAK8wB,iDAUZ,OAAO9wB,KAAKwyH,kDAOZ,OAAO,oCAUP,OAAOxyH,KAAKgxB,2CAQFxf,GACNxR,KAAK8sC,YAAct7B,IAGvBxR,KAAK8sC,UAAYt7B,EACjBxR,KAAKutB,KAAK+rC,EAAAA,wBAA0C9nD,4CAOpD,IAAMA,EAAOxR,KAAKumE,eAAiB,QAAU,QAEvChpD,EAAMppB,OAAO83D,YAAY1uC,MAE/B5N,QAAQH,IAAR,iBAAAnS,OAA6BmU,EAA7B,OAAwC+L,GACxCvd,KAAKiyC,WAAW81C,qBAAhB,GAAA1qF,OAAwCmU,EAAxC,YAAyD+L,EAKzD,IAAM8+G,EAAWloI,OAAOy2D,gBAAgB,2BAClC0xE,EAASnoI,OAAOy2D,gBAAgB,yBAChC2xE,EACCn6H,MAAMk6H,IAAYl6H,MAAMi6H,GAAgC,EAApBC,EAASD,EAI9CG,EAAOj/G,GACNvd,KAAKiyC,WAAW81C,qBAAqB,oBAClC/nF,KAAKiyC,WAAW81C,qBAAqB,eACzCw0C,EAENv8H,KAAKiyC,WAAW81C,qBAAhB,GAAA1qF,OAAwCmU,EAAxC,UAAuDgrH,EACvD7sH,QAAQH,IAAR,eAAAnS,OAA2BmU,EAA3B,OAAsCgrH,GAEtChyG,EAAAA,EAAW6K,cAAc0L,OAAAA,EAAAA,EAAAA,CACrB,CACIV,WAAc7uB,EACdsf,MAAO9wB,KAAK+7H,aACZvmI,MAAOgnI,gDAYA5nD,GACVgnD,GAA4B57H,KAAK22C,gBAC9BklF,GAA4B77H,KAAKumE,iBAIrCvmE,KAAK22C,iBACLilF,GAA2B,GAE3B57H,KAAKumE,iBACLs1D,GAA2B,GAG/BjnD,EAAUrqC,iBAAiB,UAAWvqC,KAAKy8H,cAAc1mI,KAAKiK,+CAUnD40E,GAAW,IAAAznC,EAAAntC,KACtBkpB,EAAOrZ,MAAP,2CAAAxS,OAAwD2C,OAExD87H,EAAgB76H,QAAQ,SAAAi0B,GACpB0/C,EAAUrqC,iBAAiBrV,EAAOiY,EAAK8uF,mBAAmB/mG,6CAWnD0/C,GAAW,IAAA3mC,EAAAjuC,KACtBkpB,EAAOrZ,MAAP,6CAAAxS,OAA0D2C,OAE1D87H,EAAgB76H,QAAQ,SAAAi0B,GACpB0/C,EAAU/0B,oBAAoB3qB,EAAO+Y,EAAKguF,mBAAmB/mG,qDAS9C1jB,GACnB0X,EAAOrZ,MAAP,GAAAxS,OAAgBmU,EAAhB,sDAAAnU,OAAyE2C,4CAQhE,IAAA08H,EAC8B18H,KAAK4sC,MAApCssC,EADCwjD,EACDxjD,QAASpoD,EADR4rG,EACQ5rG,MAAO1O,EADfs6G,EACet6G,WAExB,MAAA,eAAA/kB,OAAsB+kB,EAAtB,aAAA/kB,OAA4CyzB,EAA5C,eAAAzzB,OAA+D67E,sCAQ/D,MAAA,uBAAA77E,OAA8B2C,KAAKq5D,mBAAnC,YAAAh8D,OAAgE2C,KAAK21C,UAArE,YAAAt4C,OACI2C,KAAK83F,UADT,WAAAz6F,OAC4B2C,KAAKozC,MADjC,cAAA/1C,OACmD2C,KAAK28H,aADxD,sWCzTR,IAAMzzG,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAUJ+mG,aAOjB,SAAAA,EAAYniG,gGAAKsZ,CAAAznC,KAAAswH,GACbtwH,KAAKmuB,IAAMA,gFAkBgBmmG,GAE3B,IAAMsI,EAAc58H,KAAKmuB,IAAIqnB,eAAe3I,EAAAA,GAE5C,IAAK+vF,EAAY5/H,OACb,OAAO,EACuB,IAAvB4/H,EAAY5/H,QACnBksB,EAAOtZ,MACH,GAAAvS,OAAG2C,KAAKmuB,IAAR,wCACM,8BAA+ByuG,GAG7C,IAAM1jG,EAAao7F,EAAYE,YAAY,SAE3C,IAAKt7F,EAKD,OAJAhQ,EAAOrZ,MACH,GAAAxS,OAAG2C,KAAKmuB,IAAR,yCACM,uBAEH,EAGX,IAAIshD,GAAW,EAtByBjiD,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAwBxC,IAAA,IAAAgzB,EAAAC,EAAyBgvG,EAAzBtnI,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsC,CAAA,IAA3BgkG,EAA2B7jG,EAAAn4B,MAC5Bs7B,EAAQ0gG,EAAWr2D,UACnBlsB,EAAcuiF,EAAWvrC,oBAKzB42C,EACA5tF,GAAejvC,KAAKmuB,IAAI0nG,kBAAkB5mF,GAC1C6tF,EAAgBhsG,IAAU+rG,EAQhC,GANA3zG,EAAOrZ,MAAP,GAAAxS,OACO2C,KAAKmuB,IADZ,KAAA9wB,OACmBm0H,EADnB,YAAAn0H,OAEQyzB,EAFR,4BAAAzzB,OAGQw/H,EAHR,4BAAAx/H,OAIQy/H,IAEHA,EAAL,CAKA,IAAMC,EACA/8H,KAAKmuB,IAAImjG,gBACLtxH,KAAKmuB,IAAI6hG,UAAUgN,UACnB,CAAEh9H,KAAKmuB,IAAIgiG,eAAe8M,mBAEpC,GAAKF,EAAc//H,OAAnB,CAOAyyE,GAAW,EAMXv2C,EAAWV,UAAY,WAGvB,IAAMgpB,EAAcu7E,EAAc,GAM5BG,EAAY,YAAA7/H,OAAemkD,GAjDCnzB,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IAmDlC,IAAA,IAAA6zB,EAAAC,EAAsBsuG,EAAtBznI,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAAqC,CAAA,IAA1BkzB,EAA0B/yB,EAAAh5B,MAEjC0jC,EAAWikG,WAAW57E,GAGtBr4B,EAAOrZ,MAAP,GAAAxS,OACO2C,KAAKmuB,IADZ,2BAAA9wB,OACyCkkD,EADzC,SAAAlkD,OAEQm0H,IACRt4F,EAAWkkG,iBAAiB,CACxBn+H,GAAIsiD,EACJn4C,UAAW,QACX5T,MAAO0nI,IAEXhkG,EAAWkkG,iBAAiB,CACxBn+H,GAAIsiD,EACJn4C,UAAW,OACX5T,MAAOg8H,EAAWr5C,cAnEQ,MAAAl+D,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,GAsElC,GAAIwuG,EAAc//H,OAAS,EAAG,CAC1B,IAAM68B,EAAQ,CACVT,MAAO2jG,EAAcx/H,KAAK,KAC1Bu8B,UAAW,OAGVZ,EAAWwoB,UAAU7nB,EAAMC,UAAWD,EAAMT,SAE7ClQ,EAAOrZ,MAAP,GAAAxS,OACO2C,KAAKmuB,IADZ,6BAAA9wB,OAC2Cm0H,GACvC33F,GACJX,EAAWmkG,aAAaxjG,IAQ3B75B,KAAKmuB,IAAI1c,QAAQk6C,YAClB3rD,KAAKmuB,IAAIoiG,YAAY+M,gBAAgBpkG,QA9DrChQ,EAAOtZ,MAAP,wBAAAvS,OAC4Bm0H,EAD5B,QAAAn0H,OAC6C2C,KAAKmuB,QArDlB,MAAAlU,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAsHxC,OAAO+hD,qDAagBwQ,GACvB,IAAMs9C,EAAOv9H,KAAKmuB,IAAIlvB,GADeuwB,GAAA,EAAAC,GAAA,EAAAC,OAAA/0B,EAAA,IAGrC,IAAA,IAAAg1B,EAAAC,EAAuBqwD,EAAa7mD,MAApC9jC,OAAAw4B,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAA2C,CAAA,IAAhC8K,EAAgC3K,EAAAn6B,MACvC,OAAQ8kC,EAASlxB,WACjB,IAAK,QACL,IAAK,QACL,IAAK,UACDkxB,EAAS9kC,MAAQ8kC,EAAS9kC,OAAT,GAAA6H,OAAqBi9B,EAAS9kC,MAA9B,KAAA6H,OAAuCkgI,GACxD,MACJ,IAAK,OACD,GAAIjjG,EAAS9kC,MAAO,CAChB,IAAMgoI,EAAoBljG,EAAS9kC,MAAMqH,MAAM,KAE/C,GAAiC,IAA7B2gI,EAAkBxgI,OAAc,CAChC,IAAM02C,EAAW8pF,EAAkB,GAC7BroD,EAAUqoD,EAAkB,GAElCljG,EAAS9kC,MAAT,GAAA6H,OACSq2C,EADT,KAAAr2C,OACqBkgI,EADrB,KAAAlgI,OAC6B83E,EAD7B,KAAA93E,OACwCkgI,QAExCr0G,EAAOnZ,KACH,6BAAA,4BAAA1S,OACkCi9B,EAAS9kC,WAvB1B,MAAAykB,GAAAwV,GAAA,EAAAC,EAAAzV,EAAA,QAAA,IAAAuV,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,QAAA,GAAAqB,EAAA,MAAAC,+DAwCNwI,GAC/B,IAAKA,EACD,MAAM,IAAIh6B,MAAM,mCAGpB,IAAMo2H,EAAc,IAAIlyE,EAAAA,EAAiBlqB,EAAKyC,KAE9C,OAAI36B,KAAKy9H,+BAA+BnJ,GAC7B,IAAI5uD,sBAAsB,CAC7Bl0D,KAAM0mB,EAAK1mB,KACXmpB,IAAK25F,EAAYI,aAIlBx8F,qDAkBgBwlG,GAEvB,IAAKA,IAAgBA,EAAY/iG,MAAQ+iG,EAAYlsH,KACjD,OAAOksH,EAGX,IAAMpJ,EAAc,IAAIlyE,EAAAA,EAAiBs7E,EAAY/iG,KAC/CgjG,EAAarJ,EAAYE,YAAY,SAEvCmJ,GACA39H,KAAK49H,2BAA2BD,GAGpC,IAAMzkG,EAAao7F,EAAYE,YAAY,SAM3C,OAJIt7F,GACAl5B,KAAK49H,2BAA2B1kG,GAG7B,IAAIwsC,sBAAsB,CAC7Bl0D,KAAMksH,EAAYlsH,KAClBmpB,IAAK25F,EAAYI,4WCpQ7B,IAAMxrG,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAezB,SAASs0G,EAA0BzjG,EAAO0jG,EAAiB1I,GACvDlsG,EAAOrZ,MACH,+BAAAxS,OAA+B+3H,GAA/B,iCAAA/3H,OACmCygI,EAAgB7+H,KACvD,IAAMy6B,EAAcokG,EAAgB7+H,GAC9B8+H,EAAkBD,EAAgBr8E,KAClCu8E,EAAmBF,EAAgB17C,MAEnC67C,EAAkB7jG,EAAM8jG,WAAWxkG,GAErCukG,IAAoB7I,GAKpB6I,IACA/0G,EAAOrZ,MACH,GAAAxS,OAAGq8B,EAAH,uCAAA,GAAAr8B,OACK4gI,EADL,oCAKJ7jG,EAAM+iG,WAAWc,GAEjB/0G,EAAOrZ,MAAP,+BAAAxS,OAA4C4gI,IAC5C/0G,EAAOrZ,MAAMuqB,EAAM+jG,kBAEnB/jG,EAAMgkG,qBAAqBH,IAE/B7jG,EAAMgjG,iBAAiB,CACnBn+H,GAAIm2H,EACJhsH,UAAW,QACX5T,MAAOwoI,IAEX5jG,EAAMgjG,iBAAiB,CACnBn+H,GAAIm2H,EACJhsH,UAAW,OACX5T,MAAOuoI,IAEX3jG,EAAMijG,aAAa,CACfvjG,UAAW,MACXV,MAAK,GAAA/7B,OAAKq8B,EAAL,KAAAr8B,OAAoB+3H,MA9BzBlsG,EAAOrZ,MAAP,GAAAxS,OAAgB+3H,EAAhB,iCAAA/3H,OAAuDq8B,QA0C1C82F,aAIjB,SAAAA,iGAAc/oF,CAAAznC,KAAAwwH,GAKVxwH,KAAKq+H,sBAAwB,IAAI1zG,oEASjC3qB,KAAKq+H,sBAAsB90D,6CASlB+0D,GACTp1G,EAAOrZ,MAAM,yBAA0ByuH,GACvCt+H,KAAKq+H,sBAAwBC,yCAUlBjI,GACX,IAAMkI,EAAiB,IAAIn8E,EAAAA,EAAiBi0E,GACtCn9F,EAAaqlG,EAAe/J,YAAY,SAE9C,OAAKt7F,EAMEl5B,KAAKs9H,gBAAgBpkG,GACtBqlG,EAAe7J,WAAa2B,GAN9BntG,EAAOrZ,MAAP,sCAAAxS,OAAmDg5H,IAE5CA,2CAcCn9F,GACZ,GAA6B,aAAzBA,EAAWV,UAGX,OAFAtP,EAAOrZ,MAAM,wDAEN,EAEX,GAAIqpB,EAAWslG,eAAiB,EAG5B,OAFAt1G,EAAOrZ,MAAM,sDAEN,EAEXqZ,EAAOrZ,MAAM,yBAA0B7P,KAAKq+H,uBAC5C,IAAMI,EAAoBvlG,EAAWwlG,uBAErCx1G,EAAOrZ,MAAM,8BAA+B4uH,EACxC,qCAfoB,IAAAjxG,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAgBxB,IAAA,IAAAgzB,EAAAC,EAAmB6wG,EAAnBnpI,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsC,CAAA,IAA3BwD,EAA2BrD,EAAAn4B,MAC5BisD,EAAOvoB,EAAWylG,iBAAiB3tG,EAAM,QACzCoxD,EAAQlpD,EAAWylG,iBAAiB3tG,EAAM,SAC5C4tG,EAAuB5+H,KAAKq+H,sBAAsBjpI,IAAI47B,GAE1D,GAAI4tG,EACA11G,EAAOrZ,MACH,0CAAA,cAAAxS,OACgB2zB,EADhB,MAAA3zB,OACyBuhI,QAC1B,CACH11G,EAAOrZ,MAAP,oDAAAxS,OACwD2zB,IAIxD,IAAM6tG,EAA8B3lG,EAAWglG,WAAWltG,GAEtD6tG,GACA31G,EAAOrZ,MACH,cAAAxS,OAAcwhI,EAAd,KACE,mDADF,GAAAxhI,OAEK2zB,IACT4tG,EAAuBC,IAEvBD,EAAuBrpG,EAAAA,EAAQyE,eAC/B9Q,EAAOrZ,MAAM,sBAAAxS,OAAsBuhI,EAAtB,KAAA,YAAAvhI,OACc2zB,KAE/B9H,EAAOrZ,MAAM,oBAAAxS,OAAoBuhI,EAApB,KAAA,kBAAAvhI,OACoB2zB,IACjChxB,KAAKq+H,sBAAsBjyG,IAAI4E,EAAM4tG,GAEzCf,EACI3kG,EACA,CACIj6B,GAAI+xB,EACJoxD,MAAAA,EACA3gC,KAAAA,GAEJm9E,IAvDgB,MAAA3kH,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GA4DxB,OAAO,mCAQF2oG,GACL,IAAMkI,EAAiB,IAAIn8E,EAAAA,EAAiBi0E,GACtCn9F,EAAaqlG,EAAe/J,YAAY,SAE9C,IAAKt7F,EAGD,OAFAhQ,EAAOrZ,MAAP,sCAAAxS,OAAmDg5H,IAE5CA,EAEX,GAA6B,aAAzBn9F,EAAWV,UAGX,OAFAtP,EAAOrZ,MAAM,uDAENwmH,EAEX,GAAIn9F,EAAWslG,eAAiB,EAG5B,OAFAt1G,EAAOrZ,MAAM,qDAENwmH,EAEX,IAAKn9F,EAAW4lG,wBAIZ,OAHA51G,EAAOrZ,MAAM,0DAGNwmH,EAEX,IAAMnB,EAAYh8F,EAAW6lG,WAAW,OAIxC7lG,EAAW8lG,wBAAwB,OA7BtB,IAAA3wG,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IAgCb,IAAA,IAAA6zB,EAAAC,EAAuBymG,EAAvB5/H,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAAkC,CAAA,IAAvBsL,EAAuBnL,EAAAh5B,MACxB4/H,EAAUn0E,OAAAA,EAAAA,EAAAA,CAAmBtnB,GAEnCT,EAAWikG,WAAW/H,IAnCb,MAAAn7G,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,GAsCb,OAAOgwG,EAAe7J,iWCvO9B,IAAMxrG,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GASJ6mG,aAOjB,SAAAA,EAAYtrD,gGAAWr9B,CAAAznC,KAAAowH,GACnBpwH,KAAK23H,sBACL33H,KAAK8kE,UAAYA,uEASjB9kE,KAAKi9H,kBAAoB,KACzBj9H,KAAKi/H,gBAAiB,yCAUXvlG,GACX,GAA2B,iBAAhBA,EACP,MAAM,IAAIx7B,MAAM,kCAEpB8B,KAAKi9H,kBAAoBvjG,iDAQzB,OAAOqM,QAAQ/lC,KAAKi9H,2EAcQ5G,GAC5B,IAAMkI,EAAiB,IAAIn8E,EAAAA,EAAiBi0E,GACtCn9F,EAAaqlG,EAAe/J,YAAY,SAE9C,IAAKt7F,EAKD,OAJAhQ,EAAOrZ,MACH,GAAAxS,OAAG2C,KAAK8kE,UAAR,wCAAA,GAAAznE,OACSg5H,IAENA,EAGX,GAA6B,aAAzBn9F,EAAWV,UAGPx4B,KAAKi9H,mBAAqBj9H,KAAKi/H,eAC/B/lG,EAAWkkG,iBAAiB,CACxBn+H,GAAIe,KAAKi9H,kBACT7zH,UAAW,QACX5T,MAAK,YAAA6H,OAAc2C,KAAKi9H,qBAG5B/zG,EAAOpZ,KACH,GAAAzS,OAAG2C,KAAK8kE,UAAR,yCACM,eAEX,CACH,IAAMo6D,EAAiBhmG,EAAWimG,sBAElC,IAAKD,EAKD,OAJAh2G,EAAOpZ,KACH,GAAAzS,OAAG2C,KAAK8kE,UAAR,6BACM,2BAEHuxD,EAEX,GAAIr2H,KAAKi9H,kBAAmB,CACxB/zG,EAAOpZ,KACH,GAAAzS,OAAG2C,KAAK8kE,UAAR,uCAAA,GAAAznE,OACS6hI,EADT,iBAAA,GAAA7hI,OAES2C,KAAKi9H,oBAClB/jG,EAAWkmG,YAAYF,EAAgBl/H,KAAKi9H,mBALpB,IAAAzvG,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAMxB,IAAA,IAAAgzB,EAAAC,EAAoBsL,EAAWO,WAA/BnkC,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,CAAA,IAAhCqM,EAAgClM,EAAAn4B,MACvC,GAAwB,QAApBqkC,EAAMC,UAAqB,CAC3B,IAAMJ,EAAcsnB,OAAAA,EAAAA,EAAAA,CAAiBnnB,GAC/Bu7F,EAAUn0E,OAAAA,EAAAA,EAAAA,CAAmBpnB,GAG/BH,IAAgBwlG,IAChBrlG,EAAMT,MAAN,GAAA/7B,OACS2C,KAAKi9H,kBADd,KAAA5/H,OACmC+3H,MAdvB,MAAAn7G,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,SAmBxB1tB,KAAKi9H,kBAAoBiC,EACzBh2G,EAAOpZ,KACH,GAAAzS,OAAG2C,KAAK8kE,UAAR,yCAAA,GAAAznE,OACS2C,KAAKi9H,oBAGtBj9H,KAAKi/H,gBAAiB,EAG1B,OAAOV,EAAe7J,+UClI9B,IAKqBhpC,aAQjB,SAAAA,EAAYz5C,EAAY7yC,gGAAUqoC,CAAAznC,KAAA0rF,GAO9B1rF,KAAK8a,UAAY1b,EASjBY,KAAKq/H,aAAc,EAYnBptF,EAAWpiB,WAAWpD,sBAClBzsB,KAAKstH,YAAYv3H,KAAKiK,OAE1BiyC,EAAWtlB,GACP8nB,EAAAA,mBACAz0C,KAAKs/H,kBAAkBvpI,KAAKiK,OAChCiyC,EAAWtlB,GACP8nB,EAAAA,YACAz0C,KAAKu/H,YAAYxpI,KAAKiK,kEAclBmuB,EAAK6C,EAAMylB,EAAYnkB,GAG1BA,GAAYtyB,KAAKg2C,aAAch2C,KAAKq/H,aAIrCr/H,KAAKg2C,WAAWmlB,WACb1kB,EAvEiB,KAwEpBz2C,KAAKq/H,aAAc,EACnBr/H,KAAK8a,wDAeM8xB,GACf,OAAOA,EAAM+J,gBAAkB/J,EAAMta,8CAW7Bsa,GACJ5sC,KAAKw/H,mBAAmB5yF,KACxB5sC,KAAKg2C,WAAapJ,6CAYRA,GACV5sC,KAAKw/H,mBAAmB5yF,IAAUA,EAAMuuB,YACxCn7D,KAAKq/H,aAAc,mTCtH/B,IAAMjzE,EAAarxD,EAAQ,GACrBgyC,EAAYhyC,EAAQ,IACpB4oC,EAAc5oC,EAAQ,IAEtBmuB,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAMnBk2G,EAAqB,QAKrBC,EAAoB,CACtB,CAAE97F,MAAO,KACLnC,OAAQ,KACRk+F,OAAQ,EACRh+F,IAAK,IACLi+F,OAAQ,IACRj8G,IAAK,KACT,CAAEigB,MAAO,KACLnC,OAAQ,IACRk+F,OAAQ,EACRh+F,IAAK,KACLi+F,OAAQ,KACRj8G,IAAK,KACT,CAAEigB,MAAO,IACLnC,OAAQ,IACRk+F,OAAQ,EACRh+F,IAAK,IACLi+F,OAAQ,IACRj8G,IAAK,KACT,CAAEigB,MAAO,IACLnC,OAAQ,IACRk+F,OAAQ,EACRh+F,IAAK,IACLi+F,OAAQ,IACRj8G,IAAK,KACT,CAAEigB,MAAO,IACLnC,OAAQ,IACRk+F,OAAQ,EACRh+F,IAAK,IACLi+F,OAAQ,IACRj8G,IAAK,KACT,CAAEigB,MAAO,IACLnC,OAAQ,IACRk+F,OAAQ,EACRh+F,IAAK,IACLi+F,OAAQ,IACRj8G,IAAK,KAaT+6F,EAAe,IAQfmhB,EAAkB,KAStB,SAASC,EAAU9P,EAAWtsF,EAAYq8F,GAItC,GAAIA,EAAmB,KACnB,OAAO,EAGX,IAAIH,EAAS,EACTn+F,EAAS3gC,KAAK6iB,IAAI+f,EAAWjC,OAAQiC,EAAWE,OAEpD,GAAIosF,EAAW,CAEX,IAAIgQ,EAAkBN,EAAkB9lG,KAAK,SAAA96B,GAAC,OAAIA,EAAE2iC,QAAUA,IAE9D,GAAIu+F,EAAiB,CAAA,IAAApnF,EAAA,WAIb,IAAMqnF,EAAex+F,EAIrB,KAFAu+F,EACMN,EAAkB9lG,KAAK,SAAA96B,GAAC,OAAIA,EAAE2iC,SAAWw+F,KAI3C,MAAA,QAFAL,GAAUI,EAAgBJ,QANlC,IAAKn+F,EAASu+F,EAAgBv+F,OAAQA,GAAU,IAAKA,GAAU,EAAG,CAAA,GAAA,UAAAmX,IAQ1D,YAIT,CAGH,IAAMsnF,EAASx8F,EAAWE,MAAQF,EAAWjC,OAGzCm+F,EADAM,GAAU,MACD,IACFA,GAAU,OACR,KACFA,GAAU,OACR,IAEA,KAMjB,OAAOp/H,KAAK6iB,IAAIi8G,EASpB,SAAgBG,GACZ,GAAIA,EAAmB,IACnB,OAAOl/H,OAAOy0E,iBAMlB,OAAOopC,EAAe59G,KAAK8iB,IAAI,KAAMm8G,EAAmB,KAjBhCI,CAAOr/H,KAAK6gC,IAAI,EAAGo+F,EAAmB,WA0B7C32C,aAOjB,SAAAA,EAAYn3C,EAAYrnB,EAAcnZ,GAAS,IAAAo2B,EAAA7nC,kGAAAynC,CAAAznC,KAAAopF,GAC3CppF,KAAK4qB,aAAeA,EAKpB5qB,KAAKm2G,YAAclkE,EAKnBjyC,KAAKogI,YAAc,CACfj3C,kBAAmB,IACnBk3C,YAAQ1lI,GAMZqF,KAAKsgI,8BAAgC,EAMrCtgI,KAAKugI,aAAe,GAMpBvgI,KAAKwgI,mBAAqB,EAM1BxgI,KAAKygI,mBAAqB,EAO1BzgI,KAAK0gI,uBAAyB,EAG1BjvH,EAAQlW,OAAOmjH,cAAgBjtG,EAAQlW,OAAOmjH,aAAe,IAC7DA,EAAejtG,EAAQlW,OAAOmjH,cAKlCzsE,EAAWtlB,GACPg0G,EAAAA,uBACA,WACI94F,EAAK+4F,8BAA8B,GACnC/4F,EAAKjd,aAAa2C,KACdszG,EAAAA,oBACAh5F,EAAKu4F,aACTv4F,EAAKi5F,yBAGb7uF,EAAWoe,KAAKrd,YACZoZ,EAAW3xD,6BACX,SAAC45F,EAAej6B,GACPi6B,EAAcjhD,OAAsB,cAAbgnB,IACxBvyB,EAAK24F,kBAAoBrsI,OAAO83D,YAAY1uC,SAMxD00B,EAAWtlB,GACPg0G,EAAAA,0BACA,SAAC5nE,EAAa39B,GACNA,EAAQ5pB,OAASiuH,GACjB53F,EAAKk5F,mBACDhoE,EAAYG,QAAS99B,EAAQvN,UAa7CokB,EAAWpiB,WAAW5C,2BAClBjtB,KAAKghI,kBAAkBjrI,KAAKiK,OAGhCiyC,EAAWtlB,GACPg0G,EAAAA,mBACA,SAAA/zF,GACQA,EAAM25B,iBACF35B,EAAMuuB,UACNtzB,EAAK44F,mBAAqB,EAE1B54F,EAAKo5F,4BAIrBhvF,EAAWtlB,GACPg0G,EAAAA,YACA,SAAA/zF,GACQA,EAAM25B,iBAAmB35B,EAAMuuB,WAC/BtzB,EAAKo5F,2BAIjBhvF,EAAWtlB,GACPg0G,EAAAA,sBACA,SAAA7rC,GACIjtD,EAAKu4F,YAAYtrC,aAAeA,IAGxC7iD,EAAWtlB,GACPg0G,EAAAA,mBACA,SAAAvrG,GACIyS,EAAKu4F,YAAYc,YACXrgI,QAAQu0B,GAAc,IAAI,2FAUpCp1B,KAAKygI,kBAAoB,IACzBzgI,KAAKygI,kBAAoBtsI,OAAO83D,YAAY1uC,2DAaxBuvB,EAAWquB,EAASgmE,GAI5C,IAGIxzB,EAHEjqE,EAAaC,EAAYw9F,GAE3BC,EAAU,IA2Bd,GAtBIphI,KAAKogI,YAAYzyB,aACjBA,EAAa3tG,KAAKogI,YAAYzyB,WAAWH,OAgBrCryC,IACAwyC,GAAc,KAIlBxyC,IAAYz3B,GAAcoJ,IAAcC,EAAUC,SAC/ChtC,KAAKwgI,kBAAoB,GACzBxgI,KAAKygI,kBAAoB,OAGT9lI,IAAfgzG,GACAzkF,EAAOtZ,MAAM,6DAEbwxH,EAAU,KAEVA,EADOzzB,GAAc,EACX,IACHA,GAAc,EACX,GACHA,GAAc,EACX,GACHA,GAAc,EACX,GACHA,GAAc,GACX,GAEA,MAEX,CAIH,IAAM0zB,EAAYrhI,KAAKm2G,YAAYxmB,0BAC7B2hC,EACAvrF,QAAQs7F,GAAaA,EAAU/P,iBAE/BgQ,EACAD,GAAaA,EAAUE,kBACtBF,EAAUE,iBAAiBC,kBAAkB,UAK/CF,GAAsBzB,IACvB7/H,KAAK0gI,sBAAwBvsI,OAAO83D,YAAY1uC,MAGhDmhG,EAAemhB,GAEnBA,EAAkByB,EAGlB,IAMI1B,EACEE,EAAUxO,EAAe5tF,EAPNvvC,OAAO83D,YAAY1uC,MACtCzc,KAAK6gC,IAAI3hC,KAAKygI,kBACZzgI,KAAKwgI,kBACLxgI,KAAK0gI,wBAMbd,EAAS9+H,KAAK6iB,IAAI,GAAMi8G,EAnVT,MAqVXC,IACAD,EAAS9+H,KAAK6iB,IAAIi8G,EAAQC,IAG9BuB,EAAU,IAAMphI,KAAKogI,YAAY7yB,QAAQC,OAASoyB,EAG9CjyB,GAAcA,GAAc,KAC5ByzB,EAAUtgI,KAAK6iB,IAAIy9G,EAAS,KAKpC,GAAIphI,KAAKsgI,6BAA+B,EAAG,CACvC,IACMmB,EAAwBzhI,KAAKogI,YAAYj3C,kBACzCu4C,GACCvtI,OAAO83D,YAAY1uC,MAAQvd,KAAKsgI,8BAC7B,IAEVc,EACMtgI,KAAK6iB,IACHy9G,EACAK,EATqB,EAUdC,GAGnB,OAAO5gI,KAAK6iB,IAAI,IAAKy9G,yDAOK5rI,GAC1BwK,KAAKogI,YAAYj3C,kBAAoB3zF,EACrCwK,KAAKsgI,6BAA+BnsI,OAAO83D,YAAY1uC,qDASvD,IAAM/Z,EAAO,CACT+pG,QAASvtG,KAAKogI,YAAY7yB,QAC1BI,WAAY3tG,KAAKogI,YAAYzyB,WAC7BxkB,kBAAmBnpF,KAAKogI,YAAYj3C,kBACpCk3C,OAAQrgI,KAAKogI,YAAYC,OACzBvrC,aAAc90F,KAAKogI,YAAYtrC,aAC/Bof,eAAgBl0G,KAAKogI,YAAYnsB,qBAGrC,IACIj0G,KAAKm2G,YAAY9d,yBAAyB,CACtC7mF,KAAMiuH,EACN5xG,OAAQrqB,IACd,MAAOxE,+CAmBKmvB,EAAK3qB,GAEnB,IAAK2qB,EAAIilB,MAAO,CACZ,IAAMitF,EACA78H,EAAKqlB,WACArlB,EAAKqlB,UAAU7rB,QAAUwG,EAAKqlB,UAAU,GAAGgX,IAEtD7/B,KAAKogI,YAAYC,OAASA,QAAkB1lI,EAKhD,GAAIwzB,IAAQnuB,KAAKm2G,YAAYxmB,0BAA7B,CAIA,IAAI75F,EACE6rI,GACC3hI,KAAKm2G,YAAY1d,0BAClBjJ,EACAxvF,KAAKm2G,YAAYroB,qBACjBhhD,EACA0iD,EAAkBA,EAAgB1iD,eAAYnyC,EAC9CwgE,GAAUq0B,GAAkBA,EAAgBr0B,UAC5Cz3B,EAAa8rD,EAAkBA,EAAgB9rD,WAAa,KAOlE,IAAK5tC,KALAqlE,GACDn7D,KAAKihI,yBAIGz9H,EACJA,EAAKpN,eAAeN,KACpBkK,KAAKogI,YAAYtqI,GAAO0N,EAAK1N,IAKjC6rI,GACA3hI,KAAK4gI,8BACD5gI,KAAK4hI,4BACD90F,EACAquB,EACAz3B,IAGZ1jC,KAAK4qB,aAAa2C,KACdszG,EAAAA,oBACA7gI,KAAKogI,aACTpgI,KAAK8gI,mEAQU7hI,EAAIuE,GAEnBxD,KAAKugI,aAAathI,GAAM,CACpBsuG,QAAS/pG,EAAK+pG,QACdI,WAAYnqG,EAAKmqG,WACjBxkB,kBAAmB3lF,EAAK2lF,kBACxBk3C,OAAQ78H,EAAK68H,OACbvrC,aAActxF,EAAKsxF,aACnBof,eAAgB1wG,EAAK0wG,gBAGzBl0G,KAAK4qB,aAAa2C,KACdszG,EAAAA,qBACA5hI,EACAe,KAAKugI,aAAathI,uCAQtB,OAAOe,KAAKogI,wWC9iBpB,IAAMl3G,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAWJovE,aAKjB,SAAAA,EAAY1mD,gGAAYxK,CAAAznC,KAAA24F,GACpB34F,KAAKm2G,YAAclkE,uDAOjB5wB,GAAS,IAAAwmB,EAAA7nC,KAIXA,KAAKm2G,YAAY1rF,KAAKmiC,KAAK,MAAO1kB,KAC9B,WACQL,EAAKg6F,YAILh6F,EAAKsuE,YAAYzsB,2BACjB7hD,EAAKi6F,kBAAoB3tI,OAAOyL,WAAW,WACvCspB,EAAOpZ,KACH,yDAEJ+3B,EAAKi6F,uBAAoBnnI,EACzB0mB,EAAQu3E,6BACT,KAEH1vE,EAAOpZ,KACH,sDAGZ,SAAAF,GACIsZ,EAAOtZ,MACH,8CAA+CA,sCAQ3D5P,KAAK6hI,WAAY,EACb7hI,KAAK8hI,mBACL3tI,OAAOyjB,aAAa5X,KAAK8hI,uiBCtDrC,IAAM54G,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAiBnBw4G,aAOF,SAAAA,EAAYhpE,EAAagyB,GAAStjD,EAAAznC,KAAA+hI,GAE9B/hI,KAAK+4D,YAAcA,EAGnB/4D,KAAK+qF,QAAUA,EAGf/qF,KAAKf,GAAK85D,EAAYG,QAGtBl5D,KAAKgiI,SAAW,GAIhBhiI,KAAKiiI,cAAgB,EAErBjiI,KAAKkiI,eAAiBliI,KAAKkiI,eAAensI,KAAKiK,MAC/CA,KAAKmiI,YAAcniI,KAAKmiI,YAAYpsI,KAAKiK,MACzCA,KAAKoiI,eAAiBpiI,KAAKoiI,eAAersI,KAAKiK,MAC/CA,KAAKqiI,mBAAqBriI,KAAKqiI,mBAAmBtsI,KAAKiK,MACvDA,KAAKq1B,cAAgBr1B,KAAKq1B,cAAct/B,KAAKiK,MAIzC+qF,EAAQu3C,mBACRtiI,KAAKmiI,cAGTniI,KAAKuiI,aAAepuI,OAAOq2C,YACvBxqC,KAAKmiI,YAAap3C,EAAQy3C,gBAC9BxiI,KAAKyiI,kBAAoBtuI,OAAOyL,WAC5BI,KAAKqiI,mBAAoBriI,KAAK+qF,QAAQ23C,wEAQtC1iI,KAAKuiI,cACLpuI,OAAO2zC,cAAc9nC,KAAKuiI,cAE1BviI,KAAKyiI,mBACLtuI,OAAO2zC,cAAc9nC,KAAKyiI,yDAS9B,IAAME,EAAY3iI,KAAKiiI,gBACjBW,EAAiB,CACnBpxH,KAzEa,mBA0EbvS,GAAI0jI,GAGR3iI,KAAK+qF,QAAQl0C,YAAY+rF,EAAgB5iI,KAAKf,IAC9Ce,KAAKgiI,SAASW,GAAa,CACvB1jI,GAAI0jI,EACJE,SAAU1uI,OAAO83D,YAAY1uC,8CAQtBpB,GACX,IAAM4sD,EAAU/oE,KAAKgiI,SAAS7lH,EAASld,IAEnC8pE,IACAA,EAAQlpC,IAAM1rC,OAAO83D,YAAY1uC,MAAQwrD,EAAQ85D,SACjD7iI,KAAK+qF,QAAQngE,aAAa2C,KACtBu1G,EAAAA,gBACA9iI,KAAK+4D,YACLgQ,EAAQlpC,MAGhB7/B,KAAKqiI,kEAUL,IAKIt5D,EAAS45D,EALPplH,EAAMppB,OAAO83D,YAAY1uC,MAI3BsiB,EAAMkjG,EAAAA,EAIV,IAAKJ,KAAa3iI,KAAKgiI,SACfhiI,KAAKgiI,SAAS5rI,eAAeusI,MAC7B55D,EAAU/oE,KAAKgiI,SAASW,IAEZE,SAAWtlH,EAAMvd,KAAK+qF,QAAQ23C,2BAE/B1iI,KAAKgiI,SAASW,GACd55D,EAAQlpC,MACfA,EAAM/+B,KAAK6iB,IAAIkc,EAAKkpC,EAAQlpC,OAKpCA,EAAMkjG,EAAAA,GACN/iI,KAAKq1B,cAAcwK,yCAQbA,GACVrV,EAAAA,EAAW6K,cAAcqK,OAAAA,EAAAA,EAAAA,CACrB1/B,KAAKf,GACLe,KAAK+4D,YAAY6gC,YAAY,UAC7B/5D,aAmBSmrD,aAMjB,SAAAA,EAAY/4C,EAAYxgC,EAASolC,GAAapP,EAAAznC,KAAAgrF,GAC1ChrF,KAAKiyC,WAAaA,EAClBjyC,KAAK4qB,aAAeqnB,EAAWrnB,aAC/B5qB,KAAK62C,YAAcA,EAGnB72C,KAAKwiI,eAAiB,IAGtBxiI,KAAK0iI,oBAAsB,IAG3B1iI,KAAK05D,aAAe,GAGpB15D,KAAKsiI,mBAAoB,EAErB7wH,GAAWA,EAAQs5E,UACyB,iBAAjCt5E,EAAQs5E,QAAQw3C,eACvBviI,KAAKwiI,eAAiB/wH,EAAQs5E,QAAQw3C,cAEO,iBAAtC9wH,EAAQs5E,QAAQ03C,oBACvBziI,KAAK0iI,oBAAsBjxH,EAAQs5E,QAAQ03C,mBAI3CziI,KAAK0iI,oBAAsB,GAAK1iI,KAAK0iI,oBACnC1iI,KAAKwiI,iBACPxiI,KAAK0iI,oBAAsB1iI,KAAKwiI,iBAGxCt5G,EAAOpZ,KAAP,uCAAAzS,OAEQ2C,KAAKwiI,eAFb,wBAAAnlI,OAGQ2C,KAAK0iI,oBAHb,MAKA1iI,KAAKgjI,kBAAoBhjI,KAAKgjI,kBAAkBjtI,KAAKiK,MACrDiyC,EAAWtlB,GACP8nB,EAAAA,YACAz0C,KAAKgjI,mBAEThjI,KAAKijI,gBAAkBjjI,KAAKijI,gBAAgBltI,KAAKiK,MACjDiyC,EAAWtlB,GACP8nB,EAAAA,UACAz0C,KAAKijI,iBAETjjI,KAAKkjI,gBAAkBljI,KAAKkjI,gBAAgBntI,KAAKiK,MACjDiyC,EAAWtlB,GACP8nB,EAAAA,0BACAz0C,KAAKkjI,iBAETljI,KAAKmjI,kBAAoBnjI,KAAKmjI,kBAAkBptI,KAAKiK,MACrDiyC,EAAWtlB,GACP8nB,EAAAA,oBACAz0C,KAAKmjI,yEAiBT,IAAK,IAAMlkI,KATXe,KAAKsiI,mBAAoB,EASRtiI,KAAK05D,aAClB,GAAI15D,KAAK05D,aAAatjE,eAAe6I,GAAK,CACtC,IAAMmkI,EAAqBpjI,KAAK05D,aAAaz6D,GAE7C9K,OAAOyL,WAAWwjI,EAAmBjB,YAAa,8CAW9CppE,EAAa39B,GA9PR,qBAiQbA,EAAQ5pB,KACRxR,KAAKqjI,cAActqE,EAAYG,QAAS99B,GA5P1B,sBA6PPA,EAAQ5pB,MACfxR,KAAKoiI,eAAerpE,EAAYG,QAAS99B,6CAW/Bn8B,EAAI85D,GACd/4D,KAAKwiI,gBAAkB,IAIvBxiI,KAAK05D,aAAaz6D,KAClBiqB,EAAOpZ,KAAP,0CAAAzS,OAC8C4B,EAD9C,gBAEAe,KAAK05D,aAAaz6D,GAAIijI,wBACfliI,KAAK05D,aAAaz6D,IAG7Be,KAAK05D,aAAaz6D,GAAM,IAAI8iI,EAAmBhpE,EAAa/4D,+CAQhDf,GACRe,KAAKwiI,gBAAkB,GAIvBxiI,KAAK05D,aAAaz6D,KAClBe,KAAK05D,aAAaz6D,GAAIijI,wBACfliI,KAAK05D,aAAaz6D,0CAWnB0gC,EAAeopC,GAEzB,GAAIA,GAAWA,EAAQ9pE,GAAI,CACvB,IAAMkd,EAAW,CACb3K,KAnTU,oBAoTVvS,GAAI8pE,EAAQ9pE,IAGhBe,KAAK62C,YAAY16B,EAAUwjB,QAE3BzW,EAAOpZ,KAAP,6CAAAzS,OACiDsiC,EADjD,6CAWOA,EAAexjB,GAC1B,IAAMinH,EAAqBpjI,KAAK05D,aAAa/5B,GAEzCyjG,GACAA,EAAmBhB,eAAejmH,kCAuBtC,IAAK,IAAMld,KAfXiqB,EAAOpZ,KAAK,oBAEZ9P,KAAKiyC,WAAW6N,IACZrL,EAAAA,YACAz0C,KAAKgjI,mBACThjI,KAAKiyC,WAAW6N,IACZrL,EAAAA,UACAz0C,KAAKijI,iBACTjjI,KAAKiyC,WAAW6N,IACZrL,EAAAA,0BACAz0C,KAAKkjI,iBACTljI,KAAKiyC,WAAW6N,IACZrL,EAAAA,oBACAz0C,KAAKmjI,mBAEQnjI,KAAK05D,aACd15D,KAAK05D,aAAatjE,eAAe6I,IACjCe,KAAK05D,aAAaz6D,GAAIijI,iBAI9BliI,KAAK05D,aAAe,2TCpX5B,IAAMxwC,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAOJuiE,aAKjB,SAAAA,EAAY75C,GAAY,IAAApK,EAAA7nC,kGAAAynC,CAAAznC,KAAA8rF,GACpB9rF,KAAKm2G,YAAclkE,EASnBjyC,KAAKsjI,SAAU,EAEftjI,KAAKm2G,YAAY5rE,iBACbkK,EAAAA,YAAmC,WAAA,OAAM5M,EAAK07F,mBAClDvjI,KAAKm2G,YAAY5rE,iBACbkK,EAAAA,UAAiC,WAAA,OAAM5M,EAAK07F,mBAChDvjI,KAAKm2G,YAAY5rE,iBACbkK,EAAAA,WAAkC,WAAA,OAAM5M,EAAK07F,mFAQjD,IAAMC,EAAYxjI,KAAKsjI,QACjBtqE,GACCh5D,KAAKm2G,YAAYr8C,eACb95D,KAAKm2G,YAAYnkB,uBAAyB,EAEjDwxC,IAAcxqE,IACdh5D,KAAKsjI,QAAUtqE,EACf9vC,EAAOrZ,MAAP,iBAAAxS,OAA8BmmI,EAA9B,QAAAnmI,OAA8C27D,IAC9Ch5D,KAAKm2G,YAAYvrF,aAAa2C,KAC1BknB,EAAAA,cAAqC+uF,EAAWxqE,odC5ChE,IAAM9vC,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAMnB8gE,aAQF,SAAAA,EAAYqc,gGAAUj/D,CAAAznC,KAAAqqF,GAIlBrqF,KAAKyjI,UAAY,GAEjBzjI,KAAK0jI,UAAYh9B,EAEjB1mG,KAAKu3G,WAAav3G,KAAKu3G,WAAWxhH,KAAKiK,MAEvCA,KAAK0jI,UAAU94G,aAAaooB,YACxBoZ,EAAAA,EAAWlzD,kBAAmB8G,KAAKu3G,sEAShC/7C,GACP,OAAOx7D,KAAKyjI,UAAUjoE,yCAeiB,IAA9B0+C,EAA8BvxE,EAA9BuxE,iBAAkB7+C,EAAY1yB,EAAZ0yB,SACvB+f,EAAAA,EAAkBlf,YAAYb,GAC9Br7D,KAAK2jI,qBAAqBtoE,GACnB6+C,GACPl6G,KAAK4jI,qBAAqBvoE,0CAoBnB5pD,GAAS,IAAAo2B,EAAA7nC,KACdqhB,EAAU,IAAIo5D,EAAAA,oUAAJr7C,CAAA,GACT3tB,EADS,CAEZgM,WAAYzd,KAAK0jI,UAAUjmH,cAG/B,OAAO4D,EAAQ0E,MAAM,CACjBi1D,QAASvpE,EAAQupE,QACjBC,YAAaxpE,EAAQwpE,YACrBC,YAAal7E,KAAK0jI,UAAUxoD,YAC5BxnC,SAAUjiC,EAAQiiC,WAEjBxL,KAAK,WAUF,OALKL,EAAKg8F,WAAWxiH,EAAQyiH,WACzBj8F,EAAKk8F,YAAY1iH,GACjBwmB,EAAKm8F,mBAAmB3iH,IAGrBA,IAEVmqB,MAAM,SAAA57B,GAGH,OAFAi4B,EAAKm8F,mBAAmB3iH,GAEjB+pB,QAAQE,OAAO17B,2CAYpB4rD,GACV,IAAMn6C,EAAUrhB,KAAK6jI,WAAWroE,GAEhC,OAAIn6C,EACOA,EAAQ2N,KAAK,CAAEksD,YAAal7E,KAAK0jI,UAAUxoD,cAG/C9vC,QAAQE,OAAO,IAAIptC,MAAM,+DASxBmjB,GACRrhB,KAAKyjI,UAAUpiH,EAAQyiH,SAAWziH,yCAYvBm6C,EAAW1hD,EAAQpkB,GAC9B,IAAM2rB,EAAU,IAAIo5D,EAAAA,EAAa,CAC7Bh9D,WAAYzd,KAAK0jI,UAAUjmH,WAC3By9D,YAAal7E,KAAK0jI,UAAUxoD,YAC5BxlF,KAAAA,EACA8lE,UAAAA,EACA1hD,OAAAA,IAKJ,OAFA9Z,KAAK+jI,YAAY1iH,GAEVA,6CAQQA,GACfrhB,KAAK0jI,UAAU94G,aAAa2C,KACxB6+B,EAAAA,EAAW9yD,uBAAwB+nB,gDAUtBg6C,GACjB,IAAMC,EAAc8f,EAAAA,EAAkBhgB,wBAAwBC,GAE9D,GAAKC,EAAL,CAH2B,IAOnBE,EAA4CF,EAA5CE,UAAW1hD,EAAiCwhD,EAAjCxhD,OAAQlK,EAAyB0rD,EAAzB1rD,MAAO2rD,EAAkBD,EAAlBC,cAI9Bl6C,EAAUrhB,KAAK6jI,WAAWroE,GAKzBn6C,GAAsB,QAAXvH,EAaZuH,GACGA,EAAQ8lF,cAAgBrtF,GACxBuH,EAAQ6lF,aAAet3F,EAC1BsZ,EAAOnZ,KAAK,uCACRgH,KAAKyK,UAAU85C,KAKlBj6C,IACDA,EAAUrhB,KAAKikI,eAAezoE,EAAW1hD,EAAQyhD,IAGrDl6C,EAAQu5D,UAAU9gE,GAEdlK,GACAyR,EAAQs6D,SAAS/rE,GAGrB5P,KAAKgkI,mBAAmB3iH,IA/BpB6H,EAAOnZ,KACH,qCACA,yFAuCSsrD,GAAU,IAAA6oE,EAErB9oD,EAAAA,EAAkB3f,sBAAsBJ,GADtCM,EADmBuoE,EACnBvoE,kBAAmBjmE,EADAwuI,EACAxuI,KAAM8lE,EADN0oE,EACM1oE,UAGjC,GAAKA,EAAL,CAOA,IAAIn6C,EAAUrhB,KAAK6jI,WAAWroE,GAEzBn6C,IACDA,EAAUrhB,KAAKikI,eAAezoE,EAAW,GAAI9lE,IAGjD2rB,EAAQ8iH,qBAAqBxoE,GAE7B37D,KAAKgkI,mBAAmB3iH,QAdpB6H,EAAOnZ,KACH,gGAiBDs6E,EAAAA,EAAAA,8zBC9Pf,IAAMnhE,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAMnB66G,EAAe,CACjB7jB,oBAAqB,EACrBC,oBAAqB,GAcnB6jB,aAWF,SAAAA,EAAYzkG,EAAQmkD,EAASugD,EAAoBx6C,GAAOriD,EAAAznC,KAAAqkI,GAEpDrkI,KAAK4/B,OAASA,EACd5/B,KAAKskI,mBAAqBA,EAC1BtkI,KAAKukI,iBAAmB,KAGxBvkI,KAAK6/B,IAAMkjG,EAAAA,EAGX/iI,KAAKwkI,KAAO,GAEZ,IAAMt1E,EAAa,CAAE,CAAE/f,IAAA,QAAA9xC,OAAe0mF,KAEtC/jF,KAAKwmD,GAAK,IAAIhf,EAAAA,EAASa,sBACnB,CACI6mB,WAAcA,IAOtBlvD,KAAKqgE,WAAa,GAElBrgE,KAAKykI,SAAU,EAEfzkI,KAAK+lB,MAAQ/lB,KAAK+lB,MAAMhwB,KAAKiK,MAC7BA,KAAKgvB,KAAOhvB,KAAKgvB,KAAKj5B,KAAKiK,MAC3BA,KAAK0kI,mBAAqB1kI,KAAK0kI,mBAAmB3uI,KAAKiK,MACvDA,KAAK2kI,mBAAqB3kI,KAAK2kI,mBAAmB5uI,KAAKiK,MAEvD7L,OAAOyL,WAAWI,KAAK+lB,MAAO+jE,6CAQ1B,IAAAjiD,EAAA7nC,KACAA,KAAKykI,SAITzkI,KAAKwmD,GAAGwb,YAAYoiE,GAAcl8F,KAAK,SAAAg+B,GACnCr+B,EAAK2e,GAAG0b,oBACJgE,EACA,WACIh9C,EAAOpZ,KAAP,mCAAAzS,OACuCwqC,EAAKjI,SAC5CiI,EAAK68F,sBAET,SAAA90H,GACIsZ,EAAOnZ,KAAP,kCAAA1S,OACsCwqC,EAAKjI,OAD3C,MAAAviC,OAEQuS,qDAUH,IAAA87B,EAAA1rC,KACjBA,KAAKukI,iBAAmBpwI,OAAOq2C,YAC3B,WAGIkB,EAAK8a,GAAG00C,SAAS,SAAAjnE,GAGb,IAFA,IAAMwoD,EAAUxoD,EAAMhkB,SAEb1b,EAAI,EAAGA,EAAIkoF,EAAQz/E,SAAUzI,EAAG,CACrC,IAAM+3C,EAAMmwC,EAAQloF,GACdqwI,EACA/jI,OAAOyrC,EAAI2kE,KAAK,0BAKtB,GAAI2zB,EAAW,EAAG,CACd,IAAMC,EAAY,GAAAxnI,OACTivC,EAAI2kE,KAAK,aADA,KAAA5zG,OAEVivC,EAAI2kE,KAAK,cAFC,KAAA5zG,OAGVivC,EAAI2kE,KAAK,aAEjBvlE,EAAKi5F,mBACDE,EACAD,EACA/jI,OACIyrC,EAAI2kE,KAAK,mCACbpwG,OACIyrC,EAAI2kE,KAAK,gCAMzB,IAAIpxE,EAAMkjG,EAAAA,EAEV,IAAK,IAAMjtI,KAAO41C,EAAK20B,WACf30B,EAAK20B,WAAWjqE,eAAeN,IAC5B41C,EAAK20B,WAAWvqE,GAAK+pC,IAAM,IAC9BA,EAAM/+B,KAAK6iB,IAAIkc,EAAK6L,EAAK20B,WAAWvqE,GAAK+pC,MAOjD6L,EAAK84F,KAAK3mI,KAAKgiC,GACX6L,EAAK84F,KAAKxnI,OAAS,IACnB0uC,EAAK84F,KAAO94F,EAAK84F,KAAKlnI,OAAO,EAAG,IAEpCouC,EAAK7L,IAAM/+B,KAAK6iB,IAAL7lB,MAAAgD,KAAIi7B,EAAQ2P,EAAK84F,UAGpCxkI,KAAKskI,+DAiBMxuI,EAAK8uI,EAAUE,EAAmBC,GAE5C/kI,KAAKqgE,WAAWvqE,KACjBkK,KAAKqgE,WAAWvqE,GAAO,CACnB8uI,SAAU,EACVE,kBAAmB,EACnBC,aAAc,EACdllG,IAAKrgB,MAIb,IAAMwlH,EAAeJ,EAAW5kI,KAAKqgE,WAAWvqE,GAAK8uI,SAC/CK,EACAH,EAAoB9kI,KAAKqgE,WAAWvqE,GAAKgvI,kBAMzCI,EACCH,EAAeD,GACf9kI,KAAKqgE,WAAWvqE,GAAKivI,aAClB/kI,KAAKqgE,WAAWvqE,GAAKgvI,mBAC3BjlG,EAAMrgB,IAENylH,EAAwB,GAA+B,IAA1BC,IAC7BrlG,EAAMmlG,EAAeC,GAGzBjlI,KAAKqgE,WAAWvqE,GAAK8uI,SAAWA,EAChC5kI,KAAKqgE,WAAWvqE,GAAKgvI,kBAAoBA,EACzC9kI,KAAKqgE,WAAWvqE,GAAKivI,aAAeA,EACpC/kI,KAAKqgE,WAAWvqE,GAAK+pC,IAAMA,iCASvB7/B,KAAKukI,kBACLpwI,OAAO2zC,cAAc9nC,KAAKukI,kBAG9BvkI,KAAKwmD,GAAG/gC,QAERzlB,KAAKykI,SAAU,WASF35C,aAKjB,SAAAA,EAAYvvF,GAAQ,IAAA4xC,EAAAntC,KAChB,GADgBynC,EAAAznC,KAAA8qF,GACXvvF,GAAWA,EAAO29E,SACfluD,EAAAA,EAAQm6G,sCADhB,CAMAnlI,KAAKolI,WAAa,GAElBplI,KAAKqlI,gBAAkBrlI,KAAKqlI,gBAAgBtvI,KAAKiK,MACjDA,KAAKq1B,cAAgBr1B,KAAKq1B,cAAct/B,KAAKiK,MAC7CA,KAAKgvB,KAAOhvB,KAAKgvB,KAAKj5B,KAAKiK,MAE3BA,KAAKyiI,kBAAoB,KACzBziI,KAAKykI,SAAU,EAEf,IAAMa,EAAe/pI,EAAO+pI,cAAgB,IAG5Cp8G,EAAOpZ,KAAP,iDAAAzS,OACqDioI,IAGrDnxI,OAAOyL,WACH,WAAA,OAAMutC,EAAKk4F,gBAAgB9pI,IAC3B+pI,sDAMQ/pI,GAAQ,IAAA0yC,EAAAjuC,KACpB,GAAKzE,EAAO6zD,aAMZ,IAAIpvD,KAAKykI,QAAT,CAIA,IAAMH,EACA/oI,EAAOgpI,kBAjQW,IAkQlB7B,EACAnnI,EAAOknI,mBAAqB6B,EAE5B5/B,EAAS4/B,EADDrvI,OAAOy5B,KAAKnzB,EAAO6zD,aAAapyD,OAK1CzI,EAAI,EAER,IAAK,IAAMqrC,KAAUrkC,EAAO6zD,YACxB,GAAI7zD,EAAO6zD,YAAYh5D,eAAewpC,GAAS,CAC3C,IAAMmkD,EAAUxoF,EAAO6zD,YAAYxvB,GAEnC5/B,KAAKolI,WAAWxlG,GACV,IAAIykG,EACFzkG,EACAmkD,EACAugD,EACA5/B,EAASnwG,GACjBA,IAIRJ,OAAOyL,WACH,WACSquC,EAAKw2F,UACNx2F,EAAKw0F,kBACCtuI,OAAOq2C,YACTyD,EAAK5Y,cAAeqtG,KAGhC,WA1CAx5G,EAAOnZ,KAAK,uEAkDhB,IAAMy0H,EAAO,GAEb,IAAK,IAAM5kG,KAAU5/B,KAAKolI,WACtB,GAAIplI,KAAKolI,WAAWhvI,eAAewpC,GAAS,CACxC,IAAMC,EAAM7/B,KAAKolI,WAAWxlG,GAAQC,IAE/Bz9B,MAAMy9B,IAAQA,IAAQkjG,EAAAA,IACvByB,EAAK5kG,EAAOziC,QAAQ,IAAK,MAAQ0iC,GAKzC2kG,GACAh6G,EAAAA,EAAW6K,cAAcoL,OAAAA,EAAAA,EAAAA,CAAuB+jG,mCAWpD,IAAK,IAAM5kG,KAFX1W,EAAOpZ,KAAK,wBACZ9P,KAAKykI,SAAU,EACMzkI,KAAKolI,WAClBplI,KAAKolI,WAAWhvI,eAAewpC,IAC/B5/B,KAAKolI,WAAWxlG,GAAQ5Q,OAGhChvB,KAAKolI,WAAa,GAEdplI,KAAKyiI,mBACLtuI,OAAO2zC,cAAc9nC,KAAKyiI,ohBCpVtC,IAAMv5G,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAMnBg8G,aAMF,SAAAA,EAAYzwI,GAAM2yC,EAAAznC,KAAAulI,GACdvlI,KAAKlL,KAAOA,EACZkL,KAAKi9G,MAAQ,EACbj9G,KAAKs0G,IAAM,EACXt0G,KAAK2yE,QAAU,6CAQX0C,GACqB,iBAAdA,EACPnsD,EAAOtZ,MAAP,GAAAvS,OACO2C,KAAKlL,KADZ,8BAAAuI,OAC6C2C,KAAKi9G,OAC9C5nC,GACIjzE,MAAMizE,KACdr1E,KAAKs0G,KAAOj/B,EACZr1E,KAAK2yE,QAAQ90E,KAAKw3E,GAClBr1E,KAAKi9G,OAAS,uCAUlB,OAAOj9G,KAAKs0G,IAAMt0G,KAAKi9G,2CAQd52D,GACTA,EAAM,GAAAhpD,OAAI2C,KAAKlL,KAAT,SAAuBkL,KAAKwlI,YAClCn/E,EAAM,GAAAhpD,OAAI2C,KAAKlL,KAAT,aAA2BiiB,KAAKyK,UAAUxhB,KAAK2yE,yCAQrD3yE,KAAK2yE,QAAU,GACf3yE,KAAKs0G,IAAM,EACXt0G,KAAKi9G,MAAQ,WASfwoB,aAQF,SAAAA,EAAYp8C,EAAqBj2C,EAAOp9C,GAAG,IAAA6xC,EAAA7nC,KAAAynC,EAAAznC,KAAAylI,GAKvCzlI,KAAKozC,MAAQA,EAObpzC,KAAK0lI,GAAK1vI,EAQVgK,KAAK2lI,WAAa,EAMlB3lI,KAAK4lI,QAAU,IAAIL,EAAkB,OAYrCvlI,KAAK6lI,iBAAmB,IAAIl7G,IAO5B3qB,KAAK8lI,qBAAuBz8C,EAU5BrpF,KAAK+lI,oBAAiBprI,EAEtBqF,KAAKgmI,mBAAqB,SAAC73G,EAAK8F,GACxB4T,EAAKuL,QAAUjlB,EAAIilB,OACnBvL,EAAKo+F,mBAAmBhyG,IAIhC,IAAMge,EAAao3C,EAAoB8sB,YAEvClkE,EAAWpiB,WAAW5C,2BAClBjtB,KAAKgmI,oBAEJhmI,KAAKozC,QACNpzC,KAAK03D,YAAc,SAAAz4D,GAAE,OAAI4oC,EAAKg+F,iBAAiB/2G,OAAO7vB,IACtDgzC,EAAWtlB,GAAGg0G,EAAAA,UAA4B3gI,KAAK03D,aAE/C13D,KAAKkmI,sBACC,SAACjnI,EAAIuE,GAAL,OAAcqkC,EAAKs+F,oBAAoBlnI,EAAIuE,IACjDyuC,EAAWtlB,GACPk0G,EAAAA,qBACA7gI,KAAKkmI,6EASE1iI,GACf,GAAKA,GAcL,GARIwnB,EAAAA,EAAQo7G,yBACJ5iI,EAAKqlB,WAAarlB,EAAKqlB,UAAU7rB,QACjCgD,KAAK4lI,QAAQS,QAAQ7iI,EAAKqlB,UAAU,GAAGgX,KAI/C7/B,KAAK2lI,YAAc,EAEf3lI,KAAK2lI,YAAc3lI,KAAK0lI,GAAI,CAC5B,GAAI16G,EAAAA,EAAQo7G,wBAAyB,CACjC,IAAMn0F,EAAajyC,KAAK8lI,qBAAqB3vB,YAEvCmwB,EAAc,CAChBh6E,IAAKtsD,KAAKozC,MACVmzF,gBAAmBt0F,EAAW+/C,uBAelC,GAZIxuF,EAAKqlB,WAAarlB,EAAKqlB,UAAU7rB,QACjC/H,OAAOwkF,OAAO6sD,EAAa,CACvBE,qBACIhjI,EAAKqlB,UAAU,GAAGunF,mBACtBq2B,sBACIjjI,EAAKqlB,UAAU,GAAGsnF,oBACtBu2B,eAAkBljI,EAAKqlB,UAAU,GAAGrX,OAI5CxR,KAAK4lI,QAAQe,aAAaL,GAEtBtmI,KAAKozC,MAAO,CAEZ,IAAMwzF,EAAgB5mI,KACjB8lI,qBAAqBe,gBAAgBd,eAErC3jI,MAAMwkI,KAEPN,EAAW,SACLtmI,KAAK4lI,QAAQJ,YAAcoB,OAElC,CAEH,IAAME,EAAe9mI,KAAK+mI,yBACpBC,EAAchnI,KAAK4lI,QAAQJ,YAEjCxlI,KAAK+lI,eAAiBiB,EAAcF,EAE/B1kI,MAAM4kI,IAAiB5kI,MAAM0kI,KAE9BR,EAAW,gBAAsBtmI,KAAK+lI,gBAI9Cv7G,EAAAA,EAAW6K,cAAcmL,OAAAA,EAAAA,EAAAA,CAAoB8lG,IAGjDtmI,KAAKinI,uBA5DL/9G,EAAOtZ,MAAM,6DAuEjB,IAAIqtG,EAAQ,EAAG3I,EAAM,EADA9mF,GAAA,EAAAC,GAAA,EAAAC,OAAA/yB,EAAA,IAKrB,IAAA,IAAAgzB,EAAAC,EAAwB5tB,KAAK6lI,iBAAiBh4G,SAA9Cv4B,OAAAw4B,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwD,CAAA,IAA7C05G,EAA6Cv5G,EAAAn4B,MAC9C2xI,EAAMD,EAAU1B,YAEjBpjI,MAAM+kI,KACP7yB,GAAO6yB,EACPlqB,GAAS,EACTiqB,EAAUv0H,UAXG,MAAAsH,GAAAwT,GAAA,EAAAC,EAAAzT,EAAA,QAAA,IAAAuT,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAerB,OAAO4mF,EAAM2I,8CAUGh+G,EAAIuE,GACpB,IAAM4jI,EAAmC,iBAAhB5jI,EAAK68H,OAC1BgH,EAASrnI,KAAK6lI,iBAAiBzwI,IAAI6J,IAElCooI,GAAUD,IACXC,EAAS,IAAI9B,EAAJ,GAAAloI,OAAyB4B,EAAzB,cACTe,KAAK6lI,iBAAiBz5G,IAAIntB,EAAIooI,IAG9BD,EACAC,EAAOhB,QAAQ7iI,EAAK68H,QACbgH,GACPrnI,KAAK6lI,iBAAiB/2G,OAAO7vB,4CASjCe,KAAK4lI,QAAQjzH,QACT3S,KAAK6lI,kBACL7lI,KAAK6lI,iBAAiBt8D,QAE1BvpE,KAAK2lI,WAAa,oCAQlB,IAAM1zF,EAAajyC,KAAK8lI,qBAAqB3vB,YAE7ClkE,EAAWpiB,WAAW3C,8BAClBltB,KAAKgmI,oBACJhmI,KAAKozC,QACNnB,EAAW6N,IACP+gF,EAAAA,qBACA7gI,KAAKkmI,uBACTj0F,EAAW6N,IACP6gF,EAAAA,UACA3gI,KAAK03D,uBAaA4xB,aAOjB,SAAAA,EAAYr3C,EAAYj8C,GAAG,IAAA01C,EAAA1rC,KAAAynC,EAAAznC,KAAAspF,GAOvBtpF,KAAK0lI,GAAK1vI,EAENA,EAAI,GACJkzB,EAAOpZ,KAAP,0CAAAzS,OAAsDrH,EAAtD,aAcJgK,KAAK2lI,WAAa,EAOlB3lI,KAAKm2G,YAAclkE,EAQnBjyC,KAAKsnI,mBACC,IAAI/B,EAAkB,wBAQ5BvlI,KAAKunI,qBACC,IAAIhC,EAAkB,0BAQ5BvlI,KAAKwnI,mBACC,IAAIjC,EAAkB,wBAQ5BvlI,KAAKynI,qBACC,IAAIlC,EAAkB,0BAQ5BvlI,KAAK0nI,gBACC,IAAInC,EAAkB,oBAQ5BvlI,KAAK2nI,kBACC,IAAIpC,EAAkB,sBAQ5BvlI,KAAK4nI,oBACC,IAAIrC,EAAkB,qBAQ5BvlI,KAAK6nI,iBACC,IAAItC,EAAkB,sBAQ5BvlI,KAAK8nI,mBACC,IAAIvC,EAAkB,wBAO5BvlI,KAAK+nI,cAAgB,IAAIxC,EAAkB,oBAQ3CvlI,KAAKgoI,oBACC,IAAIzC,EAAkB,2BAO5BvlI,KAAKioI,aAAe,IAAI1C,EAAkB,mBAQ1CvlI,KAAKkoI,mBACC,IAAI3C,EAAkB,0BAQ5BvlI,KAAKmoI,uBACC,IAAI5C,EAAkB,iBAQ5BvlI,KAAKooI,uBACC,IAAI7C,EAAkB,wBAO5BvlI,KAAKqoI,sBACC,IAAI9C,EAAkB,gBAQ5BvlI,KAAKsoI,sBACC,IAAI/C,EAAkB,uBAQ5BvlI,KAAKuoI,OAAS,IAAIhD,EAAkB,sBAEpCvlI,KAAKwoI,qBAAuB,SAAAhlI,GAAI,OAAIkoC,EAAKu6F,mBAAmBziI,IAC5DyuC,EAAWtlB,GACPk0G,EAAAA,oBACA7gI,KAAKwoI,sBAETxoI,KAAKyoI,oBAAsB,WACvBv/G,EAAOrZ,MAAM,uCACb67B,EAAKu7F,iBACLv7F,EAAKm7F,gBAAgBI,iBACrBv7F,EAAKg9F,gBAAgBzB,kBAEzBh1F,EAAWtlB,GACPg0G,EAAAA,WACA3gI,KAAKyoI,qBAETzoI,KAAK2oI,uBAAyB,SAACnF,EAAWxqE,IAIpB,IAAdA,IACA9vC,EAAOpZ,KAAK,+BACZ47B,EAAKk9F,sBAGb32F,EAAWtlB,GACPg0G,EAAAA,cACA3gI,KAAK2oI,wBAET3oI,KAAK6mI,gBACC,IAAIpB,EAAmBzlI,MAAM,EAAiBhK,GAEpDgK,KAAK0oI,gBACC,IAAIjD,EAAmBzlI,MAAM,EAAgBhK,IAjN/CkzB,EAAOpZ,KAAK,4FA0NDtM,GAEf,GAAKA,EAAL,CAMA,IAAM4vC,EAAQpzC,KAAKm2G,YAAYr8C,cACzB+uE,EAAW7oI,KAAKm2G,YAAYnkB,sBAElC,GAAK5+C,KAASy1F,EAAW,GAAzB,CAeA,IAAMt7B,EAAU/pG,EAAK+pG,QACfpoE,EAAY3hC,EAAK2hC,UACjBwoE,EAAanqG,EAAKmqG,WAClB5oE,EAAYvhC,EAAKiqG,UACjB/pE,EAAalgC,EAAKkgC,WAExB,GAAK6pE,EAIE,GAAKpoE,EAIL,GAAKwoE,EAIL,GAAK5oE,EAIL,GAAKrB,GA2DZ,GArDA1jC,KAAKsnI,mBAAmBjB,QAAQ94B,EAAQ9qE,MAAM+qE,QAC9CxtG,KAAKunI,qBAAqBlB,QAAQ94B,EAAQ9qE,MAAM+jD,UAEhDxmF,KAAKwnI,mBAAmBnB,QAAQ94B,EAAQhsE,MAAMisE,QAC9CxtG,KAAKynI,qBAAqBpB,QAAQ94B,EAAQhsE,MAAMilD,UAE5Cx7D,EAAAA,EAAQ89G,gCACR9oI,KAAK0nI,gBAAgBrB,QAAQlhG,EAAUqoE,QACvCxtG,KAAK2nI,kBAAkBtB,QAAQlhG,EAAUqhD,WAG7CxmF,KAAK6nI,iBAAiBxB,QAAQ14B,EAAWH,QACzCxtG,KAAK8nI,mBAAmBzB,QAAQ14B,EAAWnnB,UAC3CxmF,KAAK4nI,oBAAoBvB,QAAQ14B,EAAWt3B,OAE5Cr2E,KAAKuoI,OAAOlC,QAAQ7iI,EAAK2lF,mBAErBpkD,IACA/kC,KAAK+nI,cAAc1B,QACfrmI,KAAK+oI,sBACDhkG,GAAW,EAAoBgI,EAAAA,SACvC/sC,KAAKgoI,oBAAoB3B,QACrBrmI,KAAK+oI,sBACDhkG,GAAW,EAAoBgI,EAAAA,UAEvC/sC,KAAKioI,aAAa5B,QACdrmI,KAAK+oI,sBACDhkG,GAAW,EAAkBgI,EAAAA,SACrC/sC,KAAKkoI,mBAAmB7B,QACpBrmI,KAAK+oI,sBACDhkG,GAAW,EAAkBgI,EAAAA,WAGrCrJ,IACA1jC,KAAKmoI,uBAAuB9B,QACxBrmI,KAAKgpI,yBACDtlG,GAAY,EAAoBqJ,EAAAA,SAExC/sC,KAAKooI,uBAAuB/B,QACxBrmI,KAAKgpI,yBACDtlG,GAAY,EAAoBqJ,EAAAA,UAExC/sC,KAAKqoI,sBAAsBhC,QACvBrmI,KAAKgpI,yBACDtlG,GAAY,EAAkBqJ,EAAAA,SAEtC/sC,KAAKsoI,sBAAsBjC,QACvBrmI,KAAKgpI,yBACDtlG,GAAY,EAAkBqJ,EAAAA,WAG1C/sC,KAAK2lI,YAAc,EAEf3lI,KAAK2lI,YAAc3lI,KAAK0lI,GAAI,CAE5B,IAAMY,EAAc,CAChBh6E,IAAKlZ,EACLmzF,gBAAmBsC,GAGnBrlI,EAAKqlB,WAAarlB,EAAKqlB,UAAU7rB,QACjC/H,OAAOwkF,OAAO6sD,EAAa,CACvBE,qBACIhjI,EAAKqlB,UAAU,GAAGunF,mBACtBq2B,sBACIjjI,EAAKqlB,UAAU,GAAGsnF,oBACtBu2B,eAAkBljI,EAAKqlB,UAAU,GAAGrX,OAI5CxR,KAAKsnI,mBAAmBX,aAAaL,GACrCtmI,KAAKunI,qBAAqBZ,aAAaL,GAEvCtmI,KAAKwnI,mBAAmBb,aAAaL,GACrCtmI,KAAKynI,qBAAqBd,aAAaL,GAEnCt7G,EAAAA,EAAQ89G,gCACR9oI,KAAK0nI,gBAAgBf,aAAaL,GAClCtmI,KAAK2nI,kBAAkBhB,aAAaL,IAExCtmI,KAAK6nI,iBAAiBlB,aAAaL,GACnCtmI,KAAK8nI,mBAAmBnB,aAAaL,GACrCtmI,KAAK4nI,oBAAoBjB,aAAaL,GAEtCtmI,KAAK+nI,cAAcpB,aAAaL,GAC3BlkI,MAAMpC,KAAKgoI,oBAAoBxC,cAChCxlI,KAAKgoI,oBAAoBrB,aAAaL,GAE1CtmI,KAAKioI,aAAatB,aAAaL,GAC1BlkI,MAAMpC,KAAKkoI,mBAAmB1C,cAC/BxlI,KAAKkoI,mBAAmBvB,aAAaL,GAGzCtmI,KAAKmoI,uBAAuBxB,aAAaL,GACpClkI,MAAMpC,KAAKooI,uBAAuB5C,cACnCxlI,KAAKooI,uBAAuBzB,aAAaL,GAE7CtmI,KAAKqoI,sBAAsB1B,aAAaL,GACnClkI,MAAMpC,KAAKsoI,sBAAsB9C,cAClCxlI,KAAKsoI,sBAAsB3B,aAAaL,GAG5CtmI,KAAKuoI,OAAO5B,aAAaL,GAEzB97G,EAAAA,EAAW6K,cAAcmL,OAAAA,EAAAA,EAAAA,CAAoB8lG,IAE7CtmI,KAAKinI,uBA/GL/9G,EAAOtZ,MAAM,sBAJbsZ,EAAOtZ,MAAM,uBAJbsZ,EAAOtZ,MAAM,wBAJbsZ,EAAOtZ,MAAM,uBAJbsZ,EAAOtZ,MAAM,sBA9BbsZ,EAAOtZ,MAAM,6DA4KIq5H,EAAiB32G,EAASwa,GAK/C,IAJA,IAAIo8F,EAAgB,EAChB3uC,EAAY,EACV4uC,EAAOnpI,KAAKm2G,YAAYt9C,WAH4Bk/C,EAKrC9iH,OAAOy5B,KAAKu6G,GAAjC/hF,EAAA,EAAAA,EAAA6wD,EAAA/6G,OAAAkqD,IAAmD,CAA9C,IAAMkiF,EAAMrxB,EAAA7wD,GACb,GAAI50B,EAAU82G,IAAWD,EAAOC,IAAWD,EAAM,CAC7C,IAAMpwE,EACAzmC,EACI,KACAtyB,KAAKm2G,YAAYv8C,mBAAmBwvE,GACxCC,EAAmBJ,EAAgBG,GAGzC,IAAK92G,GAAWymC,IAAgBswE,EAAkB,CAC9C,IAAMC,EAAgBtpI,KAAKupI,6BACvBF,EAAkBtwE,EAAajsB,GAE9B1qC,MAAMknI,KACPJ,GAAiBI,EACjB/uC,GAAa,KAM7B,OAAO2uC,EAAgB3uC,uDAcEivC,EAAQzwE,EAAajsB,GAC9C,IAAI1T,EAAQnkC,OAAOy5B,KAAK86G,GAAQ1sI,IAAI,SAAAk0B,GAAI,OAAInwB,OAAOmwB,KAC/CwY,EAAc,KAIZrb,EAAMnuB,KAAKm2G,YAAYxmB,0BAEzB52B,GACAvvB,EAAcuvB,EAAY8B,qBAAqBhuB,EAAAA,MAE3CzT,EACMA,EAAME,OACJ,SAAAtI,GAAI,OAAIwY,EAAY5P,KAChB,SAAAgT,GAAK,OACAA,EAAMuuB,WACAvuB,EAAMkrD,YAAc9mE,GACpB4b,EAAME,YAAcA,QAG/CtD,EAAcxpC,KAAKm2G,YAAY3gE,eAAe3I,EAAAA,GAC9CzT,EACMA,EAAME,OACJ,SAAAtI,GAAI,OAAIwY,EAAY5P,KAChB,SAAAgT,GAAK,OACAA,EAAMuuB,WACAhtC,EAAI0pE,aAAajrD,KAAW5b,GAC5B4b,EAAME,YAAcA,OAG/C,IAAIo8F,EAAgB,EAChBO,EAAgB,EA/BqCp7G,GAAA,EAAAC,GAAA,EAAAC,OAAA5zB,EAAA,IAiCzD,IAAA,IAAA6zB,EAAAC,EAAmB2K,EAAnB9jC,OAAAw4B,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAA0B,CAAA,IAAf2C,EAAexC,EAAAh5B,MAChBk0I,EACA7oI,OAAO2oI,EAAOx4G,GAAMyQ,QAAU5gC,OAAO2oI,EAAOx4G,GAAM4S,QAGnDxhC,MAAMsnI,IAAmBA,EAAiB,IAC3CR,GAAiBQ,EACjBD,GAAiB,IAxCgC,MAAAxvH,GAAAqU,GAAA,EAAAC,EAAAtU,EAAA,QAAA,IAAAoU,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,QAAA,GAAAE,EAAA,MAAAC,GA4CzD,OAAO26G,EAAgBO,gDAaL1kG,EAAWzS,EAASwa,GAKtC,IAJA,IAAI68F,EAAa,EACbpvC,EAAY,EACV4uC,EAAOnpI,KAAKm2G,YAAYt9C,WAHmBm/C,EAK5B/iH,OAAOy5B,KAAKqW,GAAjC0iB,EAAA,EAAAA,EAAAuwD,EAAAh7G,OAAAyqD,IAA6C,CAAxC,IAAM2hF,EAAMpxB,EAAAvwD,GACb,GAAIn1B,EAAU82G,IAAWD,EAAOC,IAAWD,EAAM,CAC7C,IAAMpwE,EACAzmC,EACI,KAAOtyB,KAAKm2G,YAAYv8C,mBAAmBwvE,GAC/CQ,EAAY7kG,EAAUqkG,GAG5B,IAAK92G,GAAWymC,IAAgB6wE,EAAW,CACvC,IAAMC,EACA7pI,KAAK8pI,0BACHF,EAAW7wE,EAAajsB,GAE3B1qC,MAAMynI,KACPF,GAAcE,EACdtvC,GAAa,KAM7B,OAAOovC,EAAapvC,oDAcEivC,EAAQzwE,EAAajsB,GAC3C,IAAI1T,EAAQnkC,OAAOy5B,KAAK86G,GAAQ1sI,IAAI,SAAAk0B,GAAI,OAAInwB,OAAOmwB,KAC/CwY,EAAc,KAIZrb,EAAMnuB,KAAKm2G,YAAYxmB,0BAEzB52B,GACAvvB,EAAcuvB,EAAY8B,qBAAqBhuB,EAAAA,MAE3CzT,EACMA,EAAME,OACJ,SAAAtI,GAAI,OAAIwY,EAAY5P,KAChB,SAAAgT,GAAK,OAAKA,EAAMuuB,WACTvuB,EAAMkrD,YAAc9mE,GACpB4b,EAAME,YAAcA,QAG3CtD,EAAcxpC,KAAKm2G,YAAY3gE,eAAe3I,EAAAA,GAC9CzT,EACMA,EAAME,OACJ,SAAAtI,GAAI,OAAIwY,EAAY5P,KAChB,SAAAgT,GAAK,OAAKA,EAAMuuB,WACThtC,EAAI0pE,aAAajrD,KAAW5b,GAC5B4b,EAAME,YAAcA,OAG3C,IAAI68F,EAAa,EACbF,EAAgB,EA7BkCj6G,GAAA,EAAAC,GAAA,EAAAC,OAAA/0B,EAAA,IA+BtD,IAAA,IAAAg1B,EAAAC,EAAmBwJ,EAAnB9jC,OAAAw4B,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAA0B,CAAA,IAAfwB,EAAerB,EAAAn6B,MAChBu0I,EAAclpI,OAAO2oI,EAAOx4G,KAG7B5uB,MAAM2nI,IAAgBA,EAAc,IACrCJ,GAAcI,EACdN,GAAiB,IArC6B,MAAAxvH,GAAAwV,GAAA,EAAAC,EAAAzV,EAAA,QAAA,IAAAuV,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,QAAA,GAAAqB,EAAA,MAAAC,GAyCtD,OAAOi6G,EAAaF,8CAWpBzpI,KAAKinI,iBACLjnI,KAAK6mI,gBAAgBI,0DAQrBjnI,KAAKsnI,mBAAmB30H,QACxB3S,KAAKunI,qBAAqB50H,QAE1B3S,KAAKwnI,mBAAmB70H,QACxB3S,KAAKynI,qBAAqB90H,QAE1B3S,KAAK0nI,gBAAgB/0H,QACrB3S,KAAK2nI,kBAAkBh1H,QAEvB3S,KAAK6nI,iBAAiBl1H,QACtB3S,KAAK8nI,mBAAmBn1H,QACxB3S,KAAK4nI,oBAAoBj1H,QAEzB3S,KAAK+nI,cAAcp1H,QACnB3S,KAAKgoI,oBAAoBr1H,QACzB3S,KAAKioI,aAAat1H,QAClB3S,KAAKkoI,mBAAmBv1H,QAExB3S,KAAKmoI,uBAAuBx1H,QAC5B3S,KAAKooI,uBAAuBz1H,QAC5B3S,KAAKqoI,sBAAsB11H,QAC3B3S,KAAKsoI,sBAAsB31H,QAE3B3S,KAAKuoI,OAAO51H,QAEZ3S,KAAK2lI,WAAa,oCAOlB3lI,KAAKm2G,YAAYr2D,IACb6gF,EAAAA,WACA3gI,KAAKyoI,qBACTzoI,KAAKm2G,YAAYr2D,IACb+gF,EAAAA,oBACA7gI,KAAKwoI,sBACTxoI,KAAKm2G,YAAYr2D,IACb6gF,EAAAA,cACA3gI,KAAK2oI,wBACT3oI,KAAK6mI,gBAAgBx5G,UACrBrtB,KAAK0oI,gBAAgBr7G,8WC58B7B,IAAMnE,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAWJkgE,aAOjB,SAAAA,EAAYx3C,gGAAYxK,CAAAznC,KAAAypF,GACpBzpF,KAAKm2G,YAAclkE,EACnBjyC,KAAKgqI,sBAAwB,GAC7BhqI,KAAKiqI,sBAAwB,GAC7BjqI,KAAKkqI,wBAA0B,GAC/BlqI,KAAKmqI,mCAAqC,GAC1CnqI,KAAKoqI,0BAA4BpqI,KAAKoqI,0BAA0Br0I,KAAKiK,MACrEA,KAAKqqI,4BAA8BrqI,KAAKqqI,4BAA4Bt0I,KAAKiK,MACzEA,KAAKsqI,eAAiBtqI,KAAKsqI,eAAev0I,KAAKiK,MAC/CA,KAAKm2G,YAAYxpF,GAAGk0G,EAAAA,qBAA8C7gI,KAAKqqI,6BACvErqI,KAAKm2G,YAAYtmF,WAAW5C,2BAA2BjtB,KAAKoqI,2BAC5DpqI,KAAKm2G,YAAYxpF,GAAGg0G,EAAAA,UAA4B3gI,KAAKsqI,2FAU7B3pG,KAA4B,IAAlBuzE,EAAkBvrE,EAAlBurE,eAC5Bq2B,EAAmBvqI,KAAKmqI,mCAAmCxpG,GAAU,GAAM,EAIjF,GAFA3gC,KAAKmqI,mCAAmCxpG,GAAU4pG,KAEE,IAAhDvqI,KAAKiqI,sBAAsB3rI,QAAQqiC,IAAmBA,KAAU3gC,KAAKkqI,yBAC9Dh2B,GAAkB,GAAKq2B,EAAkB,GADpD,CAKA,IAAMxxE,EAAc/4D,KAAKm2G,YAAYv8C,mBAAmBj5B,GAExD,GAAIo4B,EAGA,GAFeA,EAAY8B,qBAAqBhuB,EAAAA,GAErC7vC,OAAS,GAAK+7D,EAAYyxE,eAIjC,OAIR,IAAM5pG,EAAmB5gC,KAAKgqI,sBAAsBrpG,GAE/CvgC,MAAMG,QAAQqgC,KAAqBA,EAAiB87C,MAAM,SAAAjmC,GAAU,OAAmB,IAAfA,MACzEz2C,KAAKkqI,wBAAwBvpG,GAAU,CACnCE,kBAAmBqzE,EACnBtzE,iBAAkB,wDAYJzS,KAAyB,IAAA0Z,EAAA7nC,KAAlBk0G,EAAkBrrE,EAAlBqrE,eACzB/lF,IAAQnuB,KAAKm2G,YAAYxmB,4BAI7B16F,OAAOy5B,KAAKwlF,GAAgBjzG,QAAQ,SAAA0/B,GAChC,IAAoD,IAAhDkH,EAAKoiG,sBAAsB3rI,QAAQqiC,GAAvC,CAIA,IAAMC,EAAmBiH,EAAKmiG,sBAAsBrpG,GAE/CvgC,MAAMG,QAAQqgC,GAERA,EAAiB5jC,QAxFR,GAyFhB4jC,EAAiBrK,QAFjBsR,EAAKmiG,sBAAsBrpG,GAAU,GAKzCkH,EAAKmiG,sBAAsBrpG,GAAQ9iC,KAAKq2G,EAAevzE,OAI3D1rC,OAAOy5B,KAAK1uB,KAAKkqI,yBAAyBjpI,QAAQ,SAAA0/B,GAAU,IAAA8pG,EACR5iG,EAAKqiG,wBAAwBvpG,GAArEC,EADgD6pG,EAChD7pG,iBAAkBC,EAD8B4pG,EAC9B5pG,kBAI1B,GAFAD,EAAiB/iC,KAAKq2G,EAAevzE,IAnGjB,IAqGhBC,EAAiB5jC,OAAoC,CACrD,GAAI4jC,EAAiB87C,MAAM,SAAAjmC,GAAU,YAA0B,IAAfA,GAA6C,IAAfA,IAAmB,CAC7F,IAAMi0F,EAAyB3zH,KAAKyK,UAAUof,GAE9CpW,EAAAA,EAAW6K,cACPqL,OAAAA,EAAAA,EAAAA,CAA8BC,EAAQ+pG,EAAwB7pG,IAClE3X,EAAOnZ,KAAP,yEAAA1S,OACIsjC,EADJ,0BAAAtjC,OACmCqtI,EADnC,2BAAArtI,OAEIwjC,IACJgH,EAAKoiG,sBAAsBpsI,KAAK8iC,GAChCkH,EAAKyiG,eAAe3pG,UAGjBkH,EAAKqiG,wBAAwBvpG,8CAWjCA,UACJ3gC,KAAKgqI,sBAAsBrpG,qCASlC3gC,KAAKm2G,YAAYr2D,IAAI+gF,EAAAA,qBAA8C7gI,KAAKqqI,6BACxErqI,KAAKm2G,YAAYr2D,IAAI6gF,EAAAA,UAA4B3gI,KAAKsqI,gBACtDtqI,KAAKm2G,YAAYtmF,WAAW3C,8BAA8BltB,KAAKoqI,2BAC/DpqI,KAAKgqI,2BAAwBrvI,EAC7BqF,KAAKkqI,6BAA0BvvI,EAC/BqF,KAAKiqI,2BAAwBtvI,EAC7BqF,KAAKmqI,wCAAqCxvI,EAC1CqF,KAAKm2G,iBAAcx7G,6XCpJNivF,aAQjB,SAAAA,EAAY33C,gGAAYxK,CAAAznC,KAAA4pF,GACpB5pF,KAAKi0B,MAAQ,CACT08B,MAAO,GAIPg6E,kBAAmB,MAGvB,IAAMp4G,EAAS0f,EAAW4mB,WAE1B74D,KAAKi0B,MAAM08B,MAAMp+B,GAAU,IAAIgjD,EAAAA,EAAahjD,EAAQ,MAAM,GAE1D0f,EAAW1H,iBACPkK,EAAAA,yBACAz0C,KAAK4qI,mBAAmB70I,KAAKiK,OACjCiyC,EAAW1H,iBACPkK,EAAAA,YACAz0C,KAAK6qI,YAAY90I,KAAKiK,OAC1BiyC,EAAW1H,iBACPkK,EAAAA,UACAz0C,KAAK8qI,aAAa/0I,KAAKiK,OAC3BiyC,EAAW1H,iBACPkK,EAAAA,qBACAz0C,KAAK+qI,qBAAqBh1I,KAAKiK,OAC/BiyC,EAAWxnB,MACXwnB,EAAWxnB,KAAKuoB,YACZoZ,EAAAA,EAAWnyD,uBACX+F,KAAKgrI,aAAaj1I,KAAKiK,yEAahB2qI,GACf,IAAMM,EACAjrI,KAAKi0B,MAAM08B,MAAM3wD,KAAKi0B,MAAM02G,mBAC5BO,EAAqBlrI,KAAKi0B,MAAM08B,MAAMg6E,GAE5CM,GAAsBA,EAAmBp1D,oBAAmB,GAC5Dq1D,GAAsBA,EAAmBr1D,oBAAmB,GAC5D71E,KAAKi0B,MAAM02G,kBAAoBA,sCAWvBp4G,EAAQwmC,GAChB,IAAIoyE,EAAYnrI,KAAKi0B,MAAM08B,MAAMp+B,GAE5B44G,IACDA,EAAYnrI,KAAKi0B,MAAM08B,MAAMp+B,GACvB,IAAIgjD,EAAAA,EAAahjD,EAAQwmC,EAAYwtB,wDAYtCh0D,GACT,IAAM44G,EAAYnrI,KAAKi0B,MAAM08B,MAAMp+B,GAE/B44G,GACAA,EAAUC,6DAYG74G,EAAQ0jD,GACzB,IAAMk1D,EAAYnrI,KAAKi0B,MAAM08B,MAAMp+B,GAE/B44G,GACAA,EAAUx1D,eAAeM,sCAY7B,OAAOj2E,KAAKi0B,MAAM08B,2CAST06E,GACT,IAAK,IAAM94G,KAAU84G,EAAU,CAC3B,IAAIC,OAAoB,EAEpBtrI,KAAKi0B,MAAM08B,MAAMp+B,IACjB+4G,EAAuBtrI,KAAKi0B,MAAM08B,MAAMp+B,IAEdg0D,kBACtB+kD,EACK31D,eAAe01D,EAAS94G,GAAQijD,cAGzC81D,EAAuB,IAAI/1D,EAAAA,EACvBhjD,EAAQ84G,EAAS94G,GAAQijD,aAC7Bx1E,KAAKi0B,MAAM08B,MAAMp+B,GAAU+4G,EAC3BA,EAAqBF,iBAGzBE,EAAqBx1D,yBACfu1D,EAAS94G,GAAQujD,gFCxJnC,IAAM2P,EAAgB1qF,EAAQ,IACxBwwI,EAAgBxwI,EAClB,KAEEywI,EAAe,SAerB,SAASp8C,IAELpvF,KAAKyrI,cAAgB,IAAIhmD,EAGzBzlF,KAAK0rI,qBAAuB,IAAIH,EAGhCvrI,KAAKmpH,QAAU,KAIfnpH,KAAKklF,UAAY,KAGjBllF,KAAK2rI,cAAgB,KAIrB3rI,KAAKZ,SAAW,KAIhBY,KAAKy8E,QAAU,GAGfz8E,KAAKy9D,MAAQ+tE,EAIbxrI,KAAK4rI,WAAa,EAwNtB,SAASC,EAAmBC,GACxB,IAAK,IAAIv3I,EAAI,EAAGA,EAAIu3I,EAAoB9uI,OAAQzI,IACN,IAAlCu3I,EAAoBv3I,GAAGyI,QACvB8uI,EAAoBxuI,OAAO/I,EAAG,GAItC,OAAOu3I,EAAoB9uI,OAAS,EAvNxCoyF,EAAYj5F,UAAU4vB,MAAQ,WAC1B,GAAI/lB,KAAKy9D,QAAU+tE,EACf,MAAM,IAAIttI,MAAJ,uDAAAb,OAEEmuI,EAFF,qCAAAnuI,OAGE2C,KAAKy9D,MAHP,YAKVz9D,KAAKy9D,MA3De,YA4DpBz9D,KAAKyrI,cAAc1lH,QACnB/lB,KAAKklF,UAAY,IAAIzyE,MASzB28E,EAAYj5F,UAAU64B,KAAO,SAAc5vB,GAAU,IAAAyoC,EAAA7nC,KACjD,GAvEoB,cAuEhBA,KAAKy9D,MACL,MAAM,IAAIv/D,MAAJ,sDAAAb,OAxEU,YAwEV,qCAAAA,OAGE2C,KAAKy9D,MAHP,YAOV9tD,QAAQH,IAAI,8CACZxP,KAAKyrI,cAAcz8G,OAGnB,IAAM+8G,EAwBV,SAAsB58C,EAAanpB,GAO/B,GANAr2D,QAAQH,IACJ,wEAAA,qBAAAnS,OAC2B2oE,EAAOgmE,UAAUhvI,SAI5CgpE,EAAOgmE,UAAUhvI,OAAS,EAAG,CAC7B,IAAI0nG,EAAS1+B,EAAOkf,UAAU+mD,qBACxB98C,EAAYjK,UAAU+mD,qBAIxBvnC,EAAS,IACTA,EAAS,GAGb,IAAInrE,EAAQ,IAEZysC,EAAOgmE,UAAU/qI,QAAQ,SAAAirI,GACrBA,EAAWC,OAASznC,EACpBwnC,EAAW3jB,KAAO7jB,EAClBnrE,GAAK,GAAAl8B,OAAO6uI,EAAWE,KAAlB,OAET7yG,GAAS,IACT5pB,QAAQH,IAAI+pB,GAKZysC,EAAOgmE,UAAUl3I,KAAOkxE,EAAOlxE,KAInCq6F,EAAY1S,QAAQ5+E,KAAKmoE,EAAOgmE,WAChC78C,EAAYg6B,UACZx5G,QAAQH,IAAR,oBAAAnS,OAAgC8xF,EAAYg6B,UAG5Ch6B,EAAYk9C,cA/DkBt2I,KAAK,KAAMiK,MAEzCA,KAAKyrI,cAAc7kD,sBAAsB3lF,QAAQ,SAAAqrI,GAC7CzkG,EAAK6jG,qBAAqBl0H,KAAK80H,EAAiBP,GAChDlkG,EAAKshF,YAITnpH,KAAKy9D,MA1FkB,eA6FvBz9D,KAAKZ,SAAWA,GA2DpBgwF,EAAYj5F,UAAUk2I,WAAa,WAxJR,iBAyJnBrsI,KAAKy9D,OAAiD,IAAjBz9D,KAAKmpH,SAG1CnpH,KAAKusI,SAQbn9C,EAAYj5F,UAAUo2I,MAAQ,WAAW,IAAA7gG,EAAA1rC,KACrC2P,QAAQH,IAAR,sDAAAnS,OAEQ2C,KAAKy8E,QAAQz/E,SACrBgD,KAAK2rI,cAAgB,GAOrB,IAAMa,EAASxsI,KAAKy8E,QAGdgwD,EAAiB,GAGvBZ,EAAmBW,GAGnBA,EAAOvrI,QAAQ,SAAAs4B,GAAK,OA6FxB,SAA+BA,EAAO6yG,GAClC,GAAqB,IAAjB7yG,EAAMv8B,OACNu8B,EAAM17B,KAAKuuI,OACR,CACH,GAAI7yG,EAAMA,EAAMv8B,OAAS,GAAGmvI,OAASC,EAAKD,MAGtC,YAFA5yG,EAAM17B,KAAKuuI,GAKf,IAAK,IAAI73I,EAAI,EAAGA,EAAIglC,EAAMv8B,OAAQzI,IAC9B,GAAI63I,EAAKD,MAAQ5yG,EAAMhlC,GAAG43I,MAGtB,YAFA5yG,EAAMj8B,OAAO/I,EAAG,EAAG63I,GAK3B7yG,EAAM17B,KAAKuuI,IA9GSM,CAAsBD,EAAgBlzG,KAG9D,IAvBqC,IAAAqf,EAAA,WAyBjC,IAAI+zF,EAAkBH,EAAO,GAE7BA,EAAOvrI,QAAQ,SAAA+qI,GACPA,EAAU,GAAGG,MAAQQ,EAAgB,GAAGR,QACxCQ,EAAkBX,KAK1B,IAAIY,EAAYD,EAAgBp2G,QAEhCmV,EAAKmhG,oBAAoBD,EAAWD,EAAgB73I,MAIpD,IAxCiC,IAAA0yD,EAAA,WAyC7B,IAAIslF,GAAe,EACbC,EAAgBJ,EAAgB,GAAGR,MASzC,GAPAK,EAAOvrI,QAAQ,SAAA+qI,GACPA,EAAU,GAAGG,MAAQY,IACrBD,GAAe,KAKnBA,EACA,MAAA,QAGJF,EAAYD,EAAgBp2G,QAC5BmV,EAAKmhG,oBAAoBD,EAAW,OAhBjCD,EAAgB3vI,OAAS,GAAG,CAAA,GAAA,UAAAwqD,IAY3B,QA7BLqkF,EAAmBW,IAAS5zF,IAuCnC54C,KAAKy9D,MAjOc,WAkOfz9D,KAAKZ,UACLY,KAAKZ,SAASY,KAAK2rI,gBAU3Bv8C,EAAYj5F,UAAU02I,oBAAsB,SAAST,EAAMt3I,GACnDA,MAAAA,IACAkL,KAAK2rI,eAAL,KAAAtuI,OAA2BvI,EAA3B,KACAkL,KAAK4rI,WAAa92I,EAAKkI,OAAS,GAEhCgD,KAAK4rI,WAAaQ,EAAKA,KAAKpvI,OA/OJ,KAgPxBgD,KAAK2rI,eAAiB,SACtB3rI,KAAK4rI,WAAa,GAEtB5rI,KAAK2rI,eAAL,IAAAtuI,OAA0B+uI,EAAKA,MAC/BpsI,KAAK4rI,YAAcQ,EAAKA,KAAKpvI,OAAS,GAwD1CoyF,EAAYj5F,UAAUq2C,SAAW,SAASI,GACtC5sC,KAAKyrI,cAAcj/F,SAASI,IAOhCwiD,EAAYj5F,UAAUuiF,YAAc,SAAS9rC,GACzC5sC,KAAKyrI,cAAc/yD,YAAY9rC,IAQnCwiD,EAAYj5F,UAAU62I,iBAAmB,WACrC,GAjUmB,aAiUfhtI,KAAKy9D,MACL,MAAM,IAAIv/D,MAAJ,8DAAAb,OAlUS,WAkUT,qCAAAA,OAGE2C,KAAKy9D,MAHP,YAMV,OAAOz9D,KAAK2rI,eAMhBv8C,EAAYj5F,UAAU82I,SAAW,WAC7B,OAAOjtI,KAAKy9D,OAOhB2xB,EAAYj5F,UAAUwc,MAAQ,WAC1B3S,KAAKy9D,MAAQ+tE,EACbxrI,KAAKmpH,QAAU,KACfnpH,KAAK2rI,cAAgB,KACrB3rI,KAAKklF,UAAY,KACjBllF,KAAKZ,SAAW,KAChBY,KAAKy8E,QAAU,GACfz8E,KAAK4rI,WAAa,GAGtB53I,EAAOD,QAAUq7F,iCCvWjB,SAAA7lE,GAAAl1B,EAAAQ,EAAAqxB,EAAA,IAAA,WAAA,OAAAqiE,IAAA,IAAA2kD,EAAA74I,EAAA,GAEM60B,EAASnuB,EAAQ,GAAqBiuB,UAAUO,GAUvC,SAASg/D,EAAmBt2C,GAEvCjyC,KAAK2tE,SAAW,GAEhB3tE,KAAKiyC,WAAaA,EAClBjyC,KAAKiyC,WAAW+7C,mBACZ,WAAYhuF,KAAKmtI,gBAAgBp3I,KAAKiK,OAG9CuoF,EAAmBpyF,UAAUg3I,gBACvB,SAASx/D,EAAUy/D,EAAan1C,GAAQ,IAAApwD,EAAA7nC,KACtC,GAAKA,KAAKiyC,WAAW+lD,SAASC,GAA9B,CAQA,IAAMzoF,EAAM,GAEZm+D,EAAS8I,SAASx1E,QAAQ,SAAAw2B,GAEtB,IAAM3iC,EAAO2iC,EAAUrvB,WAAWtT,KAC5BovB,EAAUuT,EAAUjiC,MAEtBqyC,EAAK8lC,SAAS74E,KAAUovB,IACxB2jB,EAAK8lC,SAAS74E,GAAQovB,EACtBgF,EAAOpZ,KAAP,OAAAzS,OAAmBvI,EAAnB,cAAAuI,OAAoC6mB,IAEpC1U,EAAI3R,KAAK,CACLoB,GAAI,oBACJw4B,UAAW3iC,EACXovB,QAAAA,OAMR1U,EAAIxS,OAAS,GACbwtB,EAAAA,EAAWkJ,QAAQ3c,KAAKyK,UAAUhS,SA5BlC0Z,EAAOnZ,KAAP,8CAAA1S,OACkDswE,GAC9CsqB,IAqChB1P,EAAmBpyF,UAAUk3I,oBAAsB,SAASC,GACxD,OAAOttI,KAAK2tE,SAAS2/D,wVC/DzB,IAAMpkH,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GASJ4gE,aAOjB,SAAAA,EAAYuc,gGAAUj/D,CAAAznC,KAAAmqF,GAClBnqF,KAAK0mG,SAAWA,EAChB1mG,KAAK4qB,aAAe87E,EAAS97E,aAC7B1B,EAAOrZ,MAAM,uBACb7P,KAAK8uD,SAAW,GAEhB9uD,KAAKutI,2BAA6BvtI,KAAKwtI,oBAAoBz3I,KAAKiK,MAKhE0mG,EAASxY,oBAAoB,uBACzBluF,KAAKytI,oBAAoB13I,KAAKiK,0EASlB4M,GAChB,IAAMxE,EAAawE,EAAKxE,WAExB,GAAKA,EAAL,CAIA8gB,EAAOrZ,MAAM,+BAAgCzH,GAE7C,IAAMgyD,EAAWhyD,EAAWq1D,MAE5B,GAAIrD,IAAap6D,KAAKy9D,MAItB,OAAQrD,GACR,KAAKszE,EAAAA,SACL,KAAKA,EAAAA,UACL,KAAKA,EAAAA,cACL,KAAKA,EAAAA,eACL,KAAKA,EAAAA,aACD,IAAM3pD,EAAU37E,EAAWulI,WAE3B,IAAK5pD,EACD,OAIJ,IAAM1iE,EAAUrhB,KAAK8uD,SAASi1B,GAE1B1iE,EACAA,EAAQusH,SAASxzE,EAAUhyD,EAAWylI,gBAEtC3kH,EAAOnZ,KAAK,kCAAmCg0E,qDAcnCsX,EAAY7lB,GAChC,GAAIx1E,KAAK8uD,SAASusC,GAId,OAHAnyE,EAAOnZ,KAAK,uDACRsrF,GAEG,IAAIn9F,MAAMwvI,EAAAA,sBAGrB,IAAMrsH,EAAU,IAAIysH,EAAAA,EAChBzyC,EAAY7lB,EAAax1E,KAAK0mG,UAMlC,OAJArlF,EAAQ0sH,iBAAiB/tI,KAAKutI,4BAE9BvtI,KAAK8uD,SAASusC,GAAch6E,EAErBA,8CASS6T,GAChB,IAAM6uD,EAAU7uD,EAAM6uD,QAEtB,GAAI7uD,EAAMklC,WAAaszE,EAAAA,WAChBx4G,EAAMklC,WAAaszE,EAAAA,aAAwB,CAC9C,IAAMrsH,EAAUrhB,KAAK8uD,SAASi1B,GAE9B,IAAK1iE,EAID,YAHA6H,EAAOtZ,MAAM,6CACTm0E,GAKR1iE,EAAQ2sH,oBAAoBhuI,KAAKutI,mCAC1BvtI,KAAK8uD,SAASi1B,GAGzB/jF,KAAK4qB,aAAa2C,KACd6+B,EAAAA,EAAW5xD,mCACX06B,8+BC1HZ,IAAMhM,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAYJukH,cAWjB,SAAAA,EAAYzyC,EAAY7lB,EAAakxB,GAAU,IAAA7+D,EAAA,mGAAAJ,CAAAznC,KAAA8tI,IAC3CjmG,EAAAH,EAAA1nC,KAAA2nC,EAAAmmG,GAAAp5I,KAAAsL,QAEKq7F,WAAaA,EAClBxzD,EAAK2tC,YAAcA,EACnB3tC,EAAK6+D,SAAWA,EAShB7+D,EAAK41B,WAAQ9iE,EAd8BktC,wPAXCD,EAAAA,2CAgCxC5nC,KAAKy9D,QAAU69B,EAAAA,WACZt7F,KAAKy9D,QAAU69B,EAAAA,aAMtBt7F,KAAKiuI,aAAa,QALd/kH,EAAOnZ,KAAK,mFAcZ/P,KAAKy9D,QAAU69B,EAAAA,UACZt7F,KAAKy9D,QAAU69B,EAAAA,WACft7F,KAAKy9D,QAAU69B,EAAAA,eACft7F,KAAKy9D,QAAU69B,EAAAA,eAMtBt7F,KAAKiuI,aAAa,SALd/kH,EAAOnZ,KAAK,0EAgBXqqD,EAAU8zE,GACf,GAAI9zE,IAAap6D,KAAKy9D,MAAtB,CAIA,IAAM0wE,EAAWnuI,KAAKy9D,MAEtBz9D,KAAKy9D,MAAQrD,EACbp6D,KAAK4qB,aAAa2C,KAlFJ,gBAmFV,CACIw2D,QAAS/jF,KAAKq7F,WACd6yC,cAAAA,EACAC,SAAAA,EACA/zE,SAAUp6D,KAAKy9D,MACf+X,YAAax1E,KAAKw1E,wDAWb9oD,GACb1sB,KAAKgzC,YApGS,gBAoGkBtmB,+CAQhBA,GAChB1sB,KAAK8sB,eA7GS,gBA6GqBJ,wCAS1BoS,GAAQ,IAAA4M,EAAA1rC,KACXoI,EAAa,CACfoI,MAAS,kCACTsuB,OAAUA,EACV6uG,WAAY3tI,KAAKq7F,YAGrBjzF,EAAWgmI,YAAcpuI,KAAKw1E,YAE9B,IAAM/4D,EAAK/V,OAAAA,EAAAA,IAAAA,CAAI,CACX6V,GAAIvc,KAAK0mG,SAASxrB,YAClB1pE,KAAM,QACL5c,EAAE,QAASwT,GACXsI,KAELwY,EAAOrZ,MAAP,GAAAxS,OAAgByhC,EAAhB,yBAA+CriB,EAAGhM,UAClDzQ,KAAK0mG,SAASjpF,WAAWnF,OACrBmE,EACA,aACA,SAAA7M,GACIsZ,EAAOtZ,MAAP,aAAAvS,OACiByhC,EADjB,kCACyDlvB,GACzD87B,EAAKkiG,SAAStyC,EAAAA,iJCzJfp1E,EAAA,EAAA,CACXtW,MAAO,CACHy+H,KAAM,OACN7kI,MAAO,QACP8kI,oBAAqB,sBACrBC,oBAAqB,uBAEzB74I,KAAM,CACF84I,KAAM,OACN5mI,OAAQ,UAEZkS,OAAQ,CACJ+5D,IAAK,MACLD,GAAI,KACJ3uB,QAAS,gnCCFjB,IAAM/7B,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GAOJklH,aAmBjB,SAAAA,IAA0B,IAAdh9H,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,gGAAI6pC,CAAAznC,KAAAyuI,GAAA,IAElBC,EAEAj9H,EAFAi9H,gBACGC,EAHeC,EAIlBn9H,EAJkB,CAAA,oBAWtBzR,KAAK6uI,SAALzvG,EAAA,CACIyV,UAAW65F,GACJA,EAAgBjkH,KAAKhN,WAAWg+B,OAAO6kE,cAC3CquB,GAQP3uI,KAAK8uI,gBAAkB,KAGvB9uI,KAAK+uI,cAAgB/uI,KAAK+uI,cAAch5I,KAAKiK,MAC7CA,KAAKgvI,eAAiBhvI,KAAKgvI,eAAej5I,KAAKiK,MAC/CA,KAAKivI,gBAAkBjvI,KAAKivI,gBAAgBl5I,KAAKiK,oEAiBtCqP,GACX,IAAM0rF,EAAU1rF,EAAQzO,KAExB,GAAKm6F,EAOL,GAAI/6F,KAAK8uI,iBACF9uI,KAAK8uI,gBAAgBI,eAAiBn0C,EACzC/6F,KAAK+uI,cACDh0C,EACAr4C,EAAAA,EAAQ7K,iBACR,gBALR,CAWA,IAAMp7B,EAAKzc,KAAKmvI,oBAAoB9/H,EAAQ7L,KAAKiZ,IAC3C2yH,EAAU3yH,GAAMA,EAAGmd,KAAK,UACxBkF,EAASswG,GAAWA,EAAQriI,KAAK,UAEnC+xB,IAAW4jB,EAAAA,EAAQE,WACnB5iD,KAAK8uI,gBAAkB9uI,KAAKqvI,sBAAsBt0C,EAAS,CACvDx+B,aAAa,EACb+yE,cAAc,KAMlBtvI,KAAK8uI,iBACL9uI,KAAK8uI,gBAAgBS,eAAeH,GAKpCtwG,IAAW4jB,EAAAA,EAAQ7K,kBAChB/Y,IAAW4jB,EAAAA,EAAQI,aACnBhkB,IAAW4jB,EAAAA,EAAQG,WACtB7iD,KAAKwvI,sDAePz0C,GAA2B,IAAlB5oD,EAAkBv0C,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACzBoC,KAAK8uI,gBAAkB9uI,KAAKqvI,sBAAsBt0C,EAAS,CACvDx+B,aAAa,EACb+yE,cAAc,IAGlBtvI,KAAK8uI,gBAAgB/oH,MAAMosB,kCASvBnyC,KAAK8uI,iBACL9uI,KAAK8uI,gBAAgB9/G,OAGzBhvB,KAAK8uI,gBAAkB,iDAWPW,GAChB,IACI,IAAMC,GAAS,IAAIniI,WAAYC,gBAAgBiiI,EAAK,YAEpD,OAAOl0F,EAAEm0F,GACX,MAAO1wI,GAGL,OAFAkqB,EAAOtZ,MAAM,kDAEN,oDAeOmrF,GAAuB,IAAdtpF,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACrC,IAAKm9F,EACD,MAAM,IAAI78F,MAAM,mDAGpB,IAAM6/D,EAAS3+B,EAAA,CACXyV,UAAW70C,KAAK6uI,SAASh6F,UACzBmnE,QAASh8G,KAAK+uI,cACdY,eAAgB3vI,KAAKivI,gBACrBW,cAAe5vI,KAAKgvI,eACpBj0C,QAAAA,GACGtpF,GAGP,OAAO,IAAIo+H,EAAAA,EAAkB9xE,yCAiBnBg9B,EAAS97D,GAAyB,IAAdE,EAAcvhC,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACxCsrB,EAAOtZ,MACH,oCAAqCmrF,EAAS97D,EAAWE,GAE7D,IAAM1iB,EAAK/V,OAAAA,EAAAA,IAAAA,CAAI,CACX6V,GAAIw+E,EACJvpF,KAAM,QAEL5c,EAAE,SAAU,CACT4b,MAAO,oBACPsuB,OAAQG,IAEXrqC,EAAE,WACFa,EAAE0pC,GACFzuB,KAEL1Q,KAAKgvI,eAAej0C,EAASt+E,GAEzBzc,KAAK8uI,iBACF9uI,KAAK8uI,gBAAgBI,eAAiBn0C,GACzC/6F,KAAKwvI,+DAeGM,GACZ,IAAK9vI,KAAK6uI,SAASc,eAIf,OAHAzmH,EAAOtZ,MAAM,gDACbkgI,EAAiBziH,UAKrB,IACIyf,EADEijG,EAAUD,EAAiBvpE,eAG7BwpE,IACAjjG,EAAY9sC,KAAK6uI,SAASmB,sBACpBjjG,EAAAA,EAAUC,QAAUD,EAAAA,EAAUE,QAKxC,IAAMgC,EAAc6gG,EAAiB7pD,oBAC/BgqD,EAAmBj+F,EAAAA,EAAIk+F,qBACzB,CACI,CACIltG,SAAQ,SAAA3lC,OACK2C,KAAK8uI,gBAAgBI,cAClC9uG,UAAW2vG,EAAUljG,EAAAA,EAAkBA,EAAAA,EACvCF,WAAY,QACZpgB,OAAQ0iB,EACRrC,MAAOqC,EAAY/I,iBAAiB,GACpC4G,UAAAA,KAIZ9sC,KAAK6uI,SAASc,eAAeM,EAAiB,2CAWnCl1C,EAASt+E,GACpB,GAAKzc,KAAK6uI,SAASe,cAInB,IACI,IAAMO,GACA,IAAIC,eAAgBC,kBAAkB5zH,EAAGhM,UAAYgM,GAE3Dzc,KAAK6uI,SAASe,cAAc70C,EAAS,CAAEt+E,GAAI0zH,IAC7C,MAAOnxI,GACLkqB,EAAOtZ,MAAM,kGAWjB5P,KAAKgvB,OAELhvB,KAAK6uI,SAASyB,oBACPtwI,KAAK6uI,SAASyB,q3BC5T7B,IAAMpnH,EAASF,OAAAA,EAAAA,UAAAA,CAAUO,GASJsmH,aAoBjB,SAAAA,IAA0B,IAAdp+H,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,gGAAI6pC,CAAAznC,KAAA6vI,GACtB7vI,KAAK6uI,SAALzvG,EAAA,CACIyV,UAAW,GACX0nB,aAAa,EACbg0E,cAAc,EACdjB,cAAc,GACX79H,GASPzR,KAAK6zF,QAAU,GAOf7zF,KAAK8uI,gBAAkB,KAGvB9uI,KAAK4kB,SAAW5kB,KAAK4kB,SAAS7uB,KAAKiK,MACnCA,KAAKivI,gBAAkBjvI,KAAKivI,gBAAgBl5I,KAAKiK,MACjDA,KAAKgvI,eAAiBhvI,KAAKgvI,eAAej5I,KAAKiK,kEAU/C,OAAOA,KAAK6uI,SAAS9zC,+CAUVq0C,GACX,OAAQA,EAAQriI,KAAK,WACrB,KAAK21C,EAAAA,EAAQC,OACT3iD,KAAKwwI,iBAAiBpB,GACtB,MAEJ,KAAK1sF,EAAAA,EAAQE,SACT5iD,KAAKywI,mBAAmBrB,GACxB,MAEJ,KAAK1sF,EAAAA,EAAQG,UACT7iD,KAAK0wI,oBAAoBtB,GACzB,MAEJ,KAAK1sF,EAAAA,EAAQpoD,eACT0F,KAAK2wI,iBAAiBvB,oCAaN,IAAlBj9F,EAAkBv0C,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACZoC,KAAK8uI,kBAIT9uI,KAAK6zF,QAAU7zF,KAAK6zF,QAAQx2F,OAAO80C,GAEnCnyC,KAAK8uI,gBAAkB9uI,KAAKqvI,wBAE5BrvI,KAAK8uI,gBAAgB10C,OAAOjoD,mCAUxBnyC,KAAK8uI,iBACL9uI,KAAK8uI,gBAAgB3qE,YAGzBnkE,KAAK0wI,sEAUe,IAAA7oG,EAAA7nC,KAkBd4wI,EAAiB,CACnBn1F,OAAQ,CACJ0oB,UAAW,cAEf7rD,OAAQtY,KAAKgvI,gBAWX6B,EAAazxG,EAAA,CACf8vB,WAAY5E,EAAAA,GACTtqD,KAAK6uI,SAASh6F,WAgCfi8F,EAAW,CACb5iD,oBAAqB,aACrBtjC,gBAAiB,GACjBhgC,aAAc,CAAE2C,KApBJ,SAAA2H,GACZ,OAAQA,GACR,KAAKk3B,EAAAA,EAAWh1D,sBAChB,KAAKg1D,EAAAA,EAAWn1D,kBACZ4wC,EAAKjjB,SAAS89B,EAAAA,EAAQ7K,iBAAkB3iB,MAiB5CitF,qBAAsB,WAGlB,MAAO,IAEX/zB,uBAAwB,cAS5BpuF,KAAK+wI,KAAO,IAAI/+F,EAAAA,EAAIhyC,KAAM,IAO1BA,KAAK+wI,KAAK/9F,YACN5M,EAAAA,EAAUxJ,mBACV58B,KAAKivI,iBAGT,IAAM/4C,EAAiB,IAAI/5B,EAAAA,OACvBxhE,OACAA,EACAqF,KAAK6uI,SAAS9zC,QACd61C,EACA,CACIrwB,oBAAqBvgH,KAAK6uI,SAAS0B,aACnC/vB,oBAAqBxgH,KAAK6uI,SAASS,cAEvCuB,GACA,EACA7wI,KAAK6uI,SAAStyE,aASlB,OAFA25B,EAAe7tC,WAAWyoF,EAAU9wI,KAAK+wI,KA5GtB,IA8GZ76C,mCAYFj3D,GAAyB,IAAdE,EAAcvhC,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GAC1BoC,KAAK6uI,SAAS7yB,QAAQh8G,KAAK6uI,SAAS9zC,QAAS97D,EAAWE,2CAY5C2wG,GACZ9vI,KAAK6zF,QAAQh2F,KAAKiyI,GAElB9vI,KAAK6uI,SAASc,eAAeG,0CAWlBrzH,GACXzc,KAAK6uI,SAASe,cAAc5vI,KAAK6uI,SAAS9zC,QAASt+E,4CAYtC2yH,GACRpvI,KAAK8uI,gBAMV9uI,KAAK8uI,gBAAgB/6C,UAAUq7C,GAL3BlmH,EAAOtZ,MAAM,iGAgBFw/H,GAAS,IAAA1jG,EAAA1rC,KACpBA,KAAK8uI,gBACL5lH,EAAOtZ,MAAM,sDAKjB5P,KAAK8uI,gBAAkB9uI,KAAKqvI,wBAE5BrvI,KAAK8uI,gBAAgB95C,YACjBo6C,EACA,aACA,WAAA,OAAM1jG,EAAK9mB,SACP8mB,EAAKmjG,SAAS9zC,QACdr4C,EAAAA,EAAQ7K,iBACR,2EAaR73C,KAAK6zF,QAAQ5yF,QAAQ,SAAA2rC,GAAK,OAAIA,EAAMvf,YACpCrtB,KAAK6zF,QAAU,GAEX7zF,KAAK8uI,iBACL9uI,KAAK8uI,gBAAgBxtB,eAGrBthH,KAAK+wI,OACL/wI,KAAK+wI,KAAKjkH,eACNsZ,EAAAA,EAAUxJ,mBACV58B,KAAKivI,iBAGTjvI,KAAK+wI,KAAK/jD,oDAYDoiD,GACbpvI,KAAK8uI,gBAAgB56C,iBAAiBk7C,uHCnY9Cp7I,EAAOD,QAAUgH,EAAQ,KAAiBi2I,2iBCgC1C,IAoFkCh9I,EApF5Bk1B,EAASb,EAAAA,EAAOW,UAAUO,GA+ChC,SAAS0nH,EAAkCx/H,GACvC,IAAMrJ,EAAa,CACf8oI,gBACIz/H,EAAQs6B,QAAQE,SAAS,SAC7BklG,gBACI1/H,EAAQs6B,QAAQE,SAAS,SAC7BmlG,yBACI3/H,EAAQs6B,QAAQE,SAAS,YAOjC,OAJI7jC,EAAW+oI,kBACX/oI,EAAWs7B,WAAajyB,EAAQiyB,YAG7Bt7B,EAiCIipI,EAAAA,SAVmBr9I,EAUM,CAEpCkwB,QAAS,kBAET+iE,gBAAAA,EAAAA,EASAwnD,uBAAAA,EAAAA,EAEA6C,UAAW,CACPv2E,4BAA6B5E,EAAAA,EAC7Bo7E,UAAWC,EAAAA,EACXC,WAAYn2C,EACZ/L,oBAAqBupB,GAEzB44B,OAAQ,CACJz/F,WAAYwC,EACZh3B,WAAYyvC,EACZtgB,MAAO0sB,EACPrxB,aAAc+zC,EACdmN,kBAAmB03C,EACnB91C,QAAS+3C,GAEbtiH,OAAQ,CACJyxB,WAAYm/C,EACZ3zE,WAAY6vC,EACZ1gB,MAAOqK,GAEX06F,WAAY,CACRh/G,gBAAAA,EAAAA,GAEJi/G,UAAWvpH,EAAAA,EAAOK,OAClBuf,aAAc4zC,EAAAA,EACdhwD,UAAWrB,EAAAA,EAAWqB,UACtB5W,KAxCoC,WAwCjB,IAAdxD,EAAc7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAJ,GACX4sB,EAAAA,EAAWvV,KAAKxD,GAIXtd,OAAOy2D,kBACRz2D,OAAOy2D,gBAAkB,KAGU,IAAnCn5C,EAAQogI,yBACR3oH,EAAOnZ,KAAK,kCACZ/P,KAAK6rB,UAAUwB,WAGf5b,EAAQqgI,4BACR7sG,EAAAA,EAAqBhtB,WACjBjY,KAAK+xI,wBAAwBh8I,KAAKiK,OAK1C,IAAMgyI,EAASvgI,EAAQm+C,eAEvB,GAAIoiF,GAAU/8I,OAAOy5B,KAAKsjH,GAAQh1I,OAAS,EAAG,CAC1C,IAAMiqG,EAAY,GAElB,IAAK,IAAMl6F,KAAQilI,EACXA,EAAO57I,eAAe2W,KACtBk6F,EAAUl6F,GAAQilI,EAAOjlI,IAIjCk6F,EAAUhoG,GAAK,kBACfurB,EAAAA,EAAWkJ,QAAQ3c,KAAKyK,UAAUylF,IAGtC,GAAIjnG,KAAKkkB,QAAS,CACd,IAAM+iF,EAAY,CACdhoG,GAAI,oBACJw4B,UAAW,iBACXvT,QAASlkB,KAAKkkB,SAGlBsG,EAAAA,EAAWkJ,QAAQ3c,KAAKyK,UAAUylF,IAGtC,OAAOj1D,EAAAA,EAAI/8B,KAAKxD,IAQpBkiC,wBA9FoC,WA+FhC,OAAO3B,EAAAA,EAAI2B,2BAWfs+F,kBA1GoC,WA2GhC,OAAOjgG,EAAAA,EAAIigG,qBAGf5oH,YA9GoC,SA8GxB5Z,GACR4Y,EAAAA,EAAOgB,YAAY5Z,IAWvB0Z,gBA1HoC,SA0HpB1Z,EAAOxQ,GACnBopB,EAAAA,EAAOc,gBAAgB1Z,EAAOxQ,IASlCizI,sBApIoC,SAoIdC,GAClB9pH,EAAAA,EAAOO,mBAAmBupH,IAS9BC,yBA9IoC,SA8IXD,GACrB9pH,EAAAA,EAAOS,sBAAsBqpH,IAUjCE,oBAzJoC,SAyJhB5gI,GAChB4W,EAAAA,EAAOU,iBAAiBtX,IA4C5B2/B,kBAtMoC,WAuMqC,IAAAvJ,EAAA7nC,KAAjEyR,EAAiE7T,UAAAZ,OAAA,QAAArC,IAAAiD,UAAA,GAAAA,UAAA,GAAvD,GAAI00I,EAAmD10I,UAAAZ,OAAA,EAAAY,UAAA,QAAAjD,EAAjB43I,EAAiB30I,UAAAZ,OAAA,EAAAY,UAAA,QAAAjD,EACjE63I,GAAmB,EAkBvB,OAhByC,IAArCF,GACAn+I,OAAOyL,WAAW,WACT4yI,GACD32D,EAAAA,EAAkB42D,UACdz2D,EAAAA,2BACAhxD,EAAAA,EAAQm9B,YAvSa,KA4ShCh0D,OAAOy2D,kBACRz2D,OAAOy2D,gBAAkB,IAE7Bz2D,OAAOy2D,gBAAgB,2BACjBz2D,OAAO83D,YAAY1uC,MAElBy0B,EAAAA,EAAIkB,+BAA+BzhC,GACrCy2B,KAAK,SAAAwN,GAWF,GAVA88F,GAAmB,EAEnBr+I,OAAOy2D,gBAAgB,yBACjBz2D,OAAO83D,YAAY1uC,MAEzBiN,EAAAA,EAAW6K,cACP2K,OAAAA,EAAAA,EAAAA,CACI,UACAixG,EAAkCx/H,MAErCugC,EAAAA,EAAIvgC,QAAQka,mBACb,IADiC,IAAAitB,EAAA,SACxBrkD,GACL,IAAMq4C,EAAQ8I,EAAOnhD,GACfm+I,EAAU9lG,EAAMq5C,oBAElBr5C,EAAM+I,YAAc9I,EAAAA,IACpBriB,EAAAA,EAAW8B,gBAAgBomH,EACvB9lG,EAAMgK,cAAc7gD,KAAK62C,IAC7BA,EAAMrC,iBACF+uB,EAAAA,oBACA,WACI9uC,EAAAA,EAAWuE,eAAe2jH,OAVjCn+I,EAAI,EAAGA,EAAImhD,EAAO14C,OAAQzI,IAAKqkD,EAA/BrkD,GAiBb,IAAMo+I,EACA3gG,EAAAA,EAAIsB,oCAEV,GAAIq/F,EACA,IAASp+I,EAAI,EAAGA,EAAImhD,EAAO14C,OAAQzI,IAAK,CACtBmhD,EAAOnhD,GAEfmjF,+BACFi7D,GAIZ,OAAOj9F,IAEVlK,MAAM,SAAA57B,GAGH,GAFA4iI,GAAmB,EAEf5iI,EAAM9a,OAASmiD,EAAAA,yBACXjsB,EAAAA,EAAQod,iBAAkB,CAC9B,IAAMwqG,EAAgBnhI,EAAQiyB,YAAc,MACtCmvG,EA1V1B,SAA4BnvG,GACxB,IAAKC,EAAAA,EAAYD,GACb,OAAO,KAEX,IAAM2gB,EAAQ1gB,EAAAA,EAAYD,GAAY2gB,MAClC/X,EAAM,KACNwmG,EAAU,KAed,OAbA79I,OAAOy5B,KAAKiV,EAAAA,GAAa1iC,QAAQ,SAAA5L,GAC7B,IAAMG,EAAQmuC,EAAAA,EAAYtuC,KAErBi3C,GAAQA,EAAI+X,MAAQ7uD,EAAM6uD,OAAS7uD,EAAM6uD,MAAQA,KAClDyuF,EAAUz9I,EACVi3C,EAAM92C,KAIVs9I,IAAYpvG,IACZovG,EAAU,MAGPA,EAqU+BC,CAAmBH,GAEzC,GAAsB,OAAlBC,EAeA,OAdAphI,EAAQiyB,WAAamvG,EAErB3pH,EAAOrZ,MACH,0CACAgjI,GAEJroH,EAAAA,EAAW6K,cAAc2K,OAAAA,EAAAA,EAAAA,CACrB,UACA,CACIgzG,eAAkBJ,EAClBK,eAAkBJ,EAClBt5H,OAAQ,4BAGTsuB,EAAKuJ,kBACR3/B,OACA9W,EACA43I,GAAmBt9I,OAAOwkF,OAAO,GAAIhoE,IAK7C,GAAI8gI,GACG3iI,EAAMgjB,IAAIE,aACVljB,EAAMgjB,IAAIE,YAAYyO,OACtB3xB,EAAMgjB,IAAIE,YAAYyO,MAAMsB,WAC5BjzB,EAAMgjB,IAAIE,YAAYyO,MAAMsB,UAAUI,SAGzC,OAFAsvG,EAAgBxvG,oBAAiBpoC,EAE1BktC,EAAKuJ,kBAAkBmhG,GAItC,GAAI3iI,EAAM9a,OACEmiD,EAAAA,+BAAiD,CAIzD,IAAMgwD,EAAY,CACdhoG,GAAI,iCACJoQ,QAASO,EAAMP,SAGnBmb,EAAAA,EAAWkJ,QAAQ3c,KAAKyK,UAAUylF,IAElCz8E,EAAAA,EAAW6K,cACP2K,OAAAA,EAAAA,EAAAA,CACI,UACA,CACIzmB,OAAQ,0CAEjB,GAAI3J,EAAM9a,OAASmiD,EAAAA,UAA4B,CAElD,IAAMgwD,EAAY,CACdhoG,GAAI,2BACJ6a,OAAQlK,EAAMgjB,IAAImZ,SAGtBvhB,EAAAA,EAAWkJ,QAAQ3c,KAAKyK,UAAUylF,IAElC,IAAM7+F,EACA6oI,EAAkCx/H,GAExCrJ,EAAWmR,OAAS,mBACpBnR,EAAW2jC,QAAUn8B,EAAMgjB,IAAImZ,QAAQxuC,KAAK,KAC5CitB,EAAAA,EAAW6K,cACP2K,OAAAA,EAAAA,EAAAA,CAAwB,QAAS53B,QAClC,CAEHoiB,EAAAA,EAAWkI,uBAAuB9iB,GAElC,IAAMxH,EACA6oI,EAAkCx/H,GAExCrJ,EAAWmR,OAAS3J,EAAM9a,KAC1B01B,EAAAA,EAAW6K,cACP2K,OAAAA,EAAAA,EAAAA,CAAwB,QAAS53B,IAMzC,OAHAjU,OAAOy2D,gBAAgB,yBACjBz2D,OAAO83D,YAAY1uC,MAElB6tB,QAAQE,OAAO17B,MAYlCi6B,sBA7WoC,WAiXhC,OAHA3gB,EAAOnZ,KAAK,yFAGL/P,KAAKioC,aAAa4B,yBAY7BwF,wBA7XoC,SA6XZL,GAIpB,OAHA9lB,EAAOnZ,KAAK,2FAGL/P,KAAKioC,aAAaoH,wBAAwBL,IAUrDkkG,8BA3YoC,WA4YhC,OAAOlzI,KAAKioC,aAAairG,iCAQ7BC,uBApZoC,WAqZhC,OAAO3oH,EAAAA,EAAWkB,oBACX+lD,EAAAA,EAAoBM,yBAS/BhqC,iBA/ZoC,SA+ZnB3oC,GACb8pB,EAAOnZ,KAAK,oFAEZ/P,KAAKioC,aAAaF,iBAAiB3oC,IAWvC2yI,wBA7aoC,SA6aZ1iI,EAASowB,EAAQ2zG,EAAQC,EAAOzjI,GACpDsZ,EAAOtZ,MAAP,mBAAAvS,OACuBgS,GADvB,WAAAhS,OAEeoiC,GAFf,SAAApiC,OAGa+1I,GAHb,WAAA/1I,OAIeg2I,GACX,eAAgBzjI,GACpB4a,EAAAA,EAAWwK,kBAAkBplB,IASjC0jI,KAAM,CACFC,SAAAA,EAAAA,EACAroH,WAAAA,EAAAA,EACAF,QAAAA,EAAAA,IAxc8B,WAA9BvrB,EAAOtL,OAAOq/I,aACRv+I,OAAOwkF,OAAO,GAAItlF,OAAOq/I,YAAax/I,GACtCA,sRC5Gd,IAAIq0B,EAASttB,EAAQ,IAgDrB,SAASutB,EAAamrH,EAAYhiI,GAC9BzR,KAAKyzI,WAAaA,EAClBzzI,KAAK0zI,oBACCjiI,IAAWA,EAAQiiI,mBACfjiI,EAAQiiI,iBAClB1zI,KAAK2zI,cACCliI,GAAWA,EAAQkiI,cACfliI,EAAQkiI,cAAe,IACjC3zI,KAAK4zI,eACCniI,GAAWA,EAAQmiI,eACfniI,EAAQmiI,eAAiB,IAGnC3+I,OAAOy5B,KAAKrG,EAAOK,QAAQznB,QAC3B,SAAU4yI,GAEN7zI,KADiBqoB,EAAOK,OAAOmrH,IACZ,SAAUA,GACzB7zI,KAAK8zI,KAAKh2I,MAAMkC,KAAMpC,YACxB7H,KAAKiK,KAAM6zI,IACf99I,KAAKiK,OAMPA,KAAK+zI,oBAAsB,KAM3B/zI,KAAKowE,MAAQ,GAKbpwE,KAAKg0I,SAAW,EAMhBh0I,KAAKi0I,YAAc,GAiBvB3rH,EAAanyB,UAAUqrB,UAAY,SAAU0yH,GACzC,IACI,OAAOn9H,KAAKyK,UAAU0yH,GACxB,MAAOtkI,GACL,MAAO,iCAkBf0Y,EAAanyB,UAAUg+I,iBACrB,SAAUN,GAER,IADA,IAAInkI,EAAM,GACDnb,EAAI,EAAGoM,EAAM/C,UAAUZ,OAAQzI,EAAIoM,EAAKpM,IAAK,CAClD,IAAIiM,EAAM5C,UAAUrJ,IAEfyL,KAAK0zI,kBAAoBG,IAAaxrH,EAAOK,OAAOlf,OACnC,WAAf/J,EAAOe,KACVA,EAAMR,KAAKwhB,UAAUhhB,IAEzBkP,GAAOlP,EACHjM,GAAKoM,EAAM,IACX+O,GAAO,KAGf,OAAOA,EAAI1S,OAAS0S,EAAM,MAS9B4Y,EAAanyB,UAAU29I,KAAO,WAG1B,IAAIpkI,EAAM1P,KAAKm0I,iBAAiBr2I,MAAMkC,KAAMpC,WAC5C,GAAI8R,EAAK,CAEL,IAAI0kI,EACEp0I,KAAKowE,MAAMpzE,OAASgD,KAAKowE,MAAMpwE,KAAKowE,MAAMpzE,OAAQ,QAAKrC,GAGhC,WAAvB8E,EAAO20I,GAA2BA,EAAYlnI,KAAOknI,IAEpC1kI,EACQ,WAAvBjQ,EAAO20I,GACPA,EAAYn3B,OAAS,EAErBj9G,KAAKowE,MAAMpwE,KAAKowE,MAAMpzE,OAAO,GAAK,CAC9BkQ,KAAMwC,EACNutG,MAAO,IAIfj9G,KAAKowE,MAAMvyE,KAAK6R,GAChB1P,KAAKg0I,UAAYtkI,EAAI1S,QAIzBgD,KAAKg0I,UAAYh0I,KAAK4zI,gBACtB5zI,KAAKq0I,QAAO,GAAkB,IAQtC/rH,EAAanyB,UAAU4vB,MAAQ,WAC3B/lB,KAAKs0I,8BAQThsH,EAAanyB,UAAUm+I,2BAA6B,WAC5Ct0I,KAAK+zI,sBACL5/I,OAAOyjB,aAAa5X,KAAK+zI,qBACzB/zI,KAAK+zI,oBAAsB,MAG/B/zI,KAAK+zI,oBACC5/I,OAAOyL,WACLI,KAAKq0I,OAAOt+I,KACRiK,MAAM,GAA0B,GACpCA,KAAK2zI,gBAOjBrrH,EAAanyB,UAAUwhB,MAAQ,WAC3B3X,KAAKq0I,QACD,GACA,IAcR/rH,EAAanyB,UAAUk+I,OAAS,SAASE,EAAOC,GAExCx0I,KAAKg0I,SAAW,IAAMh0I,KAAKyzI,WAAWgB,WAAaF,KAG/Cv0I,KAAKyzI,WAAWgB,WAEZz0I,KAAKi0I,YAAYj3I,SACjBgD,KAAKi0I,YAAYhzI,QACb,SAAUyzI,GACN10I,KAAKyzI,WAAWkB,UAAUD,IAC5B3+I,KAAKiK,OAGXA,KAAKi0I,YAAc,IAGvBj0I,KAAKyzI,WAAWkB,UAAU30I,KAAKowE,QAE/BpwE,KAAKi0I,YAAYp2I,KAAKmC,KAAKowE,OAG/BpwE,KAAKowE,MAAQ,GACbpwE,KAAKg0I,SAAW,GAGhBQ,GACAx0I,KAAKs0I,8BAQbhsH,EAAanyB,UAAU64B,KAAO,WAE1BhvB,KAAKq0I,QAAO,GAA0B,IAG1CrgJ,EAAOD,QAAUu0B,iBC9RjBt0B,EAAAD,QAAA,WACA,MAAA,IAAAmK,MAAA,mDCDA,SAAA02I,GACA5gJ,EAAAD,QAAA6gJ,6CCqBE50I,MAAQ7L,OAXNF,EAAO,QAAD0G,KAAAC,EAAA,mBAAAC,EAcR,WAEF,IAAIg6I,EAAmB,kCAGnBC,EAAgB3gJ,OAAO4vB,SAAW5vB,OAAO4vB,SAAS2iE,KAAO,KACzDquD,EAAUD,GAAcA,EAAY33I,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,KAAc,KAGvF63I,EAAU1uI,SAASoU,qBAAqB,UAGxCu6H,EAA2B,eAAiBD,EAAQ,IAAM1uI,SAASiG,cAAc,WAGjF2oI,GAAc/gJ,OAAOo3E,OAAqC,mBAA5Bp3E,OAAOo3E,MAAM9qE,WAG3C00I,EAAiC,kBAAmB7uI,SAIpD,oBAAqBpI,OAASA,MAAMk3I,kBAAoBrS,EAAAA,IAC/B7kI,MAAMk3I,gBACjCl3I,MAAMk3I,gBAAkBrS,EAAAA,GAO1B,IAAIsS,GAAyB,EACzBC,GAAwB,EA+O5B,SAASC,IAIP,GAAuB,IAAnBP,EAAQh4I,OACV,OAAO,KAGT,IAAIzI,EAAGyK,EAAGgQ,EAAOmgC,EAAKikC,EAClBoiE,EAAkB,GAClBC,EAAiBF,EAAwBE,gBAAkB,EAQ/D,IAAKlhJ,EAAI,EAAGA,EAAIygJ,EAAQh4I,OAAQzI,IAC1B2gJ,GAAcD,EACZJ,EAAiB33I,KAAK83I,EAAQzgJ,GAAG6tB,aACnCozH,EAAgB33I,KAAKm3I,EAAQzgJ,IAI/BihJ,EAAgB33I,KAAKm3I,EAAQzgJ,IAQjC,GAJAyK,EAAI,IAAId,MACJm3I,IACFrmI,EAAQhQ,EAAEgQ,QAEPA,GAASsmI,EACZ,IACE,MAAMt2I,EAER,MAAOib,GAELjL,EAAQiL,EAAIjL,MAiEhB,GA7DIA,IACFmgC,EAvMJ,SAASumG,EAAsB1mI,EAAOymI,GACpC,IAAI74H,EAAS+4H,EACTxmG,EAAM,KACNymG,EAA0C,iBAAnBH,EA+B3B,OA9BAA,EAAiBG,EAAgB90I,KAAKssG,MAAMqoC,GAAkB,EACzC,iBAAVzmI,GAAsBA,IAC3B4mI,EACFh5H,EAAU5N,EAAM6N,MAAM,+GAGtBD,EAAU5N,EAAM6N,MAAM,kNAELD,EAAQ,KACvBA,EAAU5N,EAAM6N,MAAM,kHAItBD,GAAWA,EAAQ,KACjB64H,EAAiB,GACnBE,EAAiB3mI,EAAMrT,MAAMqT,EAAM1Q,QAAQse,EAAQ,IAAMA,EAAQ,GAAG5f,QACpEmyC,EAAMumG,EAAsBC,EAAiBF,EAAiB,IAG9DtmG,EAAMvyB,EAAQ,KAWbuyB,EAqKCumG,CAAsB1mI,EAAOymI,KACnCriE,EAzQJ,SAA0BjkC,EAAKqmG,GAC7B,IAAIjhJ,EACA6+E,EAAS,KAIb,GAFAoiE,EAAkBA,GAAmBR,EAElB,iBAAR7lG,GAAoBA,EAC7B,IAAK56C,EAAIihJ,EAAgBx4I,OAAQzI,KAC/B,GAAIihJ,EAAgBjhJ,GAAGw0C,MAAQoG,EAAK,CAGlCikC,EAASoiE,EAAgBjhJ,GACzB,MAIN,OAAO6+E,EAyPIyiE,CAAiB1mG,EAAKqmG,KAEhBT,GAAW5lG,IAAQ4lG,IAiB9B3hE,EA5OR,SAA6BoiE,GAC3B,IAAIjhJ,EAAGoM,EACHyyE,EAAS,KAEb,IAAK7+E,EAAI,EAAGoM,GADZ60I,EAAkBA,GAAmBR,GACHh4I,OAAQzI,EAAIoM,EAAKpM,IACjD,IAAKihJ,EAAgBjhJ,GAAGuhJ,aAAa,OAAQ,CAC3C,GAAI1iE,EAAQ,CACVA,EAAS,KACT,MAEFA,EAASoiE,EAAgBjhJ,GAG7B,OAAO6+E,EA+NQ2iE,CAAoBP,KAU9BpiE,GAK4B,IAA3BoiE,EAAgBx4I,SAClBo2E,EAASoiE,EAAgB,IAIxBpiE,GAeC+hE,IACF/hE,EAAS9sE,SAAS0vI,gBAIjB5iE,GAeC8hE,GAAcD,EAChB,IAAK1gJ,EAAIihJ,EAAgBx4I,OAAQzI,KAC/B,GAAsC,gBAAlCihJ,EAAgBjhJ,GAAG6tB,WAA8B,CACnDgxD,EAASoiE,EAAgBjhJ,GACzB,MAkCR,OA5BK6+E,IAyBHA,EAASoiE,EAAgBA,EAAgBx4I,OAAS,IAAM,MAGnDo2E,GA3YT,WACE,IACE,IAAIn5D,EAAM,IAAI/b,MAEd,MADAm3I,EAA8C,iBAAdp7H,EAAIjL,SAAwBiL,EAAIjL,MAC1DiL,EAER,MAAOg8H,GACLX,EAAmD,iBAApBW,EAAUjnI,SAAwBinI,EAAUjnI,QAP/E,GA+YAumI,EAAwBE,eAAiB,EAOrC,IAAIziE,EAA4BuiE,EAShC,OARAviE,EAAuBkjE,KAASX,EAChCviE,EAAuBmjE,IA1R3B,WAME,OAAO,MAqRLnjE,EAAuBkqC,OArL3B,WAIE,OAAO,MAuLElqC,IA9cDn4E,EAAAiD,MAAA/J,EAAAkyB,GAAAprB,KAAA7G,EAAAD,QAAA6G,kBCPV5G,EAAOD,QAJW,CACdghC,UAAW,sSCCfvuB,EAAAA,QAAQ8J,oBAAoB,QAC5B,CACIoN,YAAa,KACbqvG,YAAc,GACdC,UAAY,GACZopB,OAAS,GAOTnhI,KAAM,SAAS+1C,GAEfhrD,KAAK0d,YAAcstC,EACfhrD,KAAK+sH,YAAc,GACnB/sH,KAAKgtH,UAAc,GACnBhtH,KAAKo2I,OAAc,GAEnBprF,EAAK/yC,WAAWjY,KAAKq2I,aAAatgJ,KAAKiK,MAAOwG,EAAAA,QAAQS,GAAGO,WAAY,KAAM,MAAO,KAAM,MAExFwjD,EAAK/yC,WAAWjY,KAAKs2I,cAAcvgJ,KAAKiK,MAAOwG,EAAAA,QAAQS,GAAGQ,YAAa,KAAM,MAAO,KAAM,OAa9F8uI,YAAa,SAAS1pB,EAAUr7G,EAAM1c,EAAM0hJ,GAExC,IAAK,IAAIjiJ,EAAE,EAAGA,EAAEyL,KAAK+sH,YAAY/vH,OAAQzI,IAErC,GAAIyL,KAAK+sH,YAAYx4H,GAAGs4H,UAAYA,GAChC7sH,KAAK+sH,YAAYx4H,GAAGid,MAAQA,GAC5BxR,KAAK+sH,YAAYx4H,GAAGO,MAAQA,GAC5BkL,KAAK+sH,YAAYx4H,GAAGiiJ,MAAQA,EAE5B,OAAO,EAIf,OADAx2I,KAAK+sH,YAAYlvH,KAAK,CAACgvH,SAAUA,EAAUr7G,KAAMA,EAAM1c,KAAMA,EAAM0hJ,KAAMA,KAClE,GAUX9qF,WAAY,SAAS+qF,GAEjB,IAAK,IAAIliJ,EAAE,EAAGA,EAAEyL,KAAKgtH,UAAUhwH,OAAQzI,IAElC,GAAIyL,KAAKgtH,UAAUz4H,IAAMkiJ,EACrB,OAAO,EAGhB,OADAz2I,KAAKgtH,UAAUnvH,KAAK44I,IACb,GAUXvuD,cAAe,SAASuuD,GAEpB,IAAK,IAAIliJ,EAAE,EAAGA,EAAEyL,KAAKgtH,UAAUhwH,OAAQzI,IAElC,GAAIyL,KAAKgtH,UAAUz4H,KAAOkiJ,EAEtB,OADAz2I,KAAKgtH,UAAU1vH,OAAO/I,EAAE,IACjB,EAGhB,OAAO,GAaXmiJ,QAAS,SAAShoI,EAAK5Z,EAAM8X,EAAM+pI,GAE/B,QAAI/pI,IAAS+pI,KAEb32I,KAAKo2I,OAAOv4I,KAAK,CAAC6Q,IAAKA,EAAK5Z,KAAMA,EAAM8X,KAAMA,EAAM+pI,UAAWA,KACxD,IAUX7mI,KAAM,SAASpB,EAAK9B,EAAMy8C,EAASz5C,EAAOmI,GAEtC,IAAIjR,EAAQ,CAAC0J,MAAOhK,EAAAA,QAAQS,GAAGO,YAC3BoF,IACA9F,EAAM8F,KAAOA,GAEjB,IAAIkD,EAAOpJ,EAAAA,IAAI,CAAC9F,KAAKZ,KAAK0d,YAAYhP,IACrB6N,GAAG7N,EAAK8C,KAAK,QAAQ5c,EAAE,QAASkS,GACjD9G,KAAK0d,YAAYpF,OAAOxI,EAAMu5C,EAASz5C,EAAOmI,IAUlD6+H,MAAO,SAASloI,EAAK9B,EAAMy8C,EAASz5C,EAAOmI,GAEvC,IAAIjR,EAAQ,CAAC0J,MAAOhK,EAAAA,QAAQS,GAAGQ,aAC3BmF,IACA9F,EAAM8F,KAAOA,GAEjB,IAAIgqI,EAAQlwI,EAAAA,IAAI,CAAC9F,KAAKZ,KAAK0d,YAAYhP,IACtB6N,GAAG7N,EAAK8C,KAAK,QAAQ5c,EAAE,QAASkS,GACjD9G,KAAK0d,YAAYpF,OAAOs+H,EAAOvtF,EAASz5C,EAAOmI,IAKnD8+H,eAAgB,SAAS3+H,EAAQ4+H,GAE7B,IAAI73I,EAAQiZ,EAAO9J,aAAa,MAC5BxN,EAAOsX,EAAO9J,aAAa,QAC3B2oI,EAAWrwI,EAAAA,IAAI,CAAC8K,KAAM,SAAUvS,GAAIA,IAMxC,OAJa,OAAT2B,GACAm2I,EAASjwI,MAAM,CAACyV,GAAI3b,IAGjBm2I,EAASniJ,EAAE,QAASkiJ,IAM/BT,aAAc,SAASn+H,GAEnB,IAEI3jB,EAFAqY,EAAOsL,EAAOwC,qBAAqB,SAAS,GAAGtM,aAAa,QAC5DtH,EAAQ,CAAC0J,MAAOhK,EAAAA,QAAQS,GAAGO,YAE3BoF,IAEA9F,EAAM8F,KAAOA,GAEjB,IAAImqI,EAAW/2I,KAAK62I,eAAe3+H,EAAQpR,GAC3C,IAAKvS,EAAE,EAAGA,EAAEyL,KAAK+sH,YAAY/vH,OAAQzI,IAEjCuS,EAAQ,CAAC+lH,SAAU7sH,KAAK+sH,YAAYx4H,GAAGs4H,SAC1Br7G,KAAUxR,KAAK+sH,YAAYx4H,GAAGid,MACvCxR,KAAK+sH,YAAYx4H,GAAGO,OACpBgS,EAAMhS,KAAOkL,KAAK+sH,YAAYx4H,GAAGO,MACjCkL,KAAK+sH,YAAYx4H,GAAGiiJ,OACpB1vI,EAAM,YAAc9G,KAAK+sH,YAAYx4H,GAAGiiJ,MAC5CO,EAASniJ,EAAE,WAAYkS,GAAO4J,KAElC,IAAKnc,EAAE,EAAGA,EAAEyL,KAAKgtH,UAAUhwH,OAAQzI,IAE/BwiJ,EAASniJ,EAAE,UAAW,CAAC4kH,IAAMx5G,KAAKgtH,UAAUz4H,KAAKmc,KAGrD,OADA1Q,KAAK0d,YAAYlG,KAAKu/H,EAAS7mI,SACxB,GAKXomI,cAAe,SAASp+H,GAEpB,IAEI0+H,EAAOriJ,EAFPuiJ,EAAc,CAACtmI,MAAOhK,EAAAA,QAAQS,GAAGQ,aACjCmF,EAAOsL,EAAOwC,qBAAqB,SAAS,GAAGtM,aAAa,QAEhE,GAAIxB,GAIA,IAFAkqI,EAAYlqI,KAAOA,EACnBgqI,EAAQ,GACHriJ,EAAI,EAAGA,EAAIyL,KAAKo2I,OAAOp5I,OAAQzI,IAEhC,GAAIyL,KAAKo2I,OAAO7hJ,GAAGqY,MAAQA,EAC3B,CACIgqI,EAAQ52I,KAAKo2I,OAAO7hJ,GAAGoiJ,UAAUz+H,GACjC,YAMR0+H,EAAQ52I,KAAKo2I,OAEjB,IAAIW,EAAW/2I,KAAK62I,eAAe3+H,EAAQ4+H,GAC3C,IAAKviJ,EAAI,EAAGA,EAAIqiJ,EAAM55I,OAAQzI,IAC9B,CACI,IAAIuS,EAAQ,CAAC4H,IAAMkoI,EAAMriJ,GAAGma,KACxBkoI,EAAMriJ,GAAGO,OACTgS,EAAMhS,KAAO8hJ,EAAMriJ,GAAGO,MACtB8hJ,EAAMriJ,GAAGqY,OACT9F,EAAM8F,KAAOgqI,EAAMriJ,GAAGqY,MAC1BmqI,EAASniJ,EAAE,OAAQkS,GAAO4J,KAG9B,OADA1Q,KAAK0d,YAAYlG,KAAKu/H,EAAS7mI,SACxB,0IChOf,SAAAitF,GAAA,IAAI65C,OAA2B,IAAX75C,GAA0BA,GACjB,oBAATv6E,MAAwBA,MAChCzuB,OACR2J,EAAQmC,SAAS9J,UAAU2H,MAiB/B,SAASm5I,EAAQh4I,EAAIi4I,GACnBl3I,KAAKk2G,IAAMj3G,EACXe,KAAKm3I,SAAWD,EAflBnjJ,EAAQ6L,WAAa,WACnB,OAAO,IAAIq3I,EAAQn5I,EAAMpJ,KAAKkL,WAAYo3I,EAAOp5I,WAAYga,eAE/D7jB,EAAQy2C,YAAc,WACpB,OAAO,IAAIysG,EAAQn5I,EAAMpJ,KAAK81C,YAAawsG,EAAOp5I,WAAYkqC,gBAEhE/zC,EAAQ6jB,aACR7jB,EAAQ+zC,cAAgB,SAAS/vB,GAC3BA,GACFA,EAAQ0N,SAQZwxH,EAAQ9gJ,UAAUihJ,MAAQH,EAAQ9gJ,UAAUkhJ,IAAM,aAClDJ,EAAQ9gJ,UAAUsvB,MAAQ,WACxBzlB,KAAKm3I,SAASziJ,KAAKsiJ,EAAOh3I,KAAKk2G,MAIjCniH,EAAQujJ,OAAS,SAAS17G,EAAM27G,GAC9B3/H,aAAagkB,EAAK47G,gBAClB57G,EAAK7nB,aAAewjI,GAGtBxjJ,EAAQ0jJ,SAAW,SAAS77G,GAC1BhkB,aAAagkB,EAAK47G,gBAClB57G,EAAK7nB,cAAgB,GAGvBhgB,EAAQ2jJ,aAAe3jJ,EAAQkhF,OAAS,SAASr5C,GAC/ChkB,aAAagkB,EAAK47G,gBAElB,IAAID,EAAQ37G,EAAK7nB,aACbwjI,GAAS,IACX37G,EAAK47G,eAAiB53I,WAAW,WAC3Bg8B,EAAK+7G,YACP/7G,EAAK+7G,cACNJ,KAKPx8I,EAAQ,KAIRhH,EAAQ0uH,aAAgC,oBAAT7/F,MAAwBA,KAAK6/F,mBAClB,IAAXtlB,GAA0BA,EAAOslB,cACxCziH,MAAQA,KAAKyiH,aACrC1uH,EAAQ6jJ,eAAkC,oBAATh1H,MAAwBA,KAAKg1H,qBAClB,IAAXz6C,GAA0BA,EAAOy6C,gBACxC53I,MAAQA,KAAK43I,oDC9DtC,SAAAz6C,EAAArtB,IAAA,SAAUqtB,EAAQxiG,GACf,aAEA,IAAIwiG,EAAOslB,aAAX,CAIA,IAIIo1B,EA6HIvqI,EAZAyhH,EArBA+oB,EACAC,EAjGJC,EAAa,EACbC,EAAgB,GAChBC,GAAwB,EACxBjsI,EAAMkxF,EAAO72F,SAoJb6xI,EAAWljJ,OAAOmjJ,gBAAkBnjJ,OAAOmjJ,eAAej7C,GAC9Dg7C,EAAWA,GAAYA,EAASv4I,WAAau4I,EAAWh7C,EAGf,qBAArC,GAAG18F,SAAS/L,KAAKyoG,EAAOrtB,SApFxB+nE,EAAoB,SAASQ,GACzBvoE,EAAQe,SAAS,WAAcynE,EAAaD,OAIpD,WAGI,GAAIl7C,EAAOo7C,cAAgBp7C,EAAOq7C,cAAe,CAC7C,IAAIC,GAA4B,EAC5BC,EAAev7C,EAAOp4E,UAM1B,OALAo4E,EAAOp4E,UAAY,WACf0zH,GAA4B,GAEhCt7C,EAAOo7C,YAAY,GAAI,KACvBp7C,EAAOp4E,UAAY2zH,EACZD,GAwEJE,GAIAx7C,EAAOy7C,iBA9CV7pB,EAAU,IAAI6pB,gBACVC,MAAM9zH,UAAY,SAASmQ,GAE/BojH,EADapjH,EAAM1xB,OAIvBq0I,EAAoB,SAASQ,GACzBtpB,EAAQ+pB,MAAMP,YAAYF,KA2CvBpsI,GAAO,uBAAwBA,EAAIM,cAAc,WAtCpDe,EAAOrB,EAAIgU,gBACf43H,EAAoB,SAASQ,GAGzB,IAAIjlE,EAASnnE,EAAIM,cAAc,UAC/B6mE,EAAO9yD,mBAAqB,WACxBg4H,EAAaD,GACbjlE,EAAO9yD,mBAAqB,KAC5BhT,EAAKyrI,YAAY3lE,GACjBA,EAAS,MAEb9lE,EAAKhB,YAAY8mE,KAKrBykE,EAAoB,SAASQ,GACzBz4I,WAAW04I,EAAc,EAAGD,KAlD5BP,EAAgB,gBAAkBh3I,KAAK2U,SAAW,IAClDsiI,EAAkB,SAAS7iH,GACvBA,EAAMuK,SAAW09D,GACK,iBAAfjoE,EAAM1xB,MACyB,IAAtC0xB,EAAM1xB,KAAKlF,QAAQw5I,IACnBQ,GAAcpjH,EAAM1xB,KAAK7H,MAAMm8I,EAAc96I,UAIjDmgG,EAAO5yD,iBACP4yD,EAAO5yD,iBAAiB,UAAWwtG,GAAiB,GAEpD56C,EAAOsgB,YAAY,YAAas6B,GAGpCF,EAAoB,SAASQ,GACzBl7C,EAAOo7C,YAAYT,EAAgBO,EAAQ,OAgEnDF,EAAS11B,aA1KT,SAAsBrjH,GAEI,mBAAbA,IACTA,EAAW,IAAIa,SAAS,GAAKb,IAI/B,IADA,IAAIzB,EAAO,IAAIyC,MAAMxC,UAAUZ,OAAS,GAC/BzI,EAAI,EAAGA,EAAIoJ,EAAKX,OAAQzI,IAC7BoJ,EAAKpJ,GAAKqJ,UAAUrJ,EAAI,GAG5B,IAAIiuH,EAAO,CAAEpjH,SAAUA,EAAUzB,KAAMA,GAGvC,OAFAs6I,EAAcD,GAAcx1B,EAC5Bq1B,EAAkBG,GACXA,KA6JTG,EAASP,eAAiBA,EA1J1B,SAASA,EAAeS,UACbJ,EAAcI,GAyBzB,SAASC,EAAaD,GAGlB,GAAIH,EAGAt4I,WAAW04I,EAAc,EAAGD,OACzB,CACH,IAAI71B,EAAOy1B,EAAcI,GACzB,GAAI71B,EAAM,CACN01B,GAAwB,EACxB,KAjCZ,SAAa11B,GACT,IAAIpjH,EAAWojH,EAAKpjH,SAChBzB,EAAO6kH,EAAK7kH,KAChB,OAAQA,EAAKX,QACb,KAAK,EACDoC,IACA,MACJ,KAAK,EACDA,EAASzB,EAAK,IACd,MACJ,KAAK,EACDyB,EAASzB,EAAK,GAAIA,EAAK,IACvB,MACJ,KAAK,EACDyB,EAASzB,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAChC,MACJ,QACIyB,EAAStB,MAAMnD,EAAWgD,IAiBlB0U,CAAImwG,GADR,QAGIo1B,EAAeS,GACfH,GAAwB,MAvE3C,CAyLiB,oBAATt1H,UAAyC,IAAXu6E,EAAyBn9F,KAAOm9F,EAASv6E,8DCzLhF,SAAAu6E,GAWA,IAAI67C,EAAiBj+I,EAAQ,KAC7B/G,EAAOD,QAAUilJ,EAAe,CAAC7kJ,OAAQgpG,EAAOhpG,0DCDhD,IAAI0S,EAAQ9L,EAAQ,IAEpB/G,EAAOD,QAAU,SAASklJ,EAAc/iB,GACtC,IAAI/hI,EAAS8kJ,GAAgBA,EAAa9kJ,OAEtCsd,EAAU,CACZynI,YAAY,EACZC,aAAa,EACbC,UAAU,EACVC,YAAY,GAGd,IAAK,IAAIvjJ,KAAOogI,EACV9/H,eAAe1B,KAAKwhI,EAAMpgI,KAC5B2b,EAAQ3b,GAAOogI,EAAKpgI,IAKxB,IAAIwjJ,EAAUzyI,EAAM2I,IAChB+pI,EAAiB1yI,EAAM+qD,cAAcz9D,GAGrCqlJ,EAAU,CACZD,eAAgBA,EAChB9nF,eAAgB5qD,EAAM4qD,eACtBN,WAAYtqD,EAAMsqD,WAClBE,gBAAiBxqD,EAAMwqD,iBAUrBooF,EAAa1+I,EAAQ,MAA2B,KAChD2+I,EAAW3+I,EAAQ,MAAuB,KAC1C4+I,EAAc5+I,EAAQ,MAA6B,KACnD6+I,EAAa7+I,EAAQ,MAA2B,KAChD8+I,EAAa9+I,EAAQ,MAAoB,KAG7C,OAAQw+I,EAAevuH,SACrB,IAAK,SACH,IAAKyuH,IAAeA,EAAWK,qBAC1BroI,EAAQynI,WAEX,OADAI,EAAQ,wDACDE,EAETF,EAAQ,+BAERE,EAAQO,YAAcN,EACtBI,EAAW7nF,oBAAoB79D,GAE/BslJ,EAAWO,iBAAiB7lJ,GAC5BslJ,EAAWQ,gBAAgB9lJ,GAC3BslJ,EAAWS,iBAAiB/lJ,GAC5BslJ,EAAWK,mBAAmB3lJ,GAC9BslJ,EAAWU,YAAYhmJ,GACvBslJ,EAAWW,wBAAwBjmJ,GACnCslJ,EAAWY,uBAAuBlmJ,GAElC0lJ,EAAWS,oBAAoBnmJ,GAC/B,MACF,IAAK,UACH,IAAKwlJ,IAAgBA,EAAYG,qBAC5BroI,EAAQ0nI,YAEX,OADAG,EAAQ,yDACDE,EAETF,EAAQ,gCAERE,EAAQO,YAAcJ,EACtBE,EAAW7nF,oBAAoB79D,GAE/BwlJ,EAAYK,iBAAiB7lJ,GAC7BwlJ,EAAYO,iBAAiB/lJ,GAC7BwlJ,EAAYG,mBAAmB3lJ,GAC/BwlJ,EAAYQ,YAAYhmJ,GAExB0lJ,EAAWS,oBAAoBnmJ,GAC/B,MACF,IAAK,OACH,IAAKulJ,IAAaA,EAASI,qBAAuBroI,EAAQ2nI,SAExD,OADAE,EAAQ,yDACDE,EAETF,EAAQ,6BAERE,EAAQO,YAAcL,EACtBG,EAAW7nF,oBAAoB79D,GAE/BulJ,EAASM,iBAAiB7lJ,GAC1BulJ,EAASI,mBAAmB3lJ,GAC5BulJ,EAASa,iBAAiBpmJ,GAG1B,MACF,IAAK,SACH,IAAKylJ,IAAenoI,EAAQ4nI,WAE1B,OADAC,EAAQ,wDACDE,EAETF,EAAQ,+BAERE,EAAQO,YAAcH,EACtBC,EAAW7nF,oBAAoB79D,GAE/BylJ,EAAWY,qBAAqBrmJ,GAChCylJ,EAAWa,iBAAiBtmJ,GAC5BylJ,EAAWc,oBAAoBvmJ,GAC/BylJ,EAAWe,qBAAqBxmJ,GAChCylJ,EAAWgB,0BAA0BzmJ,GACrCylJ,EAAWI,iBAAiB7lJ,GAC5BylJ,EAAWiB,sBAAsB1mJ,GAEjC0lJ,EAAWS,oBAAoBnmJ,GAC/B,MACF,QACEmlJ,EAAQ,wBAIZ,OAAOE,sQC9HT,IAAI3yI,EAAQ9L,EAAQ,IAChBu+I,EAAUzyI,EAAM2I,IAEhBiqI,EAAa,CACfQ,gBAAiB,SAAS9lJ,GACxBA,EAAOo1C,YAAcp1C,EAAOo1C,aAAep1C,EAAO2mJ,mBAGpDX,YAAa,SAAShmJ,GACpB,GAAsB,WAAlBsL,EAAOtL,IAAuBA,EAAOm0C,qBAAuB,YAC5Dn0C,EAAOm0C,kBAAkBnyC,WAAY,CACvClB,OAAOC,eAAef,EAAOm0C,kBAAkBnyC,UAAW,UAAW,CACnEf,IAAK,WACH,OAAO4K,KAAK+6I,UAEd3uH,IAAK,SAASttB,GACRkB,KAAK+6I,UACP/6I,KAAK6/C,oBAAoB,QAAS7/C,KAAK+6I,UAEzC/6I,KAAKuqC,iBAAiB,QAASvqC,KAAK+6I,SAAWj8I,MAGnD,IAAIk8I,EACA7mJ,EAAOm0C,kBAAkBnyC,UAAU2vE,qBACvC3xE,EAAOm0C,kBAAkBnyC,UAAU2vE,qBAAuB,WACxD,IAAItf,EAAKxmD,KAyCT,OAxCKwmD,EAAGy0F,eACNz0F,EAAGy0F,aAAe,SAASj8I,GAGzBA,EAAEutB,OAAOge,iBAAiB,WAAY,SAAS2wG,GAC7C,IAAIC,EAEFA,EADEhnJ,EAAOm0C,kBAAkBnyC,UAAUilJ,aAC1B50F,EAAG40F,eAAexhH,KAAK,SAASvkC,GACzC,OAAOA,EAAEu3C,OAASv3C,EAAEu3C,MAAM3tC,KAAOi8I,EAAGtuG,MAAM3tC,KAGjC,CAAC2tC,MAAOsuG,EAAGtuG,OAGxB,IAAI1X,EAAQ,IAAImmH,MAAM,SACtBnmH,EAAM0X,MAAQsuG,EAAGtuG,MACjB1X,EAAMimH,SAAWA,EACjBjmH,EAAM+tD,YAAc,CAACk4D,SAAUA,GAC/BjmH,EAAMiX,QAAU,CAACntC,EAAEutB,QACnBi6B,EAAG80F,cAAcpmH,KAEnBl2B,EAAEutB,OAAOiiB,YAAYvtC,QAAQ,SAAS2rC,GACpC,IAAIuuG,EAEFA,EADEhnJ,EAAOm0C,kBAAkBnyC,UAAUilJ,aAC1B50F,EAAG40F,eAAexhH,KAAK,SAASvkC,GACzC,OAAOA,EAAEu3C,OAASv3C,EAAEu3C,MAAM3tC,KAAO2tC,EAAM3tC,KAG9B,CAAC2tC,MAAOA,GAErB,IAAI1X,EAAQ,IAAImmH,MAAM,SACtBnmH,EAAM0X,MAAQA,EACd1X,EAAMimH,SAAWA,EACjBjmH,EAAM+tD,YAAc,CAACk4D,SAAUA,GAC/BjmH,EAAMiX,QAAU,CAACntC,EAAEutB,QACnBi6B,EAAG80F,cAAcpmH,MAGrBsxB,EAAGjc,iBAAiB,YAAaic,EAAGy0F,eAE/BD,EAAyBl9I,MAAM0oD,EAAI5oD,cAKhDy8I,uBAAwB,SAASlmJ,GAE/B,GAAsB,WAAlBsL,EAAOtL,IAAuBA,EAAOm0C,qBACnC,eAAgBn0C,EAAOm0C,kBAAkBnyC,YAC3C,qBAAsBhC,EAAOm0C,kBAAkBnyC,UAAW,CAC5D,IAAIolJ,EAAqB,SAAS/0F,EAAI5Z,GACpC,MAAO,CACLA,MAAOA,EACP4uG,WAQE,YAPmB7gJ,IAAfqF,KAAKy7I,QACY,UAAf7uG,EAAMpG,KACRxmC,KAAKy7I,MAAQj1F,EAAG4mE,iBAAiBxgF,GAEjC5sC,KAAKy7I,MAAQ,MAGVz7I,KAAKy7I,OAEdC,IAAKl1F,IAKT,IAAKryD,EAAOm0C,kBAAkBnyC,UAAU4/H,WAAY,CAClD5hI,EAAOm0C,kBAAkBnyC,UAAU4/H,WAAa,WAE9C,OADA/1H,KAAK27I,SAAW37I,KAAK27I,UAAY,GAC1B37I,KAAK27I,SAAShgJ,SAEvB,IAAIigJ,EAAeznJ,EAAOm0C,kBAAkBnyC,UAAUq2C,SACtDr4C,EAAOm0C,kBAAkBnyC,UAAUq2C,SAAW,SAASI,EAAOrgB,GAC5D,IACIypG,EAAS4lB,EAAa99I,MADjBkC,KAC2BpC,WAKpC,OAJKo4H,IACHA,EAASulB,EAHFv7I,KAGyB4sC,GAHzB5sC,KAIJ27I,SAAS99I,KAAKm4H,IAEZA,GAGT,IAAI6lB,EAAkB1nJ,EAAOm0C,kBAAkBnyC,UAAUuiF,YACzDvkF,EAAOm0C,kBAAkBnyC,UAAUuiF,YAAc,SAASs9C,GAExD6lB,EAAgB/9I,MADPkC,KACiBpC,WAC1B,IAAIo7C,EAFKh5C,KAEI27I,SAASr9I,QAAQ03H,IACjB,IAATh9E,GAHKh5C,KAIJ27I,SAASr+I,OAAO07C,EAAK,IAI9B,IAAI8iG,EAAgB3nJ,EAAOm0C,kBAAkBnyC,UAAUo/H,UACvDphI,EAAOm0C,kBAAkBnyC,UAAUo/H,UAAY,SAAShpG,GACtD,IAAIi6B,EAAKxmD,KACTwmD,EAAGm1F,SAAWn1F,EAAGm1F,UAAY,GAC7BG,EAAch+I,MAAM0oD,EAAI,CAACj6B,IACzBA,EAAOiiB,YAAYvtC,QAAQ,SAAS2rC,GAClC4Z,EAAGm1F,SAAS99I,KAAK09I,EAAmB/0F,EAAI5Z,OAI5C,IAAImvG,EAAmB5nJ,EAAOm0C,kBAAkBnyC,UAAUw/H,aAC1DxhI,EAAOm0C,kBAAkBnyC,UAAUw/H,aAAe,SAASppG,GACzD,IAAIi6B,EAAKxmD,KACTwmD,EAAGm1F,SAAWn1F,EAAGm1F,UAAY,GAC7BI,EAAiBj+I,MAAM0oD,EAAI,CAACj6B,IAE5BA,EAAOiiB,YAAYvtC,QAAQ,SAAS2rC,GAClC,IAAIopF,EAASxvE,EAAGm1F,SAAS/hH,KAAK,SAAStjC,GACrC,OAAOA,EAAEs2C,QAAUA,IAEjBopF,GACFxvE,EAAGm1F,SAASr+I,OAAOkpD,EAAGm1F,SAASr9I,QAAQ03H,GAAS,WAIjD,GAAsB,WAAlBv2H,EAAOtL,IAAuBA,EAAOm0C,mBACrC,eAAgBn0C,EAAOm0C,kBAAkBnyC,WACzC,qBAAsBhC,EAAOm0C,kBAAkBnyC,WAC/ChC,EAAO6nJ,gBACL,SAAU7nJ,EAAO6nJ,aAAa7lJ,WAAY,CACrD,IAAI8lJ,EAAiB9nJ,EAAOm0C,kBAAkBnyC,UAAU4/H,WACxD5hI,EAAOm0C,kBAAkBnyC,UAAU4/H,WAAa,WAC9C,IAAIvvE,EAAKxmD,KACL66C,EAAUohG,EAAen+I,MAAM0oD,EAAI,IAIvC,OAHA3L,EAAQ55C,QAAQ,SAAS+0H,GACvBA,EAAO0lB,IAAMl1F,IAER3L,GAGT5lD,OAAOC,eAAef,EAAO6nJ,aAAa7lJ,UAAW,OAAQ,CAC3Df,IAAK,WAQH,YAPmBuF,IAAfqF,KAAKy7I,QACiB,UAApBz7I,KAAK4sC,MAAMpG,KACbxmC,KAAKy7I,MAAQz7I,KAAK07I,IAAItuB,iBAAiBptH,KAAK4sC,OAE5C5sC,KAAKy7I,MAAQ,MAGVz7I,KAAKy7I,WAMpBvB,iBAAkB,SAAS/lJ,GACzB,IAAI+0C,EAAM/0C,GAAUA,EAAO+0C,IAEL,WAAlBzpC,EAAOtL,MACLA,EAAO+nJ,kBACP,cAAe/nJ,EAAO+nJ,iBAAiB/lJ,WAEzClB,OAAOC,eAAef,EAAO+nJ,iBAAiB/lJ,UAAW,YAAa,CACpEf,IAAK,WACH,OAAO4K,KAAKm8I,YAEd/vH,IAAK,SAASG,GACZ,IAAI3J,EAAO5iB,KAEXA,KAAKm8I,WAAa5vH,EACdvsB,KAAK+oC,KACPG,EAAIkG,gBAAgBpvC,KAAK+oC,KAGtBxc,GAILvsB,KAAK+oC,IAAMG,EAAIC,gBAAgB5c,GAG/BA,EAAOge,iBAAiB,WAAY,WAC9B3nB,EAAKmmB,KACPG,EAAIkG,gBAAgBxsB,EAAKmmB,KAE3BnmB,EAAKmmB,IAAMG,EAAIC,gBAAgB5c,KAEjCA,EAAOge,iBAAiB,cAAe,WACjC3nB,EAAKmmB,KACPG,EAAIkG,gBAAgBxsB,EAAKmmB,KAE3BnmB,EAAKmmB,IAAMG,EAAIC,gBAAgB5c,MAhB/BvsB,KAAK+oC,IAAM,QAwBvBqxG,wBAAyB,SAASjmJ,GAChC,IAAIolJ,EAAiB1yI,EAAM+qD,cAAcz9D,GAEzC,KAAIA,EAAOm0C,kBAAkBnyC,UAAUq2C,UACnC+sG,EAAer1H,SAAW,IAD9B,CAOA,IAAIk4H,EAAsBjoJ,EAAOm0C,kBAAkBnyC,UAC9CkmJ,gBACLloJ,EAAOm0C,kBAAkBnyC,UAAUkmJ,gBAAkB,WACnD,IAAIz5H,EAAO5iB,KACPs8I,EAAgBF,EAAoBt+I,MAAMkC,MAE9C,OADA4iB,EAAK25H,gBAAkB35H,EAAK25H,iBAAmB,GACxCD,EAAcx/I,IAAI,SAASyvB,GAChC,OAAO3J,EAAK25H,gBAAgBhwH,EAAOttB,OAIvC,IAAI68I,EAAgB3nJ,EAAOm0C,kBAAkBnyC,UAAUo/H,UACvDphI,EAAOm0C,kBAAkBnyC,UAAUo/H,UAAY,SAAShpG,GACtD,IAAIi6B,EAAKxmD,KAeT,GAdAwmD,EAAGg2F,SAAWh2F,EAAGg2F,UAAY,GAC7Bh2F,EAAG+1F,gBAAkB/1F,EAAG+1F,iBAAmB,GAE3ChwH,EAAOiiB,YAAYvtC,QAAQ,SAAS2rC,GAIlC,GAHoB4Z,EAAGuvE,aAAan8F,KAAK,SAAStjC,GAChD,OAAOA,EAAEs2C,QAAUA,IAGnB,MAAM,IAAI6vG,aAAa,wBACnB,yBAKHj2F,EAAG+1F,gBAAgBhwH,EAAOttB,IAAK,CAClC,IAAIy9I,EAAY,IAAIvoJ,EAAOo1C,YAAYhd,EAAOiiB,aAC9CgY,EAAGg2F,SAASjwH,EAAOttB,IAAMy9I,EACzBl2F,EAAG+1F,gBAAgBG,EAAUz9I,IAAMstB,EACnCA,EAASmwH,EAEXZ,EAAch+I,MAAM0oD,EAAI,CAACj6B,KAG3B,IAAIwvH,EAAmB5nJ,EAAOm0C,kBAAkBnyC,UAAUw/H,aAC1DxhI,EAAOm0C,kBAAkBnyC,UAAUw/H,aAAe,SAASppG,GACzD,IAAIi6B,EAAKxmD,KACTwmD,EAAGg2F,SAAWh2F,EAAGg2F,UAAY,GAC7Bh2F,EAAG+1F,gBAAkB/1F,EAAG+1F,iBAAmB,GAE3CR,EAAiBj+I,MAAM0oD,EAAI,CAAEA,EAAGg2F,SAASjwH,EAAOttB,KAAOstB,WAChDi6B,EAAG+1F,gBAAiB/1F,EAAGg2F,SAASjwH,EAAOttB,IAC1CunD,EAAGg2F,SAASjwH,EAAOttB,IAAIA,GAAKstB,EAAOttB,WAChCunD,EAAGg2F,SAASjwH,EAAOttB,KAG5B9K,EAAOm0C,kBAAkBnyC,UAAUq2C,SAAW,SAASI,EAAOrgB,GAC5D,IAAIi6B,EAAKxmD,KACT,GAA0B,WAAtBwmD,EAAGwY,eACL,MAAM,IAAIy9E,aACR,sDACA,qBAEJ,IAAItwG,EAAU,GAAGxwC,MAAMjH,KAAKkJ,UAAW,GACvC,GAAuB,IAAnBuuC,EAAQnvC,SACPmvC,EAAQ,GAAGqC,YAAY5U,KAAK,SAASnkC,GACpC,OAAOA,IAAMm3C,IAIjB,MAAM,IAAI6vG,aACR,gHAEA,qBAMJ,GAHoBj2F,EAAGuvE,aAAan8F,KAAK,SAAStjC,GAChD,OAAOA,EAAEs2C,QAAUA,IAGnB,MAAM,IAAI6vG,aAAa,wBACnB,sBAGNj2F,EAAGg2F,SAAWh2F,EAAGg2F,UAAY,GAC7Bh2F,EAAG+1F,gBAAkB/1F,EAAG+1F,iBAAmB,GAC3C,IAAII,EAAYn2F,EAAGg2F,SAASjwH,EAAOttB,IACnC,GAAI09I,EAKFA,EAAUnwG,SAASI,GAGnBxB,QAAQC,UAAUnD,KAAK,WACrBse,EAAG80F,cAAc,IAAID,MAAM,4BAExB,CACL,IAAIqB,EAAY,IAAIvoJ,EAAOo1C,YAAY,CAACqD,IACxC4Z,EAAGg2F,SAASjwH,EAAOttB,IAAMy9I,EACzBl2F,EAAG+1F,gBAAgBG,EAAUz9I,IAAMstB,EACnCi6B,EAAG+uE,UAAUmnB,GAEf,OAAOl2F,EAAGuvE,aAAan8F,KAAK,SAAStjC,GACnC,OAAOA,EAAEs2C,QAAUA,KAgCvB,CAAC,cAAe,gBAAgB3rC,QAAQ,SAASmqG,GAC/C,IAAIwxC,EAAezoJ,EAAOm0C,kBAAkBnyC,UAAUi1G,GACtDj3G,EAAOm0C,kBAAkBnyC,UAAUi1G,GAAU,WAC3C,IAAI5kD,EAAKxmD,KACLrC,EAAOC,UAGX,OAFmBA,UAAUZ,QACD,mBAAjBY,UAAU,GAEZg/I,EAAa9+I,MAAM0oD,EAAI,CAC5B,SAASo6B,GACP,IAAI1oD,EAAO2kH,EAAwBr2F,EAAIo6B,GACvCjjF,EAAK,GAAGG,MAAM,KAAM,CAACo6B,KAEvB,SAASje,GACHtc,EAAK,IACPA,EAAK,GAAGG,MAAM,KAAMmc,IAErBrc,UAAU,KAGVg/I,EAAa9+I,MAAM0oD,EAAI5oD,WAC7BsqC,KAAK,SAAS04C,GACb,OAAOi8D,EAAwBr2F,EAAIo6B,QAKzC,IAAIk8D,EACA3oJ,EAAOm0C,kBAAkBnyC,UAAU+rE,oBACvC/tE,EAAOm0C,kBAAkBnyC,UAAU+rE,oBAAsB,WAEvD,OAAKtkE,UAAUZ,QAAWY,UAAU,GAAG4T,MAGvC5T,UAAU,GA/CZ,SAAiC4oD,EAAIo6B,GACnC,IAAIjmD,EAAMimD,EAAYjmD,IAOtB,OANA1lC,OAAOy5B,KAAK83B,EAAG+1F,iBAAmB,IAAIt7I,QAAQ,SAAS87I,GACrD,IAAIC,EAAiBx2F,EAAG+1F,gBAAgBQ,GACpCE,EAAiBz2F,EAAGg2F,SAASQ,EAAe/9I,IAChD07B,EAAMA,EAAIx9B,QAAQ,IAAIwnF,OAAOq4D,EAAe/9I,GAAI,KAC5Cg+I,EAAeh+I,MAEd,IAAIymE,sBAAsB,CAC/Bl0D,KAAMovE,EAAYpvE,KAClBmpB,IAAKA,IAqCQuiH,CAJNl9I,KAIkCpC,UAAU,IAC9Ck/I,EAAwBh/I,MALtBkC,KAKgCpC,YAHhCk/I,EAAwBh/I,MAFxBkC,KAEkCpC,YAQ7C,IAAIu/I,EAAuBloJ,OAAOmoJ,yBAC9BjpJ,EAAOm0C,kBAAkBnyC,UAAW,oBACxClB,OAAOC,eAAef,EAAOm0C,kBAAkBnyC,UAC3C,mBAAoB,CAClBf,IAAK,WACH,IACIwrF,EAAcu8D,EAAqB/nJ,IAAI0I,MAAMkC,MACjD,MAAyB,KAArB4gF,EAAYpvE,KACPovE,EAEFi8D,EALE78I,KAK0B4gF,MAI3CzsF,EAAOm0C,kBAAkBnyC,UAAUuiF,YAAc,SAASs9C,GACxD,IAoBIzpG,EApBAi6B,EAAKxmD,KACT,GAA0B,WAAtBwmD,EAAGwY,eACL,MAAM,IAAIy9E,aACR,sDACA,qBAIJ,IAAKzmB,EAAO0lB,IACV,MAAM,IAAIe,aAAa,yFAC2B,aAGpD,KADczmB,EAAO0lB,MAAQl1F,GAE3B,MAAM,IAAIi2F,aAAa,6CACnB,sBAINj2F,EAAGg2F,SAAWh2F,EAAGg2F,UAAY,GAE7BvnJ,OAAOy5B,KAAK83B,EAAGg2F,UAAUv7I,QAAQ,SAASu6E,GACzBh1B,EAAGg2F,SAAShhE,GAAUhtC,YAAY5U,KAAK,SAASgT,GAC7D,OAAOopF,EAAOppF,QAAUA,MAGxBrgB,EAASi6B,EAAGg2F,SAAShhE,MAIrBjvD,IACgC,IAA9BA,EAAOiiB,YAAYxxC,OAGrBwpD,EAAGmvE,aAAanvE,EAAG+1F,gBAAgBhwH,EAAOttB,KAG1CstB,EAAOmsD,YAAYs9C,EAAOppF,OAE5B4Z,EAAG80F,cAAc,IAAID,MAAM,wBAxH/B,SAASwB,EAAwBr2F,EAAIo6B,GACnC,IAAIjmD,EAAMimD,EAAYjmD,IAOtB,OANA1lC,OAAOy5B,KAAK83B,EAAG+1F,iBAAmB,IAAIt7I,QAAQ,SAAS87I,GACrD,IAAIC,EAAiBx2F,EAAG+1F,gBAAgBQ,GACpCE,EAAiBz2F,EAAGg2F,SAASQ,EAAe/9I,IAChD07B,EAAMA,EAAIx9B,QAAQ,IAAIwnF,OAAOs4D,EAAeh+I,GAAI,KAC5C+9I,EAAe/9I,MAEd,IAAIymE,sBAAsB,CAC/Bl0D,KAAMovE,EAAYpvE,KAClBmpB,IAAKA,MAmHXm/G,mBAAoB,SAAS3lJ,GAC3B,IAAIolJ,EAAiB1yI,EAAM+qD,cAAcz9D,GAGzC,GAAKA,EAAOm0C,kBAsBL,CAEL,IAAI+0G,EAAqBlpJ,EAAOm0C,kBAChCn0C,EAAOm0C,kBAAoB,SAASg1G,EAAU7yG,GAC5C,GAAI6yG,GAAYA,EAASpuF,WAAY,CAEnC,IADA,IAAIquF,EAAgB,GACXhpJ,EAAI,EAAGA,EAAI+oJ,EAASpuF,WAAWlyD,OAAQzI,IAAK,CACnD,IAAIy0D,EAASs0F,EAASpuF,WAAW36D,IAC5By0D,EAAO5yD,eAAe,SACvB4yD,EAAO5yD,eAAe,QACxByQ,EAAMyqD,WAAW,mBAAoB,sBACrCtI,EAASjyC,KAAKuK,MAAMvK,KAAKyK,UAAUwnC,KAC5BuB,KAAOvB,EAAO7Z,IACrBouG,EAAc1/I,KAAKmrD,IAEnBu0F,EAAc1/I,KAAKy/I,EAASpuF,WAAW36D,IAG3C+oJ,EAASpuF,WAAaquF,EAExB,OAAO,IAAIF,EAAmBC,EAAU7yG,IAE1Ct2C,EAAOm0C,kBAAkBnyC,UAAYknJ,EAAmBlnJ,UAExDlB,OAAOC,eAAef,EAAOm0C,kBAAmB,sBAAuB,CACrElzC,IAAK,WACH,OAAOioJ,EAAmBG,4BA/C9BrpJ,EAAOm0C,kBAAoB,SAASg1G,EAAU7yG,GAS5C,OALA6uG,EAAQ,kBACJgE,GAAYA,EAASjuF,qBACvBiuF,EAASG,cAAgBH,EAASjuF,oBAG7B,IAAIl7D,EAAO49D,wBAAwBurF,EAAU7yG,IAEtDt2C,EAAOm0C,kBAAkBnyC,UACrBhC,EAAO49D,wBAAwB57D,UAE/BhC,EAAO49D,wBAAwByrF,qBACjCvoJ,OAAOC,eAAef,EAAOm0C,kBAAmB,sBAAuB,CACrElzC,IAAK,WACH,OAAOjB,EAAO49D,wBAAwByrF,uBAmC9C,IAAIE,EAAevpJ,EAAOm0C,kBAAkBnyC,UAAU+kG,SACtD/mG,EAAOm0C,kBAAkBnyC,UAAU+kG,SAAW,SAASyiD,EACnD5jE,EAAiBlmB,GACnB,IAAIjxC,EAAO5iB,KACPrC,EAAOC,UAIX,GAAIA,UAAUZ,OAAS,GAAyB,mBAAb2gJ,EACjC,OAAOD,EAAa5/I,MAAMkC,KAAMpC,WAKlC,GAA4B,IAAxB8/I,EAAa1gJ,SAAsC,IAArBY,UAAUZ,QAChB,mBAAjBY,UAAU,IACnB,OAAO8/I,EAAa5/I,MAAMkC,KAAM,IAGlC,IAAI49I,EAAkB,SAASzhI,GAC7B,IAAI0hI,EAAiB,GAiBrB,OAhBc1hI,EAASlM,SACfhP,QAAQ,SAASolD,GACvB,IAAIy3F,EAAgB,CAClB7+I,GAAIonD,EAAOpnD,GACXk0G,UAAW9sD,EAAO8sD,UAClB3hG,KAAM,CACJusI,eAAgB,kBAChBC,gBAAiB,oBACjB33F,EAAO70C,OAAS60C,EAAO70C,MAE3B60C,EAAO69B,QAAQjjF,QAAQ,SAASnM,GAC9BgpJ,EAAchpJ,GAAQuxD,EAAO4qD,KAAKn8G,KAEpC+oJ,EAAeC,EAAc7+I,IAAM6+I,IAG9BD,GAILI,EAAe,SAAShqH,GAC1B,OAAO,IAAItJ,IAAI11B,OAAOy5B,KAAKuF,GAAOn3B,IAAI,SAAShH,GAC7C,MAAO,CAACA,EAAKm+B,EAAMn+B,QAIvB,GAAI8H,UAAUZ,QAAU,EAAG,CAKzB,OAAO0gJ,EAAa5/I,MAAMkC,KAAM,CAJF,SAASmc,GACrCxe,EAAK,GAAGsgJ,EAAaL,EAAgBzhI,MAIrCve,UAAU,KAId,OAAO,IAAIwtC,QAAQ,SAASC,EAASC,GACnCoyG,EAAa5/I,MAAM8kB,EAAM,CACvB,SAASzG,GACPkvB,EAAQ4yG,EAAaL,EAAgBzhI,MACpCmvB,MACJpD,KAAK6xC,EAAiBlmB,IAIvB0lF,EAAer1H,QAAU,IAC3B,CAAC,sBAAuB,uBAAwB,mBAC3CjjB,QAAQ,SAASmqG,GAChB,IAAIwxC,EAAezoJ,EAAOm0C,kBAAkBnyC,UAAUi1G,GACtDj3G,EAAOm0C,kBAAkBnyC,UAAUi1G,GAAU,WAC3C,IAAIztG,EAAOC,UACPglB,EAAO5iB,KACP6vC,EAAU,IAAIzE,QAAQ,SAASC,EAASC,GAC1CsxG,EAAa9+I,MAAM8kB,EAAM,CAACjlB,EAAK,GAAI0tC,EAASC,MAE9C,OAAI3tC,EAAKX,OAAS,EACT6yC,EAEFA,EAAQ3H,KAAK,WAClBvqC,EAAK,GAAGG,MAAM,KAAM,KAEtB,SAASmc,GACHtc,EAAKX,QAAU,GACjBW,EAAK,GAAGG,MAAM,KAAM,CAACmc,SAS/Bs/H,EAAer1H,QAAU,IAC3B,CAAC,cAAe,gBAAgBjjB,QAAQ,SAASmqG,GAC/C,IAAIwxC,EAAezoJ,EAAOm0C,kBAAkBnyC,UAAUi1G,GACtDj3G,EAAOm0C,kBAAkBnyC,UAAUi1G,GAAU,WAC3C,IAAIxoF,EAAO5iB,KACX,GAAIpC,UAAUZ,OAAS,GAA2B,IAArBY,UAAUZ,QACX,WAAxByC,EAAO7B,UAAU,IAAkB,CACrC,IAAIs4H,EAA4B,IAArBt4H,UAAUZ,OAAeY,UAAU,QAAKjD,EACnD,OAAO,IAAIywC,QAAQ,SAASC,EAASC,GACnCsxG,EAAa9+I,MAAM8kB,EAAM,CAACyoB,EAASC,EAAQ4qF,MAG/C,OAAO0mB,EAAa9+I,MAAMkC,KAAMpC,cAMtC,CAAC,sBAAuB,uBAAwB,mBAC3CqD,QAAQ,SAASmqG,GAChB,IAAIwxC,EAAezoJ,EAAOm0C,kBAAkBnyC,UAAUi1G,GACtDj3G,EAAOm0C,kBAAkBnyC,UAAUi1G,GAAU,WAI3C,OAHAxtG,UAAU,GAAK,IAAiB,oBAAXwtG,EACjBj3G,EAAO6sE,gBACP7sE,EAAOuxE,uBAAuB9nE,UAAU,IACrCg/I,EAAa9+I,MAAMkC,KAAMpC,cAKxC,IAAIsgJ,EACA/pJ,EAAOm0C,kBAAkBnyC,UAAU+qE,gBACvC/sE,EAAOm0C,kBAAkBnyC,UAAU+qE,gBAAkB,WACnD,OAAKtjE,UAAU,GAMRsgJ,EAAsBpgJ,MAAMkC,KAAMpC,YALnCA,UAAU,IACZA,UAAU,GAAGE,MAAM,MAEdstC,QAAQC,cASvBr3C,EAAOD,QAAU,CACfkmJ,gBAAiBR,EAAWQ,gBAC5BE,YAAaV,EAAWU,YACxBC,wBAAyBX,EAAWW,wBACpCC,uBAAwBZ,EAAWY,uBACnCH,iBAAkBT,EAAWS,iBAC7BJ,mBAAoBL,EAAWK,mBAC/BE,iBAAkBj/I,EAAQ,yQCtpB5B,IAAI8L,EAAQ9L,EAAQ,IAChBu+I,EAAUzyI,EAAM2I,IAGpBxb,EAAOD,QAAU,SAASI,GACxB,IAAIolJ,EAAiB1yI,EAAM+qD,cAAcz9D,GACrC6zC,EAAY7zC,GAAUA,EAAO6zC,UAE7Bm2G,EAAuB,SAASvpJ,GAClC,GAAiB,WAAb6K,EAAO7K,IAAkBA,EAAEiuC,WAAajuC,EAAEkuC,SAC5C,OAAOluC,EAET,IAAIwpJ,EAAK,GA4CT,OA3CAnpJ,OAAOy5B,KAAK95B,GAAGqM,QAAQ,SAASnL,GAC9B,GAAY,YAARA,GAA6B,aAARA,GAA8B,gBAARA,EAA/C,CAGA,IAAIT,EAAuB,WAAlBoK,EAAO7K,EAAEkB,IAAqBlB,EAAEkB,GAAO,CAAC4rC,MAAO9sC,EAAEkB,SAC1C6E,IAAZtF,EAAEi5C,OAA0C,iBAAZj5C,EAAEi5C,QACpCj5C,EAAEsuB,IAAMtuB,EAAEssC,IAAMtsC,EAAEi5C,OAEpB,IAAI+vG,EAAW,SAASjgJ,EAAQtJ,GAC9B,OAAIsJ,EACKA,EAAStJ,EAAKsI,OAAO,GAAGshF,cAAgB5pF,EAAK6G,MAAM,GAE3C,aAAT7G,EAAuB,WAAaA,GAE9C,QAAgB6F,IAAZtF,EAAEqsC,MAAqB,CACzB08G,EAAGt7G,SAAWs7G,EAAGt7G,UAAY,GAC7B,IAAIw7G,EAAK,GACc,iBAAZjpJ,EAAEqsC,OACX48G,EAAGD,EAAS,MAAOvoJ,IAAQT,EAAEqsC,MAC7B08G,EAAGt7G,SAASjlC,KAAKygJ,IACjBA,EAAK,IACFD,EAAS,MAAOvoJ,IAAQT,EAAEqsC,MAC7B08G,EAAGt7G,SAASjlC,KAAKygJ,KAEjBA,EAAGD,EAAS,GAAIvoJ,IAAQT,EAAEqsC,MAC1B08G,EAAGt7G,SAASjlC,KAAKygJ,SAGL3jJ,IAAZtF,EAAEi5C,OAA0C,iBAAZj5C,EAAEi5C,OACpC8vG,EAAGv7G,UAAYu7G,EAAGv7G,WAAa,GAC/Bu7G,EAAGv7G,UAAUw7G,EAAS,GAAIvoJ,IAAQT,EAAEi5C,OAEpC,CAAC,MAAO,OAAOrtC,QAAQ,SAASs9I,QACf5jJ,IAAXtF,EAAEkpJ,KACJH,EAAGv7G,UAAYu7G,EAAGv7G,WAAa,GAC/Bu7G,EAAGv7G,UAAUw7G,EAASE,EAAKzoJ,IAAQT,EAAEkpJ,SAKzC3pJ,EAAE4pJ,WACJJ,EAAGt7G,UAAYs7G,EAAGt7G,UAAY,IAAIzlC,OAAOzI,EAAE4pJ,WAEtCJ,GAGLK,EAAmB,SAAS3rH,EAAa5yB,GAC3C,GAAIq5I,EAAer1H,SAAW,GAC5B,OAAOhkB,EAAK4yB,GAGd,IADAA,EAAc/b,KAAKuK,MAAMvK,KAAKyK,UAAUsR,MACQ,WAA7BrzB,EAAOqzB,EAAY2P,OAAoB,CACxD,IAAIi8G,EAAQ,SAAS5iJ,EAAKmH,EAAGC,GACvBD,KAAKnH,KAASoH,KAAKpH,KACrBA,EAAIoH,GAAKpH,EAAImH,UACNnH,EAAImH,KAIfy7I,GADA5rH,EAAc/b,KAAKuK,MAAMvK,KAAKyK,UAAUsR,KACtB2P,MAAO,kBAAmB,uBAC5Ci8G,EAAM5rH,EAAY2P,MAAO,mBAAoB,wBAC7C3P,EAAY2P,MAAQ07G,EAAqBrrH,EAAY2P,OAEvD,GAAI3P,GAA4C,WAA7BrzB,EAAOqzB,EAAYyO,OAAoB,CAExD,IAAIo9G,EAAO7rH,EAAYyO,MAAM2B,WAC7By7G,EAAOA,IAA0B,WAAhBl/I,EAAOk/I,GAAqBA,EAAO,CAACj9G,MAAOi9G,IAC5D,IAQM/hI,EARFgiI,EAA6BrF,EAAer1H,QAAU,GAE1D,GAAKy6H,IAAwB,SAAfA,EAAKrwG,OAAmC,gBAAfqwG,EAAKrwG,OACf,SAAfqwG,EAAKj9G,OAAmC,gBAAfi9G,EAAKj9G,UACtCsG,EAAUC,aAAa42G,0BACvB72G,EAAUC,aAAa42G,0BAA0B37G,YAChD07G,GAQL,UAPO9rH,EAAYyO,MAAM2B,WAEN,gBAAfy7G,EAAKrwG,OAA0C,gBAAfqwG,EAAKj9G,MACvC9kB,EAAU,CAAC,OAAQ,QACK,SAAf+hI,EAAKrwG,OAAmC,SAAfqwG,EAAKj9G,QACvC9kB,EAAU,CAAC,UAETA,EAEF,OAAOorB,EAAUC,aAAaF,mBAC7BG,KAAK,SAAS6D,GAIb,IAAI+yG,GAHJ/yG,EAAUA,EAAQzS,OAAO,SAASzkC,GAChC,MAAkB,eAAXA,EAAE2xC,QAEO5M,KAAK,SAAS/kC,GAC9B,OAAO+nB,EAAQ49D,KAAK,SAAS39D,GAC3B,OAAiD,IAA1ChoB,EAAEyyC,MAAMn5B,cAAc7P,QAAQue,OAYzC,OATKiiI,GAAO/yG,EAAQ/uC,SAAuC,IAA7B4f,EAAQte,QAAQ,UAC5CwgJ,EAAM/yG,EAAQA,EAAQ/uC,OAAS,IAE7B8hJ,IACFhsH,EAAYyO,MAAMyB,SAAW27G,EAAKrwG,MAAQ,CAACA,MAAOwwG,EAAI97G,UACZ,CAACtB,MAAOo9G,EAAI97G,WAExDlQ,EAAYyO,MAAQ48G,EAAqBrrH,EAAYyO,OACrD+3G,EAAQ,WAAaviI,KAAKyK,UAAUsR,IAC7B5yB,EAAK4yB,KAIlBA,EAAYyO,MAAQ48G,EAAqBrrH,EAAYyO,OAGvD,OADA+3G,EAAQ,WAAaviI,KAAKyK,UAAUsR,IAC7B5yB,EAAK4yB,IAGVisH,EAAa,SAAS//I,GACxB,MAAO,CACLlK,KAAM,CACJkqJ,sBAAuB,kBACvBC,kBAAmB,mBACnBC,qBAAsB,gBACtBC,4BAA6B,uBAC7BC,gBAAiB,mBACjBC,+BAAgC,mBAChCC,wBAAyB,oBACzBtgJ,EAAElK,OAASkK,EAAElK,KACfua,QAASrQ,EAAEqQ,QACX6nC,WAAYl4C,EAAE6zB,eACdpyB,SAAU,WACR,OAAOT,KAAKlL,MAAQkL,KAAKqP,SAAW,MAAQrP,KAAKqP,WAevD24B,EAAUuD,aAVU,SAASzY,EAAahW,EAAWk/F,GACnDyiC,EAAiB3rH,EAAa,SAASl+B,GACrCozC,EAAU8pB,mBAAmBl9D,EAAGkoB,EAAW,SAAS9d,GAC9Cg9G,GACFA,EAAQ+iC,EAAW//I,SAS3B,IAAIugJ,EAAuB,SAASzsH,GAClC,OAAO,IAAIsY,QAAQ,SAASC,EAASC,GACnCtD,EAAUuD,aAAazY,EAAauY,EAASC,MA+BjD,GA3BKtD,EAAUC,eACbD,EAAUC,aAAe,CACvBsD,aAAcg0G,EACdx3G,iBAAkB,WAChB,OAAO,IAAIqD,QAAQ,SAASC,GAC1B,IAAIm0G,EAAQ,CAAC/8G,MAAO,aAAclB,MAAO,cACzC,OAAOptC,EAAOsrJ,iBAAiBC,WAAW,SAAS3zG,GACjDV,EAAQU,EAAQjvC,IAAI,SAAS8pC,GAC3B,MAAO,CAACU,MAAOV,EAAOU,MACpBd,KAAMg5G,EAAM54G,EAAOJ,MACnBxD,SAAU4D,EAAO3nC,GACjBkoC,QAAS,YAKnB03G,wBAAyB,WACvB,MAAO,CACL77G,UAAU,EAAMmB,kBAAkB,EAAMjB,YAAY,EACpD6B,WAAW,EAAMtD,QAAQ,EAAMmC,OAAO,MAQzCoE,EAAUC,aAAasD,aAIrB,CAIL,IAAIo0G,EAAmB33G,EAAUC,aAAasD,aAC1Cx1C,KAAKiyC,EAAUC,cACnBD,EAAUC,aAAasD,aAAe,SAASpb,GAC7C,OAAOsuH,EAAiBtuH,EAAI,SAASv7B,GACnC,OAAO+qJ,EAAiB/qJ,GAAGszC,KAAK,SAAS3b,GACvC,GAAI33B,EAAE6tC,QAAUlW,EAAOyZ,iBAAiBhpC,QACpCpI,EAAE2sC,QAAUhV,EAAO2Z,iBAAiBlpC,OAItC,MAHAuvB,EAAOiiB,YAAYvtC,QAAQ,SAAS2rC,GAClCA,EAAM5d,SAEF,IAAIytH,aAAa,GAAI,iBAE7B,OAAOlwH,GACN,SAASvtB,GACV,OAAOosC,QAAQE,OAAOyzG,EAAW//I,cArBvCgpC,EAAUC,aAAasD,aAAe,SAASzY,GAC7C,OAAOysH,EAAqBzsH,SA4BuB,IAA5CkV,EAAUC,aAAasC,mBAChCvC,EAAUC,aAAasC,iBAAmB,WACxC+uG,EAAQ,sDAG8C,IAA/CtxG,EAAUC,aAAa4X,sBAChC7X,EAAUC,aAAa4X,oBAAsB,WAC3Cy5F,EAAQ,mFClOd,IAAIzyI,EAAQ9L,EAAQ,IAChB6kJ,EAAwB7kJ,EAAQ,KAEpC/G,EAAOD,QAAU,CACfimJ,iBAAkBj/I,EAAQ,KAC1B++I,mBAAoB,SAAS3lJ,GAC3B,IAAIolJ,EAAiB1yI,EAAM+qD,cAAcz9D,GAEzC,GAAIA,EAAO0rJ,iBAGJ1rJ,EAAO6sE,kBACV7sE,EAAO6sE,gBAAkB,SAASrjE,GAChC,OAAOA,IAMNxJ,EAAOuxE,wBACVvxE,EAAOuxE,sBAAwB,SAAS/nE,GACtC,OAAOA,IAMP47I,EAAer1H,QAAU,OAAO,CAClC,IAAI47H,EAAiB7qJ,OAAOmoJ,yBACxBjpJ,EAAOsrJ,iBAAiBtpJ,UAAW,WACvClB,OAAOC,eAAef,EAAOsrJ,iBAAiBtpJ,UAAW,UAAW,CAClEi2B,IAAK,SAAS52B,GACZsqJ,EAAe1zH,IAAI13B,KAAKsL,KAAMxK,GAC9B,IAAIi2D,EAAK,IAAI4vF,MAAM,WACnB5vF,EAAGytB,QAAU1jF,EACbwK,KAAKs7I,cAAc7vF,OAQvBt3D,EAAO6nJ,cAAkB,SAAU7nJ,EAAO6nJ,aAAa7lJ,WACzDlB,OAAOC,eAAef,EAAO6nJ,aAAa7lJ,UAAW,OAAQ,CAC3Df,IAAK,WAQH,YAPmBuF,IAAfqF,KAAKy7I,QACiB,UAApBz7I,KAAK4sC,MAAMpG,KACbxmC,KAAKy7I,MAAQ,IAAItnJ,EAAO4rJ,cAAc//I,MACT,UAApBA,KAAK4sC,MAAMpG,OACpBxmC,KAAKy7I,MAAQ,OAGVz7I,KAAKy7I,SAKlBtnJ,EAAOm0C,kBACHs3G,EAAsBzrJ,EAAQolJ,EAAer1H,UAEnDq2H,iBAAkB,SAASpmJ,IAErBA,EAAO6nJ,cACL,iBAAkB7nJ,EAAO6nJ,aAAa7lJ,YAC1ChC,EAAO6nJ,aAAa7lJ,UAAUswE,aAC1BtyE,EAAO6nJ,aAAa7lJ,UAAU6pJ,0CClExC,IAAItiE,EAAW3iF,EAAQ,IAEvB,SAASioF,EAAkBC,EAAa53B,EAAM75C,EAAM+a,EAAQ0zH,GAC1D,IAAItlH,EAAM+iD,EAASyD,oBAAoB8B,EAAYz8C,KAAM6kB,GAuBzD,GApBA1wB,GAAO+iD,EAASgD,mBACZuC,EAAYC,YAAYC,sBAG5BxoD,GAAO+iD,EAAS4C,oBACZ2C,EAAYG,cAAcD,qBACjB,UAAT3xE,EAAmB,UAAYyuI,GAAY,UAE/CtlH,GAAO,SAAWsoD,EAAYnqC,IAAM,OAEhCmqC,EAAYI,WAAaJ,EAAYK,YACvC3oD,GAAO,iBACEsoD,EAAYI,UACrB1oD,GAAO,iBACEsoD,EAAYK,YACrB3oD,GAAO,iBAEPA,GAAO,iBAGLsoD,EAAYI,UAAW,CAEzB,IAAI5hC,EAAO,SAAWl1B,EAASA,EAAOttB,GAAK,KAAO,IAC9CgkF,EAAYI,UAAUz2C,MAAM3tC,GAAK,OACrC07B,GAAO,KAAO8mB,EAGd9mB,GAAO,UAAYsoD,EAAYM,uBAAuB,GAAGvyD,KACrD,IAAMywB,EACNwhC,EAAYM,uBAAuB,GAAGzB,MACxCnnD,GAAO,UAAYsoD,EAAYM,uBAAuB,GAAGzB,IAAI9wD,KACzD,IAAMywB,EACV9mB,GAAO,oBACHsoD,EAAYM,uBAAuB,GAAGvyD,KAAO,IAC7CiyD,EAAYM,uBAAuB,GAAGzB,IAAI9wD,KAC1C,QAUR,OANA2J,GAAO,UAAYsoD,EAAYM,uBAAuB,GAAGvyD,KACrD,UAAY0sD,EAASC,WAAa,OAClCsF,EAAYI,WAAaJ,EAAYM,uBAAuB,GAAGzB,MACjEnnD,GAAO,UAAYsoD,EAAYM,uBAAuB,GAAGzB,IAAI9wD,KACzD,UAAY0sD,EAASC,WAAa,QAEjChjD,EA2CT,SAASulH,EAAsBC,EAAmBC,GAChD,IAAIC,EAAqB,CACvBx/D,OAAQ,GACRC,iBAAkB,GAClBC,cAAe,IAGbu/D,EAAyB,SAASjoH,EAAIwoD,GACxCxoD,EAAK3W,SAAS2W,EAAI,IAClB,IAAK,IAAI9jC,EAAI,EAAGA,EAAIssF,EAAO7jF,OAAQzI,IACjC,GAAIssF,EAAOtsF,GAAG0mC,cAAgB5C,GAC1BwoD,EAAOtsF,GAAG0qF,uBAAyB5mD,EACrC,OAAOwoD,EAAOtsF,IAKhBgsJ,EAAuB,SAASC,EAAMC,EAAMC,EAASC,GACvD,IAAIC,EAASN,EAAuBE,EAAKlhE,WAAWqC,IAAK++D,GACrDG,EAASP,EAAuBG,EAAKnhE,WAAWqC,IAAKg/D,GACzD,OAAOC,GAAUC,GACbD,EAAO9rJ,KAAKqZ,gBAAkB0yI,EAAO/rJ,KAAKqZ,eAqDhD,OAlDAgyI,EAAkBt/D,OAAO5/E,QAAQ,SAAS2/I,GACxC,IAAK,IAAIrsJ,EAAI,EAAGA,EAAI6rJ,EAAmBv/D,OAAO7jF,OAAQzI,IAAK,CACzD,IAAIssJ,EAAST,EAAmBv/D,OAAOtsF,GACvC,GAAIqsJ,EAAO9rJ,KAAKqZ,gBAAkB0yI,EAAO/rJ,KAAKqZ,eAC1CyyI,EAAO9hE,YAAc+hE,EAAO/hE,UAAW,CACzC,GAAkC,QAA9B8hE,EAAO9rJ,KAAKqZ,eACZyyI,EAAOthE,YAAcuhE,EAAOvhE,WAAWqC,MAGpC4+D,EAAqBK,EAAQC,EAC9BV,EAAkBt/D,OAAQu/D,EAAmBv/D,QAC/C,UAGJggE,EAAS9pI,KAAKuK,MAAMvK,KAAKyK,UAAUq/H,KAE5B9hE,YAAcj+E,KAAK6iB,IAAIi9H,EAAO7hE,YACjC8hE,EAAO9hE,aAEXshE,EAAmBx/D,OAAOhjF,KAAKgjJ,GAG/BA,EAAOlhE,aAAekhE,EAAOlhE,aAAarmD,OAAO,SAASsmD,GACxD,IAAK,IAAIljF,EAAI,EAAGA,EAAIkkJ,EAAOjhE,aAAa3iF,OAAQN,IAC9C,GAAIkkJ,EAAOjhE,aAAajjF,GAAG8U,OAASouE,EAAGpuE,MACnCovI,EAAOjhE,aAAajjF,GAAG+iF,YAAcG,EAAGH,UAC1C,OAAO,EAGX,OAAO,IAIT,UAKN0gE,EAAkBr/D,iBAAiB7/E,QAAQ,SAAS6/I,GAClD,IAAK,IAAIvsJ,EAAI,EAAGA,EAAI6rJ,EAAmBt/D,iBAAiB9jF,OACnDzI,IAAK,CACR,IAAIwsJ,EAAmBX,EAAmBt/D,iBAAiBvsF,GAC3D,GAAIusJ,EAAiB5hJ,MAAQ6hJ,EAAiB7hJ,IAAK,CACjDmhJ,EAAmBv/D,iBAAiBjjF,KAAKkjJ,GACzC,UAMCV,EAIT,SAASW,EAAgCliH,EAAQttB,EAAMwtD,GACrD,OAS6C,IATtC,CACLkH,MAAO,CACLhE,oBAAqB,CAAC,SAAU,oBAChC4D,qBAAsB,CAAC,SAAU,sBAEnCE,OAAQ,CACN9D,oBAAqB,CAAC,oBAAqB,uBAC3C4D,qBAAsB,CAAC,mBAAoB,0BAE7Ct0D,GAAMstB,GAAQxgC,QAAQ0gE,GAG1B,SAASiiF,EAAkBC,EAAc5pH,GAGvC,IAAI6pH,EAAeD,EAAaE,sBAC3BxnH,KAAK,SAASynH,GACb,OAAO/pH,EAAUE,aAAe6pH,EAAgB7pH,YAC5CF,EAAUI,KAAO2pH,EAAgB3pH,IACjCJ,EAAUd,OAAS6qH,EAAgB7qH,MACnCc,EAAU9b,WAAa6lI,EAAgB7lI,UACvC8b,EAAUvkB,WAAasuI,EAAgBtuI,UACvCukB,EAAU9lB,OAAS6vI,EAAgB7vI,OAK7C,OAHK2vI,GACHD,EAAaI,mBAAmBhqH,IAE1B6pH,EAIV,SAASI,EAAUzsJ,EAAM8rF,GACvB,IAAI5hF,EAAI,IAAId,MAAM0iF,GAElB,OADA5hF,EAAElK,KAAOA,EACFkK,EAGThL,EAAOD,QAAU,SAASI,EAAQ+2E,GAIhC,SAASs2E,EAA6B50G,EAAOrgB,GAC3CA,EAAOigB,SAASI,GAChBrgB,EAAO+uH,cAAc,IAAInnJ,EAAOstJ,sBAAsB,WAClD,CAAC70G,MAAOA,KASd,SAAS80G,EAAal7F,EAAI5Z,EAAOuuG,EAAUhvG,GACzC,IAAIw1G,EAAa,IAAItG,MAAM,SAC3BsG,EAAW/0G,MAAQA,EACnB+0G,EAAWxG,SAAWA,EACtBwG,EAAW1+D,YAAc,CAACk4D,SAAUA,GACpCwG,EAAWx1G,QAAUA,EACrBh4C,EAAOyL,WAAW,WAChB4mD,EAAGo7F,eAAe,QAASD,KAI/B,IAAIr5G,EAAoB,SAAS/sC,GAC/B,IAAIirD,EAAKxmD,KAEL6hJ,EAAev7I,SAASgI,yBAuB5B,GAtBA,CAAC,mBAAoB,sBAAuB,iBACvCrN,QAAQ,SAASmqG,GAChB5kD,EAAG4kD,GAAUy2C,EAAaz2C,GAAQr1G,KAAK8rJ,KAG7C7hJ,KAAK8hJ,wBAA0B,KAE/B9hJ,KAAK+hJ,iBAAkB,EAEvB/hJ,KAAKgiJ,aAAe,GACpBhiJ,KAAKiiJ,cAAgB,GAErBjiJ,KAAK8/D,iBAAmB,KACxB9/D,KAAKglE,kBAAoB,KAEzBhlE,KAAKg/D,eAAiB,SACtBh/D,KAAKm/D,mBAAqB,MAC1Bn/D,KAAKkiJ,kBAAoB,MAEzB3mJ,EAASwb,KAAKuK,MAAMvK,KAAKyK,UAAUjmB,GAAU,KAE7CyE,KAAKmiJ,YAAsC,eAAxB5mJ,EAAO6mJ,aACG,cAAzB7mJ,EAAO8mJ,cACT,MAAMd,EAAU,oBACZ,8CAKN,OAJYhmJ,EAAO8mJ,gBACjB9mJ,EAAO8mJ,cAAgB,WAGjB9mJ,EAAO8zD,oBACb,IAAK,MACL,IAAK,QACH,MACF,QACE9zD,EAAO8zD,mBAAqB,MAIhC,OAAQ9zD,EAAO6mJ,cACb,IAAK,WACL,IAAK,aACL,IAAK,aACH,MACF,QACE7mJ,EAAO6mJ,aAAe,WAO1B,GAHA7mJ,EAAO2zD,WAtOX,SAA0BA,EAAYgc,GACpC,IAAIo3E,GAAU,EAEd,OADApzF,EAAan4C,KAAKuK,MAAMvK,KAAKyK,UAAU0tC,KACrB51B,OAAO,SAAS0vB,GAChC,GAAIA,IAAWA,EAAOuB,MAAQvB,EAAO7Z,KAAM,CACzC,IAAIob,EAAOvB,EAAOuB,MAAQvB,EAAO7Z,IAC7B6Z,EAAO7Z,MAAQ6Z,EAAOuB,MACxB56C,QAAQI,KAAK,qDAEf,IAAIwyI,EAA2B,iBAATh4F,EAoBtB,OAnBIg4F,IACFh4F,EAAO,CAACA,IAEVA,EAAOA,EAAKjxB,OAAO,SAAS6V,GAM1B,OALyC,IAAzBA,EAAI7wC,QAAQ,WACU,IAAlC6wC,EAAI7wC,QAAQ,mBACe,IAA3B6wC,EAAI7wC,QAAQ,WACXgkJ,EAM2B,IAAzBnzG,EAAI7wC,QAAQ,UAAkB4sE,GAAe,QACb,IAAnC/7B,EAAI7wC,QAAQ,mBAJdgkJ,GAAU,GACH,YAMJt5F,EAAO7Z,IACd6Z,EAAOuB,KAAOg4F,EAAWh4F,EAAK,GAAKA,IAC1BA,EAAKvtD,UAyMIwlJ,CAAiBjnJ,EAAO2zD,YAAc,GAAIgc,GAE9DlrE,KAAKyiJ,cAAgB,GACjBlnJ,EAAOmnJ,qBACT,IAAK,IAAInuJ,EAAIgH,EAAOmnJ,qBAAsBnuJ,EAAI,EAAGA,IAC/CyL,KAAKyiJ,cAAc5kJ,KAAK,IAAI1J,EAAO0rJ,eAAe,CAChD3wF,WAAY3zD,EAAO2zD,WACnByzF,aAAcpnJ,EAAO8zD,2BAIzB9zD,EAAOmnJ,qBAAuB,EAGhC1iJ,KAAK4iJ,QAAUrnJ,EAIfyE,KAAK6iJ,aAAe,GAEpB7iJ,KAAK8iJ,cAAgBplE,EAASkF,oBAC9B5iF,KAAK+iJ,mBAAqB,EAE1B/iJ,KAAKgjJ,eAAYroJ,EAEjBqF,KAAKijJ,WAAY,GAInB36G,EAAkBnyC,UAAUwoE,eAAiB,KAC7Cr2B,EAAkBnyC,UAAUu6H,YAAc,KAC1CpoF,EAAkBnyC,UAAU+sJ,QAAU,KACtC56G,EAAkBnyC,UAAUy6H,eAAiB,KAC7CtoF,EAAkBnyC,UAAU4oE,uBAAyB,KACrDz2B,EAAkBnyC,UAAU+oE,2BAA6B,KACzD52B,EAAkBnyC,UAAUgtJ,0BAA4B,KACxD76G,EAAkBnyC,UAAUopE,oBAAsB,KAClDj3B,EAAkBnyC,UAAU26H,cAAgB,KAE5CxoF,EAAkBnyC,UAAUyrJ,eAAiB,SAAS9sJ,EAAMogC,GACtDl1B,KAAKijJ,YAGTjjJ,KAAKs7I,cAAcpmH,GACc,mBAAtBl1B,KAAK,KAAOlL,IACrBkL,KAAK,KAAOlL,GAAMogC,KAItBoT,EAAkBnyC,UAAUitJ,0BAA4B,WACtD,IAAIluH,EAAQ,IAAImmH,MAAM,2BACtBr7I,KAAK4hJ,eAAe,0BAA2B1sH,IAGjDoT,EAAkBnyC,UAAUktJ,iBAAmB,WAC7C,OAAOrjJ,KAAK4iJ,SAGdt6G,EAAkBnyC,UAAUkmJ,gBAAkB,WAC5C,OAAOr8I,KAAKgiJ,cAGd15G,EAAkBnyC,UAAUmtJ,iBAAmB,WAC7C,OAAOtjJ,KAAKiiJ,eAKd35G,EAAkBnyC,UAAUotJ,mBAAqB,SAAS/8G,GACxD,IAAIg9G,EAAqBxjJ,KAAK6iJ,aAAa7lJ,OAAS,EAChDimF,EAAc,CAChBr2C,MAAO,KACPs2C,YAAa,KACbg+D,aAAc,KACd99D,cAAe,KACf+8D,kBAAmB,KACnBC,mBAAoB,KACpB/8D,UAAW,KACXC,YAAa,KACb98C,KAAMA,EACNsS,IAAK,KACLyqC,uBAAwB,KACxBkgE,uBAAwB,KACxBl3H,OAAQ,KACRm3H,6BAA8B,GAC9BC,aAAa,GAEf,GAAI3jJ,KAAKmiJ,aAAeqB,EACtBvgE,EAAYi+D,aAAelhJ,KAAK6iJ,aAAa,GAAG3B,aAChDj+D,EAAYG,cAAgBpjF,KAAK6iJ,aAAa,GAAGz/D,kBAC5C,CACL,IAAIn6D,EAAajpB,KAAK4jJ,8BACtB3gE,EAAYi+D,aAAej4H,EAAWi4H,aACtCj+D,EAAYG,cAAgBn6D,EAAWm6D,cAGzC,OADApjF,KAAK6iJ,aAAahlJ,KAAKolF,GAChBA,GAGT36C,EAAkBnyC,UAAUq2C,SAAW,SAASI,EAAOrgB,GACrD,GAAIvsB,KAAKijJ,UACP,MAAM1B,EAAU,oBACZ,0DAGN,IAQIt+D,EAJJ,GAJoBjjF,KAAK6iJ,aAAajpH,KAAK,SAAStjC,GAClD,OAAOA,EAAEs2C,QAAUA,IAInB,MAAM20G,EAAU,qBAAsB,yBAIxC,IAAK,IAAIhtJ,EAAI,EAAGA,EAAIyL,KAAK6iJ,aAAa7lJ,OAAQzI,IACvCyL,KAAK6iJ,aAAatuJ,GAAGq4C,OACtB5sC,KAAK6iJ,aAAatuJ,GAAGiyC,OAASoG,EAAMpG,OACtCy8C,EAAcjjF,KAAK6iJ,aAAatuJ,IAiBpC,OAdK0uF,IACHA,EAAcjjF,KAAKujJ,mBAAmB32G,EAAMpG,OAG9CxmC,KAAK6jJ,+BAEsC,IAAvC7jJ,KAAKgiJ,aAAa1jJ,QAAQiuB,IAC5BvsB,KAAKgiJ,aAAankJ,KAAK0uB,GAGzB02D,EAAYr2C,MAAQA,EACpBq2C,EAAY12D,OAASA,EACrB02D,EAAYI,UAAY,IAAIlvF,EAAO6nJ,aAAapvG,EAC5Cq2C,EAAYG,eACTH,EAAYI,WAGrB/6C,EAAkBnyC,UAAUo/H,UAAY,SAAShpG,GAC/C,IAAIi6B,EAAKxmD,KACT,GAAIkrE,GAAe,MACjB3+C,EAAOiiB,YAAYvtC,QAAQ,SAAS2rC,GAClC4Z,EAAGha,SAASI,EAAOrgB,SAEhB,CAIL,IAAIu3H,EAAev3H,EAAO02C,QAC1B12C,EAAOiiB,YAAYvtC,QAAQ,SAAS2rC,EAAOoM,GACzC,IAAI+qG,EAAcD,EAAat1G,YAAYwK,GAC3CpM,EAAMrC,iBAAiB,UAAW,SAASrV,GACzC6uH,EAAY7qE,QAAUhkD,EAAMgkD,YAGhC4qE,EAAat1G,YAAYvtC,QAAQ,SAAS2rC,GACxC4Z,EAAGha,SAASI,EAAOk3G,OAKzBx7G,EAAkBnyC,UAAUuiF,YAAc,SAASs9C,GACjD,GAAIh2H,KAAKijJ,UACP,MAAM1B,EAAU,oBACZ,6DAGN,KAAMvrB,aAAkB7hI,EAAO6nJ,cAC7B,MAAM,IAAI36I,UAAU,0FAItB,IAAI4hF,EAAcjjF,KAAK6iJ,aAAajpH,KAAK,SAASnkC,GAChD,OAAOA,EAAE4tF,YAAc2yC,IAGzB,IAAK/yC,EACH,MAAMs+D,EAAU,qBACZ,8CAEN,IAAIh1H,EAAS02D,EAAY12D,OAEzB02D,EAAYI,UAAUr0D,OACtBi0D,EAAYI,UAAY,KACxBJ,EAAYr2C,MAAQ,KACpBq2C,EAAY12D,OAAS,MAMiB,IAHnBvsB,KAAK6iJ,aAAa/lJ,IAAI,SAASrH,GAChD,OAAOA,EAAE82B,SAEMjuB,QAAQiuB,IACrBvsB,KAAKgiJ,aAAa1jJ,QAAQiuB,IAAW,GACvCvsB,KAAKgiJ,aAAa1kJ,OAAO0C,KAAKgiJ,aAAa1jJ,QAAQiuB,GAAS,GAG9DvsB,KAAK6jJ,+BAGPv7G,EAAkBnyC,UAAUw/H,aAAe,SAASppG,GAClD,IAAIi6B,EAAKxmD,KACTusB,EAAOiiB,YAAYvtC,QAAQ,SAAS2rC,GAClC,IAAIopF,EAASxvE,EAAGuvE,aAAan8F,KAAK,SAAStjC,GACzC,OAAOA,EAAEs2C,QAAUA,IAEjBopF,GACFxvE,EAAGkyB,YAAYs9C,MAKrB1tF,EAAkBnyC,UAAU4/H,WAAa,WACvC,OAAO/1H,KAAK6iJ,aAAavpH,OAAO,SAAS2pD,GACvC,QAASA,EAAYI,YAEtBvmF,IAAI,SAASmmF,GACZ,OAAOA,EAAYI,aAIvB/6C,EAAkBnyC,UAAUilJ,aAAe,WACzC,OAAOp7I,KAAK6iJ,aAAavpH,OAAO,SAAS2pD,GACvC,QAASA,EAAYK,cAEtBxmF,IAAI,SAASmmF,GACZ,OAAOA,EAAYK,eAKvBh7C,EAAkBnyC,UAAU6tJ,mBAAqB,SAAShkF,EACtDmiF,GACF,IAAI37F,EAAKxmD,KACT,GAAImiJ,GAAeniF,EAAgB,EACjC,OAAOhgE,KAAK6iJ,aAAa,GAAG3/D,YACvB,GAAIljF,KAAKyiJ,cAAczlJ,OAC5B,OAAOgD,KAAKyiJ,cAAclsH,QAE5B,IAAI2sD,EAAc,IAAI/uF,EAAO0rJ,eAAe,CAC1C3wF,WAAYlvD,KAAK4iJ,QAAQ1zF,WACzByzF,aAAc3iJ,KAAK4iJ,QAAQvzF,qBAkB7B,OAhBAp6D,OAAOC,eAAeguF,EAAa,QAC/B,CAAC1tF,MAAO,MAAOyuJ,UAAU,IAG7BjkJ,KAAK6iJ,aAAa7iF,GAAekkF,wBAA0B,GAC3DlkJ,KAAK6iJ,aAAa7iF,GAAemkF,iBAAmB,SAASjvH,GAC3D,IAAIqzF,GAAOrzF,EAAMoC,WAAqD,IAAxCriC,OAAOy5B,KAAKwG,EAAMoC,WAAWt6B,OAG3DkmF,EAAYzlB,MAAQ8qD,EAAM,YAAc,YACuB,OAA3D/hE,EAAGq8F,aAAa7iF,GAAekkF,yBACjC19F,EAAGq8F,aAAa7iF,GAAekkF,wBAAwBrmJ,KAAKq3B,IAGhEguD,EAAY34C,iBAAiB,iBAC3BvqC,KAAK6iJ,aAAa7iF,GAAemkF,kBAC5BjhE,GAIT56C,EAAkBnyC,UAAUiuJ,QAAU,SAAStrG,EAAKknB,GAClD,IAAIxZ,EAAKxmD,KACLkjF,EAAcljF,KAAK6iJ,aAAa7iF,GAAekjB,YACnD,IAAIA,EAAYmhE,iBAAhB,CAGA,IAAIH,EACFlkJ,KAAK6iJ,aAAa7iF,GAAekkF,wBACnClkJ,KAAK6iJ,aAAa7iF,GAAekkF,wBAA0B,KAC3DhhE,EAAYrjC,oBAAoB,iBAC9B7/C,KAAK6iJ,aAAa7iF,GAAemkF,kBACnCjhE,EAAYmhE,iBAAmB,SAASC,GACtC,KAAI99F,EAAG27F,aAAeniF,EAAgB,GAAtC,CAMA,IAAI9qC,EAAQ,IAAImmH,MAAM,gBACtBnmH,EAAMoC,UAAY,CAACmpC,OAAQ3nB,EAAKknB,cAAeA,GAE/C,IAAIjoC,EAAOusH,EAAIhtH,UAEXixF,GAAOxwF,GAAqC,IAA7B9iC,OAAOy5B,KAAKqJ,GAAM/6B,OACrC,GAAIurH,EAGwB,QAAtBrlC,EAAYzlB,OAAyC,cAAtBylB,EAAYzlB,QAC7CylB,EAAYzlB,MAAQ,iBAEjB,CACqB,QAAtBylB,EAAYzlB,QACdylB,EAAYzlB,MAAQ,aAGtB1lC,EAAKN,UAAY,EACjB,IAAI8sH,EAAsB7mE,EAASe,eAAe1mD,GAClD7C,EAAMoC,UAAYriC,OAAOwkF,OAAOvkD,EAAMoC,UAClComD,EAASU,eAAemmE,IAC5BrvH,EAAMoC,UAAUA,UAAYitH,EAI9B,IAAItmE,EAAWP,EAASK,cAAcv3B,EAAGsZ,iBAAiBnlC,KAKxDsjD,EAAS/oD,EAAMoC,UAAU0oC,cAAgB,IAJtCuoD,EAKC,0BAHA,KAAOrzF,EAAMoC,UAAUA,UAAY,OAKzCkvB,EAAGsZ,iBAAiBnlC,IAAMsjD,EAAS1gF,KAAK,IACxC,IAAIinJ,EAAWh+F,EAAGq8F,aAAanmE,MAAM,SAASuG,GAC5C,OAAOA,EAAYC,aACmB,cAAlCD,EAAYC,YAAYzlB,QAGD,cAAzBjX,EAAG07F,oBACL17F,EAAG07F,kBAAoB,YACvB17F,EAAG48F,6BAKA76B,GACH/hE,EAAGo7F,eAAe,eAAgB1sH,GAEhCsvH,IACFh+F,EAAGo7F,eAAe,eAAgB,IAAIvG,MAAM,iBAC5C70F,EAAG07F,kBAAoB,WACvB17F,EAAG48F,+BAKPjvJ,EAAOyL,WAAW,WAChBskJ,EAAwBjjJ,QAAQ,SAASjC,GACvCkkF,EAAYmhE,iBAAiBrlJ,MAE9B,KAILspC,EAAkBnyC,UAAUytJ,4BAA8B,WACxD,IAAIp9F,EAAKxmD,KACLkhJ,EAAe,IAAI/sJ,EAAOswJ,gBAAgB,MAC9CvD,EAAawD,iBAAmB,WAC9Bl+F,EAAGm+F,0BAGL,IAAIvhE,EAAgB,IAAIjvF,EAAOywJ,iBAAiB1D,GAWhD,OAVA99D,EAAcyhE,kBAAoB,WAChCr+F,EAAGm+F,0BAELvhE,EAAcz+D,QAAU,WAEtB1vB,OAAOC,eAAekuF,EAAe,QACjC,CAAC5tF,MAAO,SAAUyuJ,UAAU,IAChCz9F,EAAGm+F,0BAGE,CACLzD,aAAcA,EACd99D,cAAeA,IAMnB96C,EAAkBnyC,UAAU2uJ,6BAA+B,SACvD9kF,GACF,IAAIkjB,EAAcljF,KAAK6iJ,aAAa7iF,GAAekjB,YAC/CA,WACKA,EAAYmhE,wBACZrkJ,KAAK6iJ,aAAa7iF,GAAekjB,aAE1C,IAAIg+D,EAAelhJ,KAAK6iJ,aAAa7iF,GAAekhF,aAChDA,WACKA,EAAawD,wBACb1kJ,KAAK6iJ,aAAa7iF,GAAekhF,cAE1C,IAAI99D,EAAgBpjF,KAAK6iJ,aAAa7iF,GAAeojB,cACjDA,WACKA,EAAcyhE,yBACdzhE,EAAcz+D,eACd3kB,KAAK6iJ,aAAa7iF,GAAeojB,gBAK5C96C,EAAkBnyC,UAAU4uJ,YAAc,SAAS9hE,EAC/CzrE,EAAMwtI,GACR,IAAI1sH,EAAS4nH,EAAsBj9D,EAAYk9D,kBAC3Cl9D,EAAYm9D,oBACZ5oI,GAAQyrE,EAAYI,YACtB/qD,EAAOmgG,UAAYx1C,EAAYM,uBAC/BjrD,EAAO0oD,KAAO,CACZoB,MAAO1E,EAASC,WAChB4E,SAAUU,EAAYf,eAAeK,UAEnCU,EAAYwgE,uBAAuBzmJ,SACrCs7B,EAAO0oD,KAAKhwD,KAAOiyD,EAAYwgE,uBAAuB,GAAGzyH,MAE3DiyD,EAAYI,UAAU7rE,KAAK8gB,IAEzB0sH,GAAQ/hE,EAAYK,aAAehrD,EAAOuoD,OAAO7jF,OAAS,IAEnC,UAArBimF,EAAYz8C,MACTy8C,EAAYwgE,wBACZv4E,EAAc,OACnB+X,EAAYwgE,uBAAuBxiJ,QAAQ,SAAS5K,UAC3CA,EAAEyrF,MAGTmB,EAAYwgE,uBAAuBzmJ,SACrCs7B,EAAOmgG,UAAYx1C,EAAYwgE,wBAEjCnrH,EAAO0oD,KAAO,CACZuB,SAAUU,EAAYf,eAAeK,UAEnCU,EAAYf,eAAeE,QAC7B9pD,EAAO0oD,KAAKoB,MAAQa,EAAYf,eAAeE,OAE7Ca,EAAYM,uBAAuBvmF,SACrCs7B,EAAO0oD,KAAKhwD,KAAOiyD,EAAYM,uBAAuB,GAAGvyD,MAE3DiyD,EAAYK,YAAY2hE,QAAQ3sH,KAIpCgQ,EAAkBnyC,UAAU+rE,oBAAsB,SAAS0e,GACzD,IAeI3C,EACAtlD,EAhBA6tB,EAAKxmD,KAGT,IAAuD,IAAnD,CAAC,QAAS,UAAU1B,QAAQsiF,EAAYpvE,MAC1C,OAAO45B,QAAQE,OAAOi2G,EAAU,YAC5B,qBAAuB3gE,EAAYpvE,KAAO,MAGhD,IAAKwvI,EAAgC,sBACjCpgE,EAAYpvE,KAAMg1C,EAAGwY,iBAAmBxY,EAAGy8F,UAC7C,OAAO73G,QAAQE,OAAOi2G,EAAU,oBAC5B,qBAAuB3gE,EAAYpvE,KACnC,aAAeg1C,EAAGwY,iBAKxB,GAAyB,UAArB4hB,EAAYpvE,KAGdysE,EAAWP,EAASK,cAAc6C,EAAYjmD,KAC9ChC,EAAcslD,EAAS1nD,QACvB0nD,EAASh9E,QAAQ,SAASg/E,EAAcjgB,GACtC,IAAI3U,EAAOqyB,EAASiD,mBAAmBV,GACvCz5B,EAAGq8F,aAAa7iF,GAAemgF,kBAAoB90F,IAGrD7E,EAAGq8F,aAAa5hJ,QAAQ,SAASgiF,EAAajjB,GAC5CxZ,EAAG49F,QAAQnhE,EAAYnqC,IAAKknB,UAEzB,GAAyB,WAArB4gB,EAAYpvE,KAAmB,CACxCysE,EAAWP,EAASK,cAAcv3B,EAAGwe,kBAAkBrqC,KACvDhC,EAAcslD,EAAS1nD,QACvB,IAAI2uH,EAAYxnE,EAASS,YAAYxlD,EACjC,cAAc37B,OAAS,EAC3BihF,EAASh9E,QAAQ,SAASg/E,EAAcjgB,GACtC,IAAIijB,EAAcz8B,EAAGq8F,aAAa7iF,GAC9BkjB,EAAcD,EAAYC,YAC1Bg+D,EAAej+D,EAAYi+D,aAC3B99D,EAAgBH,EAAYG,cAC5B+8D,EAAoBl9D,EAAYk9D,kBAChCC,EAAqBn9D,EAAYm9D,mBAMrC,KAHe1iE,EAASgG,WAAWzD,IACgC,IAA/DvC,EAASS,YAAY8B,EAAc,iBAAiBjjF,UAEtCimF,EAAYkiE,cAAe,CAC3C,IAAIC,EAAsB1nE,EAAS+C,iBAC/BR,EAActnD,GACd0sH,EAAuB3nE,EAASyC,kBAChCF,EAActnD,GACdusH,IACFG,EAAqBjlE,KAAO,UAGzB55B,EAAG27F,aAAiC,IAAlBniF,IACrBxZ,EAAG49F,QAAQnhE,EAAYnqC,IAAKknB,GACD,QAAvBkhF,EAAazjF,OACfyjF,EAAan7H,MAAMm9D,EAAakiE,EAC5BF,EAAY,cAAgB,cAEN,QAAxB9hE,EAAc3lB,OAChB2lB,EAAcr9D,MAAMs/H,IAKxB,IAAI/sH,EAAS4nH,EAAsBC,EAC/BC,GAIJ55F,EAAGu+F,YAAY9hE,EACX3qD,EAAOuoD,OAAO7jF,OAAS,GACvB,MAeV,OAVAwpD,EAAGsZ,iBAAmB,CACpBtuD,KAAMovE,EAAYpvE,KAClBmpB,IAAKimD,EAAYjmD,KAEM,UAArBimD,EAAYpvE,KACdg1C,EAAG8+F,sBAAsB,oBAEzB9+F,EAAG8+F,sBAAsB,UAGpBl6G,QAAQC,WAGjB/C,EAAkBnyC,UAAU2vE,qBAAuB,SAAS8a,GAC1D,IAAIp6B,EAAKxmD,KAGT,IAAuD,IAAnD,CAAC,QAAS,UAAU1B,QAAQsiF,EAAYpvE,MAC1C,OAAO45B,QAAQE,OAAOi2G,EAAU,YAC5B,qBAAuB3gE,EAAYpvE,KAAO,MAGhD,IAAKwvI,EAAgC,uBACjCpgE,EAAYpvE,KAAMg1C,EAAGwY,iBAAmBxY,EAAGy8F,UAC7C,OAAO73G,QAAQE,OAAOi2G,EAAU,oBAC5B,sBAAwB3gE,EAAYpvE,KACpC,aAAeg1C,EAAGwY,iBAGxB,IAAI7yB,EAAU,GACdqa,EAAGy7F,cAAchhJ,QAAQ,SAASsrB,GAChC4f,EAAQ5f,EAAOttB,IAAMstB,IAEvB,IAAIg5H,EAAe,GACftnE,EAAWP,EAASK,cAAc6C,EAAYjmD,KAC9ChC,EAAcslD,EAAS1nD,QACvB2uH,EAAYxnE,EAASS,YAAYxlD,EACjC,cAAc37B,OAAS,EACvBmlJ,EAAczkE,EAASS,YAAYxlD,EACnC,mBAAmB37B,OAAS,EAChCwpD,EAAG27F,YAAcA,EACjB,IAAIqD,EAAa9nE,EAASS,YAAYxlD,EAClC,kBAAkB,GAoTtB,OAlTE6tB,EAAGs7F,0BADD0D,GAC2BA,EAAW9mI,OAAO,IAAI7hB,MAAM,KACpDyB,QAAQ,YAAc,EAK7B2/E,EAASh9E,QAAQ,SAASg/E,EAAcjgB,GACtC,IAAI7nC,EAAQulD,EAASG,WAAWoC,GAC5Bz5C,EAAOk3C,EAAS+F,QAAQxD,GAExBwlE,EAAW/nE,EAASgG,WAAWzD,IACgC,IAA/DvC,EAASS,YAAY8B,EAAc,iBAAiBjjF,OACpD+V,EAAWolB,EAAM,GAAGzZ,OAAO,GAAG7hB,MAAM,KAAK,GAEzC27B,EAAYklD,EAAS8F,aAAavD,EAActnD,GAChD+sH,EAAahoE,EAAS+E,UAAUxC,GAEhCnnC,EAAM4kC,EAASsC,OAAOC,IAAiBvC,EAASE,qBAGpD,GAAa,gBAATp3C,GAAuC,cAAbzzB,EAA9B,CAQA,IAAIkwE,EACAC,EACAg+D,EACA99D,EACAE,EACAC,EACAkgE,EACAtD,EAEAvzG,EAGAw4G,EACAC,EAFAjF,EAAqB1iE,EAASiD,mBAAmBV,GAGhDwlE,IACHL,EAAsB1nE,EAAS+C,iBAAiBR,EAC5CtnD,IACJ0sH,EAAuB3nE,EAASyC,kBAAkBF,EAC9CtnD,IACiBynD,KAAO,UAE9BqjE,EACI/lE,EAAS4D,2BAA2BrB,GAExC,IAAIiC,EAAiBxE,EAASuE,oBAAoBhC,GAE9C0lE,EAAajoE,EAASS,YAAY8B,EAClC,sBAAuBtnD,GAAa37B,OAAS,EAC7CwjE,EAAQkd,EAASS,YAAY8B,EAAc,gBAC1CnjF,IAAI,SAASi7B,GACZ,OAAO2lD,EAASU,eAAermD,KAEhCuB,OAAO,SAASvB,GACf,OAA0B,IAAnBA,EAAKN,YAuBlB,IAnB0B,UAArBmpD,EAAYpvE,MAAyC,WAArBovE,EAAYpvE,QAC5Ci0I,GAAYtD,GAAeniF,EAAgB,GAC5CxZ,EAAGq8F,aAAa7iF,KAClBxZ,EAAGs+F,6BAA6B9kF,GAChCxZ,EAAGq8F,aAAa7iF,GAAekjB,YAC3B18B,EAAGq8F,aAAa,GAAG3/D,YACvB18B,EAAGq8F,aAAa7iF,GAAekhF,aAC3B16F,EAAGq8F,aAAa,GAAG3B,aACvB16F,EAAGq8F,aAAa7iF,GAAeojB,cAC3B58B,EAAGq8F,aAAa,GAAGz/D,cACnB58B,EAAGq8F,aAAa7iF,GAAeqjB,WACjC78B,EAAGq8F,aAAa7iF,GAAeqjB,UAAUuiE,aACrCp/F,EAAGq8F,aAAa,GAAGz/D,eAErB58B,EAAGq8F,aAAa7iF,GAAesjB,aACjC98B,EAAGq8F,aAAa7iF,GAAesjB,YAAYsiE,aACvCp/F,EAAGq8F,aAAa,GAAGz/D,gBAGF,UAArBxC,EAAYpvE,MAAqBi0I,EAmGL,WAArB7kE,EAAYpvE,MAAsBi0I,IAE3CviE,GADAD,EAAcz8B,EAAGq8F,aAAa7iF,IACJkjB,YAC1Bg+D,EAAej+D,EAAYi+D,aAC3B99D,EAAgBH,EAAYG,cAC5BE,EAAcL,EAAYK,YAC1BC,EAAyBN,EAAYM,uBACrC48D,EAAoBl9D,EAAYk9D,kBAEhC35F,EAAGq8F,aAAa7iF,GAAeyjF,uBAC3BA,EACJj9F,EAAGq8F,aAAa7iF,GAAeogF,mBAC3BA,EACJ55F,EAAGq8F,aAAa7iF,GAAekiB,eAAiBA,EAE5C1hB,EAAMxjE,QAAiC,QAAvBkkJ,EAAazjF,SAC1BynF,IAAaS,GACZxD,GAAiC,IAAlBniF,EAGnBQ,EAAMv/D,QAAQ,SAASq2B,GACrB2pH,EAAkBh+D,EAAYi+D,aAAc5pH,KAH9C4pH,EAAa2E,oBAAoBrlF,IAQhC2hF,GAAiC,IAAlBniF,IACS,QAAvBkhF,EAAazjF,OACfyjF,EAAan7H,MAAMm9D,EAAakiE,EAC5B,eAEsB,QAAxBhiE,EAAc3lB,OAChB2lB,EAAcr9D,MAAMs/H,IAIxB7+F,EAAGu+F,YAAY9hE,EACG,aAAdzqD,GAA0C,aAAdA,EACd,aAAdA,GAA0C,aAAdA,IAG5B8qD,GACe,aAAd9qD,GAA0C,aAAdA,SAiBxByqD,EAAYK,aAhBnB12C,EAAQ02C,EAAY12C,MAChB84G,GACGv5G,EAAQu5G,EAAWn5H,UACtB4f,EAAQu5G,EAAWn5H,QAAU,IAAIp4B,EAAOo1C,aAE1Ci4G,EAA6B50G,EAAOT,EAAQu5G,EAAWn5H,SACvDg5H,EAAa1nJ,KAAK,CAAC+uC,EAAO02C,EAAan3C,EAAQu5G,EAAWn5H,YAErD4f,EAAQ6kG,UACX7kG,EAAQ6kG,QAAU,IAAI78I,EAAOo1C,aAE/Bi4G,EAA6B50G,EAAOT,EAAQ6kG,SAC5CuU,EAAa1nJ,KAAK,CAAC+uC,EAAO02C,EAAan3C,EAAQ6kG,iBA1JN,EAC7C/tD,EAAcz8B,EAAGq8F,aAAa7iF,IAC1BxZ,EAAG+8F,mBAAmB/8G,IACdsS,IAAMA,EAEbmqC,EAAYC,cACfD,EAAYC,YAAc18B,EAAGw9F,mBAAmBhkF,EAC5CmiF,IAGF3hF,EAAMxjE,QAA6C,QAAnCimF,EAAYi+D,aAAazjF,SACvCkoF,GAAgBxD,GAAiC,IAAlBniF,EAGjCQ,EAAMv/D,QAAQ,SAASq2B,GACrB2pH,EAAkBh+D,EAAYi+D,aAAc5pH,KAH9C2rD,EAAYi+D,aAAa2E,oBAAoBrlF,IAQjD2/E,EAAoBhsJ,EAAO2xJ,eAAeC,gBAAgBv/G,GAItD0kC,EAAc,QAChBi1E,EAAkBt/D,OAASs/D,EAAkBt/D,OAAOvnD,OAChD,SAAS6B,GACP,MAAsB,QAAfA,EAAMrmC,QAIrByuF,EAAyBN,EAAYM,wBAA0B,CAAC,CAC9DvyD,KAAgC,MAAzB,EAAIgvC,EAAgB,KAI7B,IAOQzzC,EAPJy5H,GAAa,EACjB,GAAkB,aAAdxtH,GAA0C,aAAdA,GAK9B,GAJAwtH,GAAc/iE,EAAYK,YAC1BA,EAAcL,EAAYK,aACtB,IAAInvF,EAAO2xJ,eAAe7iE,EAAYG,cAAe58C,GAErDw/G,EAEFp5G,EAAQ02C,EAAY12C,MAEhB84G,GAAoC,MAAtBA,EAAWn5H,SAElBm5H,GACJv5G,EAAQu5G,EAAWn5H,UACtB4f,EAAQu5G,EAAWn5H,QAAU,IAAIp4B,EAAOo1C,YACxCt0C,OAAOC,eAAei3C,EAAQu5G,EAAWn5H,QAAS,KAAM,CACtDn3B,IAAK,WACH,OAAOswJ,EAAWn5H,WAIxBt3B,OAAOC,eAAe03C,EAAO,KAAM,CACjCx3C,IAAK,WACH,OAAOswJ,EAAW94G,SAGtBrgB,EAAS4f,EAAQu5G,EAAWn5H,UAEvB4f,EAAQ6kG,UACX7kG,EAAQ6kG,QAAU,IAAI78I,EAAOo1C,aAE/Bhd,EAAS4f,EAAQ6kG,UAEfzkH,IACFi1H,EAA6B50G,EAAOrgB,GACpC02D,EAAYygE,6BAA6B7lJ,KAAK0uB,IAEhDg5H,EAAa1nJ,KAAK,CAAC+uC,EAAO02C,EAAa/2D,SAEhC02D,EAAYK,aAAeL,EAAYK,YAAY12C,QAC5Dq2C,EAAYygE,6BAA6BziJ,QAAQ,SAAS3K,GACxD,IAlxBiCs2C,EAAOrgB,EAkxBpC05H,EAAc3vJ,EAAEk4C,YAAY5U,KAAK,SAASnkC,GAC5C,OAAOA,EAAEwJ,KAAOgkF,EAAYK,YAAY12C,MAAM3tC,KAE5CgnJ,IArxB6Br5G,EAsxBGq5G,GAtxBI15H,EAsxBSj2B,GArxBlDoiF,YAAY9rC,GACnBrgB,EAAO+uH,cAAc,IAAInnJ,EAAOstJ,sBAAsB,cAClD,CAAC70G,MAAOA,QAsxBNq2C,EAAYygE,6BAA+B,IAG7CzgE,EAAYk9D,kBAAoBA,EAChCl9D,EAAYm9D,mBAAqBA,EACjCn9D,EAAYK,YAAcA,EAC1BL,EAAYf,eAAiBA,EAC7Be,EAAYM,uBAAyBA,EACrCN,EAAYwgE,uBAAyBA,EAIrCj9F,EAAGu+F,YAAYv+F,EAAGq8F,aAAa7iF,IAC3B,EACAgmF,SAjKJx/F,EAAGq8F,aAAa7iF,GAAiB,CAC/BlnB,IAAKA,EACLqsG,eAAe,UAgOAxqJ,IAAjB6rD,EAAGw8F,YACLx8F,EAAGw8F,UAAiC,UAArBpiE,EAAYpvE,KAAmB,SAAW,WAG3Dg1C,EAAGwe,kBAAoB,CACrBxzD,KAAMovE,EAAYpvE,KAClBmpB,IAAKimD,EAAYjmD,KAEM,UAArBimD,EAAYpvE,KACdg1C,EAAG8+F,sBAAsB,qBAEzB9+F,EAAG8+F,sBAAsB,UAE3BrwJ,OAAOy5B,KAAKyd,GAASlrC,QAAQ,SAASuV,GACpC,IAAI+V,EAAS4f,EAAQ31B,GACrB,GAAI+V,EAAOiiB,YAAYxxC,OAAQ,CAC7B,IAA0C,IAAtCwpD,EAAGy7F,cAAc3jJ,QAAQiuB,GAAgB,CAC3Ci6B,EAAGy7F,cAAcpkJ,KAAK0uB,GACtB,IAAI2I,EAAQ,IAAImmH,MAAM,aACtBnmH,EAAM3I,OAASA,EACfp4B,EAAOyL,WAAW,WAChB4mD,EAAGo7F,eAAe,YAAa1sH,KAInCqwH,EAAatkJ,QAAQ,SAAS26B,GAC5B,IAAIgR,EAAQhR,EAAK,GACbu/G,EAAWv/G,EAAK,GAChBrP,EAAOttB,KAAO28B,EAAK,GAAG38B,IAG1ByiJ,EAAal7F,EAAI5Z,EAAOuuG,EAAU,CAAC5uH,SAIzCg5H,EAAatkJ,QAAQ,SAAS26B,GACxBA,EAAK,IAGT8lH,EAAal7F,EAAI5qB,EAAK,GAAIA,EAAK,GAAI,MAKrCznC,EAAOyL,WAAW,WACV4mD,GAAMA,EAAGq8F,cAGfr8F,EAAGq8F,aAAa5hJ,QAAQ,SAASgiF,GAC3BA,EAAYi+D,cACuB,QAAnCj+D,EAAYi+D,aAAazjF,OACzBwlB,EAAYi+D,aAAaE,sBAAsBpkJ,OAAS,IAC1D2S,QAAQI,KAAK,sFAEbkzE,EAAYi+D,aAAaI,mBAAmB,QAG/C,KAEIl2G,QAAQC,WAGjB/C,EAAkBnyC,UAAUsvB,MAAQ,WAClCzlB,KAAK6iJ,aAAa5hJ,QAAQ,SAASgiF,GAM7BA,EAAYi+D,cACdj+D,EAAYi+D,aAAalyH,OAEvBi0D,EAAYG,eACdH,EAAYG,cAAcp0D,OAExBi0D,EAAYI,WACdJ,EAAYI,UAAUr0D,OAEpBi0D,EAAYK,aACdL,EAAYK,YAAYt0D,SAI5BhvB,KAAKijJ,WAAY,EACjBjjJ,KAAKslJ,sBAAsB,WAI7Bh9G,EAAkBnyC,UAAUmvJ,sBAAwB,SAASlrF,GAC3Dp6D,KAAKg/D,eAAiB5E,EACtB,IAAIllC,EAAQ,IAAImmH,MAAM,wBACtBr7I,KAAK4hJ,eAAe,uBAAwB1sH,IAI9CoT,EAAkBnyC,UAAU0tJ,4BAA8B,WACxD,IAAIr9F,EAAKxmD,KACmB,WAAxBA,KAAKg/D,iBAAwD,IAAzBh/D,KAAK+hJ,kBAG7C/hJ,KAAK+hJ,iBAAkB,EACvB5tJ,EAAOyL,WAAW,WAChB,GAAI4mD,EAAGu7F,gBAAiB,CACtBv7F,EAAGu7F,iBAAkB,EACrB,IAAI7sH,EAAQ,IAAImmH,MAAM,qBACtB70F,EAAGo7F,eAAe,oBAAqB1sH,KAExC,KAILoT,EAAkBnyC,UAAUwuJ,uBAAyB,WACnD,IAAIvqF,EACA8rF,EAAS,CACXC,IAAO,EACPppF,OAAQ,EACRqpF,WAAY,EACZC,SAAU,EACVnyI,UAAW,EACXkvG,UAAW,EACXkjC,aAAc,EACdC,OAAQ,GAsBV,GApBAvmJ,KAAK6iJ,aAAa5hJ,QAAQ,SAASgiF,GACjCijE,EAAOjjE,EAAYi+D,aAAazjF,SAChCyoF,EAAOjjE,EAAYG,cAAc3lB,WAGnCyoF,EAAOhyI,WAAagyI,EAAO9iC,UAE3BhpD,EAAW,MACP8rF,EAAOK,OAAS,EAClBnsF,EAAW,SACF8rF,EAAOE,WAAa,GAAKF,EAAOG,SAAW,EACpDjsF,EAAW,aACF8rF,EAAOI,aAAe,EAC/BlsF,EAAW,eACF8rF,EAAOC,IAAM,EACtB/rF,EAAW,OACF8rF,EAAOhyI,UAAY,GAAKgyI,EAAO9iC,UAAY,KACpDhpD,EAAW,aAGTA,IAAap6D,KAAKm/D,mBAAoB,CACxCn/D,KAAKm/D,mBAAqB/E,EAC1B,IAAIllC,EAAQ,IAAImmH,MAAM,4BACtBr7I,KAAK4hJ,eAAe,2BAA4B1sH,KAIpDoT,EAAkBnyC,UAAU6rE,YAAc,WACxC,IAAIxb,EAAKxmD,KAET,GAAIwmD,EAAGy8F,UACL,OAAO73G,QAAQE,OAAOi2G,EAAU,oBAC5B,yCAGN,IAAIiF,EAAiBhgG,EAAGq8F,aAAavpH,OAAO,SAAS7jC,GACnD,MAAkB,UAAXA,EAAE+wC,OACRxpC,OACCypJ,EAAiBjgG,EAAGq8F,aAAavpH,OAAO,SAAS7jC,GACnD,MAAkB,UAAXA,EAAE+wC,OACRxpC,OAGConI,EAAexmI,UAAU,GAC7B,GAAIwmI,EAAc,CAEhB,GAAIA,EAAavhG,WAAauhG,EAAathG,SACzC,MAAM,IAAIzhC,UACN,6DAEmC1G,IAArCypI,EAAa7jB,sBAEbimC,GADuC,IAArCpiB,EAAa7jB,oBACE,GAC6B,IAArC6jB,EAAa7jB,oBACL,EAEA6jB,EAAa7jB,0BAGO5lH,IAArCypI,EAAa5jB,sBAEbimC,GADuC,IAArCriB,EAAa5jB,oBACE,GAC6B,IAArC4jB,EAAa5jB,oBACL,EAEA4jB,EAAa5jB,qBAoBpC,IAfAh6D,EAAGq8F,aAAa5hJ,QAAQ,SAASgiF,GACN,UAArBA,EAAYz8C,OACdggH,EACqB,IACnBvjE,EAAY0gE,aAAc,GAEE,UAArB1gE,EAAYz8C,QACrBigH,EACqB,IACnBxjE,EAAY0gE,aAAc,KAMzB6C,EAAiB,GAAKC,EAAiB,GACxCD,EAAiB,IACnBhgG,EAAG+8F,mBAAmB,SACtBiD,KAEEC,EAAiB,IACnBjgG,EAAG+8F,mBAAmB,SACtBkD,KAIJ,IAAI9rH,EAAM+iD,EAASmF,wBAAwBr8B,EAAGs8F,cAC1Ct8F,EAAGu8F,sBACPv8F,EAAGq8F,aAAa5hJ,QAAQ,SAASgiF,EAAajjB,GAG5C,IAAIpzB,EAAQq2C,EAAYr2C,MACpBpG,EAAOy8C,EAAYz8C,KACnBsS,EAAMmqC,EAAYnqC,KAAO4kC,EAASE,qBACtCqF,EAAYnqC,IAAMA,EAEbmqC,EAAYC,cACfD,EAAYC,YAAc18B,EAAGw9F,mBAAmBhkF,EAC5CxZ,EAAG27F,cAGT,IAAIhC,EAAoBhsJ,EAAO6nJ,aAAa+J,gBAAgBv/G,GAGxD0kC,EAAc,QAChBi1E,EAAkBt/D,OAASs/D,EAAkBt/D,OAAOvnD,OAChD,SAAS6B,GACP,MAAsB,QAAfA,EAAMrmC,QAGrBqrJ,EAAkBt/D,OAAO5/E,QAAQ,SAASk6B,GAGrB,SAAfA,EAAMrmC,WAC0C6F,IAAhDwgC,EAAMmkD,WAAW,6BACnBnkD,EAAMmkD,WAAW,2BAA6B,OAKlD,IAAIiE,EAAyBN,EAAYM,wBAA0B,CAAC,CAClEvyD,KAAgC,MAAzB,EAAIgvC,EAAgB,KAEzBpzB,GAEEs+B,GAAe,OAAkB,UAAT1kC,IACvB+8C,EAAuB,GAAGzB,MAC7ByB,EAAuB,GAAGzB,IAAM,CAC9B9wD,KAAMuyD,EAAuB,GAAGvyD,KAAO,IAKzCiyD,EAAY0gE,cACd1gE,EAAYK,YAAc,IAAInvF,EAAO2xJ,eACjC7iE,EAAYG,cAAe58C,IAGjCy8C,EAAYk9D,kBAAoBA,EAChCl9D,EAAYM,uBAAyBA,IAIP,eAA5B/8B,EAAGo8F,QAAQR,eACbznH,GAAO,kBAAoB6rB,EAAGq8F,aAAa/lJ,IAAI,SAASrH,GACtD,OAAOA,EAAEqjD,MACRv7C,KAAK,KAAO,QAEjBo9B,GAAO,4BAEP6rB,EAAGq8F,aAAa5hJ,QAAQ,SAASgiF,EAAajjB,GAC5CrlC,GAAOqoD,EAAkBC,EAAaA,EAAYk9D,kBAC9C,QAASl9D,EAAY12D,OAAQi6B,EAAGw8F,WACpCroH,GAAO,oBAEHsoD,EAAYC,aAAwC,QAAzB18B,EAAG07F,mBACX,IAAlBliF,GAAwBxZ,EAAG27F,cAC9Bl/D,EAAYC,YAAYwjE,qBAAqBzlJ,QAAQ,SAAS82B,GAC5DA,EAAKN,UAAY,EACjBkD,GAAO,KAAO+iD,EAASe,eAAe1mD,GAAQ,SAGV,cAAlCkrD,EAAYC,YAAYzlB,QAC1B9iC,GAAO,8BAKb,IAAIzC,EAAO,IAAI/jC,EAAOuxE,sBAAsB,CAC1Cl0D,KAAM,QACNmpB,IAAKA,IAEP,OAAOyQ,QAAQC,QAAQnT,IAGzBoQ,EAAkBnyC,UAAU4vE,aAAe,WACzC,IAAIvf,EAAKxmD,KAET,GAAIwmD,EAAGy8F,UACL,OAAO73G,QAAQE,OAAOi2G,EAAU,oBAC5B,0CAGN,IAAI5mH,EAAM+iD,EAASmF,wBAAwBr8B,EAAGs8F,cAC1Ct8F,EAAGu8F,sBACHv8F,EAAG27F,cACLxnH,GAAO,kBAAoB6rB,EAAGq8F,aAAa/lJ,IAAI,SAASrH,GACtD,OAAOA,EAAEqjD,MACRv7C,KAAK,KAAO,QAEjB,IAAIopJ,EAAuBjpE,EAASK,cAChCv3B,EAAGwe,kBAAkBrqC,KAAK39B,OAAS,EACvCwpD,EAAGq8F,aAAa5hJ,QAAQ,SAASgiF,EAAajjB,GAC5C,KAAIA,EAAgB,EAAI2mF,GAGxB,GAAI1jE,EAAYkiE,cACdxqH,GAAO,+DAEQsoD,EAAYnqC,IAAM,WAHnC,CASE,IAAIrH,EADN,GAAIwxC,EAAY12D,OAEW,UAArB02D,EAAYz8C,KACdiL,EAAawxC,EAAY12D,OAAOyZ,iBAAiB,GACnB,UAArBi9C,EAAYz8C,OACrBiL,EAAawxC,EAAY12D,OAAO2Z,iBAAiB,IAE/CuL,GAEEy5B,GAAe,OAA8B,UAArB+X,EAAYz8C,OACnCy8C,EAAYM,uBAAuB,GAAGzB,MACzCmB,EAAYM,uBAAuB,GAAGzB,IAAM,CAC1C9wD,KAAMiyD,EAAYM,uBAAuB,GAAGvyD,KAAO,IAO3D,IAAIqvH,EAAqBH,EACrBj9D,EAAYk9D,kBACZl9D,EAAYm9D,qBAEHC,EAAmBx/D,OAAOvnD,OAAO,SAAS1kC,GACrD,MAAgC,QAAzBA,EAAEE,KAAKqZ,gBACbnR,QACYimF,EAAYM,uBAAuB,GAAGzB,YAC5CmB,EAAYM,uBAAuB,GAAGzB,IAG/CnnD,GAAOqoD,EAAkBC,EAAao9D,EAClC,SAAUp9D,EAAY12D,OAAQi6B,EAAGw8F,WACjC//D,EAAYf,gBACZe,EAAYf,eAAeI,cAC7B3nD,GAAO,uBAIX,IAAIzC,EAAO,IAAI/jC,EAAOuxE,sBAAsB,CAC1Cl0D,KAAM,SACNmpB,IAAKA,IAEP,OAAOyQ,QAAQC,QAAQnT,IAGzBoQ,EAAkBnyC,UAAU+qE,gBAAkB,SAAS5pC,GACrD,IACI2mD,EADAz3B,EAAKxmD,KAET,OAAIs3B,QAA2C38B,IAA5B28B,EAAU0oC,gBACzB1oC,EAAUmpC,OACLr1B,QAAQE,OAAO,IAAIjqC,UAAU,qCAI/B,IAAI+pC,QAAQ,SAASC,EAASC,GACnC,IAAKkb,EAAGwe,kBACN,OAAO15B,EAAOi2G,EAAU,oBACpB,2DACC,GAAKjqH,GAAqC,KAAxBA,EAAUA,UAa5B,CACL,IAAI0oC,EAAgB1oC,EAAU0oC,cAC9B,GAAI1oC,EAAUmpC,OACZ,IAAK,IAAIlsE,EAAI,EAAGA,EAAIiyD,EAAGq8F,aAAa7lJ,OAAQzI,IAC1C,GAAIiyD,EAAGq8F,aAAatuJ,GAAGukD,MAAQxhB,EAAUmpC,OAAQ,CAC/CT,EAAgBzrE,EAChB,MAIN,IAAI0uF,EAAcz8B,EAAGq8F,aAAa7iF,GAClC,IAAIijB,EAmCF,OAAO33C,EAAOi2G,EAAU,iBACpB,8BAnCJ,GAAIt+D,EAAYkiE,cACd,OAAO95G,IAET,IAAItT,EAAO9iC,OAAOy5B,KAAK4I,EAAUA,WAAWt6B,OAAS,EACjD0gF,EAASU,eAAe9mD,EAAUA,WAAa,GAEnD,GAAsB,QAAlBS,EAAKhlB,WAAqC,IAAdglB,EAAKvB,MAA4B,IAAduB,EAAKvB,MACtD,OAAO6U,IAGT,GAAItT,EAAKN,WAAgC,IAAnBM,EAAKN,UACzB,OAAO4T,IAIT,IAAsB,IAAlB20B,GAAwBA,EAAgB,GACxCijB,EAAYi+D,eAAiB16F,EAAGq8F,aAAa,GAAG3B,gBAC7CD,EAAkBh+D,EAAYi+D,aAAcnpH,GAC/C,OAAOuT,EAAOi2G,EAAU,iBACpB,8BAKR,IAAIqF,EAAkBtvH,EAAUA,UAAUy4B,OACJ,IAAlC62F,EAAgBtoJ,QAAQ,QAC1BsoJ,EAAkBA,EAAgBloI,OAAO,KAE3Cu/D,EAAWP,EAASK,cAAcv3B,EAAGwe,kBAAkBrqC,MAC9CqlC,EAAgB,IAAM,MAC1BjoC,EAAKvmB,KAAOo1I,EAAkB,qBAC7B,OACNpgG,EAAGwe,kBAAkBrqC,IAAMsjD,EAAS1gF,KAAK,SAxD3C,IAAK,IAAIb,EAAI,EAAGA,EAAI8pD,EAAGq8F,aAAa7lJ,SAC9BwpD,EAAGq8F,aAAanmJ,GAAGyoJ,gBAGvB3+F,EAAGq8F,aAAanmJ,GAAGwkJ,aAAaI,mBAAmB,KACnDrjE,EAAWP,EAASK,cAAcv3B,EAAGwe,kBAAkBrqC,MAC9Cj+B,EAAI,IAAM,0BACnB8pD,EAAGwe,kBAAkBrqC,IAAMsjD,EAAS1gF,KAAK,KACrCipD,EAAG27F,cARmCzlJ,KA8D9C2uC,OAIJ/C,EAAkBnyC,UAAU+kG,SAAW,WACrC,IAAI1e,EAAW,GACfx8E,KAAK6iJ,aAAa5hJ,QAAQ,SAASgiF,GACjC,CAAC,YAAa,cAAe,cAAe,eACxC,iBAAiBhiF,QAAQ,SAASmqG,GAC5BnoB,EAAYmoB,IACd5uB,EAAS3+E,KAAKolF,EAAYmoB,GAAQlQ,gBAa5C,OAAO,IAAI9vD,QAAQ,SAASC,GAE1B,IAAIoxC,EAAU,IAAI9xD,IAClBygB,QAAQ+K,IAAIqmC,GAAUt0C,KAAK,SAASoE,GAClCA,EAAIrrC,QAAQ,SAASgP,GACnBhb,OAAOy5B,KAAKze,GAAQhP,QAAQ,SAAShC,GAdxB,IAASgyG,EAepBhhG,EAAOhR,GAAIuS,KAdV,CACLq1I,WAAY,cACZC,YAAa,eACbC,cAAe,iBACfhJ,eAAgB,kBAChBC,gBAAiB,qBANO/sC,EAeWhhG,EAAOhR,IARrCuS,OAASy/F,EAAKz/F,KASfirE,EAAQrwD,IAAIntB,EAAIgR,EAAOhR,QAG3BosC,EAAQoxC,QAMd,IAAIe,EAAU,CAAC,cAAe,gBA8D9B,OA7DAA,EAAQv8E,QAAQ,SAASmqG,GACvB,IAAIwxC,EAAet0G,EAAkBnyC,UAAUi1G,GAC/C9iE,EAAkBnyC,UAAUi1G,GAAU,WACpC,IAAIztG,EAAOC,UACX,MAAuB,mBAAZD,EAAK,IACO,mBAAZA,EAAK,GACPi/I,EAAa9+I,MAAMkC,KAAM,CAACpC,UAAU,KAC1CsqC,KAAK,SAAS04C,GACU,mBAAZjjF,EAAK,IACdA,EAAK,GAAGG,MAAM,KAAM,CAAC8iF,KAEtB,SAAShxE,GACa,mBAAZjS,EAAK,IACdA,EAAK,GAAGG,MAAM,KAAM,CAAC8R,MAIpBgtI,EAAa9+I,MAAMkC,KAAMpC,eAIpC4/E,EAAU,CAAC,sBAAuB,uBAAwB,oBAClDv8E,QAAQ,SAASmqG,GACvB,IAAIwxC,EAAet0G,EAAkBnyC,UAAUi1G,GAC/C9iE,EAAkBnyC,UAAUi1G,GAAU,WACpC,IAAIztG,EAAOC,UACX,MAAuB,mBAAZD,EAAK,IACO,mBAAZA,EAAK,GACPi/I,EAAa9+I,MAAMkC,KAAMpC,WAC/BsqC,KAAK,WACmB,mBAAZvqC,EAAK,IACdA,EAAK,GAAGG,MAAM,OAEf,SAAS8R,GACa,mBAAZjS,EAAK,IACdA,EAAK,GAAGG,MAAM,KAAM,CAAC8R,MAIpBgtI,EAAa9+I,MAAMkC,KAAMpC,cAMpC,CAAC,YAAYqD,QAAQ,SAASmqG,GAC5B,IAAIwxC,EAAet0G,EAAkBnyC,UAAUi1G,GAC/C9iE,EAAkBnyC,UAAUi1G,GAAU,WACpC,IAAIztG,EAAOC,UACX,MAAuB,mBAAZD,EAAK,GACPi/I,EAAa9+I,MAAMkC,KAAMpC,WAC/BsqC,KAAK,WACmB,mBAAZvqC,EAAK,IACdA,EAAK,GAAGG,MAAM,QAIb8+I,EAAa9+I,MAAMkC,KAAMpC,cAI7B0qC,iCClnDTt0C,EAAOD,QAAU,SAASI,GACxB,IAAI6zC,EAAY7zC,GAAUA,EAAO6zC,UAc7B23G,EAAmB33G,EAAUC,aAAasD,aAC1Cx1C,KAAKiyC,EAAUC,cACnBD,EAAUC,aAAasD,aAAe,SAAS32C,GAC7C,OAAO+qJ,EAAiB/qJ,GAAG42C,MAAM,SAASxsC,GACxC,OAAOosC,QAAQE,OAhBF,SAAStsC,GACxB,MAAO,CACLlK,KAAM,CAACkqJ,sBAAuB,mBAAmBhgJ,EAAElK,OAASkK,EAAElK,KAC9Dua,QAASrQ,EAAEqQ,QACX6nC,WAAYl4C,EAAEk4C,WACdz2C,SAAU,WACR,OAAOT,KAAKlL,OAUQiqJ,CAAW//I,2QCpBvC,IAAI6H,EAAQ9L,EAAQ,IAEhB4+I,EAAc,CAChBQ,YAAa,SAAShmJ,GACE,WAAlBsL,EAAOtL,KAAuBA,EAAOm0C,mBAAuB,YAC5Dn0C,EAAOm0C,kBAAkBnyC,WAC3BlB,OAAOC,eAAef,EAAOm0C,kBAAkBnyC,UAAW,UAAW,CACnEf,IAAK,WACH,OAAO4K,KAAK+6I,UAEd3uH,IAAK,SAASttB,GACRkB,KAAK+6I,WACP/6I,KAAK6/C,oBAAoB,QAAS7/C,KAAK+6I,UACvC/6I,KAAK6/C,oBAAoB,YAAa7/C,KAAKi7I,eAE7Cj7I,KAAKuqC,iBAAiB,QAASvqC,KAAK+6I,SAAWj8I,GAC/CkB,KAAKuqC,iBAAiB,YAAavqC,KAAKi7I,aAAe,SAASj8I,GAC9DA,EAAEutB,OAAOiiB,YAAYvtC,QAAQ,SAAS2rC,GACpC,IAAI1X,EAAQ,IAAImmH,MAAM,SACtBnmH,EAAM0X,MAAQA,EACd1X,EAAMimH,SAAW,CAACvuG,MAAOA,GACzB1X,EAAM+tD,YAAc,CAACk4D,SAAUjmH,EAAMimH,UACrCjmH,EAAMiX,QAAU,CAACntC,EAAEutB,QACnBvsB,KAAKs7I,cAAcpmH,IACnBn/B,KAAKiK,QACPjK,KAAKiK,UAIS,WAAlBP,EAAOtL,IAAuBA,EAAO6yJ,eACpC,aAAc7yJ,EAAO6yJ,cAAc7wJ,aAClC,gBAAiBhC,EAAO6yJ,cAAc7wJ,YAC1ClB,OAAOC,eAAef,EAAO6yJ,cAAc7wJ,UAAW,cAAe,CACnEf,IAAK,WACH,MAAO,CAAC+lJ,SAAUn7I,KAAKm7I,cAM/BjB,iBAAkB,SAAS/lJ,GAEH,WAAlBsL,EAAOtL,MACLA,EAAO+nJ,kBACP,cAAe/nJ,EAAO+nJ,iBAAiB/lJ,WAEzClB,OAAOC,eAAef,EAAO+nJ,iBAAiB/lJ,UAAW,YAAa,CACpEf,IAAK,WACH,OAAO4K,KAAKinJ,cAEd76H,IAAK,SAASG,GACZvsB,KAAKinJ,aAAe16H,OAO9ButH,mBAAoB,SAAS3lJ,GAC3B,IAAIolJ,EAAiB1yI,EAAM+qD,cAAcz9D,GAEzC,GAAsB,WAAlBsL,EAAOtL,KAAyBA,EAAOm0C,mBACvCn0C,EAAO+yJ,sBADX,CAKK/yJ,EAAOm0C,oBACVn0C,EAAOm0C,kBAAoB,SAASg1G,EAAU7yG,GAC5C,GAAI8uG,EAAer1H,QAAU,IAGvBo5H,GAAYA,EAASpuF,WAAY,CAEnC,IADA,IAAIquF,EAAgB,GACXhpJ,EAAI,EAAGA,EAAI+oJ,EAASpuF,WAAWlyD,OAAQzI,IAAK,CACnD,IAAIy0D,EAASs0F,EAASpuF,WAAW36D,GACjC,GAAIy0D,EAAO5yD,eAAe,QACxB,IAAK,IAAIsG,EAAI,EAAGA,EAAIssD,EAAOuB,KAAKvtD,OAAQN,IAAK,CAC3C,IAAIyqJ,EAAY,CACdh4G,IAAK6Z,EAAOuB,KAAK7tD,IAEoB,IAAnCssD,EAAOuB,KAAK7tD,GAAG4B,QAAQ,UACzB6oJ,EAAU3mG,SAAWwI,EAAOxI,SAC5B2mG,EAAU1lC,WAAaz4D,EAAOy4D,YAEhC87B,EAAc1/I,KAAKspJ,QAGrB5J,EAAc1/I,KAAKy/I,EAASpuF,WAAW36D,IAG3C+oJ,EAASpuF,WAAaquF,EAG1B,OAAO,IAAIppJ,EAAO+yJ,qBAAqB5J,EAAU7yG,IAEnDt2C,EAAOm0C,kBAAkBnyC,UACrBhC,EAAO+yJ,qBAAqB/wJ,UAG5BhC,EAAO+yJ,qBAAqB1J,qBAC9BvoJ,OAAOC,eAAef,EAAOm0C,kBAAmB,sBAAuB,CACrElzC,IAAK,WACH,OAAOjB,EAAO+yJ,qBAAqB1J,uBAKzCrpJ,EAAOuxE,sBAAwBvxE,EAAOizJ,yBACtCjzJ,EAAO6sE,gBAAkB7sE,EAAOkzJ,oBAIlC,CAAC,sBAAuB,uBAAwB,mBAC3CpmJ,QAAQ,SAASmqG,GAChB,IAAIwxC,EAAezoJ,EAAOm0C,kBAAkBnyC,UAAUi1G,GACtDj3G,EAAOm0C,kBAAkBnyC,UAAUi1G,GAAU,WAI3C,OAHAxtG,UAAU,GAAK,IAAiB,oBAAXwtG,EACjBj3G,EAAO6sE,gBACP7sE,EAAOuxE,uBAAuB9nE,UAAU,IACrCg/I,EAAa9+I,MAAMkC,KAAMpC,cAKxC,IAAIsgJ,EACA/pJ,EAAOm0C,kBAAkBnyC,UAAU+qE,gBACvC/sE,EAAOm0C,kBAAkBnyC,UAAU+qE,gBAAkB,WACnD,OAAKtjE,UAAU,GAMRsgJ,EAAsBpgJ,MAAMkC,KAAMpC,YALnCA,UAAU,IACZA,UAAU,GAAGE,MAAM,MAEdstC,QAAQC,YAMnB,IASIi8G,EAAmB,CACrBT,WAAY,cACZC,YAAa,eACbC,cAAe,iBACfhJ,eAAgB,kBAChBC,gBAAiB,oBAGfuJ,EAAiBpzJ,EAAOm0C,kBAAkBnyC,UAAU+kG,SACxD/mG,EAAOm0C,kBAAkBnyC,UAAU+kG,SAAW,SAC5CyiD,EACA6J,EACAC,GAEA,OAAOF,EAAezpJ,MAAMkC,KAAM,CAAC29I,GAAY,OAC5Cz1G,KAAK,SAASjU,GAIb,GAHIslH,EAAer1H,QAAU,KAC3B+P,EA1BW,SAASA,GAC1B,IAAIn3B,EAAM,IAAI6tB,IAKd,OAJA11B,OAAOy5B,KAAKuF,GAAOhzB,QAAQ,SAASnL,GAClCgH,EAAIsvB,IAAIt2B,EAAKm+B,EAAMn+B,IACnBgH,EAAIhH,GAAOm+B,EAAMn+B,KAEZgH,EAoBOmhJ,CAAahqH,IAEnBslH,EAAer1H,QAAU,KAAOsjI,EAGlC,IACEvzH,EAAMhzB,QAAQ,SAASgwG,GACrBA,EAAKz/F,KAAO81I,EAAiBr2C,EAAKz/F,OAASy/F,EAAKz/F,OAElD,MAAOxS,GACP,GAAe,cAAXA,EAAElK,KACJ,MAAMkK,EAGRi1B,EAAMhzB,QAAQ,SAASgwG,EAAM18G,GAC3B0/B,EAAM7H,IAAI73B,EAAGU,OAAOwkF,OAAO,GAAIw3B,EAAM,CACnCz/F,KAAM81I,EAAiBr2C,EAAKz/F,OAASy/F,EAAKz/F,UAKlD,OAAOyiB,IAERiU,KAAKs/G,EAAQC,OAMtBzzJ,EAAOD,QAAU,CACfomJ,YAAaR,EAAYQ,YACzBD,iBAAkBP,EAAYO,iBAC9BJ,mBAAoBH,EAAYG,mBAChCE,iBAAkBj/I,EAAQ,yQCpM5B,IAAI8L,EAAQ9L,EAAQ,IAChBu+I,EAAUzyI,EAAM2I,IAGpBxb,EAAOD,QAAU,SAASI,GACxB,IAAIolJ,EAAiB1yI,EAAM+qD,cAAcz9D,GACrC6zC,EAAY7zC,GAAUA,EAAO6zC,UAC7By3G,EAAmBtrJ,GAAUA,EAAOsrJ,iBAEpCV,EAAa,SAAS//I,GACxB,MAAO,CACLlK,KAAM,CACJ4yJ,cAAe,mBACfC,kBAAmB,YACnB3I,sBAAuB,kBACvB4I,cAAe,mBACf5oJ,EAAElK,OAASkK,EAAElK,KACfua,QAAS,CACPw4I,6BAA8B,wFAE9B7oJ,EAAEqQ,UAAYrQ,EAAEqQ,QAClB6nC,WAAYl4C,EAAEk4C,WACdz2C,SAAU,WACR,OAAOT,KAAKlL,MAAQkL,KAAKqP,SAAW,MAAQrP,KAAKqP,WAMnDy4I,EAAgB,SAASh1H,EAAahW,EAAWk/F,GACnD,IAAI+rC,EAAqB,SAASnzJ,GAChC,GAAiB,WAAb6K,EAAO7K,IAAkBA,EAAEmG,QAC7B,OAAOnG,EAET,IAAImG,EAAU,GAqCd,OApCA9F,OAAOy5B,KAAK95B,GAAGqM,QAAQ,SAASnL,GAC9B,GAAY,YAARA,GAA6B,aAARA,GAA8B,gBAARA,EAA/C,CAGA,IAAIT,EAAIT,EAAEkB,GAA0B,WAAlB2J,EAAO7K,EAAEkB,IACvBlB,EAAEkB,GAAO,CAAC4rC,MAAO9sC,EAAEkB,IAavB,QAZc6E,IAAVtF,EAAEsuB,UACQhpB,IAAVtF,EAAEssC,UAAiChnC,IAAZtF,EAAEi5C,OAC3BvzC,EAAQ8C,KAAK/H,QAEC6E,IAAZtF,EAAEi5C,QACmB,iBAAZj5C,EAAEi5C,MACXj5C,EAAGsuB,IAAMtuB,EAAEssC,IAAMtsC,EAAEi5C,MAEnB15C,EAAEkB,GAAOT,EAAEi5C,aAENj5C,EAAEi5C,YAEK3zC,IAAZtF,EAAEqsC,MAAqB,CACzB9sC,EAAE4pJ,SAAW5pJ,EAAE4pJ,UAAY,GAC3B,IAAIF,EAAK,GACc,iBAAZjpJ,EAAEqsC,MACX48G,EAAGxoJ,GAAO,CAAC6tB,IAAKtuB,EAAEqsC,MAAOC,IAAKtsC,EAAEqsC,OAEhC48G,EAAGxoJ,GAAOT,EAAEqsC,MAEd9sC,EAAE4pJ,SAAS3gJ,KAAKygJ,UACTjpJ,EAAEqsC,MACJzsC,OAAOy5B,KAAKr5B,GAAG2H,eACXpI,EAAEkB,OAIXiF,EAAQiC,SACVpI,EAAEmG,QAAUA,GAEPnG,GAaT,OAXAk+B,EAAc/b,KAAKuK,MAAMvK,KAAKyK,UAAUsR,IACpCymH,EAAer1H,QAAU,KAC3Bo1H,EAAQ,SAAWviI,KAAKyK,UAAUsR,IAC9BA,EAAY2P,QACd3P,EAAY2P,MAAQslH,EAAmBj1H,EAAY2P,QAEjD3P,EAAYyO,QACdzO,EAAYyO,MAAQwmH,EAAmBj1H,EAAYyO,QAErD+3G,EAAQ,SAAWviI,KAAKyK,UAAUsR,KAE7BkV,EAAU6pB,gBAAgB/+B,EAAahW,EAAW,SAAS9d,GAChEg9G,EAAQ+iC,EAAW//I,OA6BvB,GAjBKgpC,EAAUC,eACbD,EAAUC,aAAe,CAACsD,aARD,SAASzY,GAClC,OAAO,IAAIsY,QAAQ,SAASC,EAASC,GACnCw8G,EAAch1H,EAAauY,EAASC,MAOpCf,iBAAkB,aAClBsV,oBAAqB,eAGzB7X,EAAUC,aAAaF,iBACnBC,EAAUC,aAAaF,kBAAoB,WACzC,OAAO,IAAIqD,QAAQ,SAASC,GAK1BA,EAJY,CACV,CAAC7E,KAAM,aAAcxD,SAAU,UAAWsE,MAAO,GAAIH,QAAS,IAC9D,CAACX,KAAM,aAAcxD,SAAU,UAAWsE,MAAO,GAAIH,QAAS,SAMpEoyG,EAAer1H,QAAU,GAAI,CAE/B,IAAI8jI,EACAhgH,EAAUC,aAAaF,iBAAiBhyC,KAAKiyC,EAAUC,cAC3DD,EAAUC,aAAaF,iBAAmB,WACxC,OAAOigH,IAAsB9/G,UAAKvtC,EAAW,SAASqE,GACpD,GAAe,kBAAXA,EAAElK,KACJ,MAAO,GAET,MAAMkK,KAIZ,GAAIu6I,EAAer1H,QAAU,GAAI,CAC/B,IAAIy7H,EAAmB33G,EAAUC,aAAasD,aAC1Cx1C,KAAKiyC,EAAUC,cACnBD,EAAUC,aAAasD,aAAe,SAAS32C,GAC7C,OAAO+qJ,EAAiB/qJ,GAAGszC,KAAK,SAAS3b,GAEvC,GAAI33B,EAAE6tC,QAAUlW,EAAOyZ,iBAAiBhpC,QACpCpI,EAAE2sC,QAAUhV,EAAO2Z,iBAAiBlpC,OAItC,MAHAuvB,EAAOiiB,YAAYvtC,QAAQ,SAAS2rC,GAClCA,EAAM5d,SAEF,IAAIytH,aAAa,oCACA,iBAEzB,OAAOlwH,GACN,SAASvtB,GACV,OAAOosC,QAAQE,OAAOyzG,EAAW//I,OAIvC,KAAMu6I,EAAer1H,QAAU,IAC3B,oBAAqB8jB,EAAUC,aAAa42G,2BAA4B,CAC1E,IAAIH,EAAQ,SAAS5iJ,EAAKmH,EAAGC,GACvBD,KAAKnH,KAASoH,KAAKpH,KACrBA,EAAIoH,GAAKpH,EAAImH,UACNnH,EAAImH,KAIXglJ,EAAqBjgH,EAAUC,aAAasD,aAC5Cx1C,KAAKiyC,EAAUC,cAUnB,GATAD,EAAUC,aAAasD,aAAe,SAAS32C,GAM7C,MALiB,WAAb6K,EAAO7K,IAAqC,WAAnB6K,EAAO7K,EAAE6tC,SACpC7tC,EAAImiB,KAAKuK,MAAMvK,KAAKyK,UAAU5sB,IAC9B8pJ,EAAM9pJ,EAAE6tC,MAAO,kBAAmB,sBAClCi8G,EAAM9pJ,EAAE6tC,MAAO,mBAAoB,wBAE9BwlH,EAAmBrzJ,IAGxB6qJ,GAAoBA,EAAiBtpJ,UAAU47C,YAAa,CAC9D,IAAIm2G,EAAoBzI,EAAiBtpJ,UAAU47C,YACnD0tG,EAAiBtpJ,UAAU47C,YAAc,WACvC,IAAIj2C,EAAMosJ,EAAkBpqJ,MAAMkC,KAAMpC,WAGxC,OAFA8gJ,EAAM5iJ,EAAK,qBAAsB,mBACjC4iJ,EAAM5iJ,EAAK,sBAAuB,oBAC3BA,GAIX,GAAI2jJ,GAAoBA,EAAiBtpJ,UAAUs4C,iBAAkB,CACnE,IAAI05G,EAAyB1I,EAAiBtpJ,UAAUs4C,iBACxDgxG,EAAiBtpJ,UAAUs4C,iBAAmB,SAAS75C,GAMrD,MALkB,UAAdoL,KAAKwmC,MAAiC,WAAb/mC,EAAO7K,KAClCA,EAAImiB,KAAKuK,MAAMvK,KAAKyK,UAAU5sB,IAC9B8pJ,EAAM9pJ,EAAG,kBAAmB,sBAC5B8pJ,EAAM9pJ,EAAG,mBAAoB,wBAExBuzJ,EAAuBrqJ,MAAMkC,KAAM,CAACpL,MAIjDozC,EAAUuD,aAAe,SAASzY,EAAahW,EAAWk/F,GACxD,GAAIu9B,EAAer1H,QAAU,GAC3B,OAAO4jI,EAAch1H,EAAahW,EAAWk/F,GAG/Cn1G,EAAMyqD,WAAW,yBACb,uCACJtpB,EAAUC,aAAasD,aAAazY,GAAaoV,KAAKprB,EAAWk/F,wQCtMrE,IAAIn1G,EAAQ9L,EAAQ,IAEhB6+I,EAAa,CAOfc,oBAAqB,SAASvmJ,GAC5B,GAAsB,WAAlBsL,EAAOtL,IAAwBA,EAAOm0C,kBAA1C,CA+BA,GA5BM,oBAAqBn0C,EAAOm0C,kBAAkBnyC,YAClDhC,EAAOm0C,kBAAkBnyC,UAAUkmJ,gBAAkB,WAInD,OAHKr8I,KAAKooJ,gBACRpoJ,KAAKooJ,cAAgB,IAEhBpoJ,KAAKooJ,gBAGV,kBAAmBj0J,EAAOm0C,kBAAkBnyC,YAChDhC,EAAOm0C,kBAAkBnyC,UAAUkyJ,cAAgB,SAASppJ,GAC1D,IAAIgR,EAAS,KAeb,OAdIjQ,KAAKooJ,eACPpoJ,KAAKooJ,cAAcnnJ,QAAQ,SAASsrB,GAC9BA,EAAOttB,KAAOA,IAChBgR,EAASsc,KAIXvsB,KAAKsoJ,gBACPtoJ,KAAKsoJ,eAAernJ,QAAQ,SAASsrB,GAC/BA,EAAOttB,KAAOA,IAChBgR,EAASsc,KAIRtc,MAGL,cAAe9b,EAAOm0C,kBAAkBnyC,WAAY,CACxD,IAAIoyJ,EAAYp0J,EAAOm0C,kBAAkBnyC,UAAUq2C,SACnDr4C,EAAOm0C,kBAAkBnyC,UAAUo/H,UAAY,SAAShpG,GACjDvsB,KAAKooJ,gBACRpoJ,KAAKooJ,cAAgB,KAEqB,IAAxCpoJ,KAAKooJ,cAAc9pJ,QAAQiuB,IAC7BvsB,KAAKooJ,cAAcvqJ,KAAK0uB,GAE1B,IAAI3J,EAAO5iB,KACXusB,EAAOiiB,YAAYvtC,QAAQ,SAAS2rC,GAClC27G,EAAU7zJ,KAAKkuB,EAAMgqB,EAAOrgB,MAIhCp4B,EAAOm0C,kBAAkBnyC,UAAUq2C,SAAW,SAASI,EAAOrgB,GACxDA,IACGvsB,KAAKooJ,eAEyC,IAAxCpoJ,KAAKooJ,cAAc9pJ,QAAQiuB,IACpCvsB,KAAKooJ,cAAcvqJ,KAAK0uB,GAFxBvsB,KAAKooJ,cAAgB,CAAC77H,IAK1Bg8H,EAAU7zJ,KAAKsL,KAAM4sC,EAAOrgB,IAG1B,iBAAkBp4B,EAAOm0C,kBAAkBnyC,YAC/ChC,EAAOm0C,kBAAkBnyC,UAAUw/H,aAAe,SAASppG,GACpDvsB,KAAKooJ,gBACRpoJ,KAAKooJ,cAAgB,IAEvB,IAAI/pJ,EAAQ2B,KAAKooJ,cAAc9pJ,QAAQiuB,GACvC,IAAe,IAAXluB,EAAJ,CAGA2B,KAAKooJ,cAAc9qJ,OAAOe,EAAO,GACjC,IAAIukB,EAAO5iB,KACP01C,EAASnpB,EAAOiiB,YACpBxuC,KAAK+1H,aAAa90H,QAAQ,SAAS+0H,IACK,IAAlCtgF,EAAOp3C,QAAQ03H,EAAOppF,QACxBhqB,EAAK81D,YAAYs9C,UAM3B2kB,qBAAsB,SAASxmJ,GACP,WAAlBsL,EAAOtL,IAAwBA,EAAOm0C,oBAGpC,qBAAsBn0C,EAAOm0C,kBAAkBnyC,YACnDhC,EAAOm0C,kBAAkBnyC,UAAUmtJ,iBAAmB,WACpD,OAAOtjJ,KAAKsoJ,eAAiBtoJ,KAAKsoJ,eAAiB,KAGjD,gBAAiBn0J,EAAOm0C,kBAAkBnyC,WAC9ClB,OAAOC,eAAef,EAAOm0C,kBAAkBnyC,UAAW,cAAe,CACvEf,IAAK,WACH,OAAO4K,KAAKwoJ,cAEdp8H,IAAK,SAASttB,GACRkB,KAAKwoJ,eACPxoJ,KAAK6/C,oBAAoB,YAAa7/C,KAAKwoJ,cAC3CxoJ,KAAK6/C,oBAAoB,QAAS7/C,KAAKyoJ,mBAEzCzoJ,KAAKuqC,iBAAiB,YAAavqC,KAAKwoJ,aAAe1pJ,GACvDkB,KAAKuqC,iBAAiB,QAASvqC,KAAKyoJ,iBAAmB,SAASzpJ,GAC9D,IAAIutB,EAASvtB,EAAEmtC,QAAQ,GAIvB,GAHKnsC,KAAKsoJ,iBACRtoJ,KAAKsoJ,eAAiB,MAEpBtoJ,KAAKsoJ,eAAehqJ,QAAQiuB,IAAW,GAA3C,CAGAvsB,KAAKsoJ,eAAezqJ,KAAK0uB,GACzB,IAAI2I,EAAQ,IAAImmH,MAAM,aACtBnmH,EAAM3I,OAASvtB,EAAEmtC,QAAQ,GACzBnsC,KAAKs7I,cAAcpmH,KACnBn/B,KAAKiK,YAKfy6I,iBAAkB,SAAStmJ,GACzB,GAAsB,WAAlBsL,EAAOtL,IAAwBA,EAAOm0C,kBAA1C,CAGA,IAAInyC,EAAYhC,EAAOm0C,kBAAkBnyC,UACrC6rE,EAAc7rE,EAAU6rE,YACxB+D,EAAe5vE,EAAU4vE,aACzB7D,EAAsB/rE,EAAU+rE,oBAChC4D,EAAuB3vE,EAAU2vE,qBACjC5E,EAAkB/qE,EAAU+qE,gBAEhC/qE,EAAU6rE,YAAc,SAAS+X,EAAiB8lC,GAChD,IAAIpuG,EAAW7T,UAAUZ,QAAU,EAAKY,UAAU,GAAKA,UAAU,GAC7DiyC,EAAUmyB,EAAYlkE,MAAMkC,KAAM,CAACyR,IACvC,OAAKouG,GAGLhwE,EAAQ3H,KAAK6xC,EAAiB8lC,GACvBz0E,QAAQC,WAHNwE,GAMX15C,EAAU4vE,aAAe,SAASgU,EAAiB8lC,GACjD,IAAIpuG,EAAW7T,UAAUZ,QAAU,EAAKY,UAAU,GAAKA,UAAU,GAC7DiyC,EAAUk2B,EAAajoE,MAAMkC,KAAM,CAACyR,IACxC,OAAKouG,GAGLhwE,EAAQ3H,KAAK6xC,EAAiB8lC,GACvBz0E,QAAQC,WAHNwE,GAMX,IAAI64G,EAAe,SAAS9nE,EAAa7G,EAAiB8lC,GACxD,IAAIhwE,EAAUqyB,EAAoBpkE,MAAMkC,KAAM,CAAC4gF,IAC/C,OAAKi/B,GAGLhwE,EAAQ3H,KAAK6xC,EAAiB8lC,GACvBz0E,QAAQC,WAHNwE,GAKX15C,EAAU+rE,oBAAsBwmF,EAEhCA,EAAe,SAAS9nE,EAAa7G,EAAiB8lC,GACpD,IAAIhwE,EAAUi2B,EAAqBhoE,MAAMkC,KAAM,CAAC4gF,IAChD,OAAKi/B,GAGLhwE,EAAQ3H,KAAK6xC,EAAiB8lC,GACvBz0E,QAAQC,WAHNwE,GAKX15C,EAAU2vE,qBAAuB4iF,EAEjCA,EAAe,SAASpxH,EAAWyiD,EAAiB8lC,GAClD,IAAIhwE,EAAUqxB,EAAgBpjE,MAAMkC,KAAM,CAACs3B,IAC3C,OAAKuoF,GAGLhwE,EAAQ3H,KAAK6xC,EAAiB8lC,GACvBz0E,QAAQC,WAHNwE,GAKX15C,EAAU+qE,gBAAkBwnF,IAE9B1O,iBAAkB,SAAS7lJ,GACzB,IAAI6zC,EAAY7zC,GAAUA,EAAO6zC,UAE5BA,EAAUuD,eACTvD,EAAU8pB,mBACZ9pB,EAAUuD,aAAevD,EAAU8pB,mBAAmB/7D,KAAKiyC,GAClDA,EAAUC,cACjBD,EAAUC,aAAasD,eACzBvD,EAAUuD,aAAe,SAASzY,EAAas0F,EAAIuhC,GACjD3gH,EAAUC,aAAasD,aAAazY,GACnCoV,KAAKk/E,EAAIuhC,IACV5yJ,KAAKiyC,MAIbwyG,qBAAsB,SAASrmJ,GAE7B,IAAIkpJ,EAAqBlpJ,EAAOm0C,kBAChCn0C,EAAOm0C,kBAAoB,SAASg1G,EAAU7yG,GAC5C,GAAI6yG,GAAYA,EAASpuF,WAAY,CAEnC,IADA,IAAIquF,EAAgB,GACXhpJ,EAAI,EAAGA,EAAI+oJ,EAASpuF,WAAWlyD,OAAQzI,IAAK,CACnD,IAAIy0D,EAASs0F,EAASpuF,WAAW36D,IAC5By0D,EAAO5yD,eAAe,SACvB4yD,EAAO5yD,eAAe,QACxByQ,EAAMyqD,WAAW,mBAAoB,sBACrCtI,EAASjyC,KAAKuK,MAAMvK,KAAKyK,UAAUwnC,KAC5BuB,KAAOvB,EAAO7Z,WACd6Z,EAAO7Z,IACdouG,EAAc1/I,KAAKmrD,IAEnBu0F,EAAc1/I,KAAKy/I,EAASpuF,WAAW36D,IAG3C+oJ,EAASpuF,WAAaquF,EAExB,OAAO,IAAIF,EAAmBC,EAAU7yG,IAE1Ct2C,EAAOm0C,kBAAkBnyC,UAAYknJ,EAAmBlnJ,UAEpD,wBAAyBhC,EAAOm0C,mBAClCrzC,OAAOC,eAAef,EAAOm0C,kBAAmB,sBAAuB,CACrElzC,IAAK,WACH,OAAOioJ,EAAmBG,wBAKlC5C,0BAA2B,SAASzmJ,GAEZ,WAAlBsL,EAAOtL,IAAuBA,EAAOm0C,mBACpC,aAAcn0C,EAAO6yJ,cAAc7wJ,YAGnChC,EAAOy0J,gBACV3zJ,OAAOC,eAAef,EAAO6yJ,cAAc7wJ,UAAW,cAAe,CACnEf,IAAK,WACH,MAAO,CAAC+lJ,SAAUn7I,KAAKm7I,cAM/BN,sBAAuB,SAAS1mJ,GAC9B,IAAI00J,EAAkB10J,EAAOm0C,kBAAkBnyC,UAAU6rE,YACzD7tE,EAAOm0C,kBAAkBnyC,UAAU6rE,YAAc,SAASoiE,GACxD,IAAI59E,EAAKxmD,KACT,GAAIokI,EAAc,CAChB,IAAI0kB,EAAmBtiG,EAAGuiG,kBAAkBnvH,KAAK,SAASqpD,GACxD,OAAOA,EAAY+yC,OAAOppF,OACY,UAAlCq2C,EAAY+yC,OAAOppF,MAAMpG,QAEU,IAArC49F,EAAa7jB,qBAAiCuoC,EACb,aAA/BA,EAAiBtwH,UACnBswH,EAAiBE,aAAa,YACU,aAA/BF,EAAiBtwH,WAC1BswH,EAAiBE,aAAa,aAEc,IAArC5kB,EAAa7jB,qBACnBuoC,GACHtiG,EAAGyiG,eAAe,SAGpB,IAAIC,EAAmB1iG,EAAGuiG,kBAAkBnvH,KAAK,SAASqpD,GACxD,OAAOA,EAAY+yC,OAAOppF,OACY,UAAlCq2C,EAAY+yC,OAAOppF,MAAMpG,QAEU,IAArC49F,EAAa5jB,qBAAiC0oC,EACb,aAA/BA,EAAiB1wH,UACnB0wH,EAAiBF,aAAa,YACU,aAA/BE,EAAiB1wH,WAC1B0wH,EAAiBF,aAAa,aAEc,IAArC5kB,EAAa5jB,qBACnB0oC,GACH1iG,EAAGyiG,eAAe,SAGtB,OAAOJ,EAAgB/qJ,MAAM0oD,EAAI5oD,cAMvC5J,EAAOD,QAAU,CACf0mJ,iBAAkBb,EAAWa,iBAC7BC,oBAAqBd,EAAWc,oBAChCC,qBAAsBf,EAAWe,qBACjCX,iBAAkBJ,EAAWI,iBAC7BQ,qBAAsBZ,EAAWY,qBACjCI,0BAA2BhB,EAAWgB,0BACtCC,sBAAuBjB,EAAWiB,0RCtSpC,IAAIn9D,EAAW3iF,EAAQ,IACnB8L,EAAQ9L,EAAQ,IAqDpB/G,EAAOD,QAAU,CACfumJ,oBAAqB,SAASnmJ,GAG5B,KAAIA,EAAO6sE,iBAAmB,eAC1B7sE,EAAO6sE,gBAAgB7qE,WAD3B,CAKA,IAAIgzJ,EAAwBh1J,EAAO6sE,gBACnC7sE,EAAO6sE,gBAAkB,SAASrjE,GAEZ,WAAhB8B,EAAO9B,IAAqBA,EAAK25B,WACA,IAAjC35B,EAAK25B,UAAUh5B,QAAQ,SACzBX,EAAOoZ,KAAKuK,MAAMvK,KAAKyK,UAAU7jB,KAC5B25B,UAAY35B,EAAK25B,UAAU5Y,OAAO,IAIzC,IAAI0qI,EAAkB,IAAID,EAAsBxrJ,GAC5C0rJ,EAAkB3rE,EAASU,eAAezgF,EAAK25B,WAC/CgyH,EAAqBr0J,OAAOwkF,OAAO2vE,EACnCC,GAWJ,OARAC,EAAmBC,OAAS,WAC1B,MAAO,CACLjyH,UAAWgyH,EAAmBhyH,UAC9BmpC,OAAQ6oF,EAAmB7oF,OAC3BT,cAAespF,EAAmBtpF,cAClCwe,iBAAkB8qE,EAAmB9qE,mBAGlC8qE,GAlFb,SAAiCn1J,EAAQq1J,EAAiBxsI,GACxD,GAAK7oB,EAAOm0C,kBAAZ,CAGA,IAAIx1B,EAAQ3e,EAAOm0C,kBAAkBnyC,UACjCszJ,EAAyB32I,EAAMy3B,iBACnCz3B,EAAMy3B,iBAAmB,SAASm/G,EAAiBtiC,GACjD,GAAIsiC,IAAoBF,EACtB,OAAOC,EAAuB3rJ,MAAMkC,KAAMpC,WAE5C,IAAI4oH,EAAkB,SAASxnH,GAC7BooH,EAAGpqG,EAAQhe,KAIb,OAFAgB,KAAK2pJ,UAAY3pJ,KAAK2pJ,WAAa,GACnC3pJ,KAAK2pJ,UAAUviC,GAAMZ,EACdijC,EAAuB3rJ,MAAMkC,KAAM,CAAC0pJ,EACzCljC,KAGJ,IAAIojC,EAA4B92I,EAAM+sC,oBACtC/sC,EAAM+sC,oBAAsB,SAAS6pG,EAAiBtiC,GACpD,GAAIsiC,IAAoBF,IAAoBxpJ,KAAK2pJ,YACzC3pJ,KAAK2pJ,UAAUviC,GACrB,OAAOwiC,EAA0B9rJ,MAAMkC,KAAMpC,WAE/C,IAAIisJ,EAAc7pJ,KAAK2pJ,UAAUviC,GAEjC,cADOpnH,KAAK2pJ,UAAUviC,GACfwiC,EAA0B9rJ,MAAMkC,KAAM,CAAC0pJ,EAC5CG,KAGJ50J,OAAOC,eAAe4d,EAAO,KAAO02I,EAAiB,CACnDp0J,IAAK,WACH,OAAO4K,KAAK,MAAQwpJ,IAEtBp9H,IAAK,SAASg7F,GACRpnH,KAAK,MAAQwpJ,KACfxpJ,KAAK6/C,oBAAoB2pG,EACrBxpJ,KAAK,MAAQwpJ,WACVxpJ,KAAK,MAAQwpJ,IAElBpiC,GACFpnH,KAAKuqC,iBAAiBi/G,EAClBxpJ,KAAK,MAAQwpJ,GAAmBpiC,OA4CxC0iC,CAAwB31J,EAAQ,eAAgB,SAAS6K,GAOvD,OANIA,EAAEs4B,WACJriC,OAAOC,eAAe8J,EAAG,YAAa,CACpCxJ,MAAO,IAAIrB,EAAO6sE,gBAAgBhiE,EAAEs4B,WACpC2sH,SAAU,UAGPjlJ,MAMXgzD,oBAAqB,SAAS79D,GAC5B,IAAI+0C,EAAM/0C,GAAUA,EAAO+0C,IAE3B,GAAwB,WAAlBzpC,EAAOtL,IAAuBA,EAAO+nJ,kBACrC,cAAe/nJ,EAAO+nJ,iBAAiB/lJ,WACzC+yC,EAAIC,iBAAmBD,EAAIkG,gBAF/B,CAOA,IAAI26G,EAAwB7gH,EAAIC,gBAAgBpzC,KAAKmzC,GACjD8gH,EAAwB9gH,EAAIkG,gBAAgBr5C,KAAKmzC,GACjDiD,EAAU,IAAIxhB,IAAOs/H,EAAQ,EAEjC/gH,EAAIC,gBAAkB,SAAS5c,GAC7B,GAAI,cAAeA,EAAQ,CACzB,IAAI4iB,EAAM,eAAiB86G,EAI3B,OAHA99G,EAAQ/f,IAAI+iB,EAAK5iB,GACjB1lB,EAAMyqD,WAAW,8BACb,2BACGniB,EAET,OAAO46G,EAAsBx9H,IAE/B2c,EAAIkG,gBAAkB,SAASD,GAC7B66G,EAAsB76G,GACtBhD,EAAQrd,OAAOqgB,IAGjB,IAAI+6G,EAAMj1J,OAAOmoJ,yBAAyBjpJ,EAAO+nJ,iBAAiB/lJ,UACxB,OAC1ClB,OAAOC,eAAef,EAAO+nJ,iBAAiB/lJ,UAAW,MAAO,CAC9Df,IAAK,WACH,OAAO80J,EAAI90J,IAAI0I,MAAMkC,OAEvBosB,IAAK,SAAS+iB,GAEZ,OADAnvC,KAAKyoC,UAAY0D,EAAQ/2C,IAAI+5C,IAAQ,KAC9B+6G,EAAI99H,IAAItuB,MAAMkC,KAAM,CAACmvC,OAIhC,IAAIg7G,EAAqBh2J,EAAO+nJ,iBAAiB/lJ,UAAU6W,aAC3D7Y,EAAO+nJ,iBAAiB/lJ,UAAU6W,aAAe,WAK/C,OAJyB,IAArBpP,UAAUZ,QAC4B,SAArC,GAAKY,UAAU,IAAIuQ,gBACtBnO,KAAKyoC,UAAY0D,EAAQ/2C,IAAIwI,UAAU,KAAO,MAEzCusJ,EAAmBrsJ,MAAMkC,KAAMpC,gCClK5C,IAAIwsJ,EAAa,SAAU5vG,GACzB,OAAOl4C,OAAOzB,OAAO25C,MAAQA,EAAI35C,OAAO25C,GAAKA,GAgB3C6vG,EAAW,SAAUvuJ,EAAKioB,EAAUhD,GACtC,IAAIupI,EAAaxuJ,EAAIhH,MAAQgH,EAAIooF,MAC7BpoF,EAAI+B,OAASkmB,EAASjoB,EAAI+B,MAC5BkmB,EAASjoB,EAAI+B,MAAQ,GAEdysJ,IAAevmI,EAASjoB,EAAIhH,QACnCivB,EAASjoB,EAAIhH,MAAQ,IAEvB,IAAIy1J,EAAczuJ,EAAI+B,KACpB,GACAysJ,EAAavmI,EAASjoB,EAAIhH,MAAQivB,GAvBf,SAAUlH,EAAOkH,EAAUmgE,EAAOsmE,GACvD,GAAIA,IAAYtmE,EACdngE,EAASymI,GAAWJ,EAAWvtI,EAAM,SAGrC,IAAK,IAAItoB,EAAI,EAAGA,EAAI2vF,EAAMlnF,OAAQzI,GAAK,EACnB,MAAdsoB,EAAMtoB,EAAE,KACVwvB,EAASmgE,EAAM3vF,IAAM61J,EAAWvtI,EAAMtoB,EAAE,KAkB9Ck2J,CAAiB1pI,EAAQlE,MAAM/gB,EAAImoF,KAAMsmE,EAAazuJ,EAAIooF,MAAOpoF,EAAIhH,MAEjEgH,EAAI+B,MACNkmB,EAASjoB,EAAI+B,MAAMA,KAAK0sJ,IAIxBvmE,EAAUjpF,EAAQ,IAClB2vJ,EAAY/lE,OAAOxuF,UAAU+G,KAAKnH,KAAK,iBAE3ChC,EAAQutB,MAAQ,SAAUqZ,GACxB,IAAItZ,EAAU,GACViV,EAAQ,GACRvS,EAAW1C,EAoBf,OAjBAsZ,EAAI99B,MAAM,gBAAgBy8B,OAAOoxH,GAAWzpJ,QAAQ,SAAUzM,GAC5D,IAAIgd,EAAOhd,EAAE,GACTusB,EAAUvsB,EAAEmH,MAAM,GACT,MAAT6V,IACF8kB,EAAMz4B,KAAK,CAACq9B,IAAK,GAAIY,KAAM,KAC3B/X,EAAWuS,EAAMA,EAAMt5B,OAAO,IAGhC,IAAK,IAAIN,EAAI,EAAGA,GAAKsnF,EAAQxyE,IAAS,IAAIxU,OAAQN,GAAK,EAAG,CACxD,IAAIZ,EAAMkoF,EAAQxyE,GAAM9U,GACxB,GAAIZ,EAAImoF,IAAI/mF,KAAK6jB,GACf,OAAOspI,EAASvuJ,EAAKioB,EAAUhD,MAKrCM,EAAQiV,MAAQA,EACTjV,GAGT,IAAIspI,EAAe,SAAUC,EAAKj5F,GAChC,IAAIr7D,EAAIq7D,EAAK90D,MAAM,QAAS,GAI5B,OAHiB,IAAbvG,EAAE0G,SACJ4tJ,EAAIt0J,EAAE,IAAM8zJ,EAAW9zJ,EAAE,KAEpBs0J,GAGT72J,EAAQqrD,YAAc,SAAUl7C,GAC9B,OAAOA,EAAIrH,MAAM,SAASw3G,OAAOs2C,EAAc,KAIjD52J,EAAQorD,gBAAkBprD,EAAQqrD,YAElCrrD,EAAQsrD,cAAgB,SAAUn7C,GAChC,OAAOA,EAAIrH,MAAM,KAAKC,IAAI+D,SAG5B9M,EAAQurD,sBAAwB,SAAUp7C,GAGxC,IAFA,IAAIm8D,EAAa,GACbzhE,EAAQsF,EAAIrH,MAAM,KAAKC,IAAIstJ,GACtB71J,EAAI,EAAGA,EAAIqK,EAAM5B,OAAQzI,GAAK,EACrC8rE,EAAWxiE,KAAK,CACd45B,UAAW74B,EAAMrK,GACjBmjC,GAAI94B,EAAMrK,EAAI,GACdiiC,KAAM53B,EAAMrK,EAAI,KAGpB,OAAO8rE,GAGTtsE,EAAQwrD,qBAAuB,SAAUr7C,GACvC,OAAOA,EAAIrH,MAAM,KAAKC,IAAI,SAAU8+B,GAClC,OAAOA,EAAKr9B,UAAU,EAAGq9B,EAAK5+B,OAAO,GAAGH,MAAM,KAAKw3G,OAAOs2C,EAAc,OAI5E52J,EAAQyrD,yBAA2B,SAAUt7C,GAC3C,OAAOA,EAAIrH,MAAM,KAAKC,IAAI,SAAUyvB,GAClC,OAAOA,EAAO1vB,MAAM,KAAKC,IAAI,SAAUqnF,GACrC,IAAI0mE,EAAMx2I,GAAS,EASnB,MAPkB,MAAd8vE,EAAO,GACT0mE,EAAOT,EAAWjmE,IAElB0mE,EAAOT,EAAWjmE,EAAO5lF,UAAU,EAAG4lF,EAAOnnF,SAC7CqX,GAAS,GAGJ,CACLw2I,KAAMA,EACNx2I,OAAQA,yBCrHhB,IAAI2vE,EAAUjpF,EAAQ,IAGlB+vJ,EAAe,WAyBfC,EAAW,SAAUv5I,EAAM1V,EAAKioB,GAClC,IAIIpmB,EAAO,CAAC6T,EAAO,KAJT1V,EAAIqoF,kBAAkBlkF,SAC7BnE,EAAIqoF,OAAOroF,EAAI+B,KAAOkmB,EAAWA,EAASjoB,EAAIhH,OAC/CgH,EAAIqoF,SAGN,GAAIroF,EAAIooF,MACN,IAAK,IAAI3vF,EAAI,EAAGA,EAAIuH,EAAIooF,MAAMlnF,OAAQzI,GAAK,EAAG,CAC5C,IAAIyB,EAAI8F,EAAIooF,MAAM3vF,GACduH,EAAIhH,KACN6I,EAAKE,KAAKkmB,EAASjoB,EAAIhH,MAAMkB,IAG7B2H,EAAKE,KAAKkmB,EAASjoB,EAAIooF,MAAM3vF,UAKjCoJ,EAAKE,KAAKkmB,EAASjoB,EAAIhH,OAEzB,OA5CW,SAAUk2J,GACrB,IAAIz2J,EAAI,EACJoJ,EAAOC,UACP+C,EAAMhD,EAAKX,OACf,OAAOguJ,EAAU7tJ,QAAQ2tJ,EAAc,SAAUpoJ,GAC/C,GAAInO,GAAKoM,EACP,OAAO+B,EAET,IAAIlC,EAAM7C,EAAKpJ,GAEf,OADAA,GAAK,EACGmO,GACR,IAAK,KACH,MAAO,IACT,IAAK,KACH,OAAOJ,OAAO9B,GAChB,IAAK,KACH,OAAOK,OAAOL,GAChB,IAAK,KACH,MAAO,OA0BG1C,MAAM,KAAMH,IAKxBstJ,EAAoB,CACtB,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IAAK,KAElBC,EAAoB,CAAC,IAAK,IAAK,IAAK,KAGxCl3J,EAAOD,QAAU,SAAUstB,EAAS60G,GAClCA,EAAOA,GAAQ,GAEQ,MAAnB70G,EAAQ6C,UACV7C,EAAQ6C,QAAU,GAEA,MAAhB7C,EAAQvsB,OACVusB,EAAQvsB,KAAO,KAEjBusB,EAAQiV,MAAMr1B,QAAQ,SAAUm5B,GACR,MAAlBA,EAAMkB,WACRlB,EAAMkB,SAAW,MAIrB,IAAI6vH,EAAaj1B,EAAKi1B,YAAcF,EAChCG,EAAal1B,EAAKk1B,YAAcF,EAChCvwH,EAAM,GAkCV,OA/BAwwH,EAAWlqJ,QAAQ,SAAUuQ,GAC3BwyE,EAAQxyE,GAAMvQ,QAAQ,SAAUnF,GAC1BA,EAAIhH,QAAQusB,GAAgC,MAArBA,EAAQvlB,EAAIhH,MACrC6lC,EAAI98B,KAAKktJ,EAASv5I,EAAM1V,EAAKulB,IAEtBvlB,EAAI+B,QAAQwjB,GAAgC,MAArBA,EAAQvlB,EAAI+B,OAC1CwjB,EAAQvlB,EAAI+B,MAAMoD,QAAQ,SAAU4K,GAClC8uB,EAAI98B,KAAKktJ,EAASv5I,EAAM1V,EAAK+P,UAOrCwV,EAAQiV,MAAMr1B,QAAQ,SAAUm5B,GAC9BO,EAAI98B,KAAKktJ,EAAS,IAAK/mE,EAAQrvF,EAAE,GAAIylC,IAErCgxH,EAAWnqJ,QAAQ,SAAUuQ,GAC3BwyE,EAAQxyE,GAAMvQ,QAAQ,SAAUnF,GAC1BA,EAAIhH,QAAQslC,GAA4B,MAAnBA,EAAMt+B,EAAIhH,MACjC6lC,EAAI98B,KAAKktJ,EAASv5I,EAAM1V,EAAKs+B,IAEtBt+B,EAAI+B,QAAQu8B,GAA4B,MAAnBA,EAAMt+B,EAAI+B,OACtCu8B,EAAMt+B,EAAI+B,MAAMoD,QAAQ,SAAU4K,GAChC8uB,EAAI98B,KAAKktJ,EAASv5I,EAAM1V,EAAK+P,YAOhC8uB,EAAIp9B,KAAK,QAAU,yBCjG5BxJ,EAAQ87H,QAAU90H,EAAQ,wQCK1B,IAAIwnD,EAAYxnD,EAAQ,KACpB0zE,EAAc1zE,EAAQ,KAK1B,SAASswJ,EAAYj8I,GACO,iBAAbA,EAAK0pC,MACZ1pC,EAAK0pC,IAAM1pC,EAAK0pC,IAAIr4C,YAK5B,SAASovH,IASL7vH,KAAKmoG,MAAQ,CACTmjD,SAAW,GACXC,SAAW,IAInBv3J,EAAOD,QAAU87H,EAKjBA,EAAQ15H,UAAUq1J,uBAAyB,SAASl0H,GAChD,IAAIS,EAAO,IAAIipC,gBAAgB1pC,GAK/B,OAHAS,EAAKioC,cAAgBhgE,KAAKmoG,MAAMmjD,SAASvzH,EAAKioC,eAGvCjoC,GAMX83F,EAAQ15H,UAAUs1J,iBAAmB,SAASn0H,GAC1C,IAAIS,EAAO,IAAIipC,gBAAgB1pC,GAE/B,GAAqC,IAAjCS,EAAK0oC,OAAOniE,QAAQ,SACtBy5B,EAAK0oC,OAAS,YACT,CAAA,GAAqC,IAAjC1oC,EAAK0oC,OAAOniE,QAAQ,SAG7B,MAAM,IAAIJ,MAAM,kBAAoB65B,EAAK0oC,OAAS,gBAFlD1oC,EAAK0oC,OAAS,QAOhB,OAFA1oC,EAAKioC,cAAgBhgE,KAAKmoG,MAAMojD,SAASxzH,EAAKioC,eAEvCjoC,GAWX83F,EAAQ15H,UAAUu1J,+BAAiC,SAASl6I,GACxD,IAAKxR,KAAKmoG,MAAMniC,OACZ,OAAO,KAGX,IAAI3kD,EAAUkhC,EAAUjhC,MAAMthB,KAAKmoG,MAAMniC,QACzC,GAAI3kD,GAAWA,EAAQiV,OAASl2B,MAAMG,QAAQ8gB,EAAQiV,OAClD,IAAK,IAAI/hC,EAAI,EAAGA,EAAI8sB,EAAQiV,MAAMt5B,OAAQzI,IACtC,GAAI8sB,EAAQiV,MAAM/hC,GAAGid,MAAQA,KACvB6P,EAAQiV,MAAM/hC,GAAGikC,WACgB,aAA/BnX,EAAQiV,MAAM/hC,GAAGikC,WACc,aAA/BnX,EAAQiV,MAAM/hC,GAAGikC,WACrB,OAAOjkC,EAKnB,OAAO,MAWXs7H,EAAQ15H,UAAUi+H,QAAU,SAASl8F,GACjC,IAAItV,EAAO5iB,KAGX,GAAoB,WAAhBP,EAAOy4B,IAA8B,OAATA,GACR,iBAAbA,EAAKyC,IAEZ,OADAhrB,QAAQI,KAAK,mDACNmoB,EAIX,IAAI7W,EAAUkhC,EAAUjhC,MAAM4W,EAAKyC,KAGnC,QAA6B,IAAlBtZ,EAAQiV,QACdl2B,MAAMG,QAAQ8gB,EAAQiV,QAAmC,IAAzBjV,EAAQiV,MAAMt5B,OAE/C,OADA2S,QAAQI,KAAK,iCACNmoB,EAKX,GAAI7W,EAAQiV,MAAMt5B,QAAU,GAAKqkB,EAAQiV,MAAMomD,MAAM,SAAS/nF,GACtD,OAAsD,IAA/C,CAAC,QAAS,QAAS,QAAQ2J,QAAQ3J,EAAEmkD,OAGhD,OADAnpC,QAAQI,KAAK,qDACNmoB,EAQX,IAFA,IAAIyC,EAAMzC,EAAKyC,IACXgxH,GAAU,EACLp3J,EAAI,EAAGA,EAAI8sB,EAAQiV,MAAMt5B,OAAQzI,IAAK,CAC/B8sB,EAAQiV,MAAM/hC,GACpB2mC,IAAIj6B,QAAQ,SAASi6B,GACvB,GAAkB,SAAdA,EAAIC,MACR,CACIwwH,GAAU,EACV,IAAIzlF,EAAQ3jB,EAAUjhC,MAAMsB,EAAKulF,MAAMjiC,OACvChrC,EAAIC,MAAQ+qC,EAAM5vC,MAAM/hC,GAAG2mC,IAAI,GAAGC,SAI1CwwH,IACAhxH,EAAM4nB,EAAUrD,MAAM79B,IAK1BrhB,KAAKmoG,MAAMjwE,EAAK1mB,MAAQmpB,EAKxB,IAAIrE,EAAQjV,EAAQiV,MACpBjV,EAAQiV,MAAQ,GAKhB,IAAIs1H,EAAU,GAIVC,EAAQ,GAGRC,EAAkB,GAEtBx1H,EAAMr1B,QAAQ,SAAS8qJ,GAGnB,GAFAV,EAAYU,IAEkB,iBAAlBA,EAAMC,SACI,aAAlBD,EAAMC,UACc,aAApBD,EAAMvzH,WAA2C,gBAAfuzH,EAAMv6I,KACxC,MAAM,IAAItT,MAAM,4FAMe,IAAxB0tJ,EAAQG,EAAMv6I,OACa,aAAlCo6I,EAAQG,EAAMv6I,MAAMgnB,YACpBozH,EAAQG,EAAMv6I,MAAQu6I,KAK9Bz1H,EAAMr1B,QAAQ,SAAS8qJ,GACnB,IAAIv6I,EAAOu6I,EAAMv6I,KAEjB,GAAa,gBAATA,EAIA,OAHAu6I,EAAMjzG,IAAM,OACZz3B,EAAQiV,MAAMz4B,KAAKkuJ,QACnBF,EAAMhuJ,KAAKkuJ,EAAMjzG,KAKQ,WAAzBr5C,EAAOssJ,EAAMr3F,UACbz/D,OAAOy5B,KAAKq9H,EAAMr3F,SAASzzD,QAAQ,SAAS+vB,GACH,WAAjCvxB,EAAOmsJ,EAAQp6I,GAAMkjD,WACrBk3F,EAAQp6I,GAAMkjD,QAAU,IAG5Bk3F,EAAQp6I,GAAMkjD,QAAQ1jC,GAAQ+6H,EAAMr3F,QAAQ1jC,QAElB,IAAf+6H,EAAMtqG,OAObmqG,EAAQp6I,GAAMkjD,QAAQ1jC,GAAMywB,KAAOsqG,EAAMtqG,aAQrB,IAArBsqG,EAAMtyH,YACTr5B,MAAMG,QAAQwrJ,EAAMtyH,mBAGgB,IAA7BmyH,EAAQp6I,GAAMioB,YAChBr5B,MAAMG,QAAQqrJ,EAAQp6I,GAAMioB,cACjCmyH,EAAQp6I,GAAMioB,WAAa,IAI1Bg1C,EAAY3wE,MAAM8tJ,EAAQp6I,GAAMioB,WACd,CAACsyH,EAAMtyH,eAC1BmyH,EAAQp6I,GAAMioB,WACRmyH,EAAQp6I,GAAMioB,WAAWp8B,OAAO0uJ,EAAMtyH,cAIpD,IAAIjB,EAAYuzH,EAAMvzH,UAEtBszH,EAAgBt6I,IACTs6I,EAAgBt6I,IAAS,GACtBy6I,EAAezzH,GAAa,YAElCozH,EAAQp6I,KAAUu6I,IAElBA,EAAMjzG,IAAMtnC,SAGLu6I,EAAMG,kBAGNH,EAAMtqG,KAEK,aAAdjpB,GAEFqzH,EAAMhuJ,KAAK2T,GAIb6P,EAAQiV,MAAMz4B,KAAKkuJ,MAK3B1qI,EAAQq6B,OAAO8+B,KAAK,SAAS3gD,GACzB,GAAmB,WAAfA,EAAMroB,KAEN,OADAqoB,EAAMsyH,KAAON,EAAMtuJ,KAAK,MACjB,IAKf8jB,EAAQ+qI,aAAe,CACnBC,SAAU,MACV3hG,MAAO,KAGX,IAAIqpE,EAASxxE,EAAUrD,MAAM79B,GAE7B,OAAO,IAAIqkD,sBAAsB,CAC7Bl0D,KAAM0mB,EAAK1mB,KACXmpB,IAAKo5F,KAcblE,EAAQ15H,UAAUihI,cAAgB,SAASl/F,GACvC,IAAItV,EAAO5iB,KAGX,GAAoB,WAAhBP,EAAOy4B,IAA8B,OAATA,GACR,iBAAbA,EAAKyC,IAEZ,OADAhrB,QAAQI,KAAK,mDACNmoB,EAGX,IAAI7W,EAAUkhC,EAAUjhC,MAAM4W,EAAKyC,KAGnC,QAA6B,IAAlBtZ,EAAQiV,QACdl2B,MAAMG,QAAQ8gB,EAAQiV,QAAmC,IAAzBjV,EAAQiV,MAAMt5B,OAE/C,OADA2S,QAAQI,KAAK,iCACNmoB,EAKX,GAAI7W,EAAQiV,MAAMt5B,OAAS,IAAMqkB,EAAQiV,MAAMomD,MAAM,SAAS/nF,GACtD,OAAsD,IAA/C,CAAC,QAAS,QAAS,QAAQ2J,QAAQ3J,EAAEmkD,OAGhD,OADAnpC,QAAQI,KAAK,+CACNmoB,EAIX,IAAIi0H,EAAO,GACX9qI,EAAQiV,MAAMr1B,QAAQ,SAAStM,GAC3Bw3J,EAAKtuJ,KAAKlJ,EAAEmkD,OAGhB,IAuCIwzG,EAvCAC,GAAY,EAShB,QAR8B,IAAnBlrI,EAAQq6B,QACft7C,MAAMG,QAAQ8gB,EAAQq6B,UACtB6wG,EAAYlrI,EAAQq6B,OAAOghC,MAAM,SAAS54B,GACtC,MAAkB,WAAXA,EAAEtyC,MACLi9D,EAAY3wE,MAAMgmD,EAAEqoG,KAAKr/I,OAAQ,CAACq/I,EAAKr/I,aAI9Cy/I,EACD,MAAM,IAAIruJ,MAAM,wFA8BiB,IAA1B8B,KAAKmoG,MAAMjwE,EAAK1mB,QACvB86I,EAAS/pG,EAAUjhC,MAAMthB,KAAKmoG,MAAMjwE,EAAK1mB,QAG7C,IAAIg7I,EAAgB,CAChB/pH,MAAO,GACPlB,MAAO,IAKPkrH,EAAS,GACTC,EAAO,EACPC,EAAO,EAqNX,GAnNAtrI,EAAQiV,MAAMr1B,QAAQ,SAAS2rJ,GAE3B,IAA8B,iBAAlBA,EAAMZ,SACI,aAAlBY,EAAMZ,UACc,aAApBY,EAAMp0H,WAA2C,gBAAfo0H,EAAMp7I,KACxC,MAAM,IAAItT,MAAM,6FAIpB,GAAmB,gBAAf0uJ,EAAMp7I,KAAwB,CAC9B,IAAIq7I,EAAY,KAWhB,OAVIP,GAAUA,EAAOh2H,QACjBu2H,EAAYP,EAAOh2H,MAAMsD,KAAK,SAASmyH,GACnC,MAAsB,gBAAfA,EAAMv6I,aAGjBq7I,EACAJ,EAAOI,EAAU/zG,KAAO+zG,EAExBJ,EAAOG,EAAM9zG,KAAO8zG,GAO5B,IAAIl4F,EAAUk4F,EAAMl4F,QAChBj7B,EAAamzH,EAAMnzH,WACnB4mC,EAAausF,EAAMvsF,WACnBysF,EAAWF,EAAME,SACjBC,EAASH,EAAMG,OACf51H,EAAcy1H,EAAMz1H,YACpBX,EAAOo2H,EAAMp2H,YAIVo2H,EAAMl4F,eACNk4F,EAAMnzH,kBACNmzH,EAAMvsF,kBACNusF,EAAME,gBACNF,EAAMG,cACNH,EAAMz1H,mBACNy1H,EAAMp2H,YACNo2H,EAAM9zG,IAGb,IAAIk0G,EAAa,QACS,IAAfvzH,GAA8Br5B,MAAMG,QAAQk5B,IACnDA,EAAWx4B,QAAQ,SAAUu5B,GAIG,QAAxBA,EAAUV,gBAMiB,IAApBU,EAAUpB,OACjBh5B,MAAMG,QAAQi6B,EAAUpB,QACxBoB,EAAUpB,MAAMn4B,QAAQ,SAAU+vB,QACE,IAArBg8H,EAAWh8H,KAClBg8H,EAAWh8H,GAAQ,IAGvBg8H,EAAWh8H,GAAMnzB,KAAK28B,OAOtC,IAAIyyH,EAAU,GAES,WAAnBxtJ,EAAOi1D,IAGPz/D,OAAOy5B,KAAKgmC,GAASzzD,QAAQ,SAAS+vB,GAMlC,IAAI+6H,EAOJ,GAAgB,UAAZ7zH,EAAK1mB,MAQAkjD,EAAQ1jC,GAAMywB,KAsBvB,QAdgC,IAArBurG,EAAWh8H,IAClB5wB,MAAMG,QAAQysJ,EAAWh8H,KACzBg8H,EAAWh8H,GAAMwpD,KAAK,SAAUhgD,GAG5B,OAAOA,EAAUpB,MAAMohD,KAAK,SAAU0yE,GAClC,GAAgC,WAA5BztJ,EAAOwtJ,EAAQC,IAEf,OADAnB,EAAQkB,EAAQC,IACT,MAMF,WAAjBztJ,EAAOssJ,GAEPA,EAAMr3F,QAAQ1jC,GAAQ0jC,EAAQ1jC,UACvB0jC,EAAQ1jC,GAAMywB,SAClB,CAuCH,GArCAsqG,EAAQ92J,OAAOY,OAAO+2J,GACtBK,EAAQj8H,GAAQ+6H,OAEkB,IAAvBr3F,EAAQ1jC,GAAMywB,OAMrBsqG,EAAMtqG,KAAOiT,EAAQ1jC,GAAMywB,YACpBiT,EAAQ1jC,GAAMywB,MAIzBsqG,EAAMr3F,QAAU,GAChBq3F,EAAMr3F,QAAQ1jC,GAAQ0jC,EAAQ1jC,GAC9B+6H,EAAMtyH,WAAauzH,EAAWh8H,QAIR,IAAXs7H,QACiB,IAAjBA,EAAOh2H,OACdl2B,MAAMG,QAAQ+rJ,EAAOh2H,QAErBg2H,EAAOh2H,MAAMr1B,QAAQ,SAAUtM,GACF,WAArB8K,EAAO9K,EAAE+/D,UACTz/D,OAAOy5B,KAAK/5B,EAAE+/D,SAASzzD,QAAQ,SAAU3K,GACjCA,IAAM06B,IACN+6H,EAAMjzG,IAAMnkD,EAAEmkD,SAOlCuyG,EAAYU,QAEa,IAAdA,EAAMjzG,IAAqB,CAelC,GAAkB,WAAd5gB,EAAK1mB,KACL,MAAM,IAAItT,MAAM,+BAGpB6tJ,EAAMjzG,IAAM,CAAC8zG,EAAMp7I,KAAM,IAAKwf,GAAMzzB,KAAK,IAI7CwuJ,EAAM1rF,WAAaA,EACnB0rF,EAAMe,SAAWA,EACjBf,EAAMgB,OAASA,EACfhB,EAAM50H,YAAcA,EACpB40H,EAAMv1H,KAAOA,EAEbi2H,EAAOV,EAAMjzG,KAAOizG,EAEpBnpI,EAAKulF,MAAMojD,SAASoB,GAAQD,OACa,IAA9B9pI,EAAKulF,MAAMmjD,SAASoB,KAC7B9pI,EAAKulF,MAAMmjD,SAASoB,GAAQC,GAE9BA,SAnGIH,EAAcI,EAAMp7I,MAAMwf,GAAQ0jC,EAAQ1jC,KAwG1D07H,MAKJrrI,EAAQiV,MAAQ,GAChB61H,EAAO,GAEW,WAAdj0H,EAAK1mB,KAcL,IAAK,IAAIjd,EAAI,EAAGA,EAAI+3J,EAAOh2H,MAAMt5B,OAAQzI,IAAK,CAC1C,IAAIw3J,EAAQO,EAAOh2H,MAAM/hC,GACzB82J,EAAYU,QAEqB,IAAtBU,EAAOV,EAAMjzG,cAabizG,EAAMtqG,YACNsqG,EAAMr3F,eACNq3F,EAAMtyH,WACRsyH,EAAMvzH,WACgB,aAApBuzH,EAAMvzH,UAEgB,aAApBuzH,EAAMvzH,YACXuzH,EAAMvzH,UAAY,YAFlBuzH,EAAMvzH,UAAY,YAW1BnX,EAAQiV,MAAMz4B,KAAKkuJ,GACM,iBAAdA,EAAMjzG,KAEbqzG,EAAKtuJ,KAAKkuJ,EAAMjzG,eAaF,IAAXwzG,QACiB,IAAjBA,EAAOh2H,OACdl2B,MAAMG,QAAQ+rJ,EAAOh2H,QACrBg2H,EAAOh2H,MAAMr1B,QAAQ,SAAS8qJ,GAC1BV,EAAYU,GACZI,EAAKtuJ,KAAKkuJ,EAAMjzG,UACiB,IAAtB2zG,EAAOV,EAAMjzG,KACpBz3B,EAAQiV,MAAMz4B,KAAK4uJ,EAAOV,EAAMjzG,cAEzBizG,EAAMtqG,YACNsqG,EAAMr3F,eACNq3F,EAAMtyH,WACRsyH,EAAMvzH,WACgB,aAApBuzH,EAAMvzH,YACTuzH,EAAMvzH,UAAY,YACjBuzH,EAAMvzH,WACgB,aAApBuzH,EAAMvzH,YACTuzH,EAAMvzH,UAAY,YACtBnX,EAAQiV,MAAMz4B,KAAKkuJ,MAM/B92J,OAAOy5B,KAAK+9H,GAAQxrJ,QAAQ,SAAS63C,IACN,IAAvBqzG,EAAK7tJ,QAAQw6C,KACbqzG,EAAKtuJ,KAAKi7C,GACoB,aAA1B2zG,EAAO3zG,GAAKtgB,UAMZnX,EAAQiV,MAAMkkD,KAAK,SAAUuxE,GACzB,IAAyB,aAApBA,EAAMvzH,WACa,aAApBuzH,EAAMvzH,YACNuzH,EAAMv6I,OAASi7I,EAAO3zG,GAAKtnC,KAS3B,OANAvc,OAAOy5B,KAAK+9H,EAAO3zG,GAAK4b,SAASzzD,QAC7B,SAAU+vB,GACV+6H,EAAMr3F,QAAQ1jC,GACVy7H,EAAO3zG,GAAK4b,QAAQ1jC,MAGrB,IAIf3P,EAAQiV,MAAMz4B,KAAK4uJ,EAAO3zG,OAW1C,CAAC,QAAS,SAAS73C,QAAQ,SAAUuQ,GACjC,GAAK6P,GAAYA,EAAQiV,OAAUl2B,MAAMG,QAAQ8gB,EAAQiV,OAAzD,CAGA,IAAI0iB,EAAM,KACV,GAAI/jD,OAAOy5B,KAAK89H,EAAch7I,IAAOxU,OAAS,GAE9B,QADZg8C,EAAMp2B,EAAK8oI,+BAA+Bl6I,IAMtC,IAAK,IAAIjd,EAAI,EAAGA,EAAI8sB,EAAQiV,MAAMt5B,OAAQzI,IACtC,GAAI8sB,EAAQiV,MAAM/hC,GAAGid,OAASA,EAAM,CAChCwnC,EAAMzkD,EACN,MAMhB,GAAIykD,GAAO33B,EAAQiV,MAAMt5B,OAASg8C,EAAK,CACnC,IAAI5e,EAAQ/Y,EAAQiV,MAAM0iB,GAC1B/jD,OAAOy5B,KAAK89H,EAAch7I,IAAOvQ,QAAQ,SAAS+vB,GAC1CoJ,EAAMs6B,SAAWt6B,EAAMs6B,QAAQ1jC,IAC/BrhB,QAAQI,KAAK,+BAEZqqB,EAAMs6B,UACPt6B,EAAMs6B,QAAU,IAGpBt6B,EAAMs6B,QAAQ1jC,GAAQw7H,EAAch7I,GAAMwf,SAMtD3P,EAAQq6B,OAAO8+B,KAAK,SAAS3gD,GACzB,GAAmB,WAAfA,EAAMroB,KAEN,OADAqoB,EAAMsyH,KAAOA,EAAK5uJ,KAAK,MAChB,IAKf8jB,EAAQ+qI,aAAe,CACnBC,SAAU,MACV3hG,MAAO,KAGX,IAAIqpE,EAASxxE,EAAUrD,MAAM79B,GAM7B,OAFArhB,KAAKmoG,MAAMjwE,EAAK1mB,MAAQuiH,EAEjB,IAAIruD,sBAAsB,CAC7Bl0D,KAAM0mB,EAAK1mB,KACXmpB,IAAKo5F,KAcb,IAAIk4B,EAAiB,CACjBkB,SAAY,EACZC,SAAY,EACZC,SAAY,EACZC,SAAY,oBChyBhB,IAAI/qG,EAAYxnD,EAAQ,IAExBhH,EAAQmrD,MAAQ,SAAS79B,EAAS60G,GAgDhC,YA9CuB,IAAZ70G,QACkB,IAAlBA,EAAQiV,OACfl2B,MAAMG,QAAQ8gB,EAAQiV,QAExBjV,EAAQiV,MAAMr1B,QAAQ,SAAUm5B,QAED,IAAlBA,EAAMs6B,SACuB,IAAtCz/D,OAAOy5B,KAAK0L,EAAMs6B,SAAS13D,SACzBo9B,EAAMhB,MAAQ,GACdnkC,OAAOy5B,KAAK0L,EAAMs6B,SAASzzD,QAAQ,SAAU+vB,GAC3C,IAAIyO,EAASrF,EAAMs6B,QAAQ1jC,GAC3B/7B,OAAOy5B,KAAK+Q,GAAQx+B,QAAQ,SAAUmI,GACpCgxB,EAAMhB,MAAMv7B,KAAK,CACfoB,GAAI+xB,EACJ5nB,UAAWA,EACX5T,MAAOiqC,EAAOr2B,gBAIbgxB,EAAMs6B,cAIe,IAArBt6B,EAAMX,YACfr5B,MAAMG,QAAQ65B,EAAMX,aAClBW,EAAMX,WAAWx4B,QAAQ,SAAUu5B,QACF,IAApBA,EAAUpB,OACjBh5B,MAAMG,QAAQi6B,EAAUpB,SAC1BoB,EAAUpB,MAAQoB,EAAUpB,MAAM77B,KAAK,eAQ5B,IAAZ8jB,QACmB,IAAnBA,EAAQq6B,QAA0Bt7C,MAAMG,QAAQ8gB,EAAQq6B,SAEjEr6B,EAAQq6B,OAAOz6C,QAAQ,SAAU6iD,QACT,IAAXA,EAAEqoG,MAAwB/rJ,MAAMG,QAAQujD,EAAEqoG,QACnDroG,EAAEqoG,KAAOroG,EAAEqoG,KAAK5uJ,KAAK,QAKpBglD,EAAUrD,MAAM79B,EAAS60G,IAGlCniI,EAAQutB,MAAQ,SAASqZ,GACvB,IAAItZ,EAAUkhC,EAAUjhC,MAAMqZ,GAwC9B,YAtCuB,IAAZtZ,QAAoD,IAAlBA,EAAQiV,OACjDl2B,MAAMG,QAAQ8gB,EAAQiV,QAExBjV,EAAQiV,MAAMr1B,QAAQ,SAAUm5B,QAEH,IAAhBA,EAAMhB,OAAyBh5B,MAAMG,QAAQ65B,EAAMhB,SAC5DgB,EAAMs6B,QAAU,GAChBt6B,EAAMhB,MAAMn4B,QAAQ,SAAU+vB,GACvBoJ,EAAMs6B,QAAQ1jC,EAAK/xB,MACxBm7B,EAAMs6B,QAAQ1jC,EAAK/xB,IAAM,IAC3Bm7B,EAAMs6B,QAAQ1jC,EAAK/xB,IAAI+xB,EAAK5nB,WAAa4nB,EAAKx7B,eAGvC4kC,EAAMhB,YAIiB,IAArBgB,EAAMX,YACfr5B,MAAMG,QAAQ65B,EAAMX,aAClBW,EAAMX,WAAWx4B,QAAQ,SAAUu5B,GACF,iBAApBA,EAAUpB,QACnBoB,EAAUpB,MAAQoB,EAAUpB,MAAMv8B,MAAM,eAO7B,IAAZwkB,QACmB,IAAnBA,EAAQq6B,QAA0Bt7C,MAAMG,QAAQ8gB,EAAQq6B,SAEjEr6B,EAAQq6B,OAAOz6C,QAAQ,SAAU6iD,GACT,iBAAXA,EAAEqoG,OACXroG,EAAEqoG,KAAOroG,EAAEqoG,KAAKtvJ,MAAM,QAKrBwkB,kBC9FTrtB,EAAOD,QAAU,SAAS06E,EAAYl1C,GAElC,IAAKA,EACD,OAAO,EAGX,GAAIv5B,KAAKhD,QAAUu8B,EAAMv8B,OACrB,OAAO,EAEX,IAAK,IAAIzI,EAAI,EAAGC,EAAIwL,KAAKhD,OAAQzI,EAAIC,EAAGD,IAEpC,GAAIyL,KAAKzL,aAAc6L,OAASm5B,EAAMhlC,aAAc6L,OAEhD,IAAKquE,EAAY3wE,MAAMkC,KAAKzL,GAAI,CAACglC,EAAMhlC,KACnC,OAAO,OACR,GAAIyL,KAAKzL,IAAMglC,EAAMhlC,GAGxB,OAAO,EAGf,OAAO,oBCrBX,IAAIguD,EAAYxnD,EAAQ,IACpBwyJ,EAAiBxyJ,EAAQ,KACzByyJ,EAAaD,EAAeC,WAC5BC,EAAaF,EAAeE,WAI5BC,EAAwB,EAI5B,SAASvzH,EAAkBC,EAAOpJ,EAAMqJ,GACpC,OAAOD,EACFhB,MACAE,OAAO,SAASD,GAAY,OAAOA,EAASp6B,KAAO+xB,IACnDsI,OAAO,SAASD,GAAY,OAAOA,EAASjwB,YAAcixB,IAC1Dv9B,IAAI,SAASu8B,GAAY,OAAOA,EAAS7jC,QAAU,GAK5D,SAASu6H,EAAUt+G,GAEfzR,KAAKyR,QAAUA,GAAoB,GAE9BzR,KAAKyR,QAAQw+G,cACdjwH,KAAKyR,QAAQw+G,YAAcy9B,GAE/B/9I,QAAQH,IAAI,uBAAyBxP,KAAKyR,QAAQw+G,YAAc,WAMhEjwH,KAAKg9H,UAAY,GAiBrB,SAAS2wB,EAAatsI,EAASyd,GACZ,MAAXzd,GAAoBjhB,MAAMG,QAAQ8gB,EAAQiV,QAI9CjV,EAAQiV,MAAMr1B,QAAQ,SAAUm5B,GACT,UAAfA,EAAM5oB,MACNstB,EAAO1E,KAKnB,SAASwzH,EAAoB11H,GAEzB,OAAOA,GAAgB,MAARA,GACRA,EAAK1mB,MAAqB,IAAb0mB,EAAK1mB,MAClB0mB,EAAKyC,KAAmB,IAAZzC,EAAKyC,IAuJ5Bo1F,EAAU55H,UAAU03J,eAAiB,WACjC7tJ,KAAKg9H,UAAY,IAWrBjN,EAAU55H,UAAU8+H,aAAe,SAAS77F,GACxCp5B,KAAKg9H,UAAY5jG,GAYrB22F,EAAU55H,UAAU23J,gBAAkB,SAAU1zH,GAC5C,IAAIL,EAAWK,EAAMX,YACjBW,EAAMX,WAAWG,KAAK,SAASC,GAAS,MAA2B,QAApBA,EAAMC,YACzD,OAAIC,EACOA,EAASX,MACXv8B,MAAM,KACNC,IAAI,SAAS29B,GAAW,OAAO/Y,SAAS+Y,KAEtC,CAACL,EAAMhB,MAAM,GAAGn6B,KAI/B8wH,EAAU55H,UAAU43J,sBAAwB,SAAUC,EAAaC,GAE/D,IADA,IAAIh0G,EAAU,GACL1lD,EAAI,EAAGA,EAAIy5J,EAAYhxJ,SAAUzI,EAAG,CACzC,IAAI25J,EAAUF,EAAYz5J,GACtB45J,EAAUF,EAAY15J,IAAM,KAChC0lD,EAAQi0G,GAAWC,EAEvB,OAAOl0G,GAGX81E,EAAU55H,UAAUi4J,2BAA6B,SAASh0H,GACtDzqB,QAAQH,IAAI,sCAAuCxP,KAAKg9H,WACxD,IAAIqxB,EAAcruJ,KAAK8tJ,gBAAgB1zH,GACvCzqB,QAAQH,IAAI,sCAAuC6+I,GACnD,IAAIC,EAAUn0H,EAAiBC,EAAOi0H,EAAY,GAAI,QAClDE,EAAWp0H,EAAiBC,EAAOi0H,EAAY,GAAI,SACnDG,EAAiBxuJ,KAAK+tJ,sBAAsBM,EAAaruJ,KAAKg9H,WAClErtH,QAAQH,IAAI,uCAAwCg/I,GAGpD,IAAIC,EAAazuJ,KAAKg9H,UACjB1jG,OAAO,SAAStI,GAAQ,OAAwD,IAAjD/7B,OAAO44B,OAAO2gI,GAAgBlwJ,QAAQ0yB,KA2B1E,OA1BArhB,QAAQH,IAAI,oCAAqCi/I,GAGjDr0H,EAAMhB,MAAMn4B,QAAQ,SAAS+vB,GACrBw9H,EAAex9H,EAAK/xB,MACpB+xB,EAAK/xB,GAAKuvJ,EAAex9H,EAAK/xB,OAItCwvJ,EAAWxtJ,QAAQ,SAAS+vB,GACxBoJ,EAAMhB,MAAMv7B,KAAK,CACboB,GAAI+xB,EACJ5nB,UAAW,OACX5T,MAAO84J,IAEXl0H,EAAMhB,MAAMv7B,KAAK,CACboB,GAAI+xB,EACJ5nB,UAAW,QACX5T,MAAO+4J,MAGfn0H,EAAMX,WAAaW,EAAMX,YAAc,GACvCW,EAAMX,WAAW57B,KAAK,CAClBi8B,UAAW,MACXV,MAAOp5B,KAAKg9H,UAAUz/H,KAAK,OAExB68B,GAGX21F,EAAU55H,UAAUu4J,oBAAsB,SAASt0H,EAAOV,GAkBtD,IAjBA,IAAIi1H,EAAsB,SAASv0H,EAAOpJ,GACtCoJ,EAAMhB,MAAMv7B,KAAK,CACboB,GAAI+xB,EACJ5nB,UAAW,QACX5T,MAAOwoI,IAEX5jG,EAAMhB,MAAMv7B,KAAK,CACboB,GAAI+xB,EACJ5nB,UAAW,OACX5T,MAAOuoI,KAGXA,EAAkB5jG,EAAiBC,EAAOV,EAAa,QACvDskG,EAAmB7jG,EAAiBC,EAAOV,EAAa,SAGxDk1H,EAAW,GACNr6J,EAAI,EAAGA,EAAIyL,KAAKyR,QAAQw+G,YAAc,IAAK17H,EAAG,CACnD,IAAIs6J,EArRD/tJ,KAAKE,MAAM,WAAAF,KAAK2U,UADb,EAuRNk5I,EAAoBv0H,EAAOy0H,GAC3BD,EAAS/wJ,KAAKgxJ,GAOlB,OALAz0H,EAAMX,WAAaW,EAAMX,YAAc,GACvCW,EAAMX,WAAW57B,KAAK,CAClBi8B,UAAW,MACXV,MAAOM,EAAc,IAAMk1H,EAASrxJ,KAAK,OAEtC68B,GAoBX21F,EAAU55H,UAAU24J,kBAAoB,SAAS10H,GAG7C,IAAIV,EACAP,EAAWiB,EAAMhB,OAASgB,EAAMhB,MAC/Bt8B,IAAI,SAASu8B,GAAY,OAAOA,EAASp6B,KACzCq6B,OAAO,SAAStI,EAAM3yB,EAAOk7B,GAC1B,OAAOA,EAAMj7B,QAAQ0yB,KAAU3yB,IAElCrB,QAAU,EACXw8B,EAAaY,EAAMX,YAAcW,EAAMX,WAAWz8B,QAAW,EAEjE,GAAiB,IAAbm8B,GAAkBA,EAAW,EAE7B,OAAOiB,EAEX,GAAgB,GAAZjB,GAA+B,IAAdK,EAEjB,OAAOY,EAGX,GAAiB,IAAbjB,EACAO,EAAcU,EAAMhB,MAAM,GAAGn6B,OAC1B,CAGH,IAAI06B,EAAWS,EAAMX,WAAWH,OAAO,SAASO,GAAS,MAA2B,QAApBA,EAAMC,YAAwB,GAC9F,IAAIH,EAIA,OAAOS,EAHPV,EAAchY,SAASiY,EAASP,MAAMv8B,MAAM,KAAK,IAsBzD,OAhBA8S,QAAQH,IAAI,qCAAsCxP,KAAKg9H,WACvDrtH,QAAQH,IAAI,qCAAuCkqB,IAEY,IAAzC15B,KAAKg9H,UAAU1+H,QAAQo7B,IAGzC/pB,QAAQH,IAAI,2EAEZ4qB,EAAQp6B,KAAKouJ,2BAA2Bh0H,KAExCzqB,QAAQH,IAAI,2EAEZ4qB,EAAQp6B,KAAK0uJ,oBAAoBt0H,EAAOV,IAG5C15B,KAAKg9H,UAAYh9H,KAAK8tJ,gBAAgB1zH,GAC/BA,GAYX21F,EAAU55H,UAAUmhI,uBAAyB,SAAUp/F,GAEnD,IAAK01H,EAAoB11H,GACrB,OAAOA,EAGX,IAAI7W,EAAUkhC,EAAUjhC,MAAM4W,EAAKyC,KAE/B/X,EAAO5iB,KAoCX,OAnCA2tJ,EAAatsI,EAAS,SAAU+Y,GAGxBxX,EAAKnR,QAAQy+G,uBAtWzB,SAAgC91F,GAE5B,GAAKA,GAAUh6B,MAAMG,QAAQ65B,EAAMX,YASnC,IALA,IAAIi7B,EAAU84F,EAAWpzH,GACrBiqB,EAAQ,GAGR3nD,EAAI09B,EAAMX,WAAWz8B,OAClBN,KAEH,GAAsC,QAAlC09B,EAAMX,WAAW/8B,GAAGo9B,UAAxB,CAMA,IAFA,IAAIi1H,EAAiB30H,EAAMX,WAAW/8B,GAAG08B,MAAMv8B,MAAM,KAE5CtI,EAAI,EAAGA,EAAIw6J,EAAe/xJ,OAAQzI,IAAK,CAE5C,IAAIy8B,EAAO+9H,EAAex6J,GAC1B8vD,EAAMxmD,KAAKmzB,GAEX,IAAIpyB,EAAQ81D,EAAQ1jC,GAAMywB,KAAK5kD,MAAM,KACrC63D,EAAQ1jC,GAAMywB,KAAO,CAAC7iD,EAAM,GAAI,IAAKrK,EAAG,IAAKqK,EAAM,GAAI,IAAKrK,GAAGgJ,KAAK,IACpEm3D,EAAQ1jC,GAAMoxD,MAAQ,CAAC1tB,EAAQ1jC,GAAMoxD,MAAO,IAAK7tF,GAAGgJ,KAAK,IAGzD68B,EAAMX,WAAWx4B,QAAQ,SAAU+tJ,GAC/B,GAA+B,QAA3BA,EAAal1H,UAAjB,CAIA,IAAIm1H,EAAeD,EAAa51H,MAAMv8B,MAAM,MACR,IAAhCoyJ,EAAa3wJ,QAAQ0yB,IAKzBi+H,EAAahuJ,QAAQ,SAAUiuJ,GAC3Bx6F,EAAQw6F,GAAaztG,KAAOiT,EAAQ1jC,GAAMywB,KAC1CiT,EAAQw6F,GAAa9sE,MAAQ1tB,EAAQ1jC,GAAMoxD,MACvC8sE,IAAgBl+H,GAChBqzB,EAAMxmD,KAAKqxJ,QAQ3B90H,EAAMhB,MAAQq0H,EAAW/4F,EAASrQ,GAClCjqB,EAAMX,WAAWn8B,OAAOZ,EAAG,IAkTvBwzH,CAAuB91F,GA9SnC,SAAgCA,GAE5B,GAAKA,GAAUh6B,MAAMG,QAAQ65B,EAAMX,YAAnC,CAMA,IAAIi7B,EAAU84F,EAAWpzH,GAGzBA,EAAMX,WAAWx4B,QAAQ,SAAUkuJ,GAC/B,GAAiC,QAA7BA,EAAer1H,UAAnB,CAIAnqB,QAAQG,KAAK,wBAA0Bq/I,EAAe/1H,OAEtD+1H,EAAeC,MAAO,EAKtB,IAHA,IAAIL,EAAiBI,EAAe/1H,MAAMv8B,MAAM,KAGvCtI,EAAI,EAAGA,EAAIw6J,EAAe/xJ,OAAQzI,IAAK,CAE5C,IAAIy8B,EAAO+9H,EAAex6J,UACnBmgE,EAAQ1jC,GAGfoJ,EAAMX,WAAWx4B,QAAQ,SAAU+tJ,GAC/B,GAA+B,QAA3BA,EAAal1H,UAAjB,CAIA,IAAIm1H,EAAeD,EAAa51H,MAAMv8B,MAAM,MACR,IAAhCoyJ,EAAa3wJ,QAAQ0yB,KAKzBi+H,EAAahuJ,QAAQ,SAAUiuJ,UACpBx6F,EAAQw6F,KAInBF,EAAaI,MAAO,UAOhCh1H,EAAMhB,MAAQq0H,EAAW/4F,GAIzB,IADA,IAAIngE,EAAI6lC,EAAMX,WAAWz8B,OAClBzI,KACC6lC,EAAMX,WAAWllC,GAAG66J,MACpBh1H,EAAMX,WAAWn8B,OAAO/I,EAAG,QAvD/Bob,QAAQG,KAAK,6DA6STu/I,CAAuBj1H,GApOnC,SAA8BA,GACrBA,IAIAh6B,MAAMG,QAAQ65B,EAAMk1H,WACrBl1H,EAAMk1H,QAAU,IAGfl1H,EAAMk1H,QAAQ90E,KACX,SAAUjmF,GAAK,MAAmB,6BAAZA,EAAEiB,SAC5B4kC,EAAMk1H,QAAQzxJ,KAAK,CAACrI,MAAS,8BAmP7B+5J,CAAqBn1H,KAGlB,IAAIsrC,sBAAsB,CAC7Bl0D,KAAM0mB,EAAK1mB,KACXmpB,IAAK4nB,EAAUrD,MAAM79B,MAW7B0uG,EAAU55H,UAAUijI,sBAAwB,SAAUlhG,GAElD,IAAK01H,EAAoB11H,GACrB,OAAOA,EAGX,IAAI7W,EAAUkhC,EAAUjhC,MAAM4W,EAAKyC,KAE/B/X,EAAO5iB,KASX,OARA2tJ,EAAatsI,EAAS,SAAU+Y,GACL,YAAnBA,EAAM5B,WAA8C,YAAnB4B,EAAM5B,WAI3C5V,EAAKksI,kBAAkB10H,KAGpB,IAAIsrC,sBAAsB,CAC7Bl0D,KAAM0mB,EAAK1mB,KACXmpB,IAAK4nB,EAAUrD,MAAM79B,MAM7BrtB,EAAOD,QAAUg8H,iBCzejBh8H,EAAQ05J,WAAa,SAAS/4F,EAASrQ,GACrC,IAAIjrB,EAAQ,GAGZ,QAAuB,IAAZs7B,GACyB,IAAhCz/D,OAAOy5B,KAAKgmC,GAAS13D,OAAc,CAEhCoD,MAAMG,QAAQ8jD,KACjBA,EAAQ,IAIV,IAAK,IAAI9vD,EAAI,EAAGA,EAAI8vD,EAAMrnD,OAAQzI,IAAK,CACrC,IAAIy8B,EAAOqzB,EAAM9vD,GACbkrC,EAASi1B,EAAQ1jC,GACrB/7B,OAAOy5B,KAAK+Q,GAAQx+B,QAAQ,SAAUmI,GACpCgwB,EAAMv7B,KAAK,CACToB,GAAI+xB,EACJ5nB,UAAWA,EACX5T,MAAOiqC,EAAOr2B,OAMpBnU,OAAOy5B,KAAKgmC,GAASzzD,QAAQ,SAAU+vB,GAErC,GADAA,EAAOtP,SAASsP,KACZqzB,EAAM/lD,QAAQ0yB,IAAS,GAA3B,CAKA,IAAIyO,EAASi1B,EAAQ1jC,GACrB/7B,OAAOy5B,KAAK+Q,GAAQx+B,QAAQ,SAAUmI,GACpCgwB,EAAMv7B,KAAK,CACToB,GAAI+xB,EACJ5nB,UAAWA,EACX5T,MAAOiqC,EAAOr2B,UAMtB,OAAOgwB,GAGTrlC,EAAQy5J,WAAa,SAAUpzH,GAC7B,IAAIs6B,EAAU,GASd,YAP2B,IAAhBt6B,EAAMhB,OAAyBh5B,MAAMG,QAAQ65B,EAAMhB,QAC5DgB,EAAMhB,MAAMn4B,QAAQ,SAAU+vB,GACvB0jC,EAAQ1jC,EAAK/xB,MAChBy1D,EAAQ1jC,EAAK/xB,IAAM,IACrBy1D,EAAQ1jC,EAAK/xB,IAAI+xB,EAAK5nB,WAAa4nB,EAAKx7B,QAGrCk/D,kBC3DT1gE,EAAOD,QATiB,SAAS+pF,EAAMhpF,EAAMowF,EAAW8mD,GACpDhsI,KAAK89E,KAAOA,EACZ99E,KAAKlL,KAAOA,EACZkL,KAAKklF,UAAYA,EACjBllF,KAAKgsI,UAAYA,oBCdrB,IAAMwjB,EAAuBz0J,EAAQ,KAC/B00J,EAAO10J,EAAQ,KACf0wI,EAAgB1wI,EAAQ,IAKxBwwI,EAAgB,WAElBvrI,KAAKmvC,IAiHT,WACI,IAAM9/B,EAAU,2DAEhB,QAAyB1U,IAArBY,OAAOm0J,UACP//I,QAAQH,IAAIH,OACT,CACH,IAAMsgJ,EAAWp0J,OAAOm0J,UAExB,QAA0B/0J,IAAtBg1J,EAAS1jH,UAA0B0jH,EAAS1jH,SAAS,YACrD,OAAO0jH,EAEXhgJ,QAAQH,IAAIH,IA5HLugJ,IAMfrkB,EAAcp1I,UAAYlB,OAAOY,OAAO25J,EAAqBr5J,WAK7Do1I,EAAcl0F,YAAck0F,EAS5BA,EAAcp1I,UAAUgsI,YAAc,SAAS0tB,EAAezwJ,GAC1DuQ,QAAQH,IAAR,6BAAAnS,OAAyC2C,KAAKmvC,MAC9Cx/B,QAAQH,IAAR,8BAAAnS,OAA0CwyJ,IAC1C,IAAM9mF,EAAU,IAAI3oD,eAEpB2oD,EAAQzoD,mBAAqB,WACzB,GAAIyoD,EAAQ3mD,aAAehC,eAAe0vI,MAChB,MAAnB/mF,EAAQjvD,OACX1a,EAAS2pE,EAAQxqD,mBACd,GAAIwqD,EAAQ3mD,aAAehC,eAAe0vI,KAC7C,MAAM,IAAI5xJ,MAAJ,yDAAAb,OAEE0rE,EAAQjvD,UAKxBivD,EAAQ9lD,KAAK,OAAQjjB,KAAKmvC,KAC1B45B,EAAQ5lD,iBAAiB,eACrBsoH,EAAcnmD,4BAClBvc,EAAQvxD,KAAKq4I,GACblgJ,QAAQH,IAAR,QAAAnS,OAAoBwyJ,KASxBtkB,EAAcp1I,UAAU45J,eAAiB,SAAS5zI,GAC9C,IAAMlM,EAAS8G,KAAKuK,MAAMnF,GAAU6zI,QAKpC//I,EAAOsmB,QACP,IAAMgD,EAAQ,GAOd,OALAtpB,EAAOhP,QACH,SAAAmrI,GAAI,OACAA,EAAK6jB,QACE12H,EAAM17B,KAAK,IAAI4xJ,EAAKrjB,EAAKA,KAAMA,EAAKrmH,MAAOqmH,EAAK7jB,QAExDhvF,GAQXgyG,EAAcp1I,UAAU+5J,OAAS,SAAS/zI,GAItC,GAHAxM,QAAQH,IAAR,wBAAAnS,OAAoC8e,EAAS1b,aAGrB,iBAAb0b,EACP,OAAO,EAIX,IAAIo0C,EAEJ,IACIA,EAAOx5C,KAAKuK,MAAMnF,GACpB,MAAOvM,GAGL,OAFAD,QAAQH,IAAII,IAEL,EAIX,QAAqBjV,IAAjB41D,EAAKy/F,QACL,OAAO,EAIX,IAAMz2H,EAAQg3B,EAAKy/F,QAEnB,SAAMz2H,EAAM,KAAMA,EAAM,GAAG,gBA8B/BvlC,EAAOD,QAAUw3I,iBCxIjB,IAAMikB,EAAuB,WACzB,MAAM,IAAItxJ,MAAM,0DAapBsxJ,EAAqBr5J,UAAUqhB,KAAO,SAAc80H,EAAiBltI,GAAU,IAAAyoC,EAAA7nC,KAC3EA,KAAKmiI,YAAYmK,EAAgBxuD,KAAM,SAAA3hE,GAC/B0rB,EAAKqoH,OAAO/zI,GACZmwH,EAAgBN,UAAYnkG,EAAKkoH,eAAe5zI,IAEhDxM,QAAQH,IAAI,wDACZ88H,EAAgBN,UAAY,IAEhC5sI,EAASktI,MAcjBkjB,EAAqBr5J,UAAUgsI,YAAc,SAASguB,EAAW/wJ,GAC7D,MAAM,IAAIlB,MAAM,iDAmBpBsxJ,EAAqBr5J,UAAU45J,eAAiB,SAAS5zI,GACrD,MAAM,IAAIje,MAAM,4CAUpBsxJ,EAAqBr5J,UAAU+5J,OAAS,SAAS/zI,GAC7C,MAAM,IAAIje,MAAM,4CAGpBlK,EAAOD,QAAUy7J,iBCrEjB,IAAMC,EAAO,SAASrjB,EAAMD,EAAO5jB,GAC/BvoH,KAAKosI,KAAOA,EACZpsI,KAAKmsI,MAAQA,EACbnsI,KAAKuoH,IAAMA,GAOfknC,EAAKt5J,UAAUi6J,QAAU,WACrB,OAAOpwJ,KAAKosI,MAOhBqjB,EAAKt5J,UAAUk6J,aAAe,WAC1B,OAAOrwJ,KAAKmsI,OAOhBsjB,EAAKt5J,UAAUm6J,WAAa,WACxB,OAAOtwJ,KAAKuoH,KAGhBv0H,EAAOD,QAAU07J\",\"sourcesContent\":[\"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\n\\t\\tmodule.exports = factory();\\n\\telse if(typeof define === 'function' && define.amd)\\n\\t\\tdefine([], factory);\\n\\telse if(typeof exports === 'object')\\n\\t\\texports[\\\"JitsiMeetJS\\\"] = factory();\\n\\telse\\n\\t\\troot[\\\"JitsiMeetJS\\\"] = factory();\\n})(window, function() {\\nreturn \",\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 119);\\n\",\"const XMPPEvents = {\\r\\n    /**\\r\\n     * Indicates error while adding ice candidate.\\r\\n     */\\r\\n    ADD_ICE_CANDIDATE_FAILED: 'xmpp.add_ice_candidate_failed',\\r\\n\\r\\n    // Designates an event indicating that the focus has asked us to mute our\\r\\n    // audio.\\r\\n    AUDIO_MUTED_BY_FOCUS: 'xmpp.audio_muted_by_focus',\\r\\n    AUTHENTICATION_REQUIRED: 'xmpp.authentication_required',\\r\\n    BRIDGE_DOWN: 'xmpp.bridge_down',\\r\\n\\r\\n    /**\\r\\n     * Triggered when 'session-accept' is received from the responder.\\r\\n     */\\r\\n    CALL_ACCEPTED: 'xmpp.callaccepted.jingle',\\r\\n\\r\\n    // Designates an event indicating that an offer (e.g. Jingle\\r\\n    // session-initiate) was received.\\r\\n    CALL_INCOMING: 'xmpp.callincoming.jingle',\\r\\n\\r\\n    // Triggered when Jicofo kills our media session, this can happen while\\r\\n    // we're still in the MUC, when it decides to terminate the media session.\\r\\n    // For example when the session is idle for too long, because we're the only\\r\\n    // person in the conference room.\\r\\n    CALL_ENDED: 'xmpp.callended.jingle',\\r\\n    CHAT_ERROR_RECEIVED: 'xmpp.chat_error_received',\\r\\n\\r\\n    // The conference properties (as advertised by jicofo) have changed\\r\\n    CONFERENCE_PROPERTIES_CHANGED: 'xmpp.conference_properties_changed',\\r\\n\\r\\n    /**\\r\\n     * This event is triggered when the ICE connects for the first time.\\r\\n     */\\r\\n    CONNECTION_ESTABLISHED: 'xmpp.connection.connected',\\r\\n\\r\\n    // Designates an event indicating that the connection to the XMPP server\\r\\n    // failed.\\r\\n    CONNECTION_FAILED: 'xmpp.connection.failed',\\r\\n\\r\\n    // Designates an event indicating that the media (ICE) connection was\\r\\n    // interrupted. This should go to the RTC module.\\r\\n    CONNECTION_INTERRUPTED: 'xmpp.connection.interrupted',\\r\\n\\r\\n    // Designates an event indicating that the media (ICE) connection was\\r\\n    // restored. This should go to the RTC module.\\r\\n    CONNECTION_RESTORED: 'xmpp.connection.restored',\\r\\n\\r\\n    // Designates an event indicating that the media (ICE) connection failed.\\r\\n    // This should go to the RTC module.\\r\\n    CONNECTION_ICE_FAILED: 'xmpp.connection.ice.failed',\\r\\n\\r\\n    /**\\r\\n     * Designates an event indicating connection status changes.\\r\\n     */\\r\\n    CONNECTION_STATUS_CHANGED: 'xmpp.connection.status.changed',\\r\\n\\r\\n    // Designates an event indicating that the display name of a participant\\r\\n    // has changed.\\r\\n    DISPLAY_NAME_CHANGED: 'xmpp.display_name_changed',\\r\\n\\r\\n    /**\\r\\n     * Chat room instance have been added to Strophe.emuc plugin.\\r\\n     */\\r\\n    EMUC_ROOM_ADDED: 'xmpp.emuc_room_added',\\r\\n\\r\\n    /**\\r\\n     * Chat room instance have been removed from Strophe.emuc plugin.\\r\\n     */\\r\\n    EMUC_ROOM_REMOVED: 'xmpp.emuc_room_removed',\\r\\n    ETHERPAD: 'xmpp.etherpad',\\r\\n    FOCUS_DISCONNECTED: 'xmpp.focus_disconnected',\\r\\n    FOCUS_LEFT: 'xmpp.focus_left',\\r\\n    GRACEFUL_SHUTDOWN: 'xmpp.graceful_shutdown',\\r\\n\\r\\n    /**\\r\\n     * Event fired when 'transport-replace' Jingle message has been received,\\r\\n     * before the new offer is set on the PeerConnection.\\r\\n     */\\r\\n    ICE_RESTARTING: 'rtc.ice_restarting',\\r\\n\\r\\n    /**\\r\\n     * Event fired after the 'transport-replace' message has been processed\\r\\n     * and the new offer has been set successfully.\\r\\n     */\\r\\n    ICE_RESTART_SUCCESS: 'rtc.ice_restart_success',\\r\\n\\r\\n    /**\\r\\n     * Designates an event indicating that we were kicked from the XMPP MUC.\\r\\n     * @param {boolean} isSelfPresence - whether it is for local participant\\r\\n     * or another participant.\\r\\n     * @param {string} actorJid - the jid of the participant who was initator\\r\\n     * of the kick.\\r\\n     * @param {?string} participantJid - when it is not a kick for local participant,\\r\\n     * this is the jid of the participant which was kicked.\\r\\n     */\\r\\n    KICKED: 'xmpp.kicked',\\r\\n\\r\\n    // Designates an event indicating that our role in the XMPP MUC has changed.\\r\\n    LOCAL_ROLE_CHANGED: 'xmpp.localrole_changed',\\r\\n\\r\\n    // Designates an event indicating that an XMPP message in the MUC was\\r\\n    // received.\\r\\n    MESSAGE_RECEIVED: 'xmpp.message_received',\\r\\n\\r\\n    // Designates an event indicating that a private XMPP message in the MUC was\\r\\n    // received.\\r\\n    PRIVATE_MESSAGE_RECEIVED: 'xmpp.private_message_received',\\r\\n\\r\\n    // Designates an event indicating that a bot participant type had changed\\r\\n    MUC_MEMBER_BOT_TYPE_CHANGED: 'xmpp.muc_member_bot_type_changed',\\r\\n\\r\\n    // Designates an event indicating that the XMPP MUC was destroyed.\\r\\n    MUC_DESTROYED: 'xmpp.muc_destroyed',\\r\\n\\r\\n    // Designates an event indicating that we have joined the XMPP MUC.\\r\\n    MUC_JOINED: 'xmpp.muc_joined',\\r\\n\\r\\n    // Designates an event indicating that a participant joined the XMPP MUC.\\r\\n    MUC_MEMBER_JOINED: 'xmpp.muc_member_joined',\\r\\n\\r\\n    // Designates an event indicating that a participant left the XMPP MUC.\\r\\n    MUC_MEMBER_LEFT: 'xmpp.muc_member_left',\\r\\n\\r\\n    // Designates an event indicating that local participant left the muc\\r\\n    MUC_LEFT: 'xmpp.muc_left',\\r\\n\\r\\n    // Designates an event indicating that the MUC role of a participant has\\r\\n    // changed.\\r\\n    MUC_ROLE_CHANGED: 'xmpp.muc_role_changed',\\r\\n\\r\\n    // Designates an event indicating that the MUC has been locked or unlocked.\\r\\n    MUC_LOCK_CHANGED: 'xmpp.muc_lock_changed',\\r\\n\\r\\n    // Designates an event indicating that a participant in the XMPP MUC has\\r\\n    // advertised that they have audio muted (or unmuted).\\r\\n    PARTICIPANT_AUDIO_MUTED: 'xmpp.audio_muted',\\r\\n\\r\\n    // Designates an event indicating that a participant in the XMPP MUC has\\r\\n    // advertised that they have video muted (or unmuted).\\r\\n    PARTICIPANT_VIDEO_MUTED: 'xmpp.video_muted',\\r\\n\\r\\n    // Designates an event indicating that the video type (e.g. 'camera' or\\r\\n    // 'screen') for a participant has changed.\\r\\n    // Note: currently this event fires every time we receive presence from\\r\\n    // someone (regardless of whether or not the \\\"video type\\\" changed).\\r\\n    PARTICIPANT_VIDEO_TYPE_CHANGED: 'xmpp.video_type',\\r\\n\\r\\n    /**\\r\\n     * Indicates that the features of the participant has been changed.\\r\\n     */\\r\\n    PARTCIPANT_FEATURES_CHANGED: 'xmpp.partcipant_features_changed',\\r\\n    PASSWORD_REQUIRED: 'xmpp.password_required',\\r\\n    PEERCONNECTION_READY: 'xmpp.peerconnection_ready',\\r\\n\\r\\n    /**\\r\\n     * Indicates that phone number changed.\\r\\n     */\\r\\n    PHONE_NUMBER_CHANGED: 'conference.phoneNumberChanged',\\r\\n    PRESENCE_RECEIVED: 'xmpp.presence_received',\\r\\n    PRESENCE_STATUS: 'xmpp.presence_status',\\r\\n    PROMPT_FOR_LOGIN: 'xmpp.prompt_for_login',\\r\\n\\r\\n    // xmpp is connected and obtained user media\\r\\n    READY_TO_JOIN: 'xmpp.ready_to_join',\\r\\n\\r\\n    /**\\r\\n     * Indicates that recording state changed.\\r\\n     */\\r\\n    RECORDER_STATE_CHANGED: 'xmpp.recorderStateChanged',\\r\\n\\r\\n    // Designates an event indicating that we received statistics from a\\r\\n    // participant in the MUC.\\r\\n    REMOTE_STATS: 'xmpp.remote_stats',\\r\\n\\r\\n    /**\\r\\n     * Indicates that the offer / answer renegotiation has failed.\\r\\n     */\\r\\n    RENEGOTIATION_FAILED: 'xmpp.renegotiation_failed',\\r\\n    RESERVATION_ERROR: 'xmpp.room_reservation_error',\\r\\n    ROOM_CONNECT_ERROR: 'xmpp.room_connect_error',\\r\\n    ROOM_CONNECT_NOT_ALLOWED_ERROR: 'xmpp.room_connect_error.not_allowed',\\r\\n    ROOM_JOIN_ERROR: 'xmpp.room_join_error',\\r\\n\\r\\n    /**\\r\\n     * Indicates that max users limit has been reached.\\r\\n     */\\r\\n    ROOM_MAX_USERS_ERROR: 'xmpp.room_max_users_error',\\r\\n\\r\\n    // Designates an event indicating that we sent an XMPP message to the MUC.\\r\\n    SENDING_CHAT_MESSAGE: 'xmpp.sending_chat_message',\\r\\n\\r\\n    // Designates an event indicating that we sent a private XMPP message to\\r\\n    // a specific user of the muc.\\r\\n    SENDING_PRIVATE_CHAT_MESSAGE: 'xmpp.sending_private_chat_message',\\r\\n\\r\\n    /**\\r\\n     * Event fired when we do not get our 'session-accept' acknowledged by\\r\\n     * Jicofo. It most likely means that there is serious problem with our\\r\\n     * connection or XMPP server and we should reload the conference.\\r\\n     *\\r\\n     * We have seen that to happen in BOSH requests race condition when the BOSH\\r\\n     * request table containing the 'session-accept' was discarded by Prosody.\\r\\n     * Jicofo does send the RESULT immediately without any condition, so missing\\r\\n     * packets means that most likely it has never seen our IQ.\\r\\n     */\\r\\n    SESSION_ACCEPT_TIMEOUT: 'xmpp.session_accept_timeout',\\r\\n\\r\\n    /**\\r\\n     * Event fired when speaker stats update message is received.\\r\\n     */\\r\\n    SPEAKER_STATS_RECEIVED: 'xmpp.speaker_stats_received',\\r\\n\\r\\n    // Designates an event indicating that we should join the conference with\\r\\n    // audio and/or video muted.\\r\\n    START_MUTED_FROM_FOCUS: 'xmpp.start_muted_from_focus',\\r\\n\\r\\n    // Designates an event indicating that the subject of the XMPP MUC has\\r\\n    // changed.\\r\\n    SUBJECT_CHANGED: 'xmpp.subject_changed',\\r\\n\\r\\n    // FIXME: how does it belong to XMPP ? - it's detected by the PeerConnection\\r\\n    // suspending detected\\r\\n    SUSPEND_DETECTED: 'xmpp.suspend_detected',\\r\\n\\r\\n    /**\\r\\n     * Notifies for transcription status changes. The event provides the\\r\\n     * following parameters to its listeners:\\r\\n     *\\r\\n     * @param {String} status - The new status.\\r\\n     */\\r\\n    TRANSCRIPTION_STATUS_CHANGED: 'xmpp.transcription_status_changed',\\r\\n\\r\\n    /**\\r\\n     * Event fired when 'transport-info' with new ICE candidates is received.\\r\\n     */\\r\\n    TRANSPORT_INFO: 'xmpp.transportinfo.jingle',\\r\\n\\r\\n    /**\\r\\n     * Indicates that video SIP GW state changed.\\r\\n     *\\r\\n     * @param {VideoSIPGWConstants} status - Any of the following statuses:\\r\\n     * STATUS_BUSY, STATUS_AVAILABLE or STATUS_UNDEFINED.\\r\\n     */\\r\\n    VIDEO_SIP_GW_AVAILABILITY_CHANGED: 'xmpp.videoSIPGWAvailabilityChanged',\\r\\n\\r\\n    /**\\r\\n     * Indicates that video SIP GW Session state changed.\\r\\n     * The statuses are any of the following statuses:\\r\\n     * STATE_ON, STATE_OFF, STATE_PENDING, STATE_RETRYING, STATE_FAILED.\\r\\n     * {@see VideoSIPGWConstants}\\r\\n     *\\r\\n     * @param {options} event - {address, oldState, newState, displayName}.\\r\\n     */\\r\\n    VIDEO_SIP_GW_SESSION_STATE_CHANGED:\\r\\n        'xmpp.videoSIPGWSessionStateChanged',\\r\\n\\r\\n    // Designates an event indicating that the local ICE connection state has\\r\\n    // changed.\\r\\n    ICE_CONNECTION_STATE_CHANGED: 'xmpp.ice_connection_state_changed',\\r\\n\\r\\n    /**\\r\\n     * Event which is emitted when the body in an XMPP message in the MUC\\r\\n     * contains JSON\\r\\n     */\\r\\n    JSON_MESSAGE_RECEIVED: 'xmmp.json_message_received'\\r\\n};\\r\\n\\r\\nmodule.exports = XMPPEvents;\\r\\n\",\"/** File: strophe.js\\n *  A JavaScript library for writing XMPP clients.\\n *\\n *  This library uses either Bidirectional-streams Over Synchronous HTTP (BOSH)\\n *  to emulate a persistent, stateful, two-way connection to an XMPP server or\\n *  alternatively WebSockets.\\n *\\n *  More information on BOSH can be found in XEP 124.\\n *  For more information on XMPP-over WebSocket see this RFC:\\n *  http://tools.ietf.org/html/rfc7395\\n */\\n\\n/* All of the Strophe globals are defined in this special function below so\\n * that references to the globals become closures.  This will ensure that\\n * on page reload, these references will still be available to callbacks\\n * that are still executing.\\n */\\n\\n/* jshint ignore:start */\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        //Allow using this built library as an AMD module\\n        //in another project. That other project will only\\n        //see this AMD call, not the internal modules in\\n        //the closure below.\\n        define([], factory);\\n    } else {\\n        //Browser globals case.\\n        var wrapper = factory();\\n        root.Strophe        = wrapper.Strophe;\\n        root.$build         = wrapper.$build;\\n        root.$iq            = wrapper.$iq;\\n        root.$msg           = wrapper.$msg;\\n        root.$pres          = wrapper.$pres;\\n        root.SHA1           = wrapper.SHA1;\\n        root.MD5            = wrapper.MD5;\\n        root.b64_hmac_sha1  = wrapper.b64_hmac_sha1;\\n        root.b64_sha1       = wrapper.b64_sha1;\\n        root.str_hmac_sha1  = wrapper.str_hmac_sha1;\\n        root.str_sha1       = wrapper.str_sha1;\\n    }\\n}(this, function () {\\n    //almond, and your modules will be inlined here\\n/* jshint ignore:end */\\n/**\\n * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.\\n * Released under MIT license, http://github.com/requirejs/almond/LICENSE\\n */\\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\\n//be followed.\\n/*global setTimeout: false */\\n\\nvar requirejs, require, define;\\n(function (undef) {\\n    var main, req, makeMap, handlers,\\n        defined = {},\\n        waiting = {},\\n        config = {},\\n        defining = {},\\n        hasOwn = Object.prototype.hasOwnProperty,\\n        aps = [].slice,\\n        jsSuffixRegExp = /\\\\.js$/;\\n\\n    function hasProp(obj, prop) {\\n        return hasOwn.call(obj, prop);\\n    }\\n\\n    /**\\n     * Given a relative module name, like ./something, normalize it to\\n     * a real name that can be mapped to a path.\\n     * @param {String} name the relative name\\n     * @param {String} baseName a real name that the name arg is relative\\n     * to.\\n     * @returns {String} normalized name\\n     */\\n    function normalize(name, baseName) {\\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\\n            foundI, foundStarMap, starI, i, j, part, normalizedBaseParts,\\n            baseParts = baseName && baseName.split(\\\"/\\\"),\\n            map = config.map,\\n            starMap = (map && map['*']) || {};\\n\\n        //Adjust any relative paths.\\n        if (name) {\\n            name = name.split('/');\\n            lastIndex = name.length - 1;\\n\\n            // If wanting node ID compatibility, strip .js from end\\n            // of IDs. Have to do this here, and not in nameToUrl\\n            // because node allows either .js or non .js to map\\n            // to same file.\\n            if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\\n                name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\\n            }\\n\\n            // Starts with a '.' so need the baseName\\n            if (name[0].charAt(0) === '.' && baseParts) {\\n                //Convert baseName to array, and lop off the last part,\\n                //so that . matches that 'directory' and not name of the baseName's\\n                //module. For instance, baseName of 'one/two/three', maps to\\n                //'one/two/three.js', but we want the directory, 'one/two' for\\n                //this normalization.\\n                normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\\n                name = normalizedBaseParts.concat(name);\\n            }\\n\\n            //start trimDots\\n            for (i = 0; i < name.length; i++) {\\n                part = name[i];\\n                if (part === '.') {\\n                    name.splice(i, 1);\\n                    i -= 1;\\n                } else if (part === '..') {\\n                    // If at the start, or previous value is still ..,\\n                    // keep them so that when converted to a path it may\\n                    // still work when converted to a path, even though\\n                    // as an ID it is less than ideal. In larger point\\n                    // releases, may be better to just kick out an error.\\n                    if (i === 0 || (i === 1 && name[2] === '..') || name[i - 1] === '..') {\\n                        continue;\\n                    } else if (i > 0) {\\n                        name.splice(i - 1, 2);\\n                        i -= 2;\\n                    }\\n                }\\n            }\\n            //end trimDots\\n\\n            name = name.join('/');\\n        }\\n\\n        //Apply map config if available.\\n        if ((baseParts || starMap) && map) {\\n            nameParts = name.split('/');\\n\\n            for (i = nameParts.length; i > 0; i -= 1) {\\n                nameSegment = nameParts.slice(0, i).join(\\\"/\\\");\\n\\n                if (baseParts) {\\n                    //Find the longest baseName segment match in the config.\\n                    //So, do joins on the biggest to smallest lengths of baseParts.\\n                    for (j = baseParts.length; j > 0; j -= 1) {\\n                        mapValue = map[baseParts.slice(0, j).join('/')];\\n\\n                        //baseName segment has  config, find if it has one for\\n                        //this name.\\n                        if (mapValue) {\\n                            mapValue = mapValue[nameSegment];\\n                            if (mapValue) {\\n                                //Match, update name to the new value.\\n                                foundMap = mapValue;\\n                                foundI = i;\\n                                break;\\n                            }\\n                        }\\n                    }\\n                }\\n\\n                if (foundMap) {\\n                    break;\\n                }\\n\\n                //Check for a star map match, but just hold on to it,\\n                //if there is a shorter segment match later in a matching\\n                //config, then favor over this star map.\\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\\n                    foundStarMap = starMap[nameSegment];\\n                    starI = i;\\n                }\\n            }\\n\\n            if (!foundMap && foundStarMap) {\\n                foundMap = foundStarMap;\\n                foundI = starI;\\n            }\\n\\n            if (foundMap) {\\n                nameParts.splice(0, foundI, foundMap);\\n                name = nameParts.join('/');\\n            }\\n        }\\n\\n        return name;\\n    }\\n\\n    function makeRequire(relName, forceSync) {\\n        return function () {\\n            //A version of a require function that passes a moduleName\\n            //value for items that may need to\\n            //look up paths relative to the moduleName\\n            var args = aps.call(arguments, 0);\\n\\n            //If first arg is not require('string'), and there is only\\n            //one arg, it is the array form without a callback. Insert\\n            //a null so that the following concat is correct.\\n            if (typeof args[0] !== 'string' && args.length === 1) {\\n                args.push(null);\\n            }\\n            return req.apply(undef, args.concat([relName, forceSync]));\\n        };\\n    }\\n\\n    function makeNormalize(relName) {\\n        return function (name) {\\n            return normalize(name, relName);\\n        };\\n    }\\n\\n    function makeLoad(depName) {\\n        return function (value) {\\n            defined[depName] = value;\\n        };\\n    }\\n\\n    function callDep(name) {\\n        if (hasProp(waiting, name)) {\\n            var args = waiting[name];\\n            delete waiting[name];\\n            defining[name] = true;\\n            main.apply(undef, args);\\n        }\\n\\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\\n            throw new Error('No ' + name);\\n        }\\n        return defined[name];\\n    }\\n\\n    //Turns a plugin!resource to [plugin, resource]\\n    //with the plugin being undefined if the name\\n    //did not have a plugin prefix.\\n    function splitPrefix(name) {\\n        var prefix,\\n            index = name ? name.indexOf('!') : -1;\\n        if (index > -1) {\\n            prefix = name.substring(0, index);\\n            name = name.substring(index + 1, name.length);\\n        }\\n        return [prefix, name];\\n    }\\n\\n    //Creates a parts array for a relName where first part is plugin ID,\\n    //second part is resource ID. Assumes relName has already been normalized.\\n    function makeRelParts(relName) {\\n        return relName ? splitPrefix(relName) : [];\\n    }\\n\\n    /**\\n     * Makes a name map, normalizing the name, and using a plugin\\n     * for normalization if necessary. Grabs a ref to plugin\\n     * too, as an optimization.\\n     */\\n    makeMap = function (name, relParts) {\\n        var plugin,\\n            parts = splitPrefix(name),\\n            prefix = parts[0],\\n            relResourceName = relParts[1];\\n\\n        name = parts[1];\\n\\n        if (prefix) {\\n            prefix = normalize(prefix, relResourceName);\\n            plugin = callDep(prefix);\\n        }\\n\\n        //Normalize according\\n        if (prefix) {\\n            if (plugin && plugin.normalize) {\\n                name = plugin.normalize(name, makeNormalize(relResourceName));\\n            } else {\\n                name = normalize(name, relResourceName);\\n            }\\n        } else {\\n            name = normalize(name, relResourceName);\\n            parts = splitPrefix(name);\\n            prefix = parts[0];\\n            name = parts[1];\\n            if (prefix) {\\n                plugin = callDep(prefix);\\n            }\\n        }\\n\\n        //Using ridiculous property names for space reasons\\n        return {\\n            f: prefix ? prefix + '!' + name : name, //fullName\\n            n: name,\\n            pr: prefix,\\n            p: plugin\\n        };\\n    };\\n\\n    function makeConfig(name) {\\n        return function () {\\n            return (config && config.config && config.config[name]) || {};\\n        };\\n    }\\n\\n    handlers = {\\n        require: function (name) {\\n            return makeRequire(name);\\n        },\\n        exports: function (name) {\\n            var e = defined[name];\\n            if (typeof e !== 'undefined') {\\n                return e;\\n            } else {\\n                return (defined[name] = {});\\n            }\\n        },\\n        module: function (name) {\\n            return {\\n                id: name,\\n                uri: '',\\n                exports: defined[name],\\n                config: makeConfig(name)\\n            };\\n        }\\n    };\\n\\n    main = function (name, deps, callback, relName) {\\n        var cjsModule, depName, ret, map, i, relParts,\\n            args = [],\\n            callbackType = typeof callback,\\n            usingExports;\\n\\n        //Use name if no relName\\n        relName = relName || name;\\n        relParts = makeRelParts(relName);\\n\\n        //Call the callback to define the module, if necessary.\\n        if (callbackType === 'undefined' || callbackType === 'function') {\\n            //Pull out the defined dependencies and pass the ordered\\n            //values to the callback.\\n            //Default to [require, exports, module] if no deps\\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\\n            for (i = 0; i < deps.length; i += 1) {\\n                map = makeMap(deps[i], relParts);\\n                depName = map.f;\\n\\n                //Fast path CommonJS standard dependencies.\\n                if (depName === \\\"require\\\") {\\n                    args[i] = handlers.require(name);\\n                } else if (depName === \\\"exports\\\") {\\n                    //CommonJS module spec 1.1\\n                    args[i] = handlers.exports(name);\\n                    usingExports = true;\\n                } else if (depName === \\\"module\\\") {\\n                    //CommonJS module spec 1.1\\n                    cjsModule = args[i] = handlers.module(name);\\n                } else if (hasProp(defined, depName) ||\\n                           hasProp(waiting, depName) ||\\n                           hasProp(defining, depName)) {\\n                    args[i] = callDep(depName);\\n                } else if (map.p) {\\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\\n                    args[i] = defined[depName];\\n                } else {\\n                    throw new Error(name + ' missing ' + depName);\\n                }\\n            }\\n\\n            ret = callback ? callback.apply(defined[name], args) : undefined;\\n\\n            if (name) {\\n                //If setting exports via \\\"module\\\" is in play,\\n                //favor that over return value and exports. After that,\\n                //favor a non-undefined return value over exports use.\\n                if (cjsModule && cjsModule.exports !== undef &&\\n                        cjsModule.exports !== defined[name]) {\\n                    defined[name] = cjsModule.exports;\\n                } else if (ret !== undef || !usingExports) {\\n                    //Use the return value from the function.\\n                    defined[name] = ret;\\n                }\\n            }\\n        } else if (name) {\\n            //May just be an object definition for the module. Only\\n            //worry about defining if have a module name.\\n            defined[name] = callback;\\n        }\\n    };\\n\\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\\n        if (typeof deps === \\\"string\\\") {\\n            if (handlers[deps]) {\\n                //callback in this case is really relName\\n                return handlers[deps](callback);\\n            }\\n            //Just return the module wanted. In this scenario, the\\n            //deps arg is the module name, and second arg (if passed)\\n            //is just the relName.\\n            //Normalize module name, if it contains . or ..\\n            return callDep(makeMap(deps, makeRelParts(callback)).f);\\n        } else if (!deps.splice) {\\n            //deps is a config object, not an array.\\n            config = deps;\\n            if (config.deps) {\\n                req(config.deps, config.callback);\\n            }\\n            if (!callback) {\\n                return;\\n            }\\n\\n            if (callback.splice) {\\n                //callback is an array, which means it is a dependency list.\\n                //Adjust args if there are dependencies\\n                deps = callback;\\n                callback = relName;\\n                relName = null;\\n            } else {\\n                deps = undef;\\n            }\\n        }\\n\\n        //Support require(['a'])\\n        callback = callback || function () {};\\n\\n        //If relName is a function, it is an errback handler,\\n        //so remove it.\\n        if (typeof relName === 'function') {\\n            relName = forceSync;\\n            forceSync = alt;\\n        }\\n\\n        //Simulate async callback;\\n        if (forceSync) {\\n            main(undef, deps, callback, relName);\\n        } else {\\n            //Using a non-zero value because of concern for what old browsers\\n            //do, and latest browsers \\\"upgrade\\\" to 4 if lower value is used:\\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\\n            //If want a value immediately, use require('id') instead -- something\\n            //that works in almond on the global level, but not guaranteed and\\n            //unlikely to work in other AMD implementations.\\n            setTimeout(function () {\\n                main(undef, deps, callback, relName);\\n            }, 4);\\n        }\\n\\n        return req;\\n    };\\n\\n    /**\\n     * Just drops the config on the floor, but returns req in case\\n     * the config return value is used.\\n     */\\n    req.config = function (cfg) {\\n        return req(cfg);\\n    };\\n\\n    /**\\n     * Expose module registry for debugging and tooling\\n     */\\n    requirejs._defined = defined;\\n\\n    define = function (name, deps, callback) {\\n        if (typeof name !== 'string') {\\n            throw new Error('See almond README: incorrect module build, no module name');\\n        }\\n\\n        //This module may not have dependencies\\n        if (!deps.splice) {\\n            //deps is not an array, so probably means\\n            //an object literal or factory function for\\n            //the value. Adjust args.\\n            callback = deps;\\n            deps = [];\\n        }\\n\\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\\n            waiting[name] = [name, deps, callback];\\n        }\\n    };\\n\\n    define.amd = {\\n        jQuery: true\\n    };\\n}());\\n\\ndefine(\\\"node_modules/almond/almond.js\\\", function(){});\\n\\n/*\\n    This program is distributed under the terms of the MIT license.\\n    Please see the LICENSE file for details.\\n\\n    Copyright 2006-2008, OGG, LLC\\n*/\\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\\n/* global define */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-polyfill',[], function () {\\n            return factory(root);\\n        });\\n    } else {\\n        // Browser globals\\n        return factory(root);\\n    }\\n}(this, function (root) {\\n\\n/** Function: Function.prototype.bind\\n *  Bind a function to an instance.\\n *\\n *  This Function object extension method creates a bound method similar\\n *  to those in Python.  This means that the 'this' object will point\\n *  to the instance you want.  See <MDC's bind() documentation at https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind>\\n *  and <Bound Functions and Function Imports in JavaScript at http://benjamin.smedbergs.us/blog/2007-01-03/bound-functions-and-function-imports-in-javascript/>\\n *  for a complete explanation.\\n *\\n *  This extension already exists in some browsers (namely, Firefox 3), but\\n *  we provide it to support those that don't.\\n *\\n *  Parameters:\\n *    (Object) obj - The object that will become 'this' in the bound function.\\n *    (Object) argN - An option argument that will be prepended to the\\n *      arguments given for the function call\\n *\\n *  Returns:\\n *    The bound function.\\n */\\nif (!Function.prototype.bind) {\\n    Function.prototype.bind = function (obj /*, arg1, arg2, ... */) {\\n        var func = this;\\n        var _slice = Array.prototype.slice;\\n        var _concat = Array.prototype.concat;\\n        var _args = _slice.call(arguments, 1);\\n        return function () {\\n            return func.apply(obj ? obj : this, _concat.call(_args, _slice.call(arguments, 0)));\\n        };\\n    };\\n}\\n\\n/** Function: Array.isArray\\n *  This is a polyfill for the ES5 Array.isArray method.\\n */\\nif (!Array.isArray) {\\n    Array.isArray = function(arg) {\\n        return Object.prototype.toString.call(arg) === '[object Array]';\\n    };\\n}\\n\\n/** Function: Array.prototype.indexOf\\n *  Return the index of an object in an array.\\n *\\n *  This function is not supplied by some JavaScript implementations, so\\n *  we provide it if it is missing.  This code is from:\\n *  http://developer.mozilla.org/En/Core_JavaScript_1.5_Reference:Objects:Array:indexOf\\n *\\n *  Parameters:\\n *    (Object) elt - The object to look for.\\n *    (Integer) from - The index from which to start looking. (optional).\\n *\\n *  Returns:\\n *    The index of elt in the array or -1 if not found.\\n */\\nif (!Array.prototype.indexOf) {\\n    Array.prototype.indexOf = function(elt /*, from*/) {\\n        var len = this.length;\\n        var from = Number(arguments[1]) || 0;\\n        from = (from < 0) ? Math.ceil(from) : Math.floor(from);\\n        if (from < 0) {\\n            from += len;\\n        }\\n\\n        for (; from < len; from++) {\\n            if (from in this && this[from] === elt) {\\n                return from;\\n            }\\n        }\\n        return -1;\\n    };\\n}\\n\\n/** Function: Array.prototype.forEach\\n *\\n *  This function is not available in IE < 9\\n *\\n *  See <forEach on developer.mozilla.org at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach>\\n */\\nif (!Array.prototype.forEach) {\\n    Array.prototype.forEach = function(callback, thisArg) {\\n        var T, k;\\n        if (this === null) {\\n            throw new TypeError(' this is null or not defined');\\n        }\\n        // 1. Let O be the result of calling toObject() passing the\\n        // |this| value as the argument.\\n        var O = Object(this);\\n        // 2. Let lenValue be the result of calling the Get() internal\\n        // method of O with the argument \\\"length\\\".\\n        // 3. Let len be toUint32(lenValue).\\n        var len = O.length >>> 0;\\n        // 4. If isCallable(callback) is false, throw a TypeError exception.\\n        // See: http://es5.github.com/#x9.11\\n        if (typeof callback !== \\\"function\\\") {\\n            throw new TypeError(callback + ' is not a function');\\n        }\\n        // 5. If thisArg was supplied, let T be thisArg; else let\\n        // T be undefined.\\n        if (arguments.length > 1) {\\n            T = thisArg;\\n        }\\n        // 6. Let k be 0\\n        k = 0;\\n        // 7. Repeat, while k < len\\n        while (k < len) {\\n            var kValue;\\n            // a. Let Pk be ToString(k).\\n            //        This is implicit for LHS operands of the in operator\\n            // b. Let kPresent be the result of calling the HasProperty\\n            //        internal method of O with argument Pk.\\n            //        This step can be combined with c\\n            // c. If kPresent is true, then\\n            if (k in O) {\\n                // i. Let kValue be the result of calling the Get internal\\n                // method of O with argument Pk.\\n                kValue = O[k];\\n                // ii. Call the Call internal method of callback with T as\\n                // the this value and argument list containing kValue, k, and O.\\n                callback.call(T, kValue, k, O);\\n            }\\n            // d. Increase k by 1.\\n            k++;\\n        }\\n        // 8. return undefined\\n    };\\n}\\n\\n// This code was written by Tyler Akins and has been placed in the\\n// public domain.  It would be nice if you left this header intact.\\n// Base64 code from Tyler Akins -- http://rumkin.com\\nvar keyStr = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\";\\nif (!root.btoa) {\\n    root.btoa = function (input) {\\n        /**\\n         * Encodes a string in base64\\n         * @param {String} input The string to encode in base64.\\n         */\\n        var output = \\\"\\\";\\n        var chr1, chr2, chr3;\\n        var enc1, enc2, enc3, enc4;\\n        var i = 0;\\n        do {\\n            chr1 = input.charCodeAt(i++);\\n            chr2 = input.charCodeAt(i++);\\n            chr3 = input.charCodeAt(i++);\\n\\n            enc1 = chr1 >> 2;\\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\\n            enc4 = chr3 & 63;\\n\\n            if (isNaN(chr2)) {\\n                enc2 = ((chr1 & 3) << 4);\\n                enc3 = enc4 = 64;\\n            } else if (isNaN(chr3)) {\\n                enc4 = 64;\\n            }\\n            output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) +\\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\\n        } while (i < input.length);\\n        return output;\\n    };\\n}\\n\\nif (!root.atob) {\\n    root.atob = function (input) {\\n        /**\\n         * Decodes a base64 string.\\n         * @param {String} input The string to decode.\\n         */\\n        var output = \\\"\\\";\\n        var chr1, chr2, chr3;\\n        var enc1, enc2, enc3, enc4;\\n        var i = 0;\\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\\n        input = input.replace(/[^A-Za-z0-9\\\\+\\\\/\\\\=]/g, \\\"\\\");\\n        do {\\n            enc1 = keyStr.indexOf(input.charAt(i++));\\n            enc2 = keyStr.indexOf(input.charAt(i++));\\n            enc3 = keyStr.indexOf(input.charAt(i++));\\n            enc4 = keyStr.indexOf(input.charAt(i++));\\n\\n            chr1 = (enc1 << 2) | (enc2 >> 4);\\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\\n            chr3 = ((enc3 & 3) << 6) | enc4;\\n\\n            output = output + String.fromCharCode(chr1);\\n\\n            if (enc3 !== 64) {\\n                output = output + String.fromCharCode(chr2);\\n            }\\n            if (enc4 !== 64) {\\n                output = output + String.fromCharCode(chr3);\\n            }\\n        } while (i < input.length);\\n        return output;\\n    };\\n}\\n}));\\n\\n/*\\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\\n * in FIPS PUB 180-1\\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\\n * Distributed under the BSD License\\n * See http://pajhome.org.uk/crypt/md5 for details.\\n */\\n\\n/* jshint undef: true, unused: true:, noarg: true, latedef: false */\\n/* global define */\\n\\n/* Some functions and variables have been stripped for use with Strophe */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-sha1', [],function () {\\n            return factory();\\n        });\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory();\\n    } else {\\n        // Browser globals\\n        root.SHA1 = factory();\\n    }\\n}(this, function () {\\n\\n/*\\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\\n */\\nfunction core_sha1(x, len)\\n{\\n  /* append padding */\\n  x[len >> 5] |= 0x80 << (24 - len % 32);\\n  x[((len + 64 >> 9) << 4) + 15] = len;\\n\\n  var w = new Array(80);\\n  var a =  1732584193;\\n  var b = -271733879;\\n  var c = -1732584194;\\n  var d =  271733878;\\n  var e = -1009589776;\\n\\n  var i, j, t, olda, oldb, oldc, oldd, olde;\\n  for (i = 0; i < x.length; i += 16)\\n  {\\n    olda = a;\\n    oldb = b;\\n    oldc = c;\\n    oldd = d;\\n    olde = e;\\n\\n    for (j = 0; j < 80; j++)\\n    {\\n      if (j < 16) { w[j] = x[i + j]; }\\n      else { w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1); }\\n      t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),\\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\\n      e = d;\\n      d = c;\\n      c = rol(b, 30);\\n      b = a;\\n      a = t;\\n    }\\n\\n    a = safe_add(a, olda);\\n    b = safe_add(b, oldb);\\n    c = safe_add(c, oldc);\\n    d = safe_add(d, oldd);\\n    e = safe_add(e, olde);\\n  }\\n  return [a, b, c, d, e];\\n}\\n\\n/*\\n * Perform the appropriate triplet combination function for the current\\n * iteration\\n */\\nfunction sha1_ft(t, b, c, d)\\n{\\n  if (t < 20) { return (b & c) | ((~b) & d); }\\n  if (t < 40) { return b ^ c ^ d; }\\n  if (t < 60) { return (b & c) | (b & d) | (c & d); }\\n  return b ^ c ^ d;\\n}\\n\\n/*\\n * Determine the appropriate additive constant for the current iteration\\n */\\nfunction sha1_kt(t)\\n{\\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\\n         (t < 60) ? -1894007588 : -899497514;\\n}\\n\\n/*\\n * Calculate the HMAC-SHA1 of a key and some data\\n */\\nfunction core_hmac_sha1(key, data)\\n{\\n  var bkey = str2binb(key);\\n  if (bkey.length > 16) { bkey = core_sha1(bkey, key.length * 8); }\\n\\n  var ipad = new Array(16), opad = new Array(16);\\n  for (var i = 0; i < 16; i++)\\n  {\\n    ipad[i] = bkey[i] ^ 0x36363636;\\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\\n  }\\n\\n  var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\\n  return core_sha1(opad.concat(hash), 512 + 160);\\n}\\n\\n/*\\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\\n * to work around bugs in some JS interpreters.\\n */\\nfunction safe_add(x, y)\\n{\\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\\n  return (msw << 16) | (lsw & 0xFFFF);\\n}\\n\\n/*\\n * Bitwise rotate a 32-bit number to the left.\\n */\\nfunction rol(num, cnt)\\n{\\n  return (num << cnt) | (num >>> (32 - cnt));\\n}\\n\\n/*\\n * Convert an 8-bit or 16-bit string to an array of big-endian words\\n * In 8-bit function, characters >255 have their hi-byte silently ignored.\\n */\\nfunction str2binb(str)\\n{\\n  var bin = [];\\n  var mask = 255;\\n  for (var i = 0; i < str.length * 8; i += 8)\\n  {\\n    bin[i>>5] |= (str.charCodeAt(i / 8) & mask) << (24 - i%32);\\n  }\\n  return bin;\\n}\\n\\n/*\\n * Convert an array of big-endian words to a string\\n */\\nfunction binb2str(bin)\\n{\\n  var str = \\\"\\\";\\n  var mask = 255;\\n  for (var i = 0; i < bin.length * 32; i += 8)\\n  {\\n    str += String.fromCharCode((bin[i>>5] >>> (24 - i%32)) & mask);\\n  }\\n  return str;\\n}\\n\\n/*\\n * Convert an array of big-endian words to a base-64 string\\n */\\nfunction binb2b64(binarray)\\n{\\n  var tab = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n  var str = \\\"\\\";\\n  var triplet, j;\\n  for (var i = 0; i < binarray.length * 4; i += 3)\\n  {\\n    triplet = (((binarray[i   >> 2] >> 8 * (3 -  i   %4)) & 0xFF) << 16) |\\n              (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 ) |\\n               ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF);\\n    for (j = 0; j < 4; j++)\\n    {\\n      if (i * 8 + j * 6 > binarray.length * 32) { str += \\\"=\\\"; }\\n      else { str += tab.charAt((triplet >> 6*(3-j)) & 0x3F); }\\n    }\\n  }\\n  return str;\\n}\\n\\n/*\\n * These are the functions you'll usually want to call\\n * They take string arguments and return either hex or base-64 encoded strings\\n */\\nreturn {\\n    b64_hmac_sha1:  function (key, data){ return binb2b64(core_hmac_sha1(key, data)); },\\n    b64_sha1:       function (s) { return binb2b64(core_sha1(str2binb(s),s.length * 8)); },\\n    binb2str:       binb2str,\\n    core_hmac_sha1: core_hmac_sha1,\\n    str_hmac_sha1:  function (key, data){ return binb2str(core_hmac_sha1(key, data)); },\\n    str_sha1:       function (s) { return binb2str(core_sha1(str2binb(s),s.length * 8)); },\\n};\\n}));\\n\\n/*\\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\\n * Digest Algorithm, as defined in RFC 1321.\\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\\n * Distributed under the BSD License\\n * See http://pajhome.org.uk/crypt/md5 for more info.\\n */\\n/*\\n * Everything that isn't used by Strophe has been stripped here!\\n */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-md5',[], function () {\\n            return factory();\\n        });\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory();\\n    } else {\\n        // Browser globals\\n        root.MD5 = factory();\\n    }\\n}(this, function () {\\n    /*\\n     * Add integers, wrapping at 2^32. This uses 16-bit operations internally\\n     * to work around bugs in some JS interpreters.\\n     */\\n    var safe_add = function (x, y) {\\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\\n        return (msw << 16) | (lsw & 0xFFFF);\\n    };\\n\\n    /*\\n     * Bitwise rotate a 32-bit number to the left.\\n     */\\n    var bit_rol = function (num, cnt) {\\n        return (num << cnt) | (num >>> (32 - cnt));\\n    };\\n\\n    /*\\n     * Convert a string to an array of little-endian words\\n     */\\n    var str2binl = function (str) {\\n        var bin = [];\\n        for(var i = 0; i < str.length * 8; i += 8)\\n        {\\n            bin[i>>5] |= (str.charCodeAt(i / 8) & 255) << (i%32);\\n        }\\n        return bin;\\n    };\\n\\n    /*\\n     * Convert an array of little-endian words to a string\\n     */\\n    var binl2str = function (bin) {\\n        var str = \\\"\\\";\\n        for(var i = 0; i < bin.length * 32; i += 8)\\n        {\\n            str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & 255);\\n        }\\n        return str;\\n    };\\n\\n    /*\\n     * Convert an array of little-endian words to a hex string.\\n     */\\n    var binl2hex = function (binarray) {\\n        var hex_tab = \\\"0123456789abcdef\\\";\\n        var str = \\\"\\\";\\n        for(var i = 0; i < binarray.length * 4; i++)\\n        {\\n            str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\\n                hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\\n        }\\n        return str;\\n    };\\n\\n    /*\\n     * These functions implement the four basic operations the algorithm uses.\\n     */\\n    var md5_cmn = function (q, a, b, x, s, t) {\\n        return safe_add(bit_rol(safe_add(safe_add(a, q),safe_add(x, t)), s),b);\\n    };\\n\\n    var md5_ff = function (a, b, c, d, x, s, t) {\\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\\n    };\\n\\n    var md5_gg = function (a, b, c, d, x, s, t) {\\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\\n    };\\n\\n    var md5_hh = function (a, b, c, d, x, s, t) {\\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\\n    };\\n\\n    var md5_ii = function (a, b, c, d, x, s, t) {\\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\\n    };\\n\\n    /*\\n     * Calculate the MD5 of an array of little-endian words, and a bit length\\n     */\\n    var core_md5 = function (x, len) {\\n        /* append padding */\\n        x[len >> 5] |= 0x80 << ((len) % 32);\\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\\n\\n        var a =  1732584193;\\n        var b = -271733879;\\n        var c = -1732584194;\\n        var d =  271733878;\\n\\n        var olda, oldb, oldc, oldd;\\n        for (var i = 0; i < x.length; i += 16)\\n        {\\n            olda = a;\\n            oldb = b;\\n            oldc = c;\\n            oldd = d;\\n\\n            a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\\n            d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\\n            c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\\n            b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\\n            a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\\n            d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\\n            c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\\n            b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\\n            a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\\n            d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\\n            c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\\n            b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\\n            a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\\n            d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\\n            c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\\n            b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\\n\\n            a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\\n            d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\\n            c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\\n            b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\\n            a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\\n            d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\\n            c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\\n            b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\\n            a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\\n            d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\\n            c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\\n            b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\\n            a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\\n            d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\\n            c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\\n            b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\\n\\n            a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\\n            d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\\n            c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\\n            b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\\n            a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\\n            d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\\n            c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\\n            b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\\n            a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\\n            d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\\n            c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\\n            b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\\n            a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\\n            d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\\n            c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\\n            b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\\n\\n            a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\\n            d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\\n            c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\\n            b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\\n            a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\\n            d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\\n            c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\\n            b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\\n            a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\\n            d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\\n            c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\\n            b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\\n            a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\\n            d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\\n            c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\\n            b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\\n\\n            a = safe_add(a, olda);\\n            b = safe_add(b, oldb);\\n            c = safe_add(c, oldc);\\n            d = safe_add(d, oldd);\\n        }\\n        return [a, b, c, d];\\n    };\\n\\n    var obj = {\\n        /*\\n         * These are the functions you'll usually want to call.\\n         * They take string arguments and return either hex or base-64 encoded\\n         * strings.\\n         */\\n        hexdigest: function (s) {\\n            return binl2hex(core_md5(str2binl(s), s.length * 8));\\n        },\\n\\n        hash: function (s) {\\n            return binl2str(core_md5(str2binl(s), s.length * 8));\\n        }\\n    };\\n    return obj;\\n}));\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-utils',[], function () {\\n            return factory();\\n        });\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory();\\n    } else {\\n        // Browser globals\\n        root.stropheUtils = factory();\\n    }\\n}(this, function () {\\n\\n    var utils = {\\n\\n        utf16to8: function (str) {\\n            var i, c;\\n            var out = \\\"\\\";\\n            var len = str.length;\\n            for (i = 0; i < len; i++) {\\n                c = str.charCodeAt(i);\\n                if ((c >= 0x0000) && (c <= 0x007F)) {\\n                    out += str.charAt(i);\\n                } else if (c > 0x07FF) {\\n                    out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\\n                    out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\\n                    out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\\n                } else {\\n                    out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\\n                    out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\\n                }\\n            }\\n            return out;\\n        },\\n\\n        addCookies: function (cookies) {\\n            /* Parameters:\\n             *  (Object) cookies - either a map of cookie names\\n             *    to string values or to maps of cookie values.\\n             *\\n             * For example:\\n             * { \\\"myCookie\\\": \\\"1234\\\" }\\n             *\\n             * or:\\n             * { \\\"myCookie\\\": {\\n             *      \\\"value\\\": \\\"1234\\\",\\n             *      \\\"domain\\\": \\\".example.org\\\",\\n             *      \\\"path\\\": \\\"/\\\",\\n             *      \\\"expires\\\": expirationDate\\n             *      }\\n             *  }\\n             *\\n             *  These values get passed to Strophe.Connection via\\n             *   options.cookies\\n             */\\n            var cookieName, cookieObj, isObj, cookieValue, expires, domain, path;\\n            for (cookieName in (cookies || {})) {\\n                expires = '';\\n                domain = '';\\n                path = '';\\n                cookieObj = cookies[cookieName];\\n                isObj = typeof cookieObj === \\\"object\\\";\\n                cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\\n                if (isObj) {\\n                    expires = cookieObj.expires ? \\\";expires=\\\"+cookieObj.expires : '';\\n                    domain = cookieObj.domain ? \\\";domain=\\\"+cookieObj.domain : '';\\n                    path = cookieObj.path ? \\\";path=\\\"+cookieObj.path : '';\\n                }\\n                document.cookie =\\n                    cookieName+'='+cookieValue + expires + domain + path;\\n            }\\n        }\\n    };\\n    return utils;\\n}));\\n\\n/*\\n    This program is distributed under the terms of the MIT license.\\n    Please see the LICENSE file for details.\\n\\n    Copyright 2006-2008, OGG, LLC\\n*/\\n\\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\\n/*global define, document, sessionStorage, setTimeout, clearTimeout, ActiveXObject, DOMParser, btoa, atob */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-core',[\\n            'strophe-sha1',\\n            'strophe-md5',\\n            'strophe-utils'\\n        ], function () {\\n            return factory.apply(this, arguments);\\n        });\\n    }  else if (typeof exports === 'object') {\\n        module.exports = factory(\\n            require('./sha1'),\\n            require('./md5'),\\n            require('./utils')\\n        );\\n    } else {\\n        // Browser globals\\n        var o = factory(root.SHA1, root.MD5, root.stropheUtils);\\n        root.Strophe =        o.Strophe;\\n        root.$build =         o.$build;\\n        root.$iq =            o.$iq;\\n        root.$msg =           o.$msg;\\n        root.$pres =          o.$pres;\\n        root.SHA1 =           o.SHA1;\\n        root.MD5 =            o.MD5;\\n        root.b64_hmac_sha1 =  o.SHA1.b64_hmac_sha1;\\n        root.b64_sha1 =       o.SHA1.b64_sha1;\\n        root.str_hmac_sha1 =  o.SHA1.str_hmac_sha1;\\n        root.str_sha1 =       o.SHA1.str_sha1;\\n    }\\n}(this, function (SHA1, MD5, utils) {\\n\\nvar Strophe;\\n\\n/** Function: $build\\n *  Create a Strophe.Builder.\\n *  This is an alias for 'new Strophe.Builder(name, attrs)'.\\n *\\n *  Parameters:\\n *    (String) name - The root element name.\\n *    (Object) attrs - The attributes for the root element in object notation.\\n *\\n *  Returns:\\n *    A new Strophe.Builder object.\\n */\\nfunction $build(name, attrs) { return new Strophe.Builder(name, attrs); }\\n\\n/** Function: $msg\\n *  Create a Strophe.Builder with a <message/> element as the root.\\n *\\n *  Parameters:\\n *    (Object) attrs - The <message/> element attributes in object notation.\\n *\\n *  Returns:\\n *    A new Strophe.Builder object.\\n */\\nfunction $msg(attrs) { return new Strophe.Builder(\\\"message\\\", attrs); }\\n\\n/** Function: $iq\\n *  Create a Strophe.Builder with an <iq/> element as the root.\\n *\\n *  Parameters:\\n *    (Object) attrs - The <iq/> element attributes in object notation.\\n *\\n *  Returns:\\n *    A new Strophe.Builder object.\\n */\\nfunction $iq(attrs) { return new Strophe.Builder(\\\"iq\\\", attrs); }\\n\\n/** Function: $pres\\n *  Create a Strophe.Builder with a <presence/> element as the root.\\n *\\n *  Parameters:\\n *    (Object) attrs - The <presence/> element attributes in object notation.\\n *\\n *  Returns:\\n *    A new Strophe.Builder object.\\n */\\nfunction $pres(attrs) { return new Strophe.Builder(\\\"presence\\\", attrs); }\\n\\n/** Class: Strophe\\n *  An object container for all Strophe library functions.\\n *\\n *  This class is just a container for all the objects and constants\\n *  used in the library.  It is not meant to be instantiated, but to\\n *  provide a namespace for library objects, constants, and functions.\\n */\\nStrophe = {\\n    /** Constant: VERSION */\\n    VERSION: \\\"1.2.16\\\",\\n\\n    /** Constants: XMPP Namespace Constants\\n     *  Common namespace constants from the XMPP RFCs and XEPs.\\n     *\\n     *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\\n     *  NS.BOSH - BOSH namespace from XEP 206.\\n     *  NS.CLIENT - Main XMPP client namespace.\\n     *  NS.AUTH - Legacy authentication namespace.\\n     *  NS.ROSTER - Roster operations namespace.\\n     *  NS.PROFILE - Profile namespace.\\n     *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\\n     *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\\n     *  NS.MUC - Multi-User Chat namespace from XEP 45.\\n     *  NS.SASL - XMPP SASL namespace from RFC 3920.\\n     *  NS.STREAM - XMPP Streams namespace from RFC 3920.\\n     *  NS.BIND - XMPP Binding namespace from RFC 3920.\\n     *  NS.SESSION - XMPP Session namespace from RFC 3920.\\n     *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\\n     *  NS.XHTML - XHTML body namespace from XEP 71.\\n     */\\n    NS: {\\n        HTTPBIND: \\\"http://jabber.org/protocol/httpbind\\\",\\n        BOSH: \\\"urn:xmpp:xbosh\\\",\\n        CLIENT: \\\"jabber:client\\\",\\n        AUTH: \\\"jabber:iq:auth\\\",\\n        ROSTER: \\\"jabber:iq:roster\\\",\\n        PROFILE: \\\"jabber:iq:profile\\\",\\n        DISCO_INFO: \\\"http://jabber.org/protocol/disco#info\\\",\\n        DISCO_ITEMS: \\\"http://jabber.org/protocol/disco#items\\\",\\n        MUC: \\\"http://jabber.org/protocol/muc\\\",\\n        SASL: \\\"urn:ietf:params:xml:ns:xmpp-sasl\\\",\\n        STREAM: \\\"http://etherx.jabber.org/streams\\\",\\n        FRAMING: \\\"urn:ietf:params:xml:ns:xmpp-framing\\\",\\n        BIND: \\\"urn:ietf:params:xml:ns:xmpp-bind\\\",\\n        SESSION: \\\"urn:ietf:params:xml:ns:xmpp-session\\\",\\n        VERSION: \\\"jabber:iq:version\\\",\\n        STANZAS: \\\"urn:ietf:params:xml:ns:xmpp-stanzas\\\",\\n        XHTML_IM: \\\"http://jabber.org/protocol/xhtml-im\\\",\\n        XHTML: \\\"http://www.w3.org/1999/xhtml\\\"\\n    },\\n\\n    /** Constants: XHTML_IM Namespace\\n     *  contains allowed tags, tag attributes, and css properties.\\n     *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\\n     *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\\n     *  allowed tags and their attributes.\\n     */\\n    XHTML: {\\n        tags: ['a','blockquote','br','cite','em','img','li','ol','p','span','strong','ul','body'],\\n        attributes: {\\n            'a':          ['href'],\\n            'blockquote': ['style'],\\n            'br':         [],\\n            'cite':       ['style'],\\n            'em':         [],\\n            'img':        ['src', 'alt', 'style', 'height', 'width'],\\n            'li':         ['style'],\\n            'ol':         ['style'],\\n            'p':          ['style'],\\n            'span':       ['style'],\\n            'strong':     [],\\n            'ul':         ['style'],\\n            'body':       []\\n        },\\n        css: ['background-color','color','font-family','font-size','font-style','font-weight','margin-left','margin-right','text-align','text-decoration'],\\n        /** Function: XHTML.validTag\\n         *\\n         * Utility method to determine whether a tag is allowed\\n         * in the XHTML_IM namespace.\\n         *\\n         * XHTML tag names are case sensitive and must be lower case.\\n         */\\n        validTag: function(tag) {\\n            for (var i = 0; i < Strophe.XHTML.tags.length; i++) {\\n                if (tag === Strophe.XHTML.tags[i]) {\\n                    return true;\\n                }\\n            }\\n            return false;\\n        },\\n        /** Function: XHTML.validAttribute\\n         *\\n         * Utility method to determine whether an attribute is allowed\\n         * as recommended per XEP-0071\\n         *\\n         * XHTML attribute names are case sensitive and must be lower case.\\n         */\\n        validAttribute: function(tag, attribute) {\\n            if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\\n                for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\\n                    if (attribute === Strophe.XHTML.attributes[tag][i]) {\\n                        return true;\\n                    }\\n                }\\n            }\\n        return false;\\n        },\\n        validCSS: function(style) {\\n            for (var i = 0; i < Strophe.XHTML.css.length; i++) {\\n                if (style === Strophe.XHTML.css[i]) {\\n                    return true;\\n                }\\n            }\\n            return false;\\n        }\\n    },\\n\\n    /** Constants: Connection Status Constants\\n     *  Connection status constants for use by the connection handler\\n     *  callback.\\n     *\\n     *  Status.ERROR - An error has occurred\\n     *  Status.CONNECTING - The connection is currently being made\\n     *  Status.CONNFAIL - The connection attempt failed\\n     *  Status.AUTHENTICATING - The connection is authenticating\\n     *  Status.AUTHFAIL - The authentication attempt failed\\n     *  Status.CONNECTED - The connection has succeeded\\n     *  Status.DISCONNECTED - The connection has been terminated\\n     *  Status.DISCONNECTING - The connection is currently being terminated\\n     *  Status.ATTACHED - The connection has been attached\\n     *  Status.REDIRECT - The connection has been redirected\\n     *  Status.CONNTIMEOUT - The connection has timed out\\n     */\\n    Status: {\\n        ERROR: 0,\\n        CONNECTING: 1,\\n        CONNFAIL: 2,\\n        AUTHENTICATING: 3,\\n        AUTHFAIL: 4,\\n        CONNECTED: 5,\\n        DISCONNECTED: 6,\\n        DISCONNECTING: 7,\\n        ATTACHED: 8,\\n        REDIRECT: 9,\\n        CONNTIMEOUT: 10\\n    },\\n\\n    ErrorCondition: {\\n        BAD_FORMAT: \\\"bad-format\\\",\\n        CONFLICT: \\\"conflict\\\",\\n        MISSING_JID_NODE: \\\"x-strophe-bad-non-anon-jid\\\",\\n        NO_AUTH_MECH: \\\"no-auth-mech\\\",\\n        UNKNOWN_REASON: \\\"unknown\\\",\\n    },\\n\\n    /** Constants: Log Level Constants\\n     *  Logging level indicators.\\n     *\\n     *  LogLevel.DEBUG - Debug output\\n     *  LogLevel.INFO - Informational output\\n     *  LogLevel.WARN - Warnings\\n     *  LogLevel.ERROR - Errors\\n     *  LogLevel.FATAL - Fatal errors\\n     */\\n    LogLevel: {\\n        DEBUG: 0,\\n        INFO: 1,\\n        WARN: 2,\\n        ERROR: 3,\\n        FATAL: 4\\n    },\\n\\n    /** PrivateConstants: DOM Element Type Constants\\n     *  DOM element types.\\n     *\\n     *  ElementType.NORMAL - Normal element.\\n     *  ElementType.TEXT - Text data element.\\n     *  ElementType.FRAGMENT - XHTML fragment element.\\n     */\\n    ElementType: {\\n        NORMAL: 1,\\n        TEXT: 3,\\n        CDATA: 4,\\n        FRAGMENT: 11\\n    },\\n\\n    /** PrivateConstants: Timeout Values\\n     *  Timeout values for error states.  These values are in seconds.\\n     *  These should not be changed unless you know exactly what you are\\n     *  doing.\\n     *\\n     *  TIMEOUT - Timeout multiplier. A waiting request will be considered\\n     *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\\n     *      This defaults to 1.1, and with default wait, 66 seconds.\\n     *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\\n     *      Strophe can detect early failure, it will consider the request\\n     *      failed if it doesn't return after\\n     *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\\n     *      This defaults to 0.1, and with default wait, 6 seconds.\\n     */\\n    TIMEOUT: 1.1,\\n    SECONDARY_TIMEOUT: 0.1,\\n\\n    /** Function: addNamespace\\n     *  This function is used to extend the current namespaces in\\n     *  Strophe.NS.  It takes a key and a value with the key being the\\n     *  name of the new namespace, with its actual value.\\n     *  For example:\\n     *  Strophe.addNamespace('PUBSUB', \\\"http://jabber.org/protocol/pubsub\\\");\\n     *\\n     *  Parameters:\\n     *    (String) name - The name under which the namespace will be\\n     *      referenced under Strophe.NS\\n     *    (String) value - The actual namespace.\\n     */\\n    addNamespace: function (name, value) {\\n        Strophe.NS[name] = value;\\n    },\\n\\n    /** Function: forEachChild\\n     *  Map a function over some or all child elements of a given element.\\n     *\\n     *  This is a small convenience function for mapping a function over\\n     *  some or all of the children of an element.  If elemName is null, all\\n     *  children will be passed to the function, otherwise only children\\n     *  whose tag names match elemName will be passed.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The element to operate on.\\n     *    (String) elemName - The child element tag name filter.\\n     *    (Function) func - The function to apply to each child.  This\\n     *      function should take a single argument, a DOM element.\\n     */\\n    forEachChild: function (elem, elemName, func) {\\n        var i, childNode;\\n        for (i = 0; i < elem.childNodes.length; i++) {\\n            childNode = elem.childNodes[i];\\n            if (childNode.nodeType === Strophe.ElementType.NORMAL &&\\n                (!elemName || this.isTagEqual(childNode, elemName))) {\\n                func(childNode);\\n            }\\n        }\\n    },\\n\\n    /** Function: isTagEqual\\n     *  Compare an element's tag name with a string.\\n     *\\n     *  This function is case sensitive.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) el - A DOM element.\\n     *    (String) name - The element name.\\n     *\\n     *  Returns:\\n     *    true if the element's tag name matches _el_, and false\\n     *    otherwise.\\n     */\\n    isTagEqual: function (el, name) {\\n        return el.tagName === name;\\n    },\\n\\n    /** PrivateVariable: _xmlGenerator\\n     *  _Private_ variable that caches a DOM document to\\n     *  generate elements.\\n     */\\n    _xmlGenerator: null,\\n\\n    /** PrivateFunction: _makeGenerator\\n     *  _Private_ function that creates a dummy XML DOM document to serve as\\n     *  an element and text node generator.\\n     */\\n    _makeGenerator: function () {\\n        var doc;\\n        // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\\n        // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\\n                // less than 10 in the case of IE9 and below.\\n        if (document.implementation.createDocument === undefined ||\\n                        document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\\n            doc = this._getIEXmlDom();\\n            doc.appendChild(doc.createElement('strophe'));\\n        } else {\\n            doc = document.implementation\\n                .createDocument('jabber:client', 'strophe', null);\\n        }\\n        return doc;\\n    },\\n\\n    /** Function: xmlGenerator\\n     *  Get the DOM document to generate elements.\\n     *\\n     *  Returns:\\n     *    The currently used DOM document.\\n     */\\n    xmlGenerator: function () {\\n        if (!Strophe._xmlGenerator) {\\n            Strophe._xmlGenerator = Strophe._makeGenerator();\\n        }\\n        return Strophe._xmlGenerator;\\n    },\\n\\n    /** PrivateFunction: _getIEXmlDom\\n     *  Gets IE xml doc object\\n     *\\n     *  Returns:\\n     *    A Microsoft XML DOM Object\\n     *  See Also:\\n     *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\\n     */\\n    _getIEXmlDom : function() {\\n        var doc = null;\\n        var docStrings = [\\n            \\\"Msxml2.DOMDocument.6.0\\\",\\n            \\\"Msxml2.DOMDocument.5.0\\\",\\n            \\\"Msxml2.DOMDocument.4.0\\\",\\n            \\\"MSXML2.DOMDocument.3.0\\\",\\n            \\\"MSXML2.DOMDocument\\\",\\n            \\\"MSXML.DOMDocument\\\",\\n            \\\"Microsoft.XMLDOM\\\"\\n        ];\\n\\n        for (var d = 0; d < docStrings.length; d++) {\\n            if (doc === null) {\\n                try {\\n                    doc = new ActiveXObject(docStrings[d]);\\n                } catch (e) {\\n                    doc = null;\\n                }\\n            } else {\\n                break;\\n            }\\n        }\\n        return doc;\\n    },\\n\\n    /** Function: xmlElement\\n     *  Create an XML DOM element.\\n     *\\n     *  This function creates an XML DOM element correctly across all\\n     *  implementations. Note that these are not HTML DOM elements, which\\n     *  aren't appropriate for XMPP stanzas.\\n     *\\n     *  Parameters:\\n     *    (String) name - The name for the element.\\n     *    (Array|Object) attrs - An optional array or object containing\\n     *      key/value pairs to use as element attributes. The object should\\n     *      be in the format {'key': 'value'} or {key: 'value'}. The array\\n     *      should have the format [['key1', 'value1'], ['key2', 'value2']].\\n     *    (String) text - The text child data for the element.\\n     *\\n     *  Returns:\\n     *    A new XML DOM element.\\n     */\\n    xmlElement: function (name) {\\n        if (!name) { return null; }\\n\\n        var node = Strophe.xmlGenerator().createElement(name);\\n        // FIXME: this should throw errors if args are the wrong type or\\n        // there are more than two optional args\\n        var a, i, k;\\n        for (a = 1; a < arguments.length; a++) {\\n            var arg = arguments[a];\\n            if (!arg) { continue; }\\n            if (typeof(arg) === \\\"string\\\" ||\\n                typeof(arg) === \\\"number\\\") {\\n                node.appendChild(Strophe.xmlTextNode(arg));\\n            } else if (typeof(arg) === \\\"object\\\" &&\\n                       typeof(arg.sort) === \\\"function\\\") {\\n                for (i = 0; i < arg.length; i++) {\\n                    var attr = arg[i];\\n                    if (typeof(attr) === \\\"object\\\" &&\\n                        typeof(attr.sort) === \\\"function\\\" &&\\n                        attr[1] !== undefined &&\\n                        attr[1] !== null) {\\n                        node.setAttribute(attr[0], attr[1]);\\n                    }\\n                }\\n            } else if (typeof(arg) === \\\"object\\\") {\\n                for (k in arg) {\\n                    if (arg.hasOwnProperty(k)) {\\n                        if (arg[k] !== undefined &&\\n                            arg[k] !== null) {\\n                            node.setAttribute(k, arg[k]);\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n\\n        return node;\\n    },\\n\\n    /*  Function: xmlescape\\n     *  Excapes invalid xml characters.\\n     *\\n     *  Parameters:\\n     *     (String) text - text to escape.\\n     *\\n     *  Returns:\\n     *      Escaped text.\\n     */\\n    xmlescape: function(text) {\\n        text = text.replace(/\\\\&/g, \\\"&amp;\\\");\\n        text = text.replace(/</g,  \\\"&lt;\\\");\\n        text = text.replace(/>/g,  \\\"&gt;\\\");\\n        text = text.replace(/'/g,  \\\"&apos;\\\");\\n        text = text.replace(/\\\"/g,  \\\"&quot;\\\");\\n        return text;\\n    },\\n\\n    /*  Function: xmlunescape\\n    *  Unexcapes invalid xml characters.\\n    *\\n    *  Parameters:\\n    *     (String) text - text to unescape.\\n    *\\n    *  Returns:\\n    *      Unescaped text.\\n    */\\n    xmlunescape: function(text) {\\n        text = text.replace(/\\\\&amp;/g, \\\"&\\\");\\n        text = text.replace(/&lt;/g,  \\\"<\\\");\\n        text = text.replace(/&gt;/g,  \\\">\\\");\\n        text = text.replace(/&apos;/g,  \\\"'\\\");\\n        text = text.replace(/&quot;/g,  \\\"\\\\\\\"\\\");\\n        return text;\\n    },\\n\\n    /** Function: xmlTextNode\\n     *  Creates an XML DOM text node.\\n     *\\n     *  Provides a cross implementation version of document.createTextNode.\\n     *\\n     *  Parameters:\\n     *    (String) text - The content of the text node.\\n     *\\n     *  Returns:\\n     *    A new XML DOM text node.\\n     */\\n    xmlTextNode: function (text) {\\n        return Strophe.xmlGenerator().createTextNode(text);\\n    },\\n\\n    /** Function: xmlHtmlNode\\n     *  Creates an XML DOM html node.\\n     *\\n     *  Parameters:\\n     *    (String) html - The content of the html node.\\n     *\\n     *  Returns:\\n     *    A new XML DOM text node.\\n     */\\n    xmlHtmlNode: function (html) {\\n        var node;\\n        //ensure text is escaped\\n        if (DOMParser) {\\n            var parser = new DOMParser();\\n            node = parser.parseFromString(html, \\\"text/xml\\\");\\n        } else {\\n            node = new ActiveXObject(\\\"Microsoft.XMLDOM\\\");\\n            node.async=\\\"false\\\";\\n            node.loadXML(html);\\n        }\\n        return node;\\n    },\\n\\n    /** Function: getText\\n     *  Get the concatenation of all text children of an element.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - A DOM element.\\n     *\\n     *  Returns:\\n     *    A String with the concatenated text of all text element children.\\n     */\\n    getText: function (elem) {\\n        if (!elem) { return null; }\\n\\n        var str = \\\"\\\";\\n        if (elem.childNodes.length === 0 && elem.nodeType === Strophe.ElementType.TEXT) {\\n            str += elem.nodeValue;\\n        }\\n\\n        for (var i = 0; i < elem.childNodes.length; i++) {\\n            if (elem.childNodes[i].nodeType === Strophe.ElementType.TEXT) {\\n                str += elem.childNodes[i].nodeValue;\\n            }\\n        }\\n\\n        return Strophe.xmlescape(str);\\n    },\\n\\n    /** Function: copyElement\\n     *  Copy an XML DOM element.\\n     *\\n     *  This function copies a DOM element and all its descendants and returns\\n     *  the new copy.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - A DOM element.\\n     *\\n     *  Returns:\\n     *    A new, copied DOM element tree.\\n     */\\n    copyElement: function (elem) {\\n        var i, el;\\n        if (elem.nodeType === Strophe.ElementType.NORMAL) {\\n            el = Strophe.xmlElement(elem.tagName);\\n\\n            for (i = 0; i < elem.attributes.length; i++) {\\n                el.setAttribute(elem.attributes[i].nodeName,\\n                                elem.attributes[i].value);\\n            }\\n\\n            for (i = 0; i < elem.childNodes.length; i++) {\\n                el.appendChild(Strophe.copyElement(elem.childNodes[i]));\\n            }\\n        } else if (elem.nodeType === Strophe.ElementType.TEXT) {\\n            el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\\n        }\\n        return el;\\n    },\\n\\n\\n    /** Function: createHtml\\n     *  Copy an HTML DOM element into an XML DOM.\\n     *\\n     *  This function copies a DOM element and all its descendants and returns\\n     *  the new copy.\\n     *\\n     *  Parameters:\\n     *    (HTMLElement) elem - A DOM element.\\n     *\\n     *  Returns:\\n     *    A new, copied DOM element tree.\\n     */\\n    createHtml: function (elem) {\\n        var i, el, j, tag, attribute, value, css, cssAttrs, attr, cssName, cssValue;\\n        if (elem.nodeType === Strophe.ElementType.NORMAL) {\\n            tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\\n            if(Strophe.XHTML.validTag(tag)) {\\n                try {\\n                    el = Strophe.xmlElement(tag);\\n                    for(i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\\n                        attribute = Strophe.XHTML.attributes[tag][i];\\n                        value = elem.getAttribute(attribute);\\n                        if(typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\\n                            continue;\\n                        }\\n                        if(attribute === 'style' && typeof value === 'object') {\\n                            if(typeof value.cssText !== 'undefined') {\\n                                value = value.cssText; // we're dealing with IE, need to get CSS out\\n                            }\\n                        }\\n                        // filter out invalid css styles\\n                        if(attribute === 'style') {\\n                            css = [];\\n                            cssAttrs = value.split(';');\\n                            for(j = 0; j < cssAttrs.length; j++) {\\n                                attr = cssAttrs[j].split(':');\\n                                cssName = attr[0].replace(/^\\\\s*/, \\\"\\\").replace(/\\\\s*$/, \\\"\\\").toLowerCase();\\n                                if(Strophe.XHTML.validCSS(cssName)) {\\n                                    cssValue = attr[1].replace(/^\\\\s*/, \\\"\\\").replace(/\\\\s*$/, \\\"\\\");\\n                                    css.push(cssName + ': ' + cssValue);\\n                                }\\n                            }\\n                            if(css.length > 0) {\\n                                value = css.join('; ');\\n                                el.setAttribute(attribute, value);\\n                            }\\n                        } else {\\n                            el.setAttribute(attribute, value);\\n                        }\\n                    }\\n\\n                    for (i = 0; i < elem.childNodes.length; i++) {\\n                        el.appendChild(Strophe.createHtml(elem.childNodes[i]));\\n                    }\\n                } catch(e) { // invalid elements\\n                  el = Strophe.xmlTextNode('');\\n                }\\n            } else {\\n                el = Strophe.xmlGenerator().createDocumentFragment();\\n                for (i = 0; i < elem.childNodes.length; i++) {\\n                    el.appendChild(Strophe.createHtml(elem.childNodes[i]));\\n                }\\n            }\\n        } else if (elem.nodeType === Strophe.ElementType.FRAGMENT) {\\n            el = Strophe.xmlGenerator().createDocumentFragment();\\n            for (i = 0; i < elem.childNodes.length; i++) {\\n                el.appendChild(Strophe.createHtml(elem.childNodes[i]));\\n            }\\n        } else if (elem.nodeType === Strophe.ElementType.TEXT) {\\n            el = Strophe.xmlTextNode(elem.nodeValue);\\n        }\\n        return el;\\n    },\\n\\n    /** Function: escapeNode\\n     *  Escape the node part (also called local part) of a JID.\\n     *\\n     *  Parameters:\\n     *    (String) node - A node (or local part).\\n     *\\n     *  Returns:\\n     *    An escaped node (or local part).\\n     */\\n    escapeNode: function (node) {\\n        if (typeof node !== \\\"string\\\") { return node; }\\n        return node.replace(/^\\\\s+|\\\\s+$/g, '')\\n            .replace(/\\\\\\\\/g,  \\\"\\\\\\\\5c\\\")\\n            .replace(/ /g,   \\\"\\\\\\\\20\\\")\\n            .replace(/\\\\\\\"/g,  \\\"\\\\\\\\22\\\")\\n            .replace(/\\\\&/g,  \\\"\\\\\\\\26\\\")\\n            .replace(/\\\\'/g,  \\\"\\\\\\\\27\\\")\\n            .replace(/\\\\//g,  \\\"\\\\\\\\2f\\\")\\n            .replace(/:/g,   \\\"\\\\\\\\3a\\\")\\n            .replace(/</g,   \\\"\\\\\\\\3c\\\")\\n            .replace(/>/g,   \\\"\\\\\\\\3e\\\")\\n            .replace(/@/g,   \\\"\\\\\\\\40\\\");\\n    },\\n\\n    /** Function: unescapeNode\\n     *  Unescape a node part (also called local part) of a JID.\\n     *\\n     *  Parameters:\\n     *    (String) node - A node (or local part).\\n     *\\n     *  Returns:\\n     *    An unescaped node (or local part).\\n     */\\n    unescapeNode: function (node) {\\n        if (typeof node !== \\\"string\\\") { return node; }\\n        return node.replace(/\\\\\\\\20/g, \\\" \\\")\\n            .replace(/\\\\\\\\22/g, '\\\"')\\n            .replace(/\\\\\\\\26/g, \\\"&\\\")\\n            .replace(/\\\\\\\\27/g, \\\"'\\\")\\n            .replace(/\\\\\\\\2f/g, \\\"/\\\")\\n            .replace(/\\\\\\\\3a/g, \\\":\\\")\\n            .replace(/\\\\\\\\3c/g, \\\"<\\\")\\n            .replace(/\\\\\\\\3e/g, \\\">\\\")\\n            .replace(/\\\\\\\\40/g, \\\"@\\\")\\n            .replace(/\\\\\\\\5c/g, \\\"\\\\\\\\\\\");\\n    },\\n\\n    /** Function: getNodeFromJid\\n     *  Get the node portion of a JID String.\\n     *\\n     *  Parameters:\\n     *    (String) jid - A JID.\\n     *\\n     *  Returns:\\n     *    A String containing the node.\\n     */\\n    getNodeFromJid: function (jid) {\\n        if (jid.indexOf(\\\"@\\\") < 0) { return null; }\\n        return jid.split(\\\"@\\\")[0];\\n    },\\n\\n    /** Function: getDomainFromJid\\n     *  Get the domain portion of a JID String.\\n     *\\n     *  Parameters:\\n     *    (String) jid - A JID.\\n     *\\n     *  Returns:\\n     *    A String containing the domain.\\n     */\\n    getDomainFromJid: function (jid) {\\n        var bare = Strophe.getBareJidFromJid(jid);\\n        if (bare.indexOf(\\\"@\\\") < 0) {\\n            return bare;\\n        } else {\\n            var parts = bare.split(\\\"@\\\");\\n            parts.splice(0, 1);\\n            return parts.join('@');\\n        }\\n    },\\n\\n    /** Function: getResourceFromJid\\n     *  Get the resource portion of a JID String.\\n     *\\n     *  Parameters:\\n     *    (String) jid - A JID.\\n     *\\n     *  Returns:\\n     *    A String containing the resource.\\n     */\\n    getResourceFromJid: function (jid) {\\n        var s = jid.split(\\\"/\\\");\\n        if (s.length < 2) { return null; }\\n        s.splice(0, 1);\\n        return s.join('/');\\n    },\\n\\n    /** Function: getBareJidFromJid\\n     *  Get the bare JID from a JID String.\\n     *\\n     *  Parameters:\\n     *    (String) jid - A JID.\\n     *\\n     *  Returns:\\n     *    A String containing the bare JID.\\n     */\\n    getBareJidFromJid: function (jid) {\\n        return jid ? jid.split(\\\"/\\\")[0] : null;\\n    },\\n\\n    /** PrivateFunction: _handleError\\n     *  _Private_ function that properly logs an error to the console\\n     */\\n    _handleError: function (e) {\\n        if (typeof e.stack !== \\\"undefined\\\") {\\n            Strophe.fatal(e.stack);\\n        }\\n        if (e.sourceURL) {\\n            Strophe.fatal(\\\"error: \\\" + this.handler + \\\" \\\" + e.sourceURL + \\\":\\\" +\\n                          e.line + \\\" - \\\" + e.name + \\\": \\\" + e.message);\\n        } else if (e.fileName) {\\n            Strophe.fatal(\\\"error: \\\" + this.handler + \\\" \\\" +\\n                          e.fileName + \\\":\\\" + e.lineNumber + \\\" - \\\" +\\n                          e.name + \\\": \\\" + e.message);\\n        } else {\\n            Strophe.fatal(\\\"error: \\\" + e.message);\\n        }\\n    },\\n\\n    /** Function: log\\n     *  User overrideable logging function.\\n     *\\n     *  This function is called whenever the Strophe library calls any\\n     *  of the logging functions.  The default implementation of this\\n     *  function logs only fatal errors.  If client code wishes to handle the logging\\n     *  messages, it should override this with\\n     *  > Strophe.log = function (level, msg) {\\n     *  >   (user code here)\\n     *  > };\\n     *\\n     *  Please note that data sent and received over the wire is logged\\n     *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\\n     *\\n     *  The different levels and their meanings are\\n     *\\n     *    DEBUG - Messages useful for debugging purposes.\\n     *    INFO - Informational messages.  This is mostly information like\\n     *      'disconnect was called' or 'SASL auth succeeded'.\\n     *    WARN - Warnings about potential problems.  This is mostly used\\n     *      to report transient connection errors like request timeouts.\\n     *    ERROR - Some error occurred.\\n     *    FATAL - A non-recoverable fatal error occurred.\\n     *\\n     *  Parameters:\\n     *    (Integer) level - The log level of the log message.  This will\\n     *      be one of the values in Strophe.LogLevel.\\n     *    (String) msg - The log message.\\n     */\\n    log: function (level, msg) {\\n        if (level === this.LogLevel.FATAL &&\\n            typeof window.console === 'object' &&\\n            typeof window.console.error === 'function') {\\n            window.console.error(msg);\\n        }\\n    },\\n\\n    /** Function: debug\\n     *  Log a message at the Strophe.LogLevel.DEBUG level.\\n     *\\n     *  Parameters:\\n     *    (String) msg - The log message.\\n     */\\n    debug: function(msg) {\\n        this.log(this.LogLevel.DEBUG, msg);\\n    },\\n\\n    /** Function: info\\n     *  Log a message at the Strophe.LogLevel.INFO level.\\n     *\\n     *  Parameters:\\n     *    (String) msg - The log message.\\n     */\\n    info: function (msg) {\\n        this.log(this.LogLevel.INFO, msg);\\n    },\\n\\n    /** Function: warn\\n     *  Log a message at the Strophe.LogLevel.WARN level.\\n     *\\n     *  Parameters:\\n     *    (String) msg - The log message.\\n     */\\n    warn: function (msg) {\\n        this.log(this.LogLevel.WARN, msg);\\n    },\\n\\n    /** Function: error\\n     *  Log a message at the Strophe.LogLevel.ERROR level.\\n     *\\n     *  Parameters:\\n     *    (String) msg - The log message.\\n     */\\n    error: function (msg) {\\n        this.log(this.LogLevel.ERROR, msg);\\n    },\\n\\n    /** Function: fatal\\n     *  Log a message at the Strophe.LogLevel.FATAL level.\\n     *\\n     *  Parameters:\\n     *    (String) msg - The log message.\\n     */\\n    fatal: function (msg) {\\n        this.log(this.LogLevel.FATAL, msg);\\n    },\\n\\n    /** Function: serialize\\n     *  Render a DOM element and all descendants to a String.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - A DOM element.\\n     *\\n     *  Returns:\\n     *    The serialized element tree as a String.\\n     */\\n    serialize: function (elem) {\\n        var result;\\n\\n        if (!elem) { return null; }\\n\\n        if (typeof(elem.tree) === \\\"function\\\") {\\n            elem = elem.tree();\\n        }\\n\\n        var nodeName = elem.nodeName;\\n        var i, child;\\n\\n        if (elem.getAttribute(\\\"_realname\\\")) {\\n            nodeName = elem.getAttribute(\\\"_realname\\\");\\n        }\\n\\n        result = \\\"<\\\" + nodeName;\\n        for (i = 0; i < elem.attributes.length; i++) {\\n             if(elem.attributes[i].nodeName !== \\\"_realname\\\") {\\n               result += \\\" \\\" + elem.attributes[i].nodeName +\\n                   \\\"='\\\" + Strophe.xmlescape(elem.attributes[i].value) + \\\"'\\\";\\n             }\\n        }\\n\\n        if (elem.childNodes.length > 0) {\\n            result += \\\">\\\";\\n            for (i = 0; i < elem.childNodes.length; i++) {\\n                child = elem.childNodes[i];\\n                switch( child.nodeType ){\\n                  case Strophe.ElementType.NORMAL:\\n                    // normal element, so recurse\\n                    result += Strophe.serialize(child);\\n                    break;\\n                  case Strophe.ElementType.TEXT:\\n                    // text element to escape values\\n                    result += Strophe.xmlescape(child.nodeValue);\\n                    break;\\n                  case Strophe.ElementType.CDATA:\\n                    // cdata section so don't escape values\\n                    result += \\\"<![CDATA[\\\"+child.nodeValue+\\\"]]>\\\";\\n                }\\n            }\\n            result += \\\"</\\\" + nodeName + \\\">\\\";\\n        } else {\\n            result += \\\"/>\\\";\\n        }\\n\\n        return result;\\n    },\\n\\n    /** PrivateVariable: _requestId\\n     *  _Private_ variable that keeps track of the request ids for\\n     *  connections.\\n     */\\n    _requestId: 0,\\n\\n    /** PrivateVariable: Strophe.connectionPlugins\\n     *  _Private_ variable Used to store plugin names that need\\n     *  initialization on Strophe.Connection construction.\\n     */\\n    _connectionPlugins: {},\\n\\n    /** Function: addConnectionPlugin\\n     *  Extends the Strophe.Connection object with the given plugin.\\n     *\\n     *  Parameters:\\n     *    (String) name - The name of the extension.\\n     *    (Object) ptype - The plugin's prototype.\\n     */\\n    addConnectionPlugin: function (name, ptype) {\\n        Strophe._connectionPlugins[name] = ptype;\\n    }\\n};\\n\\n/** Class: Strophe.Builder\\n *  XML DOM builder.\\n *\\n *  This object provides an interface similar to JQuery but for building\\n *  DOM elements easily and rapidly.  All the functions except for toString()\\n *  and tree() return the object, so calls can be chained.  Here's an\\n *  example using the $iq() builder helper.\\n *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\\n *  >     .c('query', {xmlns: 'strophe:example'})\\n *  >     .c('example')\\n *  >     .toString()\\n *\\n *  The above generates this XML fragment\\n *  > <iq to='you' from='me' type='get' id='1'>\\n *  >   <query xmlns='strophe:example'>\\n *  >     <example/>\\n *  >   </query>\\n *  > </iq>\\n *  The corresponding DOM manipulations to get a similar fragment would be\\n *  a lot more tedious and probably involve several helper variables.\\n *\\n *  Since adding children makes new operations operate on the child, up()\\n *  is provided to traverse up the tree.  To add two children, do\\n *  > builder.c('child1', ...).up().c('child2', ...)\\n *  The next operation on the Builder will be relative to the second child.\\n */\\n\\n/** Constructor: Strophe.Builder\\n *  Create a Strophe.Builder object.\\n *\\n *  The attributes should be passed in object notation.  For example\\n *  > var b = new Builder('message', {to: 'you', from: 'me'});\\n *  or\\n *  > var b = new Builder('messsage', {'xml:lang': 'en'});\\n *\\n *  Parameters:\\n *    (String) name - The name of the root element.\\n *    (Object) attrs - The attributes for the root element in object notation.\\n *\\n *  Returns:\\n *    A new Strophe.Builder.\\n */\\nStrophe.Builder = function (name, attrs) {\\n    // Set correct namespace for jabber:client elements\\n    if (name === \\\"presence\\\" || name === \\\"message\\\" || name === \\\"iq\\\") {\\n        if (attrs && !attrs.xmlns) {\\n            attrs.xmlns = Strophe.NS.CLIENT;\\n        } else if (!attrs) {\\n            attrs = {xmlns: Strophe.NS.CLIENT};\\n        }\\n    }\\n\\n    // Holds the tree being built.\\n    this.nodeTree = Strophe.xmlElement(name, attrs);\\n\\n    // Points to the current operation node.\\n    this.node = this.nodeTree;\\n};\\n\\nStrophe.Builder.prototype = {\\n    /** Function: tree\\n     *  Return the DOM tree.\\n     *\\n     *  This function returns the current DOM tree as an element object.  This\\n     *  is suitable for passing to functions like Strophe.Connection.send().\\n     *\\n     *  Returns:\\n     *    The DOM tree as a element object.\\n     */\\n    tree: function () {\\n        return this.nodeTree;\\n    },\\n\\n    /** Function: toString\\n     *  Serialize the DOM tree to a String.\\n     *\\n     *  This function returns a string serialization of the current DOM\\n     *  tree.  It is often used internally to pass data to a\\n     *  Strophe.Request object.\\n     *\\n     *  Returns:\\n     *    The serialized DOM tree in a String.\\n     */\\n    toString: function () {\\n        return Strophe.serialize(this.nodeTree);\\n    },\\n\\n    /** Function: up\\n     *  Make the current parent element the new current element.\\n     *\\n     *  This function is often used after c() to traverse back up the tree.\\n     *  For example, to add two children to the same element\\n     *  > builder.c('child1', {}).up().c('child2', {});\\n     *\\n     *  Returns:\\n     *    The Stophe.Builder object.\\n     */\\n    up: function () {\\n        this.node = this.node.parentNode;\\n        return this;\\n    },\\n\\n    /** Function: root\\n     *  Make the root element the new current element.\\n     *\\n     *  When at a deeply nested element in the tree, this function can be used\\n     *  to jump back to the root of the tree, instead of having to repeatedly\\n     *  call up().\\n     *\\n     *  Returns:\\n     *    The Stophe.Builder object.\\n     */\\n    root: function () {\\n        this.node = this.nodeTree;\\n        return this;\\n    },\\n\\n    /** Function: attrs\\n     *  Add or modify attributes of the current element.\\n     *\\n     *  The attributes should be passed in object notation.  This function\\n     *  does not move the current element pointer.\\n     *\\n     *  Parameters:\\n     *    (Object) moreattrs - The attributes to add/modify in object notation.\\n     *\\n     *  Returns:\\n     *    The Strophe.Builder object.\\n     */\\n    attrs: function (moreattrs) {\\n        for (var k in moreattrs) {\\n            if (moreattrs.hasOwnProperty(k)) {\\n                if (moreattrs[k] === undefined) {\\n                    this.node.removeAttribute(k);\\n                } else {\\n                    this.node.setAttribute(k, moreattrs[k]);\\n                }\\n            }\\n        }\\n        return this;\\n    },\\n\\n    /** Function: c\\n     *  Add a child to the current element and make it the new current\\n     *  element.\\n     *\\n     *  This function moves the current element pointer to the child,\\n     *  unless text is provided.  If you need to add another child, it\\n     *  is necessary to use up() to go back to the parent in the tree.\\n     *\\n     *  Parameters:\\n     *    (String) name - The name of the child.\\n     *    (Object) attrs - The attributes of the child in object notation.\\n     *    (String) text - The text to add to the child.\\n     *\\n     *  Returns:\\n     *    The Strophe.Builder object.\\n     */\\n    c: function (name, attrs, text) {\\n        var child = Strophe.xmlElement(name, attrs, text);\\n        this.node.appendChild(child);\\n        if (typeof text !== \\\"string\\\" && typeof text !==\\\"number\\\") {\\n            this.node = child;\\n        }\\n        return this;\\n    },\\n\\n    /** Function: cnode\\n     *  Add a child to the current element and make it the new current\\n     *  element.\\n     *\\n     *  This function is the same as c() except that instead of using a\\n     *  name and an attributes object to create the child it uses an\\n     *  existing DOM element object.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - A DOM element.\\n     *\\n     *  Returns:\\n     *    The Strophe.Builder object.\\n     */\\n    cnode: function (elem) {\\n        var impNode;\\n        var xmlGen = Strophe.xmlGenerator();\\n        try {\\n            impNode = (xmlGen.importNode !== undefined);\\n        } catch (e) {\\n            impNode = false;\\n        }\\n        var newElem = impNode ?\\n                      xmlGen.importNode(elem, true) :\\n                      Strophe.copyElement(elem);\\n        this.node.appendChild(newElem);\\n        this.node = newElem;\\n        return this;\\n    },\\n\\n    /** Function: t\\n     *  Add a child text element.\\n     *\\n     *  This *does not* make the child the new current element since there\\n     *  are no children of text elements.\\n     *\\n     *  Parameters:\\n     *    (String) text - The text data to append to the current element.\\n     *\\n     *  Returns:\\n     *    The Strophe.Builder object.\\n     */\\n    t: function (text) {\\n        var child = Strophe.xmlTextNode(text);\\n        this.node.appendChild(child);\\n        return this;\\n    },\\n\\n    /** Function: h\\n     *  Replace current element contents with the HTML passed in.\\n     *\\n     *  This *does not* make the child the new current element\\n     *\\n     *  Parameters:\\n     *    (String) html - The html to insert as contents of current element.\\n     *\\n     *  Returns:\\n     *    The Strophe.Builder object.\\n     */\\n    h: function (html) {\\n        var fragment = document.createElement('body');\\n\\n        // force the browser to try and fix any invalid HTML tags\\n        fragment.innerHTML = html;\\n\\n        // copy cleaned html into an xml dom\\n        var xhtml = Strophe.createHtml(fragment);\\n\\n        while(xhtml.childNodes.length > 0) {\\n            this.node.appendChild(xhtml.childNodes[0]);\\n        }\\n        return this;\\n    }\\n};\\n\\n/** PrivateClass: Strophe.Handler\\n *  _Private_ helper class for managing stanza handlers.\\n *\\n *  A Strophe.Handler encapsulates a user provided callback function to be\\n *  executed when matching stanzas are received by the connection.\\n *  Handlers can be either one-off or persistant depending on their\\n *  return value. Returning true will cause a Handler to remain active, and\\n *  returning false will remove the Handler.\\n *\\n *  Users will not use Strophe.Handler objects directly, but instead they\\n *  will use Strophe.Connection.addHandler() and\\n *  Strophe.Connection.deleteHandler().\\n */\\n\\n/** PrivateConstructor: Strophe.Handler\\n *  Create and initialize a new Strophe.Handler.\\n *\\n *  Parameters:\\n *    (Function) handler - A function to be executed when the handler is run.\\n *    (String) ns - The namespace to match.\\n *    (String) name - The element name to match.\\n *    (String) type - The element type to match.\\n *    (String) id - The element id attribute to match.\\n *    (String) from - The element from attribute to match.\\n *    (Object) options - Handler options\\n *\\n *  Returns:\\n *    A new Strophe.Handler object.\\n */\\nStrophe.Handler = function (handler, ns, name, type, id, from, options) {\\n    this.handler = handler;\\n    this.ns = ns;\\n    this.name = name;\\n    this.type = type;\\n    this.id = id;\\n    this.options = options || {'matchBareFromJid': false, 'ignoreNamespaceFragment': false};\\n    // BBB: Maintain backward compatibility with old `matchBare` option\\n    if (this.options.matchBare) {\\n        Strophe.warn('The \\\"matchBare\\\" option is deprecated, use \\\"matchBareFromJid\\\" instead.');\\n        this.options.matchBareFromJid = this.options.matchBare;\\n        delete this.options.matchBare;\\n    }\\n\\n    if (this.options.matchBareFromJid) {\\n        this.from = from ? Strophe.getBareJidFromJid(from) : null;\\n    } else {\\n        this.from = from;\\n    }\\n    // whether the handler is a user handler or a system handler\\n    this.user = true;\\n};\\n\\nStrophe.Handler.prototype = {\\n    /** PrivateFunction: getNamespace\\n     *  Returns the XML namespace attribute on an element.\\n     *  If `ignoreNamespaceFragment` was passed in for this handler, then the\\n     *  URL fragment will be stripped.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The XML element with the namespace.\\n     *\\n     *  Returns:\\n     *    The namespace, with optionally the fragment stripped.\\n     */\\n    getNamespace: function (elem) {\\n        var elNamespace = elem.getAttribute(\\\"xmlns\\\");\\n        if (elNamespace && this.options.ignoreNamespaceFragment) {\\n            elNamespace = elNamespace.split('#')[0];\\n        }\\n        return elNamespace;\\n    },\\n\\n    /** PrivateFunction: namespaceMatch\\n     *  Tests if a stanza matches the namespace set for this Strophe.Handler.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The XML element to test.\\n     *\\n     *  Returns:\\n     *    true if the stanza matches and false otherwise.\\n     */\\n    namespaceMatch: function (elem) {\\n        var nsMatch = false;\\n        if (!this.ns) {\\n            return true;\\n        } else {\\n            var that = this;\\n            Strophe.forEachChild(elem, null, function (elem) {\\n                if (that.getNamespace(elem) === that.ns) {\\n                    nsMatch = true;\\n                }\\n            });\\n            nsMatch = nsMatch || this.getNamespace(elem) === this.ns;\\n        }\\n        return nsMatch;\\n    },\\n\\n    /** PrivateFunction: isMatch\\n     *  Tests if a stanza matches the Strophe.Handler.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The XML element to test.\\n     *\\n     *  Returns:\\n     *    true if the stanza matches and false otherwise.\\n     */\\n    isMatch: function (elem) {\\n        var from = elem.getAttribute('from');\\n        if (this.options.matchBareFromJid) {\\n            from = Strophe.getBareJidFromJid(from);\\n        }\\n        var elem_type = elem.getAttribute(\\\"type\\\");\\n        if (this.namespaceMatch(elem) &&\\n            (!this.name || Strophe.isTagEqual(elem, this.name)) &&\\n            (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) &&\\n            (!this.id || elem.getAttribute(\\\"id\\\") === this.id) &&\\n            (!this.from || from === this.from)) {\\n                return true;\\n        }\\n        return false;\\n    },\\n\\n    /** PrivateFunction: run\\n     *  Run the callback on a matching stanza.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The DOM element that triggered the\\n     *      Strophe.Handler.\\n     *\\n     *  Returns:\\n     *    A boolean indicating if the handler should remain active.\\n     */\\n    run: function (elem) {\\n        var result = null;\\n        try {\\n            result = this.handler(elem);\\n        } catch (e) {\\n            Strophe._handleError(e);\\n            throw e;\\n        }\\n        return result;\\n    },\\n\\n    /** PrivateFunction: toString\\n     *  Get a String representation of the Strophe.Handler object.\\n     *\\n     *  Returns:\\n     *    A String.\\n     */\\n    toString: function () {\\n        return \\\"{Handler: \\\" + this.handler + \\\"(\\\" + this.name + \\\",\\\" +\\n            this.id + \\\",\\\" + this.ns + \\\")}\\\";\\n    }\\n};\\n\\n/** PrivateClass: Strophe.TimedHandler\\n *  _Private_ helper class for managing timed handlers.\\n *\\n *  A Strophe.TimedHandler encapsulates a user provided callback that\\n *  should be called after a certain period of time or at regular\\n *  intervals.  The return value of the callback determines whether the\\n *  Strophe.TimedHandler will continue to fire.\\n *\\n *  Users will not use Strophe.TimedHandler objects directly, but instead\\n *  they will use Strophe.Connection.addTimedHandler() and\\n *  Strophe.Connection.deleteTimedHandler().\\n */\\n\\n/** PrivateConstructor: Strophe.TimedHandler\\n *  Create and initialize a new Strophe.TimedHandler object.\\n *\\n *  Parameters:\\n *    (Integer) period - The number of milliseconds to wait before the\\n *      handler is called.\\n *    (Function) handler - The callback to run when the handler fires.  This\\n *      function should take no arguments.\\n *\\n *  Returns:\\n *    A new Strophe.TimedHandler object.\\n */\\nStrophe.TimedHandler = function (period, handler) {\\n    this.period = period;\\n    this.handler = handler;\\n    this.lastCalled = new Date().getTime();\\n    this.user = true;\\n};\\n\\nStrophe.TimedHandler.prototype = {\\n    /** PrivateFunction: run\\n     *  Run the callback for the Strophe.TimedHandler.\\n     *\\n     *  Returns:\\n     *    true if the Strophe.TimedHandler should be called again, and false\\n     *      otherwise.\\n     */\\n    run: function () {\\n        this.lastCalled = new Date().getTime();\\n        return this.handler();\\n    },\\n\\n    /** PrivateFunction: reset\\n     *  Reset the last called time for the Strophe.TimedHandler.\\n     */\\n    reset: function () {\\n        this.lastCalled = new Date().getTime();\\n    },\\n\\n    /** PrivateFunction: toString\\n     *  Get a string representation of the Strophe.TimedHandler object.\\n     *\\n     *  Returns:\\n     *    The string representation.\\n     */\\n    toString: function () {\\n        return \\\"{TimedHandler: \\\" + this.handler + \\\"(\\\" + this.period +\\\")}\\\";\\n    }\\n};\\n\\n/** Class: Strophe.Connection\\n *  XMPP Connection manager.\\n *\\n *  This class is the main part of Strophe.  It manages a BOSH or websocket\\n *  connection to an XMPP server and dispatches events to the user callbacks\\n *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\\n *  and legacy authentication.\\n *\\n *  After creating a Strophe.Connection object, the user will typically\\n *  call connect() with a user supplied callback to handle connection level\\n *  events like authentication failure, disconnection, or connection\\n *  complete.\\n *\\n *  The user will also have several event handlers defined by using\\n *  addHandler() and addTimedHandler().  These will allow the user code to\\n *  respond to interesting stanzas or do something periodically with the\\n *  connection. These handlers will be active once authentication is\\n *  finished.\\n *\\n *  To send data to the connection, use send().\\n */\\n\\n/** Constructor: Strophe.Connection\\n *  Create and initialize a Strophe.Connection object.\\n *\\n *  The transport-protocol for this connection will be chosen automatically\\n *  based on the given service parameter. URLs starting with \\\"ws://\\\" or\\n *  \\\"wss://\\\" will use WebSockets, URLs starting with \\\"http://\\\", \\\"https://\\\"\\n *  or without a protocol will use BOSH.\\n *\\n *  To make Strophe connect to the current host you can leave out the protocol\\n *  and host part and just pass the path, e.g.\\n *\\n *  > var conn = new Strophe.Connection(\\\"/http-bind/\\\");\\n *\\n *  Options common to both Websocket and BOSH:\\n *  ------------------------------------------\\n *\\n *  cookies:\\n *\\n *  The *cookies* option allows you to pass in cookies to be added to the\\n *  document. These cookies will then be included in the BOSH XMLHttpRequest\\n *  or in the websocket connection.\\n *\\n *  The passed in value must be a map of cookie names and string values.\\n *\\n *  > { \\\"myCookie\\\": {\\n *  >     \\\"value\\\": \\\"1234\\\",\\n *  >     \\\"domain\\\": \\\".example.org\\\",\\n *  >     \\\"path\\\": \\\"/\\\",\\n *  >     \\\"expires\\\": expirationDate\\n *  >     }\\n *  > }\\n *\\n *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\\n *  Those cookies need to be set under those domains, for example they can be\\n *  set server-side by making a XHR call to that domain to ask it to set any\\n *  necessary cookies.\\n *\\n *  mechanisms:\\n *\\n *  The *mechanisms* option allows you to specify the SASL mechanisms that this\\n *  instance of Strophe.Connection (and therefore your XMPP client) will\\n *  support.\\n *\\n *  The value must be an array of objects with Strophe.SASLMechanism\\n *  prototypes.\\n *\\n *  If nothing is specified, then the following mechanisms (and their\\n *  priorities) are registered:\\n *\\n *      SCRAM-SHA1 - 70\\n *      DIGEST-MD5 - 60\\n *      PLAIN - 50\\n *      OAUTH-BEARER - 40\\n *      OAUTH-2 - 30\\n *      ANONYMOUS - 20\\n *      EXTERNAL - 10\\n *\\n *  WebSocket options:\\n *  ------------------\\n *\\n *  If you want to connect to the current host with a WebSocket connection you\\n *  can tell Strophe to use WebSockets through a \\\"protocol\\\" attribute in the\\n *  optional options parameter. Valid values are \\\"ws\\\" for WebSocket and \\\"wss\\\"\\n *  for Secure WebSocket.\\n *  So to connect to \\\"wss://CURRENT_HOSTNAME/xmpp-websocket\\\" you would call\\n *\\n *  > var conn = new Strophe.Connection(\\\"/xmpp-websocket/\\\", {protocol: \\\"wss\\\"});\\n *\\n *  Note that relative URLs _NOT_ starting with a \\\"/\\\" will also include the path\\n *  of the current site.\\n *\\n *  Also because downgrading security is not permitted by browsers, when using\\n *  relative URLs both BOSH and WebSocket connections will use their secure\\n *  variants if the current connection to the site is also secure (https).\\n *\\n *  BOSH options:\\n *  -------------\\n *\\n *  By adding \\\"sync\\\" to the options, you can control if requests will\\n *  be made synchronously or not. The default behaviour is asynchronous.\\n *  If you want to make requests synchronous, make \\\"sync\\\" evaluate to true.\\n *  > var conn = new Strophe.Connection(\\\"/http-bind/\\\", {sync: true});\\n *\\n *  You can also toggle this on an already established connection.\\n *  > conn.options.sync = true;\\n *\\n *  The *customHeaders* option can be used to provide custom HTTP headers to be\\n *  included in the XMLHttpRequests made.\\n *\\n *  The *keepalive* option can be used to instruct Strophe to maintain the\\n *  current BOSH session across interruptions such as webpage reloads.\\n *\\n *  It will do this by caching the sessions tokens in sessionStorage, and when\\n *  \\\"restore\\\" is called it will check whether there are cached tokens with\\n *  which it can resume an existing session.\\n *\\n *  The *withCredentials* option should receive a Boolean value and is used to\\n *  indicate wether cookies should be included in ajax requests (by default\\n *  they're not).\\n *  Set this value to true if you are connecting to a BOSH service\\n *  and for some reason need to send cookies to it.\\n *  In order for this to work cross-domain, the server must also enable\\n *  credentials by setting the Access-Control-Allow-Credentials response header\\n *  to \\\"true\\\". For most usecases however this setting should be false (which\\n *  is the default).\\n *  Additionally, when using Access-Control-Allow-Credentials, the\\n *  Access-Control-Allow-Origin header can't be set to the wildcard \\\"*\\\", but\\n *  instead must be restricted to actual domains.\\n *\\n *  The *contentType* option can be set to change the default Content-Type\\n *  of \\\"text/xml; charset=utf-8\\\", which can be useful to reduce the amount of\\n *  CORS preflight requests that are sent to the server.\\n *\\n *  Parameters:\\n *    (String) service - The BOSH or WebSocket service URL.\\n *    (Object) options - A hash of configuration options\\n *\\n *  Returns:\\n *    A new Strophe.Connection object.\\n */\\nStrophe.Connection = function (service, options) {\\n    // The service URL\\n    this.service = service;\\n    // Configuration options\\n    this.options = options || {};\\n    var proto = this.options.protocol || \\\"\\\";\\n\\n    // Select protocal based on service or options\\n    if (service.indexOf(\\\"ws:\\\") === 0 || service.indexOf(\\\"wss:\\\") === 0 ||\\n            proto.indexOf(\\\"ws\\\") === 0) {\\n        this._proto = new Strophe.Websocket(this);\\n    } else {\\n        this._proto = new Strophe.Bosh(this);\\n    }\\n\\n    /* The connected JID. */\\n    this.jid = \\\"\\\";\\n    /* the JIDs domain */\\n    this.domain = null;\\n    /* stream:features */\\n    this.features = null;\\n\\n    // SASL\\n    this._sasl_data = {};\\n    this.do_session = false;\\n    this.do_bind = false;\\n\\n    // handler lists\\n    this.timedHandlers = [];\\n    this.handlers = [];\\n    this.removeTimeds = [];\\n    this.removeHandlers = [];\\n    this.addTimeds = [];\\n    this.addHandlers = [];\\n    this.protocolErrorHandlers = {\\n        'HTTP': {},\\n        'websocket': {}\\n    };\\n\\n    this._idleTimeout = null;\\n    this._disconnectTimeout = null;\\n\\n    this.authenticated = false;\\n    this.connected = false;\\n    this.disconnecting = false;\\n    this.do_authentication = true;\\n    this.paused = false;\\n    this.restored = false;\\n\\n    this._data = [];\\n    this._uniqueId = 0;\\n\\n    this._sasl_success_handler = null;\\n    this._sasl_failure_handler = null;\\n    this._sasl_challenge_handler = null;\\n\\n    // Max retries before disconnecting\\n    this.maxRetries = 5;\\n\\n    // Call onIdle callback every 1/10th of a second\\n    // XXX: setTimeout should be called only with function expressions (23974bc1)\\n    this._idleTimeout = setTimeout(function() {\\n        this._onIdle();\\n    }.bind(this), 100);\\n\\n    utils.addCookies(this.options.cookies);\\n    this.registerSASLMechanisms(this.options.mechanisms);\\n\\n    // initialize plugins\\n    for (var k in Strophe._connectionPlugins) {\\n        if (Strophe._connectionPlugins.hasOwnProperty(k)) {\\n            var ptype = Strophe._connectionPlugins[k];\\n            // jslint complaints about the below line, but this is fine\\n            var F = function () {}; // jshint ignore:line\\n            F.prototype = ptype;\\n            this[k] = new F();\\n            this[k].init(this);\\n        }\\n    }\\n};\\n\\nStrophe.Connection.prototype = {\\n    /** Function: reset\\n     *  Reset the connection.\\n     *\\n     *  This function should be called after a connection is disconnected\\n     *  before that connection is reused.\\n     */\\n    reset: function () {\\n        this._proto._reset();\\n\\n        // SASL\\n        this.do_session = false;\\n        this.do_bind = false;\\n\\n        // handler lists\\n        this.timedHandlers = [];\\n        this.handlers = [];\\n        this.removeTimeds = [];\\n        this.removeHandlers = [];\\n        this.addTimeds = [];\\n        this.addHandlers = [];\\n\\n        this.authenticated = false;\\n        this.connected = false;\\n        this.disconnecting = false;\\n        this.restored = false;\\n\\n        this._data = [];\\n        this._requests = [];\\n        this._uniqueId = 0;\\n    },\\n\\n    /** Function: pause\\n     *  Pause the request manager.\\n     *\\n     *  This will prevent Strophe from sending any more requests to the\\n     *  server.  This is very useful for temporarily pausing\\n     *  BOSH-Connections while a lot of send() calls are happening quickly.\\n     *  This causes Strophe to send the data in a single request, saving\\n     *  many request trips.\\n     */\\n    pause: function () {\\n        this.paused = true;\\n    },\\n\\n    /** Function: resume\\n     *  Resume the request manager.\\n     *\\n     *  This resumes after pause() has been called.\\n     */\\n    resume: function () {\\n        this.paused = false;\\n    },\\n\\n    /** Function: getUniqueId\\n     *  Generate a unique ID for use in <iq/> elements.\\n     *\\n     *  All <iq/> stanzas are required to have unique id attributes.  This\\n     *  function makes creating these easy.  Each connection instance has\\n     *  a counter which starts from zero, and the value of this counter\\n     *  plus a colon followed by the suffix becomes the unique id. If no\\n     *  suffix is supplied, the counter is used as the unique id.\\n     *\\n     *  Suffixes are used to make debugging easier when reading the stream\\n     *  data, and their use is recommended.  The counter resets to 0 for\\n     *  every new connection for the same reason.  For connections to the\\n     *  same server that authenticate the same way, all the ids should be\\n     *  the same, which makes it easy to see changes.  This is useful for\\n     *  automated testing as well.\\n     *\\n     *  Parameters:\\n     *    (String) suffix - A optional suffix to append to the id.\\n     *\\n     *  Returns:\\n     *    A unique string to be used for the id attribute.\\n     */\\n    getUniqueId: function(suffix) {\\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\\n            var r = Math.random() * 16 | 0,\\n                v = c === 'x' ? r : r & 0x3 | 0x8;\\n            return v.toString(16);\\n        });\\n        if (typeof(suffix) === \\\"string\\\" || typeof(suffix) === \\\"number\\\") {\\n            return uuid + \\\":\\\" + suffix;\\n        } else {\\n            return uuid + \\\"\\\";\\n        }\\n    },\\n\\n    /** Function: addProtocolErrorHandler\\n     *  Register a handler function for when a protocol (websocker or HTTP)\\n     *  error occurs.\\n     *\\n     *  NOTE: Currently only HTTP errors for BOSH requests are handled.\\n     *  Patches that handle websocket errors would be very welcome.\\n     *\\n     *  Parameters:\\n     *    (String) protocol - 'HTTP' or 'websocket'\\n     *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\\n     *    (Function) callback - Function that will fire on Http error\\n     *\\n     *  Example:\\n     *  function onError(err_code){\\n     *    //do stuff\\n     *  }\\n     *\\n     *  var conn = Strophe.connect('http://example.com/http-bind');\\n     *  conn.addProtocolErrorHandler('HTTP', 500, onError);\\n     *  // Triggers HTTP 500 error and onError handler will be called\\n     *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\\n     */\\n    addProtocolErrorHandler: function(protocol, status_code, callback){\\n        this.protocolErrorHandlers[protocol][status_code] = callback;\\n    },\\n\\n\\n    /** Function: connect\\n     *  Starts the connection process.\\n     *\\n     *  As the connection process proceeds, the user supplied callback will\\n     *  be triggered multiple times with status updates.  The callback\\n     *  should take two arguments - the status code and the error condition.\\n     *\\n     *  The status code will be one of the values in the Strophe.Status\\n     *  constants.  The error condition will be one of the conditions\\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\\n     *\\n     *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\\n     *  for BOSH connections. Please see XEP 124 for a more detailed explanation\\n     *  of the optional parameters.\\n     *\\n     *  Parameters:\\n     *    (String) jid - The user's JID.  This may be a bare JID,\\n     *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\\n     *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\\n     *      process the provided password value as an access token).\\n     *    (String) pass - The user's password.\\n     *    (Function) callback - The connect callback function.\\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\\n     *      time the server will wait before returning an empty result for\\n     *      a request.  The default setting of 60 seconds is recommended.\\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\\n     *      number of connections the server will hold at one time.  This\\n     *      should almost always be set to 1 (the default).\\n     *    (String) route - The optional route value.\\n     *    (String) authcid - The optional alternative authentication identity\\n     *      (username) if intending to impersonate another user.\\n     *      When using the SASL-EXTERNAL authentication mechanism, for example\\n     *      with client certificates, then the authcid value is used to\\n     *      determine whether an authorization JID (authzid) should be sent to\\n     *      the server. The authzid should not be sent to the server if the\\n     *      authzid and authcid are the same. So to prevent it from being sent\\n     *      (for example when the JID is already contained in the client\\n     *      certificate), set authcid to that same JID. See XEP-178 for more\\n     *      details.\\n     */\\n    connect: function (jid, pass, callback, wait, hold, route, authcid) {\\n        this.jid = jid;\\n        /** Variable: authzid\\n         *  Authorization identity.\\n         */\\n        this.authzid = Strophe.getBareJidFromJid(this.jid);\\n\\n        /** Variable: authcid\\n         *  Authentication identity (User name).\\n         */\\n        this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\\n\\n        /** Variable: pass\\n         *  Authentication identity (User password).\\n         */\\n        this.pass = pass;\\n\\n        /** Variable: servtype\\n         *  Digest MD5 compatibility.\\n         */\\n        this.servtype = \\\"xmpp\\\";\\n\\n        this.connect_callback = callback;\\n        this.disconnecting = false;\\n        this.connected = false;\\n        this.authenticated = false;\\n        this.restored = false;\\n\\n        // parse jid for domain\\n        this.domain = Strophe.getDomainFromJid(this.jid);\\n\\n        this._changeConnectStatus(Strophe.Status.CONNECTING, null);\\n\\n        this._proto._connect(wait, hold, route);\\n    },\\n\\n    /** Function: attach\\n     *  Attach to an already created and authenticated BOSH session.\\n     *\\n     *  This function is provided to allow Strophe to attach to BOSH\\n     *  sessions which have been created externally, perhaps by a Web\\n     *  application.  This is often used to support auto-login type features\\n     *  without putting user credentials into the page.\\n     *\\n     *  Parameters:\\n     *    (String) jid - The full JID that is bound by the session.\\n     *    (String) sid - The SID of the BOSH session.\\n     *    (String) rid - The current RID of the BOSH session.  This RID\\n     *      will be used by the next request.\\n     *    (Function) callback The connect callback function.\\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\\n     *      time the server will wait before returning an empty result for\\n     *      a request.  The default setting of 60 seconds is recommended.\\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\\n     *      number of connections the server will hold at one time.  This\\n     *      should almost always be set to 1 (the default).\\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\\n     *      allowed range of request ids that are valid.  The default is 5.\\n     */\\n    attach: function (jid, sid, rid, callback, wait, hold, wind) {\\n        if (this._proto instanceof Strophe.Bosh) {\\n            this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\\n        } else {\\n            throw {\\n                name: 'StropheSessionError',\\n                message: 'The \\\"attach\\\" method can only be used with a BOSH connection.'\\n            };\\n        }\\n    },\\n\\n    /** Function: restore\\n     *  Attempt to restore a cached BOSH session.\\n     *\\n     *  This function is only useful in conjunction with providing the\\n     *  \\\"keepalive\\\":true option when instantiating a new Strophe.Connection.\\n     *\\n     *  When \\\"keepalive\\\" is set to true, Strophe will cache the BOSH tokens\\n     *  RID (Request ID) and SID (Session ID) and then when this function is\\n     *  called, it will attempt to restore the session from those cached\\n     *  tokens.\\n     *\\n     *  This function must therefore be called instead of connect or attach.\\n     *\\n     *  For an example on how to use it, please see examples/restore.js\\n     *\\n     *  Parameters:\\n     *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\\n     *    (Function) callback - The connect callback function.\\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\\n     *      time the server will wait before returning an empty result for\\n     *      a request.  The default setting of 60 seconds is recommended.\\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\\n     *      number of connections the server will hold at one time.  This\\n     *      should almost always be set to 1 (the default).\\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\\n     *      allowed range of request ids that are valid.  The default is 5.\\n     */\\n    restore: function (jid, callback, wait, hold, wind) {\\n        if (this._sessionCachingSupported()) {\\n            this._proto._restore(jid, callback, wait, hold, wind);\\n        } else {\\n            throw {\\n                name: 'StropheSessionError',\\n                message: 'The \\\"restore\\\" method can only be used with a BOSH connection.'\\n            };\\n        }\\n    },\\n\\n    /** PrivateFunction: _sessionCachingSupported\\n     * Checks whether sessionStorage and JSON are supported and whether we're\\n     * using BOSH.\\n     */\\n    _sessionCachingSupported: function () {\\n        if (this._proto instanceof Strophe.Bosh) {\\n            if (!JSON) { return false; }\\n            try {\\n                sessionStorage.setItem('_strophe_', '_strophe_');\\n                sessionStorage.removeItem('_strophe_');\\n            } catch (e) {\\n                return false;\\n            }\\n            return true;\\n        }\\n        return false;\\n    },\\n\\n    /** Function: xmlInput\\n     *  User overrideable function that receives XML data coming into the\\n     *  connection.\\n     *\\n     *  The default function does nothing.  User code can override this with\\n     *  > Strophe.Connection.xmlInput = function (elem) {\\n     *  >   (user code)\\n     *  > };\\n     *\\n     *  Due to limitations of current Browsers' XML-Parsers the opening and closing\\n     *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\\n     *\\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\\n     *  <Strophe.Bosh.strip> if you want to strip this tag.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The XML data received by the connection.\\n     */\\n    /* jshint unused:false */\\n    xmlInput: function (elem) {\\n        return;\\n    },\\n    /* jshint unused:true */\\n\\n    /** Function: xmlOutput\\n     *  User overrideable function that receives XML data sent to the\\n     *  connection.\\n     *\\n     *  The default function does nothing.  User code can override this with\\n     *  > Strophe.Connection.xmlOutput = function (elem) {\\n     *  >   (user code)\\n     *  > };\\n     *\\n     *  Due to limitations of current Browsers' XML-Parsers the opening and closing\\n     *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\\n     *\\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\\n     *  <Strophe.Bosh.strip> if you want to strip this tag.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The XMLdata sent by the connection.\\n     */\\n    /* jshint unused:false */\\n    xmlOutput: function (elem) {\\n        return;\\n    },\\n    /* jshint unused:true */\\n\\n    /** Function: rawInput\\n     *  User overrideable function that receives raw data coming into the\\n     *  connection.\\n     *\\n     *  The default function does nothing.  User code can override this with\\n     *  > Strophe.Connection.rawInput = function (data) {\\n     *  >   (user code)\\n     *  > };\\n     *\\n     *  Parameters:\\n     *    (String) data - The data received by the connection.\\n     */\\n    /* jshint unused:false */\\n    rawInput: function (data) {\\n        return;\\n    },\\n    /* jshint unused:true */\\n\\n    /** Function: rawOutput\\n     *  User overrideable function that receives raw data sent to the\\n     *  connection.\\n     *\\n     *  The default function does nothing.  User code can override this with\\n     *  > Strophe.Connection.rawOutput = function (data) {\\n     *  >   (user code)\\n     *  > };\\n     *\\n     *  Parameters:\\n     *    (String) data - The data sent by the connection.\\n     */\\n    /* jshint unused:false */\\n    rawOutput: function (data) {\\n        return;\\n    },\\n    /* jshint unused:true */\\n\\n    /** Function: nextValidRid\\n     *  User overrideable function that receives the new valid rid.\\n     *\\n     *  The default function does nothing. User code can override this with\\n     *  > Strophe.Connection.nextValidRid = function (rid) {\\n     *  >    (user code)\\n     *  > };\\n     *\\n     *  Parameters:\\n     *    (Number) rid - The next valid rid\\n     */\\n    /* jshint unused:false */\\n    nextValidRid: function (rid) {\\n        return;\\n    },\\n    /* jshint unused:true */\\n\\n    /** Function: send\\n     *  Send a stanza.\\n     *\\n     *  This function is called to push data onto the send queue to\\n     *  go out over the wire.  Whenever a request is sent to the BOSH\\n     *  server, all pending data is sent and the queue is flushed.\\n     *\\n     *  Parameters:\\n     *    (XMLElement |\\n     *     [XMLElement] |\\n     *     Strophe.Builder) elem - The stanza to send.\\n     */\\n    send: function (elem) {\\n        if (elem === null) { return ; }\\n        if (typeof(elem.sort) === \\\"function\\\") {\\n            for (var i = 0; i < elem.length; i++) {\\n                this._queueData(elem[i]);\\n            }\\n        } else if (typeof(elem.tree) === \\\"function\\\") {\\n            this._queueData(elem.tree());\\n        } else {\\n            this._queueData(elem);\\n        }\\n\\n        this._proto._send();\\n    },\\n\\n    /** Function: flush\\n     *  Immediately send any pending outgoing data.\\n     *\\n     *  Normally send() queues outgoing data until the next idle period\\n     *  (100ms), which optimizes network use in the common cases when\\n     *  several send()s are called in succession. flush() can be used to\\n     *  immediately send all pending data.\\n     */\\n    flush: function () {\\n        // cancel the pending idle period and run the idle function\\n        // immediately\\n        clearTimeout(this._idleTimeout);\\n        this._onIdle();\\n    },\\n\\n    /** Function: sendPresence\\n     *  Helper function to send presence stanzas. The main benefit is for\\n     *  sending presence stanzas for which you expect a responding presence\\n     *  stanza with the same id (for example when leaving a chat room).\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The stanza to send.\\n     *    (Function) callback - The callback function for a successful request.\\n     *    (Function) errback - The callback function for a failed or timed\\n     *      out request.  On timeout, the stanza will be null.\\n     *    (Integer) timeout - The time specified in milliseconds for a\\n     *      timeout to occur.\\n     *\\n     *  Returns:\\n     *    The id used to send the presence.\\n     */\\n    sendPresence: function(elem, callback, errback, timeout) {\\n        var timeoutHandler = null;\\n        var that = this;\\n        if (typeof(elem.tree) === \\\"function\\\") {\\n            elem = elem.tree();\\n        }\\n        var id = elem.getAttribute('id');\\n        if (!id) { // inject id if not found\\n            id = this.getUniqueId(\\\"sendPresence\\\");\\n            elem.setAttribute(\\\"id\\\", id);\\n        }\\n\\n        if (typeof callback === \\\"function\\\" || typeof errback === \\\"function\\\") {\\n            var handler = this.addHandler(function (stanza) {\\n                // remove timeout handler if there is one\\n                if (timeoutHandler) {\\n                    that.deleteTimedHandler(timeoutHandler);\\n                }\\n                var type = stanza.getAttribute('type');\\n                if (type === 'error') {\\n                    if (errback) {\\n                        errback(stanza);\\n                    }\\n                } else if (callback) {\\n                    callback(stanza);\\n                }\\n            }, null, 'presence', null, id);\\n\\n            // if timeout specified, set up a timeout handler.\\n            if (timeout) {\\n                timeoutHandler = this.addTimedHandler(timeout, function () {\\n                    // get rid of normal handler\\n                    that.deleteHandler(handler);\\n                    // call errback on timeout with null stanza\\n                    if (errback) {\\n                        errback(null);\\n                    }\\n                    return false;\\n                });\\n            }\\n        }\\n        this.send(elem);\\n        return id;\\n    },\\n\\n    /** Function: sendIQ\\n     *  Helper function to send IQ stanzas.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The stanza to send.\\n     *    (Function) callback - The callback function for a successful request.\\n     *    (Function) errback - The callback function for a failed or timed\\n     *      out request.  On timeout, the stanza will be null.\\n     *    (Integer) timeout - The time specified in milliseconds for a\\n     *      timeout to occur.\\n     *\\n     *  Returns:\\n     *    The id used to send the IQ.\\n    */\\n    sendIQ: function(elem, callback, errback, timeout) {\\n        var timeoutHandler = null;\\n        var that = this;\\n        if (typeof(elem.tree) === \\\"function\\\") {\\n            elem = elem.tree();\\n        }\\n        var id = elem.getAttribute('id');\\n        if (!id) { // inject id if not found\\n            id = this.getUniqueId(\\\"sendIQ\\\");\\n            elem.setAttribute(\\\"id\\\", id);\\n        }\\n\\n        if (typeof callback === \\\"function\\\" || typeof errback === \\\"function\\\") {\\n            var handler = this.addHandler(function (stanza) {\\n                // remove timeout handler if there is one\\n                if (timeoutHandler) {\\n                    that.deleteTimedHandler(timeoutHandler);\\n                }\\n                var iqtype = stanza.getAttribute('type');\\n                if (iqtype === 'result') {\\n                    if (callback) {\\n                        callback(stanza);\\n                    }\\n                } else if (iqtype === 'error') {\\n                    if (errback) {\\n                        errback(stanza);\\n                    }\\n                } else {\\n                    throw {\\n                        name: \\\"StropheError\\\",\\n                        message: \\\"Got bad IQ type of \\\" + iqtype\\n                    };\\n                }\\n            }, null, 'iq', ['error', 'result'], id);\\n\\n            // if timeout specified, set up a timeout handler.\\n            if (timeout) {\\n                timeoutHandler = this.addTimedHandler(timeout, function () {\\n                    // get rid of normal handler\\n                    that.deleteHandler(handler);\\n                    // call errback on timeout with null stanza\\n                    if (errback) {\\n                        errback(null);\\n                    }\\n                    return false;\\n                });\\n            }\\n        }\\n        this.send(elem);\\n        return id;\\n    },\\n\\n    /** PrivateFunction: _queueData\\n     *  Queue outgoing data for later sending.  Also ensures that the data\\n     *  is a DOMElement.\\n     */\\n    _queueData: function (element) {\\n        if (element === null ||\\n            !element.tagName ||\\n            !element.childNodes) {\\n            throw {\\n                name: \\\"StropheError\\\",\\n                message: \\\"Cannot queue non-DOMElement.\\\"\\n            };\\n        }\\n        this._data.push(element);\\n    },\\n\\n    /** PrivateFunction: _sendRestart\\n     *  Send an xmpp:restart stanza.\\n     */\\n    _sendRestart: function () {\\n        this._data.push(\\\"restart\\\");\\n        this._proto._sendRestart();\\n        // XXX: setTimeout should be called only with function expressions (23974bc1)\\n        this._idleTimeout = setTimeout(function() {\\n            this._onIdle();\\n        }.bind(this), 100);\\n    },\\n\\n    /** Function: addTimedHandler\\n     *  Add a timed handler to the connection.\\n     *\\n     *  This function adds a timed handler.  The provided handler will\\n     *  be called every period milliseconds until it returns false,\\n     *  the connection is terminated, or the handler is removed.  Handlers\\n     *  that wish to continue being invoked should return true.\\n     *\\n     *  Because of method binding it is necessary to save the result of\\n     *  this function if you wish to remove a handler with\\n     *  deleteTimedHandler().\\n     *\\n     *  Note that user handlers are not active until authentication is\\n     *  successful.\\n     *\\n     *  Parameters:\\n     *    (Integer) period - The period of the handler.\\n     *    (Function) handler - The callback function.\\n     *\\n     *  Returns:\\n     *    A reference to the handler that can be used to remove it.\\n     */\\n    addTimedHandler: function (period, handler) {\\n        var thand = new Strophe.TimedHandler(period, handler);\\n        this.addTimeds.push(thand);\\n        return thand;\\n    },\\n\\n    /** Function: deleteTimedHandler\\n     *  Delete a timed handler for a connection.\\n     *\\n     *  This function removes a timed handler from the connection.  The\\n     *  handRef parameter is *not* the function passed to addTimedHandler(),\\n     *  but is the reference returned from addTimedHandler().\\n     *\\n     *  Parameters:\\n     *    (Strophe.TimedHandler) handRef - The handler reference.\\n     */\\n    deleteTimedHandler: function (handRef) {\\n        // this must be done in the Idle loop so that we don't change\\n        // the handlers during iteration\\n        this.removeTimeds.push(handRef);\\n    },\\n\\n    /** Function: addHandler\\n     *  Add a stanza handler for the connection.\\n     *\\n     *  This function adds a stanza handler to the connection.  The\\n     *  handler callback will be called for any stanza that matches\\n     *  the parameters.  Note that if multiple parameters are supplied,\\n     *  they must all match for the handler to be invoked.\\n     *\\n     *  The handler will receive the stanza that triggered it as its argument.\\n     *  *The handler should return true if it is to be invoked again;\\n     *  returning false will remove the handler after it returns.*\\n     *\\n     *  As a convenience, the ns parameters applies to the top level element\\n     *  and also any of its immediate children.  This is primarily to make\\n     *  matching /iq/query elements easy.\\n     *\\n     *  Options\\n     *  ~~~~~~~\\n     *  With the options argument, you can specify boolean flags that affect how\\n     *  matches are being done.\\n     *\\n     *  Currently two flags exist:\\n     *\\n     *  - matchBareFromJid:\\n     *      When set to true, the from parameter and the\\n     *      from attribute on the stanza will be matched as bare JIDs instead\\n     *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\\n     *      value of options. The default value for matchBareFromJid is false.\\n     *\\n     *  - ignoreNamespaceFragment:\\n     *      When set to true, a fragment specified on the stanza's namespace\\n     *      URL will be ignored when it's matched with the one configured for\\n     *      the handler.\\n     *\\n     *      This means that if you register like this:\\n     *      >   connection.addHandler(\\n     *      >       handler,\\n     *      >       'http://jabber.org/protocol/muc',\\n     *      >       null, null, null, null,\\n     *      >       {'ignoreNamespaceFragment': true}\\n     *      >   );\\n     *\\n     *      Then a stanza with XML namespace of\\n     *      'http://jabber.org/protocol/muc#user' will also be matched. If\\n     *      'ignoreNamespaceFragment' is false, then only stanzas with\\n     *      'http://jabber.org/protocol/muc' will be matched.\\n     *\\n     *  Deleting the handler\\n     *  ~~~~~~~~~~~~~~~~~~~~\\n     *  The return value should be saved if you wish to remove the handler\\n     *  with deleteHandler().\\n     *\\n     *  Parameters:\\n     *    (Function) handler - The user callback.\\n     *    (String) ns - The namespace to match.\\n     *    (String) name - The stanza name to match.\\n     *    (String|Array) type - The stanza type (or types if an array) to match.\\n     *    (String) id - The stanza id attribute to match.\\n     *    (String) from - The stanza from attribute to match.\\n     *    (String) options - The handler options\\n     *\\n     *  Returns:\\n     *    A reference to the handler that can be used to remove it.\\n     */\\n    addHandler: function (handler, ns, name, type, id, from, options) {\\n        var hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\\n        this.addHandlers.push(hand);\\n        return hand;\\n    },\\n\\n    /** Function: deleteHandler\\n     *  Delete a stanza handler for a connection.\\n     *\\n     *  This function removes a stanza handler from the connection.  The\\n     *  handRef parameter is *not* the function passed to addHandler(),\\n     *  but is the reference returned from addHandler().\\n     *\\n     *  Parameters:\\n     *    (Strophe.Handler) handRef - The handler reference.\\n     */\\n    deleteHandler: function (handRef) {\\n        // this must be done in the Idle loop so that we don't change\\n        // the handlers during iteration\\n        this.removeHandlers.push(handRef);\\n        // If a handler is being deleted while it is being added,\\n        // prevent it from getting added\\n        var i = this.addHandlers.indexOf(handRef);\\n        if (i >= 0) {\\n            this.addHandlers.splice(i, 1);\\n        }\\n    },\\n\\n    /** Function: registerSASLMechanisms\\n     *\\n     * Register the SASL mechanisms which will be supported by this instance of\\n     * Strophe.Connection (i.e. which this XMPP client will support).\\n     *\\n     *  Parameters:\\n     *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\\n     *\\n     */\\n    registerSASLMechanisms: function (mechanisms) {\\n        this.mechanisms = {};\\n        mechanisms = mechanisms || [\\n            Strophe.SASLAnonymous,\\n            Strophe.SASLExternal,\\n            Strophe.SASLMD5,\\n            Strophe.SASLOAuthBearer,\\n            Strophe.SASLXOAuth2,\\n            Strophe.SASLPlain,\\n            Strophe.SASLSHA1\\n        ];\\n        mechanisms.forEach(this.registerSASLMechanism.bind(this));\\n    },\\n\\n    /** Function: registerSASLMechanism\\n     *\\n     * Register a single SASL mechanism, to be supported by this client.\\n     *\\n     *  Parameters:\\n     *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\\n     *\\n     */\\n    registerSASLMechanism: function (mechanism) {\\n        this.mechanisms[mechanism.prototype.name] = mechanism;\\n    },\\n\\n    /** Function: disconnect\\n     *  Start the graceful disconnection process.\\n     *\\n     *  This function starts the disconnection process.  This process starts\\n     *  by sending unavailable presence and sending BOSH body of type\\n     *  terminate.  A timeout handler makes sure that disconnection happens\\n     *  even if the BOSH server does not respond.\\n     *  If the Connection object isn't connected, at least tries to abort all pending requests\\n     *  so the connection object won't generate successful requests (which were already opened).\\n     *\\n     *  The user supplied connection callback will be notified of the\\n     *  progress as this process happens.\\n     *\\n     *  Parameters:\\n     *    (String) reason - The reason the disconnect is occuring.\\n     */\\n    disconnect: function (reason) {\\n        this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\\n\\n        Strophe.info(\\\"Disconnect was called because: \\\" + reason);\\n        if (this.connected) {\\n            var pres = false;\\n            this.disconnecting = true;\\n            if (this.authenticated) {\\n                pres = $pres({\\n                    xmlns: Strophe.NS.CLIENT,\\n                    type: 'unavailable'\\n                });\\n            }\\n            // setup timeout handler\\n            this._disconnectTimeout = this._addSysTimedHandler(\\n                3000, this._onDisconnectTimeout.bind(this));\\n            this._proto._disconnect(pres);\\n        } else {\\n            Strophe.info(\\\"Disconnect was called before Strophe connected to the server\\\");\\n            this._proto._abortAllRequests();\\n            this._doDisconnect();\\n        }\\n    },\\n\\n    /** PrivateFunction: _changeConnectStatus\\n     *  _Private_ helper function that makes sure plugins and the user's\\n     *  callback are notified of connection status changes.\\n     *\\n     *  Parameters:\\n     *    (Integer) status - the new connection status, one of the values\\n     *      in Strophe.Status\\n     *    (String) condition - the error condition or null\\n     *    (XMLElement) elem - The triggering stanza.\\n     */\\n    _changeConnectStatus: function (status, condition, elem) {\\n        // notify all plugins listening for status changes\\n        for (var k in Strophe._connectionPlugins) {\\n            if (Strophe._connectionPlugins.hasOwnProperty(k)) {\\n                var plugin = this[k];\\n                if (plugin.statusChanged) {\\n                    try {\\n                        plugin.statusChanged(status, condition);\\n                    } catch (err) {\\n                        Strophe.error(\\\"\\\" + k + \\\" plugin caused an exception \\\" +\\n                                      \\\"changing status: \\\" + err);\\n                    }\\n                }\\n            }\\n        }\\n\\n        // notify the user's callback\\n        if (this.connect_callback) {\\n            try {\\n                this.connect_callback(status, condition, elem);\\n            } catch (e) {\\n                Strophe._handleError(e);\\n                Strophe.error(\\n                    \\\"User connection callback caused an \\\"+\\\"exception: \\\"+e);\\n            }\\n        }\\n    },\\n\\n    /** PrivateFunction: _doDisconnect\\n     *  _Private_ function to disconnect.\\n     *\\n     *  This is the last piece of the disconnection logic.  This resets the\\n     *  connection and alerts the user's connection callback.\\n     */\\n    _doDisconnect: function (condition) {\\n        if (typeof this._idleTimeout === \\\"number\\\") {\\n            clearTimeout(this._idleTimeout);\\n        }\\n\\n        // Cancel Disconnect Timeout\\n        if (this._disconnectTimeout !== null) {\\n            this.deleteTimedHandler(this._disconnectTimeout);\\n            this._disconnectTimeout = null;\\n        }\\n\\n        Strophe.info(\\\"_doDisconnect was called\\\");\\n        this._proto._doDisconnect();\\n\\n        this.authenticated = false;\\n        this.disconnecting = false;\\n        this.restored = false;\\n\\n        // delete handlers\\n        this.handlers = [];\\n        this.timedHandlers = [];\\n        this.removeTimeds = [];\\n        this.removeHandlers = [];\\n        this.addTimeds = [];\\n        this.addHandlers = [];\\n\\n        // tell the parent we disconnected\\n        this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\\n        this.connected = false;\\n    },\\n\\n    /** PrivateFunction: _dataRecv\\n     *  _Private_ handler to processes incoming data from the the connection.\\n     *\\n     *  Except for _connect_cb handling the initial connection request,\\n     *  this function handles the incoming data for all requests.  This\\n     *  function also fires stanza handlers that match each incoming\\n     *  stanza.\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) req - The request that has data ready.\\n     *    (string) req - The stanza a raw string (optiona).\\n     */\\n    _dataRecv: function (req, raw) {\\n        Strophe.info(\\\"_dataRecv called\\\");\\n        var elem = this._proto._reqToData(req);\\n        if (elem === null) { return; }\\n\\n        if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\\n            if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\\n                this.xmlInput(elem.childNodes[0]);\\n            } else {\\n                this.xmlInput(elem);\\n            }\\n        }\\n        if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\\n            if (raw) {\\n                this.rawInput(raw);\\n            } else {\\n                this.rawInput(Strophe.serialize(elem));\\n            }\\n        }\\n\\n        // remove handlers scheduled for deletion\\n        var i, hand;\\n        while (this.removeHandlers.length > 0) {\\n            hand = this.removeHandlers.pop();\\n            i = this.handlers.indexOf(hand);\\n            if (i >= 0) {\\n                this.handlers.splice(i, 1);\\n            }\\n        }\\n\\n        // add handlers scheduled for addition\\n        while (this.addHandlers.length > 0) {\\n            this.handlers.push(this.addHandlers.pop());\\n        }\\n\\n        // handle graceful disconnect\\n        if (this.disconnecting && this._proto._emptyQueue()) {\\n            this._doDisconnect();\\n            return;\\n        }\\n\\n        var type = elem.getAttribute(\\\"type\\\");\\n        var cond, conflict;\\n        if (type !== null && type === \\\"terminate\\\") {\\n            // Don't process stanzas that come in after disconnect\\n            if (this.disconnecting) {\\n                return;\\n            }\\n\\n            // an error occurred\\n            cond = elem.getAttribute(\\\"condition\\\");\\n            conflict = elem.getElementsByTagName(\\\"conflict\\\");\\n            if (cond !== null) {\\n                if (cond === \\\"remote-stream-error\\\" && conflict.length > 0) {\\n                    cond = \\\"conflict\\\";\\n                }\\n                this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\\n            } else {\\n                this._changeConnectStatus(\\n                    Strophe.Status.CONNFAIL,\\n                    Strophe.ErrorCondition.UNKOWN_REASON\\n                );\\n            }\\n            this._doDisconnect(cond);\\n            return;\\n        }\\n\\n        // send each incoming stanza through the handler chain\\n        var that = this;\\n        Strophe.forEachChild(elem, null, function (child) {\\n            var i, newList;\\n            // process handlers\\n            newList = that.handlers;\\n            that.handlers = [];\\n            for (i = 0; i < newList.length; i++) {\\n                var hand = newList[i];\\n                // encapsulate 'handler.run' not to lose the whole handler list if\\n                // one of the handlers throws an exception\\n                try {\\n                    if (hand.isMatch(child) &&\\n                        (that.authenticated || !hand.user)) {\\n                        if (hand.run(child)) {\\n                            that.handlers.push(hand);\\n                        }\\n                    } else {\\n                        that.handlers.push(hand);\\n                    }\\n                } catch(e) {\\n                    // if the handler throws an exception, we consider it as false\\n                    Strophe.warn('Removing Strophe handlers due to uncaught exception: '+e.message);\\n                }\\n            }\\n        });\\n    },\\n\\n\\n    /** Attribute: mechanisms\\n     *  SASL Mechanisms available for Connection.\\n     */\\n    mechanisms: {},\\n\\n    /** PrivateFunction: _connect_cb\\n     *  _Private_ handler for initial connection request.\\n     *\\n     *  This handler is used to process the initial connection request\\n     *  response from the BOSH server. It is used to set up authentication\\n     *  handlers and start the authentication process.\\n     *\\n     *  SASL authentication will be attempted if available, otherwise\\n     *  the code will fall back to legacy authentication.\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) req - The current request.\\n     *    (Function) _callback - low level (xmpp) connect callback function.\\n     *      Useful for plugins with their own xmpp connect callback (when they\\n     *      want to do something special).\\n     */\\n    _connect_cb: function (req, _callback, raw) {\\n        Strophe.info(\\\"_connect_cb was called\\\");\\n        this.connected = true;\\n\\n        var bodyWrap;\\n        try {\\n            bodyWrap = this._proto._reqToData(req);\\n        } catch (e) {\\n            if (e !== \\\"badformat\\\") { throw e; }\\n            this._changeConnectStatus(\\n                Strophe.Status.CONNFAIL,\\n                Strophe.ErrorCondition.BAD_FORMAT\\n            );\\n            this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT);\\n        }\\n        if (!bodyWrap) { return; }\\n\\n        if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\\n            if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\\n                this.xmlInput(bodyWrap.childNodes[0]);\\n            } else {\\n                this.xmlInput(bodyWrap);\\n            }\\n        }\\n        if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\\n            if (raw) {\\n                this.rawInput(raw);\\n            } else {\\n                this.rawInput(Strophe.serialize(bodyWrap));\\n            }\\n        }\\n\\n        var conncheck = this._proto._connect_cb(bodyWrap);\\n        if (conncheck === Strophe.Status.CONNFAIL) {\\n            return;\\n        }\\n\\n        // Check for the stream:features tag\\n        var hasFeatures;\\n        if (bodyWrap.getElementsByTagNameNS) {\\n            hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \\\"features\\\").length > 0;\\n        } else {\\n            hasFeatures = bodyWrap.getElementsByTagName(\\\"stream:features\\\").length > 0 ||\\n                            bodyWrap.getElementsByTagName(\\\"features\\\").length > 0;\\n        }\\n        if (!hasFeatures) {\\n            this._proto._no_auth_received(_callback);\\n            return;\\n        }\\n\\n        var matched = [], i, mech;\\n        var mechanisms = bodyWrap.getElementsByTagName(\\\"mechanism\\\");\\n        if (mechanisms.length > 0) {\\n            for (i = 0; i < mechanisms.length; i++) {\\n                mech = Strophe.getText(mechanisms[i]);\\n                if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\\n            }\\n        }\\n        if (matched.length === 0) {\\n            if (bodyWrap.getElementsByTagName(\\\"auth\\\").length === 0) {\\n                // There are no matching SASL mechanisms and also no legacy\\n                // auth available.\\n                this._proto._no_auth_received(_callback);\\n                return;\\n            }\\n        }\\n        if (this.do_authentication !== false) {\\n            this.authenticate(matched);\\n        }\\n    },\\n\\n    /** Function: sortMechanismsByPriority\\n     *\\n     *  Sorts an array of objects with prototype SASLMechanism according to\\n     *  their priorities.\\n     *\\n     *  Parameters:\\n     *    (Array) mechanisms - Array of SASL mechanisms.\\n     *\\n     */\\n    sortMechanismsByPriority: function (mechanisms) {\\n        // Sorting mechanisms according to priority.\\n        var i, j, higher, swap;\\n        for (i = 0; i < mechanisms.length - 1; ++i) {\\n            higher = i;\\n            for (j = i + 1; j < mechanisms.length; ++j) {\\n                if (mechanisms[j].prototype.priority > mechanisms[higher].prototype.priority) {\\n                    higher = j;\\n                }\\n            }\\n            if (higher !== i) {\\n                swap = mechanisms[i];\\n                mechanisms[i] = mechanisms[higher];\\n                mechanisms[higher] = swap;\\n            }\\n        }\\n        return mechanisms;\\n    },\\n\\n    /** PrivateFunction: _attemptSASLAuth\\n     *\\n     *  Iterate through an array of SASL mechanisms and attempt authentication\\n     *  with the highest priority (enabled) mechanism.\\n     *\\n     *  Parameters:\\n     *    (Array) mechanisms - Array of SASL mechanisms.\\n     *\\n     *  Returns:\\n     *    (Boolean) mechanism_found - true or false, depending on whether a\\n     *          valid SASL mechanism was found with which authentication could be\\n     *          started.\\n     */\\n    _attemptSASLAuth: function (mechanisms) {\\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\\n        var i = 0, mechanism_found = false;\\n        for (i = 0; i < mechanisms.length; ++i) {\\n            if (!mechanisms[i].prototype.test(this)) {\\n                continue;\\n            }\\n            this._sasl_success_handler = this._addSysHandler(\\n                this._sasl_success_cb.bind(this), null,\\n                \\\"success\\\", null, null);\\n            this._sasl_failure_handler = this._addSysHandler(\\n                this._sasl_failure_cb.bind(this), null,\\n                \\\"failure\\\", null, null);\\n            this._sasl_challenge_handler = this._addSysHandler(\\n                this._sasl_challenge_cb.bind(this), null,\\n                \\\"challenge\\\", null, null);\\n\\n            this._sasl_mechanism = new mechanisms[i]();\\n            this._sasl_mechanism.onStart(this);\\n\\n            var request_auth_exchange = $build(\\\"auth\\\", {\\n                xmlns: Strophe.NS.SASL,\\n                mechanism: this._sasl_mechanism.name\\n            });\\n            if (this._sasl_mechanism.isClientFirst) {\\n                var response = this._sasl_mechanism.onChallenge(this, null);\\n                request_auth_exchange.t(btoa(response));\\n            }\\n            this.send(request_auth_exchange.tree());\\n            mechanism_found = true;\\n            break;\\n        }\\n        return mechanism_found;\\n    },\\n\\n    /** PrivateFunction: _attemptLegacyAuth\\n     *\\n     *  Attempt legacy (i.e. non-SASL) authentication.\\n     *\\n     */\\n    _attemptLegacyAuth: function () {\\n        if (Strophe.getNodeFromJid(this.jid) === null) {\\n            // we don't have a node, which is required for non-anonymous\\n            // client connections\\n            this._changeConnectStatus(\\n                Strophe.Status.CONNFAIL,\\n                Strophe.ErrorCondition.MISSING_JID_NODE\\n            );\\n            this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE);\\n        } else {\\n            // Fall back to legacy authentication\\n            this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\\n            this._addSysHandler(\\n                this._auth1_cb.bind(this),\\n                null, null, null, \\\"_auth_1\\\"\\n            );\\n            this.send($iq({\\n                    'type': \\\"get\\\",\\n                    'to': this.domain,\\n                    'id': \\\"_auth_1\\\"\\n                }).c(\\\"query\\\", {xmlns: Strophe.NS.AUTH})\\n                .c(\\\"username\\\", {}).t(Strophe.getNodeFromJid(this.jid))\\n                .tree());\\n        }\\n    },\\n\\n    /** Function: authenticate\\n     * Set up authentication\\n     *\\n     *  Continues the initial connection request by setting up authentication\\n     *  handlers and starting the authentication process.\\n     *\\n     *  SASL authentication will be attempted if available, otherwise\\n     *  the code will fall back to legacy authentication.\\n     *\\n     *  Parameters:\\n     *    (Array) matched - Array of SASL mechanisms supported.\\n     *\\n     */\\n    authenticate: function (matched) {\\n        if (!this._attemptSASLAuth(matched)) {\\n            this._attemptLegacyAuth();\\n        }\\n    },\\n\\n    /** PrivateFunction: _sasl_challenge_cb\\n     *  _Private_ handler for the SASL challenge\\n     *\\n     */\\n    _sasl_challenge_cb: function(elem) {\\n      var challenge = atob(Strophe.getText(elem));\\n      var response = this._sasl_mechanism.onChallenge(this, challenge);\\n      var stanza = $build('response', {\\n          'xmlns': Strophe.NS.SASL\\n      });\\n      if (response !== \\\"\\\") {\\n        stanza.t(btoa(response));\\n      }\\n      this.send(stanza.tree());\\n      return true;\\n    },\\n\\n    /** PrivateFunction: _auth1_cb\\n     *  _Private_ handler for legacy authentication.\\n     *\\n     *  This handler is called in response to the initial <iq type='get'/>\\n     *  for legacy authentication.  It builds an authentication <iq/> and\\n     *  sends it, creating a handler (calling back to _auth2_cb()) to\\n     *  handle the result\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The stanza that triggered the callback.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    /* jshint unused:false */\\n    _auth1_cb: function (elem) {\\n        // build plaintext auth iq\\n        var iq = $iq({type: \\\"set\\\", id: \\\"_auth_2\\\"})\\n            .c('query', {xmlns: Strophe.NS.AUTH})\\n            .c('username', {}).t(Strophe.getNodeFromJid(this.jid))\\n            .up()\\n            .c('password').t(this.pass);\\n\\n        if (!Strophe.getResourceFromJid(this.jid)) {\\n            // since the user has not supplied a resource, we pick\\n            // a default one here.  unlike other auth methods, the server\\n            // cannot do this for us.\\n            this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\\n        }\\n        iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\\n\\n        this._addSysHandler(this._auth2_cb.bind(this), null,\\n                            null, null, \\\"_auth_2\\\");\\n        this.send(iq.tree());\\n        return false;\\n    },\\n    /* jshint unused:true */\\n\\n    /** PrivateFunction: _sasl_success_cb\\n     *  _Private_ handler for succesful SASL authentication.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The matching stanza.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _sasl_success_cb: function (elem) {\\n        if (this._sasl_data[\\\"server-signature\\\"]) {\\n            var serverSignature;\\n            var success = atob(Strophe.getText(elem));\\n            var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\\n            var matches = success.match(attribMatch);\\n            if (matches[1] === \\\"v\\\") {\\n                serverSignature = matches[2];\\n            }\\n\\n            if (serverSignature !== this._sasl_data[\\\"server-signature\\\"]) {\\n              // remove old handlers\\n              this.deleteHandler(this._sasl_failure_handler);\\n              this._sasl_failure_handler = null;\\n              if (this._sasl_challenge_handler) {\\n                this.deleteHandler(this._sasl_challenge_handler);\\n                this._sasl_challenge_handler = null;\\n              }\\n\\n              this._sasl_data = {};\\n              return this._sasl_failure_cb(null);\\n            }\\n        }\\n        Strophe.info(\\\"SASL authentication succeeded.\\\");\\n\\n        if (this._sasl_mechanism) {\\n          this._sasl_mechanism.onSuccess();\\n        }\\n\\n        // remove old handlers\\n        this.deleteHandler(this._sasl_failure_handler);\\n        this._sasl_failure_handler = null;\\n        if (this._sasl_challenge_handler) {\\n            this.deleteHandler(this._sasl_challenge_handler);\\n            this._sasl_challenge_handler = null;\\n        }\\n\\n        var streamfeature_handlers = [];\\n        var wrapper = function(handlers, elem) {\\n            while (handlers.length) {\\n                this.deleteHandler(handlers.pop());\\n            }\\n            this._sasl_auth1_cb.bind(this)(elem);\\n            return false;\\n        };\\n        streamfeature_handlers.push(this._addSysHandler(function(elem) {\\n            wrapper.bind(this)(streamfeature_handlers, elem);\\n        }.bind(this), null, \\\"stream:features\\\", null, null));\\n        streamfeature_handlers.push(this._addSysHandler(function(elem) {\\n            wrapper.bind(this)(streamfeature_handlers, elem);\\n        }.bind(this), Strophe.NS.STREAM, \\\"features\\\", null, null));\\n\\n        // we must send an xmpp:restart now\\n        this._sendRestart();\\n\\n        return false;\\n    },\\n\\n    /** PrivateFunction: _sasl_auth1_cb\\n     *  _Private_ handler to start stream binding.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The matching stanza.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _sasl_auth1_cb: function (elem) {\\n        // save stream:features for future usage\\n        this.features = elem;\\n        var i, child;\\n        for (i = 0; i < elem.childNodes.length; i++) {\\n            child = elem.childNodes[i];\\n            if (child.nodeName === 'bind') {\\n                this.do_bind = true;\\n            }\\n\\n            if (child.nodeName === 'session') {\\n                this.do_session = true;\\n            }\\n        }\\n\\n        if (!this.do_bind) {\\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\\n            return false;\\n        } else {\\n            this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\\n                                null, \\\"_bind_auth_2\\\");\\n\\n            var resource = Strophe.getResourceFromJid(this.jid);\\n            if (resource) {\\n                this.send($iq({type: \\\"set\\\", id: \\\"_bind_auth_2\\\"})\\n                          .c('bind', {xmlns: Strophe.NS.BIND})\\n                          .c('resource', {}).t(resource).tree());\\n            } else {\\n                this.send($iq({type: \\\"set\\\", id: \\\"_bind_auth_2\\\"})\\n                          .c('bind', {xmlns: Strophe.NS.BIND})\\n                          .tree());\\n            }\\n        }\\n        return false;\\n    },\\n\\n    /** PrivateFunction: _sasl_bind_cb\\n     *  _Private_ handler for binding result and session start.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The matching stanza.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _sasl_bind_cb: function (elem) {\\n        if (elem.getAttribute(\\\"type\\\") === \\\"error\\\") {\\n            Strophe.info(\\\"SASL binding failed.\\\");\\n            var conflict = elem.getElementsByTagName(\\\"conflict\\\"), condition;\\n            if (conflict.length > 0) {\\n                condition = Strophe.ErrorCondition.CONFLICT;\\n            }\\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition, elem);\\n            return false;\\n        }\\n\\n        // TODO - need to grab errors\\n        var bind = elem.getElementsByTagName(\\\"bind\\\");\\n        var jidNode;\\n        if (bind.length > 0) {\\n            // Grab jid\\n            jidNode = bind[0].getElementsByTagName(\\\"jid\\\");\\n            if (jidNode.length > 0) {\\n                this.jid = Strophe.getText(jidNode[0]);\\n\\n                if (this.do_session) {\\n                    this._addSysHandler(this._sasl_session_cb.bind(this),\\n                                        null, null, null, \\\"_session_auth_2\\\");\\n\\n                    this.send($iq({type: \\\"set\\\", id: \\\"_session_auth_2\\\"})\\n                                  .c('session', {xmlns: Strophe.NS.SESSION})\\n                                  .tree());\\n                } else {\\n                    this.authenticated = true;\\n                    this._changeConnectStatus(Strophe.Status.CONNECTED, null);\\n                }\\n            }\\n        } else {\\n            Strophe.info(\\\"SASL binding failed.\\\");\\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\\n            return false;\\n        }\\n    },\\n\\n    /** PrivateFunction: _sasl_session_cb\\n     *  _Private_ handler to finish successful SASL connection.\\n     *\\n     *  This sets Connection.authenticated to true on success, which\\n     *  starts the processing of user handlers.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The matching stanza.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _sasl_session_cb: function (elem) {\\n        if (elem.getAttribute(\\\"type\\\") === \\\"result\\\") {\\n            this.authenticated = true;\\n            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\\n        } else if (elem.getAttribute(\\\"type\\\") === \\\"error\\\") {\\n            Strophe.info(\\\"Session creation failed.\\\");\\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\\n            return false;\\n        }\\n        return false;\\n    },\\n\\n    /** PrivateFunction: _sasl_failure_cb\\n     *  _Private_ handler for SASL authentication failure.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The matching stanza.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    /* jshint unused:false */\\n    _sasl_failure_cb: function (elem) {\\n        // delete unneeded handlers\\n        if (this._sasl_success_handler) {\\n            this.deleteHandler(this._sasl_success_handler);\\n            this._sasl_success_handler = null;\\n        }\\n        if (this._sasl_challenge_handler) {\\n            this.deleteHandler(this._sasl_challenge_handler);\\n            this._sasl_challenge_handler = null;\\n        }\\n\\n        if(this._sasl_mechanism)\\n          this._sasl_mechanism.onFailure();\\n        this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\\n        return false;\\n    },\\n    /* jshint unused:true */\\n\\n    /** PrivateFunction: _auth2_cb\\n     *  _Private_ handler to finish legacy authentication.\\n     *\\n     *  This handler is called when the result from the jabber:iq:auth\\n     *  <iq/> stanza is returned.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The stanza that triggered the callback.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _auth2_cb: function (elem) {\\n        if (elem.getAttribute(\\\"type\\\") === \\\"result\\\") {\\n            this.authenticated = true;\\n            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\\n        } else if (elem.getAttribute(\\\"type\\\") === \\\"error\\\") {\\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\\n            this.disconnect('authentication failed');\\n        }\\n        return false;\\n    },\\n\\n    /** PrivateFunction: _addSysTimedHandler\\n     *  _Private_ function to add a system level timed handler.\\n     *\\n     *  This function is used to add a Strophe.TimedHandler for the\\n     *  library code.  System timed handlers are allowed to run before\\n     *  authentication is complete.\\n     *\\n     *  Parameters:\\n     *    (Integer) period - The period of the handler.\\n     *    (Function) handler - The callback function.\\n     */\\n    _addSysTimedHandler: function (period, handler) {\\n        var thand = new Strophe.TimedHandler(period, handler);\\n        thand.user = false;\\n        this.addTimeds.push(thand);\\n        return thand;\\n    },\\n\\n    /** PrivateFunction: _addSysHandler\\n     *  _Private_ function to add a system level stanza handler.\\n     *\\n     *  This function is used to add a Strophe.Handler for the\\n     *  library code.  System stanza handlers are allowed to run before\\n     *  authentication is complete.\\n     *\\n     *  Parameters:\\n     *    (Function) handler - The callback function.\\n     *    (String) ns - The namespace to match.\\n     *    (String) name - The stanza name to match.\\n     *    (String) type - The stanza type attribute to match.\\n     *    (String) id - The stanza id attribute to match.\\n     */\\n    _addSysHandler: function (handler, ns, name, type, id) {\\n        var hand = new Strophe.Handler(handler, ns, name, type, id);\\n        hand.user = false;\\n        this.addHandlers.push(hand);\\n        return hand;\\n    },\\n\\n    /** PrivateFunction: _onDisconnectTimeout\\n     *  _Private_ timeout handler for handling non-graceful disconnection.\\n     *\\n     *  If the graceful disconnect process does not complete within the\\n     *  time allotted, this handler finishes the disconnect anyway.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _onDisconnectTimeout: function () {\\n        Strophe.info(\\\"_onDisconnectTimeout was called\\\");\\n        this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\\n        this._proto._onDisconnectTimeout();\\n        // actually disconnect\\n        this._doDisconnect();\\n        return false;\\n    },\\n\\n    /** PrivateFunction: _onIdle\\n     *  _Private_ handler to process events during idle cycle.\\n     *\\n     *  This handler is called every 100ms to fire timed handlers that\\n     *  are ready and keep poll requests going.\\n     */\\n    _onIdle: function () {\\n        var i, thand, since, newList;\\n\\n        // add timed handlers scheduled for addition\\n        // NOTE: we add before remove in the case a timed handler is\\n        // added and then deleted before the next _onIdle() call.\\n        while (this.addTimeds.length > 0) {\\n            this.timedHandlers.push(this.addTimeds.pop());\\n        }\\n\\n        // remove timed handlers that have been scheduled for deletion\\n        while (this.removeTimeds.length > 0) {\\n            thand = this.removeTimeds.pop();\\n            i = this.timedHandlers.indexOf(thand);\\n            if (i >= 0) {\\n                this.timedHandlers.splice(i, 1);\\n            }\\n        }\\n\\n        // call ready timed handlers\\n        var now = new Date().getTime();\\n        newList = [];\\n        for (i = 0; i < this.timedHandlers.length; i++) {\\n            thand = this.timedHandlers[i];\\n            if (this.authenticated || !thand.user) {\\n                since = thand.lastCalled + thand.period;\\n                if (since - now <= 0) {\\n                    if (thand.run()) {\\n                        newList.push(thand);\\n                    }\\n                } else {\\n                    newList.push(thand);\\n                }\\n            }\\n        }\\n        this.timedHandlers = newList;\\n\\n        clearTimeout(this._idleTimeout);\\n\\n        this._proto._onIdle();\\n\\n        // reactivate the timer only if connected\\n        if (this.connected) {\\n            // XXX: setTimeout should be called only with function expressions (23974bc1)\\n            this._idleTimeout = setTimeout(function() {\\n                this._onIdle();\\n            }.bind(this), 100);\\n        }\\n    }\\n};\\n\\n/** Class: Strophe.SASLMechanism\\n *\\n *  encapsulates SASL authentication mechanisms.\\n *\\n *  User code may override the priority for each mechanism or disable it completely.\\n *  See <priority> for information about changing priority and <test> for informatian on\\n *  how to disable a mechanism.\\n *\\n *  By default, all mechanisms are enabled and the priorities are\\n *\\n *      OAUTHBEARER - 60\\n *      SCRAM-SHA1 - 50\\n *      DIGEST-MD5 - 40\\n *      PLAIN - 30\\n *      ANONYMOUS - 20\\n *      EXTERNAL - 10\\n *\\n *  See: Strophe.Connection.addSupportedSASLMechanisms\\n */\\n\\n/**\\n * PrivateConstructor: Strophe.SASLMechanism\\n * SASL auth mechanism abstraction.\\n *\\n *  Parameters:\\n *    (String) name - SASL Mechanism name.\\n *    (Boolean) isClientFirst - If client should send response first without challenge.\\n *    (Number) priority - Priority.\\n *\\n *  Returns:\\n *    A new Strophe.SASLMechanism object.\\n */\\nStrophe.SASLMechanism = function(name, isClientFirst, priority) {\\n  /** PrivateVariable: name\\n   *  Mechanism name.\\n   */\\n  this.name = name;\\n  /** PrivateVariable: isClientFirst\\n   *  If client sends response without initial server challenge.\\n   */\\n  this.isClientFirst = isClientFirst;\\n  /** Variable: priority\\n   *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\\n   *  Users may override this to prioritize mechanisms differently.\\n   *\\n   *  In the default configuration the priorities are\\n   *\\n   *  SCRAM-SHA1 - 40\\n   *  DIGEST-MD5 - 30\\n   *  Plain - 20\\n   *\\n   *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\\n   *\\n   *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\\n   *\\n   *  See <SASL mechanisms> for a list of available mechanisms.\\n   *\\n   */\\n  this.priority = priority;\\n};\\n\\nStrophe.SASLMechanism.prototype = {\\n  /**\\n   *  Function: test\\n   *  Checks if mechanism able to run.\\n   *  To disable a mechanism, make this return false;\\n   *\\n   *  To disable plain authentication run\\n   *  > Strophe.SASLPlain.test = function() {\\n   *  >   return false;\\n   *  > }\\n   *\\n   *  See <SASL mechanisms> for a list of available mechanisms.\\n   *\\n   *  Parameters:\\n   *    (Strophe.Connection) connection - Target Connection.\\n   *\\n   *  Returns:\\n   *    (Boolean) If mechanism was able to run.\\n   */\\n  /* jshint unused:false */\\n  test: function(connection) {\\n    return true;\\n  },\\n  /* jshint unused:true */\\n\\n  /** PrivateFunction: onStart\\n   *  Called before starting mechanism on some connection.\\n   *\\n   *  Parameters:\\n   *    (Strophe.Connection) connection - Target Connection.\\n   */\\n  onStart: function(connection) {\\n    this._connection = connection;\\n  },\\n\\n  /** PrivateFunction: onChallenge\\n   *  Called by protocol implementation on incoming challenge. If client is\\n   *  first (isClientFirst === true) challenge will be null on the first call.\\n   *\\n   *  Parameters:\\n   *    (Strophe.Connection) connection - Target Connection.\\n   *    (String) challenge - current challenge to handle.\\n   *\\n   *  Returns:\\n   *    (String) Mechanism response.\\n   */\\n  /* jshint unused:false */\\n  onChallenge: function(connection, challenge) {\\n    throw new Error(\\\"You should implement challenge handling!\\\");\\n  },\\n  /* jshint unused:true */\\n\\n  /** PrivateFunction: onFailure\\n   *  Protocol informs mechanism implementation about SASL failure.\\n   */\\n  onFailure: function() {\\n    this._connection = null;\\n  },\\n\\n  /** PrivateFunction: onSuccess\\n   *  Protocol informs mechanism implementation about SASL success.\\n   */\\n  onSuccess: function() {\\n    this._connection = null;\\n  }\\n};\\n\\n  /** Constants: SASL mechanisms\\n   *  Available authentication mechanisms\\n   *\\n   *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\\n   *  Strophe.SASLPlain - SASL PLAIN authentication.\\n   *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\\n   *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\\n   *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\\n   *  Strophe.SASLExternal - SASL EXTERNAL authentication\\n   *  Strophe.SASLXOAuth2 - SASL X-OAuth2 authentication\\n   */\\n\\n// Building SASL callbacks\\n\\n/** PrivateConstructor: SASLAnonymous\\n *  SASL ANONYMOUS authentication.\\n */\\nStrophe.SASLAnonymous = function() {};\\nStrophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\\\"ANONYMOUS\\\", false, 20);\\n\\nStrophe.SASLAnonymous.prototype.test = function(connection) {\\n    return connection.authcid === null;\\n};\\n\\n\\n/** PrivateConstructor: SASLPlain\\n *  SASL PLAIN authentication.\\n */\\nStrophe.SASLPlain = function() {};\\nStrophe.SASLPlain.prototype = new Strophe.SASLMechanism(\\\"PLAIN\\\", true, 50);\\n\\nStrophe.SASLPlain.prototype.test = function(connection) {\\n    return connection.authcid !== null;\\n};\\n\\nStrophe.SASLPlain.prototype.onChallenge = function(connection) {\\n    var auth_str = connection.authzid;\\n    auth_str = auth_str + \\\"\\\\u0000\\\";\\n    auth_str = auth_str + connection.authcid;\\n    auth_str = auth_str + \\\"\\\\u0000\\\";\\n    auth_str = auth_str + connection.pass;\\n    return utils.utf16to8(auth_str);\\n};\\n\\n\\n/** PrivateConstructor: SASLSHA1\\n *  SASL SCRAM SHA 1 authentication.\\n */\\nStrophe.SASLSHA1 = function() {};\\nStrophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\\\"SCRAM-SHA-1\\\", true, 70);\\n\\nStrophe.SASLSHA1.prototype.test = function(connection) {\\n    return connection.authcid !== null;\\n};\\n\\nStrophe.SASLSHA1.prototype.onChallenge = function(connection, challenge, test_cnonce) {\\n  var cnonce = test_cnonce || MD5.hexdigest(Math.random() * 1234567890);\\n  var auth_str = \\\"n=\\\" + utils.utf16to8(connection.authcid);\\n  auth_str += \\\",r=\\\";\\n  auth_str += cnonce;\\n  connection._sasl_data.cnonce = cnonce;\\n  connection._sasl_data[\\\"client-first-message-bare\\\"] = auth_str;\\n\\n  auth_str = \\\"n,,\\\" + auth_str;\\n\\n  this.onChallenge = function (connection, challenge) {\\n    var nonce, salt, iter, Hi, U, U_old, i, k, pass;\\n    var clientKey, serverKey, clientSignature;\\n    var responseText = \\\"c=biws,\\\";\\n    var authMessage = connection._sasl_data[\\\"client-first-message-bare\\\"] + \\\",\\\" +\\n      challenge + \\\",\\\";\\n    var cnonce = connection._sasl_data.cnonce;\\n    var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\\n\\n    while (challenge.match(attribMatch)) {\\n      var matches = challenge.match(attribMatch);\\n      challenge = challenge.replace(matches[0], \\\"\\\");\\n      switch (matches[1]) {\\n      case \\\"r\\\":\\n        nonce = matches[2];\\n        break;\\n      case \\\"s\\\":\\n        salt = matches[2];\\n        break;\\n      case \\\"i\\\":\\n        iter = matches[2];\\n        break;\\n      }\\n    }\\n\\n    if (nonce.substr(0, cnonce.length) !== cnonce) {\\n      connection._sasl_data = {};\\n      return connection._sasl_failure_cb();\\n    }\\n\\n    responseText += \\\"r=\\\" + nonce;\\n    authMessage += responseText;\\n\\n    salt = atob(salt);\\n    salt += \\\"\\\\x00\\\\x00\\\\x00\\\\x01\\\";\\n\\n    pass = utils.utf16to8(connection.pass);\\n    Hi = U_old = SHA1.core_hmac_sha1(pass, salt);\\n    for (i = 1; i < iter; i++) {\\n      U = SHA1.core_hmac_sha1(pass, SHA1.binb2str(U_old));\\n      for (k = 0; k < 5; k++) {\\n        Hi[k] ^= U[k];\\n      }\\n      U_old = U;\\n    }\\n    Hi = SHA1.binb2str(Hi);\\n\\n    clientKey = SHA1.core_hmac_sha1(Hi, \\\"Client Key\\\");\\n    serverKey = SHA1.str_hmac_sha1(Hi, \\\"Server Key\\\");\\n    clientSignature = SHA1.core_hmac_sha1(SHA1.str_sha1(SHA1.binb2str(clientKey)), authMessage);\\n    connection._sasl_data[\\\"server-signature\\\"] = SHA1.b64_hmac_sha1(serverKey, authMessage);\\n\\n    for (k = 0; k < 5; k++) {\\n      clientKey[k] ^= clientSignature[k];\\n    }\\n\\n    responseText += \\\",p=\\\" + btoa(SHA1.binb2str(clientKey));\\n    return responseText;\\n  }.bind(this);\\n\\n  return auth_str;\\n};\\n\\n\\n/** PrivateConstructor: SASLMD5\\n *  SASL DIGEST MD5 authentication.\\n */\\nStrophe.SASLMD5 = function() {};\\nStrophe.SASLMD5.prototype = new Strophe.SASLMechanism(\\\"DIGEST-MD5\\\", false, 60);\\n\\nStrophe.SASLMD5.prototype.test = function(connection) {\\n    return connection.authcid !== null;\\n};\\n\\n/** PrivateFunction: _quote\\n *  _Private_ utility function to backslash escape and quote strings.\\n *\\n *  Parameters:\\n *    (String) str - The string to be quoted.\\n *\\n *  Returns:\\n *    quoted string\\n */\\nStrophe.SASLMD5.prototype._quote = function (str) {\\n    return '\\\"' + str.replace(/\\\\\\\\/g, \\\"\\\\\\\\\\\\\\\\\\\").replace(/\\\"/g, '\\\\\\\\\\\"') + '\\\"';\\n    //\\\" end string workaround for emacs\\n};\\n\\nStrophe.SASLMD5.prototype.onChallenge = function(connection, challenge, test_cnonce) {\\n  var attribMatch = /([a-z]+)=(\\\"[^\\\"]+\\\"|[^,\\\"]+)(?:,|$)/;\\n  var cnonce = test_cnonce || MD5.hexdigest(\\\"\\\" + (Math.random() * 1234567890));\\n  var realm = \\\"\\\";\\n  var host = null;\\n  var nonce = \\\"\\\";\\n  var qop = \\\"\\\";\\n  var matches;\\n\\n  while (challenge.match(attribMatch)) {\\n    matches = challenge.match(attribMatch);\\n    challenge = challenge.replace(matches[0], \\\"\\\");\\n    matches[2] = matches[2].replace(/^\\\"(.+)\\\"$/, \\\"$1\\\");\\n    switch (matches[1]) {\\n    case \\\"realm\\\":\\n      realm = matches[2];\\n      break;\\n    case \\\"nonce\\\":\\n      nonce = matches[2];\\n      break;\\n    case \\\"qop\\\":\\n      qop = matches[2];\\n      break;\\n    case \\\"host\\\":\\n      host = matches[2];\\n      break;\\n    }\\n  }\\n\\n  var digest_uri = connection.servtype + \\\"/\\\" + connection.domain;\\n  if (host !== null) {\\n    digest_uri = digest_uri + \\\"/\\\" + host;\\n  }\\n\\n  var cred = utils.utf16to8(connection.authcid + \\\":\\\" + realm + \\\":\\\" + this._connection.pass);\\n  var A1 = MD5.hash(cred) + \\\":\\\" + nonce + \\\":\\\" + cnonce;\\n  var A2 = 'AUTHENTICATE:' + digest_uri;\\n\\n  var responseText = \\\"\\\";\\n  responseText += 'charset=utf-8,';\\n  responseText += 'username=' + this._quote(utils.utf16to8(connection.authcid)) + ',';\\n  responseText += 'realm=' + this._quote(realm) + ',';\\n  responseText += 'nonce=' + this._quote(nonce) + ',';\\n  responseText += 'nc=00000001,';\\n  responseText += 'cnonce=' + this._quote(cnonce) + ',';\\n  responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\\n  responseText += 'response=' + MD5.hexdigest(MD5.hexdigest(A1) + \\\":\\\" +\\n                                              nonce + \\\":00000001:\\\" +\\n                                              cnonce + \\\":auth:\\\" +\\n                                              MD5.hexdigest(A2)) + \\\",\\\";\\n  responseText += 'qop=auth';\\n\\n  this.onChallenge = function () {\\n      return \\\"\\\";\\n  };\\n  return responseText;\\n};\\n\\n\\n/** PrivateConstructor: SASLOAuthBearer\\n *  SASL OAuth Bearer authentication.\\n */\\nStrophe.SASLOAuthBearer = function() {};\\nStrophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\\\"OAUTHBEARER\\\", true, 40);\\n\\nStrophe.SASLOAuthBearer.prototype.test = function(connection) {\\n    return connection.pass !== null;\\n};\\n\\nStrophe.SASLOAuthBearer.prototype.onChallenge = function(connection) {\\n    var auth_str = 'n,';\\n    if (connection.authcid !== null) {\\n      auth_str = auth_str + 'a=' + connection.authzid;\\n    }\\n    auth_str = auth_str + ',';\\n    auth_str = auth_str + \\\"\\\\u0001\\\";\\n    auth_str = auth_str + 'auth=Bearer ';\\n    auth_str = auth_str + connection.pass;\\n    auth_str = auth_str + \\\"\\\\u0001\\\";\\n    auth_str = auth_str + \\\"\\\\u0001\\\";\\n\\n    return utils.utf16to8(auth_str);\\n};\\n\\n\\n/** PrivateConstructor: SASLExternal\\n *  SASL EXTERNAL authentication.\\n *\\n *  The EXTERNAL mechanism allows a client to request the server to use\\n *  credentials established by means external to the mechanism to\\n *  authenticate the client. The external means may be, for instance,\\n *  TLS services.\\n */\\nStrophe.SASLExternal = function() {};\\nStrophe.SASLExternal.prototype = new Strophe.SASLMechanism(\\\"EXTERNAL\\\", true, 10);\\n\\nStrophe.SASLExternal.prototype.onChallenge = function(connection) {\\n    /** According to XEP-178, an authzid SHOULD NOT be presented when the\\n     * authcid contained or implied in the client certificate is the JID (i.e.\\n     * authzid) with which the user wants to log in as.\\n     *\\n     * To NOT send the authzid, the user should therefore set the authcid equal\\n     * to the JID when instantiating a new Strophe.Connection object.\\n     */\\n    return connection.authcid === connection.authzid ? '' : connection.authzid;\\n};\\n\\n\\n/** PrivateConstructor: SASLXOAuth2\\n *  SASL X-OAuth2 authentication.\\n */\\nStrophe.SASLXOAuth2 = function () { };\\nStrophe.SASLXOAuth2.prototype = new Strophe.SASLMechanism(\\\"X-OAUTH2\\\", true, 30);\\n\\nStrophe.SASLXOAuth2.prototype.test = function (connection) {\\n    return connection.pass !== null;\\n};\\n\\nStrophe.SASLXOAuth2.prototype.onChallenge = function (connection) {\\n    var auth_str = '\\\\u0000';\\n    if (connection.authcid !== null) {\\n        auth_str = auth_str + connection.authzid;\\n    }\\n    auth_str = auth_str + \\\"\\\\u0000\\\";\\n    auth_str = auth_str + connection.pass;\\n\\n    return utils.utf16to8(auth_str);\\n};\\n\\n\\nreturn {\\n    'Strophe':         Strophe,\\n    '$build':          $build,\\n    '$iq':             $iq,\\n    '$msg':            $msg,\\n    '$pres':           $pres,\\n    'SHA1':            SHA1,\\n    'MD5':             MD5,\\n    'b64_hmac_sha1':   SHA1.b64_hmac_sha1,\\n    'b64_sha1':        SHA1.b64_sha1,\\n    'str_hmac_sha1':   SHA1.str_hmac_sha1,\\n    'str_sha1':        SHA1.str_sha1\\n};\\n}));\\n\\n/*\\n    This program is distributed under the terms of the MIT license.\\n    Please see the LICENSE file for details.\\n\\n    Copyright 2006-2008, OGG, LLC\\n*/\\n\\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\\n/* global define, window, setTimeout, clearTimeout, XMLHttpRequest, ActiveXObject, Strophe, $build */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-bosh',['strophe-core'], function (core) {\\n            return factory(\\n                core.Strophe,\\n                core.$build\\n            );\\n        });\\n    } else if (typeof exports === 'object') {\\n        var core = require('./core');\\n\\n        module.exports = factory(core.Strophe, core.$build);\\n    } else {\\n        // Browser globals\\n        return factory(Strophe, $build);\\n    }\\n}(this, function (Strophe, $build) {\\n\\n/** PrivateClass: Strophe.Request\\n *  _Private_ helper class that provides a cross implementation abstraction\\n *  for a BOSH related XMLHttpRequest.\\n *\\n *  The Strophe.Request class is used internally to encapsulate BOSH request\\n *  information.  It is not meant to be used from user's code.\\n */\\n\\n/** PrivateConstructor: Strophe.Request\\n *  Create and initialize a new Strophe.Request object.\\n *\\n *  Parameters:\\n *    (XMLElement) elem - The XML data to be sent in the request.\\n *    (Function) func - The function that will be called when the\\n *      XMLHttpRequest readyState changes.\\n *    (Integer) rid - The BOSH rid attribute associated with this request.\\n *    (Integer) sends - The number of times this same request has been sent.\\n */\\nStrophe.Request = function (elem, func, rid, sends) {\\n    this.id = ++Strophe._requestId;\\n    this.xmlData = elem;\\n    this.data = Strophe.serialize(elem);\\n    // save original function in case we need to make a new request\\n    // from this one.\\n    this.origFunc = func;\\n    this.func = func;\\n    this.rid = rid;\\n    this.date = NaN;\\n    this.sends = sends || 0;\\n    this.abort = false;\\n    this.dead = null;\\n\\n    this.age = function () {\\n        if (!this.date) { return 0; }\\n        var now = new Date();\\n        return (now - this.date) / 1000;\\n    };\\n    this.timeDead = function () {\\n        if (!this.dead) { return 0; }\\n        var now = new Date();\\n        return (now - this.dead) / 1000;\\n    };\\n    this.xhr = this._newXHR();\\n};\\n\\nStrophe.Request.prototype = {\\n    /** PrivateFunction: getResponse\\n     *  Get a response from the underlying XMLHttpRequest.\\n     *\\n     *  This function attempts to get a response from the request and checks\\n     *  for errors.\\n     *\\n     *  Throws:\\n     *    \\\"parsererror\\\" - A parser error occured.\\n     *    \\\"badformat\\\" - The entity has sent XML that cannot be processed.\\n     *\\n     *  Returns:\\n     *    The DOM element tree of the response.\\n     */\\n    getResponse: function () {\\n        var node = null;\\n        if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\\n            node = this.xhr.responseXML.documentElement;\\n            if (node.tagName === \\\"parsererror\\\") {\\n                Strophe.error(\\\"invalid response received\\\");\\n                Strophe.error(\\\"responseText: \\\" + this.xhr.responseText);\\n                Strophe.error(\\\"responseXML: \\\" +\\n                              Strophe.serialize(this.xhr.responseXML));\\n                throw \\\"parsererror\\\";\\n            }\\n        } else if (this.xhr.responseText) {\\n            // In React Native, we may get responseText but no responseXML.  We can try to parse it manually.\\n            Strophe.debug(\\\"Got responseText but no responseXML; attempting to parse it with DOMParser...\\\");\\n            node = new DOMParser().parseFromString(this.xhr.responseText, 'application/xml').documentElement;\\n            if (!node) {\\n                throw new Error('Parsing produced null node');\\n            } else if (node.querySelector('parsererror')) {\\n                Strophe.error(\\\"invalid response received: \\\" + node.querySelector('parsererror').textContent);\\n                Strophe.error(\\\"responseText: \\\" + this.xhr.responseText);\\n                throw \\\"badformat\\\";\\n            }\\n        }\\n        return node;\\n    },\\n\\n    /** PrivateFunction: _newXHR\\n     *  _Private_ helper function to create XMLHttpRequests.\\n     *\\n     *  This function creates XMLHttpRequests across all implementations.\\n     *\\n     *  Returns:\\n     *    A new XMLHttpRequest.\\n     */\\n    _newXHR: function () {\\n        var xhr = null;\\n        if (window.XMLHttpRequest) {\\n            xhr = new XMLHttpRequest();\\n            if (xhr.overrideMimeType) {\\n                xhr.overrideMimeType(\\\"text/xml; charset=utf-8\\\");\\n            }\\n        } else if (window.ActiveXObject) {\\n            xhr = new ActiveXObject(\\\"Microsoft.XMLHTTP\\\");\\n        }\\n        // use Function.bind() to prepend ourselves as an argument\\n        xhr.onreadystatechange = this.func.bind(null, this);\\n        return xhr;\\n    }\\n};\\n\\n/** Class: Strophe.Bosh\\n *  _Private_ helper class that handles BOSH Connections\\n *\\n *  The Strophe.Bosh class is used internally by Strophe.Connection\\n *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\\n */\\n\\n/** File: bosh.js\\n *  A JavaScript library to enable BOSH in Strophejs.\\n *\\n *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\\n *  to emulate a persistent, stateful, two-way connection to an XMPP server.\\n *  More information on BOSH can be found in XEP 124.\\n */\\n\\n/** PrivateConstructor: Strophe.Bosh\\n *  Create and initialize a Strophe.Bosh object.\\n *\\n *  Parameters:\\n *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\\n *\\n *  Returns:\\n *    A new Strophe.Bosh object.\\n */\\nStrophe.Bosh = function(connection) {\\n    this._conn = connection;\\n    /* request id for body tags */\\n    this.rid = Math.floor(Math.random() * 4294967295);\\n    /* The current session ID. */\\n    this.sid = null;\\n\\n    // default BOSH values\\n    this.hold = 1;\\n    this.wait = 60;\\n    this.window = 5;\\n    this.errors = 0;\\n    this.inactivity = null;\\n\\n    this.lastResponseHeaders = null;\\n\\n    this._requests = [];\\n};\\n\\nStrophe.Bosh.prototype = {\\n    /** Variable: strip\\n     *\\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\\n     *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\\n     *  To strip this tag, User code can set <Strophe.Bosh.strip> to \\\"body\\\":\\n     *\\n     *  > Strophe.Bosh.prototype.strip = \\\"body\\\";\\n     *\\n     *  This will enable stripping of the body tag in both\\n     *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\\n     */\\n    strip: null,\\n\\n    /** PrivateFunction: _buildBody\\n     *  _Private_ helper function to generate the <body/> wrapper for BOSH.\\n     *\\n     *  Returns:\\n     *    A Strophe.Builder with a <body/> element.\\n     */\\n    _buildBody: function () {\\n        var bodyWrap = $build('body', {\\n            rid: this.rid++,\\n            xmlns: Strophe.NS.HTTPBIND\\n        });\\n        if (this.sid !== null) {\\n            bodyWrap.attrs({sid: this.sid});\\n        }\\n        if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\\n            this._cacheSession();\\n        }\\n        return bodyWrap;\\n    },\\n\\n    /** PrivateFunction: _reset\\n     *  Reset the connection.\\n     *\\n     *  This function is called by the reset function of the Strophe Connection\\n     */\\n    _reset: function () {\\n        this.rid = Math.floor(Math.random() * 4294967295);\\n        this.sid = null;\\n        this.errors = 0;\\n        if (this._conn._sessionCachingSupported()) {\\n            window.sessionStorage.removeItem('strophe-bosh-session');\\n        }\\n\\n        this._conn.nextValidRid(this.rid);\\n    },\\n\\n    /** PrivateFunction: _connect\\n     *  _Private_ function that initializes the BOSH connection.\\n     *\\n     *  Creates and sends the Request that initializes the BOSH connection.\\n     */\\n    _connect: function (wait, hold, route) {\\n        this.wait = wait || this.wait;\\n        this.hold = hold || this.hold;\\n        this.errors = 0;\\n\\n        // build the body tag\\n        var body = this._buildBody().attrs({\\n            to: this._conn.domain,\\n            \\\"xml:lang\\\": \\\"en\\\",\\n            wait: this.wait,\\n            hold: this.hold,\\n            content: \\\"text/xml; charset=utf-8\\\",\\n            ver: \\\"1.6\\\",\\n            \\\"xmpp:version\\\": \\\"1.0\\\",\\n            \\\"xmlns:xmpp\\\": Strophe.NS.BOSH\\n        });\\n\\n        if(route){\\n            body.attrs({\\n                route: route\\n            });\\n        }\\n\\n        var _connect_cb = this._conn._connect_cb;\\n\\n        this._requests.push(\\n            new Strophe.Request(body.tree(),\\n                                this._onRequestStateChange.bind(\\n                                    this, _connect_cb.bind(this._conn)),\\n                                body.tree().getAttribute(\\\"rid\\\")));\\n        this._throttledRequestHandler();\\n    },\\n\\n    /** PrivateFunction: _attach\\n     *  Attach to an already created and authenticated BOSH session.\\n     *\\n     *  This function is provided to allow Strophe to attach to BOSH\\n     *  sessions which have been created externally, perhaps by a Web\\n     *  application.  This is often used to support auto-login type features\\n     *  without putting user credentials into the page.\\n     *\\n     *  Parameters:\\n     *    (String) jid - The full JID that is bound by the session.\\n     *    (String) sid - The SID of the BOSH session.\\n     *    (String) rid - The current RID of the BOSH session.  This RID\\n     *      will be used by the next request.\\n     *    (Function) callback The connect callback function.\\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\\n     *      time the server will wait before returning an empty result for\\n     *      a request.  The default setting of 60 seconds is recommended.\\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\\n     *      number of connections the server will hold at one time.  This\\n     *      should almost always be set to 1 (the default).\\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\\n     *      allowed range of request ids that are valid.  The default is 5.\\n     */\\n    _attach: function (jid, sid, rid, callback, wait, hold, wind) {\\n        this._conn.jid = jid;\\n        this.sid = sid;\\n        this.rid = rid;\\n\\n        this._conn.connect_callback = callback;\\n\\n        this._conn.domain = Strophe.getDomainFromJid(this._conn.jid);\\n\\n        this._conn.authenticated = true;\\n        this._conn.connected = true;\\n\\n        this.wait = wait || this.wait;\\n        this.hold = hold || this.hold;\\n        this.window = wind || this.window;\\n\\n        this._conn._changeConnectStatus(Strophe.Status.ATTACHED, null);\\n    },\\n\\n    /** PrivateFunction: _restore\\n     *  Attempt to restore a cached BOSH session\\n     *\\n     *  Parameters:\\n     *    (String) jid - The full JID that is bound by the session.\\n     *      This parameter is optional but recommended, specifically in cases\\n     *      where prebinded BOSH sessions are used where it's important to know\\n     *      that the right session is being restored.\\n     *    (Function) callback The connect callback function.\\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\\n     *      time the server will wait before returning an empty result for\\n     *      a request.  The default setting of 60 seconds is recommended.\\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\\n     *      number of connections the server will hold at one time.  This\\n     *      should almost always be set to 1 (the default).\\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\\n     *      allowed range of request ids that are valid.  The default is 5.\\n     */\\n    _restore: function (jid, callback, wait, hold, wind) {\\n        var session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\\n        if (typeof session !== \\\"undefined\\\" &&\\n                   session !== null &&\\n                   session.rid &&\\n                   session.sid &&\\n                   session.jid &&\\n                   (    typeof jid === \\\"undefined\\\" ||\\n                        jid === null ||\\n                        Strophe.getBareJidFromJid(session.jid) === Strophe.getBareJidFromJid(jid) ||\\n                        // If authcid is null, then it's an anonymous login, so\\n                        // we compare only the domains:\\n                        ((Strophe.getNodeFromJid(jid) === null) && (Strophe.getDomainFromJid(session.jid) === jid))\\n                    )\\n        ) {\\n            this._conn.restored = true;\\n            this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\\n        } else {\\n            throw { name: \\\"StropheSessionError\\\", message: \\\"_restore: no restoreable session.\\\" };\\n        }\\n    },\\n\\n    /** PrivateFunction: _cacheSession\\n     *  _Private_ handler for the beforeunload event.\\n     *\\n     *  This handler is used to process the Bosh-part of the initial request.\\n     *  Parameters:\\n     *    (Strophe.Request) bodyWrap - The received stanza.\\n     */\\n    _cacheSession: function () {\\n        if (this._conn.authenticated) {\\n            if (this._conn.jid && this.rid && this.sid) {\\n                window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\\n                    'jid': this._conn.jid,\\n                    'rid': this.rid,\\n                    'sid': this.sid\\n                }));\\n            }\\n        } else {\\n            window.sessionStorage.removeItem('strophe-bosh-session');\\n        }\\n    },\\n\\n    /** PrivateFunction: _connect_cb\\n     *  _Private_ handler for initial connection request.\\n     *\\n     *  This handler is used to process the Bosh-part of the initial request.\\n     *  Parameters:\\n     *    (Strophe.Request) bodyWrap - The received stanza.\\n     */\\n    _connect_cb: function (bodyWrap) {\\n        var typ = bodyWrap.getAttribute(\\\"type\\\");\\n        var cond, conflict;\\n        if (typ !== null && typ === \\\"terminate\\\") {\\n            // an error occurred\\n            cond = bodyWrap.getAttribute(\\\"condition\\\");\\n            Strophe.error(\\\"BOSH-Connection failed: \\\" + cond);\\n            conflict = bodyWrap.getElementsByTagName(\\\"conflict\\\");\\n            if (cond !== null) {\\n                if (cond === \\\"remote-stream-error\\\" && conflict.length > 0) {\\n                    cond = \\\"conflict\\\";\\n                }\\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\\n            } else {\\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \\\"unknown\\\");\\n            }\\n            this._conn._doDisconnect(cond);\\n            return Strophe.Status.CONNFAIL;\\n        }\\n\\n        // check to make sure we don't overwrite these if _connect_cb is\\n        // called multiple times in the case of missing stream:features\\n        if (!this.sid) {\\n            this.sid = bodyWrap.getAttribute(\\\"sid\\\");\\n        }\\n        var wind = bodyWrap.getAttribute('requests');\\n        if (wind) { this.window = parseInt(wind, 10); }\\n        var hold = bodyWrap.getAttribute('hold');\\n        if (hold) { this.hold = parseInt(hold, 10); }\\n        var wait = bodyWrap.getAttribute('wait');\\n        if (wait) { this.wait = parseInt(wait, 10); }\\n        var inactivity = bodyWrap.getAttribute('inactivity');\\n        if (inactivity) { this.inactivity = parseInt(inactivity, 10); }\\n    },\\n\\n    /** PrivateFunction: _disconnect\\n     *  _Private_ part of Connection.disconnect for Bosh\\n     *\\n     *  Parameters:\\n     *    (Request) pres - This stanza will be sent before disconnecting.\\n     */\\n    _disconnect: function (pres) {\\n        this._sendTerminate(pres);\\n    },\\n\\n    /** PrivateFunction: _doDisconnect\\n     *  _Private_ function to disconnect.\\n     *\\n     *  Resets the SID and RID.\\n     */\\n    _doDisconnect: function () {\\n        this.sid = null;\\n        this.rid = Math.floor(Math.random() * 4294967295);\\n        if (this._conn._sessionCachingSupported()) {\\n            window.sessionStorage.removeItem('strophe-bosh-session');\\n        }\\n\\n        this._conn.nextValidRid(this.rid);\\n    },\\n\\n    /** PrivateFunction: _emptyQueue\\n     * _Private_ function to check if the Request queue is empty.\\n     *\\n     *  Returns:\\n     *    True, if there are no Requests queued, False otherwise.\\n     */\\n    _emptyQueue: function () {\\n        return this._requests.length === 0;\\n    },\\n\\n    /** PrivateFunction: _callProtocolErrorHandlers\\n     *  _Private_ function to call error handlers registered for HTTP errors.\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) req - The request that is changing readyState.\\n     */\\n    _callProtocolErrorHandlers: function (req) {\\n        var reqStatus = this._getRequestStatus(req),\\n            err_callback;\\n        err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\\n        if (err_callback) {\\n            err_callback.call(this, reqStatus);\\n        }\\n    },\\n\\n    /** PrivateFunction: _hitError\\n     *  _Private_ function to handle the error count.\\n     *\\n     *  Requests are resent automatically until their error count reaches\\n     *  5.  Each time an error is encountered, this function is called to\\n     *  increment the count and disconnect if the count is too high.\\n     *\\n     *  Parameters:\\n     *    (Integer) reqStatus - The request status.\\n     */\\n    _hitError: function (reqStatus) {\\n        this.errors++;\\n        Strophe.warn(\\\"request errored, status: \\\" + reqStatus +\\n                     \\\", number of errors: \\\" + this.errors);\\n        if (this.errors > 4) {\\n            this._conn._onDisconnectTimeout();\\n        }\\n    },\\n\\n    /** PrivateFunction: _no_auth_received\\n     *\\n     * Called on stream start/restart when no stream:features\\n     * has been received and sends a blank poll request.\\n     */\\n    _no_auth_received: function (callback) {\\n        Strophe.warn(\\\"Server did not yet offer a supported authentication \\\"+\\n                     \\\"mechanism. Sending a blank poll request.\\\");\\n        if (callback) {\\n            callback = callback.bind(this._conn);\\n        } else {\\n            callback = this._conn._connect_cb.bind(this._conn);\\n        }\\n        var body = this._buildBody();\\n        this._requests.push(\\n            new Strophe.Request(\\n                body.tree(),\\n                this._onRequestStateChange.bind(this, callback),\\n                body.tree().getAttribute(\\\"rid\\\")\\n            )\\n        );\\n        this._throttledRequestHandler();\\n    },\\n\\n    /** PrivateFunction: _onDisconnectTimeout\\n     *  _Private_ timeout handler for handling non-graceful disconnection.\\n     *\\n     *  Cancels all remaining Requests and clears the queue.\\n     */\\n    _onDisconnectTimeout: function () {\\n        this._abortAllRequests();\\n    },\\n\\n    /** PrivateFunction: _abortAllRequests\\n     *  _Private_ helper function that makes sure all pending requests are aborted.\\n     */\\n    _abortAllRequests: function _abortAllRequests() {\\n        var req;\\n        while (this._requests.length > 0) {\\n            req = this._requests.pop();\\n            req.abort = true;\\n            req.xhr.abort();\\n            // jslint complains, but this is fine. setting to empty func\\n            // is necessary for IE6\\n            req.xhr.onreadystatechange = function () {}; // jshint ignore:line\\n        }\\n    },\\n\\n    /** PrivateFunction: _onIdle\\n     *  _Private_ handler called by Strophe.Connection._onIdle\\n     *\\n     *  Sends all queued Requests or polls with empty Request if there are none.\\n     */\\n    _onIdle: function () {\\n        var data = this._conn._data;\\n        // if no requests are in progress, poll\\n        if (this._conn.authenticated && this._requests.length === 0 &&\\n            data.length === 0 && !this._conn.disconnecting) {\\n            Strophe.info(\\\"no requests during idle cycle, sending \\\" +\\n                         \\\"blank request\\\");\\n            data.push(null);\\n        }\\n\\n        if (this._conn.paused) {\\n            return;\\n        }\\n\\n        if (this._requests.length < 2 && data.length > 0) {\\n            var body = this._buildBody();\\n            for (var i = 0; i < data.length; i++) {\\n                if (data[i] !== null) {\\n                    if (data[i] === \\\"restart\\\") {\\n                        body.attrs({\\n                            to: this._conn.domain,\\n                            \\\"xml:lang\\\": \\\"en\\\",\\n                            \\\"xmpp:restart\\\": \\\"true\\\",\\n                            \\\"xmlns:xmpp\\\": Strophe.NS.BOSH\\n                        });\\n                    } else {\\n                        body.cnode(data[i]).up();\\n                    }\\n                }\\n            }\\n            delete this._conn._data;\\n            this._conn._data = [];\\n            this._requests.push(\\n                new Strophe.Request(body.tree(),\\n                                    this._onRequestStateChange.bind(\\n                                        this, this._conn._dataRecv.bind(this._conn)),\\n                                    body.tree().getAttribute(\\\"rid\\\")));\\n            this._throttledRequestHandler();\\n        }\\n\\n        if (this._requests.length > 0) {\\n            var time_elapsed = this._requests[0].age();\\n            if (this._requests[0].dead !== null) {\\n                if (this._requests[0].timeDead() >\\n                    Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait)) {\\n                    this._throttledRequestHandler();\\n                }\\n            }\\n\\n            if (time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait)) {\\n                Strophe.warn(\\\"Request \\\" +\\n                             this._requests[0].id +\\n                             \\\" timed out, over \\\" + Math.floor(Strophe.TIMEOUT * this.wait) +\\n                             \\\" seconds since last activity\\\");\\n                this._throttledRequestHandler();\\n            }\\n        }\\n    },\\n\\n    /** PrivateFunction: _getRequestStatus\\n     *\\n     *  Returns the HTTP status code from a Strophe.Request\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) req - The Strophe.Request instance.\\n     *    (Integer) def - The default value that should be returned if no\\n     *          status value was found.\\n     */\\n    _getRequestStatus: function (req, def) {\\n        var reqStatus;\\n        if (req.xhr.readyState === 4) {\\n            try {\\n                reqStatus = req.xhr.status;\\n            } catch (e) {\\n                // ignore errors from undefined status attribute. Works\\n                // around a browser bug\\n                Strophe.error(\\n                    \\\"Caught an error while retrieving a request's status, \\\" +\\n                    \\\"reqStatus: \\\" + reqStatus);\\n            }\\n        }\\n        if (typeof(reqStatus) === \\\"undefined\\\") {\\n            reqStatus = typeof def === 'number' ? def : 0;\\n        }\\n        return reqStatus;\\n    },\\n\\n    /** PrivateFunction: _onRequestStateChange\\n     *  _Private_ handler for Strophe.Request state changes.\\n     *\\n     *  This function is called when the XMLHttpRequest readyState changes.\\n     *  It contains a lot of error handling logic for the many ways that\\n     *  requests can fail, and calls the request callback when requests\\n     *  succeed.\\n     *\\n     *  Parameters:\\n     *    (Function) func - The handler for the request.\\n     *    (Strophe.Request) req - The request that is changing readyState.\\n     */\\n    _onRequestStateChange: function (func, req) {\\n        Strophe.debug(\\\"request id \\\"+req.id+\\\".\\\"+req.sends+\\n                      \\\" state changed to \\\"+req.xhr.readyState);\\n        if (req.abort) {\\n            req.abort = false;\\n            return;\\n        }\\n        if (req.xhr.readyState !== 4) {\\n            // The request is not yet complete\\n            return;\\n        }\\n        var reqStatus = this._getRequestStatus(req);\\n        this.lastResponseHeaders = req.xhr.getAllResponseHeaders();\\n        if (this.disconnecting && reqStatus >= 400) {\\n            this._hitError(reqStatus);\\n            this._callProtocolErrorHandlers(req);\\n            return;\\n        }\\n\\n        var valid_request = reqStatus > 0 && reqStatus < 500;\\n        var too_many_retries = req.sends > this._conn.maxRetries;\\n        if (valid_request || too_many_retries) {\\n            // remove from internal queue\\n            this._removeRequest(req);\\n            Strophe.debug(\\\"request id \\\"+req.id+\\\" should now be removed\\\");\\n        }\\n\\n        if (reqStatus === 200) {\\n            // request succeeded\\n            var reqIs0 = (this._requests[0] === req);\\n            var reqIs1 = (this._requests[1] === req);\\n            // if request 1 finished, or request 0 finished and request\\n            // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\\n            // restart the other - both will be in the first spot, as the\\n            // completed request has been removed from the queue already\\n            if (reqIs1 ||\\n                (reqIs0 && this._requests.length > 0 &&\\n                    this._requests[0].age() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait))) {\\n                this._restartRequest(0);\\n            }\\n            this._conn.nextValidRid(Number(req.rid) + 1);\\n            Strophe.debug(\\\"request id \\\"+req.id+\\\".\\\"+req.sends+\\\" got 200\\\");\\n            func(req); // call handler\\n            this.errors = 0;\\n        } else if (reqStatus === 0 ||\\n                   (reqStatus >= 400 && reqStatus < 600) ||\\n                   reqStatus >= 12000) {\\n            // request failed\\n            Strophe.error(\\\"request id \\\"+req.id+\\\".\\\"+req.sends+\\\" error \\\"+reqStatus+\\\" happened\\\");\\n            this._hitError(reqStatus);\\n            this._callProtocolErrorHandlers(req);\\n            if (reqStatus >= 400 && reqStatus < 500) {\\n                this._conn._changeConnectStatus(Strophe.Status.DISCONNECTING, null);\\n                this._conn._doDisconnect();\\n            }\\n        } else {\\n            Strophe.error(\\\"request id \\\"+req.id+\\\".\\\"+req.sends+\\\" error \\\"+reqStatus+\\\" happened\\\");\\n        }\\n\\n        if (!valid_request && !too_many_retries) {\\n            this._throttledRequestHandler();\\n        } else if (too_many_retries && !this._conn.connected) {\\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \\\"giving-up\\\");\\n        }\\n    },\\n\\n    /** PrivateFunction: _processRequest\\n     *  _Private_ function to process a request in the queue.\\n     *\\n     *  This function takes requests off the queue and sends them and\\n     *  restarts dead requests.\\n     *\\n     *  Parameters:\\n     *    (Integer) i - The index of the request in the queue.\\n     */\\n    _processRequest: function (i) {\\n        var self = this;\\n        var req = this._requests[i];\\n        var reqStatus = this._getRequestStatus(req, -1);\\n\\n        // make sure we limit the number of retries\\n        if (req.sends > this._conn.maxRetries) {\\n            this._conn._onDisconnectTimeout();\\n            return;\\n        }\\n\\n        var time_elapsed = req.age();\\n        var primaryTimeout = (!isNaN(time_elapsed) &&\\n                              time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait));\\n        var secondaryTimeout = (req.dead !== null &&\\n                                req.timeDead() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait));\\n        var requestCompletedWithServerError = (req.xhr.readyState === 4 &&\\n                                               (reqStatus < 1 || reqStatus >= 500));\\n        if (primaryTimeout || secondaryTimeout ||\\n            requestCompletedWithServerError) {\\n            if (secondaryTimeout) {\\n                Strophe.error(\\\"Request \\\" + this._requests[i].id +\\n                              \\\" timed out (secondary), restarting\\\");\\n            }\\n            req.abort = true;\\n            req.xhr.abort();\\n            // setting to null fails on IE6, so set to empty function\\n            req.xhr.onreadystatechange = function () {};\\n            this._requests[i] = new Strophe.Request(req.xmlData,\\n                                                    req.origFunc,\\n                                                    req.rid,\\n                                                    req.sends);\\n            req = this._requests[i];\\n        }\\n\\n        if (req.xhr.readyState === 0) {\\n            Strophe.debug(\\\"request id \\\"+req.id+\\\".\\\"+req.sends+\\\" posting\\\");\\n\\n            try {\\n                var contentType = this._conn.options.contentType || \\\"text/xml; charset=utf-8\\\";\\n                req.xhr.open(\\\"POST\\\", this._conn.service, this._conn.options.sync ? false : true);\\n                if (typeof req.xhr.setRequestHeader !== 'undefined') {\\n                    // IE9 doesn't have setRequestHeader\\n                    req.xhr.setRequestHeader(\\\"Content-Type\\\", contentType);\\n                }\\n                if (this._conn.options.withCredentials) {\\n                    req.xhr.withCredentials = true;\\n                }\\n            } catch (e2) {\\n                Strophe.error(\\\"XHR open failed: \\\" + e2.toString());\\n                if (!this._conn.connected) {\\n                    this._conn._changeConnectStatus(\\n                            Strophe.Status.CONNFAIL, \\\"bad-service\\\");\\n                }\\n                this._conn.disconnect();\\n                return;\\n            }\\n\\n            // Fires the XHR request -- may be invoked immediately\\n            // or on a gradually expanding retry window for reconnects\\n            var sendFunc = function () {\\n                req.date = new Date();\\n                if (self._conn.options.customHeaders){\\n                    var headers = self._conn.options.customHeaders;\\n                    for (var header in headers) {\\n                        if (headers.hasOwnProperty(header)) {\\n                            req.xhr.setRequestHeader(header, headers[header]);\\n                        }\\n                    }\\n                }\\n                req.xhr.send(req.data);\\n            };\\n\\n            // Implement progressive backoff for reconnects --\\n            // First retry (send === 1) should also be instantaneous\\n            if (req.sends > 1) {\\n                // Using a cube of the retry number creates a nicely\\n                // expanding retry window\\n                var backoff = Math.min(Math.floor(Strophe.TIMEOUT * this.wait),\\n                                       Math.pow(req.sends, 3)) * 1000;\\n                setTimeout(function() {\\n                    // XXX: setTimeout should be called only with function expressions (23974bc1)\\n                    sendFunc();\\n                }, backoff);\\n            } else {\\n                sendFunc();\\n            }\\n\\n            req.sends++;\\n\\n            if (this._conn.xmlOutput !== Strophe.Connection.prototype.xmlOutput) {\\n                if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\\n                    this._conn.xmlOutput(req.xmlData.childNodes[0]);\\n                } else {\\n                    this._conn.xmlOutput(req.xmlData);\\n                }\\n            }\\n            if (this._conn.rawOutput !== Strophe.Connection.prototype.rawOutput) {\\n                this._conn.rawOutput(req.data);\\n            }\\n        } else {\\n            Strophe.debug(\\\"_processRequest: \\\" +\\n                          (i === 0 ? \\\"first\\\" : \\\"second\\\") +\\n                          \\\" request has readyState of \\\" +\\n                          req.xhr.readyState);\\n        }\\n    },\\n\\n    /** PrivateFunction: _removeRequest\\n     *  _Private_ function to remove a request from the queue.\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) req - The request to remove.\\n     */\\n    _removeRequest: function (req) {\\n        Strophe.debug(\\\"removing request\\\");\\n        var i;\\n        for (i = this._requests.length - 1; i >= 0; i--) {\\n            if (req === this._requests[i]) {\\n                this._requests.splice(i, 1);\\n            }\\n        }\\n        // IE6 fails on setting to null, so set to empty function\\n        req.xhr.onreadystatechange = function () {};\\n        this._throttledRequestHandler();\\n    },\\n\\n    /** PrivateFunction: _restartRequest\\n     *  _Private_ function to restart a request that is presumed dead.\\n     *\\n     *  Parameters:\\n     *    (Integer) i - The index of the request in the queue.\\n     */\\n    _restartRequest: function (i) {\\n        var req = this._requests[i];\\n        if (req.dead === null) {\\n            req.dead = new Date();\\n        }\\n\\n        this._processRequest(i);\\n    },\\n\\n    /** PrivateFunction: _reqToData\\n     * _Private_ function to get a stanza out of a request.\\n     *\\n     * Tries to extract a stanza out of a Request Object.\\n     * When this fails the current connection will be disconnected.\\n     *\\n     *  Parameters:\\n     *    (Object) req - The Request.\\n     *\\n     *  Returns:\\n     *    The stanza that was passed.\\n     */\\n    _reqToData: function (req) {\\n        try {\\n            return req.getResponse();\\n        } catch (e) {\\n            if (e !== \\\"parsererror\\\") { throw e; }\\n            this._conn.disconnect(\\\"strophe-parsererror\\\");\\n        }\\n    },\\n\\n    /** PrivateFunction: _sendTerminate\\n     *  _Private_ function to send initial disconnect sequence.\\n     *\\n     *  This is the first step in a graceful disconnect.  It sends\\n     *  the BOSH server a terminate body and includes an unavailable\\n     *  presence if authentication has completed.\\n     */\\n    _sendTerminate: function (pres) {\\n        Strophe.info(\\\"_sendTerminate was called\\\");\\n        var body = this._buildBody().attrs({type: \\\"terminate\\\"});\\n        if (pres) {\\n            body.cnode(pres.tree());\\n        }\\n        var req = new Strophe.Request(\\n            body.tree(),\\n            this._onRequestStateChange.bind(\\n            this, this._conn._dataRecv.bind(this._conn)),\\n            body.tree().getAttribute(\\\"rid\\\")\\n        );\\n        this._requests.push(req);\\n        this._throttledRequestHandler();\\n    },\\n\\n    /** PrivateFunction: _send\\n     *  _Private_ part of the Connection.send function for BOSH\\n     *\\n     * Just triggers the RequestHandler to send the messages that are in the queue\\n     */\\n    _send: function () {\\n        clearTimeout(this._conn._idleTimeout);\\n        this._throttledRequestHandler();\\n\\n        // XXX: setTimeout should be called only with function expressions (23974bc1)\\n        this._conn._idleTimeout = setTimeout(function() {\\n            this._onIdle();\\n        }.bind(this._conn), 100);\\n    },\\n\\n    /** PrivateFunction: _sendRestart\\n     *\\n     *  Send an xmpp:restart stanza.\\n     */\\n    _sendRestart: function () {\\n        this._throttledRequestHandler();\\n        clearTimeout(this._conn._idleTimeout);\\n    },\\n\\n    /** PrivateFunction: _throttledRequestHandler\\n     *  _Private_ function to throttle requests to the connection window.\\n     *\\n     *  This function makes sure we don't send requests so fast that the\\n     *  request ids overflow the connection window in the case that one\\n     *  request died.\\n     */\\n    _throttledRequestHandler: function () {\\n        if (!this._requests) {\\n            Strophe.debug(\\\"_throttledRequestHandler called with \\\" +\\n                          \\\"undefined requests\\\");\\n        } else {\\n            Strophe.debug(\\\"_throttledRequestHandler called with \\\" +\\n                          this._requests.length + \\\" requests\\\");\\n        }\\n\\n        if (!this._requests || this._requests.length === 0) {\\n            return;\\n        }\\n\\n        if (this._requests.length > 0) {\\n            this._processRequest(0);\\n        }\\n\\n        if (this._requests.length > 1 &&\\n            Math.abs(this._requests[0].rid -\\n                     this._requests[1].rid) < this.window) {\\n            this._processRequest(1);\\n        }\\n    }\\n};\\nreturn Strophe;\\n}));\\n\\n/*\\n    This program is distributed under the terms of the MIT license.\\n    Please see the LICENSE file for details.\\n\\n    Copyright 2006-2008, OGG, LLC\\n*/\\n\\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\\n/* global define, window, clearTimeout, WebSocket, DOMParser, Strophe, $build */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-websocket',['strophe-core'], function (core) {\\n            return factory(\\n                core.Strophe,\\n                core.$build\\n            );\\n        });\\n    } else if (typeof exports === 'object') {\\n        var core = require('./core');\\n\\n        module.exports = factory(core.Strophe, core.$build);\\n    } else {\\n        // Browser globals\\n        return factory(Strophe, $build);\\n    }\\n}(this, function (Strophe, $build) {\\n\\n/** Class: Strophe.WebSocket\\n *  _Private_ helper class that handles WebSocket Connections\\n *\\n *  The Strophe.WebSocket class is used internally by Strophe.Connection\\n *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\\n */\\n\\n/** File: websocket.js\\n *  A JavaScript library to enable XMPP over Websocket in Strophejs.\\n *\\n *  This file implements XMPP over WebSockets for Strophejs.\\n *  If a Connection is established with a Websocket url (ws://...)\\n *  Strophe will use WebSockets.\\n *  For more information on XMPP-over-WebSocket see RFC 7395:\\n *  http://tools.ietf.org/html/rfc7395\\n *\\n *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\\n */\\n\\n/** PrivateConstructor: Strophe.Websocket\\n *  Create and initialize a Strophe.WebSocket object.\\n *  Currently only sets the connection Object.\\n *\\n *  Parameters:\\n *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\\n *\\n *  Returns:\\n *    A new Strophe.WebSocket object.\\n */\\nStrophe.Websocket = function(connection) {\\n    this._conn = connection;\\n    this.strip = \\\"wrapper\\\";\\n\\n    var service = connection.service;\\n    if (service.indexOf(\\\"ws:\\\") !== 0 && service.indexOf(\\\"wss:\\\") !== 0) {\\n        // If the service is not an absolute URL, assume it is a path and put the absolute\\n        // URL together from options, current URL and the path.\\n        var new_service = \\\"\\\";\\n\\n        if (connection.options.protocol === \\\"ws\\\" && window.location.protocol !== \\\"https:\\\") {\\n            new_service += \\\"ws\\\";\\n        } else {\\n            new_service += \\\"wss\\\";\\n        }\\n\\n        new_service += \\\"://\\\" + window.location.host;\\n\\n        if (service.indexOf(\\\"/\\\") !== 0) {\\n            new_service += window.location.pathname + service;\\n        } else {\\n            new_service += service;\\n        }\\n\\n        connection.service = new_service;\\n    }\\n};\\n\\nStrophe.Websocket.prototype = {\\n    /** PrivateFunction: _buildStream\\n     *  _Private_ helper function to generate the <stream> start tag for WebSockets\\n     *\\n     *  Returns:\\n     *    A Strophe.Builder with a <stream> element.\\n     */\\n    _buildStream: function () {\\n        return $build(\\\"open\\\", {\\n            \\\"xmlns\\\": Strophe.NS.FRAMING,\\n            \\\"to\\\": this._conn.domain,\\n            \\\"version\\\": '1.0'\\n        });\\n    },\\n\\n    /** PrivateFunction: _check_streamerror\\n     * _Private_ checks a message for stream:error\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) bodyWrap - The received stanza.\\n     *    connectstatus - The ConnectStatus that will be set on error.\\n     *  Returns:\\n     *     true if there was a streamerror, false otherwise.\\n     */\\n    _check_streamerror: function (bodyWrap, connectstatus) {\\n        var errors;\\n        if (bodyWrap.getElementsByTagNameNS) {\\n            errors = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \\\"error\\\");\\n        } else {\\n            errors = bodyWrap.getElementsByTagName(\\\"stream:error\\\");\\n        }\\n        if (errors.length === 0) {\\n            return false;\\n        }\\n        var error = errors[0];\\n\\n        var condition = \\\"\\\";\\n        var text = \\\"\\\";\\n\\n        var ns = \\\"urn:ietf:params:xml:ns:xmpp-streams\\\";\\n        for (var i = 0; i < error.childNodes.length; i++) {\\n            var e = error.childNodes[i];\\n            if (e.getAttribute(\\\"xmlns\\\") !== ns) {\\n                break;\\n            } if (e.nodeName === \\\"text\\\") {\\n                text = e.textContent;\\n            } else {\\n                condition = e.nodeName;\\n            }\\n        }\\n\\n        var errorString = \\\"WebSocket stream error: \\\";\\n\\n        if (condition) {\\n            errorString += condition;\\n        } else {\\n            errorString += \\\"unknown\\\";\\n        }\\n\\n        if (text) {\\n            errorString += \\\" - \\\" + text;\\n        }\\n\\n        Strophe.error(errorString);\\n\\n        // close the connection on stream_error\\n        this._conn._changeConnectStatus(connectstatus, condition);\\n        this._conn._doDisconnect();\\n        return true;\\n    },\\n\\n    /** PrivateFunction: _reset\\n     *  Reset the connection.\\n     *\\n     *  This function is called by the reset function of the Strophe Connection.\\n     *  Is not needed by WebSockets.\\n     */\\n    _reset: function () {\\n        return;\\n    },\\n\\n    /** PrivateFunction: _connect\\n     *  _Private_ function called by Strophe.Connection.connect\\n     *\\n     *  Creates a WebSocket for a connection and assigns Callbacks to it.\\n     *  Does nothing if there already is a WebSocket.\\n     */\\n    _connect: function () {\\n        // Ensure that there is no open WebSocket from a previous Connection.\\n        this._closeSocket();\\n\\n        // Create the new WobSocket\\n        this.socket = new WebSocket(this._conn.service, \\\"xmpp\\\");\\n        this.socket.onopen = this._onOpen.bind(this);\\n        this.socket.onerror = this._onError.bind(this);\\n        this.socket.onclose = this._onClose.bind(this);\\n        this.socket.onmessage = this._connect_cb_wrapper.bind(this);\\n    },\\n\\n    /** PrivateFunction: _connect_cb\\n     *  _Private_ function called by Strophe.Connection._connect_cb\\n     *\\n     * checks for stream:error\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) bodyWrap - The received stanza.\\n     */\\n    _connect_cb: function(bodyWrap) {\\n        var error = this._check_streamerror(bodyWrap, Strophe.Status.CONNFAIL);\\n        if (error) {\\n            return Strophe.Status.CONNFAIL;\\n        }\\n    },\\n\\n    /** PrivateFunction: _handleStreamStart\\n     * _Private_ function that checks the opening <open /> tag for errors.\\n     *\\n     * Disconnects if there is an error and returns false, true otherwise.\\n     *\\n     *  Parameters:\\n     *    (Node) message - Stanza containing the <open /> tag.\\n     */\\n    _handleStreamStart: function(message) {\\n        var error = false;\\n\\n        // Check for errors in the <open /> tag\\n        var ns = message.getAttribute(\\\"xmlns\\\");\\n        if (typeof ns !== \\\"string\\\") {\\n            error = \\\"Missing xmlns in <open />\\\";\\n        } else if (ns !== Strophe.NS.FRAMING) {\\n            error = \\\"Wrong xmlns in <open />: \\\" + ns;\\n        }\\n\\n        var ver = message.getAttribute(\\\"version\\\");\\n        if (typeof ver !== \\\"string\\\") {\\n            error = \\\"Missing version in <open />\\\";\\n        } else if (ver !== \\\"1.0\\\") {\\n            error = \\\"Wrong version in <open />: \\\" + ver;\\n        }\\n\\n        if (error) {\\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, error);\\n            this._conn._doDisconnect();\\n            return false;\\n        }\\n\\n        return true;\\n    },\\n\\n    /** PrivateFunction: _connect_cb_wrapper\\n     * _Private_ function that handles the first connection messages.\\n     *\\n     * On receiving an opening stream tag this callback replaces itself with the real\\n     * message handler. On receiving a stream error the connection is terminated.\\n     */\\n    _connect_cb_wrapper: function(message) {\\n        if (message.data.indexOf(\\\"<open \\\") === 0 || message.data.indexOf(\\\"<?xml\\\") === 0) {\\n            // Strip the XML Declaration, if there is one\\n            var data = message.data.replace(/^(<\\\\?.*?\\\\?>\\\\s*)*/, \\\"\\\");\\n            if (data === '') return;\\n\\n            var streamStart = new DOMParser().parseFromString(data, \\\"text/xml\\\").documentElement;\\n            this._conn.xmlInput(streamStart);\\n            this._conn.rawInput(message.data);\\n\\n            //_handleStreamSteart will check for XML errors and disconnect on error\\n            if (this._handleStreamStart(streamStart)) {\\n                //_connect_cb will check for stream:error and disconnect on error\\n                this._connect_cb(streamStart);\\n            }\\n        } else if (message.data.indexOf(\\\"<close \\\") === 0) { // <close xmlns=\\\"urn:ietf:params:xml:ns:xmpp-framing />\\n            // Parse the raw string to an XML element\\n            var parsedMessage = new DOMParser().parseFromString(message.data, \\\"text/xml\\\").documentElement;\\n            // Report this input to the raw and xml handlers\\n            this._conn.xmlInput(parsedMessage);\\n            this._conn.rawInput(message.data);\\n            var see_uri = parsedMessage.getAttribute(\\\"see-other-uri\\\");\\n            if (see_uri) {\\n                var service = this._conn.service;\\n                // Valid scenarios: WSS->WSS, WS->ANY\\n                var isSecureRedirect = (service.indexOf(\\\"wss:\\\") >= 0 && see_uri.indexOf(\\\"wss:\\\") >= 0) || (service.indexOf(\\\"ws:\\\") >= 0);\\n                if(isSecureRedirect) {\\n                    this._conn._changeConnectStatus(\\n                        Strophe.Status.REDIRECT,\\n                        \\\"Received see-other-uri, resetting connection\\\"\\n                    );\\n                    this._conn.reset();\\n                    this._conn.service = see_uri;\\n                    this._connect();\\n                }\\n            } else {\\n                this._conn._changeConnectStatus(\\n                    Strophe.Status.CONNFAIL,\\n                    \\\"Received closing stream\\\"\\n                );\\n                this._conn._doDisconnect();\\n            }\\n        } else {\\n            var string = this._streamWrap(message.data);\\n            var elem = new DOMParser().parseFromString(string, \\\"text/xml\\\").documentElement;\\n            this.socket.onmessage = this._onMessage.bind(this);\\n            this._conn._connect_cb(elem, null, message.data);\\n        }\\n    },\\n\\n    /** PrivateFunction: _disconnect\\n     *  _Private_ function called by Strophe.Connection.disconnect\\n     *\\n     *  Disconnects and sends a last stanza if one is given\\n     *\\n     *  Parameters:\\n     *    (Request) pres - This stanza will be sent before disconnecting.\\n     */\\n    _disconnect: function (pres) {\\n        if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\\n            if (pres) {\\n                this._conn.send(pres);\\n            }\\n            var close = $build(\\\"close\\\", { \\\"xmlns\\\": Strophe.NS.FRAMING });\\n            this._conn.xmlOutput(close.tree());\\n            var closeString = Strophe.serialize(close);\\n            this._conn.rawOutput(closeString);\\n            try {\\n                this.socket.send(closeString);\\n            } catch (e) {\\n                Strophe.info(\\\"Couldn't send <close /> tag.\\\");\\n            }\\n        }\\n        this._conn._doDisconnect();\\n    },\\n\\n    /** PrivateFunction: _doDisconnect\\n     *  _Private_ function to disconnect.\\n     *\\n     *  Just closes the Socket for WebSockets\\n     */\\n    _doDisconnect: function () {\\n        Strophe.info(\\\"WebSockets _doDisconnect was called\\\");\\n        this._closeSocket();\\n    },\\n\\n    /** PrivateFunction _streamWrap\\n     *  _Private_ helper function to wrap a stanza in a <stream> tag.\\n     *  This is used so Strophe can process stanzas from WebSockets like BOSH\\n     */\\n    _streamWrap: function (stanza) {\\n        return \\\"<wrapper>\\\" + stanza + '</wrapper>';\\n    },\\n\\n\\n    /** PrivateFunction: _closeSocket\\n     *  _Private_ function to close the WebSocket.\\n     *\\n     *  Closes the socket if it is still open and deletes it\\n     */\\n    _closeSocket: function () {\\n        if (this.socket) { try {\\n            this.socket.onerror = null;\\n            this.socket.close();\\n        } catch (e) {} }\\n        this.socket = null;\\n    },\\n\\n    /** PrivateFunction: _emptyQueue\\n     * _Private_ function to check if the message queue is empty.\\n     *\\n     *  Returns:\\n     *    True, because WebSocket messages are send immediately after queueing.\\n     */\\n    _emptyQueue: function () {\\n        return true;\\n    },\\n\\n    /** PrivateFunction: _onClose\\n     * _Private_ function to handle websockets closing.\\n     *\\n     * Nothing to do here for WebSockets\\n     */\\n    _onClose: function(e) {\\n        if(this._conn.connected && !this._conn.disconnecting) {\\n            Strophe.error(\\\"Websocket closed unexpectedly\\\");\\n            this._conn._doDisconnect();\\n        } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\\n            // in case the onError callback was not called (Safari 10 does not\\n            // call onerror when the initial connection fails) we need to\\n            // dispatch a CONNFAIL status update to be consistent with the\\n            // behavior on other browsers.\\n            Strophe.error(\\\"Websocket closed unexcectedly\\\");\\n            this._conn._changeConnectStatus(\\n                Strophe.Status.CONNFAIL,\\n                \\\"The WebSocket connection could not be established or was disconnected.\\\"\\n            );\\n            this._conn._doDisconnect();\\n        } else {\\n            Strophe.info(\\\"Websocket closed\\\");\\n        }\\n    },\\n\\n    /** PrivateFunction: _no_auth_received\\n     *\\n     * Called on stream start/restart when no stream:features\\n     * has been received.\\n     */\\n    _no_auth_received: function (callback) {\\n        Strophe.error(\\\"Server did not offer a supported authentication mechanism\\\");\\n        this._changeConnectStatus(\\n            Strophe.Status.CONNFAIL,\\n            Strophe.ErrorCondition.NO_AUTH_MECH\\n        );\\n        if (callback) {\\n            callback.call(this._conn);\\n        }\\n        this._conn._doDisconnect();\\n    },\\n\\n    /** PrivateFunction: _onDisconnectTimeout\\n     *  _Private_ timeout handler for handling non-graceful disconnection.\\n     *\\n     *  This does nothing for WebSockets\\n     */\\n    _onDisconnectTimeout: function () {},\\n\\n    /** PrivateFunction: _abortAllRequests\\n     *  _Private_ helper function that makes sure all pending requests are aborted.\\n     */\\n    _abortAllRequests: function () {},\\n\\n    /** PrivateFunction: _onError\\n     * _Private_ function to handle websockets errors.\\n     *\\n     * Parameters:\\n     * (Object) error - The websocket error.\\n     */\\n    _onError: function(error) {\\n        Strophe.error(\\\"Websocket error \\\" + error);\\n        this._conn._changeConnectStatus(\\n            Strophe.Status.CONNFAIL,\\n            \\\"The WebSocket connection could not be established or was disconnected.\\\"\\n        );\\n        this._disconnect();\\n    },\\n\\n    /** PrivateFunction: _onIdle\\n     *  _Private_ function called by Strophe.Connection._onIdle\\n     *\\n     *  sends all queued stanzas\\n     */\\n    _onIdle: function () {\\n        var data = this._conn._data;\\n        if (data.length > 0 && !this._conn.paused) {\\n            for (var i = 0; i < data.length; i++) {\\n                if (data[i] !== null) {\\n                    var stanza, rawStanza;\\n                    if (data[i] === \\\"restart\\\") {\\n                        stanza = this._buildStream().tree();\\n                    } else {\\n                        stanza = data[i];\\n                    }\\n                    rawStanza = Strophe.serialize(stanza);\\n                    this._conn.xmlOutput(stanza);\\n                    this._conn.rawOutput(rawStanza);\\n                    this.socket.send(rawStanza);\\n                }\\n            }\\n            this._conn._data = [];\\n        }\\n    },\\n\\n    /** PrivateFunction: _onMessage\\n     * _Private_ function to handle websockets messages.\\n     *\\n     * This function parses each of the messages as if they are full documents.\\n     * [TODO : We may actually want to use a SAX Push parser].\\n     *\\n     * Since all XMPP traffic starts with\\n     *  <stream:stream version='1.0'\\n     *                 xml:lang='en'\\n     *                 xmlns='jabber:client'\\n     *                 xmlns:stream='http://etherx.jabber.org/streams'\\n     *                 id='3697395463'\\n     *                 from='SERVER'>\\n     *\\n     * The first stanza will always fail to be parsed.\\n     *\\n     * Additionally, the seconds stanza will always be <stream:features> with\\n     * the stream NS defined in the previous stanza, so we need to 'force'\\n     * the inclusion of the NS in this stanza.\\n     *\\n     * Parameters:\\n     * (string) message - The websocket message.\\n     */\\n    _onMessage: function(message) {\\n        var elem, data;\\n        // check for closing stream\\n        var close = '<close xmlns=\\\"urn:ietf:params:xml:ns:xmpp-framing\\\" />';\\n        if (message.data === close) {\\n            this._conn.rawInput(close);\\n            this._conn.xmlInput(message);\\n            if (!this._conn.disconnecting) {\\n                this._conn._doDisconnect();\\n            }\\n            return;\\n        } else if (message.data.search(\\\"<open \\\") === 0) {\\n            // This handles stream restarts\\n            elem = new DOMParser().parseFromString(message.data, \\\"text/xml\\\").documentElement;\\n            if (!this._handleStreamStart(elem)) {\\n                return;\\n            }\\n        } else {\\n            data = this._streamWrap(message.data);\\n            elem = new DOMParser().parseFromString(data, \\\"text/xml\\\").documentElement;\\n        }\\n\\n        if (this._check_streamerror(elem, Strophe.Status.ERROR)) {\\n            return;\\n        }\\n\\n        //handle unavailable presence stanza before disconnecting\\n        if (this._conn.disconnecting &&\\n                elem.firstChild.nodeName === \\\"presence\\\" &&\\n                elem.firstChild.getAttribute(\\\"type\\\") === \\\"unavailable\\\") {\\n            this._conn.xmlInput(elem);\\n            this._conn.rawInput(Strophe.serialize(elem));\\n            // if we are already disconnecting we will ignore the unavailable stanza and\\n            // wait for the </stream:stream> tag before we close the connection\\n            return;\\n        }\\n        this._conn._dataRecv(elem, message.data);\\n    },\\n\\n    /** PrivateFunction: _onOpen\\n     * _Private_ function to handle websockets connection setup.\\n     *\\n     * The opening stream tag is sent here.\\n     */\\n    _onOpen: function() {\\n        Strophe.info(\\\"Websocket open\\\");\\n        var start = this._buildStream();\\n        this._conn.xmlOutput(start.tree());\\n\\n        var startString = Strophe.serialize(start);\\n        this._conn.rawOutput(startString);\\n        this.socket.send(startString);\\n    },\\n\\n    /** PrivateFunction: _reqToData\\n     * _Private_ function to get a stanza out of a request.\\n     *\\n     * WebSockets don't use requests, so the passed argument is just returned.\\n     *\\n     *  Parameters:\\n     *    (Object) stanza - The stanza.\\n     *\\n     *  Returns:\\n     *    The stanza that was passed.\\n     */\\n    _reqToData: function (stanza) {\\n        return stanza;\\n    },\\n\\n    /** PrivateFunction: _send\\n     *  _Private_ part of the Connection.send function for WebSocket\\n     *\\n     * Just flushes the messages that are in the queue\\n     */\\n    _send: function () {\\n        this._conn.flush();\\n    },\\n\\n    /** PrivateFunction: _sendRestart\\n     *\\n     *  Send an xmpp:restart stanza.\\n     */\\n    _sendRestart: function () {\\n        clearTimeout(this._conn._idleTimeout);\\n        this._conn._onIdle.bind(this._conn)();\\n    }\\n};\\nreturn Strophe;\\n}));\\n\\n(function(root){\\n    if(typeof define === 'function' && define.amd){\\n        define('strophe',[\\n            \\\"strophe-core\\\",\\n            \\\"strophe-bosh\\\",\\n            \\\"strophe-websocket\\\"\\n        ], function (wrapper) {\\n            return wrapper;\\n        });\\n    } else if (typeof exports === 'object') {\\n        var core = require('./core');\\n        require('./bosh');\\n        require('./websocket');\\n        module.exports = core;\\n    }\\n})(this);\\n\\n\\nrequire([\\\"strophe-polyfill\\\"]);\\n/* jshint ignore:start */\\n    //The modules for your project will be inlined above\\n    //this snippet. Ask almond to synchronously require the\\n    //module value for 'main' here and return it as the\\n    //value to use for the public API for the built file.\\n    return require('strophe');\\n}));\\n/* jshint ignore:end */\\n\",\"/**\\r\\n * The events for the conference.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Indicates that authentication status changed.\\r\\n */\\r\\nexport const AUTH_STATUS_CHANGED = 'conference.auth_status_changed';\\r\\n\\r\\n/**\\r\\n * A participant avatar has changed.\\r\\n */\\r\\nexport const AVATAR_CHANGED = 'conference.avatarChanged';\\r\\n\\r\\n/**\\r\\n * Fired just before the statistics module is disposed and it's the last chance\\r\\n * to submit some logs to the statistics service (ex. CallStats if enabled),\\r\\n * before it's disconnected.\\r\\n */\\r\\nexport const BEFORE_STATISTICS_DISPOSED = 'conference.beforeStatisticsDisposed';\\r\\n\\r\\n/**\\r\\n * Indicates that an error occured.\\r\\n */\\r\\nexport const CONFERENCE_ERROR = 'conference.error';\\r\\n\\r\\n/**\\r\\n * Indicates that conference failed.\\r\\n */\\r\\nexport const CONFERENCE_FAILED = 'conference.failed';\\r\\n\\r\\n/**\\r\\n * Indicates that conference has been joined. The event does NOT provide any\\r\\n * parameters to its listeners.\\r\\n */\\r\\nexport const CONFERENCE_JOINED = 'conference.joined';\\r\\n\\r\\n/**\\r\\n * Indicates that conference has been left.\\r\\n */\\r\\nexport const CONFERENCE_LEFT = 'conference.left';\\r\\n\\r\\n/**\\r\\n * Indicates that the connection to the conference has been established\\r\\n * XXX This is currently fired whenVthe *ICE* connection enters 'connected'\\r\\n * state for the first time.\\r\\n */\\r\\nexport const CONNECTION_ESTABLISHED = 'conference.connectionEstablished';\\r\\n\\r\\n/**\\r\\n * Indicates that the connection to the conference has been interrupted for some\\r\\n * reason.\\r\\n * XXX This is currently fired when the *ICE* connection is interrupted.\\r\\n */\\r\\nexport const CONNECTION_INTERRUPTED = 'conference.connectionInterrupted';\\r\\n\\r\\n/**\\r\\n * Indicates that the connection to the conference has been restored.\\r\\n * XXX This is currently fired when the *ICE* connection is restored.\\r\\n */\\r\\nexport const CONNECTION_RESTORED = 'conference.connectionRestored';\\r\\n\\r\\n/**\\r\\n * A connection to the video bridge's data channel has been established.\\r\\n */\\r\\nexport const DATA_CHANNEL_OPENED = 'conference.dataChannelOpened';\\r\\n\\r\\n/**\\r\\n * A user has changed it display name\\r\\n */\\r\\nexport const DISPLAY_NAME_CHANGED = 'conference.displayNameChanged';\\r\\n\\r\\n/**\\r\\n * The dominant speaker was changed.\\r\\n */\\r\\nexport const DOMINANT_SPEAKER_CHANGED = 'conference.dominantSpeaker';\\r\\n\\r\\n/**\\r\\n * Indicates that DTMF support changed.\\r\\n */\\r\\nexport const DTMF_SUPPORT_CHANGED = 'conference.dtmfSupportChanged';\\r\\n\\r\\n/**\\r\\n * Indicates that a message from another participant is received on data\\r\\n * channel.\\r\\n */\\r\\nexport const ENDPOINT_MESSAGE_RECEIVED = 'conference.endpoint_message_received';\\r\\n\\r\\n/**\\r\\n * NOTE This is lib-jitsi-meet internal event and can be removed at any time !\\r\\n *\\r\\n * Event emitted when conference transits, between one to one and multiparty JVB\\r\\n * conference. If the conference switches to P2P it's neither one to one nor\\r\\n * a multiparty JVB conference, but P2P (the status argument of this event will\\r\\n * be <tt>false</tt>).\\r\\n *\\r\\n * The first argument is a boolean which carries the previous value and\\r\\n * the seconds argument is a boolean with the new status. The event is emitted\\r\\n * only if the previous and the new values are different.\\r\\n *\\r\\n * @type {string}\\r\\n */\\r\\nexport const JVB121_STATUS = 'conference.jvb121Status';\\r\\n\\r\\n/**\\r\\n * You are kicked from the conference.\\r\\n * @param {JitsiParticipant} the participant that initiated the kick.\\r\\n */\\r\\nexport const KICKED = 'conference.kicked';\\r\\n\\r\\n/**\\r\\n * Participant was kicked from the conference.\\r\\n * @param {JitsiParticipant} the participant that initiated the kick.\\r\\n * @param {JitsiParticipant} the participant that was kicked.\\r\\n */\\r\\nexport const PARTICIPANT_KICKED = 'conference.participant_kicked';\\r\\n\\r\\n/**\\r\\n * The Last N set is changed.\\r\\n *\\r\\n * @param {Array<string>|null} leavingEndpointIds the ids of all the endpoints\\r\\n * which are leaving Last N\\r\\n * @param {Array<string>|null} enteringEndpointIds the ids of all the endpoints\\r\\n * which are entering Last N\\r\\n */\\r\\nexport const LAST_N_ENDPOINTS_CHANGED = 'conference.lastNEndpointsChanged';\\r\\n\\r\\n/**\\r\\n * Indicates that the room has been locked or unlocked.\\r\\n */\\r\\nexport const LOCK_STATE_CHANGED = 'conference.lock_state_changed';\\r\\n\\r\\n/**\\r\\n * Indicates that the region of the media server (jitsi-videobridge) that we\\r\\n * are connected to changed (or was initially set).\\r\\n * @type {string} the region.\\r\\n */\\r\\nexport const SERVER_REGION_CHANGED = 'conference.server_region_changed';\\r\\n\\r\\n/**\\r\\n * New text message was received.\\r\\n */\\r\\nexport const MESSAGE_RECEIVED = 'conference.messageReceived';\\r\\n\\r\\n/**\\r\\n * New private text message was received.\\r\\n */\\r\\nexport const PRIVATE_MESSAGE_RECEIVED = 'conference.privateMessageReceived';\\r\\n\\r\\n/**\\r\\n * Event fired when JVB sends notification about interrupted/restored user's\\r\\n * ICE connection status or we detect local problem with the video track.\\r\\n * First argument is the ID of the participant and\\r\\n * the seconds is a string indicating if the connection is currently\\r\\n * - active - the connection is active\\r\\n * - inactive - the connection is inactive, was intentionally interrupted by\\r\\n * the bridge\\r\\n * - interrupted - a network problem occurred\\r\\n * - restoring - the connection was inactive and is restoring now\\r\\n *\\r\\n * The current status value can be obtained by calling\\r\\n * JitsiParticipant.getConnectionStatus().\\r\\n */\\r\\nexport const PARTICIPANT_CONN_STATUS_CHANGED\\r\\n    = 'conference.participant_conn_status_changed';\\r\\n\\r\\n/**\\r\\n * Indicates that the features of the participant has been changed.\\r\\n */\\r\\nexport const PARTCIPANT_FEATURES_CHANGED\\r\\n    = 'conference.partcipant_features_changed';\\r\\n\\r\\n/**\\r\\n * Indicates that a the value of a specific property of a specific participant\\r\\n * has changed.\\r\\n */\\r\\nexport const PARTICIPANT_PROPERTY_CHANGED\\r\\n    = 'conference.participant_property_changed';\\r\\n\\r\\n/**\\r\\n * Indicates that the conference has switched between JVB and P2P connections.\\r\\n * The first argument of this event is a <tt>boolean</tt> which when set to\\r\\n * <tt>true</tt> means that the conference is running on the P2P connection.\\r\\n */\\r\\nexport const P2P_STATUS = 'conference.p2pStatus';\\r\\n\\r\\n/**\\r\\n * Indicates that phone number changed.\\r\\n */\\r\\nexport const PHONE_NUMBER_CHANGED = 'conference.phoneNumberChanged';\\r\\n\\r\\n/**\\r\\n * The conference properties changed.\\r\\n * @type {string}\\r\\n */\\r\\nexport const PROPERTIES_CHANGED = 'conference.propertiesChanged';\\r\\n\\r\\n/**\\r\\n * Indicates that recording state changed.\\r\\n */\\r\\nexport const RECORDER_STATE_CHANGED = 'conference.recorderStateChanged';\\r\\n\\r\\n/**\\r\\n * Indicates that video SIP GW state changed.\\r\\n * @param {VideoSIPGWConstants} status.\\r\\n */\\r\\nexport const VIDEO_SIP_GW_AVAILABILITY_CHANGED\\r\\n    = 'conference.videoSIPGWAvailabilityChanged';\\r\\n\\r\\n/**\\r\\n * Indicates that video SIP GW Session state changed.\\r\\n * @param {options} event - {\\r\\n *     {string} address,\\r\\n *     {VideoSIPGWConstants} oldState,\\r\\n *     {VideoSIPGWConstants} newState,\\r\\n *     {string} displayName}\\r\\n * }.\\r\\n */\\r\\nexport const VIDEO_SIP_GW_SESSION_STATE_CHANGED\\r\\n    = 'conference.videoSIPGWSessionStateChanged';\\r\\n\\r\\n/**\\r\\n * Indicates that start muted settings changed.\\r\\n */\\r\\nexport const START_MUTED_POLICY_CHANGED\\r\\n    = 'conference.start_muted_policy_changed';\\r\\n\\r\\n/**\\r\\n * Indicates that the local user has started muted.\\r\\n */\\r\\nexport const STARTED_MUTED = 'conference.started_muted';\\r\\n\\r\\n/**\\r\\n * Indicates that subject of the conference has changed.\\r\\n */\\r\\nexport const SUBJECT_CHANGED = 'conference.subjectChanged';\\r\\n\\r\\n/**\\r\\n * Indicates that DTMF support changed.\\r\\n */\\r\\nexport const SUSPEND_DETECTED = 'conference.suspendDetected';\\r\\n\\r\\n/**\\r\\n * Event indicates that local user is talking while he muted himself\\r\\n */\\r\\nexport const TALK_WHILE_MUTED = 'conference.talk_while_muted';\\r\\n\\r\\n/**\\r\\n * A new media track was added to the conference. The event provides the\\r\\n * following parameters to its listeners:\\r\\n *\\r\\n * @param {JitsiTrack} track the added JitsiTrack\\r\\n */\\r\\nexport const TRACK_ADDED = 'conference.trackAdded';\\r\\n\\r\\n/**\\r\\n * Audio levels of a media track ( attached to the conference) was changed.\\r\\n */\\r\\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'conference.audioLevelsChanged';\\r\\n\\r\\n/**\\r\\n * A media track ( attached to the conference) mute status was changed.\\r\\n * @param {JitsiParticipant|null} the participant that initiated the mute\\r\\n * if it is a remote mute.\\r\\n */\\r\\nexport const TRACK_MUTE_CHANGED = 'conference.trackMuteChanged';\\r\\n\\r\\n/**\\r\\n * The media track was removed from the conference. The event provides the\\r\\n * following parameters to its listeners:\\r\\n *\\r\\n * @param {JitsiTrack} track the removed JitsiTrack\\r\\n */\\r\\nexport const TRACK_REMOVED = 'conference.trackRemoved';\\r\\n\\r\\n/**\\r\\n * Notifies for transcription status changes. The event provides the\\r\\n * following parameters to its listeners:\\r\\n *\\r\\n * @param {String} status - The new status.\\r\\n */\\r\\nexport const TRANSCRIPTION_STATUS_CHANGED\\r\\n    = 'conference.transcriptionStatusChanged';\\r\\n\\r\\n\\r\\n/**\\r\\n * A new user joined the conference.\\r\\n */\\r\\nexport const USER_JOINED = 'conference.userJoined';\\r\\n\\r\\n/**\\r\\n * A user has left the conference.\\r\\n */\\r\\nexport const USER_LEFT = 'conference.userLeft';\\r\\n\\r\\n/**\\r\\n * User role changed.\\r\\n */\\r\\nexport const USER_ROLE_CHANGED = 'conference.roleChanged';\\r\\n\\r\\n/**\\r\\n * User status changed.\\r\\n */\\r\\nexport const USER_STATUS_CHANGED = 'conference.statusChanged';\\r\\n\\r\\n/**\\r\\n * Event indicates that the bot participant type changed.\\r\\n */\\r\\nexport const BOT_TYPE_CHANGED = 'conference.bot_type_changed';\\r\\n\",\"import BrowserCapabilities from './BrowserCapabilities';\\r\\n\\r\\nexport default new BrowserCapabilities();\\r\\n\",\"/* Copyright @ 2015-present 8x8, Inc.\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *     http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar Logger = require(\\\"./Logger\\\");\\r\\nvar LogCollector = require(\\\"./LogCollector\\\");\\r\\n\\r\\n/**\\r\\n * Definition of the log method\\r\\n * @name log_method\\r\\n * @function\\r\\n * @param {...*} log_args the arguments to be logged\\r\\n */\\r\\n/**\\r\\n * The logger's transport type definition.\\r\\n *\\r\\n * @typedef {object} LoggerTransport\\r\\n *\\r\\n * @property {log_method} trace method called to log on {@link Logger.levels.TRACE} logging level\\r\\n * @property {log_method} debug method called to log on {@link Logger.levels.DEBUG} logging level\\r\\n * @property {log_method} info method called to log on {@link Logger.levels.INFO} logging level\\r\\n * @property {log_method} log method called to log on {@link Logger.levels.LOG} logging level\\r\\n * @property {log_method} warn method called to log on {@link Logger.levels.WARN} logging level\\r\\n * @property {log_method} error method called to log on {@link Logger.levels.ERROR} logging level\\r\\n */\\r\\n\\r\\n/**\\r\\n * Map with the created loggers with ID.\\r\\n */\\r\\nvar idLoggers = {};\\r\\n\\r\\n/**\\r\\n * Array with the loggers without id.\\r\\n */\\r\\nvar loggers = [];\\r\\n\\r\\n/**\\r\\n * Log level for the lbrary.\\r\\n */\\r\\nvar curLevel = Logger.levels.TRACE;\\r\\n\\r\\n\\r\\nmodule.exports = {\\r\\n    /**\\r\\n     * Adds given {@link LoggerTransport} instance to the list of global\\r\\n     * transports which means that it'll be used by all {@link Logger}s\\r\\n     * @param {LoggerTransport} transport\\r\\n     */\\r\\n    addGlobalTransport: function(transport) {\\r\\n        Logger.addGlobalTransport(transport);\\r\\n    },\\r\\n    /**\\r\\n     * Removes given {@link LoggerTransport} instance from the list of global\\r\\n     * transports\\r\\n     * @param {LoggerTransport} transport\\r\\n     */\\r\\n    removeGlobalTransport: function(transport) {\\r\\n        Logger.removeGlobalTransport(transport);\\r\\n    },\\r\\n    /**\\r\\n    * Sets global options which will be used by all loggers. Changing these\\r\\n    * works even after other loggers are created.\\r\\n    */\\r\\n    setGlobalOptions: function(options) {\\r\\n        Logger.setGlobalOptions(options);\\r\\n    },\\r\\n    /**\\r\\n     * Creates new logger.\\r\\n     * @arguments the same as Logger constructor\\r\\n     */\\r\\n    getLogger: function(id, transports, options) {\\r\\n        var logger = new Logger(curLevel, id, transports, options);\\r\\n        if(id) {\\r\\n            idLoggers[id] = idLoggers[id] || [];\\r\\n            idLoggers[id].push(logger);\\r\\n        } else {\\r\\n            loggers.push(logger);\\r\\n        }\\r\\n        return logger;\\r\\n    },\\r\\n    /**\\r\\n     * Changes the log level for the existing loggers by id.\\r\\n     * @param level the new log level.\\r\\n     * @param id if specified the level will be changed only for loggers with the\\r\\n     * same id. Otherwise the operation will affect all loggers that don't\\r\\n     * have id.\\r\\n     */\\r\\n    setLogLevelById: function(level, id) {\\r\\n        var l = id? (idLoggers[id] || []) : loggers;\\r\\n        for(var i = 0; i < l.length; i++) {\\r\\n            l[i].setLevel(level);\\r\\n        }\\r\\n    },\\r\\n    /**\\r\\n     * Changes the log level for all existing loggers.\\r\\n     * @param level the new log level.\\r\\n     */\\r\\n    setLogLevel: function (level) {\\r\\n        curLevel = level;\\r\\n        var i = 0;\\r\\n        for(; i < loggers.length; i++) {\\r\\n            loggers[i].setLevel(level);\\r\\n        }\\r\\n\\r\\n        for(var id in idLoggers) {\\r\\n            var l = idLoggers[id] || [];\\r\\n            for(i = 0; i < l.length; i++) {\\r\\n                l[i].setLevel(level);\\r\\n            }\\r\\n        }\\r\\n    },\\r\\n    /**\\r\\n     * The supported log levels.\\r\\n     */\\r\\n    levels: Logger.levels,\\r\\n    /**\\r\\n     * Exports the <tt>LogCollector</tt>.\\r\\n     */\\r\\n    LogCollector: LogCollector\\r\\n};\\r\\n\",\"import EventEmitter from 'events';\\r\\n\\r\\nimport { FEEDBACK } from '../../service/statistics/AnalyticsEvents';\\r\\nimport analytics from './AnalyticsAdapter';\\r\\nimport CallStats from './CallStats';\\r\\nimport LocalStats from './LocalStatsCollector';\\r\\nimport RTPStats from './RTPStatsCollector';\\r\\n\\r\\nimport browser from '../browser';\\r\\nimport Settings from '../settings/Settings';\\r\\nimport ScriptUtil from '../util/ScriptUtil';\\r\\nimport JitsiTrackError from '../../JitsiTrackError';\\r\\nimport * as StatisticsEvents from '../../service/statistics/Events';\\r\\n\\r\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Stores all active {@link Statistics} instances.\\r\\n * @type {Set<Statistics>}\\r\\n */\\r\\nlet _instances;\\r\\n\\r\\n/**\\r\\n * True if callstats API is loaded\\r\\n */\\r\\nlet isCallstatsLoaded = false;\\r\\n\\r\\n/**\\r\\n * Since callstats.io is a third party, we cannot guarantee the quality of their\\r\\n * service. More specifically, their server may take noticeably long time to\\r\\n * respond. Consequently, it is in our best interest (in the sense that the\\r\\n * intergration of callstats.io is pretty important to us but not enough to\\r\\n * allow it to prevent people from joining a conference) to (1) start\\r\\n * downloading their API as soon as possible and (2) do the downloading\\r\\n * asynchronously.\\r\\n *\\r\\n * @param {StatisticsOptions} options - Options to use for downloading and\\r\\n * initializing callstats backend.\\r\\n */\\r\\nfunction loadCallStatsAPI(options) {\\r\\n    if (!isCallstatsLoaded) {\\r\\n        ScriptUtil.loadScript(\\r\\n            options.customScriptUrl\\r\\n                || 'https://api.callstats.io/static/callstats-ws.min.js',\\r\\n            /* async */ true,\\r\\n            /* prepend */ true,\\r\\n            /* relativeURL */ undefined,\\r\\n            /* loadCallback */ () => _initCallStatsBackend(options)\\r\\n        );\\r\\n        isCallstatsLoaded = true;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Initializes Callstats backend.\\r\\n *\\r\\n * @param {StatisticsOptions} options - The options to use for initializing\\r\\n * callstats backend.\\r\\n * @private\\r\\n */\\r\\nfunction _initCallStatsBackend(options) {\\r\\n    if (CallStats.isBackendInitialized()) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const userName = Settings.callStatsUserName;\\r\\n\\r\\n    if (!CallStats.initBackend({\\r\\n        callStatsID: options.callStatsID,\\r\\n        callStatsSecret: options.callStatsSecret,\\r\\n        userName: options.swapUserNameAndAlias\\r\\n            ? options.callStatsAliasName : userName,\\r\\n        aliasName: options.swapUserNameAndAlias\\r\\n            ? userName : options.callStatsAliasName,\\r\\n        applicationName: options.applicationName,\\r\\n        getWiFiStatsMethod: options.getWiFiStatsMethod,\\r\\n        confID: options.confID\\r\\n    })) {\\r\\n        logger.error('CallStats Backend initialization failed bad');\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * callstats strips any additional fields from Error except for \\\"name\\\", \\\"stack\\\",\\r\\n * \\\"message\\\" and \\\"constraintName\\\". So we need to bundle additional information\\r\\n * from JitsiTrackError into error passed to callstats to preserve valuable\\r\\n * information about error.\\r\\n * @param {JitsiTrackError} error\\r\\n */\\r\\nfunction formatJitsiTrackErrorForCallStats(error) {\\r\\n    const err = new Error();\\r\\n\\r\\n    // Just copy original stack from error\\r\\n    err.stack = error.stack;\\r\\n\\r\\n    // Combine name from error's name plus (possibly) name of original GUM error\\r\\n    err.name = (error.name || 'Unknown error') + (error.gum && error.gum.error\\r\\n        && error.gum.error.name ? ` - ${error.gum.error.name}` : '');\\r\\n\\r\\n    // Put all constraints into this field. For constraint failed errors we will\\r\\n    // still know which exactly constraint failed as it will be a part of\\r\\n    // message.\\r\\n    err.constraintName = error.gum && error.gum.constraints\\r\\n        ? JSON.stringify(error.gum.constraints) : '';\\r\\n\\r\\n    // Just copy error's message.\\r\\n    err.message = error.message;\\r\\n\\r\\n    return err;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Init statistic options\\r\\n * @param options\\r\\n */\\r\\nStatistics.init = function(options) {\\r\\n    Statistics.audioLevelsEnabled = !options.disableAudioLevels;\\r\\n\\r\\n    if (typeof options.audioLevelsInterval === 'number') {\\r\\n        Statistics.audioLevelsInterval = options.audioLevelsInterval;\\r\\n    }\\r\\n\\r\\n    Statistics.disableThirdPartyRequests = options.disableThirdPartyRequests;\\r\\n};\\r\\n\\r\\n/**\\r\\n * The options to configure Statistics.\\r\\n * @typedef {Object} StatisticsOptions\\r\\n * @property {string} applicationName - The application name to pass to\\r\\n * callstats.\\r\\n * @property {string} callStatsAliasName - The alias name to use when\\r\\n * initializing callstats.\\r\\n * @property {string} callStatsConfIDNamespace - A namespace to prepend the\\r\\n * callstats conference ID with.\\r\\n * @property {string} confID - The callstats conference ID to use.\\r\\n * @property {string} callStatsID - Callstats credentials - the id.\\r\\n * @property {string} callStatsSecret - Callstats credentials - the secret.\\r\\n * @property {string} customScriptUrl - A custom lib url to use when downloading\\r\\n * callstats library.\\r\\n * @property {string} roomName - The room name we are currently in.\\r\\n * @property {boolean} swapUserNameAndAlias - Whether to swap the places of\\r\\n * username and alias when initiating callstats.\\r\\n */\\r\\n/**\\r\\n *\\r\\n * @param xmpp\\r\\n * @param {StatisticsOptions} options - The options to use creating the\\r\\n * Statistics.\\r\\n */\\r\\nexport default function Statistics(xmpp, options) {\\r\\n    /**\\r\\n     * {@link RTPStats} mapped by {@link TraceablePeerConnection.id} which\\r\\n     * collect RTP statistics for each peerconnection.\\r\\n     * @type {Map<string, RTPStats}\\r\\n     */\\r\\n    this.rtpStatsMap = new Map();\\r\\n    this.eventEmitter = new EventEmitter();\\r\\n    this.xmpp = xmpp;\\r\\n    this.options = options || {};\\r\\n\\r\\n    this.callStatsIntegrationEnabled\\r\\n        = this.options.callStatsID && this.options.callStatsSecret\\r\\n\\r\\n            // Even though AppID and AppSecret may be specified, the integration\\r\\n            // of callstats.io may be disabled because of globally-disallowed\\r\\n            // requests to any third parties.\\r\\n            && (Statistics.disableThirdPartyRequests !== true);\\r\\n    if (this.callStatsIntegrationEnabled) {\\r\\n        if (browser.isReactNative()) {\\r\\n            _initCallStatsBackend(this.options);\\r\\n        } else {\\r\\n            loadCallStatsAPI(this.options);\\r\\n        }\\r\\n\\r\\n        if (!this.options.confID) {\\r\\n            logger.warn('\\\"confID\\\" is not defined');\\r\\n        }\\r\\n\\r\\n        if (!this.options.callStatsConfIDNamespace) {\\r\\n            logger.warn('\\\"callStatsConfIDNamespace\\\" is not defined');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stores {@link CallStats} instances for each\\r\\n     * {@link TraceablePeerConnection} (one {@link CallStats} instance serves\\r\\n     * one TPC). The instances are mapped by {@link TraceablePeerConnection.id}.\\r\\n     * @type {Map<number, CallStats>}\\r\\n     */\\r\\n    this.callsStatsInstances = new Map();\\r\\n\\r\\n    Statistics.instances.add(this);\\r\\n}\\r\\nStatistics.audioLevelsEnabled = false;\\r\\nStatistics.audioLevelsInterval = 200;\\r\\nStatistics.disableThirdPartyRequests = false;\\r\\nStatistics.analytics = analytics;\\r\\n\\r\\nObject.defineProperty(Statistics, 'instances', {\\r\\n    /**\\r\\n     * Returns the Set holding all active {@link Statistics} instances. Lazily\\r\\n     * initializes the Set to allow any Set polyfills to be applied.\\r\\n     * @type {Set<Statistics>}\\r\\n     */\\r\\n    get() {\\r\\n        if (!_instances) {\\r\\n            _instances = new Set();\\r\\n        }\\r\\n\\r\\n        return _instances;\\r\\n    }\\r\\n});\\r\\n\\r\\n/**\\r\\n * Starts collecting RTP stats for given peerconnection.\\r\\n * @param {TraceablePeerConnection} peerconnection\\r\\n */\\r\\nStatistics.prototype.startRemoteStats = function(peerconnection) {\\r\\n    this.stopRemoteStats(peerconnection);\\r\\n\\r\\n    try {\\r\\n        const rtpStats\\r\\n            = new RTPStats(\\r\\n                peerconnection,\\r\\n                Statistics.audioLevelsInterval,\\r\\n                2000,\\r\\n                this.eventEmitter);\\r\\n\\r\\n        rtpStats.start(Statistics.audioLevelsEnabled);\\r\\n        this.rtpStatsMap.set(peerconnection.id, rtpStats);\\r\\n    } catch (e) {\\r\\n        logger.error(`Failed to start collecting remote statistics: ${e}`);\\r\\n    }\\r\\n};\\r\\n\\r\\nStatistics.localStats = [];\\r\\n\\r\\nStatistics.startLocalStats = function(stream, callback) {\\r\\n    if (!Statistics.audioLevelsEnabled) {\\r\\n        return;\\r\\n    }\\r\\n    const localStats = new LocalStats(stream, Statistics.audioLevelsInterval,\\r\\n        callback);\\r\\n\\r\\n    this.localStats.push(localStats);\\r\\n    localStats.start();\\r\\n};\\r\\n\\r\\nStatistics.prototype.addAudioLevelListener = function(listener) {\\r\\n    if (!Statistics.audioLevelsEnabled) {\\r\\n        return;\\r\\n    }\\r\\n    this.eventEmitter.on(StatisticsEvents.AUDIO_LEVEL, listener);\\r\\n};\\r\\n\\r\\nStatistics.prototype.removeAudioLevelListener = function(listener) {\\r\\n    if (!Statistics.audioLevelsEnabled) {\\r\\n        return;\\r\\n    }\\r\\n    this.eventEmitter.removeListener(StatisticsEvents.AUDIO_LEVEL, listener);\\r\\n};\\r\\n\\r\\nStatistics.prototype.addBeforeDisposedListener = function(listener) {\\r\\n    this.eventEmitter.on(StatisticsEvents.BEFORE_DISPOSED, listener);\\r\\n};\\r\\n\\r\\nStatistics.prototype.removeBeforeDisposedListener = function(listener) {\\r\\n    this.eventEmitter.removeListener(\\r\\n        StatisticsEvents.BEFORE_DISPOSED, listener);\\r\\n};\\r\\n\\r\\nStatistics.prototype.addConnectionStatsListener = function(listener) {\\r\\n    this.eventEmitter.on(StatisticsEvents.CONNECTION_STATS, listener);\\r\\n};\\r\\n\\r\\nStatistics.prototype.removeConnectionStatsListener = function(listener) {\\r\\n    this.eventEmitter.removeListener(\\r\\n        StatisticsEvents.CONNECTION_STATS,\\r\\n        listener);\\r\\n};\\r\\n\\r\\nStatistics.prototype.addByteSentStatsListener = function(listener) {\\r\\n    this.eventEmitter.on(StatisticsEvents.BYTE_SENT_STATS, listener);\\r\\n};\\r\\n\\r\\nStatistics.prototype.removeByteSentStatsListener = function(listener) {\\r\\n    this.eventEmitter.removeListener(StatisticsEvents.BYTE_SENT_STATS,\\r\\n        listener);\\r\\n};\\r\\n\\r\\nStatistics.prototype.dispose = function() {\\r\\n    try {\\r\\n        // NOTE Before reading this please see the comment in stopCallStats...\\r\\n        //\\r\\n        // Here we prevent from emitting the event twice in case it will be\\r\\n        // triggered from stopCallStats.\\r\\n        // If the event is triggered from here it means that the logs will not\\r\\n        // be submitted anyway (because there is no CallStats instance), but\\r\\n        // we're doing that for the sake of some kind of consistency.\\r\\n        if (!this.callsStatsInstances.size) {\\r\\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\\r\\n        }\\r\\n        for (const callStats of this.callsStatsInstances.values()) {\\r\\n            this.stopCallStats(callStats.tpc);\\r\\n        }\\r\\n        for (const tpcId of this.rtpStatsMap.keys()) {\\r\\n            this._stopRemoteStats(tpcId);\\r\\n        }\\r\\n        if (this.eventEmitter) {\\r\\n            this.eventEmitter.removeAllListeners();\\r\\n        }\\r\\n    } finally {\\r\\n        Statistics.instances.delete(this);\\r\\n    }\\r\\n};\\r\\n\\r\\nStatistics.stopLocalStats = function(stream) {\\r\\n    if (!Statistics.audioLevelsEnabled) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    for (let i = 0; i < Statistics.localStats.length; i++) {\\r\\n        if (Statistics.localStats[i].stream === stream) {\\r\\n            const localStats = Statistics.localStats.splice(i, 1);\\r\\n\\r\\n            localStats[0].stop();\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stops remote RTP stats for given peerconnection ID.\\r\\n * @param {string} tpcId {@link TraceablePeerConnection.id}\\r\\n * @private\\r\\n */\\r\\nStatistics.prototype._stopRemoteStats = function(tpcId) {\\r\\n    const rtpStats = this.rtpStatsMap.get(tpcId);\\r\\n\\r\\n    if (rtpStats) {\\r\\n        rtpStats.stop();\\r\\n        this.rtpStatsMap.delete(tpcId);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stops collecting RTP stats for given peerconnection\\r\\n * @param {TraceablePeerConnection} tpc\\r\\n */\\r\\nStatistics.prototype.stopRemoteStats = function(tpc) {\\r\\n    this._stopRemoteStats(tpc.id);\\r\\n};\\r\\n\\r\\n// CALSTATS METHODS\\r\\n\\r\\n/**\\r\\n * Initializes the callstats.io API.\\r\\n * @param {TraceablePeerConnection} tpc the {@link TraceablePeerConnection}\\r\\n * instance for which CalStats will be started.\\r\\n * @param {string} remoteUserID\\r\\n */\\r\\nStatistics.prototype.startCallStats = function(tpc, remoteUserID) {\\r\\n    if (!this.callStatsIntegrationEnabled) {\\r\\n        return;\\r\\n    } else if (this.callsStatsInstances.has(tpc.id)) {\\r\\n        logger.error('CallStats instance for ${tpc} exists already');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    logger.info(`Starting CallStats for ${tpc}...`);\\r\\n\\r\\n    const newInstance\\r\\n        = new CallStats(\\r\\n            tpc,\\r\\n            {\\r\\n                confID: this._getCallStatsConfID(),\\r\\n                remoteUserID\\r\\n            });\\r\\n\\r\\n    this.callsStatsInstances.set(tpc.id, newInstance);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Obtains the list of *all* {@link CallStats} instances collected from every\\r\\n * valid {@link Statistics} instance.\\r\\n * @return {Set<CallStats>}\\r\\n * @private\\r\\n */\\r\\nStatistics._getAllCallStatsInstances = function() {\\r\\n    const csInstances = new Set();\\r\\n\\r\\n    for (const statistics of Statistics.instances) {\\r\\n        for (const cs of statistics.callsStatsInstances.values()) {\\r\\n            csInstances.add(cs);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return csInstances;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Constructs the CallStats conference ID based on the options currently\\r\\n * configured in this instance.\\r\\n * @return {string}\\r\\n * @private\\r\\n */\\r\\nStatistics.prototype._getCallStatsConfID = function() {\\r\\n    // The conference ID is case sensitive!!!\\r\\n    return this.options.callStatsConfIDNamespace\\r\\n        ? `${this.options.callStatsConfIDNamespace}/${this.options.roomName}`\\r\\n        : this.options.roomName;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes the callstats.io instances.\\r\\n */\\r\\nStatistics.prototype.stopCallStats = function(tpc) {\\r\\n    const callStatsInstance = this.callsStatsInstances.get(tpc.id);\\r\\n\\r\\n    if (callStatsInstance) {\\r\\n        // FIXME the original purpose of adding BEFORE_DISPOSED event was to be\\r\\n        // able to submit the last log batch from jitsi-meet to CallStats. After\\r\\n        // recent changes we dispose the CallStats earlier\\r\\n        // (before Statistics.dispose), so we need to emit this event here to\\r\\n        // give this last chance for final log batch submission.\\r\\n        //\\r\\n        // Eventually there should be a separate module called \\\"log storage\\\"\\r\\n        // which should emit proper events when it's underlying\\r\\n        // CallStats instance is going away.\\r\\n        if (this.callsStatsInstances.size === 1) {\\r\\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\\r\\n        }\\r\\n        this.callsStatsInstances.delete(tpc.id);\\r\\n\\r\\n        // The fabric needs to be terminated when being stopped\\r\\n        callStatsInstance.sendTerminateEvent();\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns true if the callstats integration is enabled, otherwise returns\\r\\n * false.\\r\\n *\\r\\n * @returns true if the callstats integration is enabled, otherwise returns\\r\\n * false.\\r\\n */\\r\\nStatistics.prototype.isCallstatsEnabled = function() {\\r\\n    return this.callStatsIntegrationEnabled;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Logs either resume or hold event for the given peer connection.\\r\\n * @param {TraceablePeerConnection} tpc the connection for which event will be\\r\\n * reported\\r\\n * @param {boolean} isResume true for resume or false for hold\\r\\n */\\r\\nStatistics.prototype.sendConnectionResumeOrHoldEvent = function(tpc, isResume) {\\r\\n    const instance = this.callsStatsInstances.get(tpc.id);\\r\\n\\r\\n    if (instance) {\\r\\n        instance.sendResumeOrHoldEvent(isResume);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies CallStats and analytics (if present) for ice connection failed\\r\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\r\\n */\\r\\nStatistics.prototype.sendIceConnectionFailedEvent = function(tpc) {\\r\\n    const instance = this.callsStatsInstances.get(tpc.id);\\r\\n\\r\\n    if (instance) {\\r\\n        instance.sendIceConnectionFailedEvent();\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies CallStats for mute events\\r\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\r\\n * @param {boolean} muted true for muted and false for not muted\\r\\n * @param {String} type \\\"audio\\\"/\\\"video\\\"\\r\\n */\\r\\nStatistics.prototype.sendMuteEvent = function(tpc, muted, type) {\\r\\n    const instance = tpc && this.callsStatsInstances.get(tpc.id);\\r\\n\\r\\n    CallStats.sendMuteEvent(muted, type, instance);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies CallStats for screen sharing events\\r\\n * @param start {boolean} true for starting screen sharing and\\r\\n * false for not stopping\\r\\n * @param {string|null} ssrc - optional ssrc value, used only when\\r\\n * starting screen sharing.\\r\\n */\\r\\nStatistics.prototype.sendScreenSharingEvent\\r\\n    = function(start, ssrc) {\\r\\n        for (const cs of this.callsStatsInstances.values()) {\\r\\n            cs.sendScreenSharingEvent(start, ssrc);\\r\\n        }\\r\\n    };\\r\\n\\r\\n/**\\r\\n * Notifies the statistics module that we are now the dominant speaker of the\\r\\n * conference.\\r\\n * @param {String} roomJid - The room jid where the speaker event occurred.\\r\\n */\\r\\nStatistics.prototype.sendDominantSpeakerEvent = function(roomJid) {\\r\\n    for (const cs of this.callsStatsInstances.values()) {\\r\\n        cs.sendDominantSpeakerEvent();\\r\\n    }\\r\\n\\r\\n    // xmpp send dominant speaker event\\r\\n    this.xmpp.sendDominantSpeakerEvent(roomJid);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies about active device.\\r\\n * @param {{deviceList: {String:String}}} devicesData - list of devices with\\r\\n *      their data\\r\\n */\\r\\nStatistics.sendActiveDeviceListEvent = function(devicesData) {\\r\\n    const globalSet = Statistics._getAllCallStatsInstances();\\r\\n\\r\\n    if (globalSet.size) {\\r\\n        for (const cs of globalSet) {\\r\\n            CallStats.sendActiveDeviceListEvent(devicesData, cs);\\r\\n        }\\r\\n    } else {\\r\\n        CallStats.sendActiveDeviceListEvent(devicesData, null);\\r\\n    }\\r\\n};\\r\\n\\r\\n/* eslint-disable max-params */\\r\\n\\r\\n/**\\r\\n * Lets the underlying statistics module know where is given SSRC rendered by\\r\\n * providing renderer tag ID.\\r\\n * @param {TraceablePeerConnection} tpc the connection to which the stream\\r\\n * belongs to\\r\\n * @param {number} ssrc the SSRC of the stream\\r\\n * @param {boolean} isLocal\\r\\n * @param {string} userId\\r\\n * @param {string} usageLabel  meaningful usage label of this stream like\\r\\n *        'microphone', 'camera' or 'screen'.\\r\\n * @param {string} containerId the id of media 'audio' or 'video' tag which\\r\\n *        renders the stream.\\r\\n */\\r\\nStatistics.prototype.associateStreamWithVideoTag = function(\\r\\n        tpc,\\r\\n        ssrc,\\r\\n        isLocal,\\r\\n        userId,\\r\\n        usageLabel,\\r\\n        containerId) {\\r\\n    const instance = this.callsStatsInstances.get(tpc.id);\\r\\n\\r\\n    if (instance) {\\r\\n        instance.associateStreamWithVideoTag(\\r\\n            ssrc,\\r\\n            isLocal,\\r\\n            userId,\\r\\n            usageLabel,\\r\\n            containerId);\\r\\n    }\\r\\n};\\r\\n\\r\\n/* eslint-enable max-params */\\r\\n\\r\\n/**\\r\\n * Notifies CallStats that getUserMedia failed.\\r\\n *\\r\\n * @param {Error} e error to send\\r\\n */\\r\\nStatistics.sendGetUserMediaFailed = function(e) {\\r\\n    const error\\r\\n        = e instanceof JitsiTrackError\\r\\n            ? formatJitsiTrackErrorForCallStats(e) : e;\\r\\n    const globalSet = Statistics._getAllCallStatsInstances();\\r\\n\\r\\n    if (globalSet.size) {\\r\\n        for (const cs of globalSet) {\\r\\n            CallStats.sendGetUserMediaFailed(error, cs);\\r\\n        }\\r\\n    } else {\\r\\n        CallStats.sendGetUserMediaFailed(error, null);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies CallStats that peer connection failed to create offer.\\r\\n *\\r\\n * @param {Error} e error to send\\r\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\r\\n */\\r\\nStatistics.prototype.sendCreateOfferFailed = function(e, tpc) {\\r\\n    const instance = this.callsStatsInstances.get(tpc.id);\\r\\n\\r\\n    if (instance) {\\r\\n        instance.sendCreateOfferFailed(e);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies CallStats that peer connection failed to create answer.\\r\\n *\\r\\n * @param {Error} e error to send\\r\\n * @param {TraceablePeerConnection} tpc connection on which failure occured.\\r\\n */\\r\\nStatistics.prototype.sendCreateAnswerFailed = function(e, tpc) {\\r\\n    const instance = this.callsStatsInstances.get(tpc.id);\\r\\n\\r\\n    if (instance) {\\r\\n        instance.sendCreateAnswerFailed(e);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies CallStats that peer connection failed to set local description.\\r\\n *\\r\\n * @param {Error} e error to send\\r\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\r\\n */\\r\\nStatistics.prototype.sendSetLocalDescFailed = function(e, tpc) {\\r\\n    const instance = this.callsStatsInstances.get(tpc.id);\\r\\n\\r\\n    if (instance) {\\r\\n        instance.sendSetLocalDescFailed(e);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies CallStats that peer connection failed to set remote description.\\r\\n *\\r\\n * @param {Error} e error to send\\r\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\r\\n */\\r\\nStatistics.prototype.sendSetRemoteDescFailed = function(e, tpc) {\\r\\n    const instance = this.callsStatsInstances.get(tpc.id);\\r\\n\\r\\n    if (instance) {\\r\\n        instance.sendSetRemoteDescFailed(e);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies CallStats that peer connection failed to add ICE candidate.\\r\\n *\\r\\n * @param {Error} e error to send\\r\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\r\\n */\\r\\nStatistics.prototype.sendAddIceCandidateFailed = function(e, tpc) {\\r\\n    const instance = this.callsStatsInstances.get(tpc.id);\\r\\n\\r\\n    if (instance) {\\r\\n        instance.sendAddIceCandidateFailed(e);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds to CallStats an application log.\\r\\n *\\r\\n * @param {String} m a log message to send or an {Error} object to be reported\\r\\n */\\r\\nStatistics.sendLog = function(m) {\\r\\n    const globalSubSet = new Set();\\r\\n\\r\\n    // FIXME we don't want to duplicate logs over P2P instance, but\\r\\n    // here we should go over instances and call this method for each\\r\\n    // unique conference ID rather than selecting the first one.\\r\\n    // We don't have such use case though, so leaving as is for now.\\r\\n    for (const stats of Statistics.instances) {\\r\\n        if (stats.callsStatsInstances.size) {\\r\\n            globalSubSet.add(stats.callsStatsInstances.values().next().value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (globalSubSet.size) {\\r\\n        for (const csPerStats of globalSubSet) {\\r\\n            CallStats.sendApplicationLog(m, csPerStats);\\r\\n        }\\r\\n    } else {\\r\\n        CallStats.sendApplicationLog(m, null);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sends the given feedback through CallStats.\\r\\n *\\r\\n * @param overall an integer between 1 and 5 indicating the user's rating.\\r\\n * @param comment the comment from the user.\\r\\n * @returns {Promise} Resolves when callstats feedback has been submitted\\r\\n * successfully.\\r\\n */\\r\\nStatistics.prototype.sendFeedback = function(overall, comment) {\\r\\n    // Statistics.analytics.sendEvent is currently fire and forget, without\\r\\n    // confirmation of successful send.\\r\\n    Statistics.analytics.sendEvent(\\r\\n        FEEDBACK,\\r\\n        {\\r\\n            rating: overall,\\r\\n            comment\\r\\n        });\\r\\n\\r\\n    return CallStats.sendFeedback(this._getCallStatsConfID(), overall, comment);\\r\\n};\\r\\n\\r\\nStatistics.LOCAL_JID = require('../../service/statistics/constants').LOCAL_JID;\\r\\n\\r\\n/**\\r\\n * Reports global error to CallStats.\\r\\n *\\r\\n * @param {Error} error\\r\\n */\\r\\nStatistics.reportGlobalError = function(error) {\\r\\n    if (error instanceof JitsiTrackError && error.gum) {\\r\\n        Statistics.sendGetUserMediaFailed(error);\\r\\n    } else {\\r\\n        Statistics.sendLog(error);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sends event to analytics and logs a message to the logger/console. Console\\r\\n * messages might also be logged to callstats automatically.\\r\\n *\\r\\n * @param {string | Object} event the event name, or an object which\\r\\n * represents the entire event.\\r\\n * @param {Object} properties properties to attach to the event (if an event\\r\\n * name as opposed to an event object is provided).\\r\\n */\\r\\nStatistics.sendAnalyticsAndLog = function(event, properties = {}) {\\r\\n    if (!event) {\\r\\n        logger.warn('No event or event name given.');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    let eventToLog;\\r\\n\\r\\n    // Also support an API with a single object as an event.\\r\\n    if (typeof event === 'object') {\\r\\n        eventToLog = event;\\r\\n    } else {\\r\\n        eventToLog = {\\r\\n            name: event,\\r\\n            properties\\r\\n        };\\r\\n    }\\r\\n\\r\\n    logger.log(JSON.stringify(eventToLog));\\r\\n\\r\\n    // We do this last, because it may modify the object which is passed.\\r\\n    this.analytics.sendEvent(event, properties);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sends event to analytics.\\r\\n *\\r\\n * @param {string | Object} eventName the event name, or an object which\\r\\n * represents the entire event.\\r\\n * @param {Object} properties properties to attach to the event\\r\\n */\\r\\nStatistics.sendAnalytics = function(eventName, properties = {}) {\\r\\n    this.analytics.sendEvent(eventName, properties);\\r\\n};\\r\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\nimport RandomUtil from '../util/RandomUtil';\\r\\nimport browser from '../browser';\\r\\n\\r\\nconst SDPUtil = {\\r\\n    filterSpecialChars(text) {\\r\\n        // XXX Neither one of the falsy values (e.g. null, undefined, false,\\r\\n        // \\\"\\\", etc.) \\\"contain\\\" special chars.\\r\\n        // eslint-disable-next-line no-useless-escape\\r\\n        return text ? text.replace(/[\\\\\\\\\\\\/\\\\{,\\\\}\\\\+]/g, '') : text;\\r\\n    },\\r\\n    iceparams(mediadesc, sessiondesc) {\\r\\n        let data = null;\\r\\n        let pwd, ufrag;\\r\\n\\r\\n        if ((ufrag = SDPUtil.findLine(mediadesc, 'a=ice-ufrag:', sessiondesc))\\r\\n                && (pwd\\r\\n                    = SDPUtil.findLine(\\r\\n                        mediadesc,\\r\\n                        'a=ice-pwd:',\\r\\n                        sessiondesc))) {\\r\\n            data = {\\r\\n                ufrag: SDPUtil.parseICEUfrag(ufrag),\\r\\n                pwd: SDPUtil.parseICEPwd(pwd)\\r\\n            };\\r\\n        }\\r\\n\\r\\n        return data;\\r\\n    },\\r\\n    parseICEUfrag(line) {\\r\\n        return line.substring(12);\\r\\n    },\\r\\n    buildICEUfrag(frag) {\\r\\n        return `a=ice-ufrag:${frag}`;\\r\\n    },\\r\\n    parseICEPwd(line) {\\r\\n        return line.substring(10);\\r\\n    },\\r\\n    buildICEPwd(pwd) {\\r\\n        return `a=ice-pwd:${pwd}`;\\r\\n    },\\r\\n    parseMID(line) {\\r\\n        return line.substring(6);\\r\\n    },\\r\\n    parseMLine(line) {\\r\\n        const data = {};\\r\\n        const parts = line.substring(2).split(' ');\\r\\n\\r\\n        data.media = parts.shift();\\r\\n        data.port = parts.shift();\\r\\n        data.proto = parts.shift();\\r\\n        if (parts[parts.length - 1] === '') { // trailing whitespace\\r\\n            parts.pop();\\r\\n        }\\r\\n        data.fmt = parts;\\r\\n\\r\\n        return data;\\r\\n    },\\r\\n    buildMLine(mline) {\\r\\n        return (\\r\\n            `m=${mline.media} ${mline.port} ${mline.proto} ${\\r\\n                mline.fmt.join(' ')}`);\\r\\n    },\\r\\n    parseRTPMap(line) {\\r\\n        const data = {};\\r\\n        let parts = line.substring(9).split(' ');\\r\\n\\r\\n        data.id = parts.shift();\\r\\n        parts = parts[0].split('/');\\r\\n        data.name = parts.shift();\\r\\n        data.clockrate = parts.shift();\\r\\n        data.channels = parts.length ? parts.shift() : '1';\\r\\n\\r\\n        return data;\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Parses SDP line \\\"a=sctpmap:...\\\" and extracts SCTP port from it.\\r\\n     * @param line eg. \\\"a=sctpmap:5000 webrtc-datachannel\\\"\\r\\n     * @returns [SCTP port number, protocol, streams]\\r\\n     */\\r\\n    parseSCTPMap(line) {\\r\\n        const parts = line.substring(10).split(' ');\\r\\n        const sctpPort = parts[0];\\r\\n        const protocol = parts[1];\\r\\n\\r\\n        // Stream count is optional\\r\\n        const streamCount = parts.length > 2 ? parts[2] : null;\\r\\n\\r\\n\\r\\n        return [ sctpPort, protocol, streamCount ];// SCTP port\\r\\n    },\\r\\n    buildRTPMap(el) {\\r\\n        let line\\r\\n            = `a=rtpmap:${el.getAttribute('id')} ${el.getAttribute('name')}/${\\r\\n                el.getAttribute('clockrate')}`;\\r\\n\\r\\n        if (el.getAttribute('channels')\\r\\n            && el.getAttribute('channels') !== '1') {\\r\\n            line += `/${el.getAttribute('channels')}`;\\r\\n        }\\r\\n\\r\\n        return line;\\r\\n    },\\r\\n    parseCrypto(line) {\\r\\n        const data = {};\\r\\n        const parts = line.substring(9).split(' ');\\r\\n\\r\\n        data.tag = parts.shift();\\r\\n        data['crypto-suite'] = parts.shift();\\r\\n        data['key-params'] = parts.shift();\\r\\n        if (parts.length) {\\r\\n            data['session-params'] = parts.join(' ');\\r\\n        }\\r\\n\\r\\n        return data;\\r\\n    },\\r\\n    parseFingerprint(line) { // RFC 4572\\r\\n        const data = {};\\r\\n        const parts = line.substring(14).split(' ');\\r\\n\\r\\n        data.hash = parts.shift();\\r\\n        data.fingerprint = parts.shift();\\r\\n\\r\\n        // TODO assert that fingerprint satisfies 2UHEX *(\\\":\\\" 2UHEX) ?\\r\\n        return data;\\r\\n    },\\r\\n    parseFmtp(line) {\\r\\n        const data = [];\\r\\n        let parts = line.split(' ');\\r\\n\\r\\n        parts.shift();\\r\\n        parts = parts.join(' ').split(';');\\r\\n        for (let i = 0; i < parts.length; i++) {\\r\\n            let key = parts[i].split('=')[0];\\r\\n\\r\\n            while (key.length && key[0] === ' ') {\\r\\n                key = key.substring(1);\\r\\n            }\\r\\n            const value = parts[i].split('=')[1];\\r\\n\\r\\n            if (key && value) {\\r\\n                data.push({ name: key,\\r\\n                    value });\\r\\n            } else if (key) {\\r\\n                // rfc 4733 (DTMF) style stuff\\r\\n                data.push({ name: '',\\r\\n                    value: key });\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return data;\\r\\n    },\\r\\n    parseICECandidate(line) {\\r\\n        const candidate = {};\\r\\n        const elems = line.split(' ');\\r\\n\\r\\n        candidate.foundation = elems[0].substring(12);\\r\\n        candidate.component = elems[1];\\r\\n        candidate.protocol = elems[2].toLowerCase();\\r\\n        candidate.priority = elems[3];\\r\\n        candidate.ip = elems[4];\\r\\n        candidate.port = elems[5];\\r\\n\\r\\n        // elems[6] => \\\"typ\\\"\\r\\n        candidate.type = elems[7];\\r\\n        candidate.generation = 0; // default value, may be overwritten below\\r\\n        for (let i = 8; i < elems.length; i += 2) {\\r\\n            switch (elems[i]) {\\r\\n            case 'raddr':\\r\\n                candidate['rel-addr'] = elems[i + 1];\\r\\n                break;\\r\\n            case 'rport':\\r\\n                candidate['rel-port'] = elems[i + 1];\\r\\n                break;\\r\\n            case 'generation':\\r\\n                candidate.generation = elems[i + 1];\\r\\n                break;\\r\\n            case 'tcptype':\\r\\n                candidate.tcptype = elems[i + 1];\\r\\n                break;\\r\\n            default: // TODO\\r\\n                logger.log(\\r\\n                    `parseICECandidate not translating \\\"${\\r\\n                        elems[i]}\\\" = \\\"${elems[i + 1]}\\\"`);\\r\\n            }\\r\\n        }\\r\\n        candidate.network = '1';\\r\\n\\r\\n        // not applicable to SDP -- FIXME: should be unique, not just random\\r\\n        // eslint-disable-next-line newline-per-chained-call\\r\\n        candidate.id = Math.random().toString(36).substr(2, 10);\\r\\n\\r\\n        return candidate;\\r\\n    },\\r\\n    buildICECandidate(cand) {\\r\\n        let line = [\\r\\n            `a=candidate:${cand.foundation}`,\\r\\n            cand.component,\\r\\n            cand.protocol,\\r\\n            cand.priority,\\r\\n            cand.ip,\\r\\n            cand.port,\\r\\n            'typ',\\r\\n            cand.type\\r\\n        ].join(' ');\\r\\n\\r\\n        line += ' ';\\r\\n        switch (cand.type) {\\r\\n        case 'srflx':\\r\\n        case 'prflx':\\r\\n        case 'relay':\\r\\n            if (cand.hasOwnAttribute('rel-addr')\\r\\n                    && cand.hasOwnAttribute('rel-port')) {\\r\\n                line += 'raddr';\\r\\n                line += ' ';\\r\\n                line += cand['rel-addr'];\\r\\n                line += ' ';\\r\\n                line += 'rport';\\r\\n                line += ' ';\\r\\n                line += cand['rel-port'];\\r\\n                line += ' ';\\r\\n            }\\r\\n            break;\\r\\n        }\\r\\n        if (cand.hasOwnAttribute('tcptype')) {\\r\\n            line += 'tcptype';\\r\\n            line += ' ';\\r\\n            line += cand.tcptype;\\r\\n            line += ' ';\\r\\n        }\\r\\n        line += 'generation';\\r\\n        line += ' ';\\r\\n        line += cand.hasOwnAttribute('generation') ? cand.generation : '0';\\r\\n\\r\\n        return line;\\r\\n    },\\r\\n    parseSSRC(desc) {\\r\\n        // proprietary mapping of a=ssrc lines\\r\\n        // TODO: see \\\"Jingle RTP Source Description\\\" by Juberti and P. Thatcher\\r\\n        // on google docs and parse according to that\\r\\n        const data = new Map();\\r\\n        const lines = desc.split('\\\\r\\\\n');\\r\\n\\r\\n        for (let i = 0; i < lines.length; i++) {\\r\\n            if (lines[i].substring(0, 7) === 'a=ssrc:') {\\r\\n                // FIXME: Use regex to smartly find the ssrc.\\r\\n                const ssrc = lines[i].split('a=ssrc:')[1].split(' ')[0];\\r\\n\\r\\n                if (!data.get(ssrc)) {\\r\\n                    data.set(ssrc, []);\\r\\n                }\\r\\n\\r\\n                data.get(ssrc).push(lines[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return data;\\r\\n    },\\r\\n    parseRTCPFB(line) {\\r\\n        const parts = line.substr(10).split(' ');\\r\\n        const data = {};\\r\\n\\r\\n        data.pt = parts.shift();\\r\\n        data.type = parts.shift();\\r\\n        data.params = parts;\\r\\n\\r\\n        return data;\\r\\n    },\\r\\n    parseExtmap(line) {\\r\\n        const parts = line.substr(9).split(' ');\\r\\n        const data = {};\\r\\n\\r\\n        data.value = parts.shift();\\r\\n        if (data.value.indexOf('/') === -1) {\\r\\n            data.direction = 'both';\\r\\n        } else {\\r\\n            data.direction = data.value.substr(data.value.indexOf('/') + 1);\\r\\n            data.value = data.value.substr(0, data.value.indexOf('/'));\\r\\n        }\\r\\n        data.uri = parts.shift();\\r\\n        data.params = parts;\\r\\n\\r\\n        return data;\\r\\n    },\\r\\n    findLine(haystack, needle, sessionpart) {\\r\\n        let lines = haystack.split('\\\\r\\\\n');\\r\\n\\r\\n        for (let i = 0; i < lines.length; i++) {\\r\\n            if (lines[i].substring(0, needle.length) === needle) {\\r\\n                return lines[i];\\r\\n            }\\r\\n        }\\r\\n        if (!sessionpart) {\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        // search session part\\r\\n        lines = sessionpart.split('\\\\r\\\\n');\\r\\n        for (let j = 0; j < lines.length; j++) {\\r\\n            if (lines[j].substring(0, needle.length) === needle) {\\r\\n                return lines[j];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    },\\r\\n    findLines(haystack, needle, sessionpart) {\\r\\n        let lines = haystack.split('\\\\r\\\\n');\\r\\n        const needles = [];\\r\\n\\r\\n        for (let i = 0; i < lines.length; i++) {\\r\\n            if (lines[i].substring(0, needle.length) === needle) {\\r\\n                needles.push(lines[i]);\\r\\n            }\\r\\n        }\\r\\n        if (needles.length || !sessionpart) {\\r\\n            return needles;\\r\\n        }\\r\\n\\r\\n        // search session part\\r\\n        lines = sessionpart.split('\\\\r\\\\n');\\r\\n        for (let j = 0; j < lines.length; j++) {\\r\\n            if (lines[j].substring(0, needle.length) === needle) {\\r\\n                needles.push(lines[j]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return needles;\\r\\n    },\\r\\n    candidateToJingle(line) {\\r\\n        // a=candidate:2979166662 1 udp 2113937151 192.168.2.100 57698 typ host\\r\\n        // generation 0\\r\\n        //      <candidate component=... foundation=... generation=... id=...\\r\\n        // ip=... network=... port=... priority=... protocol=... type=.../>\\r\\n        if (line.indexOf('candidate:') === 0) {\\r\\n            // eslint-disable-next-line no-param-reassign\\r\\n            line = `a=${line}`;\\r\\n        } else if (line.substring(0, 12) !== 'a=candidate:') {\\r\\n            logger.log(\\r\\n                'parseCandidate called with a line that is not a candidate'\\r\\n                    + ' line');\\r\\n            logger.log(line);\\r\\n\\r\\n            return null;\\r\\n        }\\r\\n        if (line.substring(line.length - 2) === '\\\\r\\\\n') { // chomp it\\r\\n            // eslint-disable-next-line no-param-reassign\\r\\n            line = line.substring(0, line.length - 2);\\r\\n        }\\r\\n        const candidate = {};\\r\\n        const elems = line.split(' ');\\r\\n\\r\\n        if (elems[6] !== 'typ') {\\r\\n            logger.log('did not find typ in the right place');\\r\\n            logger.log(line);\\r\\n\\r\\n            return null;\\r\\n        }\\r\\n        candidate.foundation = elems[0].substring(12);\\r\\n        candidate.component = elems[1];\\r\\n        candidate.protocol = elems[2].toLowerCase();\\r\\n        candidate.priority = elems[3];\\r\\n        candidate.ip = elems[4];\\r\\n        candidate.port = elems[5];\\r\\n\\r\\n        // elems[6] => \\\"typ\\\"\\r\\n        candidate.type = elems[7];\\r\\n\\r\\n        candidate.generation = '0'; // default, may be overwritten below\\r\\n        for (let i = 8; i < elems.length; i += 2) {\\r\\n            switch (elems[i]) {\\r\\n            case 'raddr':\\r\\n                candidate['rel-addr'] = elems[i + 1];\\r\\n                break;\\r\\n            case 'rport':\\r\\n                candidate['rel-port'] = elems[i + 1];\\r\\n                break;\\r\\n            case 'generation':\\r\\n                candidate.generation = elems[i + 1];\\r\\n                break;\\r\\n            case 'tcptype':\\r\\n                candidate.tcptype = elems[i + 1];\\r\\n                break;\\r\\n            default: // TODO\\r\\n                logger.log(`not translating \\\"${elems[i]}\\\" = \\\"${elems[i + 1]}\\\"`);\\r\\n            }\\r\\n        }\\r\\n        candidate.network = '1';\\r\\n\\r\\n        // not applicable to SDP -- FIXME: should be unique, not just random\\r\\n        // eslint-disable-next-line newline-per-chained-call\\r\\n        candidate.id = Math.random().toString(36).substr(2, 10);\\r\\n\\r\\n        return candidate;\\r\\n    },\\r\\n    candidateFromJingle(cand) {\\r\\n        let line = 'a=candidate:';\\r\\n\\r\\n        line += cand.getAttribute('foundation');\\r\\n        line += ' ';\\r\\n        line += cand.getAttribute('component');\\r\\n        line += ' ';\\r\\n\\r\\n        let protocol = cand.getAttribute('protocol');\\r\\n\\r\\n        // use tcp candidates for FF\\r\\n\\r\\n        if (browser.isFirefox() && protocol.toLowerCase() === 'ssltcp') {\\r\\n            protocol = 'tcp';\\r\\n        }\\r\\n\\r\\n        line += protocol; // .toUpperCase(); // chrome M23 doesn't like this\\r\\n        line += ' ';\\r\\n        line += cand.getAttribute('priority');\\r\\n        line += ' ';\\r\\n        line += cand.getAttribute('ip');\\r\\n        line += ' ';\\r\\n        line += cand.getAttribute('port');\\r\\n        line += ' ';\\r\\n        line += 'typ';\\r\\n        line += ` ${cand.getAttribute('type')}`;\\r\\n        line += ' ';\\r\\n        switch (cand.getAttribute('type')) {\\r\\n        case 'srflx':\\r\\n        case 'prflx':\\r\\n        case 'relay':\\r\\n            if (cand.getAttribute('rel-addr')\\r\\n                    && cand.getAttribute('rel-port')) {\\r\\n                line += 'raddr';\\r\\n                line += ' ';\\r\\n                line += cand.getAttribute('rel-addr');\\r\\n                line += ' ';\\r\\n                line += 'rport';\\r\\n                line += ' ';\\r\\n                line += cand.getAttribute('rel-port');\\r\\n                line += ' ';\\r\\n            }\\r\\n            break;\\r\\n        }\\r\\n        if (protocol.toLowerCase() === 'tcp') {\\r\\n            line += 'tcptype';\\r\\n            line += ' ';\\r\\n            line += cand.getAttribute('tcptype');\\r\\n            line += ' ';\\r\\n        }\\r\\n        line += 'generation';\\r\\n        line += ' ';\\r\\n        line += cand.getAttribute('generation') || '0';\\r\\n\\r\\n        return `${line}\\\\r\\\\n`;\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Parse the 'most' primary video ssrc from the given m line\\r\\n     * @param {object} mLine object as parsed from transform.parse\\r\\n     * @return {number} the primary video ssrc from the given m line\\r\\n     */\\r\\n    parsePrimaryVideoSsrc(videoMLine) {\\r\\n        const numSsrcs = videoMLine.ssrcs\\r\\n            .map(ssrcInfo => ssrcInfo.id)\\r\\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\\r\\n            .length;\\r\\n        const numGroups\\r\\n            = (videoMLine.ssrcGroups && videoMLine.ssrcGroups.length) || 0;\\r\\n\\r\\n        if (numSsrcs > 1 && numGroups === 0) {\\r\\n            // Ambiguous, can't figure out the primary\\r\\n            return;\\r\\n        }\\r\\n        let primarySsrc = null;\\r\\n\\r\\n        if (numSsrcs === 1) {\\r\\n            primarySsrc = videoMLine.ssrcs[0].id;\\r\\n        } else if (numSsrcs === 2) {\\r\\n            // Can figure it out if there's an FID group\\r\\n            const fidGroup\\r\\n                = videoMLine.ssrcGroups.find(\\r\\n                    group => group.semantics === 'FID');\\r\\n\\r\\n            if (fidGroup) {\\r\\n                primarySsrc = fidGroup.ssrcs.split(' ')[0];\\r\\n            }\\r\\n        } else if (numSsrcs >= 3) {\\r\\n            // Can figure it out if there's a sim group\\r\\n            const simGroup\\r\\n                = videoMLine.ssrcGroups.find(\\r\\n                    group => group.semantics === 'SIM');\\r\\n\\r\\n            if (simGroup) {\\r\\n                primarySsrc = simGroup.ssrcs.split(' ')[0];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return primarySsrc;\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Generate an ssrc\\r\\n     * @returns {number} an ssrc\\r\\n     */\\r\\n    generateSsrc() {\\r\\n        return RandomUtil.randomInt(1, 0xffffffff);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Get an attribute for the given ssrc with the given attributeName\\r\\n     *  from the given mline\\r\\n     * @param {object} mLine an mLine object as parsed from transform.parse\\r\\n     * @param {number} ssrc the ssrc for which an attribtue is desired\\r\\n     * @param {string} attributeName the name of the desired attribute\\r\\n     * @returns {string} the value corresponding to the given ssrc\\r\\n     *  and attributeName\\r\\n     */\\r\\n    getSsrcAttribute(mLine, ssrc, attributeName) {\\r\\n        for (let i = 0; i < mLine.ssrcs.length; ++i) {\\r\\n            const ssrcLine = mLine.ssrcs[i];\\r\\n\\r\\n            if (ssrcLine.id === ssrc\\r\\n                && ssrcLine.attribute === attributeName) {\\r\\n                return ssrcLine.value;\\r\\n            }\\r\\n        }\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Parses the ssrcs from the group sdp line and\\r\\n     *  returns them as a list of numbers\\r\\n     * @param {object} the ssrcGroup object as parsed from\\r\\n     *  sdp-transform\\r\\n     * @returns {list<number>} a list of the ssrcs in the group\\r\\n     *  parsed as numbers\\r\\n     */\\r\\n    parseGroupSsrcs(ssrcGroup) {\\r\\n        return ssrcGroup\\r\\n            .ssrcs\\r\\n            .split(' ')\\r\\n            .map(ssrcStr => parseInt(ssrcStr, 10));\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Get the mline of the given type from the given sdp\\r\\n     * @param {object} sdp sdp as parsed from transform.parse\\r\\n     * @param {string} type the type of the desired mline (e.g. \\\"video\\\")\\r\\n     * @returns {object} a media object\\r\\n     */\\r\\n    getMedia(sdp, type) {\\r\\n        return sdp.media.find(m => m.type === type);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Extracts the ICE username fragment from an SDP string.\\r\\n     * @param {string} sdp the SDP in raw text format\\r\\n     */\\r\\n    getUfrag(sdp) {\\r\\n        const ufragLines\\r\\n            = sdp.split('\\\\n').filter(line => line.startsWith('a=ice-ufrag:'));\\r\\n\\r\\n        if (ufragLines.length > 0) {\\r\\n            return ufragLines[0].substr('a=ice-ufrag:'.length);\\r\\n        }\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Sets the given codecName as the preferred codec by\\r\\n     *  moving it to the beginning of the payload types\\r\\n     *  list (modifies the given mline in place).  If there\\r\\n     *  are multiple options within the same codec (multiple h264\\r\\n     *  profiles, for instance), this will prefer the first one\\r\\n     *  that is found.\\r\\n     * @param {object} videoMLine the video mline object from\\r\\n     *  an sdp as parsed by transform.parse\\r\\n     * @param {string} codecName the name of the preferred codec\\r\\n     */\\r\\n    preferVideoCodec(videoMLine, codecName) {\\r\\n        let payloadType = null;\\r\\n\\r\\n        if (!videoMLine || !codecName) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < videoMLine.rtp.length; ++i) {\\r\\n            const rtp = videoMLine.rtp[i];\\r\\n\\r\\n            if (rtp.codec\\r\\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\\r\\n                payloadType = rtp.payload;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        if (payloadType) {\\r\\n            // Call toString() on payloads to get around an issue within\\r\\n            // SDPTransform that sets payloads as a number, instead of a string,\\r\\n            // when there is only one payload.\\r\\n            const payloadTypes\\r\\n                = videoMLine.payloads\\r\\n                    .toString()\\r\\n                    .split(' ')\\r\\n                    .map(p => parseInt(p, 10));\\r\\n            const payloadIndex = payloadTypes.indexOf(payloadType);\\r\\n\\r\\n            payloadTypes.splice(payloadIndex, 1);\\r\\n            payloadTypes.unshift(payloadType);\\r\\n            videoMLine.payloads = payloadTypes.join(' ');\\r\\n        }\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Strips the given codec from the given mline. All related RTX payload\\r\\n     * types are also stripped. If the resulting mline would have no codecs,\\r\\n     * it's disabled.\\r\\n     *\\r\\n     * @param {object} videoMLine the video mline object from an sdp as parsed\\r\\n     * by transform.parse.\\r\\n     * @param {string} codecName the name of the codec which will be stripped.\\r\\n     */\\r\\n    stripVideoCodec(videoMLine, codecName) {\\r\\n        if (!videoMLine || !codecName) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const removePts = [];\\r\\n\\r\\n        for (const rtp of videoMLine.rtp) {\\r\\n            if (rtp.codec\\r\\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\\r\\n                removePts.push(rtp.payload);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (removePts.length > 0) {\\r\\n            // We also need to remove the payload types that are related to RTX\\r\\n            // for the codecs we want to disable.\\r\\n            const rtxApts = removePts.map(item => `apt=${item}`);\\r\\n            const rtxPts = videoMLine.fmtp.filter(\\r\\n                item => rtxApts.indexOf(item.config) !== -1);\\r\\n\\r\\n            removePts.push(...rtxPts.map(item => item.payload));\\r\\n\\r\\n            // Call toString() on payloads to get around an issue within\\r\\n            // SDPTransform that sets payloads as a number, instead of a string,\\r\\n            // when there is only one payload.\\r\\n            const allPts = videoMLine.payloads\\r\\n                .toString()\\r\\n                .split(' ')\\r\\n                .map(Number);\\r\\n            const keepPts = allPts.filter(pt => removePts.indexOf(pt) === -1);\\r\\n\\r\\n            if (keepPts.length === 0) {\\r\\n                // There are no other video codecs, disable the stream.\\r\\n                videoMLine.port = 0;\\r\\n                videoMLine.direction = 'inactive';\\r\\n                videoMLine.payloads = '*';\\r\\n            } else {\\r\\n                videoMLine.payloads = keepPts.join(' ');\\r\\n            }\\r\\n\\r\\n            videoMLine.rtp = videoMLine.rtp.filter(\\r\\n                item => keepPts.indexOf(item.payload) !== -1);\\r\\n            videoMLine.fmtp = videoMLine.fmtp.filter(\\r\\n                item => keepPts.indexOf(item.payload) !== -1);\\r\\n            if (videoMLine.rtcpFb) {\\r\\n                videoMLine.rtcpFb = videoMLine.rtcpFb.filter(\\r\\n                    item => keepPts.indexOf(item.payload) !== -1);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\nexport default SDPUtil;\\r\\n\",\"const RTCEvents = {\\r\\n    /**\\r\\n     * Indicates error while create answer call.\\r\\n     */\\r\\n    CREATE_ANSWER_FAILED: 'rtc.create_answer_failed',\\r\\n\\r\\n    /**\\r\\n     * Indicates error while create offer call.\\r\\n     */\\r\\n    CREATE_OFFER_FAILED: 'rtc.create_offer_failed',\\r\\n    DATA_CHANNEL_OPEN: 'rtc.data_channel_open',\\r\\n    ENDPOINT_CONN_STATUS_CHANGED: 'rtc.endpoint_conn_status_changed',\\r\\n    DOMINANT_SPEAKER_CHANGED: 'rtc.dominant_speaker_changed',\\r\\n    LASTN_ENDPOINT_CHANGED: 'rtc.lastn_endpoint_changed',\\r\\n\\r\\n    /**\\r\\n     * Event emitted when the user granted a permission for the camera / mic.\\r\\n     * Used to keep track of the granted permissions on browsers which don't\\r\\n     * support the Permissions API.\\r\\n     */\\r\\n    GRANTED_PERMISSIONS: 'rtc.granted_permissions',\\r\\n\\r\\n    IS_SELECTED_CHANGED: 'rtc.is_selected_change',\\r\\n\\r\\n    /**\\r\\n     * Event emitted when {@link RTC.setLastN} method is called to update with\\r\\n     * the new value set.\\r\\n     * The first argument is the value passed to {@link RTC.setLastN}.\\r\\n     */\\r\\n    LASTN_VALUE_CHANGED: 'rtc.lastn_value_changed',\\r\\n\\r\\n    /**\\r\\n     * Event emitted when ssrc for a local track is extracted and stored\\r\\n     * in {@link TraceablePeerConnection}.\\r\\n     * @param {JitsiLocalTrack} track which ssrc was updated\\r\\n     * @param {string} ssrc that was stored\\r\\n     */\\r\\n    LOCAL_TRACK_SSRC_UPDATED: 'rtc.local_track_ssrc_updated',\\r\\n\\r\\n    TRACK_ATTACHED: 'rtc.track_attached',\\r\\n\\r\\n    /**\\r\\n     * Event fired when we remote track is added to the conference.\\r\\n     * 1st event argument is the added <tt>JitsiRemoteTrack</tt> instance.\\r\\n     **/\\r\\n    REMOTE_TRACK_ADDED: 'rtc.remote_track_added',\\r\\n\\r\\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\\r\\n    // (currently implemented for local tracks only)\\r\\n    REMOTE_TRACK_MUTE: 'rtc.remote_track_mute',\\r\\n\\r\\n    /**\\r\\n     * Indicates that the remote track has been removed from the conference.\\r\\n     * 1st event argument is the removed {@link JitsiRemoteTrack} instance.\\r\\n     */\\r\\n    REMOTE_TRACK_REMOVED: 'rtc.remote_track_removed',\\r\\n\\r\\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\\r\\n    // (currently implemented for local tracks only)\\r\\n    REMOTE_TRACK_UNMUTE: 'rtc.remote_track_unmute',\\r\\n\\r\\n    /**\\r\\n     * Indicates error while set local description.\\r\\n     */\\r\\n    SET_LOCAL_DESCRIPTION_FAILED: 'rtc.set_local_description_failed',\\r\\n\\r\\n    /**\\r\\n     * Indicates error while set remote description.\\r\\n     */\\r\\n    SET_REMOTE_DESCRIPTION_FAILED: 'rtc.set_remote_description_failed',\\r\\n    AUDIO_OUTPUT_DEVICE_CHANGED: 'rtc.audio_output_device_changed',\\r\\n    DEVICE_LIST_CHANGED: 'rtc.device_list_changed',\\r\\n\\r\\n    /**\\r\\n     * Indicates that the list with available devices will change.\\r\\n     */\\r\\n    DEVICE_LIST_WILL_CHANGE: 'rtc.device_list_will_change',\\r\\n    DEVICE_LIST_AVAILABLE: 'rtc.device_list_available',\\r\\n\\r\\n    /**\\r\\n     * Indicates that a message from another participant is received on\\r\\n     * data channel.\\r\\n     */\\r\\n    ENDPOINT_MESSAGE_RECEIVED: 'rtc.endpoint_message_received',\\r\\n\\r\\n    /**\\r\\n     * Designates an event indicating that the local ICE username fragment of\\r\\n     * the jingle session has changed.\\r\\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\\r\\n     * is the source of the event.\\r\\n     * The second argument is the actual \\\"ufrag\\\" string.\\r\\n     */\\r\\n    LOCAL_UFRAG_CHANGED: 'rtc.local_ufrag_changed',\\r\\n\\r\\n    /**\\r\\n     * Designates an event indicating that the local ICE username fragment of\\r\\n     * the jingle session has changed.\\r\\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\\r\\n     * is the source of the event.\\r\\n     * The second argument is the actual \\\"ufrag\\\" string.\\r\\n     */\\r\\n    REMOTE_UFRAG_CHANGED: 'rtc.remote_ufrag_changed'\\r\\n};\\r\\n\\r\\nmodule.exports = RTCEvents;\\r\\n\",\"/**\\r\\n * This class exports constants and factory methods related to the analytics\\r\\n * API provided by AnalyticsAdapter. In order for entries in a database to be\\r\\n * somewhat easily traceable back to the code which produced them, events sent\\r\\n * through analytics should be defined here.\\r\\n *\\r\\n * Since the AnalyticsAdapter API can be used in different ways, for some events\\r\\n * it is more convenient to just define the event name as a constant. For other\\r\\n * events a factory function is easier.\\r\\n *\\r\\n * A general approach for adding a new event:\\r\\n * 1. Determine the event type: track, UI, page, or operational. If in doubt use\\r\\n * operational.\\r\\n * 2. Determine whether the event is related to other existing events, and\\r\\n * which fields are desired to be set: name, action, actionSubject, source.\\r\\n * 3. If the name is sufficient (the other fields are not important), use a\\r\\n * constant. Otherwise use a factory function.\\r\\n *\\r\\n * Note that the AnalyticsAdapter uses the events passed to its functions for\\r\\n * its own purposes, and might modify them. Because of this, factory functions\\r\\n * should create new objects.\\r\\n *\\r\\n */\\r\\n\\r\\n/**\\r\\n * The constant which identifies an event of type \\\"operational\\\".\\r\\n * @type {string}\\r\\n */\\r\\nexport const TYPE_OPERATIONAL = 'operational';\\r\\n\\r\\n/**\\r\\n * The constant which identifies an event of type \\\"page\\\".\\r\\n * @type {string}\\r\\n */\\r\\nexport const TYPE_PAGE = 'page';\\r\\n\\r\\n/**\\r\\n * The constant which identifies an event of type \\\"track\\\".\\r\\n * @type {string}\\r\\n */\\r\\nexport const TYPE_TRACK = 'track';\\r\\n\\r\\n/**\\r\\n * The constant which identifies an event of type \\\"ui\\\".\\r\\n * @type {string}\\r\\n */\\r\\nexport const TYPE_UI = 'ui';\\r\\n\\r\\n/**\\r\\n * The \\\"action\\\" value for Jingle events which indicates that the Jingle session\\r\\n * was restarted (TODO: verify/fix the documentation)\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTION_JINGLE_RESTART = 'restart';\\r\\n\\r\\n/**\\r\\n * The \\\"action\\\" value for Jingle events which indicates that a session-accept\\r\\n * timed out (TODO: verify/fix the documentation)\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTION_JINGLE_SA_TIMEOUT = 'session-accept.timeout';\\r\\n\\r\\n/**\\r\\n * The \\\"action\\\" value for Jingle events which indicates that a session-initiate\\r\\n * was received.\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTION_JINGLE_SI_RECEIVED = 'session-initiate.received';\\r\\n\\r\\n/**\\r\\n * The \\\"action\\\" value for Jingle events which indicates that a session-initiate\\r\\n * not arrived within a timeout (the value is specified in\\r\\n * the {@link JingleSessionPC}.\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTION_JINGLE_SI_TIMEOUT = 'session-initiate.timeout';\\r\\n\\r\\n/**\\r\\n * A constant for the \\\"terminate\\\" action for Jingle events. TODO: verify/fix\\r\\n * the documentation)\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTION_JINGLE_TERMINATE = 'terminate';\\r\\n\\r\\n/**\\r\\n * The \\\"action\\\" value for Jingle events which indicates that a transport-replace\\r\\n * was received.\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTION_JINGLE_TR_RECEIVED\\r\\n    = 'transport-replace.received';\\r\\n\\r\\n/**\\r\\n * The \\\"action\\\" value for Jingle events which indicates that a transport-replace\\r\\n * succeeded (TODO: verify/fix the documentation)\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTION_JINGLE_TR_SUCCESS\\r\\n    = 'transport-replace.success';\\r\\n\\r\\n/**\\r\\n * The \\\"action\\\" value for P2P events which indicates that a connection was\\r\\n * established (TODO: verify/fix the documentation)\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTION_P2P_ESTABLISHED = 'established';\\r\\n\\r\\n/**\\r\\n * The \\\"action\\\" value for P2P events which indicates that something failed.\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTION_P2P_FAILED = 'failed';\\r\\n\\r\\n/**\\r\\n * The \\\"action\\\" value for P2P events which indicates that a switch to\\r\\n * jitsi-videobridge happened.\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTION_P2P_SWITCH_TO_JVB = 'switch.to.jvb';\\r\\n\\r\\n/**\\r\\n * The name of an event which indicates an available device. We send one such\\r\\n * event per available device once when the available devices are first known,\\r\\n * and every time that they change\\r\\n * @type {string}\\r\\n *\\r\\n * Properties:\\r\\n *      audio_input_device_count: the number of audio input devices available at\\r\\n *          the time the event was sent.\\r\\n *      audio_output_device_count: the number of audio output devices available\\r\\n *          at the time the event was sent.\\r\\n *      video_input_device_count: the number of video input devices available at\\r\\n *          the time the event was sent.\\r\\n *      video_output_device_count: the number of video output devices available\\r\\n *          at the time the event was sent.\\r\\n *      device_id: an identifier of the device described in this event.\\r\\n *      device_group_id:\\r\\n *      device_kind: one of 'audioinput', 'audiooutput', 'videoinput' or\\r\\n *          'videooutput'.\\r\\n *      device_label: a string which describes the device.\\r\\n */\\r\\nexport const AVAILABLE_DEVICE = 'available.device';\\r\\n\\r\\n/**\\r\\n * This appears to be fired only in certain cases when the XMPP connection\\r\\n * disconnects (and it was intentional?). It is currently never observed to\\r\\n * fire in production.\\r\\n *\\r\\n * TODO: document\\r\\n *\\r\\n * Properties:\\r\\n *      message: an error message\\r\\n */\\r\\nexport const CONNECTION_DISCONNECTED = 'connection.disconnected';\\r\\n\\r\\n/**\\r\\n * Indicates that the user of the application provided feedback in terms of a\\r\\n * rating (an integer from 1 to 5) and an optional comment.\\r\\n * Properties:\\r\\n *      value: the user's rating (an integer from 1 to 5)\\r\\n *      comment: the user's comment\\r\\n */\\r\\nexport const FEEDBACK = 'feedback';\\r\\n\\r\\n/**\\r\\n * Indicates the duration of a particular phase of the ICE connectivity\\r\\n * establishment.\\r\\n *\\r\\n * Properties:\\r\\n *      phase: the ICE phase (e.g. 'gathering', 'checking', 'establishment')\\r\\n *      value: the duration in milliseconds.\\r\\n *      p2p: whether the associated ICE connection is p2p or towards a\\r\\n *          jitsi-videobridge\\r\\n *      initiator: whether the local Jingle peer is the initiator or responder\\r\\n *          in the Jingle session. XXX we probably actually care about the ICE\\r\\n *          role (controlling vs controlled), and we assume that this correlates\\r\\n *          with the Jingle initiator.\\r\\n */\\r\\nexport const ICE_DURATION = 'ice.duration';\\r\\n\\r\\n/**\\r\\n * Indicates the difference in milliseconds between the ICE establishment time\\r\\n * for the P2P and JVB connections (e.g. a value of 10 would indicate that the\\r\\n * P2P connection took 10ms more than JVB connection to establish).\\r\\n *\\r\\n * Properties:\\r\\n *      value: the difference in establishment durations in milliseconds.\\r\\n *\\r\\n */\\r\\nexport const ICE_ESTABLISHMENT_DURATION_DIFF\\r\\n    = 'ice.establishment.duration.diff';\\r\\n\\r\\n/**\\r\\n * Indicates that the ICE state has changed.\\r\\n *\\r\\n * Properties:\\r\\n *      state: the ICE state which was entered (e.g. 'checking', 'connected',\\r\\n *          'completed', etc).\\r\\n *      value: the time in milliseconds (as reported by\\r\\n *          window.performance.now()) that the state change occurred.\\r\\n *      p2p: whether the associated ICE connection is p2p or towards a\\r\\n *          jitsi-videobridge\\r\\n *      signalingState: The signaling state of the associated PeerConnection\\r\\n *      reconnect: whether the associated Jingle session is in the process of\\r\\n *          reconnecting (or is it ICE? TODO: verify/fix the documentation)\\r\\n */\\r\\nexport const ICE_STATE_CHANGED = 'ice.state.changed';\\r\\n\\r\\n/**\\r\\n * Indicates that no bytes have been sent for the track.\\r\\n *\\r\\n * Properties:\\r\\n *      mediaType: the media type of the local track ('audio' or 'video').\\r\\n */\\r\\nexport const NO_BYTES_SENT = 'track.no-bytes-sent';\\r\\n\\r\\n/**\\r\\n * Indicates that a track was unmuted (?).\\r\\n *\\r\\n * Properties:\\r\\n *      mediaType: the media type of the local track ('audio' or 'video').\\r\\n *      trackType: the type of the track ('local' or 'remote').\\r\\n *      value: TODO: document\\r\\n */\\r\\nexport const TRACK_UNMUTED = 'track.unmuted';\\r\\n\\r\\n/**\\r\\n * Creates an operational event which indicates that we have received a\\r\\n * \\\"bridge down\\\" event from jicofo.\\r\\n */\\r\\nexport const createBridgeDownEvent = function() {\\r\\n    const bridgeDown = 'bridge.down';\\r\\n\\r\\n    return {\\r\\n        action: bridgeDown,\\r\\n        actionSubject: bridgeDown,\\r\\n        type: TYPE_OPERATIONAL\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event which indicates that the XMPP connection failed\\r\\n * @param errorType TODO\\r\\n * @param errorMessage TODO\\r\\n * @param detail connection failed details.\\r\\n */\\r\\nexport const createConnectionFailedEvent\\r\\n    = function(errorType, errorMessage, details) {\\r\\n        return {\\r\\n            type: TYPE_OPERATIONAL,\\r\\n            action: 'connection.failed',\\r\\n            attributes: {\\r\\n                'error_type': errorType,\\r\\n                'error_message': errorMessage,\\r\\n                ...details\\r\\n            }\\r\\n        };\\r\\n    };\\r\\n\\r\\n/**\\r\\n * Creates an operational event which indicates that a particular connection\\r\\n * stage was reached (i.e. the XMPP connection transitioned to the \\\"connected\\\"\\r\\n * state).\\r\\n *\\r\\n * @param stage the stage which was reached\\r\\n * @param attributes additional attributes for the event. This should be an\\r\\n * object with a \\\"value\\\" property indicating a timestamp in milliseconds\\r\\n * relative to the beginning of the document's lifetime.\\r\\n *\\r\\n */\\r\\nexport const createConnectionStageReachedEvent = function(stage, attributes) {\\r\\n    const action = 'connection.stage.reached';\\r\\n\\r\\n    return {\\r\\n        action,\\r\\n        actionSubject: stage,\\r\\n        attributes,\\r\\n        source: action,\\r\\n        type: TYPE_OPERATIONAL\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an operational event for the end-to-end round trip time to a\\r\\n * specific remote participant.\\r\\n * @param participantId the ID of the remote participant.\\r\\n * @param region the region of the remote participant\\r\\n * @param rtt the rtt\\r\\n */\\r\\nexport const createE2eRttEvent = function(participantId, region, rtt) {\\r\\n    const attributes = {\\r\\n        'participant_id': participantId,\\r\\n        region,\\r\\n        rtt\\r\\n    };\\r\\n\\r\\n    return {\\r\\n        attributes,\\r\\n        name: 'e2e_rtt',\\r\\n        type: TYPE_OPERATIONAL\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event which indicates that the focus has left the MUC.\\r\\n */\\r\\nexport const createFocusLeftEvent = function() {\\r\\n    const action = 'focus.left';\\r\\n\\r\\n    return {\\r\\n        action,\\r\\n        actionSubject: action,\\r\\n        type: TYPE_OPERATIONAL\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event related to a getUserMedia call.\\r\\n *\\r\\n * @param action the type of the result that the event represents: 'error',\\r\\n * 'success', 'warning', etc.\\r\\n * @param attributes the attributes to attach to the event.\\r\\n * @returns {{type: string, source: string, name: string}}\\r\\n */\\r\\nexport const createGetUserMediaEvent = function(action, attributes = {}) {\\r\\n    return {\\r\\n        type: TYPE_OPERATIONAL,\\r\\n        source: 'get.user.media',\\r\\n        action,\\r\\n        attributes\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event related to remote participant connection status changes.\\r\\n *\\r\\n * @param attributes the attributes to attach to the event.\\r\\n * @returns {{type: string, source: string, name: string}}\\r\\n */\\r\\nexport const createParticipantConnectionStatusEvent = function(attributes = {}) {\\r\\n    const action = 'duration';\\r\\n\\r\\n    return {\\r\\n        type: TYPE_OPERATIONAL,\\r\\n        source: 'peer.conn.status',\\r\\n        action,\\r\\n        attributes\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event for a Jingle-related event.\\r\\n * @param action the action of the event\\r\\n * @param attributes attributes to add to the event.\\r\\n */\\r\\nexport const createJingleEvent = function(action, attributes = {}) {\\r\\n    return {\\r\\n        type: TYPE_OPERATIONAL,\\r\\n        action,\\r\\n        source: 'jingle',\\r\\n        attributes\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event which indicates that a local track was not able to read\\r\\n * data from its source (a camera or a microphone).\\r\\n *\\r\\n * @param mediaType {String} the media type of the local track ('audio' or\\r\\n * 'video').\\r\\n */\\r\\nexport const createNoDataFromSourceEvent = function(mediaType, value) {\\r\\n    return {\\r\\n        attributes: {\\r\\n            'media_type': mediaType,\\r\\n            value\\r\\n        },\\r\\n        action: 'track.no.data.from.source',\\r\\n        type: TYPE_OPERATIONAL\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event for a p2p-related event.\\r\\n * @param action the action of the event\\r\\n * @param attributes attributes to add to the event.\\r\\n */\\r\\nexport const createP2PEvent = function(action, attributes = {}) {\\r\\n    return {\\r\\n        type: TYPE_OPERATIONAL,\\r\\n        action,\\r\\n        source: 'p2p',\\r\\n        attributes\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Indicates that we received a remote command to mute.\\r\\n */\\r\\nexport const createRemotelyMutedEvent = function() {\\r\\n    return {\\r\\n        type: TYPE_OPERATIONAL,\\r\\n        action: 'remotely.muted'\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event which contains RTP statistics such as RTT and packet loss.\\r\\n *\\r\\n * All average RTP stats are currently reported under 1 event name, but with\\r\\n * different properties that allows to distinguish between a P2P call, a\\r\\n * call relayed through TURN or the JVB, and multiparty vs 1:1.\\r\\n *\\r\\n * The structure of the event is:\\r\\n *\\r\\n * {\\r\\n *      p2p: true,\\r\\n *      conferenceSize: 2,\\r\\n *      localCandidateType: \\\"relay\\\",\\r\\n *      remoteCandidateType: \\\"relay\\\",\\r\\n *      transportType: \\\"udp\\\",\\r\\n *\\r\\n *      // Average RTT of 200ms\\r\\n *      \\\"rtt.avg\\\": 200,\\r\\n *      \\\"rtt.samples\\\": \\\"[100, 200, 300]\\\",\\r\\n *\\r\\n *      // Average packet loss of 10%\\r\\n *      \\\"packet.loss.avg\\\": 10,\\r\\n *      \\\"packet.loss.samples\\\": '[5, 10, 15]'\\r\\n *\\r\\n *      // Difference in milliseconds in the end-to-end RTT between p2p and jvb.\\r\\n *      // The e2e RTT through jvb is 15ms shorter:\\r\\n *      \\\"rtt.diff\\\": 15,\\r\\n *\\r\\n *      // End-to-end RTT through JVB is ms.\\r\\n *      \\\"end2end.rtt.avg\\\" = 100\\r\\n * }\\r\\n *\\r\\n * Note that the value of the \\\"samples\\\" properties are (JSON encoded) strings,\\r\\n * and not JSON arrays, as events' attributes can not be nested. The samples are\\r\\n * currently included for debug purposes only and can be removed anytime soon\\r\\n * from the structure.\\r\\n *\\r\\n * Also note that not all of values are present in each event, as values are\\r\\n * obtained and calculated as part of different process/event pipe. For example\\r\\n * {@link ConnectionAvgStats} instances are doing the reports for each\\r\\n * {@link TraceablePeerConnection} and work independently from the main stats\\r\\n * pipe.\\r\\n */\\r\\nexport const createRtpStatsEvent = function(attributes) {\\r\\n    return {\\r\\n        type: TYPE_OPERATIONAL,\\r\\n        action: 'rtp.stats',\\r\\n        attributes\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event which contains the round trip time (RTT) to a set of\\r\\n * regions.\\r\\n *\\r\\n * @param attributes\\r\\n * @returns {{type: string, action: string, attributes: *}}\\r\\n */\\r\\nexport const createRttByRegionEvent = function(attributes) {\\r\\n    return {\\r\\n        type: TYPE_OPERATIONAL,\\r\\n        action: 'rtt.by.region',\\r\\n        attributes\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event which contains information about the audio output problem (the user id of the affected participant,\\r\\n * the local audio levels and the remote audio levels that triggered the event).\\r\\n *\\r\\n * @param {string} userID - The user id of the affected participant.\\r\\n * @param {*} localAudioLevels - The local audio levels.\\r\\n * @param {*} remoteAudioLevels - The audio levels received from the participant.\\r\\n */\\r\\nexport function createAudioOutputProblemEvent(userID, localAudioLevels, remoteAudioLevels) {\\r\\n    return {\\r\\n        type: TYPE_OPERATIONAL,\\r\\n        action: 'audio.output.problem',\\r\\n        attributes: {\\r\\n            userID,\\r\\n            localAudioLevels,\\r\\n            remoteAudioLevels\\r\\n        }\\r\\n    };\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates an event which contains an information related to the bridge channel close event.\\r\\n *\\r\\n * @param {string} code - A code from {@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\\r\\n * @param {string} reason - A string which describes the reason for closing the bridge channel.\\r\\n * @returns {{type: string, action: string, attributes: { code: string, reason: string }}}\\r\\n */\\r\\nexport const createBridgeChannelClosedEvent = function(code, reason) {\\r\\n    return {\\r\\n        type: TYPE_OPERATIONAL,\\r\\n        action: 'bridge-channel.error',\\r\\n        attributes: {\\r\\n            code,\\r\\n            reason\\r\\n        }\\r\\n    };\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates an event which indicates the Time To First Media (TTFM).\\r\\n * It is measured in milliseconds relative to the beginning of the document's\\r\\n * lifetime (i.e. the origin used by window.performance.now()), and it excludes\\r\\n * the following:\\r\\n * 1. The delay due to getUserMedia()\\r\\n * 2. The period between the MUC being joined and the reception of the Jingle\\r\\n * session-initiate from jicofo. This is because jicofo will not start a Jingle\\r\\n * session until there are at least 2 participants in the room.\\r\\n *\\r\\n * @param attributes the attributes to add to the event. Currently used fields:\\r\\n *      mediaType: the media type of the local track ('audio' or 'video').\\r\\n *      muted: whether the track has ever been muted (?)\\r\\n *      value: the TTMF in milliseconds.\\r\\n */\\r\\nexport const createTtfmEvent = function(attributes) {\\r\\n    return createConnectionStageReachedEvent('ttfm', attributes);\\r\\n};\\r\\n\",\"/**\\r\\n * The audio type.\\r\\n */\\r\\nexport const AUDIO = 'audio';\\r\\n\\r\\n/**\\r\\n * The video type.\\r\\n */\\r\\nexport const VIDEO = 'video';\\r\\n\",\"/* global\\n          __filename,\\n          MediaStreamTrack,\\n          RTCIceCandidate: true,\\n          RTCPeerConnection,\\n          RTCSessionDescription: true\\n*/\\n\\nimport { AVAILABLE_DEVICE } from '../../service/statistics/AnalyticsEvents';\\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\\nimport EventEmitter from 'events';\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\nimport JitsiTrackError from '../../JitsiTrackError';\\nimport Listenable from '../util/Listenable';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport Resolutions from '../../service/RTC/Resolutions';\\nimport browser from '../browser';\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\nimport screenObtainer from './ScreenObtainer';\\nimport SDPUtil from '../xmpp/SDPUtil';\\nimport Statistics from '../statistics/statistics';\\nimport VideoType from '../../service/RTC/VideoType';\\n\\nconst logger = getLogger(__filename);\\n\\n// Require adapter only for certain browsers. This is being done for\\n// react-native, which has its own shims, and while browsers are being migrated\\n// over to use adapter's shims.\\nif (browser.usesAdapter()) {\\n    require('webrtc-adapter');\\n}\\n\\nconst eventEmitter = new EventEmitter();\\n\\nconst AVAILABLE_DEVICES_POLL_INTERVAL_TIME = 3000; // ms\\n\\n/**\\n * Default resolution to obtain for video tracks if no resolution is specified.\\n * This default is used for old gum flow only, as new gum flow uses\\n * {@link DEFAULT_CONSTRAINTS}.\\n */\\nconst OLD_GUM_DEFAULT_RESOLUTION = 720;\\n\\n/**\\n * Default devices to obtain when no specific devices are specified. This\\n * default is used for old gum flow only.\\n */\\nconst OLD_GUM_DEFAULT_DEVICES = [ 'audio', 'video' ];\\n\\n/**\\n * Default MediaStreamConstraints to use for calls to getUserMedia.\\n *\\n * @private\\n */\\nconst DEFAULT_CONSTRAINTS = {\\n    video: {\\n        aspectRatio: 16 / 9,\\n        height: {\\n            ideal: 720,\\n            max: 720,\\n            min: 240\\n        }\\n    }\\n};\\n\\n/**\\n * The default frame rate for Screen Sharing.\\n */\\nconst SS_DEFAULT_FRAME_RATE = 5;\\n\\n// Currently audio output device change is supported only in Chrome and\\n// default output always has 'default' device ID\\nlet audioOutputDeviceId = 'default'; // default device\\n// whether user has explicitly set a device to use\\nlet audioOutputChanged = false;\\n\\n// Disables all audio processing\\nlet disableAP = false;\\n\\n// Disables Acoustic Echo Cancellation\\nlet disableAEC = false;\\n\\n// Disables Noise Suppression\\nlet disableNS = false;\\n\\n// Disables Automatic Gain Control\\nlet disableAGC = false;\\n\\n// Disables Highpass Filter\\nlet disableHPF = false;\\n\\nconst featureDetectionAudioEl = document.createElement('audio');\\nconst isAudioOutputDeviceChangeAvailable\\n    = typeof featureDetectionAudioEl.setSinkId !== 'undefined';\\n\\nlet availableDevices;\\nlet availableDevicesPollTimer;\\n\\n/**\\n * Initialize wrapper function for enumerating devices.\\n * TODO: remove this, it should no longer be needed.\\n *\\n * @returns {?Function}\\n */\\nfunction initEnumerateDevicesWithCallback() {\\n    if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\\n        return callback => {\\n            navigator.mediaDevices.enumerateDevices()\\n                .then(callback, () => callback([]));\\n        };\\n    }\\n}\\n\\n/**\\n *\\n * @param constraints\\n * @param isNewStyleConstraintsSupported\\n * @param resolution\\n */\\nfunction setResolutionConstraints(\\n        constraints,\\n        isNewStyleConstraintsSupported,\\n        resolution) {\\n    if (Resolutions[resolution]) {\\n        if (isNewStyleConstraintsSupported) {\\n            constraints.video.width = {\\n                ideal: Resolutions[resolution].width\\n            };\\n            constraints.video.height = {\\n                ideal: Resolutions[resolution].height\\n            };\\n        }\\n\\n        constraints.video.mandatory.minWidth = Resolutions[resolution].width;\\n        constraints.video.mandatory.minHeight = Resolutions[resolution].height;\\n    }\\n\\n    if (constraints.video.mandatory.minWidth) {\\n        constraints.video.mandatory.maxWidth\\n            = constraints.video.mandatory.minWidth;\\n    }\\n\\n    if (constraints.video.mandatory.minHeight) {\\n        constraints.video.mandatory.maxHeight\\n            = constraints.video.mandatory.minHeight;\\n    }\\n}\\n\\n/**\\n * @param {string[]} um required user media types\\n *\\n * @param {Object} [options={}] optional parameters\\n * @param {string} options.resolution\\n * @param {number} options.bandwidth\\n * @param {number} options.fps\\n * @param {string} options.desktopStream\\n * @param {string} options.cameraDeviceId\\n * @param {string} options.micDeviceId\\n * @param {CameraFacingMode} options.facingMode\\n * @param {bool} firefox_fake_device\\n * @param {Object} options.frameRate - used only for dekstop sharing.\\n * @param {Object} options.frameRate.min - Minimum fps\\n * @param {Object} options.frameRate.max - Maximum fps\\n */\\nfunction getConstraints(um, options = {}) {\\n    const constraints = {\\n        audio: false,\\n        video: false\\n    };\\n\\n    // Don't mix new and old style settings for Chromium as this leads\\n    // to TypeError in new Chromium versions. @see\\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=614716\\n    // This is a temporary solution, in future we will fully split old and\\n    // new style constraints when new versions of Chromium and Firefox will\\n    // have stable support of new constraints format. For more information\\n    // @see https://github.com/jitsi/lib-jitsi-meet/pull/136\\n    const isNewStyleConstraintsSupported\\n        = browser.isFirefox()\\n            || browser.isSafariWithVP8()\\n            || browser.isEdge()\\n            || browser.isReactNative();\\n\\n    if (um.indexOf('video') >= 0) {\\n        // same behaviour as true\\n        constraints.video = { mandatory: {},\\n            optional: [] };\\n\\n        if (options.cameraDeviceId) {\\n            if (isNewStyleConstraintsSupported) {\\n                // New style of setting device id.\\n                constraints.video.deviceId = options.cameraDeviceId;\\n            }\\n\\n            // Old style.\\n            constraints.video.mandatory.sourceId = options.cameraDeviceId;\\n        } else {\\n            // Prefer the front i.e. user-facing camera (to the back i.e.\\n            // environment-facing camera, for example).\\n            // TODO: Maybe use \\\"exact\\\" syntax if options.facingMode is defined,\\n            // but this probably needs to be decided when updating other\\n            // constraints, as we currently don't use \\\"exact\\\" syntax anywhere.\\n            const facingMode = options.facingMode || CameraFacingMode.USER;\\n\\n            if (isNewStyleConstraintsSupported) {\\n                constraints.video.facingMode = facingMode;\\n            }\\n            constraints.video.optional.push({\\n                facingMode\\n            });\\n        }\\n\\n        if (options.minFps || options.maxFps || options.fps) {\\n            // for some cameras it might be necessary to request 30fps\\n            // so they choose 30fps mjpg over 10fps yuy2\\n            if (options.minFps || options.fps) {\\n                // Fall back to options.fps for backwards compatibility\\n                options.minFps = options.minFps || options.fps;\\n                constraints.video.mandatory.minFrameRate = options.minFps;\\n            }\\n            if (options.maxFps) {\\n                constraints.video.mandatory.maxFrameRate = options.maxFps;\\n            }\\n        }\\n\\n        setResolutionConstraints(\\n            constraints, isNewStyleConstraintsSupported, options.resolution);\\n    }\\n    if (um.indexOf('audio') >= 0) {\\n        if (browser.isReactNative()) {\\n            // The react-native-webrtc project that we're currently using\\n            // expects the audio constraint to be a boolean.\\n            constraints.audio = true;\\n        } else if (browser.isFirefox()) {\\n            if (options.micDeviceId) {\\n                constraints.audio = {\\n                    mandatory: {},\\n                    deviceId: options.micDeviceId, // new style\\n                    optional: [ {\\n                        sourceId: options.micDeviceId // old style\\n                    } ] };\\n            } else {\\n                constraints.audio = true;\\n            }\\n        } else {\\n            // same behaviour as true\\n            constraints.audio = { mandatory: {},\\n                optional: [] };\\n            if (options.micDeviceId) {\\n                if (isNewStyleConstraintsSupported) {\\n                    // New style of setting device id.\\n                    constraints.audio.deviceId = options.micDeviceId;\\n                }\\n\\n                // Old style.\\n                constraints.audio.optional.push({\\n                    sourceId: options.micDeviceId\\n                });\\n            }\\n\\n            // if it is good enough for hangouts...\\n            constraints.audio.optional.push(\\n                { echoCancellation: !disableAEC && !disableAP },\\n                { googEchoCancellation: !disableAEC && !disableAP },\\n                { googAutoGainControl: !disableAGC && !disableAP },\\n                { googNoiseSuppression: !disableNS && !disableAP },\\n                { googHighpassFilter: !disableHPF && !disableAP },\\n                { googNoiseSuppression2: !disableNS && !disableAP },\\n                { googEchoCancellation2: !disableAEC && !disableAP },\\n                { googAutoGainControl2: !disableAGC && !disableAP }\\n            );\\n        }\\n    }\\n    if (um.indexOf('screen') >= 0) {\\n        if (browser.isChrome()) {\\n            constraints.video = {\\n                mandatory: getSSConstraints({\\n                    ...options,\\n                    source: 'screen'\\n                }),\\n                optional: []\\n            };\\n\\n        } else if (browser.isFirefox()) {\\n            constraints.video = {\\n                mozMediaSource: 'window',\\n                mediaSource: 'window',\\n                frameRate: options.frameRate || {\\n                    min: SS_DEFAULT_FRAME_RATE,\\n                    max: SS_DEFAULT_FRAME_RATE\\n                }\\n            };\\n\\n        } else {\\n            const errmsg\\n                = '\\\\'screen\\\\' WebRTC media source is supported only in Chrome'\\n                    + ' and Firefox';\\n\\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\n            logger.error(errmsg);\\n        }\\n    }\\n    if (um.indexOf('desktop') >= 0) {\\n        constraints.video = {\\n            mandatory: getSSConstraints({\\n                ...options,\\n                source: 'desktop'\\n            }),\\n            optional: []\\n        };\\n    }\\n\\n    if (options.bandwidth) {\\n        if (!constraints.video) {\\n            // same behaviour as true\\n            constraints.video = { mandatory: {},\\n                optional: [] };\\n        }\\n        constraints.video.optional.push({ bandwidth: options.bandwidth });\\n    }\\n\\n    // we turn audio for both audio and video tracks, the fake audio & video\\n    // seems to work only when enabled in one getUserMedia call, we cannot get\\n    // fake audio separate by fake video this later can be a problem with some\\n    // of the tests\\n    if (browser.isFirefox() && options.firefox_fake_device) {\\n        // seems to be fixed now, removing this experimental fix, as having\\n        // multiple audio tracks brake the tests\\n        // constraints.audio = true;\\n        constraints.fake = true;\\n    }\\n\\n    return constraints;\\n}\\n\\n/**\\n * Creates a constraints object to be passed into a call to getUserMedia.\\n *\\n * @param {Array} um - An array of user media types to get. The accepted\\n * types are \\\"video\\\", \\\"audio\\\", and \\\"desktop.\\\"\\n * @param {Object} options - Various values to be added to the constraints.\\n * @param {string} options.cameraDeviceId - The device id for the video\\n * capture device to get video from.\\n * @param {Object} options.constraints - Default constraints object to use\\n * as a base for the returned constraints.\\n * @param {Object} options.desktopStream - The desktop source id from which\\n * to capture a desktop sharing video.\\n * @param {string} options.facingMode - Which direction the camera is\\n * pointing to.\\n * @param {string} options.micDeviceId - The device id for the audio capture\\n * device to get audio from.\\n * @param {Object} options.frameRate - used only for dekstop sharing.\\n * @param {Object} options.frameRate.min - Minimum fps\\n * @param {Object} options.frameRate.max - Maximum fps\\n * @private\\n * @returns {Object}\\n */\\nfunction newGetConstraints(um = [], options = {}) {\\n    // Create a deep copy of the constraints to avoid any modification of\\n    // the passed in constraints object.\\n    const constraints = JSON.parse(JSON.stringify(\\n        options.constraints || DEFAULT_CONSTRAINTS));\\n\\n    if (um.indexOf('video') >= 0) {\\n        if (!constraints.video) {\\n            constraints.video = {};\\n        }\\n\\n        if (options.cameraDeviceId) {\\n            constraints.video.deviceId = options.cameraDeviceId;\\n        } else {\\n            const facingMode = options.facingMode || CameraFacingMode.USER;\\n\\n            constraints.video.facingMode = facingMode;\\n        }\\n    } else {\\n        constraints.video = false;\\n    }\\n\\n    if (um.indexOf('audio') >= 0) {\\n        if (!constraints.audio || typeof constraints.audio === 'boolean') {\\n            constraints.audio = {};\\n        }\\n\\n        // NOTE(brian): the new-style ('advanced' instead of 'optional')\\n        // doesn't seem to carry through the googXXX constraints\\n        // Changing back to 'optional' here (even with video using\\n        // the 'advanced' style) allows them to be passed through\\n        // but also requires the device id to capture to be set in optional\\n        // as sourceId otherwise the constraints are considered malformed.\\n        if (!constraints.audio.optional) {\\n            constraints.audio.optional = [];\\n        }\\n\\n        constraints.audio.optional.push(\\n            { sourceId: options.micDeviceId },\\n            { echoCancellation: !disableAEC && !disableAP },\\n            { googEchoCancellation: !disableAEC && !disableAP },\\n            { googAutoGainControl: !disableAGC && !disableAP },\\n            { googNoiseSuppression: !disableNS && !disableAP },\\n            { googHighpassFilter: !disableHPF && !disableAP },\\n            { googNoiseSuppression2: !disableNS && !disableAP },\\n            { googEchoCancellation2: !disableAEC && !disableAP },\\n            { googAutoGainControl2: !disableAGC && !disableAP }\\n        );\\n    } else {\\n        constraints.audio = false;\\n    }\\n\\n    if (um.indexOf('desktop') >= 0) {\\n        if (!constraints.video || typeof constraints.video === 'boolean') {\\n            constraints.video = {};\\n        }\\n\\n        constraints.video = {\\n            mandatory: getSSConstraints({\\n                ...options,\\n                source: 'desktop'\\n            })\\n        };\\n    }\\n\\n    return constraints;\\n}\\n\\n/**\\n * Generates GUM constraints for screen sharing.\\n *\\n * @param {Object} options - The options passed to\\n * <tt>obtainAudioAndVideoPermissions</tt>.\\n * @returns {Object} - GUM constraints.\\n *\\n * TODO: Currently only the new GUM flow and Chrome is using the method. We\\n * should make it work for all use cases.\\n */\\nfunction getSSConstraints(options = {}) {\\n    const {\\n        desktopStream,\\n        frameRate = {\\n            min: SS_DEFAULT_FRAME_RATE,\\n            max: SS_DEFAULT_FRAME_RATE\\n        }\\n    } = options;\\n    const { max, min } = frameRate;\\n\\n    const constraints = {\\n        chromeMediaSource: options.source,\\n        maxWidth: window.screen.width,\\n        maxHeight: window.screen.height\\n    };\\n\\n    if (typeof min === 'number') {\\n        constraints.minFrameRate = min;\\n    }\\n\\n    if (typeof max === 'number') {\\n        constraints.maxFrameRate = max;\\n    }\\n\\n    if (typeof desktopStream !== 'undefined') {\\n        constraints.chromeMediaSourceId = desktopStream;\\n    }\\n\\n    return constraints;\\n}\\n\\n/**\\n * Generates constraints for screen sharing when using getDisplayMedia.\\n * The constraints(MediaTrackConstraints) are applied to the resulting track.\\n *\\n * @returns {Object} - MediaTrackConstraints constraints.\\n */\\nfunction getTrackSSConstraints(options = {}) {\\n    // we used to set height and width in the constraints, but this can lead\\n    // to inconsistencies if the browser is on a lower resolution screen\\n    // and we share a screen with bigger resolution, so they are now not set\\n    const constraints = {\\n        frameRate: SS_DEFAULT_FRAME_RATE\\n    };\\n    const { desktopSharingFrameRate } = options;\\n\\n    if (desktopSharingFrameRate && desktopSharingFrameRate.max) {\\n        constraints.frameRate = desktopSharingFrameRate.max;\\n    }\\n\\n    return constraints;\\n}\\n\\n/**\\n * Updates the granted permissions based on the options we requested and the\\n * streams we received.\\n * @param um the options we requested to getUserMedia.\\n * @param stream the stream we received from calling getUserMedia.\\n */\\nfunction updateGrantedPermissions(um, stream) {\\n    const audioTracksReceived\\n        = Boolean(stream) && stream.getAudioTracks().length > 0;\\n    const videoTracksReceived\\n        = Boolean(stream) && stream.getVideoTracks().length > 0;\\n    const grantedPermissions = {};\\n\\n    if (um.indexOf('video') !== -1) {\\n        grantedPermissions.video = videoTracksReceived;\\n    }\\n    if (um.indexOf('audio') !== -1) {\\n        grantedPermissions.audio = audioTracksReceived;\\n    }\\n\\n    eventEmitter.emit(RTCEvents.GRANTED_PERMISSIONS, grantedPermissions);\\n}\\n\\n/**\\n * Checks if new list of available media devices differs from previous one.\\n * @param {MediaDeviceInfo[]} newDevices - list of new devices.\\n * @returns {boolean} - true if list is different, false otherwise.\\n */\\nfunction compareAvailableMediaDevices(newDevices) {\\n    if (newDevices.length !== availableDevices.length) {\\n        return true;\\n    }\\n\\n    /* eslint-disable newline-per-chained-call */\\n\\n    return (\\n        newDevices.map(mediaDeviceInfoToJSON).sort().join('')\\n            !== availableDevices\\n                .map(mediaDeviceInfoToJSON).sort().join(''));\\n\\n    /* eslint-enable newline-per-chained-call */\\n\\n    /**\\n     *\\n     * @param info\\n     */\\n    function mediaDeviceInfoToJSON(info) {\\n        return JSON.stringify({\\n            kind: info.kind,\\n            deviceId: info.deviceId,\\n            groupId: info.groupId,\\n            label: info.label,\\n            facing: info.facing\\n        });\\n    }\\n}\\n\\n/**\\n * Sends analytics event with the passed device list.\\n *\\n * @param {Array<MediaDeviceInfo>} deviceList - List with info about the\\n * available devices.\\n * @returns {void}\\n */\\nfunction sendDeviceListToAnalytics(deviceList) {\\n    const audioInputDeviceCount\\n        = deviceList.filter(d => d.kind === 'audioinput').length;\\n    const audioOutputDeviceCount\\n        = deviceList.filter(d => d.kind === 'audiooutput').length;\\n    const videoInputDeviceCount\\n        = deviceList.filter(d => d.kind === 'videoinput').length;\\n    const videoOutputDeviceCount\\n        = deviceList.filter(d => d.kind === 'videooutput').length;\\n\\n    deviceList.forEach(device => {\\n        const attributes = {\\n            'audio_input_device_count': audioInputDeviceCount,\\n            'audio_output_device_count': audioOutputDeviceCount,\\n            'video_input_device_count': videoInputDeviceCount,\\n            'video_output_device_count': videoOutputDeviceCount,\\n            'device_id': device.deviceId,\\n            'device_group_id': device.groupId,\\n            'device_kind': device.kind,\\n            'device_label': device.label\\n        };\\n\\n        Statistics.sendAnalytics(AVAILABLE_DEVICE, attributes);\\n    });\\n}\\n\\n/**\\n * Event handler for the 'devicechange' event.\\n *\\n * @param {MediaDeviceInfo[]} devices - list of media devices.\\n * @emits RTCEvents.DEVICE_LIST_CHANGED\\n */\\nfunction onMediaDevicesListChanged(devicesReceived) {\\n    availableDevices = devicesReceived.slice(0);\\n    logger.info(\\n        'list of media devices has changed:',\\n        availableDevices);\\n\\n    sendDeviceListToAnalytics(availableDevices);\\n\\n    // Used by tracks to update the real device id before the consumer of lib-jitsi-meet receives the new device list.\\n    eventEmitter.emit(RTCEvents.DEVICE_LIST_WILL_CHANGE, devicesReceived);\\n\\n    eventEmitter.emit(RTCEvents.DEVICE_LIST_CHANGED, devicesReceived);\\n}\\n\\n/**\\n * Handles the newly created Media Streams.\\n * @param streams the new Media Streams\\n * @param resolution the resolution of the video streams\\n * @returns {*[]} object that describes the new streams\\n */\\nfunction handleLocalStream(streams, resolution) {\\n    let audioStream, desktopStream, videoStream;\\n    const res = [];\\n\\n    // XXX The function obtainAudioAndVideoPermissions has examined the type of\\n    // the browser, its capabilities, etc. and has taken the decision whether to\\n    // invoke getUserMedia per device (e.g. Firefox) or once for both audio and\\n    // video (e.g. Chrome). In order to not duplicate the logic here, examine\\n    // the specified streams and figure out what we've received based on\\n    // obtainAudioAndVideoPermissions' decision.\\n    if (streams) {\\n        // As mentioned above, certian types of browser (e.g. Chrome) support\\n        // (with a result which meets our requirements expressed bellow) calling\\n        // getUserMedia once for both audio and video.\\n        const audioVideo = streams.audioVideo;\\n\\n        if (audioVideo) {\\n            const audioTracks = audioVideo.getAudioTracks();\\n\\n            if (audioTracks.length) {\\n                audioStream = new MediaStream();\\n                for (let i = 0; i < audioTracks.length; i++) {\\n                    audioStream.addTrack(audioTracks[i]);\\n                }\\n            }\\n\\n            const videoTracks = audioVideo.getVideoTracks();\\n\\n            if (videoTracks.length) {\\n                videoStream = new MediaStream();\\n                for (let j = 0; j < videoTracks.length; j++) {\\n                    videoStream.addTrack(videoTracks[j]);\\n                }\\n            }\\n        } else {\\n            // On other types of browser (e.g. Firefox) we choose (namely,\\n            // obtainAudioAndVideoPermissions) to call getUserMedia per device\\n            // (type).\\n            audioStream = streams.audio;\\n            videoStream = streams.video;\\n        }\\n\\n        desktopStream = streams.desktop;\\n    }\\n\\n    if (desktopStream) {\\n        const { stream, sourceId, sourceType } = desktopStream;\\n\\n        res.push({\\n            stream,\\n            sourceId,\\n            sourceType,\\n            track: stream.getVideoTracks()[0],\\n            mediaType: MediaType.VIDEO,\\n            videoType: VideoType.DESKTOP\\n        });\\n    }\\n    if (audioStream) {\\n        res.push({\\n            stream: audioStream,\\n            track: audioStream.getAudioTracks()[0],\\n            mediaType: MediaType.AUDIO,\\n            videoType: null\\n        });\\n    }\\n    if (videoStream) {\\n        res.push({\\n            stream: videoStream,\\n            track: videoStream.getVideoTracks()[0],\\n            mediaType: MediaType.VIDEO,\\n            videoType: VideoType.CAMERA,\\n            resolution\\n        });\\n    }\\n\\n    return res;\\n}\\n\\n/**\\n * Represents a default implementation of setting a <tt>MediaStream</tt> as the\\n * source of a video element that tries to be browser-agnostic through feature\\n * checking. Note though that it was not completely clear from the predating\\n * browser-specific implementations what &quot;videoSrc&quot; was because one\\n * implementation of {@link RTCUtils#getVideoSrc} would return\\n * <tt>MediaStream</tt> (e.g. Firefox), another a <tt>string</tt> representation\\n * of the <tt>URL</tt> of the <tt>MediaStream</tt> (e.g. Chrome) and the return\\n * value was only used by {@link RTCUIHelper#getVideoId} which itself did not\\n * appear to be used anywhere. Generally, the implementation will try to follow\\n * the related standards i.e. work with the <tt>srcObject</tt> and <tt>src</tt>\\n * properties of the specified <tt>element</tt> taking into account vender\\n * prefixes.\\n *\\n * @param element the element whose video source/src is to be set to the\\n * specified <tt>stream</tt>\\n * @param {MediaStream} stream the <tt>MediaStream</tt> to set as the video\\n * source/src of <tt>element</tt>\\n */\\nfunction defaultSetVideoSrc(element, stream) {\\n    // srcObject\\n    let srcObjectPropertyName = 'srcObject';\\n\\n    if (!(srcObjectPropertyName in element)) {\\n        srcObjectPropertyName = 'mozSrcObject';\\n        if (!(srcObjectPropertyName in element)) {\\n            srcObjectPropertyName = null;\\n        }\\n    }\\n    if (srcObjectPropertyName) {\\n        element[srcObjectPropertyName] = stream;\\n\\n        return;\\n    }\\n\\n    // src\\n    let src;\\n\\n    if (stream) {\\n        src = stream.jitsiObjectURL;\\n\\n        // Save the created URL for stream so we can reuse it and not keep\\n        // creating URLs.\\n        if (!src) {\\n            stream.jitsiObjectURL = src = URL.createObjectURL(stream);\\n        }\\n    }\\n    element.src = src || '';\\n}\\n\\n/**\\n *\\n */\\nclass RTCUtils extends Listenable {\\n    /**\\n     *\\n     */\\n    constructor() {\\n        super(eventEmitter);\\n    }\\n\\n    /**\\n     * Depending on the browser, sets difference instance methods for\\n     * interacting with user media and adds methods to native WebRTC-related\\n     * objects. Also creates an instance variable for peer connection\\n     * constraints.\\n     *\\n     * @param {Object} options\\n     * @returns {void}\\n     */\\n    init(options = {}) {\\n        if (typeof options.disableAEC === 'boolean') {\\n            disableAEC = options.disableAEC;\\n            logger.info(`Disable AEC: ${disableAEC}`);\\n        }\\n        if (typeof options.disableNS === 'boolean') {\\n            disableNS = options.disableNS;\\n            logger.info(`Disable NS: ${disableNS}`);\\n        }\\n        if (typeof options.disableAP === 'boolean') {\\n            disableAP = options.disableAP;\\n            logger.info(`Disable AP: ${disableAP}`);\\n        }\\n        if (typeof options.disableAGC === 'boolean') {\\n            disableAGC = options.disableAGC;\\n            logger.info(`Disable AGC: ${disableAGC}`);\\n        }\\n        if (typeof options.disableHPF === 'boolean') {\\n            disableHPF = options.disableHPF;\\n            logger.info(`Disable HPF: ${disableHPF}`);\\n        }\\n\\n        availableDevices = undefined;\\n        window.clearInterval(availableDevicesPollTimer);\\n        availableDevicesPollTimer = undefined;\\n\\n        this.enumerateDevices = initEnumerateDevicesWithCallback();\\n\\n        if (browser.usesNewGumFlow()) {\\n            this.RTCPeerConnectionType = RTCPeerConnection;\\n\\n            this.attachMediaStream\\n                = wrapAttachMediaStream((element, stream) => {\\n                    if (element) {\\n                        element.srcObject = stream;\\n                    }\\n                });\\n\\n            this.getStreamID = ({ id }) => id;\\n            this.getTrackID = ({ id }) => id;\\n        } else if (browser.isChromiumBased() // this is chrome < 61\\n                || browser.isReactNative()) {\\n\\n            this.RTCPeerConnectionType = RTCPeerConnection;\\n\\n            this.attachMediaStream\\n                = wrapAttachMediaStream((element, stream) => {\\n                    defaultSetVideoSrc(element, stream);\\n\\n                    return element;\\n                });\\n\\n            this.getStreamID = function({ id }) {\\n                // A. MediaStreams from FF endpoints have the characters '{' and\\n                // '}' that make jQuery choke.\\n                // B. The react-native-webrtc implementation that we use at the\\n                // time of this writing returns a number for the id of\\n                // MediaStream. Let's just say that a number contains no special\\n                // characters.\\n                return (\\n                    typeof id === 'number'\\n                        ? id\\n                        : SDPUtil.filterSpecialChars(id));\\n            };\\n            this.getTrackID = ({ id }) => id;\\n\\n            if (!MediaStream.prototype.getVideoTracks) {\\n                MediaStream.prototype.getVideoTracks = function() {\\n                    return this.videoTracks;\\n                };\\n            }\\n            if (!MediaStream.prototype.getAudioTracks) {\\n                MediaStream.prototype.getAudioTracks = function() {\\n                    return this.audioTracks;\\n                };\\n            }\\n        } else {\\n            const message = 'Endpoint does not appear to be WebRTC-capable';\\n\\n            logger.error(message);\\n            throw new Error(message);\\n        }\\n\\n        this._initPCConstraints(options);\\n\\n        screenObtainer.init(\\n            options,\\n            this.getUserMediaWithConstraints.bind(this));\\n\\n        if (this.isDeviceListAvailable()) {\\n            this.enumerateDevices(ds => {\\n                availableDevices = ds.splice(0);\\n\\n                logger.debug('Available devices: ', availableDevices);\\n                sendDeviceListToAnalytics(availableDevices);\\n\\n                eventEmitter.emit(\\n                    RTCEvents.DEVICE_LIST_AVAILABLE,\\n                    availableDevices);\\n\\n\\n                // Use a shared callback to handle both the devicechange event\\n                // and the polling implementations. This prevents duplication\\n                // and works around a chrome bug (verified to occur on 68) where\\n                // devicechange fires twice in a row, which can cause async post\\n                // devicechange processing to collide.\\n                const updateKnownDevices = () => this.enumerateDevices(pds => {\\n                    if (compareAvailableMediaDevices(pds)) {\\n                        onMediaDevicesListChanged(pds);\\n                    }\\n                });\\n\\n                if (browser.supportsDeviceChangeEvent()) {\\n                    navigator.mediaDevices.addEventListener(\\n                        'devicechange',\\n                        updateKnownDevices);\\n                } else {\\n                    // Periodically poll enumerateDevices() method to check if\\n                    // list of media devices has changed.\\n                    availableDevicesPollTimer = window.setInterval(\\n                        updateKnownDevices,\\n                        AVAILABLE_DEVICES_POLL_INTERVAL_TIME);\\n                }\\n            });\\n        }\\n    }\\n\\n    /**\\n     * Creates instance objects for peer connection constraints both for p2p\\n     * and outside of p2p.\\n     *\\n     * @params {Object} options - Configuration for setting RTCUtil's instance\\n     * objects for peer connection constraints.\\n     * @params {boolean} options.useIPv6 - Set to true if IPv6 should be used.\\n     * @params {Object} options.testing - Additional configuration for work in\\n     * development.\\n     * @params {Object} options.testing.forceP2PSuspendVideoRatio - True if\\n     * video should become suspended if bandwidth estimation becomes low while\\n     * in peer to peer connection mode.\\n     */\\n    _initPCConstraints(options) {\\n        if (browser.isFirefox()) {\\n            this.pcConstraints = {};\\n        } else if (browser.isChromiumBased() || browser.isReactNative()) {\\n            this.pcConstraints = { optional: [\\n                { googHighStartBitrate: 0 },\\n                { googPayloadPadding: true },\\n                { googScreencastMinBitrate: 100 },\\n                { googCpuOveruseDetection: true },\\n                { googCpuOveruseEncodeUsage: true },\\n                { googCpuUnderuseThreshold: 55 },\\n                { googCpuOveruseThreshold: 85 }\\n            ] };\\n\\n            if (options.useIPv6) {\\n                // https://code.google.com/p/webrtc/issues/detail?id=2828\\n                this.pcConstraints.optional.push({ googIPv6: true });\\n            }\\n\\n            this.p2pPcConstraints\\n                = JSON.parse(JSON.stringify(this.pcConstraints));\\n        }\\n\\n        this.p2pPcConstraints = this.p2pPcConstraints || this.pcConstraints;\\n    }\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n    * @param {string[]} um required user media types\\n    * @param {Object} [options] optional parameters\\n    * @param {string} options.resolution\\n    * @param {number} options.bandwidth\\n    * @param {number} options.fps\\n    * @param {string} options.desktopStream\\n    * @param {string} options.cameraDeviceId\\n    * @param {string} options.micDeviceId\\n    * @param {Object} options.frameRate - used only for dekstop sharing.\\n    * @param {Object} options.frameRate.min - Minimum fps\\n    * @param {Object} options.frameRate.max - Maximum fps\\n    * @returns {Promise} Returns a media stream on success or a JitsiTrackError\\n    * on failure.\\n    **/\\n    getUserMediaWithConstraints(um, options = {}) {\\n        const constraints = getConstraints(um, options);\\n\\n        logger.info('Get media constraints', constraints);\\n\\n        return new Promise((resolve, reject) => {\\n            navigator.mediaDevices.getUserMedia(constraints)\\n                .then(stream => {\\n                    logger.log('onUserMediaSuccess');\\n                    updateGrantedPermissions(um, stream);\\n                    resolve(stream);\\n                })\\n                .catch(error => {\\n                    logger.warn('Failed to get access to local media. '\\n                        + ` ${error} ${constraints} `);\\n                    updateGrantedPermissions(um, undefined);\\n                    reject(new JitsiTrackError(error, constraints, um));\\n                });\\n        });\\n    }\\n\\n    /**\\n     * Acquires a media stream via getUserMedia that\\n     * matches the given constraints\\n     *\\n     * @param {array} umDevices which devices to acquire (e.g. audio, video)\\n     * @param {Object} constraints - Stream specifications to use.\\n     * @returns {Promise}\\n     */\\n    _newGetUserMediaWithConstraints(umDevices, constraints = {}) {\\n        return new Promise((resolve, reject) => {\\n            navigator.mediaDevices.getUserMedia(constraints)\\n                .then(stream => {\\n                    logger.log('onUserMediaSuccess');\\n                    updateGrantedPermissions(umDevices, stream);\\n                    resolve(stream);\\n                })\\n                .catch(error => {\\n                    logger.warn('Failed to get access to local media. '\\n                        + ` ${error} ${constraints} `);\\n                    updateGrantedPermissions(umDevices, undefined);\\n                    reject(new JitsiTrackError(error, constraints, umDevices));\\n                });\\n        });\\n    }\\n\\n    /**\\n     * Acquire a display stream via the screenObtainer. This requires extra\\n     * logic compared to use screenObtainer versus normal device capture logic\\n     * in RTCUtils#_newGetUserMediaWithConstraints.\\n     *\\n     * @param {Object} options\\n     * @param {Object} options.desktopSharingExtensionExternalInstallation\\n     * @param {string[]} options.desktopSharingSources\\n     * @param {Object} options.desktopSharingFrameRate\\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\\n     * @returns {Promise} A promise which will be resolved with an object which\\n     * contains the acquired display stream. If desktop sharing is not supported\\n     * then a rejected promise will be returned.\\n     */\\n    _newGetDesktopMedia(options) {\\n        if (!screenObtainer.isSupported() || !browser.supportsVideo()) {\\n            return Promise.reject(\\n                new Error('Desktop sharing is not supported!'));\\n        }\\n\\n        return new Promise((resolve, reject) => {\\n            screenObtainer.obtainStream(\\n                this._parseDesktopSharingOptions(options),\\n                stream => {\\n                    resolve(stream);\\n                },\\n                error => {\\n                    reject(error);\\n                });\\n        });\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Creates the local MediaStreams.\\n     * @param {Object} [options] optional parameters\\n     * @param {Array} options.devices the devices that will be requested\\n     * @param {string} options.resolution resolution constraints\\n     * @param {string} options.cameraDeviceId\\n     * @param {string} options.micDeviceId\\n     * @param {Object} options.desktopSharingFrameRate\\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\\n     * @returns {*} Promise object that will receive the new JitsiTracks\\n     */\\n    obtainAudioAndVideoPermissions(options = {}) {\\n        options.devices = options.devices || [ ...OLD_GUM_DEFAULT_DEVICES ];\\n        options.resolution = options.resolution || OLD_GUM_DEFAULT_RESOLUTION;\\n\\n        const requestingDesktop = options.devices.includes('desktop');\\n\\n        // if (requestingDesktop && !screenObtainer.isSupported()) {\\n        //     return Promise.reject(\\n        //         new Error('Desktop sharing is not supported!'));\\n        // }\\n        logger.info(\\\"obtainAudioAndVideoPermissions\\\");\\n        if (requestingDesktop && !screenObtainer.isSupported()) {\\n            return Promise.reject(\\n                new Error('Desktop sharing is not supported!'));\\n        }\\n\\n        return this._getAudioAndVideoStreams(options).then(streams =>\\n            handleLocalStream(streams, options.resolution));\\n    }\\n\\n    /**\\n     * Performs one call to getUserMedia for audio and/or video and another call\\n     * for desktop.\\n     *\\n     * @param {Object} options - An object describing how the gUM request should\\n     * be executed. See {@link obtainAudioAndVideoPermissions} for full options.\\n     * @returns {*} Promise object that will receive the new JitsiTracks on\\n     * success or a JitsiTrackError on failure.\\n     */\\n    _getAudioAndVideoStreams(options) {\\n        const requestingDesktop = options.devices.includes('desktop');\\n\\n        options.devices = options.devices.filter(device =>\\n            device !== 'desktop');\\n\\n        const gumPromise = options.devices.length\\n            ? this.getUserMediaWithConstraints(options.devices, options)\\n            : Promise.resolve(null);\\n\\n        return gumPromise\\n            .then(avStream => {\\n                // If any requested devices are missing, call gum again in\\n                // an attempt to obtain the actual error. For example, the\\n                // requested video device is missing or permission was\\n                // denied.\\n                const missingTracks\\n                    = this._getMissingTracks(options.devices, avStream);\\n\\n                if (missingTracks.length) {\\n                    this.stopMediaStream(avStream);\\n\\n                    return this.getUserMediaWithConstraints(\\n                        missingTracks, options)\\n\\n                        // GUM has already failed earlier and this success\\n                        // handling should not be reached.\\n                        .then(() => Promise.reject(new JitsiTrackError(\\n                            { name: 'UnknownError' },\\n                            getConstraints(options.devices, options),\\n                            missingTracks)));\\n                }\\n\\n                return avStream;\\n            })\\n            .then(audioVideo => {\\n                if (!requestingDesktop) {\\n                    return { audioVideo };\\n                }\\n\\n                if (options.desktopSharingSourceDevice) {\\n                    this.stopMediaStream(audioVideo);\\n\\n                    throw new Error('Using a camera as screenshare source is'\\n                        + 'not supported on this browser.');\\n                }\\n\\n                return new Promise((resolve, reject) => {\\n                    screenObtainer.obtainStream(\\n                        this._parseDesktopSharingOptions(options),\\n                        desktop => resolve({\\n                            audioVideo,\\n                            desktop\\n                        }),\\n                        error => {\\n                            if (audioVideo) {\\n                                this.stopMediaStream(audioVideo);\\n                            }\\n                            reject(error);\\n                        });\\n                });\\n            });\\n    }\\n\\n    /**\\n     * Private utility for determining if the passed in MediaStream contains\\n     * tracks of the type(s) specified in the requested devices.\\n     *\\n     * @param {string[]} requestedDevices - The track types that are expected to\\n     * be includes in the stream.\\n     * @param {MediaStream} stream - The MediaStream to check if it has the\\n     * expected track types.\\n     * @returns {string[]} An array of string with the missing track types. The\\n     * array will be empty if all requestedDevices are found in the stream.\\n     */\\n    _getMissingTracks(requestedDevices = [], stream) {\\n        const missingDevices = [];\\n\\n        const audioDeviceRequested = requestedDevices.includes('audio');\\n        const audioTracksReceived\\n            = stream && stream.getAudioTracks().length > 0;\\n\\n        if (audioDeviceRequested && !audioTracksReceived) {\\n            missingDevices.push('audio');\\n        }\\n\\n        const videoDeviceRequested = requestedDevices.includes('video');\\n        const videoTracksReceived\\n            = stream && stream.getVideoTracks().length > 0;\\n\\n        if (videoDeviceRequested && !videoTracksReceived) {\\n            missingDevices.push('video');\\n        }\\n\\n        return missingDevices;\\n    }\\n\\n    /**\\n     * Returns an object formatted for specifying desktop sharing parameters.\\n     *\\n     * @param {Object} options - Takes in the same options object as\\n     * {@link obtainAudioAndVideoPermissions}.\\n     * @returns {Object}\\n     */\\n    _parseDesktopSharingOptions(options) {\\n        return {\\n            ...options.desktopSharingExtensionExternalInstallation,\\n            desktopSharingSources: options.desktopSharingSources,\\n            gumOptions: {\\n                frameRate: options.desktopSharingFrameRate\\n            },\\n            trackOptions: getTrackSSConstraints(options)\\n        };\\n    }\\n\\n    /**\\n     * Gets streams from specified device types. This function intentionally\\n     * ignores errors for upstream to catch and handle instead.\\n     *\\n     * @param {Object} options - A hash describing what devices to get and\\n     * relevant constraints.\\n     * @param {string[]} options.devices - The types of media to capture. Valid\\n     * values are \\\"desktop\\\", \\\"audio\\\", and \\\"video\\\".\\n     * @param {Object} options.desktopSharingFrameRate\\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\\n     * @param {String} options.desktopSharingSourceDevice - The device id or\\n     * label for a video input source that should be used for screensharing.\\n     * @returns {Promise} The promise, when successful, will return an array of\\n     * meta data for the requested device type, which includes the stream and\\n     * track. If an error occurs, it will be deferred to the caller for\\n     * handling.\\n     */\\n    newObtainAudioAndVideoPermissions(options) {\\n        logger.info('Using the new gUM flow');\\n\\n        const mediaStreamsMetaData = [];\\n\\n        // Declare private functions to be used in the promise chain below.\\n        // These functions are declared in the scope of this function because\\n        // they are not being used anywhere else, so only this function needs to\\n        // know about them.\\n\\n        /**\\n         * Executes a request for desktop media if specified in options.\\n         *\\n         * @returns {Promise}\\n         */\\n        const maybeRequestDesktopDevice = function() {\\n            const umDevices = options.devices || [];\\n            const isDesktopDeviceRequested\\n                = umDevices.indexOf('desktop') !== -1;\\n\\n            if (!isDesktopDeviceRequested) {\\n                return Promise.resolve();\\n            }\\n\\n            const {\\n                desktopSharingExtensionExternalInstallation,\\n                desktopSharingSourceDevice,\\n                desktopSharingSources,\\n                desktopSharingFrameRate\\n            } = options;\\n\\n            // Attempt to use a video input device as a screenshare source if\\n            // the option is defined.\\n            if (desktopSharingSourceDevice) {\\n                const matchingDevice\\n                    = availableDevices && availableDevices.find(device =>\\n                        device.kind === 'videoinput'\\n                            && (device.deviceId === desktopSharingSourceDevice\\n                            || device.label === desktopSharingSourceDevice));\\n                const requestedDevices = [ 'video' ];\\n\\n                // Leverage the helper used by {@link _newGetDesktopMedia} to\\n                // get constraints for the desktop stream.\\n                const { gumOptions, trackOptions }\\n                    = this._parseDesktopSharingOptions(options);\\n\\n                // Create a custom constraints object to use exact device\\n                // matching to make sure there is no fallthrough to another\\n                // camera device. If a matching device could not be found, try\\n                // anyways and let the caller handle errors.\\n                const constraints = {\\n                    video: {\\n                        ...gumOptions,\\n                        deviceId: {\\n                            exact: (matchingDevice && matchingDevice.deviceId)\\n                                || desktopSharingSourceDevice\\n                        }\\n                    }\\n                };\\n\\n                return this._newGetUserMediaWithConstraints(\\n                    requestedDevices, constraints)\\n                    .then(stream => {\\n                        const track = stream && stream.getTracks()[0];\\n                        const applyConstrainsPromise\\n                            = track && track.applyConstraints\\n                                ? track.applyConstraints(trackOptions)\\n                                : Promise.resolve();\\n\\n                        return applyConstrainsPromise\\n                            .then(() => {\\n                                return {\\n                                    sourceType: 'device',\\n                                    stream\\n                                };\\n                            });\\n                    });\\n            }\\n\\n            return this._newGetDesktopMedia({\\n                desktopSharingExtensionExternalInstallation,\\n                desktopSharingSources,\\n                desktopSharingFrameRate\\n            });\\n        }.bind(this);\\n\\n        /**\\n         * Creates a meta data object about the passed in desktopStream and\\n         * pushes the meta data to the internal array mediaStreamsMetaData to be\\n         * returned later.\\n         *\\n         * @param {MediaStreamTrack} desktopStream - A track for a desktop\\n         * capture.\\n         * @returns {void}\\n         */\\n        const maybeCreateAndAddDesktopTrack = function(desktopStream) {\\n            if (!desktopStream) {\\n                return;\\n            }\\n\\n            const { stream, sourceId, sourceType } = desktopStream;\\n\\n            mediaStreamsMetaData.push({\\n                stream,\\n                sourceId,\\n                sourceType,\\n                track: stream.getVideoTracks()[0],\\n                videoType: VideoType.DESKTOP\\n            });\\n        };\\n\\n        /**\\n         * Executes a request for audio and/or video, as specified in options.\\n         * By default both audio and video will be captured if options.devices\\n         * is not defined.\\n         *\\n         * @returns {Promise}\\n         */\\n        const maybeRequestCaptureDevices = function() {\\n            const umDevices = options.devices || [ 'audio', 'video' ];\\n            const requestedCaptureDevices = umDevices.filter(device =>\\n                device === 'audio'\\n                || (device === 'video' && browser.supportsVideo()));\\n\\n            if (!requestedCaptureDevices.length) {\\n                return Promise.resolve();\\n            }\\n\\n            const constraints = newGetConstraints(\\n                requestedCaptureDevices, options);\\n\\n            logger.info('Got media constraints: ', constraints);\\n\\n            return this._newGetUserMediaWithConstraints(\\n                requestedCaptureDevices, constraints);\\n        }.bind(this);\\n\\n        /**\\n         * Splits the passed in media stream into separate audio and video\\n         * streams and creates meta data objects for each and pushes them to the\\n         * internal array mediaStreamsMetaData to be returned later.\\n         *\\n         * @param {MediaStreamTrack} avStream - A track for with audio and/or\\n         * video track.\\n         * @returns {void}\\n         */\\n        const maybeCreateAndAddAVTracks = function(avStream) {\\n            if (!avStream) {\\n                return;\\n            }\\n\\n            const audioTracks = avStream.getAudioTracks();\\n\\n            if (audioTracks.length) {\\n                const audioStream = new MediaStream(audioTracks);\\n\\n                mediaStreamsMetaData.push({\\n                    stream: audioStream,\\n                    track: audioStream.getAudioTracks()[0],\\n                    effects: options.effects\\n                });\\n            }\\n\\n            const videoTracks = avStream.getVideoTracks();\\n\\n            if (videoTracks.length) {\\n                const videoStream = new MediaStream(videoTracks);\\n\\n                mediaStreamsMetaData.push({\\n                    stream: videoStream,\\n                    track: videoStream.getVideoTracks()[0],\\n                    videoType: VideoType.CAMERA,\\n                    effects: options.effects\\n                });\\n            }\\n        };\\n\\n        return maybeRequestDesktopDevice()\\n            .then(maybeCreateAndAddDesktopTrack)\\n            .then(maybeRequestCaptureDevices)\\n            .then(maybeCreateAndAddAVTracks)\\n            .then(() => mediaStreamsMetaData)\\n            .catch(error => {\\n                mediaStreamsMetaData.forEach(({ stream }) => {\\n                    this.stopMediaStream(stream);\\n                });\\n\\n                return Promise.reject(error);\\n            });\\n    }\\n\\n    /**\\n     * Checks whether it is possible to enumerate available cameras/microphones.\\n     *\\n     * @returns {boolean} {@code true} if the device listing is available;\\n     * {@code false}, otherwise.\\n     */\\n    isDeviceListAvailable() {\\n        return Boolean(\\n            navigator.mediaDevices\\n                && navigator.mediaDevices.enumerateDevices);\\n    }\\n\\n    /**\\n     * Returns true if changing the input (camera / microphone) or output\\n     * (audio) device is supported and false if not.\\n     * @params {string} [deviceType] - type of device to change. Default is\\n     *      undefined or 'input', 'output' - for audio output device change.\\n     * @returns {boolean} true if available, false otherwise.\\n     */\\n    isDeviceChangeAvailable(deviceType) {\\n        return deviceType === 'output' || deviceType === 'audiooutput'\\n            ? isAudioOutputDeviceChangeAvailable\\n            : browser.isChromiumBased()\\n                || browser.isFirefox() || browser.isEdge();\\n    }\\n\\n    /**\\n     * A method to handle stopping of the stream.\\n     * One point to handle the differences in various implementations.\\n     * @param mediaStream MediaStream object to stop.\\n     */\\n    stopMediaStream(mediaStream) {\\n        if (!mediaStream) {\\n            return;\\n        }\\n\\n        mediaStream.getTracks().forEach(track => {\\n            if (track.stop) {\\n                track.stop();\\n            }\\n        });\\n\\n        // leave stop for implementation still using it\\n        if (mediaStream.stop) {\\n            mediaStream.stop();\\n        }\\n\\n        // The MediaStream implementation of the react-native-webrtc project has\\n        // an explicit release method that is to be invoked in order to release\\n        // used resources such as memory.\\n        if (mediaStream.release) {\\n            mediaStream.release();\\n        }\\n\\n        // if we have done createObjectURL, lets clean it\\n        const url = mediaStream.jitsiObjectURL;\\n\\n        if (url) {\\n            delete mediaStream.jitsiObjectURL;\\n            URL.revokeObjectURL(url);\\n        }\\n    }\\n\\n    /**\\n     * Returns whether the desktop sharing is enabled or not.\\n     * @returns {boolean}\\n     */\\n    isDesktopSharingEnabled() {\\n        return screenObtainer.isSupported();\\n    }\\n\\n    /**\\n     * Sets current audio output device.\\n     * @param {string} deviceId - id of 'audiooutput' device from\\n     *      navigator.mediaDevices.enumerateDevices(), 'default' for default\\n     *      device\\n     * @returns {Promise} - resolves when audio output is changed, is rejected\\n     *      otherwise\\n     */\\n    setAudioOutputDevice(deviceId) {\\n        if (!this.isDeviceChangeAvailable('output')) {\\n            return Promise.reject(\\n                new Error('Audio output device change is not supported'));\\n        }\\n\\n        return featureDetectionAudioEl.setSinkId(deviceId)\\n            .then(() => {\\n                audioOutputDeviceId = deviceId;\\n                audioOutputChanged = true;\\n\\n                logger.log(`Audio output device set to ${deviceId}`);\\n\\n                eventEmitter.emit(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\\n                    deviceId);\\n            });\\n    }\\n\\n    /**\\n     * Returns currently used audio output device id, '' stands for default\\n     * device\\n     * @returns {string}\\n     */\\n    getAudioOutputDevice() {\\n        return audioOutputDeviceId;\\n    }\\n\\n    /**\\n     * Returns list of available media devices if its obtained, otherwise an\\n     * empty array is returned/\\n     * @returns {Array} list of available media devices.\\n     */\\n    getCurrentlyAvailableMediaDevices() {\\n        return availableDevices;\\n    }\\n\\n    /**\\n     * Returns event data for device to be reported to stats.\\n     * @returns {MediaDeviceInfo} device.\\n     */\\n    getEventDataForActiveDevice(device) {\\n        const deviceList = [];\\n        const deviceData = {\\n            'deviceId': device.deviceId,\\n            'kind': device.kind,\\n            'label': device.label,\\n            'groupId': device.groupId\\n        };\\n\\n        deviceList.push(deviceData);\\n\\n        return { deviceList };\\n    }\\n\\n    /**\\n     * Configures the given PeerConnection constraints to either enable or\\n     * disable (according to the value of the 'enable' parameter) the\\n     * 'googSuspendBelowMinBitrate' option.\\n     * @param constraints the constraints on which to operate.\\n     * @param enable {boolean} whether to enable or disable the suspend video\\n     * option.\\n     */\\n    setSuspendVideo(constraints, enable) {\\n        if (!constraints.optional) {\\n            constraints.optional = [];\\n        }\\n\\n        // Get rid of all \\\"googSuspendBelowMinBitrate\\\" constraints (we assume\\n        // that the elements of constraints.optional contain a single property).\\n        constraints.optional\\n            = constraints.optional.filter(\\n                c => !c.hasOwnProperty('googSuspendBelowMinBitrate'));\\n\\n        if (enable) {\\n            constraints.optional.push({ googSuspendBelowMinBitrate: 'true' });\\n        }\\n    }\\n}\\n\\nconst rtcUtils = new RTCUtils();\\n\\n/**\\n * Wraps original attachMediaStream function to set current audio output device\\n * if this is supported.\\n * @param {Function} origAttachMediaStream\\n * @returns {Function}\\n */\\nfunction wrapAttachMediaStream(origAttachMediaStream) {\\n    return function(element, stream) {\\n        // eslint-disable-next-line prefer-rest-params\\n        const res = origAttachMediaStream.apply(rtcUtils, arguments);\\n\\n        if (stream\\n                && rtcUtils.isDeviceChangeAvailable('output')\\n                && stream.getAudioTracks\\n                && stream.getAudioTracks().length\\n\\n                // we skip setting audio output if there was no explicit change\\n                && audioOutputChanged) {\\n            element.setSinkId(rtcUtils.getAudioOutputDevice())\\n                .catch(function(ex) {\\n                    const err\\n                        = new JitsiTrackError(ex, null, [ 'audiooutput' ]);\\n\\n                    GlobalOnErrorHandler.callUnhandledRejectionHandler({\\n                        promise: this, // eslint-disable-line no-invalid-this\\n                        reason: err\\n                    });\\n\\n                    logger.warn(\\n                        'Failed to set audio output device for the element.'\\n                            + ' Default audio output device will be used'\\n                            + ' instead',\\n                        element,\\n                        err);\\n                });\\n        }\\n\\n        return res;\\n    };\\n}\\n\\nexport default rtcUtils;\\n\",\"/**\\r\\n * This utility class defines custom onerror and onunhandledrejection functions.\\r\\n * The custom error handlers respect the previously-defined error handlers.\\r\\n * GlobalOnErrorHandler class provides utilities to add many custom error\\r\\n * handlers and to execute the error handlers directly.\\r\\n */\\r\\n\\r\\n\\r\\n/**\\r\\n * List with global error handlers that will be executed.\\r\\n */\\r\\nconst handlers = [];\\r\\n\\r\\n// If an old handler exists, also fire its events.\\r\\nconst oldOnErrorHandler = window.onerror;\\r\\n\\r\\n/**\\r\\n * Custom error handler that calls the old global error handler and executes\\r\\n * all handlers that were previously added.\\r\\n */\\r\\nfunction JitsiGlobalErrorHandler(...args) {\\r\\n    handlers.forEach(handler => handler(...args));\\r\\n    oldOnErrorHandler && oldOnErrorHandler(...args);\\r\\n}\\r\\n\\r\\n// If an old handler exists, also fire its events.\\r\\nconst oldOnUnhandledRejection = window.onunhandledrejection;\\r\\n\\r\\n/**\\r\\n * Custom handler that calls the old global handler and executes all handlers\\r\\n * that were previously added. This handler handles rejected Promises.\\r\\n */\\r\\nfunction JitsiGlobalUnhandledRejection(event) {\\r\\n    handlers.forEach(handler => handler(null, null, null, null, event.reason));\\r\\n    oldOnUnhandledRejection && oldOnUnhandledRejection(event);\\r\\n}\\r\\n\\r\\n// Setting the custom error handlers.\\r\\nwindow.onerror = JitsiGlobalErrorHandler;\\r\\nwindow.onunhandledrejection = JitsiGlobalUnhandledRejection;\\r\\n\\r\\nconst GlobalOnErrorHandler = {\\r\\n    /**\\r\\n     * Adds new error handlers.\\r\\n     * @param handler the new handler.\\r\\n     */\\r\\n    addHandler(handler) {\\r\\n        handlers.push(handler);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Calls the global error handler if there is one.\\r\\n     * @param error the error to pass to the error handler\\r\\n     */\\r\\n    callErrorHandler(error) {\\r\\n        const errHandler = window.onerror;\\r\\n\\r\\n        if (!errHandler) {\\r\\n            return;\\r\\n        }\\r\\n        errHandler(null, null, null, null, error);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Calls the global rejection handler if there is one.\\r\\n     * @param error the error to pass to the rejection handler.\\r\\n     */\\r\\n    callUnhandledRejectionHandler(error) {\\r\\n        const errHandler = window.onunhandledrejection;\\r\\n\\r\\n        if (!errHandler) {\\r\\n            return;\\r\\n        }\\r\\n        errHandler(error);\\r\\n    }\\r\\n};\\r\\n\\r\\n\\r\\nmodule.exports = GlobalOnErrorHandler;\\r\\n\",\"/**\\r\\n * The errors for the JitsiTrack objects.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Generic error for jidesha extension for Chrome.\\r\\n */\\r\\nexport const CHROME_EXTENSION_GENERIC_ERROR\\r\\n    = 'gum.chrome_extension_generic_error';\\r\\n\\r\\n/**\\r\\n * An error which indicates that the jidesha extension for Chrome is\\r\\n * failed to install.\\r\\n */\\r\\nexport const CHROME_EXTENSION_INSTALLATION_ERROR\\r\\n    = 'gum.chrome_extension_installation_error';\\r\\n\\r\\n/**\\r\\n * This error indicates that the attempt to start screensharing was initiated by\\r\\n * a script which did not originate in user gesture handler. It means that\\r\\n * you should to trigger the action again in response to a button click for\\r\\n * example.\\r\\n * @type {string}\\r\\n */\\r\\nexport const CHROME_EXTENSION_USER_GESTURE_REQUIRED\\r\\n    = 'gum.chrome_extension_user_gesture_required';\\r\\n\\r\\n/**\\r\\n * An error which indicates that user canceled screen sharing window\\r\\n * selection dialog in jidesha extension for Chrome.\\r\\n */\\r\\nexport const CHROME_EXTENSION_USER_CANCELED\\r\\n    = 'gum.chrome_extension_user_canceled';\\r\\n\\r\\n/**\\r\\n * An error which indicates that some of requested constraints in\\r\\n * getUserMedia call were not satisfied.\\r\\n */\\r\\nexport const CONSTRAINT_FAILED = 'gum.constraint_failed';\\r\\n\\r\\n/**\\r\\n * A generic error which indicates an error occurred while selecting\\r\\n * a DesktopCapturerSource from the electron app.\\r\\n */\\r\\nexport const ELECTRON_DESKTOP_PICKER_ERROR\\r\\n    = 'gum.electron_desktop_picker_error';\\r\\n\\r\\n/**\\r\\n * An error which indicates a custom desktop picker could not be detected\\r\\n * for the electron app.\\r\\n */\\r\\nexport const ELECTRON_DESKTOP_PICKER_NOT_FOUND\\r\\n    = 'gum.electron_desktop_picker_not_found';\\r\\n\\r\\n/**\\r\\n * An error which indicates that the jidesha extension for Firefox is\\r\\n * needed to proceed with screen sharing, and that it is not installed.\\r\\n */\\r\\nexport const FIREFOX_EXTENSION_NEEDED = 'gum.firefox_extension_needed';\\r\\n\\r\\n/**\\r\\n * Generic getUserMedia error.\\r\\n */\\r\\nexport const GENERAL = 'gum.general';\\r\\n\\r\\n/**\\r\\n * An error which indicates that requested device was not found.\\r\\n */\\r\\nexport const NOT_FOUND = 'gum.not_found';\\r\\n\\r\\n/**\\r\\n * An error which indicates that user denied permission to share requested\\r\\n * device.\\r\\n */\\r\\nexport const PERMISSION_DENIED = 'gum.permission_denied';\\r\\n\\r\\n/**\\r\\n * An error which indicates that track has been already disposed and cannot\\r\\n * be longer used.\\r\\n */\\r\\nexport const TRACK_IS_DISPOSED = 'track.track_is_disposed';\\r\\n\\r\\n/**\\r\\n * An error which indicates that track has no MediaStream associated.\\r\\n */\\r\\nexport const TRACK_NO_STREAM_FOUND = 'track.no_stream_found';\\r\\n\\r\\n/**\\r\\n * An error which indicates that requested video resolution is not supported\\r\\n * by a webcam.\\r\\n */\\r\\nexport const UNSUPPORTED_RESOLUTION = 'gum.unsupported_resolution';\\r\\n\",\"/* global __filename */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\n\\r\\nimport BridgeChannel from './BridgeChannel';\\r\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\r\\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\\r\\nimport JitsiLocalTrack from './JitsiLocalTrack';\\r\\nimport Listenable from '../util/Listenable';\\r\\nimport { safeCounterIncrement } from '../util/MathUtil';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport browser from '../browser';\\r\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\r\\nimport RTCUtils from './RTCUtils';\\r\\nimport Statistics from '../statistics/statistics';\\r\\nimport TraceablePeerConnection from './TraceablePeerConnection';\\r\\nimport VideoType from '../../service/RTC/VideoType';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * The counter used to generated id numbers assigned to peer connections\\r\\n * @type {number}\\r\\n */\\r\\nlet peerConnectionIdCounter = 0;\\r\\n\\r\\n/**\\r\\n * The counter used to generate id number for the local\\r\\n * <code>MediaStreamTrack</code>s.\\r\\n * @type {number}\\r\\n */\\r\\nlet rtcTrackIdCounter = 0;\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param tracksInfo\\r\\n * @param options\\r\\n */\\r\\nfunction createLocalTracks(tracksInfo, options) {\\r\\n    const newTracks = [];\\r\\n    let deviceId = null;\\r\\n\\r\\n    tracksInfo.forEach(trackInfo => {\\r\\n        if (trackInfo.mediaType === MediaType.AUDIO) {\\r\\n            deviceId = options.micDeviceId;\\r\\n        } else if (trackInfo.videoType === VideoType.CAMERA) {\\r\\n            deviceId = options.cameraDeviceId;\\r\\n        }\\r\\n        rtcTrackIdCounter = safeCounterIncrement(rtcTrackIdCounter);\\r\\n        const localTrack = new JitsiLocalTrack({\\r\\n            ...trackInfo,\\r\\n            deviceId,\\r\\n            facingMode: options.facingMode,\\r\\n            rtcId: rtcTrackIdCounter,\\r\\n            effects: options.effects\\r\\n        });\\r\\n\\r\\n        newTracks.push(localTrack);\\r\\n    });\\r\\n\\r\\n    return newTracks;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates {@code JitsiLocalTrack} instances from the passed in meta information\\r\\n * about MedieaTracks.\\r\\n *\\r\\n * @param {Object[]} mediaStreamMetaData - An array of meta information with\\r\\n * MediaTrack instances. Each can look like:\\r\\n * {{\\r\\n *     stream: MediaStream instance that holds a track with audio or video,\\r\\n *     track: MediaTrack within the MediaStream,\\r\\n *     videoType: \\\"camera\\\" or \\\"desktop\\\" or falsy,\\r\\n *     sourceId: ID of the desktopsharing source,\\r\\n *     sourceType: The desktopsharing source type,\\r\\n *     effects: Array of effect types\\r\\n * }}\\r\\n */\\r\\nfunction _newCreateLocalTracks(mediaStreamMetaData = []) {\\r\\n    return mediaStreamMetaData.map(metaData => {\\r\\n        const {\\r\\n            sourceId,\\r\\n            sourceType,\\r\\n            stream,\\r\\n            track,\\r\\n            videoType,\\r\\n            effects\\r\\n        } = metaData;\\r\\n\\r\\n        const { deviceId, facingMode } = track.getSettings();\\r\\n\\r\\n        // FIXME Move rtcTrackIdCounter to a static method in JitsiLocalTrack\\r\\n        // so RTC does not need to handle ID management. This move would be\\r\\n        // safer to do once the old createLocalTracks is removed.\\r\\n        rtcTrackIdCounter = safeCounterIncrement(rtcTrackIdCounter);\\r\\n\\r\\n        return new JitsiLocalTrack({\\r\\n            deviceId,\\r\\n            facingMode,\\r\\n            mediaType: track.kind,\\r\\n            rtcId: rtcTrackIdCounter,\\r\\n            sourceId,\\r\\n            sourceType,\\r\\n            stream,\\r\\n            track,\\r\\n            videoType: videoType || null,\\r\\n            effects\\r\\n        });\\r\\n    });\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nexport default class RTC extends Listenable {\\r\\n    /**\\r\\n     *\\r\\n     * @param conference\\r\\n     * @param options\\r\\n     */\\r\\n    constructor(conference, options = {}) {\\r\\n        super();\\r\\n        this.conference = conference;\\r\\n\\r\\n        /**\\r\\n         * A map of active <tt>TraceablePeerConnection</tt>.\\r\\n         * @type {Map.<number, TraceablePeerConnection>}\\r\\n         */\\r\\n        this.peerConnections = new Map();\\r\\n\\r\\n        this.localTracks = [];\\r\\n\\r\\n        this.options = options;\\r\\n\\r\\n        // BridgeChannel instance.\\r\\n        // @private\\r\\n        // @type {BridgeChannel}\\r\\n        this._channel = null;\\r\\n\\r\\n        // A flag whether we had received that the channel had opened we can\\r\\n        // get this flag out of sync if for some reason channel got closed\\r\\n        // from server, a desired behaviour so we can see errors when this\\r\\n        // happen.\\r\\n        // @private\\r\\n        // @type {boolean}\\r\\n        this._channelOpen = false;\\r\\n\\r\\n        /**\\r\\n         * The value specified to the last invocation of setLastN before the\\r\\n         * channel completed opening. If non-null, the value will be sent\\r\\n         * through a channel (once) as soon as it opens and will then be\\r\\n         * discarded.\\r\\n         * @private\\r\\n         * @type {number}\\r\\n         */\\r\\n        this._lastN = -1;\\r\\n\\r\\n        /**\\r\\n         * Defines the last N endpoints list. It can be null or an array once\\r\\n         * initialised with a channel last N event.\\r\\n         * @type {Array<string>|null}\\r\\n         * @private\\r\\n         */\\r\\n        this._lastNEndpoints = null;\\r\\n\\r\\n        /**\\r\\n         * The number representing the maximum video height the local client\\r\\n         * should receive from the bridge.\\r\\n         *\\r\\n         * @type {number|undefined}\\r\\n         * @private\\r\\n         */\\r\\n        this._maxFrameHeight = undefined;\\r\\n\\r\\n        /**\\r\\n         * The endpoint ID of currently pinned participant or <tt>null</tt> if\\r\\n         * no user is pinned.\\r\\n         * @type {string|null}\\r\\n         * @private\\r\\n         */\\r\\n        this._pinnedEndpoint = null;\\r\\n\\r\\n        /**\\r\\n         * The endpoint IDs of currently selected participants.\\r\\n         *\\r\\n         * @type {Array}\\r\\n         * @private\\r\\n         */\\r\\n        this._selectedEndpoints = [];\\r\\n\\r\\n        // The last N change listener.\\r\\n        this._lastNChangeListener = this._onLastNChanged.bind(this);\\r\\n\\r\\n        this._onDeviceListChanged = this._onDeviceListChanged.bind(this);\\r\\n        this._updateAudioOutputForAudioTracks\\r\\n            = this._updateAudioOutputForAudioTracks.bind(this);\\r\\n\\r\\n        // Switch audio output device on all remote audio tracks. Local audio\\r\\n        // tracks handle this event by themselves.\\r\\n        if (RTCUtils.isDeviceChangeAvailable('output')) {\\r\\n            RTCUtils.addListener(\\r\\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\\r\\n                this._updateAudioOutputForAudioTracks\\r\\n            );\\r\\n\\r\\n            RTCUtils.addListener(\\r\\n                RTCEvents.DEVICE_LIST_CHANGED,\\r\\n                this._onDeviceListChanged\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes any listeners and stored state from this {@code RTC} instance.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    destroy() {\\r\\n        RTCUtils.removeListener(\\r\\n            RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\\r\\n            this._updateAudioOutputForAudioTracks\\r\\n        );\\r\\n\\r\\n        RTCUtils.removeListener(\\r\\n            RTCEvents.DEVICE_LIST_CHANGED,\\r\\n            this._onDeviceListChanged\\r\\n        );\\r\\n\\r\\n        this.removeListener(\\r\\n            RTCEvents.LASTN_ENDPOINT_CHANGED,\\r\\n            this._lastNChangeListener\\r\\n        );\\r\\n\\r\\n        if (this._channelOpenListener) {\\r\\n            this.removeListener(\\r\\n                RTCEvents.DATA_CHANNEL_OPEN,\\r\\n                this._channelOpenListener\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Exposes the private helper for converting a WebRTC MediaStream to a\\r\\n     * JitsiLocalTrack.\\r\\n     *\\r\\n     * @param {Array<Object>} tracksInfo\\r\\n     * @returns {Array<JitsiLocalTrack>}\\r\\n     */\\r\\n    static newCreateLocalTracks(tracksInfo) {\\r\\n        return _newCreateLocalTracks(tracksInfo);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates the local MediaStreams.\\r\\n     * @param {object} [options] Optional parameters.\\r\\n     * @param {array} options.devices The devices that will be requested.\\r\\n     * @param {string} options.resolution Resolution constraints.\\r\\n     * @param {string} options.cameraDeviceId\\r\\n     * @param {string} options.micDeviceId\\r\\n     * @returns {*} Promise object that will receive the new JitsiTracks\\r\\n     */\\r\\n    static obtainAudioAndVideoPermissions(options) {\\r\\n        const usesNewGumFlow = browser.usesNewGumFlow();\\r\\n        const obtainMediaPromise = usesNewGumFlow\\r\\n            ? RTCUtils.newObtainAudioAndVideoPermissions(options)\\r\\n            : RTCUtils.obtainAudioAndVideoPermissions(options);\\r\\n\\r\\n        return obtainMediaPromise.then(tracksInfo => {\\r\\n            if (usesNewGumFlow) {\\r\\n                return _newCreateLocalTracks(tracksInfo);\\r\\n            }\\r\\n\\r\\n            return createLocalTracks(tracksInfo, options);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes the bridge channel of this instance.\\r\\n     * At least one of both, peerconnection or wsUrl parameters, must be\\r\\n     * given.\\r\\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\\r\\n     * instance.\\r\\n     * @param {string} [wsUrl] WebSocket URL.\\r\\n     */\\r\\n    initializeBridgeChannel(peerconnection, wsUrl) {\\r\\n        this._channel = new BridgeChannel(\\r\\n            peerconnection, wsUrl, this.eventEmitter);\\r\\n\\r\\n        this._channelOpenListener = () => {\\r\\n            // Mark that channel as opened.\\r\\n            this._channelOpen = true;\\r\\n\\r\\n            // When the channel becomes available, tell the bridge about\\r\\n            // video selections so that it can do adaptive simulcast,\\r\\n            // we want the notification to trigger even if userJid\\r\\n            // is undefined, or null.\\r\\n            try {\\r\\n                this._channel.sendPinnedEndpointMessage(\\r\\n                    this._pinnedEndpoint);\\r\\n                this._channel.sendSelectedEndpointsMessage(\\r\\n                    this._selectedEndpoints);\\r\\n\\r\\n                if (typeof this._maxFrameHeight !== 'undefined') {\\r\\n                    this._channel.sendReceiverVideoConstraintMessage(\\r\\n                        this._maxFrameHeight);\\r\\n                }\\r\\n            } catch (error) {\\r\\n                GlobalOnErrorHandler.callErrorHandler(error);\\r\\n                logger.error(\\r\\n                    `Cannot send selected(${this._selectedEndpoint})`\\r\\n                    + `pinned(${this._pinnedEndpoint})`\\r\\n                    + `frameHeight(${this._maxFrameHeight}) endpoint message`,\\r\\n                    error);\\r\\n            }\\r\\n\\r\\n            this.removeListener(RTCEvents.DATA_CHANNEL_OPEN,\\r\\n                this._channelOpenListener);\\r\\n            this._channelOpenListener = null;\\r\\n\\r\\n            // If setLastN was invoked before the bridge channel completed\\r\\n            // opening, apply the specified value now that the channel\\r\\n            // is open. NOTE that -1 is the default value assumed by both\\r\\n            // RTC module and the JVB.\\r\\n            if (this._lastN !== -1) {\\r\\n                this._channel.sendSetLastNMessage(this._lastN);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.addListener(RTCEvents.DATA_CHANNEL_OPEN,\\r\\n            this._channelOpenListener);\\r\\n\\r\\n        // Add Last N change listener.\\r\\n        this.addListener(RTCEvents.LASTN_ENDPOINT_CHANGED,\\r\\n            this._lastNChangeListener);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked when the list of known audio and video devices has\\r\\n     * been updated. Attempts to update the known available audio output\\r\\n     * devices.\\r\\n     *\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onDeviceListChanged() {\\r\\n        this._updateAudioOutputForAudioTracks(RTCUtils.getAudioOutputDevice());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Receives events when Last N had changed.\\r\\n     * @param {array} lastNEndpoints The new Last N endpoints.\\r\\n     * @private\\r\\n     */\\r\\n    _onLastNChanged(lastNEndpoints = []) {\\r\\n        const oldLastNEndpoints = this._lastNEndpoints || [];\\r\\n        let leavingLastNEndpoints = [];\\r\\n        let enteringLastNEndpoints = [];\\r\\n\\r\\n        this._lastNEndpoints = lastNEndpoints;\\r\\n\\r\\n        leavingLastNEndpoints = oldLastNEndpoints.filter(\\r\\n            id => !this.isInLastN(id));\\r\\n\\r\\n        enteringLastNEndpoints = lastNEndpoints.filter(\\r\\n            id => oldLastNEndpoints.indexOf(id) === -1);\\r\\n\\r\\n        this.conference.eventEmitter.emit(\\r\\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\\r\\n            leavingLastNEndpoints,\\r\\n            enteringLastNEndpoints);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Should be called when current media session ends and after the\\r\\n     * PeerConnection has been closed using PeerConnection.close() method.\\r\\n     */\\r\\n    onCallEnded() {\\r\\n        if (this._channel) {\\r\\n            // The BridgeChannel is not explicitly closed as the PeerConnection\\r\\n            // is closed on call ended which triggers datachannel onclose\\r\\n            // events. If using a WebSocket, the channel must be closed since\\r\\n            // it is not managed by the PeerConnection.\\r\\n            // The reference is cleared to disable any logic related to the\\r\\n            // channel.\\r\\n            if (this._channel && this._channel.mode === 'websocket') {\\r\\n                this._channel.close();\\r\\n            }\\r\\n\\r\\n            this._channel = null;\\r\\n            this._channelOpen = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the maximum video size the local participant should receive from\\r\\n     * remote participants. Will cache the value and send it through the channel\\r\\n     * once it is created.\\r\\n     *\\r\\n     * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\\r\\n     * this receiver is willing to receive.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    setReceiverVideoConstraint(maxFrameHeight) {\\r\\n        this._maxFrameHeight = maxFrameHeight;\\r\\n\\r\\n        if (this._channel && this._channelOpen) {\\r\\n            this._channel.sendReceiverVideoConstraintMessage(maxFrameHeight);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Elects the participants with the given ids to be the selected\\r\\n     * participants in order to always receive video for this participant (even\\r\\n     * when last n is enabled). If there is no channel we store it and send it\\r\\n     * through the channel once it is created.\\r\\n     *\\r\\n     * @param {Array<string>} ids - The user ids.\\r\\n     * @throws NetworkError or InvalidStateError or Error if the operation\\r\\n     * fails.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    selectEndpoints(ids) {\\r\\n        this._selectedEndpoints = ids;\\r\\n\\r\\n        if (this._channel && this._channelOpen) {\\r\\n            this._channel.sendSelectedEndpointsMessage(ids);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Elects the participant with the given id to be the pinned participant in\\r\\n     * order to always receive video for this participant (even when last n is\\r\\n     * enabled).\\r\\n     * @param {stirng} id The user id.\\r\\n     * @throws NetworkError or InvalidStateError or Error if the operation\\r\\n     * fails.\\r\\n     */\\r\\n    pinEndpoint(id) {\\r\\n        // Cache the value if channel is missing, till we open it.\\r\\n        this._pinnedEndpoint = id;\\r\\n        if (this._channel && this._channelOpen) {\\r\\n            this._channel.sendPinnedEndpointMessage(id);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param eventType\\r\\n     * @param listener\\r\\n     */\\r\\n    static addListener(eventType, listener) {\\r\\n        RTCUtils.addListener(eventType, listener);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param eventType\\r\\n     * @param listener\\r\\n     */\\r\\n    static removeListener(eventType, listener) {\\r\\n        RTCUtils.removeListener(eventType, listener);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param options\\r\\n     */\\r\\n    static init(options = {}) {\\r\\n        this.options = options;\\r\\n\\r\\n        return RTCUtils.init(this.options);\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    /**\\r\\n     * Creates new <tt>TraceablePeerConnection</tt>\\r\\n     * @param {SignalingLayer} signaling The signaling layer that will\\r\\n     *      provide information about the media or participants which is not\\r\\n     *      carried over SDP.\\r\\n     * @param {object} iceConfig An object describing the ICE config like\\r\\n     *      defined in the WebRTC specification.\\r\\n     * @param {boolean} isP2P Indicates whether or not the new TPC will be used\\r\\n     *      in a peer to peer type of session.\\r\\n     * @param {object} options The config options.\\r\\n     * @param {boolean} options.disableSimulcast If set to 'true' will disable\\r\\n     *      the simulcast.\\r\\n     * @param {boolean} options.disableRtx If set to 'true' will disable the\\r\\n     *      RTX.\\r\\n     * @param {boolean} options.disableH264 If set to 'true' H264 will be\\r\\n     *      disabled by removing it from the SDP.\\r\\n     * @param {boolean} options.preferH264 If set to 'true' H264 will be\\r\\n     *      preferred over other video codecs.\\r\\n     * @param {boolean} options.startSilent If set to 'true' no audio will be sent or received.\\r\\n     * @return {TraceablePeerConnection}\\r\\n     */\\r\\n    createPeerConnection(signaling, iceConfig, isP2P, options) {\\r\\n        const pcConstraints = RTC.getPCConstraints(isP2P);\\r\\n\\r\\n        if (typeof options.abtestSuspendVideo !== 'undefined') {\\r\\n            RTCUtils.setSuspendVideo(pcConstraints, options.abtestSuspendVideo);\\r\\n\\r\\n            Statistics.analytics.addPermanentProperties(\\r\\n                { abtestSuspendVideo: options.abtestSuspendVideo });\\r\\n        }\\r\\n\\r\\n        // FIXME: We should rename iceConfig to pcConfig.\\r\\n        if (browser.supportsSdpSemantics()) {\\r\\n            iceConfig.sdpSemantics = 'plan-b';\\r\\n        }\\r\\n\\r\\n        peerConnectionIdCounter = safeCounterIncrement(peerConnectionIdCounter);\\r\\n\\r\\n        const newConnection\\r\\n            = new TraceablePeerConnection(\\r\\n                this,\\r\\n                peerConnectionIdCounter,\\r\\n                signaling,\\r\\n                iceConfig, pcConstraints,\\r\\n                isP2P, options);\\r\\n\\r\\n        this.peerConnections.set(newConnection.id, newConnection);\\r\\n\\r\\n        return newConnection;\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Removed given peer connection from this RTC module instance.\\r\\n     * @param {TraceablePeerConnection} traceablePeerConnection\\r\\n     * @return {boolean} <tt>true</tt> if the given peer connection was removed\\r\\n     * successfully or <tt>false</tt> if there was no peer connection mapped in\\r\\n     * this RTC instance.\\r\\n     */\\r\\n    _removePeerConnection(traceablePeerConnection) {\\r\\n        const id = traceablePeerConnection.id;\\r\\n\\r\\n        if (this.peerConnections.has(id)) {\\r\\n            // NOTE Remote tracks are not removed here.\\r\\n            this.peerConnections.delete(id);\\r\\n\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param track\\r\\n     */\\r\\n    addLocalTrack(track) {\\r\\n        if (!track) {\\r\\n            throw new Error('track must not be null nor undefined');\\r\\n        }\\r\\n\\r\\n        this.localTracks.push(track);\\r\\n\\r\\n        track.conference = this.conference;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the current value for \\\"lastN\\\" - the amount of videos are going\\r\\n     * to be delivered. When set to -1 for unlimited or all available videos.\\r\\n     * @return {number}\\r\\n     */\\r\\n    getLastN() {\\r\\n        return this._lastN;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Get local video track.\\r\\n     * @returns {JitsiLocalTrack|undefined}\\r\\n     */\\r\\n    getLocalVideoTrack() {\\r\\n        const localVideo = this.getLocalTracks(MediaType.VIDEO);\\r\\n\\r\\n\\r\\n        return localVideo.length ? localVideo[0] : undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Get local audio track.\\r\\n     * @returns {JitsiLocalTrack|undefined}\\r\\n     */\\r\\n    getLocalAudioTrack() {\\r\\n        const localAudio = this.getLocalTracks(MediaType.AUDIO);\\r\\n\\r\\n\\r\\n        return localAudio.length ? localAudio[0] : undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the local tracks of the given media type, or all local tracks if\\r\\n     * no specific type is given.\\r\\n     * @param {MediaType} [mediaType] Optional media type filter.\\r\\n     * (audio or video).\\r\\n     */\\r\\n    getLocalTracks(mediaType) {\\r\\n        let tracks = this.localTracks.slice();\\r\\n\\r\\n        if (mediaType !== undefined) {\\r\\n            tracks = tracks.filter(\\r\\n                track => track.getType() === mediaType);\\r\\n        }\\r\\n\\r\\n        return tracks;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Obtains all remote tracks currently known to this RTC module instance.\\r\\n     * @param {MediaType} [mediaType] The remote tracks will be filtered\\r\\n     *      by their media type if this argument is specified.\\r\\n     * @return {Array<JitsiRemoteTrack>}\\r\\n     */\\r\\n    getRemoteTracks(mediaType) {\\r\\n        let remoteTracks = [];\\r\\n\\r\\n        for (const tpc of this.peerConnections.values()) {\\r\\n            const pcRemoteTracks = tpc.getRemoteTracks(undefined, mediaType);\\r\\n\\r\\n            if (pcRemoteTracks) {\\r\\n                remoteTracks = remoteTracks.concat(pcRemoteTracks);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return remoteTracks;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set mute for all local audio streams attached to the conference.\\r\\n     * @param value The mute value.\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    setAudioMute(value) {\\r\\n        const mutePromises = [];\\r\\n\\r\\n        this.getLocalTracks(MediaType.AUDIO).forEach(audioTrack => {\\r\\n            // this is a Promise\\r\\n            mutePromises.push(value ? audioTrack.mute() : audioTrack.unmute());\\r\\n        });\\r\\n\\r\\n        // We return a Promise from all Promises so we can wait for their\\r\\n        // execution.\\r\\n        return Promise.all(mutePromises);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param track\\r\\n     */\\r\\n    removeLocalTrack(track) {\\r\\n        const pos = this.localTracks.indexOf(track);\\r\\n\\r\\n        if (pos === -1) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.localTracks.splice(pos, 1);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes all JitsiRemoteTracks associated with given MUC nickname\\r\\n     * (resource part of the JID). Returns array of removed tracks.\\r\\n     *\\r\\n     * @param {string} Owner The resource part of the MUC JID.\\r\\n     * @returns {JitsiRemoteTrack[]}\\r\\n     */\\r\\n    removeRemoteTracks(owner) {\\r\\n        let removedTracks = [];\\r\\n\\r\\n        for (const tpc of this.peerConnections.values()) {\\r\\n            const pcRemovedTracks = tpc.removeRemoteTracks(owner);\\r\\n\\r\\n            removedTracks = removedTracks.concat(pcRemovedTracks);\\r\\n        }\\r\\n\\r\\n        logger.debug(\\r\\n            `Removed remote tracks for ${owner}`\\r\\n                + ` count: ${removedTracks.length}`);\\r\\n\\r\\n        return removedTracks;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    static getPCConstraints(isP2P) {\\r\\n        const pcConstraints\\r\\n            = isP2P ? RTCUtils.p2pPcConstraints : RTCUtils.pcConstraints;\\r\\n\\r\\n        if (!pcConstraints) {\\r\\n            return {};\\r\\n        }\\r\\n\\r\\n        return JSON.parse(JSON.stringify(pcConstraints));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param elSelector\\r\\n     * @param stream\\r\\n     */\\r\\n    static attachMediaStream(elSelector, stream) {\\r\\n        return RTCUtils.attachMediaStream(elSelector, stream);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the id of the given stream.\\r\\n     * @param {MediaStream} stream\\r\\n     */\\r\\n    static getStreamID(stream) {\\r\\n        return RTCUtils.getStreamID(stream);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the id of the given track.\\r\\n     * @param {MediaStreamTrack} track\\r\\n     */\\r\\n    static getTrackID(track) {\\r\\n        return RTCUtils.getTrackID(track);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns true if retrieving the the list of input devices is supported\\r\\n     * and false if not.\\r\\n     */\\r\\n    static isDeviceListAvailable() {\\r\\n        return RTCUtils.isDeviceListAvailable();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns true if changing the input (camera / microphone) or output\\r\\n     * (audio) device is supported and false if not.\\r\\n     * @param {string} [deviceType] Type of device to change. Default is\\r\\n     *      undefined or 'input', 'output' - for audio output device change.\\r\\n     * @returns {boolean} true if available, false otherwise.\\r\\n     */\\r\\n    static isDeviceChangeAvailable(deviceType) {\\r\\n        return RTCUtils.isDeviceChangeAvailable(deviceType);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns whether the current execution environment supports WebRTC (for\\r\\n     * use within this library).\\r\\n     *\\r\\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\\r\\n     * execution environment (for use within this library); {@code false},\\r\\n     * otherwise.\\r\\n     */\\r\\n    static isWebRtcSupported() {\\r\\n        return browser.isSupported();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns currently used audio output device id, '' stands for default\\r\\n     * device\\r\\n     * @returns {string}\\r\\n     */\\r\\n    static getAudioOutputDevice() {\\r\\n        return RTCUtils.getAudioOutputDevice();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns list of available media devices if its obtained, otherwise an\\r\\n     * empty array is returned/\\r\\n     * @returns {array} list of available media devices.\\r\\n     */\\r\\n    static getCurrentlyAvailableMediaDevices() {\\r\\n        return RTCUtils.getCurrentlyAvailableMediaDevices();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns event data for device to be reported to stats.\\r\\n     * @returns {MediaDeviceInfo} device.\\r\\n     */\\r\\n    static getEventDataForActiveDevice(device) {\\r\\n        return RTCUtils.getEventDataForActiveDevice(device);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets current audio output device.\\r\\n     * @param {string} deviceId Id of 'audiooutput' device from\\r\\n     *      navigator.mediaDevices.enumerateDevices().\\r\\n     * @returns {Promise} resolves when audio output is changed, is rejected\\r\\n     *      otherwise\\r\\n     */\\r\\n    static setAudioOutputDevice(deviceId) {\\r\\n        return RTCUtils.setAudioOutputDevice(deviceId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns <tt>true<tt/> if given WebRTC MediaStream is considered a valid\\r\\n     * \\\"user\\\" stream which means that it's not a \\\"receive only\\\" stream nor a\\r\\n     * \\\"mixed\\\" JVB stream.\\r\\n     *\\r\\n     * Clients that implement Unified Plan, such as Firefox use recvonly\\r\\n     * \\\"streams/channels/tracks\\\" for receiving remote stream/tracks, as opposed\\r\\n     * to Plan B where there are only 3 channels: audio, video and data.\\r\\n     *\\r\\n     * @param {MediaStream} stream The WebRTC MediaStream instance.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    static isUserStream(stream) {\\r\\n        return RTC.isUserStreamById(RTCUtils.getStreamID(stream));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns <tt>true<tt/> if a WebRTC MediaStream identified by given stream\\r\\n     * ID is considered a valid \\\"user\\\" stream which means that it's not a\\r\\n     * \\\"receive only\\\" stream nor a \\\"mixed\\\" JVB stream.\\r\\n     *\\r\\n     * Clients that implement Unified Plan, such as Firefox use recvonly\\r\\n     * \\\"streams/channels/tracks\\\" for receiving remote stream/tracks, as opposed\\r\\n     * to Plan B where there are only 3 channels: audio, video and data.\\r\\n     *\\r\\n     * @param {string} streamId The id of WebRTC MediaStream.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    static isUserStreamById(streamId) {\\r\\n        return streamId && streamId !== 'mixedmslabel'\\r\\n            && streamId !== 'default';\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Allows to receive list of available cameras/microphones.\\r\\n     * @param {function} callback Would receive array of devices as an\\r\\n     *      argument.\\r\\n     */\\r\\n    static enumerateDevices(callback) {\\r\\n        RTCUtils.enumerateDevices(callback);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A method to handle stopping of the stream.\\r\\n     * One point to handle the differences in various implementations.\\r\\n     * @param {MediaStream} mediaStream MediaStream object to stop.\\r\\n     */\\r\\n    static stopMediaStream(mediaStream) {\\r\\n        RTCUtils.stopMediaStream(mediaStream);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns whether the desktop sharing is enabled or not.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    static isDesktopSharingEnabled() {\\r\\n        return RTCUtils.isDesktopSharingEnabled();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Closes the currently opened bridge channel.\\r\\n     */\\r\\n    closeBridgeChannel() {\\r\\n        if (this._channel) {\\r\\n            this._channel.close();\\r\\n            this._channelOpen = false;\\r\\n\\r\\n            this.removeListener(RTCEvents.LASTN_ENDPOINT_CHANGED,\\r\\n                this._lastNChangeListener);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n    /**\\r\\n     *\\r\\n     * @param {TraceablePeerConnection} tpc\\r\\n     * @param {number} ssrc\\r\\n     * @param {number} audioLevel\\r\\n     * @param {boolean} isLocal\\r\\n     */\\r\\n    setAudioLevel(tpc, ssrc, audioLevel, isLocal) {\\r\\n        const track = tpc.getTrackBySSRC(ssrc);\\r\\n\\r\\n        if (!track) {\\r\\n            return;\\r\\n        } else if (!track.isAudioTrack()) {\\r\\n            logger.warn(`Received audio level for non-audio track: ${ssrc}`);\\r\\n\\r\\n            return;\\r\\n        } else if (track.isLocal() !== isLocal) {\\r\\n            logger.error(\\r\\n                `${track} was expected to ${isLocal ? 'be' : 'not be'} local`);\\r\\n        }\\r\\n\\r\\n        track.setAudioLevel(audioLevel, tpc);\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Sends message via the bridge channel.\\r\\n     * @param {string} to The id of the endpoint that should receive the\\r\\n     *      message. If \\\"\\\" the message will be sent to all participants.\\r\\n     * @param {object} payload The payload of the message.\\r\\n     * @throws NetworkError or InvalidStateError or Error if the operation\\r\\n     * fails or there is no data channel created.\\r\\n     */\\r\\n    sendChannelMessage(to, payload) {\\r\\n        if (this._channel) {\\r\\n            this._channel.sendMessage(to, payload);\\r\\n        } else {\\r\\n            throw new Error('Channel support is disabled!');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Selects a new value for \\\"lastN\\\". The requested amount of videos are going\\r\\n     * to be delivered after the value is in effect. Set to -1 for unlimited or\\r\\n     * all available videos.\\r\\n     * @param {number} value the new value for lastN.\\r\\n     */\\r\\n    setLastN(value) {\\r\\n        if (this._lastN !== value) {\\r\\n            this._lastN = value;\\r\\n            if (this._channel && this._channelOpen) {\\r\\n                this._channel.sendSetLastNMessage(value);\\r\\n            }\\r\\n            this.eventEmitter.emit(RTCEvents.LASTN_VALUE_CHANGED, value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Indicates if the endpoint id is currently included in the last N.\\r\\n     * @param {string} id The endpoint id that we check for last N.\\r\\n     * @returns {boolean} true if the endpoint id is in the last N or if we\\r\\n     * don't have bridge channel support, otherwise we return false.\\r\\n     */\\r\\n    isInLastN(id) {\\r\\n        return !this._lastNEndpoints // lastNEndpoints not initialised yet.\\r\\n            || this._lastNEndpoints.indexOf(id) > -1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates the target audio output device for all remote audio tracks.\\r\\n     *\\r\\n     * @param {string} deviceId - The device id of the audio ouput device to\\r\\n     * use for all remote tracks.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _updateAudioOutputForAudioTracks(deviceId) {\\r\\n        const remoteAudioTracks = this.getRemoteTracks(MediaType.AUDIO);\\r\\n\\r\\n        for (const track of remoteAudioTracks) {\\r\\n            track.setAudioOutput(deviceId);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"/* global module */\\r\\n/**\\r\\n * Enumeration of the video types\\r\\n * @type {{CAMERA: string, DESKTOP: string}}\\r\\n */\\r\\nconst VideoType = {\\r\\n    /**\\r\\n     * The camera video type.\\r\\n     */\\r\\n    CAMERA: 'camera',\\r\\n\\r\\n    /**\\r\\n     * The desktop video type.\\r\\n     */\\r\\n    DESKTOP: 'desktop'\\r\\n};\\r\\n\\r\\nmodule.exports = VideoType;\\r\\n\",\"import * as JitsiTrackErrors from './JitsiTrackErrors';\\r\\n\\r\\nconst TRACK_ERROR_TO_MESSAGE_MAP = {};\\r\\n\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.UNSUPPORTED_RESOLUTION]\\r\\n    = 'Video resolution is not supported: ';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR]\\r\\n    = 'Failed to install Chrome extension';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[\\r\\n    JitsiTrackErrors.CHROME_EXTENSION_USER_GESTURE_REQUIRED]\\r\\n    = 'Failed to install Chrome extension - installations can only be initiated'\\r\\n        + ' by a user gesture.';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED]\\r\\n    = 'User canceled Chrome\\\\'s screen sharing prompt';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR]\\r\\n    = 'Unknown error from Chrome extension';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR]\\r\\n    = 'Unkown error from desktop picker';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND]\\r\\n    = 'Failed to detect desktop picker';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.GENERAL]\\r\\n    = 'Generic getUserMedia error';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.PERMISSION_DENIED]\\r\\n    = 'User denied permission to use device(s): ';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.NOT_FOUND]\\r\\n    = 'Requested device(s) was/were not found: ';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CONSTRAINT_FAILED]\\r\\n    = 'Constraint could not be satisfied: ';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_IS_DISPOSED]\\r\\n    = 'Track has been already disposed';\\r\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_NO_STREAM_FOUND]\\r\\n    = 'Track does not have an associated Media Stream';\\r\\n\\r\\n// FIXME: Using prototype inheritance because otherwise instanceof is not\\r\\n// working properly (see https://github.com/babel/babel/issues/3083)\\r\\n\\r\\n/**\\r\\n *\\r\\n * Represents an error that occurred to a JitsiTrack. Can represent various\\r\\n * types of errors. For error descriptions (@see JitsiTrackErrors).\\r\\n *\\r\\n * @extends Error\\r\\n *\\r\\n *\\r\\n * @constructor\\r\\n * @param {Object|string} error - error object or error name\\r\\n * @param {Object|string} (options) - getUserMedia constraints object or\\r\\n * error message\\r\\n * @param {('audio'|'video'|'desktop'|'screen'|'audiooutput')[]} (devices) -\\r\\n * list of getUserMedia requested devices\\r\\n */\\r\\nfunction JitsiTrackError(error, options, devices) {\\r\\n    if (typeof error === 'object' && typeof error.name !== 'undefined') {\\r\\n        /**\\r\\n         * Additional information about original getUserMedia error\\r\\n         * and constraints.\\r\\n         * @type {{\\r\\n         *     error: Object,\\r\\n         *     constraints: Object,\\r\\n         *     devices: Array.<'audio'|'video'|'desktop'|'screen'>\\r\\n         * }}\\r\\n         */\\r\\n        this.gum = {\\r\\n            error,\\r\\n            constraints: options,\\r\\n            devices: devices && Array.isArray(devices)\\r\\n                ? devices.slice(0)\\r\\n                : undefined\\r\\n        };\\r\\n\\r\\n        switch (error.name) {\\r\\n        case 'NotAllowedError':\\r\\n        case 'PermissionDeniedError':\\r\\n        case 'SecurityError':\\r\\n            this.name = JitsiTrackErrors.PERMISSION_DENIED;\\r\\n            this.message\\r\\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\\r\\n                    + (this.gum.devices || []).join(', ');\\r\\n            break;\\r\\n        case 'DevicesNotFoundError':\\r\\n        case 'NotFoundError':\\r\\n            this.name = JitsiTrackErrors.NOT_FOUND;\\r\\n            this.message\\r\\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\\r\\n                    + (this.gum.devices || []).join(', ');\\r\\n            break;\\r\\n        case 'ConstraintNotSatisfiedError':\\r\\n        case 'OverconstrainedError': {\\r\\n            const constraintName = error.constraintName || error.constraint;\\r\\n\\r\\n            // we treat deviceId as unsupported resolution, as we want to\\r\\n            // retry and finally if everything fails to remove deviceId from\\r\\n            // mandatory constraints\\r\\n            if (options\\r\\n                    && options.video\\r\\n                    && (!devices || devices.indexOf('video') > -1)\\r\\n                    && (constraintName === 'minWidth'\\r\\n                        || constraintName === 'maxWidth'\\r\\n                        || constraintName === 'minHeight'\\r\\n                        || constraintName === 'maxHeight'\\r\\n                        || constraintName === 'width'\\r\\n                        || constraintName === 'height'\\r\\n                        || constraintName === 'deviceId')) {\\r\\n                this.name = JitsiTrackErrors.UNSUPPORTED_RESOLUTION;\\r\\n                this.message\\r\\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\\r\\n                        + getResolutionFromFailedConstraint(\\r\\n                            constraintName,\\r\\n                            options);\\r\\n            } else {\\r\\n                this.name = JitsiTrackErrors.CONSTRAINT_FAILED;\\r\\n                this.message\\r\\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\\r\\n                        + error.constraintName;\\r\\n            }\\r\\n            break;\\r\\n        }\\r\\n\\r\\n        default:\\r\\n            this.name = JitsiTrackErrors.GENERAL;\\r\\n            this.message\\r\\n                = error.message || TRACK_ERROR_TO_MESSAGE_MAP[this.name];\\r\\n            break;\\r\\n        }\\r\\n    } else if (typeof error === 'string') {\\r\\n        if (TRACK_ERROR_TO_MESSAGE_MAP[error]) {\\r\\n            this.name = error;\\r\\n            this.message = options || TRACK_ERROR_TO_MESSAGE_MAP[error];\\r\\n        } else {\\r\\n            // this is some generic error that do not fit any of our\\r\\n            // pre-defined errors, so don't give it any specific name, just\\r\\n            // store message\\r\\n            this.message = error;\\r\\n        }\\r\\n    } else {\\r\\n        throw new Error('Invalid arguments');\\r\\n    }\\r\\n\\r\\n    this.stack = error.stack || (new Error()).stack;\\r\\n}\\r\\n\\r\\nJitsiTrackError.prototype = Object.create(Error.prototype);\\r\\nJitsiTrackError.prototype.constructor = JitsiTrackError;\\r\\n\\r\\n/**\\r\\n * Gets failed resolution constraint from corresponding object.\\r\\n * @param {string} failedConstraintName\\r\\n * @param {Object} constraints\\r\\n * @returns {string|number}\\r\\n */\\r\\nfunction getResolutionFromFailedConstraint(failedConstraintName, constraints) {\\r\\n    if (constraints && constraints.video && constraints.video.mandatory) {\\r\\n        switch (failedConstraintName) {\\r\\n        case 'width':\\r\\n            return constraints.video.mandatory.minWidth;\\r\\n        case 'height':\\r\\n            return constraints.video.mandatory.minHeight;\\r\\n        default:\\r\\n            return constraints.video.mandatory[failedConstraintName] || '';\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return '';\\r\\n}\\r\\n\\r\\nexport default JitsiTrackError;\\r\\n\",\"/**\\r\\n * The media track was removed to the conference.\\r\\n */\\r\\nexport const LOCAL_TRACK_STOPPED = 'track.stopped';\\r\\n\\r\\n/**\\r\\n * Audio levels of a this track was changed.\\r\\n * The first argument is a number with audio level value in range [0, 1].\\r\\n * The second argument is a <tt>TraceablePeerConnection</tt> which is the peer\\r\\n * connection which measured the audio level (one audio track can be added\\r\\n * to multiple peer connection at the same time). This argument is optional for\\r\\n * local tracks for which we can measure audio level without the peer\\r\\n * connection (the value will be <tt>undefined</tt>).\\r\\n *\\r\\n * NOTE The second argument should be treated as library internal and can be\\r\\n * removed at any time.\\r\\n */\\r\\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'track.audioLevelsChanged';\\r\\n\\r\\n/**\\r\\n * The audio output of the track was changed.\\r\\n */\\r\\nexport const TRACK_AUDIO_OUTPUT_CHANGED = 'track.audioOutputChanged';\\r\\n\\r\\n/**\\r\\n * A media track mute status was changed.\\r\\n */\\r\\nexport const TRACK_MUTE_CHANGED = 'track.trackMuteChanged';\\r\\n\\r\\n/**\\r\\n * The video type(\\\"camera\\\" or \\\"desktop\\\") of the track was changed.\\r\\n */\\r\\nexport const TRACK_VIDEOTYPE_CHANGED = 'track.videoTypeChanged';\\r\\n\\r\\n/**\\r\\n * Indicates that the track is not receiving any data even though we expect it\\r\\n * to receive data (i.e. the stream is not stopped).\\r\\n */\\r\\nexport const NO_DATA_FROM_SOURCE = 'track.no_data_from_source';\\r\\n\",\"/**\\r\\n * The errors for the conference.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Indicates that client must be authenticated to create the conference.\\r\\n */\\r\\nexport const AUTHENTICATION_REQUIRED = 'conference.authenticationRequired';\\r\\n\\r\\n/**\\r\\n * Indicates that chat error occurred.\\r\\n */\\r\\nexport const CHAT_ERROR = 'conference.chatError';\\r\\n\\r\\n/**\\r\\n * Indicates that conference has been destroyed.\\r\\n */\\r\\nexport const CONFERENCE_DESTROYED = 'conference.destroyed';\\r\\n\\r\\n/**\\r\\n * Indicates that max users limit has been reached.\\r\\n */\\r\\nexport const CONFERENCE_MAX_USERS = 'conference.max_users';\\r\\n\\r\\n/**\\r\\n * Indicates that a connection error occurred when trying to join a conference.\\r\\n */\\r\\nexport const CONNECTION_ERROR = 'conference.connectionError';\\r\\n\\r\\n/**\\r\\n * Indicates that a connection error is due to not allowed,\\r\\n * occurred when trying to join a conference.\\r\\n */\\r\\nexport const NOT_ALLOWED_ERROR = 'conference.connectionError.notAllowed';\\r\\n\\r\\n/**\\r\\n * Indicates that focus error happened.\\r\\n */\\r\\nexport const FOCUS_DISCONNECTED = 'conference.focusDisconnected';\\r\\n\\r\\n/**\\r\\n * Indicates that focus left the conference.\\r\\n */\\r\\nexport const FOCUS_LEFT = 'conference.focusLeft';\\r\\n\\r\\n/**\\r\\n * Indicates that graceful shutdown happened.\\r\\n */\\r\\nexport const GRACEFUL_SHUTDOWN = 'conference.gracefulShutdown';\\r\\n\\r\\n/**\\r\\n * Indicates that the versions of the server side components are incompatible\\r\\n * with the client side.\\r\\n */\\r\\nexport const INCOMPATIBLE_SERVER_VERSIONS\\r\\n    = 'conference.incompatible_server_versions';\\r\\n\\r\\n/**\\r\\n * Indicates that offer/answer had failed.\\r\\n */\\r\\nexport const OFFER_ANSWER_FAILED = 'conference.offerAnswerFailed';\\r\\n\\r\\n/**\\r\\n * Indicates that password cannot be set for this conference.\\r\\n */\\r\\nexport const PASSWORD_NOT_SUPPORTED = 'conference.passwordNotSupported';\\r\\n\\r\\n/**\\r\\n * Indicates that a password is required in order to join the conference.\\r\\n */\\r\\nexport const PASSWORD_REQUIRED = 'conference.passwordRequired';\\r\\n\\r\\n/**\\r\\n * Indicates that reservation system returned error.\\r\\n */\\r\\nexport const RESERVATION_ERROR = 'conference.reservationError';\\r\\n\\r\\n/**\\r\\n * Indicates that the conference setup failed.\\r\\n */\\r\\nexport const SETUP_FAILED = 'conference.setup_failed';\\r\\n\\r\\n/**\\r\\n * Indicates that there is no available videobridge.\\r\\n */\\r\\nexport const VIDEOBRIDGE_NOT_AVAILABLE = 'conference.videobridgeNotAvailable';\\r\\n\",\"/* global $ */\\r\\n\\r\\nimport SDPUtil from './SDPUtil';\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param sdp\\r\\n */\\r\\nexport default function SDP(sdp) {\\r\\n    const media = sdp.split('\\\\r\\\\nm=');\\r\\n\\r\\n    for (let i = 1, length = media.length; i < length; i++) {\\r\\n        let mediaI = `m=${media[i]}`;\\r\\n\\r\\n        if (i !== length - 1) {\\r\\n            mediaI += '\\\\r\\\\n';\\r\\n        }\\r\\n        media[i] = mediaI;\\r\\n    }\\r\\n    const session = `${media.shift()}\\\\r\\\\n`;\\r\\n\\r\\n    this.media = media;\\r\\n    this.raw = session + media.join('');\\r\\n    this.session = session;\\r\\n}\\r\\n\\r\\n/**\\r\\n * A flag will make {@link transportToJingle} and {@link jingle2media} replace\\r\\n * ICE candidates IPs with invalid value of '1.1.1.1' which will cause ICE\\r\\n * failure. The flag is used in the automated testing.\\r\\n * @type {boolean}\\r\\n */\\r\\nSDP.prototype.failICE = false;\\r\\n\\r\\n/**\\r\\n * Whether or not to remove TCP ice candidates when translating from/to jingle.\\r\\n * @type {boolean}\\r\\n */\\r\\nSDP.prototype.removeTcpCandidates = false;\\r\\n\\r\\n/**\\r\\n * Whether or not to remove UDP ice candidates when translating from/to jingle.\\r\\n * @type {boolean}\\r\\n */\\r\\nSDP.prototype.removeUdpCandidates = false;\\r\\n\\r\\n/**\\r\\n * Returns map of MediaChannel mapped per channel idx.\\r\\n */\\r\\nSDP.prototype.getMediaSsrcMap = function() {\\r\\n    const self = this;\\r\\n    const mediaSSRCs = {};\\r\\n    let tmp;\\r\\n\\r\\n    for (let mediaindex = 0; mediaindex < self.media.length; mediaindex++) {\\r\\n        tmp = SDPUtil.findLines(self.media[mediaindex], 'a=ssrc:');\\r\\n        const mid\\r\\n            = SDPUtil.parseMID(\\r\\n                SDPUtil.findLine(self.media[mediaindex], 'a=mid:'));\\r\\n        const media = {\\r\\n            mediaindex,\\r\\n            mid,\\r\\n            ssrcs: {},\\r\\n            ssrcGroups: []\\r\\n        };\\r\\n\\r\\n        mediaSSRCs[mediaindex] = media;\\r\\n        tmp.forEach(line => {\\r\\n            const linessrc = line.substring(7).split(' ')[0];\\r\\n\\r\\n            // allocate new ChannelSsrc\\r\\n\\r\\n            if (!media.ssrcs[linessrc]) {\\r\\n                media.ssrcs[linessrc] = {\\r\\n                    ssrc: linessrc,\\r\\n                    lines: []\\r\\n                };\\r\\n            }\\r\\n            media.ssrcs[linessrc].lines.push(line);\\r\\n        });\\r\\n        tmp = SDPUtil.findLines(self.media[mediaindex], 'a=ssrc-group:');\\r\\n        tmp.forEach(line => {\\r\\n            const idx = line.indexOf(' ');\\r\\n            const semantics = line.substr(0, idx).substr(13);\\r\\n            const ssrcs = line.substr(14 + semantics.length).split(' ');\\r\\n\\r\\n            if (ssrcs.length) {\\r\\n                media.ssrcGroups.push({\\r\\n                    semantics,\\r\\n                    ssrcs\\r\\n                });\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    return mediaSSRCs;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns <tt>true</tt> if this SDP contains given SSRC.\\r\\n * @param ssrc the ssrc to check.\\r\\n * @returns {boolean} <tt>true</tt> if this SDP contains given SSRC.\\r\\n */\\r\\nSDP.prototype.containsSSRC = function(ssrc) {\\r\\n    // FIXME this code is really strange - improve it if you can\\r\\n    const medias = this.getMediaSsrcMap();\\r\\n    let result = false;\\r\\n\\r\\n    Object.keys(medias).forEach(mediaindex => {\\r\\n        if (result) {\\r\\n            return;\\r\\n        }\\r\\n        if (medias[mediaindex].ssrcs[ssrc]) {\\r\\n            result = true;\\r\\n        }\\r\\n    });\\r\\n\\r\\n    return result;\\r\\n};\\r\\n\\r\\n// remove iSAC and CN from SDP\\r\\nSDP.prototype.mangle = function() {\\r\\n    let i, j, lines, mline, newdesc, rtpmap;\\r\\n\\r\\n    for (i = 0; i < this.media.length; i++) {\\r\\n        lines = this.media[i].split('\\\\r\\\\n');\\r\\n        lines.pop(); // remove empty last element\\r\\n        mline = SDPUtil.parseMLine(lines.shift());\\r\\n        if (mline.media !== 'audio') {\\r\\n            continue; // eslint-disable-line no-continue\\r\\n        }\\r\\n        newdesc = '';\\r\\n        mline.fmt.length = 0;\\r\\n        for (j = 0; j < lines.length; j++) {\\r\\n            if (lines[j].substr(0, 9) === 'a=rtpmap:') {\\r\\n                rtpmap = SDPUtil.parseRTPMap(lines[j]);\\r\\n                if (rtpmap.name === 'CN' || rtpmap.name === 'ISAC') {\\r\\n                    continue; // eslint-disable-line no-continue\\r\\n                }\\r\\n                mline.fmt.push(rtpmap.id);\\r\\n            }\\r\\n            newdesc += `${lines[j]}\\\\r\\\\n`;\\r\\n        }\\r\\n        this.media[i] = `${SDPUtil.buildMLine(mline)}\\\\r\\\\n${newdesc}`;\\r\\n    }\\r\\n    this.raw = this.session + this.media.join('');\\r\\n};\\r\\n\\r\\n// remove lines matching prefix from session section\\r\\nSDP.prototype.removeSessionLines = function(prefix) {\\r\\n    const self = this;\\r\\n    const lines = SDPUtil.findLines(this.session, prefix);\\r\\n\\r\\n    lines.forEach(line => {\\r\\n        self.session = self.session.replace(`${line}\\\\r\\\\n`, '');\\r\\n    });\\r\\n    this.raw = this.session + this.media.join('');\\r\\n\\r\\n    return lines;\\r\\n};\\r\\n\\r\\n// remove lines matching prefix from a media section specified by mediaindex\\r\\n// TODO: non-numeric mediaindex could match mid\\r\\nSDP.prototype.removeMediaLines = function(mediaindex, prefix) {\\r\\n    const self = this;\\r\\n    const lines = SDPUtil.findLines(this.media[mediaindex], prefix);\\r\\n\\r\\n    lines.forEach(line => {\\r\\n        self.media[mediaindex]\\r\\n            = self.media[mediaindex].replace(`${line}\\\\r\\\\n`, '');\\r\\n    });\\r\\n    this.raw = this.session + this.media.join('');\\r\\n\\r\\n    return lines;\\r\\n};\\r\\n\\r\\n// add content's to a jingle element\\r\\nSDP.prototype.toJingle = function(elem, thecreator) {\\r\\n    let i, j, k, lines, mline, rtpmap, ssrc, tmp;\\r\\n\\r\\n    // new bundle plan\\r\\n\\r\\n    lines = SDPUtil.findLines(this.session, 'a=group:');\\r\\n    if (lines.length) {\\r\\n        for (i = 0; i < lines.length; i++) {\\r\\n            tmp = lines[i].split(' ');\\r\\n            const semantics = tmp.shift().substr(8);\\r\\n\\r\\n            elem.c('group', { xmlns: 'urn:xmpp:jingle:apps:grouping:0',\\r\\n                semantics });\\r\\n            for (j = 0; j < tmp.length; j++) {\\r\\n                elem.c('content', { name: tmp[j] }).up();\\r\\n            }\\r\\n            elem.up();\\r\\n        }\\r\\n    }\\r\\n    for (i = 0; i < this.media.length; i++) {\\r\\n        mline = SDPUtil.parseMLine(this.media[i].split('\\\\r\\\\n')[0]);\\r\\n        if (!(mline.media === 'audio'\\r\\n              || mline.media === 'video'\\r\\n              || mline.media === 'application')) {\\r\\n            continue; // eslint-disable-line no-continue\\r\\n        }\\r\\n        const assrcline = SDPUtil.findLine(this.media[i], 'a=ssrc:');\\r\\n\\r\\n        if (assrcline) {\\r\\n            ssrc = assrcline.substring(7).split(' ')[0]; // take the first\\r\\n        } else {\\r\\n            ssrc = false;\\r\\n        }\\r\\n\\r\\n        elem.c('content', { creator: thecreator,\\r\\n            name: mline.media });\\r\\n        const amidline = SDPUtil.findLine(this.media[i], 'a=mid:');\\r\\n\\r\\n        if (amidline) {\\r\\n            // prefer identifier from a=mid if present\\r\\n            const mid = SDPUtil.parseMID(amidline);\\r\\n\\r\\n            elem.attrs({ name: mid });\\r\\n        }\\r\\n\\r\\n        if (SDPUtil.findLine(this.media[i], 'a=rtpmap:').length) {\\r\\n            elem.c('description',\\r\\n                { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\\r\\n                    media: mline.media });\\r\\n            if (ssrc) {\\r\\n                elem.attrs({ ssrc });\\r\\n            }\\r\\n            for (j = 0; j < mline.fmt.length; j++) {\\r\\n                rtpmap\\r\\n                    = SDPUtil.findLine(\\r\\n                        this.media[i],\\r\\n                        `a=rtpmap:${mline.fmt[j]}`);\\r\\n                elem.c('payload-type', SDPUtil.parseRTPMap(rtpmap));\\r\\n\\r\\n                // put any 'a=fmtp:' + mline.fmt[j] lines into <param name=foo\\r\\n                // value=bar/>\\r\\n                const afmtpline\\r\\n                    = SDPUtil.findLine(\\r\\n                        this.media[i],\\r\\n                        `a=fmtp:${mline.fmt[j]}`);\\r\\n\\r\\n                if (afmtpline) {\\r\\n                    tmp = SDPUtil.parseFmtp(afmtpline);\\r\\n\\r\\n                    // eslint-disable-next-line max-depth\\r\\n                    for (k = 0; k < tmp.length; k++) {\\r\\n                        elem.c('parameter', tmp[k]).up();\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                // XEP-0293 -- map a=rtcp-fb\\r\\n                this.rtcpFbToJingle(i, elem, mline.fmt[j]);\\r\\n\\r\\n                elem.up();\\r\\n            }\\r\\n            const crypto\\r\\n                = SDPUtil.findLines(this.media[i], 'a=crypto:', this.session);\\r\\n\\r\\n            if (crypto.length) {\\r\\n                elem.c('encryption', { required: 1 });\\r\\n                crypto.forEach(\\r\\n                    line => elem.c('crypto', SDPUtil.parseCrypto(line)).up());\\r\\n                elem.up(); // end of encryption\\r\\n            }\\r\\n\\r\\n            if (ssrc) {\\r\\n                const ssrcMap = SDPUtil.parseSSRC(this.media[i]);\\r\\n\\r\\n                for (const [ availableSsrc, ssrcParameters ] of ssrcMap) {\\r\\n                    elem.c('source', {\\r\\n                        ssrc: availableSsrc,\\r\\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\\r\\n                    });\\r\\n\\r\\n                    ssrcParameters.forEach(ssrcSdpLine => {\\r\\n                        // get everything after first space\\r\\n                        const idx = ssrcSdpLine.indexOf(' ');\\r\\n                        const kv = ssrcSdpLine.substr(idx + 1);\\r\\n\\r\\n                        elem.c('parameter');\\r\\n                        if (kv.indexOf(':') === -1) {\\r\\n                            elem.attrs({ name: kv });\\r\\n                        } else {\\r\\n                            const name = kv.split(':', 2)[0];\\r\\n\\r\\n                            elem.attrs({ name });\\r\\n\\r\\n                            let v = kv.split(':', 2)[1];\\r\\n\\r\\n                            v = SDPUtil.filterSpecialChars(v);\\r\\n                            elem.attrs({ value: v });\\r\\n                        }\\r\\n                        elem.up();\\r\\n                    });\\r\\n\\r\\n                    elem.up();\\r\\n                }\\r\\n\\r\\n                // XEP-0339 handle ssrc-group attributes\\r\\n                const ssrcGroupLines\\r\\n                    = SDPUtil.findLines(this.media[i], 'a=ssrc-group:');\\r\\n\\r\\n                ssrcGroupLines.forEach(line => {\\r\\n                    const idx = line.indexOf(' ');\\r\\n                    const semantics = line.substr(0, idx).substr(13);\\r\\n                    const ssrcs = line.substr(14 + semantics.length).split(' ');\\r\\n\\r\\n                    if (ssrcs.length) {\\r\\n                        elem.c('ssrc-group', { semantics,\\r\\n                            xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\\r\\n                        ssrcs.forEach(s => elem.c('source', { ssrc: s }).up());\\r\\n                        elem.up();\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n\\r\\n            const ridLines = SDPUtil.findLines(this.media[i], 'a=rid');\\r\\n\\r\\n            if (ridLines.length) {\\r\\n                // Map a line which looks like \\\"a=rid:2 send\\\" to just\\r\\n                // the rid (\\\"2\\\")\\r\\n                const rids = ridLines\\r\\n                    .map(ridLine => ridLine.split(':')[1])\\r\\n                    .map(ridInfo => ridInfo.split(' ')[0]);\\r\\n\\r\\n                rids.forEach(rid => {\\r\\n                    elem.c('source', {\\r\\n                        rid,\\r\\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\\r\\n                    });\\r\\n                    elem.up();\\r\\n                });\\r\\n                const unifiedSimulcast\\r\\n                    = SDPUtil.findLine(this.media[i], 'a=simulcast');\\r\\n\\r\\n                if (unifiedSimulcast) {\\r\\n                    elem.c('rid-group', {\\r\\n                        semantics: 'SIM',\\r\\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\\r\\n                    });\\r\\n                    rids.forEach(rid => {\\r\\n                        elem.c('source', { rid }).up();\\r\\n                    });\\r\\n                    elem.up();\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (SDPUtil.findLine(this.media[i], 'a=rtcp-mux')) {\\r\\n                elem.c('rtcp-mux').up();\\r\\n            }\\r\\n\\r\\n            // XEP-0293 -- map a=rtcp-fb:*\\r\\n            this.rtcpFbToJingle(i, elem, '*');\\r\\n\\r\\n            // XEP-0294\\r\\n            lines = SDPUtil.findLines(this.media[i], 'a=extmap:');\\r\\n            if (lines.length) {\\r\\n                for (j = 0; j < lines.length; j++) {\\r\\n                    tmp = SDPUtil.parseExtmap(lines[j]);\\r\\n                    elem.c('rtp-hdrext', {\\r\\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:rtp-hdrext:0',\\r\\n                        uri: tmp.uri,\\r\\n                        id: tmp.value\\r\\n                    });\\r\\n\\r\\n                    // eslint-disable-next-line max-depth\\r\\n                    if (tmp.hasOwnProperty('direction')) {\\r\\n\\r\\n                        // eslint-disable-next-line max-depth\\r\\n                        switch (tmp.direction) {\\r\\n                        case 'sendonly':\\r\\n                            elem.attrs({ senders: 'responder' });\\r\\n                            break;\\r\\n                        case 'recvonly':\\r\\n                            elem.attrs({ senders: 'initiator' });\\r\\n                            break;\\r\\n                        case 'sendrecv':\\r\\n                            elem.attrs({ senders: 'both' });\\r\\n                            break;\\r\\n                        case 'inactive':\\r\\n                            elem.attrs({ senders: 'none' });\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    // TODO: handle params\\r\\n                    elem.up();\\r\\n                }\\r\\n            }\\r\\n            elem.up(); // end of description\\r\\n        }\\r\\n\\r\\n        // map ice-ufrag/pwd, dtls fingerprint, candidates\\r\\n        this.transportToJingle(i, elem);\\r\\n\\r\\n        const m = this.media[i];\\r\\n\\r\\n        if (SDPUtil.findLine(m, 'a=sendrecv', this.session)) {\\r\\n            elem.attrs({ senders: 'both' });\\r\\n        } else if (SDPUtil.findLine(m, 'a=sendonly', this.session)) {\\r\\n            elem.attrs({ senders: 'initiator' });\\r\\n        } else if (SDPUtil.findLine(m, 'a=recvonly', this.session)) {\\r\\n            elem.attrs({ senders: 'responder' });\\r\\n        } else if (SDPUtil.findLine(m, 'a=inactive', this.session)) {\\r\\n            elem.attrs({ senders: 'none' });\\r\\n        }\\r\\n        if (mline.port === '0') {\\r\\n            // estos hack to reject an m-line\\r\\n            elem.attrs({ senders: 'rejected' });\\r\\n        }\\r\\n        elem.up(); // end of content\\r\\n    }\\r\\n    elem.up();\\r\\n\\r\\n    return elem;\\r\\n};\\r\\n\\r\\nSDP.prototype.transportToJingle = function(mediaindex, elem) {\\r\\n    let tmp;\\r\\n    const self = this;\\r\\n\\r\\n    elem.c('transport');\\r\\n\\r\\n    // XEP-0343 DTLS/SCTP\\r\\n    const sctpmap\\r\\n        = SDPUtil.findLine(this.media[mediaindex], 'a=sctpmap:', self.session);\\r\\n\\r\\n    if (sctpmap) {\\r\\n        const sctpAttrs = SDPUtil.parseSCTPMap(sctpmap);\\r\\n\\r\\n        elem.c('sctpmap', {\\r\\n            xmlns: 'urn:xmpp:jingle:transports:dtls-sctp:1',\\r\\n            number: sctpAttrs[0], /* SCTP port */\\r\\n            protocol: sctpAttrs[1] /* protocol */\\r\\n        });\\r\\n\\r\\n        // Optional stream count attribute\\r\\n        if (sctpAttrs.length > 2) {\\r\\n            elem.attrs({ streams: sctpAttrs[2] });\\r\\n        }\\r\\n        elem.up();\\r\\n    }\\r\\n\\r\\n    // XEP-0320\\r\\n    const fingerprints\\r\\n        = SDPUtil.findLines(\\r\\n            this.media[mediaindex],\\r\\n            'a=fingerprint:',\\r\\n            this.session);\\r\\n\\r\\n    fingerprints.forEach(line => {\\r\\n        tmp = SDPUtil.parseFingerprint(line);\\r\\n        tmp.xmlns = 'urn:xmpp:jingle:apps:dtls:0';\\r\\n        elem.c('fingerprint').t(tmp.fingerprint);\\r\\n        delete tmp.fingerprint;\\r\\n\\r\\n        // eslint-disable-next-line no-param-reassign\\r\\n        line\\r\\n            = SDPUtil.findLine(\\r\\n                self.media[mediaindex],\\r\\n                'a=setup:',\\r\\n                self.session);\\r\\n        if (line) {\\r\\n            tmp.setup = line.substr(8);\\r\\n        }\\r\\n        elem.attrs(tmp);\\r\\n        elem.up(); // end of fingerprint\\r\\n    });\\r\\n    tmp = SDPUtil.iceparams(this.media[mediaindex], this.session);\\r\\n    if (tmp) {\\r\\n        tmp.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\\r\\n        elem.attrs(tmp);\\r\\n\\r\\n        // XEP-0176\\r\\n        const lines\\r\\n            = SDPUtil.findLines(\\r\\n                this.media[mediaindex],\\r\\n                'a=candidate:',\\r\\n                this.session);\\r\\n\\r\\n        if (lines.length) { // add any a=candidate lines\\r\\n            lines.forEach(line => {\\r\\n                const candidate = SDPUtil.candidateToJingle(line);\\r\\n\\r\\n                if (self.failICE) {\\r\\n                    candidate.ip = '1.1.1.1';\\r\\n                }\\r\\n                const protocol\\r\\n                    = candidate && typeof candidate.protocol === 'string'\\r\\n                        ? candidate.protocol.toLowerCase()\\r\\n                        : '';\\r\\n\\r\\n                if ((self.removeTcpCandidates\\r\\n                        && (protocol === 'tcp' || protocol === 'ssltcp'))\\r\\n                    || (self.removeUdpCandidates && protocol === 'udp')) {\\r\\n                    return;\\r\\n                }\\r\\n                elem.c('candidate', candidate).up();\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n    elem.up(); // end of transport\\r\\n};\\r\\n\\r\\n// XEP-0293\\r\\nSDP.prototype.rtcpFbToJingle = function(mediaindex, elem, payloadtype) {\\r\\n    const lines\\r\\n        = SDPUtil.findLines(\\r\\n            this.media[mediaindex],\\r\\n            `a=rtcp-fb:${payloadtype}`);\\r\\n\\r\\n    lines.forEach(line => {\\r\\n        const tmp = SDPUtil.parseRTCPFB(line);\\r\\n\\r\\n        if (tmp.type === 'trr-int') {\\r\\n            elem.c('rtcp-fb-trr-int', {\\r\\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\\r\\n                value: tmp.params[0]\\r\\n            });\\r\\n            elem.up();\\r\\n        } else {\\r\\n            elem.c('rtcp-fb', {\\r\\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\\r\\n                type: tmp.type\\r\\n            });\\r\\n            if (tmp.params.length > 0) {\\r\\n                elem.attrs({ 'subtype': tmp.params[0] });\\r\\n            }\\r\\n            elem.up();\\r\\n        }\\r\\n    });\\r\\n};\\r\\n\\r\\nSDP.prototype.rtcpFbFromJingle = function(elem, payloadtype) { // XEP-0293\\r\\n    let media = '';\\r\\n    let tmp\\r\\n        = elem.find(\\r\\n            '>rtcp-fb-trr-int[xmlns=\\\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\\\"]');\\r\\n\\r\\n    if (tmp.length) {\\r\\n        media += 'a=rtcp-fb:* trr-int ';\\r\\n        if (tmp.attr('value')) {\\r\\n            media += tmp.attr('value');\\r\\n        } else {\\r\\n            media += '0';\\r\\n        }\\r\\n        media += '\\\\r\\\\n';\\r\\n    }\\r\\n    tmp = elem.find('>rtcp-fb[xmlns=\\\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\\\"]');\\r\\n    tmp.each(function() {\\r\\n        /* eslint-disable no-invalid-this */\\r\\n        media += `a=rtcp-fb:${payloadtype} ${$(this).attr('type')}`;\\r\\n        if ($(this).attr('subtype')) {\\r\\n            media += ` ${$(this).attr('subtype')}`;\\r\\n        }\\r\\n        media += '\\\\r\\\\n';\\r\\n\\r\\n        /* eslint-enable no-invalid-this */\\r\\n    });\\r\\n\\r\\n    return media;\\r\\n};\\r\\n\\r\\n// construct an SDP from a jingle stanza\\r\\nSDP.prototype.fromJingle = function(jingle) {\\r\\n    const self = this;\\r\\n\\r\\n    this.raw = 'v=0\\\\r\\\\n'\\r\\n        + 'o=- 1923518516 2 IN IP4 0.0.0.0\\\\r\\\\n'// FIXME\\r\\n        + 's=-\\\\r\\\\n'\\r\\n        + 't=0 0\\\\r\\\\n';\\r\\n\\r\\n    // http://tools.ietf.org/html/draft-ietf-mmusic-sdp-bundle-negotiation-04\\r\\n    // #section-8\\r\\n    const groups\\r\\n        = $(jingle).find('>group[xmlns=\\\"urn:xmpp:jingle:apps:grouping:0\\\"]');\\r\\n\\r\\n    if (groups.length) {\\r\\n        groups.each((idx, group) => {\\r\\n            const contents\\r\\n                = $(group)\\r\\n                    .find('>content')\\r\\n                    .map((_, content) => content.getAttribute('name'))\\r\\n                    .get();\\r\\n\\r\\n            if (contents.length > 0) {\\r\\n                self.raw\\r\\n                    += `a=group:${\\r\\n                        group.getAttribute('semantics')\\r\\n                            || group.getAttribute('type')} ${\\r\\n                        contents.join(' ')}\\\\r\\\\n`;\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    this.session = this.raw;\\r\\n    jingle.find('>content').each(function() {\\r\\n        // eslint-disable-next-line no-invalid-this\\r\\n        const m = self.jingle2media($(this));\\r\\n\\r\\n        self.media.push(m);\\r\\n    });\\r\\n\\r\\n    // reconstruct msid-semantic -- apparently not necessary\\r\\n    /*\\r\\n     var msid = SDPUtil.parseSSRC(this.raw);\\r\\n     if (msid.hasOwnProperty('mslabel')) {\\r\\n     this.session += \\\"a=msid-semantic: WMS \\\" + msid.mslabel + \\\"\\\\r\\\\n\\\";\\r\\n     }\\r\\n     */\\r\\n\\r\\n    this.raw = this.session + this.media.join('');\\r\\n};\\r\\n\\r\\n// translate a jingle content element into an an SDP media part\\r\\nSDP.prototype.jingle2media = function(content) {\\r\\n    const desc = content.find('description');\\r\\n    let media = '';\\r\\n    const self = this;\\r\\n    const sctp = content.find(\\r\\n        '>transport>sctpmap[xmlns=\\\"urn:xmpp:jingle:transports:dtls-sctp:1\\\"]');\\r\\n\\r\\n    let tmp = { media: desc.attr('media') };\\r\\n\\r\\n    tmp.port = '1';\\r\\n    if (content.attr('senders') === 'rejected') {\\r\\n        // estos hack to reject an m-line.\\r\\n        tmp.port = '0';\\r\\n    }\\r\\n    if (content.find('>transport>fingerprint').length\\r\\n            || desc.find('encryption').length) {\\r\\n        tmp.proto = sctp.length ? 'DTLS/SCTP' : 'RTP/SAVPF';\\r\\n    } else {\\r\\n        tmp.proto = 'RTP/AVPF';\\r\\n    }\\r\\n    if (sctp.length) {\\r\\n        media += `m=application ${tmp.port} DTLS/SCTP ${\\r\\n            sctp.attr('number')}\\\\r\\\\n`;\\r\\n        media += `a=sctpmap:${sctp.attr('number')} ${sctp.attr('protocol')}`;\\r\\n\\r\\n        const streamCount = sctp.attr('streams');\\r\\n\\r\\n        if (streamCount) {\\r\\n            media += ` ${streamCount}\\\\r\\\\n`;\\r\\n        } else {\\r\\n            media += '\\\\r\\\\n';\\r\\n        }\\r\\n    } else {\\r\\n        tmp.fmt\\r\\n            = desc\\r\\n                .find('payload-type')\\r\\n                .map(function() {\\r\\n                    // eslint-disable-next-line no-invalid-this\\r\\n                    return this.getAttribute('id');\\r\\n                })\\r\\n                .get();\\r\\n        media += `${SDPUtil.buildMLine(tmp)}\\\\r\\\\n`;\\r\\n    }\\r\\n\\r\\n    media += 'c=IN IP4 0.0.0.0\\\\r\\\\n';\\r\\n    if (!sctp.length) {\\r\\n        media += 'a=rtcp:1 IN IP4 0.0.0.0\\\\r\\\\n';\\r\\n    }\\r\\n    tmp\\r\\n        = content.find(\\r\\n            '>transport[xmlns=\\\"urn:xmpp:jingle:transports:ice-udp:1\\\"]');\\r\\n    if (tmp.length) {\\r\\n        if (tmp.attr('ufrag')) {\\r\\n            media += `${SDPUtil.buildICEUfrag(tmp.attr('ufrag'))}\\\\r\\\\n`;\\r\\n        }\\r\\n        if (tmp.attr('pwd')) {\\r\\n            media += `${SDPUtil.buildICEPwd(tmp.attr('pwd'))}\\\\r\\\\n`;\\r\\n        }\\r\\n        tmp.find('>fingerprint').each(function() {\\r\\n            /* eslint-disable no-invalid-this */\\r\\n            // FIXME: check namespace at some point\\r\\n            media += `a=fingerprint:${this.getAttribute('hash')}`;\\r\\n            media += ` ${$(this).text()}`;\\r\\n            media += '\\\\r\\\\n';\\r\\n            if (this.getAttribute('setup')) {\\r\\n                media += `a=setup:${this.getAttribute('setup')}\\\\r\\\\n`;\\r\\n            }\\r\\n\\r\\n            /* eslint-enable no-invalid-this */\\r\\n        });\\r\\n    }\\r\\n    switch (content.attr('senders')) {\\r\\n    case 'initiator':\\r\\n        media += 'a=sendonly\\\\r\\\\n';\\r\\n        break;\\r\\n    case 'responder':\\r\\n        media += 'a=recvonly\\\\r\\\\n';\\r\\n        break;\\r\\n    case 'none':\\r\\n        media += 'a=inactive\\\\r\\\\n';\\r\\n        break;\\r\\n    case 'both':\\r\\n        media += 'a=sendrecv\\\\r\\\\n';\\r\\n        break;\\r\\n    }\\r\\n    media += `a=mid:${content.attr('name')}\\\\r\\\\n`;\\r\\n\\r\\n    // <description><rtcp-mux/></description>\\r\\n    // see http://code.google.com/p/libjingle/issues/detail?id=309 -- no spec\\r\\n    // though\\r\\n    // and http://mail.jabber.org/pipermail/jingle/2011-December/001761.html\\r\\n    if (desc.find('rtcp-mux').length) {\\r\\n        media += 'a=rtcp-mux\\\\r\\\\n';\\r\\n    }\\r\\n\\r\\n    if (desc.find('encryption').length) {\\r\\n        desc.find('encryption>crypto').each(function() {\\r\\n            /* eslint-disable no-invalid-this */\\r\\n            media += `a=crypto:${this.getAttribute('tag')}`;\\r\\n            media += ` ${this.getAttribute('crypto-suite')}`;\\r\\n            media += ` ${this.getAttribute('key-params')}`;\\r\\n            if (this.getAttribute('session-params')) {\\r\\n                media += ` ${this.getAttribute('session-params')}`;\\r\\n            }\\r\\n            media += '\\\\r\\\\n';\\r\\n\\r\\n            /* eslint-enable no-invalid-this */\\r\\n        });\\r\\n    }\\r\\n    desc.find('payload-type').each(function() {\\r\\n        /* eslint-disable no-invalid-this */\\r\\n        media += `${SDPUtil.buildRTPMap(this)}\\\\r\\\\n`;\\r\\n        if ($(this).find('>parameter').length) {\\r\\n            media += `a=fmtp:${this.getAttribute('id')} `;\\r\\n            media\\r\\n                += $(this)\\r\\n                    .find('parameter')\\r\\n                    .map(function() {\\r\\n                        const name = this.getAttribute('name');\\r\\n\\r\\n                        return (\\r\\n                            (name ? `${name}=` : '')\\r\\n                                + this.getAttribute('value'));\\r\\n                    })\\r\\n                    .get()\\r\\n                    .join('; ');\\r\\n            media += '\\\\r\\\\n';\\r\\n        }\\r\\n\\r\\n        // xep-0293\\r\\n        media += self.rtcpFbFromJingle($(this), this.getAttribute('id'));\\r\\n\\r\\n        /* eslint-enable no-invalid-this */\\r\\n    });\\r\\n\\r\\n    // xep-0293\\r\\n    media += self.rtcpFbFromJingle(desc, '*');\\r\\n\\r\\n    // xep-0294\\r\\n    tmp\\r\\n        = desc.find(\\r\\n            '>rtp-hdrext[xmlns=\\\"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0\\\"]');\\r\\n    tmp.each(function() {\\r\\n        /* eslint-disable no-invalid-this */\\r\\n        media\\r\\n            += `a=extmap:${this.getAttribute('id')} ${\\r\\n                this.getAttribute('uri')}\\\\r\\\\n`;\\r\\n\\r\\n        /* eslint-enable no-invalid-this */\\r\\n    });\\r\\n\\r\\n    content\\r\\n        .find(\\r\\n            '>transport[xmlns=\\\"urn:xmpp:jingle:transports:ice-udp:1\\\"]'\\r\\n                + '>candidate')\\r\\n        .each(function() {\\r\\n            /* eslint-disable no-invalid-this */\\r\\n            let protocol = this.getAttribute('protocol');\\r\\n\\r\\n            protocol\\r\\n                = typeof protocol === 'string' ? protocol.toLowerCase() : '';\\r\\n\\r\\n            if ((self.removeTcpCandidates\\r\\n                    && (protocol === 'tcp' || protocol === 'ssltcp'))\\r\\n                || (self.removeUdpCandidates && protocol === 'udp')) {\\r\\n                return;\\r\\n            } else if (self.failICE) {\\r\\n                this.setAttribute('ip', '1.1.1.1');\\r\\n            }\\r\\n\\r\\n            media += SDPUtil.candidateFromJingle(this);\\r\\n\\r\\n            /* eslint-enable no-invalid-this */\\r\\n        });\\r\\n\\r\\n    // XEP-0339 handle ssrc-group attributes\\r\\n    content\\r\\n        .find('description>ssrc-group[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]')\\r\\n        .each(function() {\\r\\n            /* eslint-disable no-invalid-this */\\r\\n            const semantics = this.getAttribute('semantics');\\r\\n            const ssrcs\\r\\n                = $(this)\\r\\n                    .find('>source')\\r\\n                    .map(function() {\\r\\n                        return this.getAttribute('ssrc');\\r\\n                    })\\r\\n                    .get();\\r\\n\\r\\n            if (ssrcs.length) {\\r\\n                media += `a=ssrc-group:${semantics} ${ssrcs.join(' ')}\\\\r\\\\n`;\\r\\n            }\\r\\n\\r\\n            /* eslint-enable no-invalid-this */\\r\\n        });\\r\\n\\r\\n    tmp\\r\\n        = content.find(\\r\\n            'description>source[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]');\\r\\n    tmp.each(function() {\\r\\n        /* eslint-disable no-invalid-this */\\r\\n        const ssrc = this.getAttribute('ssrc');\\r\\n\\r\\n        // eslint-disable-next-line newline-per-chained-call\\r\\n        $(this).find('>parameter').each(function() {\\r\\n            const name = this.getAttribute('name');\\r\\n            let value = this.getAttribute('value');\\r\\n\\r\\n            value = SDPUtil.filterSpecialChars(value);\\r\\n            media += `a=ssrc:${ssrc} ${name}`;\\r\\n            if (value && value.length) {\\r\\n                media += `:${value}`;\\r\\n            }\\r\\n            media += '\\\\r\\\\n';\\r\\n        });\\r\\n\\r\\n        /* eslint-enable no-invalid-this */\\r\\n    });\\r\\n\\r\\n    return media;\\r\\n};\\r\\n\",\"// TODO: Maybe fix the values to 'Chrome', 'Internet Explorer', etc. Currently\\r\\n// this values needs to be as they are becuse they are going to analytics,\\r\\n// callstats, etc.\\r\\n\\r\\nexport const CHROME = 'chrome';\\r\\n\\r\\nexport const OPERA = 'opera';\\r\\n\\r\\nexport const FIREFOX = 'firefox';\\r\\n\\r\\nexport const INTERNET_EXPLORER = 'iexplorer';\\r\\n\\r\\nexport const EDGE = 'edge';\\r\\n\\r\\nexport const SAFARI = 'safari';\\r\\n\\r\\nexport const NWJS = 'nwjs';\\r\\n\\r\\nexport const ELECTRON = 'electron';\\r\\n\\r\\nexport const REACT_NATIVE = 'react-native';\\r\\n\\r\\nexport const UNKNOWN = 'unknown';\\r\\n\",\"import bowser from 'bowser';\\r\\n\\r\\nimport {\\r\\n    CHROME,\\r\\n    OPERA,\\r\\n    FIREFOX,\\r\\n    INTERNET_EXPLORER,\\r\\n    EDGE,\\r\\n    SAFARI,\\r\\n    NWJS,\\r\\n    ELECTRON,\\r\\n    REACT_NATIVE,\\r\\n    UNKNOWN\\r\\n} from './browsers';\\r\\n\\r\\n/**\\r\\n * Maps the names of the browsers from bowser to the internal names defined in\\r\\n * ./browsers.js\\r\\n */\\r\\nconst bowserNameToJitsiName = {\\r\\n    'Chrome': CHROME,\\r\\n    'Chromium': CHROME,\\r\\n    'Opera': OPERA,\\r\\n    'Firefox': FIREFOX,\\r\\n    'Internet Explorer': INTERNET_EXPLORER,\\r\\n    'Microsoft Edge': EDGE,\\r\\n    'Safari': SAFARI\\r\\n};\\r\\n\\r\\n/**\\r\\n * Detects a Chromium based environent.\\r\\n * \\r\\n * NOTE: Here we cannot check solely for \\\"Chrome\\\" in the UA string and the\\r\\n * \\\"window.chrome\\\" property, because Edge has both, so we add an explicit\\r\\n * check for NOT Edge.\\r\\n *\\r\\n * @returns {Object|undefined} - The name (CHROME) and version.\\r\\n */\\r\\nfunction _detectChromiumBased() {\\r\\n    const userAgent = navigator.userAgent;\\r\\n\\r\\n    if (Boolean(window.chrome)\\r\\n            && !userAgent.match(/Edge/) && userAgent.match(/Chrome/)) {\\r\\n        const version = userAgent.match(/Chrome\\\\/([\\\\d.]+)/)[1];\\r\\n\\r\\n        return {\\r\\n            name: CHROME,\\r\\n            version\\r\\n        };\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Detects Electron environment.\\r\\n *\\r\\n * @returns {Object|undefined} - The name (ELECTRON) and version.\\r\\n */\\r\\nfunction _detectElectron() {\\r\\n    const userAgent = navigator.userAgent;\\r\\n\\r\\n    if (userAgent.match(/Electron/)) {\\r\\n        const version = userAgent.match(/Electron\\\\/([\\\\d.]+)/)[1];\\r\\n\\r\\n        return {\\r\\n            name: ELECTRON,\\r\\n            version\\r\\n        };\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Detects NWJS environment.\\r\\n *\\r\\n * @returns {Object|undefined} - The name (NWJS) and version.\\r\\n */\\r\\nfunction _detectNWJS() {\\r\\n    const userAgent = navigator.userAgent;\\r\\n\\r\\n    if (userAgent.match(/JitsiMeetNW/)) {\\r\\n        const version = userAgent.match(/JitsiMeetNW\\\\/([\\\\d.]+)/)[1];\\r\\n\\r\\n        return {\\r\\n            name: NWJS,\\r\\n            version\\r\\n        };\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Detects React Native environment.\\r\\n * @returns {Object|undefined} - The name (REACT_NATIVE) and version.\\r\\n */\\r\\nfunction _detectReactNative() {\\r\\n    const match\\r\\n        = navigator.userAgent.match(/\\\\b(react[ \\\\t_-]*native)(?:\\\\/(\\\\S+))?/i);\\r\\n    let version;\\r\\n\\r\\n    // If we're remote debugging a React Native app, it may be treated as\\r\\n    // Chrome. Check navigator.product as well and always return some version\\r\\n    // even if we can't get the real one.\\r\\n\\r\\n    if (match || navigator.product === 'ReactNative') {\\r\\n        let name;\\r\\n\\r\\n        if (match && match.length > 2) {\\r\\n            name = match[1];\\r\\n            version = match[2];\\r\\n        }\\r\\n        name || (name = 'react-native');\\r\\n        version || (version = 'unknown');\\r\\n\\r\\n        return {\\r\\n            name: REACT_NATIVE,\\r\\n            version\\r\\n        };\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns information about the current browser.\\r\\n *\\r\\n * @returns {Object} - The name and version of the browser.\\r\\n */\\r\\nfunction _detect() {\\r\\n    let browserInfo;\\r\\n    const detectors = [\\r\\n        _detectReactNative,\\r\\n        _detectElectron,\\r\\n        _detectNWJS\\r\\n    ];\\r\\n\\r\\n    // Try all browser detectors\\r\\n    for (let i = 0; i < detectors.length; i++) {\\r\\n        browserInfo = detectors[i]();\\r\\n        if (browserInfo) {\\r\\n            return browserInfo;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    const { name, version } = bowser;\\r\\n\\r\\n    if (name in bowserNameToJitsiName) {\\r\\n        return {\\r\\n            name: bowserNameToJitsiName[name],\\r\\n            version\\r\\n        };\\r\\n    }\\r\\n\\r\\n    // Detect other browsers with the Chrome engine, such as Vivaldi.\\r\\n    browserInfo = _detectChromiumBased();\\r\\n    if (browserInfo) {\\r\\n        return browserInfo;\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        name: UNKNOWN,\\r\\n        version: undefined\\r\\n    };\\r\\n}\\r\\n\\r\\n/**\\r\\n * Implements browser detection.\\r\\n */\\r\\nexport default class BrowserDetection {\\r\\n    /**\\r\\n     * Creates new BrowserDetection instance.\\r\\n     *\\r\\n     * @param {Object} [browserInfo] - Information about the browser.\\r\\n     * @param {string} browserInfo.name - The name of the browser.\\r\\n     * @param {string} browserInfo.version - The version of the browser.\\r\\n     */\\r\\n    constructor(browserInfo) {\\r\\n        let name, version;\\r\\n\\r\\n        if (typeof browserInfo === 'undefined') {\\r\\n            const detectedBrowserInfo = _detect();\\r\\n\\r\\n            name = detectedBrowserInfo.name;\\r\\n            version = detectedBrowserInfo.version;\\r\\n        } else if (browserInfo.name in bowserNameToJitsiName) {\\r\\n            name = bowserNameToJitsiName[browserInfo.name];\\r\\n            version = browserInfo.version;\\r\\n        } else {\\r\\n            name = UNKNOWN;\\r\\n            version = undefined;\\r\\n        }\\r\\n\\r\\n        this._name = name;\\r\\n        this._version = version;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets current browser name.\\r\\n     * @returns {string}\\r\\n     */\\r\\n    getName() {\\r\\n        return this._name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current browser is Chrome.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isChrome() {\\r\\n        return this._name === CHROME;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current browser is Opera.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isOpera() {\\r\\n        return this._name === OPERA;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current browser is Firefox.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isFirefox() {\\r\\n        return this._name === FIREFOX;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current browser is Internet Explorer.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isIExplorer() {\\r\\n        return this._name === INTERNET_EXPLORER;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current browser is Microsoft Edge.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isEdge() {\\r\\n        return this._name === EDGE;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current browser is Safari.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isSafari() {\\r\\n        return this._name === SAFARI;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current environment is NWJS.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isNWJS() {\\r\\n        return this._name === NWJS;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current environment is Electron.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isElectron() {\\r\\n        return this._name === ELECTRON;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current environment is React Native.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isReactNative() {\\r\\n        return this._name === REACT_NATIVE;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the version of the current browser.\\r\\n     * @returns {string}\\r\\n     */\\r\\n    getVersion() {\\r\\n        return this._version;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Compares the passed version with the current browser version.\\r\\n     * {@see https://github.com/lancedikson/bowser}\\r\\n     */\\r\\n    static compareVersions = bowser.compareVersions;\\r\\n\\r\\n    /**\\r\\n     * Compares the passed version with the current browser version.\\r\\n     *\\r\\n     * @param {*} version - The version to compare with. Anything different\\r\\n     * than string will be converted to string.\\r\\n     * @returns {number|undefined} - Returns 0 if the version is equal to the\\r\\n     * current one, 1 if the version is greater than the current one, -1 if the\\r\\n     * version is lower than the current one and undefined if the current\\r\\n     * browser version is unknown.\\r\\n     */\\r\\n    compareVersion(version) {\\r\\n        if (this._version) {\\r\\n            return bowser.compareVersions([ String(version), this._version ]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Compares the passed version with the current browser version.\\r\\n     *\\r\\n     * @param {*} version - The version to compare with. Anything different\\r\\n     * than string will be converted to string.\\r\\n     * @returns {boolean|undefined} - Returns true if the current version is\\r\\n     * greater than the passed version and false otherwise. Returns undefined if\\r\\n     * the current browser version is unknown.\\r\\n     */\\r\\n    isVersionGreaterThan(version) {\\r\\n        return this.compareVersion(version) === -1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Compares the passed version with the current browser version.\\r\\n     *\\r\\n     * @param {*} version - The version to compare with. Anything different\\r\\n     * than string will be converted to string.\\r\\n     * @returns {boolean|undefined} - Returns true if the current version is\\r\\n     * lower than the passed version and false otherwise. Returns undefined if\\r\\n     * the current browser version is unknown.\\r\\n     */\\r\\n    isVersionLessThan(version) {\\r\\n        return this.compareVersion(version) === 1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Compares the passed version with the current browser version.\\r\\n     *\\r\\n     * @param {*} version - The version to compare with. Anything different\\r\\n     * than string will be converted to string.\\r\\n     * @returns {boolean|undefined} - Returns true if the current version is\\r\\n     * equal to the passed version and false otherwise. Returns undefined if\\r\\n     * the current browser version is unknown.\\r\\n     */\\r\\n    isVersionEqualTo(version) {\\r\\n        return this.compareVersion(version) === 0;\\r\\n    }\\r\\n}\\r\\n\",\"export * from './browser-capabilities';\\r\\nexport * from './browser-detection';\\r\\nexport * from './avatar';\\r\\n\",\"/**\\r\\n * Status that video SIP GW service is available.\\r\\n * @type {string}\\r\\n */\\r\\nexport const STATUS_AVAILABLE = 'available';\\r\\n\\r\\n/**\\r\\n * Status that video SIP GW service is not available.\\r\\n * @type {string}\\r\\n */\\r\\nexport const STATUS_UNDEFINED = 'undefined';\\r\\n\\r\\n/**\\r\\n * Status that video SIP GW service is available but there are no free nodes\\r\\n * at the moment to serve new requests.\\r\\n * @type {string}\\r\\n */\\r\\nexport const STATUS_BUSY = 'busy';\\r\\n\\r\\n/**\\r\\n * Video SIP GW session state, currently running.\\r\\n * @type {string}\\r\\n */\\r\\nexport const STATE_ON = 'on';\\r\\n\\r\\n/**\\r\\n * Video SIP GW session state, currently stopped and not running.\\r\\n * @type {string}\\r\\n */\\r\\nexport const STATE_OFF = 'off';\\r\\n\\r\\n/**\\r\\n * Video SIP GW session state, currently is starting.\\r\\n * @type {string}\\r\\n */\\r\\nexport const STATE_PENDING = 'pending';\\r\\n\\r\\n/**\\r\\n * Video SIP GW session state, has observed some issues and is retrying at the\\r\\n * moment.\\r\\n * @type {string}\\r\\n */\\r\\nexport const STATE_RETRYING = 'retrying';\\r\\n\\r\\n/**\\r\\n * Video SIP GW session state, tried to start but it failed.\\r\\n * @type {string}\\r\\n */\\r\\nexport const STATE_FAILED = 'failed';\\r\\n\\r\\n/**\\r\\n * Error on trying to create video SIP GW session in conference where\\r\\n * there is no room connection (hasn't joined or has left the room).\\r\\n * @type {string}\\r\\n */\\r\\nexport const ERROR_NO_CONNECTION = 'error_no_connection';\\r\\n\\r\\n/**\\r\\n * Error on trying to create video SIP GW session with address for which\\r\\n * there is an already created session.\\r\\n * @type {string}\\r\\n */\\r\\nexport const ERROR_SESSION_EXISTS = 'error_session_already_exists';\\r\\n\",\"/**\\r\\n * The events for the connection.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Indicates that the connection has been disconnected. The event provides\\r\\n * the following parameters to its listeners:\\r\\n *\\r\\n * @param msg {string} a message associated with the disconnect such as the\\r\\n * last (known) error message\\r\\n */\\r\\nexport const CONNECTION_DISCONNECTED = 'connection.connectionDisconnected';\\r\\n\\r\\n/**\\r\\n * Indicates that the connection has been established. The event provides\\r\\n * the following parameters to its listeners:\\r\\n *\\r\\n * @param id {string} the ID of the local endpoint/participant/peer (within\\r\\n * the context of the established connection)\\r\\n */\\r\\nexport const CONNECTION_ESTABLISHED = 'connection.connectionEstablished';\\r\\n\\r\\n/**\\r\\n * Indicates that the connection has been failed for some reason. The event\\r\\n * provides the following parameters to its listeners:\\r\\n *\\r\\n * @param errType {JitsiConnectionErrors} the type of error associated with\\r\\n * the failure\\r\\n * @param errReason {string} the error (message) associated with the failure\\r\\n * @param credentials {object} the credentials used to connect (if any)\\r\\n * @param errReasonDetails {object} an optional object with details about\\r\\n * the error, like shard moving, suspending. Used for analytics purposes.\\r\\n */\\r\\nexport const CONNECTION_FAILED = 'connection.connectionFailed';\\r\\n\\r\\n/**\\r\\n * Indicates that the performed action cannot be executed because the\\r\\n * connection is not in the correct state(connected, disconnected, etc.)\\r\\n */\\r\\nexport const WRONG_STATE = 'connection.wrongState';\\r\\n\",\"var parser = require('./parser');\\nvar writer = require('./writer');\\n\\nexports.write = writer;\\nexports.parse = parser.parse;\\nexports.parseFmtpConfig = parser.parseFmtpConfig;\\nexports.parseParams = parser.parseParams;\\nexports.parsePayloads = parser.parsePayloads;\\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\\nexports.parseImageAttributes = parser.parseImageAttributes;\\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\\n\",\"/**\\r\\n * Notifies about audio level in RTP statistics by SSRC.\\r\\n *\\r\\n * @param ssrc - The synchronization source identifier (SSRC) of the\\r\\n * endpoint/participant whose audio level is being reported.\\r\\n * @param {number} audioLevel - The audio level of <tt>ssrc</tt> according to\\r\\n * RTP statistics.\\r\\n * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> identifies the\\r\\n * local endpoint/participant; otherwise, <tt>false</tt>.\\r\\n */\\r\\nexport const AUDIO_LEVEL = 'statistics.audioLevel';\\r\\n\\r\\n/**\\r\\n * An event fired just before the statistics module gets disposes and it's\\r\\n * the last chance to submit some logs that will end up in stats services like\\r\\n * CallStats (if enabled).\\r\\n */\\r\\nexport const BEFORE_DISPOSED = 'statistics.before_disposed';\\r\\n\\r\\n/**\\r\\n * An event carrying all statistics by ssrc.\\r\\n */\\r\\nexport const BYTE_SENT_STATS = 'statistics.byte_sent_stats';\\r\\n\\r\\n/**\\r\\n * An event carrying connection statistics.\\r\\n *\\r\\n * @param {object} connectionStats - The connection statistics carried by the\\r\\n * event such as <tt>bandwidth</tt>, <tt>bitrate</tt>, <tt>packetLoss</tt>,\\r\\n * <tt>resolution</tt>, and <tt>transport</tt>.\\r\\n */\\r\\nexport const CONNECTION_STATS = 'statistics.connectionstats';\\r\\n\",\"import EventEmitter from 'events';\\r\\n\\r\\n/**\\r\\n * The class implements basic event operations - add/remove listener.\\r\\n * NOTE: The purpose of the class is to be extended in order to add\\r\\n * this functionality to other classes.\\r\\n */\\r\\nexport default class Listenable {\\r\\n    /**\\r\\n     * Creates new instance.\\r\\n     * @param {EventEmitter} eventEmitter\\r\\n     * @constructor\\r\\n     */\\r\\n    constructor(eventEmitter = new EventEmitter()) {\\r\\n        this.eventEmitter = eventEmitter;\\r\\n\\r\\n        // aliases for addListener/removeListener\\r\\n        this.addEventListener = this.on = this.addListener;\\r\\n        this.removeEventListener = this.off = this.removeListener;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds new listener.\\r\\n     * @param {String} eventName the name of the event\\r\\n     * @param {Function} listener the listener.\\r\\n     */\\r\\n    addListener(eventName, listener) {\\r\\n        this.eventEmitter.addListener(eventName, listener);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes listener.\\r\\n     * @param {String} eventName the name of the event that triggers the\\r\\n     * listener\\r\\n     * @param {Function} listener the listener.\\r\\n     */\\r\\n    removeListener(eventName, listener) {\\r\\n        this.eventEmitter.removeListener(eventName, listener);\\r\\n    }\\r\\n}\\r\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\nimport UsernameGenerator from '../util/UsernameGenerator';\\r\\n\\r\\nlet _callStatsUserName;\\r\\n\\r\\nlet _machineId;\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nexport default {\\r\\n    /**\\r\\n     * Returns fake username for callstats\\r\\n     * @returns {string} fake username for callstats\\r\\n     */\\r\\n    get callStatsUserName() {\\r\\n        if (!_callStatsUserName) {\\r\\n            const localStorage = getLocalStorage();\\r\\n\\r\\n            if (localStorage) {\\r\\n                _callStatsUserName = localStorage.getItem('callStatsUserName');\\r\\n            }\\r\\n            if (!_callStatsUserName) {\\r\\n                _callStatsUserName = generateCallStatsUserName();\\r\\n                if (localStorage) {\\r\\n                    localStorage.setItem(\\r\\n                        'callStatsUserName',\\r\\n                        _callStatsUserName);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _callStatsUserName;\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Returns current machine id.\\r\\n     * @returns {string} machine id\\r\\n     */\\r\\n    get machineId() {\\r\\n        if (!_machineId) {\\r\\n            const localStorage = getLocalStorage();\\r\\n\\r\\n            if (localStorage) {\\r\\n                _machineId = localStorage.getItem('jitsiMeetId');\\r\\n            }\\r\\n            if (!_machineId) {\\r\\n                _machineId = generateJitsiMeetId();\\r\\n                if (localStorage) {\\r\\n                    localStorage.setItem('jitsiMeetId', _machineId);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _machineId;\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Returns current session id.\\r\\n     * @returns {string} current session id\\r\\n     */\\r\\n    get sessionId() {\\r\\n        // We may update sessionId in localStorage from another JitsiConference\\r\\n        // instance and that's why we should always re-read it.\\r\\n        const localStorage = getLocalStorage();\\r\\n\\r\\n        return localStorage ? localStorage.getItem('sessionId') : undefined;\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Save current session id.\\r\\n     * @param {string} sessionId session id\\r\\n     */\\r\\n    set sessionId(sessionId) {\\r\\n        const localStorage = getLocalStorage();\\r\\n\\r\\n        if (localStorage) {\\r\\n            if (sessionId) {\\r\\n                localStorage.setItem('sessionId', sessionId);\\r\\n            } else {\\r\\n                localStorage.removeItem('sessionId');\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Generate fake username for callstats.\\r\\n * @returns {string} fake random username\\r\\n */\\r\\nfunction generateCallStatsUserName() {\\r\\n    const username = UsernameGenerator.generateUsername();\\r\\n\\r\\n    logger.log('generated callstats uid', username);\\r\\n\\r\\n    return username;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generate unique id.\\r\\n * @returns {string} random unique id\\r\\n */\\r\\nfunction generateJitsiMeetId() {\\r\\n    const jitsiMeetId = generateUniqueId();\\r\\n\\r\\n    logger.log('generated id', jitsiMeetId);\\r\\n\\r\\n    return jitsiMeetId;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Gets the localStorage of the browser. (Technically, gets the localStorage of\\r\\n * the global object because there may be no browser but React Native for\\r\\n * example).\\r\\n * @returns {Storage} the local Storage object (if any)\\r\\n */\\r\\nfunction getLocalStorage() {\\r\\n    let storage;\\r\\n\\r\\n    try {\\r\\n        // eslint-disable-next-line no-invalid-this\\r\\n        storage = (window || this).localStorage;\\r\\n    } catch (error) {\\r\\n        logger.error(error);\\r\\n    }\\r\\n\\r\\n    return storage;\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nfunction generateUniqueId() {\\r\\n    return _p8() + _p8() + _p8() + _p8();\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nfunction _p8() {\\r\\n    return `${Math.random().toString(16)}000000000`.substr(2, 8);\\r\\n}\\r\\n\",\"/**\\r\\n * Indicates that the local connection statistics were updated.\\r\\n */\\r\\nexport const LOCAL_STATS_UPDATED = 'cq.local_stats_updated';\\r\\n\\r\\n/**\\r\\n * Indicates that the connection statistics for a particular remote participant\\r\\n * were updated.\\r\\n */\\r\\nexport const REMOTE_STATS_UPDATED = 'cq.remote_stats_updated';\\r\\n\",\"import * as transform from 'sdp-transform';\\r\\n\\r\\n/**\\r\\n * Parses the primary SSRC of given SSRC group.\\r\\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\\r\\n * @return {Number} the primary SSRC number\\r\\n */\\r\\nexport function parsePrimarySSRC(group) {\\r\\n    return parseInt(group.ssrcs.split(' ')[0], 10);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Parses the secondary SSRC of given SSRC group.\\r\\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\\r\\n * @return {Number} the secondary SSRC number\\r\\n */\\r\\nexport function parseSecondarySSRC(group) {\\r\\n    return parseInt(group.ssrcs.split(' ')[1], 10);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Tells how many distinct SSRCs are contained in given media line.\\r\\n * @param {Object} mLine the media line object as defined by 'sdp-transform' lib\\r\\n * @return {number}\\r\\n */\\r\\nfunction _getSSRCCount(mLine) {\\r\\n    if (!mLine.ssrcs) {\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    return mLine.ssrcs\\r\\n        .map(ssrcInfo => ssrcInfo.id)\\r\\n        .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\\r\\n        .length;\\r\\n}\\r\\n\\r\\n/**\\r\\n * A wrapper around 'sdp-transform' media description object which provides\\r\\n * utility methods for common SDP/SSRC related operations.\\r\\n */\\r\\nclass MLineWrap {\\r\\n\\r\\n    /**\\r\\n     * Creates new <tt>MLineWrap</t>>\\r\\n     * @param {Object} mLine the media line object as defined by 'sdp-transform'\\r\\n     * lib.\\r\\n     */\\r\\n    constructor(mLine) {\\r\\n        if (!mLine) {\\r\\n            throw new Error('mLine is undefined');\\r\\n        }\\r\\n\\r\\n        this.mLine = mLine;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Getter for the mLine's \\\"ssrcs\\\" array. If the array was undefined an empty\\r\\n     * one will be preassigned.\\r\\n     *\\r\\n     * @return {Array<Object>} an array of 'sdp-transform' SSRC attributes\\r\\n     * objects.\\r\\n     */\\r\\n    get ssrcs() {\\r\\n        if (!this.mLine.ssrcs) {\\r\\n            this.mLine.ssrcs = [];\\r\\n        }\\r\\n\\r\\n        return this.mLine.ssrcs;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Setter for the mLine's \\\"ssrcs\\\" array.\\r\\n     *\\r\\n     * @param {Array<Object>} ssrcs an array of 'sdp-transform' SSRC attributes\\r\\n     * objects.\\r\\n     */\\r\\n    set ssrcs(ssrcs) {\\r\\n        this.mLine.ssrcs = ssrcs;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the direction of the underlying media description.\\r\\n     * @return {string} the media direction name as defined in the SDP.\\r\\n     */\\r\\n    get direction() {\\r\\n        return this.mLine.direction;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Modifies the direction of the underlying media description.\\r\\n     * @param {string} direction the new direction to be set\\r\\n     */\\r\\n    set direction(direction) {\\r\\n        this.mLine.direction = direction;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Exposes the SSRC group array of the underlying media description object.\\r\\n     * @return {Array.<Object>}\\r\\n     */\\r\\n    get ssrcGroups() {\\r\\n        if (!this.mLine.ssrcGroups) {\\r\\n            this.mLine.ssrcGroups = [];\\r\\n        }\\r\\n\\r\\n        return this.mLine.ssrcGroups;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Modifies the SSRC groups array of the underlying media description\\r\\n     * object.\\r\\n     * @param {Array.<Object>} ssrcGroups\\r\\n     */\\r\\n    set ssrcGroups(ssrcGroups) {\\r\\n        this.mLine.ssrcGroups = ssrcGroups;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Obtains value from SSRC attribute.\\r\\n     * @param {number} ssrcNumber the SSRC number for which attribute is to be\\r\\n     * found\\r\\n     * @param {string} attrName the name of the SSRC attribute to be found.\\r\\n     * @return {string|undefined} the value of SSRC attribute or\\r\\n     * <tt>undefined</tt> if no such attribute exists.\\r\\n     */\\r\\n    getSSRCAttrValue(ssrcNumber, attrName) {\\r\\n        const attribute = this.ssrcs.find(\\r\\n            ssrcObj => ssrcObj.id === ssrcNumber\\r\\n            && ssrcObj.attribute === attrName);\\r\\n\\r\\n\\r\\n        return attribute && attribute.value;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes all attributes for given SSRC number.\\r\\n     * @param {number} ssrcNum the SSRC number for which all attributes will be\\r\\n     * removed.\\r\\n     */\\r\\n    removeSSRC(ssrcNum) {\\r\\n        if (!this.mLine.ssrcs || !this.mLine.ssrcs.length) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.mLine.ssrcs\\r\\n            = this.mLine.ssrcs.filter(ssrcObj => ssrcObj.id !== ssrcNum);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds SSRC attribute\\r\\n     * @param {object} ssrcObj the SSRC attribute object as defined in\\r\\n     * the 'sdp-transform' lib.\\r\\n     */\\r\\n    addSSRCAttribute(ssrcObj) {\\r\\n        this.ssrcs.push(ssrcObj);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Finds a SSRC group matching both semantics and SSRCs in order.\\r\\n     * @param {string} semantics the name of the semantics\\r\\n     * @param {string} [ssrcs] group SSRCs as a string (like it's defined in\\r\\n     * SSRC group object of the 'sdp-transform' lib) e.g. \\\"1232546 342344 25434\\\"\\r\\n     * @return {object|undefined} the SSRC group object or <tt>undefined</tt> if\\r\\n     * not found.\\r\\n     */\\r\\n    findGroup(semantics, ssrcs) {\\r\\n        return this.ssrcGroups.find(\\r\\n            group =>\\r\\n                group.semantics === semantics\\r\\n                    && (!ssrcs || ssrcs === group.ssrcs));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Finds all groups matching given semantic's name.\\r\\n     * @param {string} semantics the name of the semantics\\r\\n     * @return {Array.<object>} an array of SSRC group objects as defined by\\r\\n     * the 'sdp-transform' lib.\\r\\n     */\\r\\n    findGroups(semantics) {\\r\\n        return this.ssrcGroups.filter(\\r\\n            group => group.semantics === semantics);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Finds all groups matching given semantic's name and group's primary SSRC.\\r\\n     * @param {string} semantics the name of the semantics\\r\\n     * @param {number} primarySSRC the primary SSRC number to be matched\\r\\n     * @return {Object} SSRC group object as defined by the 'sdp-transform' lib.\\r\\n     */\\r\\n    findGroupByPrimarySSRC(semantics, primarySSRC) {\\r\\n        return this.ssrcGroups.find(\\r\\n            group => group.semantics === semantics\\r\\n                && parsePrimarySSRC(group) === primarySSRC);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @param {string|null} msid the media stream id or <tt>null</tt> to match\\r\\n     * the first SSRC object with any 'msid' value.\\r\\n     * @return {Object|undefined} the SSRC object as defined by 'sdp-transform'\\r\\n     * lib.\\r\\n     */\\r\\n    findSSRCByMSID(msid) {\\r\\n        return this.ssrcs.find(\\r\\n            ssrcObj => ssrcObj.attribute === 'msid'\\r\\n                && (msid === null || ssrcObj.value === msid));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the SSRC count for the underlying media description.\\r\\n     * @return {number}\\r\\n     */\\r\\n    getSSRCCount() {\\r\\n        return _getSSRCCount(this.mLine);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether the underlying media description contains any SSRC groups.\\r\\n     * @return {boolean} <tt>true</tt> if there are any SSRC groups or\\r\\n     * <tt>false</tt> otherwise.\\r\\n     */\\r\\n    containsAnySSRCGroups() {\\r\\n        return this.mLine.ssrcGroups !== undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Finds the primary video SSRC.\\r\\n     * @returns {number|undefined} the primary video ssrc\\r\\n     * @throws Error if the underlying media description is not a video\\r\\n     */\\r\\n    getPrimaryVideoSsrc() {\\r\\n        const mediaType = this.mLine.type;\\r\\n\\r\\n        if (mediaType !== 'video') {\\r\\n            throw new Error(\\r\\n                `getPrimarySsrc doesn't work with '${mediaType}'`);\\r\\n        }\\r\\n\\r\\n        const numSsrcs = _getSSRCCount(this.mLine);\\r\\n\\r\\n        if (numSsrcs === 1) {\\r\\n            // Not using \\\"ssrcs\\\" getter on purpose here\\r\\n            return this.mLine.ssrcs[0].id;\\r\\n        }\\r\\n\\r\\n        // Look for a SIM, FID, or FEC-FR group\\r\\n        if (this.mLine.ssrcGroups) {\\r\\n            const simGroup = this.findGroup('SIM');\\r\\n\\r\\n            if (simGroup) {\\r\\n                return parsePrimarySSRC(simGroup);\\r\\n            }\\r\\n            const fidGroup = this.findGroup('FID');\\r\\n\\r\\n            if (fidGroup) {\\r\\n                return parsePrimarySSRC(fidGroup);\\r\\n            }\\r\\n            const fecGroup = this.findGroup('FEC-FR');\\r\\n\\r\\n            if (fecGroup) {\\r\\n                return parsePrimarySSRC(fecGroup);\\r\\n            }\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Obtains RTX SSRC from the underlying video description (the\\r\\n     * secondary SSRC of the first \\\"FID\\\" group found)\\r\\n     * @param {number} primarySsrc the video ssrc for which to find the\\r\\n     * corresponding rtx ssrc\\r\\n     * @returns {number|undefined} the rtx ssrc (or undefined if there isn't\\r\\n     * one)\\r\\n     */\\r\\n    getRtxSSRC(primarySsrc) {\\r\\n        const fidGroup = this.findGroupByPrimarySSRC('FID', primarySsrc);\\r\\n\\r\\n\\r\\n        return fidGroup && parseSecondarySSRC(fidGroup);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Obtains all SSRCs contained in the underlying media description.\\r\\n     * @return {Array.<number>} an array with all SSRC as numbers.\\r\\n     */\\r\\n    getSSRCs() {\\r\\n        return this.ssrcs\\r\\n            .map(ssrcInfo => ssrcInfo.id)\\r\\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Obtains primary video SSRCs.\\r\\n     * @return {Array.<number>} an array of all primary video SSRCs as numbers.\\r\\n     * @throws Error if the wrapped media description is not a video.\\r\\n     */\\r\\n    getPrimaryVideoSSRCs() {\\r\\n        const mediaType = this.mLine.type;\\r\\n\\r\\n        if (mediaType !== 'video') {\\r\\n            throw new Error(\\r\\n                `getPrimaryVideoSSRCs doesn't work with ${mediaType}`);\\r\\n        }\\r\\n\\r\\n        const videoSSRCs = this.getSSRCs();\\r\\n\\r\\n        for (const ssrcGroupInfo of this.ssrcGroups) {\\r\\n            // Right now, FID and FEC-FR groups are the only ones we parse to\\r\\n            // disqualify streams.  If/when others arise we'll\\r\\n            // need to add support for them here\\r\\n            if (ssrcGroupInfo.semantics === 'FID'\\r\\n                    || ssrcGroupInfo.semantics === 'FEC-FR') {\\r\\n                // secondary streams should be filtered out\\r\\n                const secondarySsrc = parseSecondarySSRC(ssrcGroupInfo);\\r\\n\\r\\n                videoSSRCs.splice(\\r\\n                    videoSSRCs.indexOf(secondarySsrc), 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return videoSSRCs;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Dumps all SSRC groups of this media description to JSON.\\r\\n     */\\r\\n    dumpSSRCGroups() {\\r\\n        return JSON.stringify(this.mLine.ssrcGroups);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes all SSRC groups which contain given SSRC number at any position.\\r\\n     * @param {number} ssrc the SSRC for which all matching groups are to be\\r\\n     * removed.\\r\\n     */\\r\\n    removeGroupsWithSSRC(ssrc) {\\r\\n        if (!this.mLine.ssrcGroups) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.mLine.ssrcGroups = this.mLine.ssrcGroups\\r\\n            .filter(groupInfo => groupInfo.ssrcs.indexOf(`${ssrc}`) === -1);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes groups that match given semantics.\\r\\n     * @param {string} semantics e.g. \\\"SIM\\\" or \\\"FID\\\"\\r\\n     */\\r\\n    removeGroupsBySemantics(semantics) {\\r\\n        if (!this.mLine.ssrcGroups) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.mLine.ssrcGroups\\r\\n            = this.mLine.ssrcGroups\\r\\n                .filter(groupInfo => groupInfo.semantics !== semantics);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Replaces SSRC (does not affect SSRC groups, but only attributes).\\r\\n     * @param {number} oldSSRC the old SSRC number\\r\\n     * @param {number} newSSRC the new SSRC number\\r\\n     */\\r\\n    replaceSSRC(oldSSRC, newSSRC) {\\r\\n        if (this.mLine.ssrcs) {\\r\\n            this.mLine.ssrcs.forEach(ssrcInfo => {\\r\\n                if (ssrcInfo.id === oldSSRC) {\\r\\n                    ssrcInfo.id = newSSRC;\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds given SSRC group to this media description.\\r\\n     * @param {object} group the SSRC group object as defined by\\r\\n     * the 'sdp-transform' lib.\\r\\n     */\\r\\n    addSSRCGroup(group) {\\r\\n        this.ssrcGroups.push(group);\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Utility class for SDP manipulation using the 'sdp-transform' library.\\r\\n *\\r\\n * Typical use usage scenario:\\r\\n *\\r\\n * const transformer = new SdpTransformWrap(rawSdp);\\r\\n * const videoMLine = transformer.selectMedia('video);\\r\\n * if (videoMLine) {\\r\\n *     videoMLiner.addSSRCAttribute({\\r\\n *         id: 2342343,\\r\\n *         attribute: \\\"cname\\\",\\r\\n *         value: \\\"someCname\\\"\\r\\n *     });\\r\\n *     rawSdp = transformer.toRawSdp();\\r\\n * }\\r\\n */\\r\\nexport class SdpTransformWrap {\\r\\n\\r\\n    /**\\r\\n     * Creates new instance and parses the raw SDP into objects using\\r\\n     * 'sdp-transform' lib.\\r\\n     * @param {string} rawSDP the SDP in raw text format.\\r\\n     */\\r\\n    constructor(rawSDP) {\\r\\n        this.parsedSDP = transform.parse(rawSDP);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Selects the first media SDP of given name.\\r\\n     * @param {string} mediaType the name of the media e.g. 'audio', 'video',\\r\\n     * 'data'.\\r\\n     * @return {MLineWrap|null} return {@link MLineWrap} instance for the media\\r\\n     * line or <tt>null</tt> if not found. The object returned references\\r\\n     * the underlying SDP state held by this <tt>SdpTransformWrap</tt> instance\\r\\n     * (it's not a copy).\\r\\n     */\\r\\n    selectMedia(mediaType) {\\r\\n        const selectedMLine\\r\\n            = this.parsedSDP.media.find(mLine => mLine.type === mediaType);\\r\\n\\r\\n        return selectedMLine ? new MLineWrap(selectedMLine) : null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts the currently stored SDP state in this instance to raw text SDP\\r\\n     * format.\\r\\n     * @return {string}\\r\\n     */\\r\\n    toRawSDP() {\\r\\n        return transform.write(this.parsedSDP);\\r\\n    }\\r\\n}\\r\\n\",\"/**\\r\\n * The know jingle actions that can be sent and should be acted upon by\\r\\n * {@code ProxyConnectionService} and {@code ProxyConnectionPC}.\\r\\n */\\r\\nexport const ACTIONS = {\\r\\n    ACCEPT: 'session-accept',\\r\\n    CONNECTION_ERROR: 'connection-error-encountered',\\r\\n    INITIATE: 'session-initiate',\\r\\n    TERMINATE: 'session-terminate',\\r\\n    TRANSPORT_INFO: 'transport-info',\\r\\n    UNAVAILABLE: 'unavailable'\\r\\n};\\r\\n\",\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\nfunction EventEmitter() {\\n  this._events = this._events || {};\\n  this._maxListeners = this._maxListeners || undefined;\\n}\\nmodule.exports = EventEmitter;\\n\\n// Backwards-compat with node 0.10.x\\nEventEmitter.EventEmitter = EventEmitter;\\n\\nEventEmitter.prototype._events = undefined;\\nEventEmitter.prototype._maxListeners = undefined;\\n\\n// By default EventEmitters will print a warning if more than 10 listeners are\\n// added to it. This is a useful default which helps finding memory leaks.\\nEventEmitter.defaultMaxListeners = 10;\\n\\n// Obviously not all Emitters should be limited to 10. This function allows\\n// that to be increased. Set to zero for unlimited.\\nEventEmitter.prototype.setMaxListeners = function(n) {\\n  if (!isNumber(n) || n < 0 || isNaN(n))\\n    throw TypeError('n must be a positive number');\\n  this._maxListeners = n;\\n  return this;\\n};\\n\\nEventEmitter.prototype.emit = function(type) {\\n  var er, handler, len, args, i, listeners;\\n\\n  if (!this._events)\\n    this._events = {};\\n\\n  // If there is no 'error' event listener then throw.\\n  if (type === 'error') {\\n    if (!this._events.error ||\\n        (isObject(this._events.error) && !this._events.error.length)) {\\n      er = arguments[1];\\n      if (er instanceof Error) {\\n        throw er; // Unhandled 'error' event\\n      } else {\\n        // At least give some kind of context to the user\\n        var err = new Error('Uncaught, unspecified \\\"error\\\" event. (' + er + ')');\\n        err.context = er;\\n        throw err;\\n      }\\n    }\\n  }\\n\\n  handler = this._events[type];\\n\\n  if (isUndefined(handler))\\n    return false;\\n\\n  if (isFunction(handler)) {\\n    switch (arguments.length) {\\n      // fast cases\\n      case 1:\\n        handler.call(this);\\n        break;\\n      case 2:\\n        handler.call(this, arguments[1]);\\n        break;\\n      case 3:\\n        handler.call(this, arguments[1], arguments[2]);\\n        break;\\n      // slower\\n      default:\\n        args = Array.prototype.slice.call(arguments, 1);\\n        handler.apply(this, args);\\n    }\\n  } else if (isObject(handler)) {\\n    args = Array.prototype.slice.call(arguments, 1);\\n    listeners = handler.slice();\\n    len = listeners.length;\\n    for (i = 0; i < len; i++)\\n      listeners[i].apply(this, args);\\n  }\\n\\n  return true;\\n};\\n\\nEventEmitter.prototype.addListener = function(type, listener) {\\n  var m;\\n\\n  if (!isFunction(listener))\\n    throw TypeError('listener must be a function');\\n\\n  if (!this._events)\\n    this._events = {};\\n\\n  // To avoid recursion in the case that type === \\\"newListener\\\"! Before\\n  // adding it to the listeners, first emit \\\"newListener\\\".\\n  if (this._events.newListener)\\n    this.emit('newListener', type,\\n              isFunction(listener.listener) ?\\n              listener.listener : listener);\\n\\n  if (!this._events[type])\\n    // Optimize the case of one listener. Don't need the extra array object.\\n    this._events[type] = listener;\\n  else if (isObject(this._events[type]))\\n    // If we've already got an array, just append.\\n    this._events[type].push(listener);\\n  else\\n    // Adding the second element, need to change to array.\\n    this._events[type] = [this._events[type], listener];\\n\\n  // Check for listener leak\\n  if (isObject(this._events[type]) && !this._events[type].warned) {\\n    if (!isUndefined(this._maxListeners)) {\\n      m = this._maxListeners;\\n    } else {\\n      m = EventEmitter.defaultMaxListeners;\\n    }\\n\\n    if (m && m > 0 && this._events[type].length > m) {\\n      this._events[type].warned = true;\\n      console.error('(node) warning: possible EventEmitter memory ' +\\n                    'leak detected. %d listeners added. ' +\\n                    'Use emitter.setMaxListeners() to increase limit.',\\n                    this._events[type].length);\\n      if (typeof console.trace === 'function') {\\n        // not supported in IE 10\\n        console.trace();\\n      }\\n    }\\n  }\\n\\n  return this;\\n};\\n\\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\\n\\nEventEmitter.prototype.once = function(type, listener) {\\n  if (!isFunction(listener))\\n    throw TypeError('listener must be a function');\\n\\n  var fired = false;\\n\\n  function g() {\\n    this.removeListener(type, g);\\n\\n    if (!fired) {\\n      fired = true;\\n      listener.apply(this, arguments);\\n    }\\n  }\\n\\n  g.listener = listener;\\n  this.on(type, g);\\n\\n  return this;\\n};\\n\\n// emits a 'removeListener' event iff the listener was removed\\nEventEmitter.prototype.removeListener = function(type, listener) {\\n  var list, position, length, i;\\n\\n  if (!isFunction(listener))\\n    throw TypeError('listener must be a function');\\n\\n  if (!this._events || !this._events[type])\\n    return this;\\n\\n  list = this._events[type];\\n  length = list.length;\\n  position = -1;\\n\\n  if (list === listener ||\\n      (isFunction(list.listener) && list.listener === listener)) {\\n    delete this._events[type];\\n    if (this._events.removeListener)\\n      this.emit('removeListener', type, listener);\\n\\n  } else if (isObject(list)) {\\n    for (i = length; i-- > 0;) {\\n      if (list[i] === listener ||\\n          (list[i].listener && list[i].listener === listener)) {\\n        position = i;\\n        break;\\n      }\\n    }\\n\\n    if (position < 0)\\n      return this;\\n\\n    if (list.length === 1) {\\n      list.length = 0;\\n      delete this._events[type];\\n    } else {\\n      list.splice(position, 1);\\n    }\\n\\n    if (this._events.removeListener)\\n      this.emit('removeListener', type, listener);\\n  }\\n\\n  return this;\\n};\\n\\nEventEmitter.prototype.removeAllListeners = function(type) {\\n  var key, listeners;\\n\\n  if (!this._events)\\n    return this;\\n\\n  // not listening for removeListener, no need to emit\\n  if (!this._events.removeListener) {\\n    if (arguments.length === 0)\\n      this._events = {};\\n    else if (this._events[type])\\n      delete this._events[type];\\n    return this;\\n  }\\n\\n  // emit removeListener for all listeners on all events\\n  if (arguments.length === 0) {\\n    for (key in this._events) {\\n      if (key === 'removeListener') continue;\\n      this.removeAllListeners(key);\\n    }\\n    this.removeAllListeners('removeListener');\\n    this._events = {};\\n    return this;\\n  }\\n\\n  listeners = this._events[type];\\n\\n  if (isFunction(listeners)) {\\n    this.removeListener(type, listeners);\\n  } else if (listeners) {\\n    // LIFO order\\n    while (listeners.length)\\n      this.removeListener(type, listeners[listeners.length - 1]);\\n  }\\n  delete this._events[type];\\n\\n  return this;\\n};\\n\\nEventEmitter.prototype.listeners = function(type) {\\n  var ret;\\n  if (!this._events || !this._events[type])\\n    ret = [];\\n  else if (isFunction(this._events[type]))\\n    ret = [this._events[type]];\\n  else\\n    ret = this._events[type].slice();\\n  return ret;\\n};\\n\\nEventEmitter.prototype.listenerCount = function(type) {\\n  if (this._events) {\\n    var evlistener = this._events[type];\\n\\n    if (isFunction(evlistener))\\n      return 1;\\n    else if (evlistener)\\n      return evlistener.length;\\n  }\\n  return 0;\\n};\\n\\nEventEmitter.listenerCount = function(emitter, type) {\\n  return emitter.listenerCount(type);\\n};\\n\\nfunction isFunction(arg) {\\n  return typeof arg === 'function';\\n}\\n\\nfunction isNumber(arg) {\\n  return typeof arg === 'number';\\n}\\n\\nfunction isObject(arg) {\\n  return typeof arg === 'object' && arg !== null;\\n}\\n\\nfunction isUndefined(arg) {\\n  return arg === void 0;\\n}\\n\",\"const Resolutions = {\\r\\n    '1080': {\\r\\n        width: 1920,\\r\\n        height: 1080,\\r\\n        order: 8\\r\\n    },\\r\\n    'fullhd': {\\r\\n        width: 1920,\\r\\n        height: 1080,\\r\\n        order: 8\\r\\n    },\\r\\n    '720': {\\r\\n        width: 1280,\\r\\n        height: 720,\\r\\n        order: 7\\r\\n    },\\r\\n    'hd': {\\r\\n        width: 1280,\\r\\n        height: 720,\\r\\n        order: 7\\r\\n    },\\r\\n    '960': {\\r\\n        width: 960,\\r\\n        height: 720,\\r\\n        order: 6\\r\\n    },\\r\\n    '540': {\\r\\n        width: 960,\\r\\n        height: 540,\\r\\n        order: 5\\r\\n    },\\r\\n    'qhd': {\\r\\n        width: 960,\\r\\n        height: 540,\\r\\n        order: 5\\r\\n    },\\r\\n\\r\\n    // 16:9 resolution first.\\r\\n    '360': {\\r\\n        width: 640,\\r\\n        height: 360,\\r\\n        order: 4\\r\\n    },\\r\\n    '640': {\\r\\n        width: 640,\\r\\n        height: 480,\\r\\n        order: 3\\r\\n    },\\r\\n    'vga': {\\r\\n        width: 640,\\r\\n        height: 480,\\r\\n        order: 3\\r\\n    },\\r\\n\\r\\n    // 16:9 resolution first.\\r\\n    '180': {\\r\\n        width: 320,\\r\\n        height: 180,\\r\\n        order: 2\\r\\n    },\\r\\n    '320': {\\r\\n        width: 320,\\r\\n        height: 240,\\r\\n        order: 1\\r\\n    }\\r\\n};\\r\\n\\r\\nmodule.exports = Resolutions;\\r\\n\",\"/**\\r\\n * The pending Jingle session state which means the session as defined in\\r\\n * XEP-0166(before 'session-invite/session-accept' took place).\\r\\n *\\r\\n * @type {string}\\r\\n */\\r\\nexport const PENDING = 'pending';\\r\\n\\r\\n/**\\r\\n * The active Jingle session state as defined in XEP-0166\\r\\n * (after 'session-invite'/'session-accept').\\r\\n *\\r\\n * @type {string}\\r\\n */\\r\\nexport const ACTIVE = 'active';\\r\\n\\r\\n/**\\r\\n * The ended Jingle session state as defined in XEP-0166\\r\\n * (after 'session-terminate').\\r\\n * @type {string}\\r\\n */\\r\\nexport const ENDED = 'ended';\\r\\n\",\"/* global callstats */\\r\\n\\r\\nimport browser from '../browser';\\r\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\r\\n\\r\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * We define enumeration of wrtcFuncNames as we need them before\\r\\n * callstats is initialized to queue events.\\r\\n * @const\\r\\n * @see http://www.callstats.io/api/#enumeration-of-wrtcfuncnames\\r\\n */\\r\\nconst wrtcFuncNames = {\\r\\n    createOffer: 'createOffer',\\r\\n    createAnswer: 'createAnswer',\\r\\n    setLocalDescription: 'setLocalDescription',\\r\\n    setRemoteDescription: 'setRemoteDescription',\\r\\n    addIceCandidate: 'addIceCandidate',\\r\\n    getUserMedia: 'getUserMedia',\\r\\n    iceConnectionFailure: 'iceConnectionFailure',\\r\\n    signalingError: 'signalingError',\\r\\n    applicationLog: 'applicationLog'\\r\\n};\\r\\n\\r\\n/**\\r\\n * We define enumeration of fabricEvent as we need them before\\r\\n * callstats is initialized to queue events.\\r\\n * @const\\r\\n * @see http://www.callstats.io/api/#enumeration-of-fabricevent\\r\\n */\\r\\nconst fabricEvent = {\\r\\n    fabricHold: 'fabricHold',\\r\\n    fabricResume: 'fabricResume',\\r\\n    audioMute: 'audioMute',\\r\\n    audioUnmute: 'audioUnmute',\\r\\n    videoPause: 'videoPause',\\r\\n    videoResume: 'videoResume',\\r\\n    fabricUsageEvent: 'fabricUsageEvent',\\r\\n    fabricStats: 'fabricStats',\\r\\n    fabricTerminated: 'fabricTerminated',\\r\\n    screenShareStart: 'screenShareStart',\\r\\n    screenShareStop: 'screenShareStop',\\r\\n    dominantSpeaker: 'dominantSpeaker',\\r\\n    activeDeviceList: 'activeDeviceList'\\r\\n};\\r\\n\\r\\n/**\\r\\n * The user id to report to callstats as destination.\\r\\n * @type {string}\\r\\n */\\r\\nconst DEFAULT_REMOTE_USER = 'jitsi';\\r\\n\\r\\n/**\\r\\n * Type of pending reports, can be event or an error.\\r\\n * @type {{ERROR: string, EVENT: string}}\\r\\n */\\r\\nconst reportType = {\\r\\n    ERROR: 'error',\\r\\n    EVENT: 'event',\\r\\n    MST_WITH_USERID: 'mstWithUserID'\\r\\n};\\r\\n\\r\\n/**\\r\\n * Set of currently existing {@link CallStats} instances.\\r\\n * @type {Set<CallStats>}\\r\\n */\\r\\nlet _fabrics;\\r\\n\\r\\n/**\\r\\n * An instance of this class is a wrapper for the CallStats API fabric. A fabric\\r\\n * reports one peer connection the the CallStats backend and is allocated with\\r\\n * {@link callstats.addNewFabric}. It has a bunch of instance methods for\\r\\n * reporting various events. A fabric is considered disposed when\\r\\n * {@link CallStats.sendTerminateEvent} is executed.\\r\\n *\\r\\n * Currently only one backend instance can be created ever and it's done using\\r\\n * {@link CallStats.initBackend}. At the time of this writing there is no way to\\r\\n * explicitly shutdown the backend, but it's supposed to close it's connection\\r\\n * automatically, after all fabrics have been terminated.\\r\\n */\\r\\nexport default class CallStats {\\r\\n    /**\\r\\n     * A callback passed to {@link callstats.addNewFabric}.\\r\\n     * @param {string} error 'success' means ok\\r\\n     * @param {string} msg some more details\\r\\n     * @private\\r\\n     */\\r\\n    static _addNewFabricCallback(error, msg) {\\r\\n        if (CallStats.backend && error !== 'success') {\\r\\n            logger.error(`Monitoring status: ${error} msg: ${msg}`);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback passed to {@link callstats.initialize} (backend initialization)\\r\\n     * @param {string} error 'success' means ok\\r\\n     * @param {String} msg\\r\\n     * @private\\r\\n     */\\r\\n    static _initCallback(error, msg) {\\r\\n        logger.log(`CallStats Status: err=${error} msg=${msg}`);\\r\\n\\r\\n        // there is no lib, nothing to report to\\r\\n        if (error !== 'success') {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        CallStats.backendInitialized = true;\\r\\n\\r\\n        // I hate that\\r\\n        let atLeastOneFabric = false;\\r\\n        let defaultInstance = null;\\r\\n\\r\\n        for (const callStatsInstance of CallStats.fabrics.values()) {\\r\\n            if (!callStatsInstance.hasFabric) {\\r\\n                logger.debug('addNewFabric - initCallback');\\r\\n                if (callStatsInstance._addNewFabric()) {\\r\\n                    atLeastOneFabric = true;\\r\\n                    if (!defaultInstance) {\\r\\n                        defaultInstance = callStatsInstance;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (!atLeastOneFabric) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        CallStats._emptyReportQueue(defaultInstance);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Empties report queue.\\r\\n     *\\r\\n     * @param {CallStats} csInstance - The callstats instance.\\r\\n     * @private\\r\\n     */\\r\\n    static _emptyReportQueue(csInstance) {\\r\\n        // There is no conference ID nor a PeerConnection available when some of\\r\\n        // the events are scheduled on the reportsQueue, so those will be\\r\\n        // reported on the first initialized fabric.\\r\\n        const defaultConfID = csInstance.confID;\\r\\n        const defaultPC = csInstance.peerconnection;\\r\\n\\r\\n        // notify callstats about failures if there were any\\r\\n        for (const report of CallStats.reportsQueue) {\\r\\n            if (report.type === reportType.ERROR) {\\r\\n                const errorData = report.data;\\r\\n\\r\\n                CallStats._reportError(\\r\\n                    csInstance,\\r\\n                    errorData.type,\\r\\n                    errorData.error,\\r\\n                    errorData.pc || defaultPC);\\r\\n            } else if (report.type === reportType.EVENT) {\\r\\n                // if we have and event to report and we failed to add\\r\\n                // fabric this event will not be reported anyway, returning\\r\\n                // an error\\r\\n                const eventData = report.data;\\r\\n\\r\\n                CallStats.backend.sendFabricEvent(\\r\\n                    report.pc || defaultPC,\\r\\n                    eventData.event,\\r\\n                    defaultConfID,\\r\\n                    eventData.eventData);\\r\\n            } else if (report.type === reportType.MST_WITH_USERID) {\\r\\n                const data = report.data;\\r\\n\\r\\n                CallStats.backend.associateMstWithUserID(\\r\\n                    report.pc || defaultPC,\\r\\n                    data.callStatsId,\\r\\n                    defaultConfID,\\r\\n                    data.ssrc,\\r\\n                    data.usageLabel,\\r\\n                    data.containerId\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n        CallStats.reportsQueue.length = 0;\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n    /**\\r\\n     * Reports an error to callstats.\\r\\n     *\\r\\n     * @param {CallStats} [cs]\\r\\n     * @param type the type of the error, which will be one of the wrtcFuncNames\\r\\n     * @param error the error\\r\\n     * @param pc the peerconnection\\r\\n     * @private\\r\\n     */\\r\\n    static _reportError(cs, type, error, pc) {\\r\\n        let _error = error;\\r\\n\\r\\n        if (!_error) {\\r\\n            logger.warn('No error is passed!');\\r\\n            _error = new Error('Unknown error');\\r\\n        }\\r\\n        if (CallStats.backendInitialized && cs) {\\r\\n            CallStats.backend.reportError(pc, cs.confID, type, _error);\\r\\n        } else {\\r\\n            CallStats.reportsQueue.push({\\r\\n                type: reportType.ERROR,\\r\\n                data: {\\r\\n                    error: _error,\\r\\n                    pc,\\r\\n                    type\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n\\r\\n        // else just ignore it\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Reports an error to callstats.\\r\\n     *\\r\\n     * @param {CallStats} cs\\r\\n     * @param event the type of the event, which will be one of the fabricEvent\\r\\n     * @param eventData additional data to pass to event\\r\\n     * @private\\r\\n     */\\r\\n    static _reportEvent(cs, event, eventData) {\\r\\n        const pc = cs && cs.peerconnection;\\r\\n        const confID = cs && cs.confID;\\r\\n\\r\\n        if (CallStats.backendInitialized && cs) {\\r\\n            CallStats.backend.sendFabricEvent(pc, event, confID, eventData);\\r\\n        } else {\\r\\n            CallStats.reportsQueue.push({\\r\\n                confID,\\r\\n                pc,\\r\\n                type: reportType.EVENT,\\r\\n                data: { event,\\r\\n                    eventData }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Wraps some of the CallStats API method and logs their calls with\\r\\n     * arguments on the debug logging level. Also wraps some of the backend\\r\\n     * methods execution into try catch blocks to not crash the app in case\\r\\n     * there is a problem with the backend itself.\\r\\n     * @param {callstats} theBackend\\r\\n     * @private\\r\\n     */\\r\\n    static _traceAndCatchBackendCalls(theBackend) {\\r\\n        const tryCatchMethods = [\\r\\n            'associateMstWithUserID',\\r\\n            'sendFabricEvent',\\r\\n            'sendUserFeedback'\\r\\n\\r\\n            // 'reportError', - this one needs special handling - see code below\\r\\n        ];\\r\\n\\r\\n        for (const methodName of tryCatchMethods) {\\r\\n            const originalMethod = theBackend[methodName];\\r\\n\\r\\n            theBackend[methodName] = function(...theArguments) {\\r\\n                try {\\r\\n                    return originalMethod.apply(theBackend, theArguments);\\r\\n                } catch (e) {\\r\\n                    GlobalOnErrorHandler.callErrorHandler(e);\\r\\n                }\\r\\n            };\\r\\n        }\\r\\n        const debugMethods = [\\r\\n            'associateMstWithUserID',\\r\\n            'sendFabricEvent',\\r\\n            'sendUserFeedback'\\r\\n\\r\\n            // 'reportError', - this one needs special handling - see code below\\r\\n        ];\\r\\n\\r\\n        for (const methodName of debugMethods) {\\r\\n            const originalMethod = theBackend[methodName];\\r\\n\\r\\n            theBackend[methodName] = function(...theArguments) {\\r\\n                logger.debug(methodName, theArguments);\\r\\n                originalMethod.apply(theBackend, theArguments);\\r\\n            };\\r\\n        }\\r\\n        const originalReportError = theBackend.reportError;\\r\\n\\r\\n        /* eslint-disable max-params */\\r\\n        theBackend.reportError = function(pc, cs, type, ...args) {\\r\\n            // Logs from the logger are submitted on the applicationLog event\\r\\n            // \\\"type\\\". Logging the arguments on the logger will create endless\\r\\n            // loop, because it will put all the logs to the logger queue again.\\r\\n            if (type === wrtcFuncNames.applicationLog) {\\r\\n                // NOTE otherArguments are not logged to the console on purpose\\r\\n                // to not log the whole log batch\\r\\n                // FIXME check the current logging level (currently not exposed\\r\\n                // by the logger implementation)\\r\\n                // NOTE it is not safe to log whole objects on react-native as\\r\\n                // those contain too many circular references and may crash\\r\\n                // the app.\\r\\n                if (!browser.isReactNative()) {\\r\\n                    console && console.debug('reportError', pc, cs, type);\\r\\n                }\\r\\n            } else {\\r\\n                logger.debug('reportError', pc, cs, type, ...args);\\r\\n            }\\r\\n            try {\\r\\n                originalReportError.call(theBackend, pc, cs, type, ...args);\\r\\n            } catch (exception) {\\r\\n                if (type === wrtcFuncNames.applicationLog) {\\r\\n                    console && console.error('reportError', exception);\\r\\n                } else {\\r\\n                    GlobalOnErrorHandler.callErrorHandler(exception);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /* eslint-enable max-params */\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the Set with the currently existing {@link CallStats} instances.\\r\\n     * Lazily initializes the Set to allow any Set polyfills to be applied.\\r\\n     * @type {Set<CallStats>}\\r\\n     */\\r\\n    static get fabrics() {\\r\\n        if (!_fabrics) {\\r\\n            _fabrics = new Set();\\r\\n        }\\r\\n\\r\\n        return _fabrics;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes the CallStats backend. Should be called only if\\r\\n     * {@link CallStats.isBackendInitialized} returns <tt>false</tt>.\\r\\n     * @param {object} options\\r\\n     * @param {String} options.callStatsID CallStats credentials - ID\\r\\n     * @param {String} options.callStatsSecret CallStats credentials - secret\\r\\n     * @param {string} options.aliasName the <tt>aliasName</tt> part of\\r\\n     * the <tt>userID</tt> aka endpoint ID, see CallStats docs for more info.\\r\\n     * @param {string} options.userName the <tt>userName</tt> part of\\r\\n     * the <tt>userID</tt> aka display name, see CallStats docs for more info.\\r\\n     *\\r\\n     */\\r\\n    static initBackend(options) {\\r\\n        if (CallStats.backend) {\\r\\n            throw new Error('CallStats backend has been initialized already!');\\r\\n        }\\r\\n        try {\\r\\n            const CallStatsBackend = callstats;\\r\\n\\r\\n            CallStats.backend = new CallStatsBackend();\\r\\n            CallStats._traceAndCatchBackendCalls(CallStats.backend);\\r\\n            CallStats.userID = {\\r\\n                aliasName: options.aliasName,\\r\\n                userName: options.userName\\r\\n            };\\r\\n            CallStats.callStatsID = options.callStatsID;\\r\\n            CallStats.callStatsSecret = options.callStatsSecret;\\r\\n\\r\\n            let configParams;\\r\\n\\r\\n            if (options.applicationName) {\\r\\n                configParams = {\\r\\n                    applicationVersion:\\r\\n                        `${options.applicationName} (${\\r\\n                            browser.getName()})`\\r\\n                };\\r\\n            }\\r\\n\\r\\n            if (options.confID) {\\r\\n                // we first check is there a tenant in the confID\\r\\n                const match = options.confID.match(/.*\\\\/(.*)\\\\/.*/);\\r\\n\\r\\n                // if there is no tenant, we will just set '/'\\r\\n                configParams.siteID = (match && match[1]) || '/';\\r\\n            }\\r\\n\\r\\n            // userID is generated or given by the origin server\\r\\n            CallStats.backend.initialize(\\r\\n                CallStats.callStatsID,\\r\\n                CallStats.callStatsSecret,\\r\\n                CallStats.userID,\\r\\n                CallStats._initCallback,\\r\\n                undefined,\\r\\n                configParams);\\r\\n\\r\\n            const getWiFiStatsMethod = options.getWiFiStatsMethod;\\r\\n\\r\\n            if (getWiFiStatsMethod) {\\r\\n                CallStats.backend.attachWifiStatsHandler(getWiFiStatsMethod);\\r\\n\\r\\n                getWiFiStatsMethod().then(result => {\\r\\n                    if (result) {\\r\\n                        logger.info('Reported wifi addresses:'\\r\\n                            , JSON.parse(result).addresses);\\r\\n                    }\\r\\n                })\\r\\n                .catch(() => {});// eslint-disable-line no-empty-function\\r\\n            }\\r\\n\\r\\n            return true;\\r\\n        } catch (e) {\\r\\n            // The callstats.io API failed to initialize (e.g. because its\\r\\n            // download did not succeed in general or on time). Further attempts\\r\\n            // to utilize it cannot possibly succeed.\\r\\n            GlobalOnErrorHandler.callErrorHandler(e);\\r\\n            CallStats.backend = null;\\r\\n            logger.error(e);\\r\\n\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the CallStats backend has been created. It does not mean that\\r\\n     * it has been initialized, but only that the API instance has been\\r\\n     * allocated successfully.\\r\\n     * @return {boolean} <tt>true</tt> if backend exists or <tt>false</tt>\\r\\n     * otherwise\\r\\n     */\\r\\n    static isBackendInitialized() {\\r\\n        return Boolean(CallStats.backend);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats about active device.\\r\\n     * @param {{deviceList: {String:String}}} devicesData list of devices with\\r\\n     * their data\\r\\n     * @param {CallStats} cs callstats instance related to the event\\r\\n     */\\r\\n    static sendActiveDeviceListEvent(devicesData, cs) {\\r\\n        CallStats._reportEvent(cs, fabricEvent.activeDeviceList, devicesData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats that there is a log we want to report.\\r\\n     *\\r\\n     * @param {Error} e error to send or {String} message\\r\\n     * @param {CallStats} cs callstats instance related to the error (optional)\\r\\n     */\\r\\n    static sendApplicationLog(e, cs) {\\r\\n        try {\\r\\n            CallStats._reportError(\\r\\n                cs,\\r\\n                wrtcFuncNames.applicationLog,\\r\\n                e,\\r\\n                cs && cs.peerconnection);\\r\\n        } catch (error) {\\r\\n            // If sendApplicationLog fails it should not be printed to\\r\\n            // the logger, because it will try to push the logs again\\r\\n            // (through sendApplicationLog) and an endless loop is created.\\r\\n            if (console && (typeof console.error === 'function')) {\\r\\n                // FIXME send analytics event as well\\r\\n                console.error('sendApplicationLog failed', error);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends the given feedback through CallStats.\\r\\n     *\\r\\n     * @param {string} conferenceID the conference ID for which the feedback\\r\\n     * will be reported.\\r\\n     * @param overall an integer between 1 and 5 indicating the\\r\\n     * user feedback\\r\\n     * @param comment detailed feedback from the user.\\r\\n     */\\r\\n    static sendFeedback(conferenceID, overall, comment) {\\r\\n        return new Promise((resolve, reject) => {\\r\\n            if (CallStats.backend) {\\r\\n                CallStats.backend.sendUserFeedback(\\r\\n                    conferenceID,\\r\\n                    {\\r\\n                        userID: CallStats.userID,\\r\\n                        overall,\\r\\n                        comment\\r\\n                    },\\r\\n                    (status, message) => {\\r\\n                        if (status === 'success') {\\r\\n                            resolve(message);\\r\\n                        } else {\\r\\n                            reject(message);\\r\\n                        }\\r\\n                    });\\r\\n            } else {\\r\\n                const reason = 'Failed to submit feedback to CallStats - no backend';\\r\\n\\r\\n                logger.error(reason);\\r\\n                reject(reason);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats that getUserMedia failed.\\r\\n     *\\r\\n     * @param {Error} e error to send\\r\\n     * @param {CallStats} cs callstats instance related to the error (optional)\\r\\n     */\\r\\n    static sendGetUserMediaFailed(e, cs) {\\r\\n        CallStats._reportError(cs, wrtcFuncNames.getUserMedia, e, null);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats for mute events\\r\\n     * @param mute {boolean} true for muted and false for not muted\\r\\n     * @param type {String} \\\"audio\\\"/\\\"video\\\"\\r\\n     * @param {CallStats} cs callstats instance related to the event\\r\\n     */\\r\\n    static sendMuteEvent(mute, type, cs) {\\r\\n        let event;\\r\\n\\r\\n        if (type === 'video') {\\r\\n            event = mute ? fabricEvent.videoPause : fabricEvent.videoResume;\\r\\n        } else {\\r\\n            event = mute ? fabricEvent.audioMute : fabricEvent.audioUnmute;\\r\\n        }\\r\\n\\r\\n        CallStats._reportEvent(cs, event);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates new CallStats instance that handles all callstats API calls for\\r\\n     * given {@link TraceablePeerConnection}. Each instance is meant to handle\\r\\n     * one CallStats fabric added with 'addFabric' API method for the\\r\\n     * {@link TraceablePeerConnection} instance passed in the constructor.\\r\\n     * @param {TraceablePeerConnection} tpc\\r\\n     * @param {Object} options\\r\\n     * @param {string} options.confID the conference ID that wil be used to\\r\\n     * report the session.\\r\\n     * @param {string} [options.remoteUserID='jitsi'] the remote user ID to\\r\\n     * which given <tt>tpc</tt> is connected.\\r\\n     */\\r\\n    constructor(tpc, options) {\\r\\n        this.confID = options.confID;\\r\\n        this.tpc = tpc;\\r\\n        this.peerconnection = tpc.peerconnection;\\r\\n        this.remoteUserID = options.remoteUserID || DEFAULT_REMOTE_USER;\\r\\n        this.hasFabric = false;\\r\\n\\r\\n        CallStats.fabrics.add(this);\\r\\n\\r\\n        if (CallStats.backendInitialized) {\\r\\n            this._addNewFabric();\\r\\n\\r\\n            // if this is the first fabric let's try to empty the\\r\\n            // report queue. Reports all events that we recorded between\\r\\n            // backend initialization and receiving the first fabric\\r\\n            if (CallStats.fabrics.size === 1) {\\r\\n                CallStats._emptyReportQueue(this);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes CallStats fabric by calling \\\"addNewFabric\\\" for\\r\\n     * the peer connection associated with this instance.\\r\\n     * @return {boolean} true if the call was successful or false otherwise.\\r\\n     */\\r\\n    _addNewFabric() {\\r\\n        logger.info('addNewFabric', this.remoteUserID);\\r\\n        try {\\r\\n            const fabricAttributes = {\\r\\n                remoteEndpointType:\\r\\n                    this.tpc.isP2P\\r\\n                        ? CallStats.backend.endpointType.peer\\r\\n                        : CallStats.backend.endpointType.server\\r\\n            };\\r\\n            const ret\\r\\n                = CallStats.backend.addNewFabric(\\r\\n                    this.peerconnection,\\r\\n                    this.remoteUserID,\\r\\n                    CallStats.backend.fabricUsage.multiplex,\\r\\n                    this.confID,\\r\\n                    fabricAttributes,\\r\\n                    CallStats._addNewFabricCallback);\\r\\n\\r\\n            this.hasFabric = true;\\r\\n\\r\\n            const success = ret.status === 'success';\\r\\n\\r\\n            if (!success) {\\r\\n                logger.error('callstats fabric not initilized', ret.message);\\r\\n            }\\r\\n\\r\\n            return success;\\r\\n\\r\\n        } catch (error) {\\r\\n            GlobalOnErrorHandler.callErrorHandler(error);\\r\\n\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    /**\\r\\n     * Lets CallStats module know where is given SSRC rendered by providing\\r\\n     * renderer tag ID.\\r\\n     * If the lib is not initialized yet queue the call for later, when it's\\r\\n     * ready.\\r\\n     * @param {number} ssrc the SSRC of the stream\\r\\n     * @param {boolean} isLocal indicates whether this the stream is local\\r\\n     * @param {string|null} streamEndpointId if the stream is not local the it\\r\\n     * needs to contain the stream owner's ID\\r\\n     * @param {string} usageLabel meaningful usage label of this stream like\\r\\n     *        'microphone', 'camera' or 'screen'.\\r\\n     * @param {string} containerId  the id of media 'audio' or 'video' tag which\\r\\n     *        renders the stream.\\r\\n     */\\r\\n    associateStreamWithVideoTag(\\r\\n            ssrc,\\r\\n            isLocal,\\r\\n            streamEndpointId,\\r\\n            usageLabel,\\r\\n            containerId) {\\r\\n        if (!CallStats.backend) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const callStatsId = isLocal ? CallStats.userID : streamEndpointId;\\r\\n\\r\\n        if (CallStats.backendInitialized) {\\r\\n            CallStats.backend.associateMstWithUserID(\\r\\n                this.peerconnection,\\r\\n                callStatsId,\\r\\n                this.confID,\\r\\n                ssrc,\\r\\n                usageLabel,\\r\\n                containerId);\\r\\n        } else {\\r\\n            CallStats.reportsQueue.push({\\r\\n                type: reportType.MST_WITH_USERID,\\r\\n                pc: this.peerconnection,\\r\\n                data: {\\r\\n                    callStatsId,\\r\\n                    containerId,\\r\\n                    ssrc,\\r\\n                    usageLabel\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats that we are the new dominant speaker in the\\r\\n     * conference.\\r\\n     */\\r\\n    sendDominantSpeakerEvent() {\\r\\n        CallStats._reportEvent(this, fabricEvent.dominantSpeaker);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats that the fabric for the underlying peerconnection was\\r\\n     * closed and no evens should be reported, after this call.\\r\\n     */\\r\\n    sendTerminateEvent() {\\r\\n        if (CallStats.backendInitialized) {\\r\\n            CallStats.backend.sendFabricEvent(\\r\\n                this.peerconnection,\\r\\n                CallStats.backend.fabricEvent.fabricTerminated,\\r\\n                this.confID);\\r\\n        }\\r\\n        CallStats.fabrics.delete(this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats for ice connection failed\\r\\n     */\\r\\n    sendIceConnectionFailedEvent() {\\r\\n        CallStats._reportError(\\r\\n            this,\\r\\n            wrtcFuncNames.iceConnectionFailure,\\r\\n            null,\\r\\n            this.peerconnection);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats that peer connection failed to create offer.\\r\\n     *\\r\\n     * @param {Error} e error to send\\r\\n     */\\r\\n    sendCreateOfferFailed(e) {\\r\\n        CallStats._reportError(\\r\\n            this, wrtcFuncNames.createOffer, e, this.peerconnection);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats that peer connection failed to create answer.\\r\\n     *\\r\\n     * @param {Error} e error to send\\r\\n     */\\r\\n    sendCreateAnswerFailed(e) {\\r\\n        CallStats._reportError(\\r\\n            this, wrtcFuncNames.createAnswer, e, this.peerconnection);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends either resume or hold event for the fabric associated with\\r\\n     * the underlying peerconnection.\\r\\n     * @param {boolean} isResume true to resume or false to hold\\r\\n     */\\r\\n    sendResumeOrHoldEvent(isResume) {\\r\\n        CallStats._reportEvent(\\r\\n            this,\\r\\n            isResume ? fabricEvent.fabricResume : fabricEvent.fabricHold);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats for screen sharing events\\r\\n     * @param {boolean} start true for starting screen sharing and\\r\\n     * false for not stopping\\r\\n     * @param {string|null} ssrc - optional ssrc value, used only when\\r\\n     * starting screen sharing.\\r\\n     */\\r\\n    sendScreenSharingEvent(start, ssrc) {\\r\\n        let eventData;\\r\\n\\r\\n        if (ssrc) {\\r\\n            eventData = { ssrc };\\r\\n        }\\r\\n\\r\\n        CallStats._reportEvent(\\r\\n            this,\\r\\n            start ? fabricEvent.screenShareStart : fabricEvent.screenShareStop,\\r\\n            eventData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats that peer connection failed to set local description.\\r\\n     *\\r\\n     * @param {Error} e error to send\\r\\n     */\\r\\n    sendSetLocalDescFailed(e) {\\r\\n        CallStats._reportError(\\r\\n            this, wrtcFuncNames.setLocalDescription, e, this.peerconnection);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats that peer connection failed to set remote description.\\r\\n     *\\r\\n     * @param {Error} e error to send\\r\\n     */\\r\\n    sendSetRemoteDescFailed(e) {\\r\\n        CallStats._reportError(\\r\\n            this, wrtcFuncNames.setRemoteDescription, e, this.peerconnection);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies CallStats that peer connection failed to add ICE candidate.\\r\\n     *\\r\\n     * @param {Error} e error to send\\r\\n     */\\r\\n    sendAddIceCandidateFailed(e) {\\r\\n        CallStats._reportError(\\r\\n            this, wrtcFuncNames.addIceCandidate, e, this.peerconnection);\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * The CallStats API backend instance\\r\\n * @type {callstats}\\r\\n */\\r\\nCallStats.backend = null;\\r\\n\\r\\n// some errors/events may happen before CallStats init\\r\\n// in this case we accumulate them in this array\\r\\n// and send them to callstats on init\\r\\nCallStats.reportsQueue = [];\\r\\n\\r\\n/**\\r\\n * Whether the library was successfully initialized(the backend) using its\\r\\n * initialize method.\\r\\n * @type {boolean}\\r\\n */\\r\\nCallStats.backendInitialized = false;\\r\\n\\r\\n/**\\r\\n * Part of the CallStats credentials - application ID\\r\\n * @type {string}\\r\\n */\\r\\nCallStats.callStatsID = null;\\r\\n\\r\\n/**\\r\\n * Part of the CallStats credentials - application secret\\r\\n * @type {string}\\r\\n */\\r\\nCallStats.callStatsSecret = null;\\r\\n\\r\\n/**\\r\\n * Local CallStats user ID structure. Can be set only once when\\r\\n * {@link backend} is initialized, so it's static for the time being.\\r\\n * See CallStats API for more info:\\r\\n * https://www.callstats.io/api/#userid\\r\\n * @type {object}\\r\\n */\\r\\nCallStats.userID = null;\\r\\n\",\"/**\\r\\n * @const\\r\\n */\\r\\nconst ALPHANUM\\r\\n    = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\\r\\n\\r\\n/**\\r\\n * Hexadecimal digits.\\r\\n * @const\\r\\n */\\r\\nconst HEX_DIGITS = '0123456789abcdef';\\r\\n\\r\\n/**\\r\\n * Generates random int within the range [min, max]\\r\\n * @param min the minimum value for the generated number\\r\\n * @param max the maximum value for the generated number\\r\\n * @returns random int number\\r\\n */\\r\\nfunction randomInt(min, max) {\\r\\n    return Math.floor(Math.random() * (max - min + 1)) + min;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get random element from array or string.\\r\\n * @param {Array|string} arr source\\r\\n * @returns array element or string character\\r\\n */\\r\\nfunction randomElement(arr) {\\r\\n    return arr[randomInt(0, arr.length - 1)];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generate random alphanumeric string.\\r\\n * @param {number} length expected string length\\r\\n * @returns {string} random string of specified length\\r\\n */\\r\\nfunction randomAlphanumStr(length) {\\r\\n    let result = '';\\r\\n\\r\\n    for (let i = 0; i < length; i += 1) {\\r\\n        result += randomElement(ALPHANUM);\\r\\n    }\\r\\n\\r\\n    return result;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Exported interface.\\r\\n */\\r\\nconst RandomUtil = {\\r\\n    /**\\r\\n     * Returns a random hex digit.\\r\\n     * @returns {*}\\r\\n     */\\r\\n    randomHexDigit() {\\r\\n        return randomElement(HEX_DIGITS);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Returns a random string of hex digits with length 'len'.\\r\\n     * @param len the length.\\r\\n     */\\r\\n    randomHexString(len) {\\r\\n        let ret = '';\\r\\n\\r\\n        while (len--) { // eslint-disable-line no-param-reassign\\r\\n            ret += this.randomHexDigit();\\r\\n        }\\r\\n\\r\\n        return ret;\\r\\n    },\\r\\n    randomElement,\\r\\n    randomAlphanumStr,\\r\\n    randomInt\\r\\n};\\r\\n\\r\\nmodule.exports = RandomUtil;\\r\\n\",\"import Listenable from '../util/Listenable';\\r\\n\\r\\n/**\\r\\n * Creates ConnectionPlugin class that extends the passed class.\\r\\n * @param {Class} base the definition of the class that will be extended by\\r\\n * ConnectionPlugin\\r\\n */\\r\\nfunction getConnectionPluginDefinition(base = class {}) {\\r\\n    /**\\r\\n     * Base class for strophe connection plugins.\\r\\n     */\\r\\n    return class extends base {\\r\\n        /**\\r\\n         *\\r\\n         */\\r\\n        constructor(...args) {\\r\\n            super(...args);\\r\\n            this.connection = null;\\r\\n        }\\r\\n\\r\\n        /**\\r\\n         *\\r\\n         * @param connection\\r\\n         */\\r\\n        init(connection) {\\r\\n            this.connection = connection;\\r\\n        }\\r\\n    };\\r\\n}\\r\\n\\r\\n/**\\r\\n * ConnectionPlugin class.\\r\\n */\\r\\nexport default getConnectionPluginDefinition();\\r\\n\\r\\n/**\\r\\n * ConnectionPlugin class that extends Listenable.\\r\\n */\\r\\nexport const ConnectionPluginListenable\\r\\n    = getConnectionPluginDefinition(Listenable);\\r\\n\",\"/* global $ */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport { $msg, Strophe } from 'strophe.js';\\r\\nimport 'strophejs-plugin-disco';\\r\\n\\r\\nimport RandomUtil from '../util/RandomUtil';\\r\\nimport * as JitsiConnectionErrors from '../../JitsiConnectionErrors';\\r\\nimport * as JitsiConnectionEvents from '../../JitsiConnectionEvents';\\r\\nimport browser from '../browser';\\r\\nimport initEmuc from './strophe.emuc';\\r\\nimport initJingle from './strophe.jingle';\\r\\nimport initStropheUtil from './strophe.util';\\r\\nimport initPing from './strophe.ping';\\r\\nimport initRayo from './strophe.rayo';\\r\\nimport initStropheLogger from './strophe.logger';\\r\\nimport LastSuccessTracker from './StropheBoshLastSuccess';\\r\\nimport Listenable from '../util/Listenable';\\r\\nimport Caps from './Caps';\\r\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\r\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param token\\r\\n * @param bosh\\r\\n */\\r\\nfunction createConnection(token, bosh = '/http-bind') {\\r\\n    // Append token as URL param\\r\\n    if (token) {\\r\\n        // eslint-disable-next-line no-param-reassign\\r\\n        bosh += `${bosh.indexOf('?') === -1 ? '?' : '&'}token=${token}`;\\r\\n    }\\r\\n\\r\\n    const conn = new Strophe.Connection(bosh);\\r\\n\\r\\n    // The default maxRetries is 5, which is too long.\\r\\n    conn.maxRetries = 3;\\r\\n\\r\\n    return conn;\\r\\n}\\r\\n\\r\\n// FIXME: remove once we have a default config template. -saghul\\r\\n/**\\r\\n * A list of ice servers to use by default for P2P.\\r\\n */\\r\\nexport const DEFAULT_STUN_SERVERS = [\\r\\n    { urls: 'stun:stun.l.google.com:19302' },\\r\\n    { urls: 'stun:stun1.l.google.com:19302' },\\r\\n    { urls: 'stun:stun2.l.google.com:19302' }\\r\\n];\\r\\n\\r\\n/**\\r\\n * The name of the field used to recognize a chat message as carrying a JSON\\r\\n * payload from another endpoint.\\r\\n * If the json-message of a chat message contains a valid JSON object, and\\r\\n * the JSON has this key, then it is a valid json-message to be sent.\\r\\n */\\r\\nexport const JITSI_MEET_MUC_TYPE = 'type';\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nexport default class XMPP extends Listenable {\\r\\n    /**\\r\\n     * FIXME describe all options\\r\\n     * @param {Object} options\\r\\n     * @param {Array<Object>} options.p2pStunServers see\\r\\n     * {@link JingleConnectionPlugin} for more details.\\r\\n     * @param token\\r\\n     */\\r\\n    constructor(options, token) {\\r\\n        super();\\r\\n        this.connection = null;\\r\\n        this.disconnectInProgress = false;\\r\\n        this.connectionTimes = {};\\r\\n        this.options = options;\\r\\n        this.token = token;\\r\\n        this.authenticatedUser = false;\\r\\n        this._initStrophePlugins(this);\\r\\n\\r\\n        this.connection = createConnection(token, options.bosh);\\r\\n\\r\\n        this._lastSuccessTracker = new LastSuccessTracker();\\r\\n        this._lastSuccessTracker.startTracking(this.connection);\\r\\n\\r\\n        this.caps = new Caps(this.connection, this.options.clientNode);\\r\\n\\r\\n        // Initialize features advertised in disco-info\\r\\n        this.initFeaturesList();\\r\\n\\r\\n        // Setup a disconnect on unload as a way to facilitate API consumers. It\\r\\n        // sounds like they would want that. A problem for them though may be if\\r\\n        // they wanted to utilize the connected connection in an unload handler\\r\\n        // of their own. However, it should be fairly easy for them to do that\\r\\n        // by registering their unload handler before us.\\r\\n        $(window).on('beforeunload unload', ev => {\\r\\n            this.disconnect(ev).catch(() => {\\r\\n                // ignore errors in order to not brake the unload.\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes the list of feature advertised through the disco-info\\r\\n     * mechanism.\\r\\n     */\\r\\n    initFeaturesList() {\\r\\n        // http://xmpp.org/extensions/xep-0167.html#support\\r\\n        // http://xmpp.org/extensions/xep-0176.html#support\\r\\n        this.caps.addFeature('urn:xmpp:jingle:1');\\r\\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:1');\\r\\n        this.caps.addFeature('urn:xmpp:jingle:transports:ice-udp:1');\\r\\n        this.caps.addFeature('urn:xmpp:jingle:apps:dtls:0');\\r\\n        this.caps.addFeature('urn:xmpp:jingle:transports:dtls-sctp:1');\\r\\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:audio');\\r\\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:video');\\r\\n\\r\\n        if (!this.options.disableRtx && browser.supportsRtx()) {\\r\\n            this.caps.addFeature('urn:ietf:rfc:4588');\\r\\n        }\\r\\n\\r\\n        // this is dealt with by SDP O/A so we don't need to announce this\\r\\n        // XEP-0293\\r\\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtcp-fb:0');\\r\\n        // XEP-0294\\r\\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtp-hdrext:0');\\r\\n\\r\\n        this.caps.addFeature('urn:ietf:rfc:5761'); // rtcp-mux\\r\\n        this.caps.addFeature('urn:ietf:rfc:5888'); // a=group, e.g. bundle\\r\\n\\r\\n        // this.caps.addFeature('urn:ietf:rfc:5576'); // a=ssrc\\r\\n\\r\\n        // Enable Lipsync ?\\r\\n        if (browser.isChrome() && this.options.enableLipSync !== false) {\\r\\n            logger.info('Lip-sync enabled !');\\r\\n            this.caps.addFeature('http://jitsi.org/meet/lipsync');\\r\\n        }\\r\\n\\r\\n        if (this.connection.rayo) {\\r\\n            this.caps.addFeature('urn:xmpp:rayo:client:1');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns {@code true} if the PING functionality is supported by the server\\r\\n     * or {@code false} otherwise.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isPingSupported() {\\r\\n        return this._pingSupported !== false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    getConnection() {\\r\\n        return this.connection;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Receive connection status changes and handles them.\\r\\n     *\\r\\n     * @param {Object} credentials\\r\\n     * @param {string} credentials.jid - The user's XMPP ID passed to the\\r\\n     * connect method. For example, 'user@xmpp.com'.\\r\\n     * @param {string} credentials.password - The password passed to the connect\\r\\n     * method.\\r\\n     * @param {string} status - One of Strophe's connection status strings.\\r\\n     * @param {string} [msg] - The connection error message provided by Strophe.\\r\\n     */\\r\\n    connectionHandler(credentials = {}, status, msg) {\\r\\n        const now = window.performance.now();\\r\\n        const statusStr = Strophe.getStatusString(status).toLowerCase();\\r\\n\\r\\n        this.connectionTimes[statusStr] = now;\\r\\n        logger.log(\\r\\n            `(TIME) Strophe ${statusStr}${msg ? `[${msg}]` : ''}:\\\\t`,\\r\\n            now);\\r\\n\\r\\n        this.eventEmitter.emit(XMPPEvents.CONNECTION_STATUS_CHANGED, credentials, status, msg);\\r\\n        if (status === Strophe.Status.CONNECTED\\r\\n            || status === Strophe.Status.ATTACHED) {\\r\\n            if (this.options.useStunTurn\\r\\n                || (this.options.p2p && this.options.p2p.useStunTurn)) {\\r\\n                this.connection.jingle.getStunAndTurnCredentials();\\r\\n            }\\r\\n\\r\\n            logger.info(`My Jabber ID: ${this.connection.jid}`);\\r\\n\\r\\n            // Schedule ping ?\\r\\n            const pingJid = this.connection.domain;\\r\\n\\r\\n            this.caps.getFeaturesAndIdentities(pingJid)\\r\\n                .then(({ features, identities }) => {\\r\\n                    if (features.has(Strophe.NS.PING)) {\\r\\n                        this._pingSupported = true;\\r\\n                        this.connection.ping.startInterval(pingJid);\\r\\n                    } else {\\r\\n                        logger.warn(`Ping NOT supported by ${pingJid}`);\\r\\n                    }\\r\\n\\r\\n                    // check for speakerstats\\r\\n                    identities.forEach(identity => {\\r\\n                        if (identity.type === 'speakerstats') {\\r\\n                            this.speakerStatsComponentAddress = identity.name;\\r\\n\\r\\n                            this.connection.addHandler(\\r\\n                                this._onPrivateMessage.bind(this), null,\\r\\n                                'message', null, null);\\r\\n                        }\\r\\n                    });\\r\\n                })\\r\\n                .catch(error => {\\r\\n                    const errmsg = 'Feature discovery error';\\r\\n\\r\\n                    GlobalOnErrorHandler.callErrorHandler(\\r\\n                        new Error(`${errmsg}: ${error}`));\\r\\n                    logger.error(errmsg, error);\\r\\n                });\\r\\n\\r\\n            if (credentials.password) {\\r\\n                this.authenticatedUser = true;\\r\\n            }\\r\\n            if (this.connection && this.connection.connected\\r\\n                && Strophe.getResourceFromJid(this.connection.jid)) {\\r\\n                // .connected is true while connecting?\\r\\n                // this.connection.send($pres());\\r\\n                this.eventEmitter.emit(\\r\\n                    JitsiConnectionEvents.CONNECTION_ESTABLISHED,\\r\\n                    Strophe.getResourceFromJid(this.connection.jid));\\r\\n            }\\r\\n        } else if (status === Strophe.Status.CONNFAIL) {\\r\\n            if (msg === 'x-strophe-bad-non-anon-jid') {\\r\\n                this.anonymousConnectionFailed = true;\\r\\n            } else {\\r\\n                this.connectionFailed = true;\\r\\n            }\\r\\n            this.lastErrorMsg = msg;\\r\\n            if (msg === 'giving-up') {\\r\\n                this.eventEmitter.emit(\\r\\n                    JitsiConnectionEvents.CONNECTION_FAILED,\\r\\n                    JitsiConnectionErrors.OTHER_ERROR, msg);\\r\\n            }\\r\\n        } else if (status === Strophe.Status.DISCONNECTED) {\\r\\n            // Stop ping interval\\r\\n            this.connection.ping.stopInterval();\\r\\n            const wasIntentionalDisconnect = this.disconnectInProgress;\\r\\n            const errMsg = msg || this.lastErrorMsg;\\r\\n\\r\\n            this.disconnectInProgress = false;\\r\\n            if (this.anonymousConnectionFailed) {\\r\\n                // prompt user for username and password\\r\\n                this.eventEmitter.emit(\\r\\n                    JitsiConnectionEvents.CONNECTION_FAILED,\\r\\n                    JitsiConnectionErrors.PASSWORD_REQUIRED);\\r\\n            } else if (this.connectionFailed) {\\r\\n                this.eventEmitter.emit(\\r\\n                    JitsiConnectionEvents.CONNECTION_FAILED,\\r\\n                    JitsiConnectionErrors.OTHER_ERROR,\\r\\n                    errMsg,\\r\\n                    undefined, /* credentials */\\r\\n                    this._getConnectionFailedReasonDetails());\\r\\n            } else if (wasIntentionalDisconnect) {\\r\\n                this.eventEmitter.emit(\\r\\n                    JitsiConnectionEvents.CONNECTION_DISCONNECTED, errMsg);\\r\\n            } else {\\r\\n                // XXX if Strophe drops the connection while not being asked to,\\r\\n                // it means that most likely some serious error has occurred.\\r\\n                // One currently known case is when a BOSH request fails for\\r\\n                // more than 4 times. The connection is dropped without\\r\\n                // supplying a reason(error message/event) through the API.\\r\\n                logger.error('XMPP connection dropped!');\\r\\n\\r\\n                // XXX if the last request error is within 5xx range it means it\\r\\n                // was a server failure\\r\\n                const lastErrorStatus = Strophe.getLastErrorStatus();\\r\\n\\r\\n                if (lastErrorStatus >= 500 && lastErrorStatus < 600) {\\r\\n                    this.eventEmitter.emit(\\r\\n                        JitsiConnectionEvents.CONNECTION_FAILED,\\r\\n                        JitsiConnectionErrors.SERVER_ERROR,\\r\\n                        errMsg || 'server-error',\\r\\n                        /* credentials */ undefined,\\r\\n                        this._getConnectionFailedReasonDetails());\\r\\n                } else {\\r\\n                    this.eventEmitter.emit(\\r\\n                        JitsiConnectionEvents.CONNECTION_FAILED,\\r\\n                        JitsiConnectionErrors.CONNECTION_DROPPED_ERROR,\\r\\n                        errMsg || 'connection-dropped-error',\\r\\n                        /* credentials */ undefined,\\r\\n                        this._getConnectionFailedReasonDetails());\\r\\n                }\\r\\n            }\\r\\n        } else if (status === Strophe.Status.AUTHFAIL) {\\r\\n            // wrong password or username, prompt user\\r\\n            this.eventEmitter.emit(\\r\\n                JitsiConnectionEvents.CONNECTION_FAILED,\\r\\n                JitsiConnectionErrors.PASSWORD_REQUIRED,\\r\\n                msg,\\r\\n                credentials);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param jid\\r\\n     * @param password\\r\\n     */\\r\\n    _connect(jid, password) {\\r\\n        // connection.connect() starts the connection process.\\r\\n        //\\r\\n        // As the connection process proceeds, the user supplied callback will\\r\\n        // be triggered multiple times with status updates. The callback should\\r\\n        // take two arguments - the status code and the error condition.\\r\\n        //\\r\\n        // The status code will be one of the values in the Strophe.Status\\r\\n        // constants. The error condition will be one of the conditions defined\\r\\n        // in RFC 3920 or the condition ‘strophe-parsererror’.\\r\\n        //\\r\\n        // The Parameters wait, hold and route are optional and only relevant\\r\\n        // for BOSH connections. Please see XEP 124 for a more detailed\\r\\n        // explanation of the optional parameters.\\r\\n        //\\r\\n        // Connection status constants for use by the connection handler\\r\\n        // callback.\\r\\n        //\\r\\n        //  Status.ERROR - An error has occurred (websockets specific)\\r\\n        //  Status.CONNECTING - The connection is currently being made\\r\\n        //  Status.CONNFAIL - The connection attempt failed\\r\\n        //  Status.AUTHENTICATING - The connection is authenticating\\r\\n        //  Status.AUTHFAIL - The authentication attempt failed\\r\\n        //  Status.CONNECTED - The connection has succeeded\\r\\n        //  Status.DISCONNECTED - The connection has been terminated\\r\\n        //  Status.DISCONNECTING - The connection is currently being terminated\\r\\n        //  Status.ATTACHED - The connection has been attached\\r\\n\\r\\n        this.anonymousConnectionFailed = false;\\r\\n        this.connectionFailed = false;\\r\\n        this.lastErrorMsg = undefined;\\r\\n        this.connection.connect(\\r\\n            jid,\\r\\n            password,\\r\\n            this.connectionHandler.bind(this, {\\r\\n                jid,\\r\\n                password\\r\\n            }));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Attach to existing connection. Can be used for optimizations. For\\r\\n     * example: if the connection is created on the server we can attach to it\\r\\n     * and start using it.\\r\\n     *\\r\\n     * @param options {object} connecting options - rid, sid, jid and password.\\r\\n     */\\r\\n    attach(options) {\\r\\n        const now = this.connectionTimes.attaching = window.performance.now();\\r\\n\\r\\n        logger.log(`(TIME) Strophe Attaching\\\\t:${now}`);\\r\\n        this.connection.attach(options.jid, options.sid,\\r\\n            parseInt(options.rid, 10) + 1,\\r\\n            this.connectionHandler.bind(this, {\\r\\n                jid: options.jid,\\r\\n                password: options.password\\r\\n            }));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param jid\\r\\n     * @param password\\r\\n     */\\r\\n    connect(jid, password) {\\r\\n        if (!jid) {\\r\\n            const { anonymousdomain, domain } = this.options.hosts;\\r\\n            let configDomain = anonymousdomain || domain;\\r\\n\\r\\n            // Force authenticated domain if room is appended with '?login=true'\\r\\n            // or if we're joining with the token\\r\\n\\r\\n            // FIXME Do not rely on window.location because (1) React Native\\r\\n            // does not have a window.location by default and (2) here we cannot\\r\\n            // know for sure that query/search has not be stripped from\\r\\n            // window.location by the time the following executes.\\r\\n            const { location } = window;\\r\\n\\r\\n            if (anonymousdomain) {\\r\\n                const search = location && location.search;\\r\\n\\r\\n                if ((search && search.indexOf('login=true') !== -1)\\r\\n                        || this.token) {\\r\\n                    configDomain = domain;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            // eslint-disable-next-line no-param-reassign\\r\\n            jid = configDomain || (location && location.hostname);\\r\\n        }\\r\\n\\r\\n        return this._connect(jid, password);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Joins or creates a muc with the provided jid, created from the passed\\r\\n     * in room name and muc host and onCreateResource result.\\r\\n     *\\r\\n     * @param {string} roomName - The name of the muc to join.\\r\\n     * @param {Object} options - Configuration for how to join the muc.\\r\\n     * @param {Function} [onCreateResource] - Callback to invoke when a resource\\r\\n     * is to be added to the jid.\\r\\n     * @returns {Promise} Resolves with an instance of a strophe muc.\\r\\n     */\\r\\n    createRoom(roomName, options, onCreateResource) {\\r\\n        let roomjid = `${roomName}@${this.options.hosts.muc}/`;\\r\\n\\r\\n        const mucNickname = onCreateResource\\r\\n            ? onCreateResource(this.connection.jid, this.authenticatedUser)\\r\\n            : RandomUtil.randomHexString(8).toLowerCase();\\r\\n\\r\\n        logger.info(`JID ${this.connection.jid} using MUC nickname ${mucNickname}`);\\r\\n        roomjid += mucNickname;\\r\\n\\r\\n        return this.connection.emuc.createRoom(roomjid, null, options);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the jid of the participant associated with the Strophe connection.\\r\\n     *\\r\\n     * @returns {string} The jid of the participant.\\r\\n     */\\r\\n    getJid() {\\r\\n        return this.connection.jid;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the logs from strophe.jingle.\\r\\n     * @returns {Object}\\r\\n     */\\r\\n    getJingleLog() {\\r\\n        const jingle = this.connection.jingle;\\r\\n\\r\\n\\r\\n        return jingle ? jingle.getLog() : {};\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the logs from strophe.\\r\\n     */\\r\\n    getXmppLog() {\\r\\n        return (this.connection.logger || {}).log || null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    dial(...args) {\\r\\n        this.connection.rayo.dial(...args);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Pings the server. Remember to check {@link isPingSupported} before using\\r\\n     * this method.\\r\\n     * @param timeout how many ms before a timeout should occur.\\r\\n     * @returns {Promise} resolved on ping success and reject on an error or\\r\\n     * a timeout.\\r\\n     */\\r\\n    ping(timeout) {\\r\\n        return new Promise((resolve, reject) => {\\r\\n            if (this.isPingSupported()) {\\r\\n                this.connection.ping\\r\\n                    .ping(this.connection.domain, resolve, reject, timeout);\\r\\n            } else {\\r\\n                reject('PING operation is not supported by the server');\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    getSessions() {\\r\\n        return this.connection.jingle.sessions;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Disconnects this from the XMPP server (if this is connected).\\r\\n     *\\r\\n     * @param {Object} ev - Optionally, the event which triggered the necessity to\\r\\n     * disconnect from the XMPP server (e.g. beforeunload, unload).\\r\\n     * @returns {Promise} - Resolves when the disconnect process is finished or rejects with an error.\\r\\n     */\\r\\n    disconnect(ev) {\\r\\n        if (this.disconnectInProgress || !this.connection) {\\r\\n            this.eventEmitter.emit(JitsiConnectionEvents.WRONG_STATE);\\r\\n\\r\\n            return Promise.reject(new Error('Wrong connection state!'));\\r\\n        }\\r\\n\\r\\n        this.disconnectInProgress = true;\\r\\n\\r\\n        return new Promise(resolve => {\\r\\n            const disconnectListener = (credentials, status) => {\\r\\n                if (status === Strophe.Status.DISCONNECTED) {\\r\\n                    resolve();\\r\\n                    this.eventEmitter.removeListener(XMPPEvents.CONNECTION_STATUS_CHANGED, disconnectListener);\\r\\n                }\\r\\n            };\\r\\n\\r\\n            this.eventEmitter.on(XMPPEvents.CONNECTION_STATUS_CHANGED, disconnectListener);\\r\\n\\r\\n            // XXX Strophe is asynchronously sending by default. Unfortunately, that\\r\\n            // means that there may not be enough time to send an unavailable\\r\\n            // presence or disconnect at all. Switching Strophe to synchronous\\r\\n            // sending is not much of an option because it may lead to a noticeable\\r\\n            // delay in navigating away from the current location. As a compromise,\\r\\n            // we will try to increase the chances of sending an unavailable\\r\\n            // presence and/or disconecting within the short time span that we have\\r\\n            // upon unloading by invoking flush() on the connection. We flush() once\\r\\n            // before disconnect() in order to attemtp to have its unavailable\\r\\n            // presence at the top of the send queue. We flush() once more after\\r\\n            // disconnect() in order to attempt to have its unavailable presence\\r\\n            // sent as soon as possible.\\r\\n            this.connection.flush();\\r\\n\\r\\n            if (ev !== null && typeof ev !== 'undefined') {\\r\\n                const evType = ev.type;\\r\\n\\r\\n                if (evType === 'beforeunload' || evType === 'unload') {\\r\\n                    // XXX Whatever we said above, synchronous sending is the best\\r\\n                    // (known) way to properly disconnect from the XMPP server.\\r\\n                    // Consequently, it may be fine to have the source code and\\r\\n                    // comment it in or out depending on whether we want to run with\\r\\n                    // it for some time.\\r\\n                    this.connection.options.sync = true;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            this.connection.disconnect();\\r\\n\\r\\n            if (this.connection.options.sync !== true) {\\r\\n                this.connection.flush();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    _initStrophePlugins() {\\r\\n        const iceConfig = {\\r\\n            jvb: { iceServers: [ ] },\\r\\n            p2p: { iceServers: [ ] }\\r\\n        };\\r\\n\\r\\n        const p2pStunServers = (this.options.p2p\\r\\n            && this.options.p2p.stunServers) || DEFAULT_STUN_SERVERS;\\r\\n\\r\\n        if (Array.isArray(p2pStunServers)) {\\r\\n            logger.info('P2P STUN servers: ', p2pStunServers);\\r\\n            iceConfig.p2p.iceServers = p2pStunServers;\\r\\n        }\\r\\n\\r\\n        if (this.options.p2p && this.options.p2p.iceTransportPolicy) {\\r\\n            logger.info('P2P ICE transport policy: ',\\r\\n                this.options.p2p.iceTransportPolicy);\\r\\n\\r\\n            iceConfig.p2p.iceTransportPolicy\\r\\n                = this.options.p2p.iceTransportPolicy;\\r\\n        }\\r\\n\\r\\n        initEmuc(this);\\r\\n        initJingle(this, this.eventEmitter, iceConfig);\\r\\n        initStropheUtil();\\r\\n        initPing(this);\\r\\n        initRayo();\\r\\n        initStropheLogger();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns details about connection failure. Shard change or is it after\\r\\n     * suspend.\\r\\n     * @returns {object} contains details about a connection failure.\\r\\n     * @private\\r\\n     */\\r\\n    _getConnectionFailedReasonDetails() {\\r\\n        const details = {};\\r\\n\\r\\n        // check for moving between shard if information is available\\r\\n        if (this.options.deploymentInfo\\r\\n            && this.options.deploymentInfo.shard\\r\\n            && this.connection._proto\\r\\n            && this.connection._proto.lastResponseHeaders) {\\r\\n\\r\\n            // split headers by line\\r\\n            const headersArr = this.connection._proto.lastResponseHeaders\\r\\n                .trim().split(/[\\\\r\\\\n]+/);\\r\\n            const headers = {};\\r\\n\\r\\n            headersArr.forEach(line => {\\r\\n                const parts = line.split(': ');\\r\\n                const header = parts.shift();\\r\\n                const value = parts.join(': ');\\r\\n\\r\\n                headers[header] = value;\\r\\n            });\\r\\n\\r\\n            /* eslint-disable camelcase */\\r\\n            details.shard_changed\\r\\n                = this.options.deploymentInfo.shard\\r\\n                    !== headers['x-jitsi-shard'];\\r\\n            /* eslint-enable camelcase */\\r\\n        }\\r\\n\\r\\n        /* eslint-disable camelcase */\\r\\n        // check for possible suspend\\r\\n        details.suspend_time = this.connection.ping.getPingSuspendTime();\\r\\n        details.time_since_last_success = this._lastSuccessTracker.getTimeSinceLastSuccess();\\r\\n        /* eslint-enable camelcase */\\r\\n\\r\\n        return details;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies speaker stats component if available that we are the new\\r\\n     * dominant speaker in the conference.\\r\\n     * @param {String} roomJid - The room jid where the speaker event occurred.\\r\\n     */\\r\\n    sendDominantSpeakerEvent(roomJid) {\\r\\n        // no speaker stats component advertised\\r\\n        if (!this.speakerStatsComponentAddress || !roomJid) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const msg = $msg({ to: this.speakerStatsComponentAddress });\\r\\n\\r\\n        msg.c('speakerstats', {\\r\\n            xmlns: 'http://jitsi.org/jitmeet',\\r\\n            room: roomJid })\\r\\n            .up();\\r\\n\\r\\n        this.connection.send(msg);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Check if the given argument is a valid JSON ENDPOINT_MESSAGE string by\\r\\n     * parsing it and checking if it has a field called 'type'.\\r\\n     *\\r\\n     * @param {string} jsonString check if this string is a valid json string\\r\\n     * and contains the special structure.\\r\\n     * @returns {boolean, object} if given object is a valid JSON string, return\\r\\n     * the json object. Otherwise, returns false.\\r\\n     */\\r\\n    tryParseJSONAndVerify(jsonString) {\\r\\n        try {\\r\\n            const json = JSON.parse(jsonString);\\r\\n\\r\\n            // Handle non-exception-throwing cases:\\r\\n            // Neither JSON.parse(false) or JSON.parse(1234) throw errors,\\r\\n            // hence the type-checking,\\r\\n            // but... JSON.parse(null) returns null, and\\r\\n            // typeof null === \\\"object\\\",\\r\\n            // so we must check for that, too.\\r\\n            // Thankfully, null is falsey, so this suffices:\\r\\n            if (json && typeof json === 'object') {\\r\\n                const type = json[JITSI_MEET_MUC_TYPE];\\r\\n\\r\\n                if (typeof type !== 'undefined') {\\r\\n                    return json;\\r\\n                }\\r\\n\\r\\n                logger.debug('parsing valid json but does not have correct '\\r\\n                    + 'structure', 'topic: ', type);\\r\\n            }\\r\\n        } catch (e) {\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A private message is received, message that is not addressed to the muc.\\r\\n     * We expect private message coming from speaker stats component if it is\\r\\n     * enabled and running.\\r\\n     *\\r\\n     * @param {string} msg - The message.\\r\\n     */\\r\\n    _onPrivateMessage(msg) {\\r\\n        const from = msg.getAttribute('from');\\r\\n\\r\\n        if (!this.speakerStatsComponentAddress\\r\\n            || from !== this.speakerStatsComponentAddress) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const jsonMessage = $(msg).find('>json-message')\\r\\n            .text();\\r\\n        const parsedJson = this.tryParseJSONAndVerify(jsonMessage);\\r\\n\\r\\n        if (parsedJson\\r\\n            && parsedJson[JITSI_MEET_MUC_TYPE] === 'speakerstats'\\r\\n            && parsedJson.users) {\\r\\n            this.eventEmitter.emit(\\r\\n                XMPPEvents.SPEAKER_STATS_RECEIVED, parsedJson.users);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\",\"/**\\r\\n * The errors for the connection.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Indicates that the connection was dropped with an error which was most likely\\r\\n * caused by some networking issues. The dropped term in this context means that\\r\\n * the connection was closed unexpectedly (not on user's request).\\r\\n *\\r\\n * One example is 'item-not-found' error thrown by Prosody when the BOSH session\\r\\n * times out after 60 seconds of inactivity. On the other hand 'item-not-found'\\r\\n * could also happen when BOSH request is sent to the server with the session-id\\r\\n * that is not know to the server. But this should not happen in lib-jitsi-meet\\r\\n * case as long as the service is configured correctly (there is no bug).\\r\\n */\\r\\nexport const CONNECTION_DROPPED_ERROR = 'connection.droppedError';\\r\\n\\r\\n/**\\r\\n * Not specified errors.\\r\\n */\\r\\nexport const OTHER_ERROR = 'connection.otherError';\\r\\n\\r\\n/**\\r\\n * Indicates that a password is required in order to join the conference.\\r\\n */\\r\\nexport const PASSWORD_REQUIRED = 'connection.passwordRequired';\\r\\n\\r\\n/**\\r\\n * Indicates that the connection was dropped, because of too many 5xx HTTP\\r\\n * errors on BOSH requests.\\r\\n */\\r\\nexport const SERVER_ERROR = 'connection.serverError';\\r\\n\",\"/**\\r\\n * Event triggered when participant's muted status changes.\\r\\n * @param {string} endpointId the track owner's identifier (MUC nickname)\\r\\n * @param {MediaType} mediaType \\\"audio\\\" or \\\"video\\\"\\r\\n * @param {boolean} isMuted the new muted state\\r\\n */\\r\\nexport const PEER_MUTED_CHANGED = 'signaling.peerMuted';\\r\\n\\r\\n/**\\r\\n * Event triggered when participant's video type changes.\\r\\n * @param {string} endpointId the video owner's ID (MUC nickname)\\r\\n * @param {VideoType} videoType the new value\\r\\n */\\r\\nexport const PEER_VIDEO_TYPE_CHANGED = 'signaling.peerVideoType';\\r\\n\",\"/*\\r\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n /* eslint-env node */\\r\\n'use strict';\\r\\n\\r\\nvar logDisabled_ = true;\\r\\nvar deprecationWarnings_ = true;\\r\\n\\r\\n// Utility methods.\\r\\nvar utils = {\\r\\n  disableLog: function(bool) {\\r\\n    if (typeof bool !== 'boolean') {\\r\\n      return new Error('Argument type: ' + typeof bool +\\r\\n          '. Please use a boolean.');\\r\\n    }\\r\\n    logDisabled_ = bool;\\r\\n    return (bool) ? 'adapter.js logging disabled' :\\r\\n        'adapter.js logging enabled';\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Disable or enable deprecation warnings\\r\\n   * @param {!boolean} bool set to true to disable warnings.\\r\\n   */\\r\\n  disableWarnings: function(bool) {\\r\\n    if (typeof bool !== 'boolean') {\\r\\n      return new Error('Argument type: ' + typeof bool +\\r\\n          '. Please use a boolean.');\\r\\n    }\\r\\n    deprecationWarnings_ = !bool;\\r\\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\\r\\n  },\\r\\n\\r\\n  log: function() {\\r\\n    if (typeof window === 'object') {\\r\\n      if (logDisabled_) {\\r\\n        return;\\r\\n      }\\r\\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\\r\\n        console.log.apply(console, arguments);\\r\\n      }\\r\\n    }\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\\r\\n   */\\r\\n  deprecated: function(oldMethod, newMethod) {\\r\\n    if (!deprecationWarnings_) {\\r\\n      return;\\r\\n    }\\r\\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\\r\\n        ' instead.');\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Extract browser version out of the provided user agent string.\\r\\n   *\\r\\n   * @param {!string} uastring userAgent string.\\r\\n   * @param {!string} expr Regular expression used as match criteria.\\r\\n   * @param {!number} pos position in the version string to be returned.\\r\\n   * @return {!number} browser version.\\r\\n   */\\r\\n  extractVersion: function(uastring, expr, pos) {\\r\\n    var match = uastring.match(expr);\\r\\n    return match && match.length >= pos && parseInt(match[pos], 10);\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Browser detector.\\r\\n   *\\r\\n   * @return {object} result containing browser and version\\r\\n   *     properties.\\r\\n   */\\r\\n  detectBrowser: function(window) {\\r\\n    var navigator = window && window.navigator;\\r\\n\\r\\n    // Returned result object.\\r\\n    var result = {};\\r\\n    result.browser = null;\\r\\n    result.version = null;\\r\\n\\r\\n    // Fail early if it's not a browser\\r\\n    if (typeof window === 'undefined' || !window.navigator) {\\r\\n      result.browser = 'Not a browser.';\\r\\n      return result;\\r\\n    }\\r\\n\\r\\n    // Firefox.\\r\\n    if (navigator.mozGetUserMedia) {\\r\\n      result.browser = 'firefox';\\r\\n      result.version = this.extractVersion(navigator.userAgent,\\r\\n          /Firefox\\\\/(\\\\d+)\\\\./, 1);\\r\\n    } else if (navigator.webkitGetUserMedia) {\\r\\n      // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\\r\\n      if (window.webkitRTCPeerConnection) {\\r\\n        result.browser = 'chrome';\\r\\n        result.version = this.extractVersion(navigator.userAgent,\\r\\n          /Chrom(e|ium)\\\\/(\\\\d+)\\\\./, 2);\\r\\n      } else { // Safari (in an unpublished version) or unknown webkit-based.\\r\\n        if (navigator.userAgent.match(/Version\\\\/(\\\\d+).(\\\\d+)/)) {\\r\\n          result.browser = 'safari';\\r\\n          result.version = this.extractVersion(navigator.userAgent,\\r\\n            /AppleWebKit\\\\/(\\\\d+)\\\\./, 1);\\r\\n        } else { // unknown webkit-based browser.\\r\\n          result.browser = 'Unsupported webkit-based browser ' +\\r\\n              'with GUM support but no WebRTC support.';\\r\\n          return result;\\r\\n        }\\r\\n      }\\r\\n    } else if (navigator.mediaDevices &&\\r\\n        navigator.userAgent.match(/Edge\\\\/(\\\\d+).(\\\\d+)$/)) { // Edge.\\r\\n      result.browser = 'edge';\\r\\n      result.version = this.extractVersion(navigator.userAgent,\\r\\n          /Edge\\\\/(\\\\d+).(\\\\d+)$/, 2);\\r\\n    } else if (navigator.mediaDevices &&\\r\\n        navigator.userAgent.match(/AppleWebKit\\\\/(\\\\d+)\\\\./)) {\\r\\n        // Safari, with webkitGetUserMedia removed.\\r\\n      result.browser = 'safari';\\r\\n      result.version = this.extractVersion(navigator.userAgent,\\r\\n          /AppleWebKit\\\\/(\\\\d+)\\\\./, 1);\\r\\n    } else { // Default fallthrough: not supported.\\r\\n      result.browser = 'Not a supported browser.';\\r\\n      return result;\\r\\n    }\\r\\n\\r\\n    return result;\\r\\n  },\\r\\n\\r\\n};\\r\\n\\r\\n// Export.\\r\\nmodule.exports = {\\r\\n  log: utils.log,\\r\\n  deprecated: utils.deprecated,\\r\\n  disableLog: utils.disableLog,\\r\\n  disableWarnings: utils.disableWarnings,\\r\\n  extractVersion: utils.extractVersion,\\r\\n  shimCreateObjectURL: utils.shimCreateObjectURL,\\r\\n  detectBrowser: utils.detectBrowser.bind(utils)\\r\\n};\\r\\n\",\"/**\\r\\n * The possible camera facing modes. For now support only 'user' and\\r\\n * 'environment' because 'left' and 'right' are not used anywhere in our\\r\\n * projects at the time of this writing. For more information please refer to\\r\\n * https://w3c.github.io/mediacapture-main/getusermedia.html\\r\\n * #def-constraint-facingMode.\\r\\n *\\r\\n * @enum {string}\\r\\n */\\r\\nconst CameraFacingMode = {\\r\\n    /**\\r\\n     * The mode which specifies the environment-facing camera.\\r\\n     */\\r\\n    ENVIRONMENT: 'environment',\\r\\n\\r\\n    /**\\r\\n     * The mode which specifies the user-facing camera.\\r\\n     */\\r\\n    USER: 'user'\\r\\n};\\r\\n\\r\\nmodule.exports = CameraFacingMode;\\r\\n\",\"/* global chrome, $, alert */\\r\\n\\r\\nimport JitsiTrackError from '../../JitsiTrackError';\\r\\nimport * as JitsiTrackErrors from '../../JitsiTrackErrors';\\r\\nimport browser from '../browser';\\r\\n\\r\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\r\\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\\r\\n\\r\\n/**\\r\\n * Indicates whether the Chrome desktop sharing extension is installed.\\r\\n * @type {boolean}\\r\\n */\\r\\nlet chromeExtInstalled = false;\\r\\n\\r\\n/**\\r\\n * Indicates whether an update of the Chrome desktop sharing extension is\\r\\n * required.\\r\\n * @type {boolean}\\r\\n */\\r\\nlet chromeExtUpdateRequired = false;\\r\\n\\r\\nlet gumFunction = null;\\r\\n\\r\\n/**\\r\\n * The error message returned by chrome when the extension is installed.\\r\\n */\\r\\nconst CHROME_NO_EXTENSION_ERROR_MSG // eslint-disable-line no-unused-vars\\r\\n    = 'Could not establish connection. Receiving end does not exist.';\\r\\n\\r\\n/**\\r\\n * Handles obtaining a stream from a screen capture on different browsers.\\r\\n */\\r\\nconst ScreenObtainer = {\\r\\n    /**\\r\\n     * If not <tt>null</tt> it means that the initialization process is still in\\r\\n     * progress. It is used to make desktop stream request wait and continue\\r\\n     * after it's done.\\r\\n     * {@type Promise|null}\\r\\n     */\\r\\n    intChromeExtPromise: null,\\r\\n\\r\\n    obtainStream: null,\\r\\n\\r\\n    /**\\r\\n     * Initializes the function used to obtain a screen capture\\r\\n     * (this.obtainStream).\\r\\n     *\\r\\n     * @param {object} options\\r\\n     * @param {boolean} [options.desktopSharingChromeDisabled]\\r\\n     * @param {boolean} [options.desktopSharingChromeExtId]\\r\\n     * @param {boolean} [options.desktopSharingFirefoxDisabled]\\r\\n     * @param {Function} gum GUM method\\r\\n     */\\r\\n    init(options = {\\r\\n        desktopSharingChromeDisabled: false,\\r\\n        desktopSharingChromeExtId: null,\\r\\n        desktopSharingFirefoxDisabled: false\\r\\n    }, gum) {\\r\\n        this.options = options;\\r\\n        gumFunction = gum;\\r\\n\\r\\n        this.obtainStream = this._createObtainStreamMethod(options);\\r\\n\\r\\n        if (!this.obtainStream) {\\r\\n            logger.info('Desktop sharing disabled');\\r\\n        }\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Returns a method which will be used to obtain the screen sharing stream\\r\\n     * (based on the browser type).\\r\\n     *\\r\\n     * @param {object} options passed from {@link init} - check description\\r\\n     * there\\r\\n     * @returns {Function}\\r\\n     * @private\\r\\n     */\\r\\n    _createObtainStreamMethod(options) {\\r\\n        if (browser.isNWJS()) {\\r\\n            return (_, onSuccess, onFailure) => {\\r\\n                window.JitsiMeetNW.obtainDesktopStream(\\r\\n                    onSuccess,\\r\\n                    (error, constraints) => {\\r\\n                        let jitsiError;\\r\\n\\r\\n                        // FIXME:\\r\\n                        // This is very very dirty fix for recognising that the\\r\\n                        // user have clicked the cancel button from the Desktop\\r\\n                        // sharing pick window. The proper solution would be to\\r\\n                        // detect this in the NWJS application by checking the\\r\\n                        // streamId === \\\"\\\". Even better solution would be to\\r\\n                        // stop calling GUM from the NWJS app and just pass the\\r\\n                        // streamId to lib-jitsi-meet. This way the desktop\\r\\n                        // sharing implementation for NWJS and chrome extension\\r\\n                        // will be the same and lib-jitsi-meet will be able to\\r\\n                        // control the constraints, check the streamId, etc.\\r\\n                        //\\r\\n                        // I cannot find documentation about \\\"InvalidStateError\\\"\\r\\n                        // but this is what we are receiving from GUM when the\\r\\n                        // streamId for the desktop sharing is \\\"\\\".\\r\\n\\r\\n                        if (error && error.name === 'InvalidStateError') {\\r\\n                            jitsiError = new JitsiTrackError(\\r\\n                                JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED\\r\\n                            );\\r\\n                        } else {\\r\\n                            jitsiError = new JitsiTrackError(\\r\\n                                error, constraints, [ 'desktop' ]);\\r\\n                        }\\r\\n                        (typeof onFailure === 'function')\\r\\n                            && onFailure(jitsiError);\\r\\n                    });\\r\\n            };\\r\\n        } else if (browser.isElectron()) {\\r\\n            return this.obtainScreenOnElectron;\\r\\n        } else if (browser.isChrome() || browser.isOpera()) {\\r\\n            if (browser.supportsGetDisplayMedia()\\r\\n                    && !options.desktopSharingChromeDisabled) {\\r\\n\\r\\n                return this.obtainScreenFromGetDisplayMedia;\\r\\n            } else if (options.desktopSharingChromeDisabled\\r\\n                || !options.desktopSharingChromeExtId) {\\r\\n\\r\\n                return null;\\r\\n            }\\r\\n\\r\\n            logger.info('Using Chrome extension for desktop sharing');\\r\\n            this.intChromeExtPromise\\r\\n                = initChromeExtension(options).then(() => {\\r\\n                    this.intChromeExtPromise = null;\\r\\n                });\\r\\n\\r\\n            return this.obtainScreenFromExtension;\\r\\n        } else if (browser.isFirefox()) {\\r\\n            if (options.desktopSharingFirefoxDisabled) {\\r\\n                return null;\\r\\n            } else if (browser.supportsGetDisplayMedia()) {\\r\\n                // Firefox 66 support getDisplayMedia\\r\\n                return this.obtainScreenFromGetDisplayMedia;\\r\\n            }\\r\\n\\r\\n            // Legacy Firefox\\r\\n            return this.obtainScreenOnFirefox;\\r\\n        } else if (browser.isEdge() && browser.supportsGetDisplayMedia()) {\\r\\n            return this.obtainScreenFromGetDisplayMedia;\\r\\n        }\\r\\n\\r\\n        logger.log(\\r\\n            'Screen sharing not supported by the current browser: ',\\r\\n            browser.getName());\\r\\n\\r\\n        return null;\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Checks whether obtaining a screen capture is supported in the current\\r\\n     * environment.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isSupported() {\\r\\n        return this.obtainStream !== null;\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Obtains a screen capture stream on Firefox.\\r\\n     * @param callback\\r\\n     * @param errorCallback\\r\\n     */\\r\\n    obtainScreenOnFirefox(options, callback, errorCallback) {\\r\\n        obtainWebRTCScreen(options.gumOptions, callback, errorCallback);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Obtains a screen capture stream on Electron.\\r\\n     *\\r\\n     * @param {Object} [options] - Screen sharing options.\\r\\n     * @param {Array<string>} [options.desktopSharingSources] - Array with the\\r\\n     * sources that have to be displayed in the desktop picker window ('screen',\\r\\n     * 'window', etc.).\\r\\n     * @param onSuccess - Success callback.\\r\\n     * @param onFailure - Failure callback.\\r\\n     */\\r\\n    obtainScreenOnElectron(options = {}, onSuccess, onFailure) {\\r\\n        if (window.JitsiMeetScreenObtainer\\r\\n            && window.JitsiMeetScreenObtainer.openDesktopPicker) {\\r\\n            const { desktopSharingSources, gumOptions } = options;\\r\\n\\r\\n            window.JitsiMeetScreenObtainer.openDesktopPicker(\\r\\n                {\\r\\n                    desktopSharingSources: desktopSharingSources\\r\\n                        || this.options.desktopSharingChromeSources\\r\\n                },\\r\\n                (streamId, streamType) =>\\r\\n                    onGetStreamResponse(\\r\\n                        {\\r\\n                            response: {\\r\\n                                streamId,\\r\\n                                streamType\\r\\n                            },\\r\\n                            gumOptions\\r\\n                        },\\r\\n                        onSuccess,\\r\\n                        onFailure\\r\\n                    ),\\r\\n                err => onFailure(new JitsiTrackError(\\r\\n                    JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR,\\r\\n                    err\\r\\n                ))\\r\\n            );\\r\\n        } else {\\r\\n            onFailure(new JitsiTrackError(\\r\\n                JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND));\\r\\n        }\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Asks Chrome extension to call chooseDesktopMedia and gets chrome\\r\\n     * 'desktop' stream for returned stream token.\\r\\n     */\\r\\n    obtainScreenFromExtension(options, streamCallback, failCallback) {\\r\\n        if (this.intChromeExtPromise !== null) {\\r\\n            this.intChromeExtPromise.then(() => {\\r\\n                this.obtainScreenFromExtension(\\r\\n                    options, streamCallback, failCallback);\\r\\n            });\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const {\\r\\n            desktopSharingChromeExtId,\\r\\n            desktopSharingChromeSources\\r\\n        } = this.options;\\r\\n\\r\\n        const {\\r\\n            gumOptions\\r\\n        } = options;\\r\\n\\r\\n        const doGetStreamFromExtensionOptions = {\\r\\n            desktopSharingChromeExtId,\\r\\n            desktopSharingChromeSources:\\r\\n                options.desktopSharingSources || desktopSharingChromeSources,\\r\\n            gumOptions\\r\\n        };\\r\\n\\r\\n        if (chromeExtInstalled) {\\r\\n            doGetStreamFromExtension(\\r\\n                doGetStreamFromExtensionOptions,\\r\\n                streamCallback,\\r\\n                failCallback);\\r\\n        } else {\\r\\n            if (chromeExtUpdateRequired) {\\r\\n                /* eslint-disable no-alert */\\r\\n                alert(\\r\\n                    'Jitsi Desktop Streamer requires update. '\\r\\n                    + 'Changes will take effect after next Chrome restart.');\\r\\n\\r\\n                /* eslint-enable no-alert */\\r\\n            }\\r\\n\\r\\n            this.handleExternalInstall(options, streamCallback,\\r\\n                failCallback);\\r\\n        }\\r\\n    },\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    handleExternalInstall(options, streamCallback, failCallback, e) {\\r\\n        const webStoreInstallUrl = getWebStoreInstallUrl(this.options);\\r\\n\\r\\n        options.listener('waitingForExtension', webStoreInstallUrl);\\r\\n        this.checkForChromeExtensionOnInterval(options, streamCallback,\\r\\n            failCallback, e);\\r\\n    },\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    checkForChromeExtensionOnInterval(options, streamCallback, failCallback) {\\r\\n        if (options.checkAgain() === false) {\\r\\n            failCallback(new JitsiTrackError(\\r\\n                JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR));\\r\\n\\r\\n            return;\\r\\n        }\\r\\n        waitForExtensionAfterInstall(this.options, options.interval, 1)\\r\\n            .then(() => {\\r\\n                chromeExtInstalled = true;\\r\\n                options.listener('extensionFound');\\r\\n                this.obtainScreenFromExtension(options,\\r\\n                    streamCallback, failCallback);\\r\\n            })\\r\\n            .catch(() => {\\r\\n                this.checkForChromeExtensionOnInterval(options,\\r\\n                    streamCallback, failCallback);\\r\\n            });\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Obtains a screen capture stream using getDisplayMedia.\\r\\n     *\\r\\n     * @param callback - The success callback.\\r\\n     * @param errorCallback - The error callback.\\r\\n     */\\r\\n    obtainScreenFromGetDisplayMedia(options, callback, errorCallback) {\\r\\n        logger.info('Using getDisplayMedia for screen sharing');\\r\\n\\r\\n        let getDisplayMedia;\\r\\n\\r\\n        if (navigator.getDisplayMedia) {\\r\\n            getDisplayMedia = navigator.getDisplayMedia.bind(navigator);\\r\\n        } else {\\r\\n            // eslint-disable-next-line max-len\\r\\n            getDisplayMedia = navigator.mediaDevices.getDisplayMedia.bind(navigator.mediaDevices);\\r\\n        }\\r\\n\\r\\n        getDisplayMedia({ video: true })\\r\\n            .then(stream => {\\r\\n                let applyConstraintsPromise;\\r\\n\\r\\n                if (stream\\r\\n                    && stream.getTracks()\\r\\n                    && stream.getTracks().length > 0) {\\r\\n                    applyConstraintsPromise = stream.getTracks()[0]\\r\\n                        .applyConstraints(options.trackOptions);\\r\\n                } else {\\r\\n                    applyConstraintsPromise = Promise.resolve();\\r\\n                }\\r\\n\\r\\n                applyConstraintsPromise.then(() =>\\r\\n                    callback({\\r\\n                        stream,\\r\\n                        sourceId: stream.id\\r\\n                    }));\\r\\n            })\\r\\n            .catch(() =>\\r\\n                errorCallback(new JitsiTrackError(JitsiTrackErrors\\r\\n                    .CHROME_EXTENSION_USER_CANCELED)));\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Obtains a desktop stream using getUserMedia.\\r\\n * For this to work on Chrome, the\\r\\n * 'chrome://flags/#enable-usermedia-screen-capture' flag must be enabled.\\r\\n *\\r\\n * On firefox, the document's domain must be white-listed in the\\r\\n * 'media.getusermedia.screensharing.allowed_domains' preference in\\r\\n * 'about:config'.\\r\\n */\\r\\nfunction obtainWebRTCScreen(options, streamCallback, failCallback) {\\r\\n    gumFunction([ 'screen' ], options)\\r\\n        .then(stream => streamCallback({ stream }), failCallback);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Constructs inline install URL for Chrome desktop streaming extension.\\r\\n * The 'chromeExtensionId' must be defined in options parameter.\\r\\n * @param options supports \\\"desktopSharingChromeExtId\\\"\\r\\n * @returns {string}\\r\\n */\\r\\nfunction getWebStoreInstallUrl(options) {\\r\\n    return (\\r\\n        `https://chrome.google.com/webstore/detail/${\\r\\n            options.desktopSharingChromeExtId}`);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Checks whether an update of the Chrome extension is required.\\r\\n * @param minVersion minimal required version\\r\\n * @param extVersion current extension version\\r\\n * @returns {boolean}\\r\\n */\\r\\nfunction isUpdateRequired(minVersion, extVersion) {\\r\\n    try {\\r\\n        const s1 = minVersion.split('.');\\r\\n        const s2 = extVersion.split('.');\\r\\n\\r\\n        const len = Math.max(s1.length, s2.length);\\r\\n\\r\\n        for (let i = 0; i < len; i++) {\\r\\n            let n1 = 0,\\r\\n                n2 = 0;\\r\\n\\r\\n            if (i < s1.length) {\\r\\n                n1 = parseInt(s1[i], 10);\\r\\n            }\\r\\n            if (i < s2.length) {\\r\\n                n2 = parseInt(s2[i], 10);\\r\\n            }\\r\\n\\r\\n            if (isNaN(n1) || isNaN(n2)) {\\r\\n                return true;\\r\\n            } else if (n1 !== n2) {\\r\\n                return n1 > n2;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // will happen if both versions have identical numbers in\\r\\n        // their components (even if one of them is longer, has more components)\\r\\n        return false;\\r\\n    } catch (e) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(e);\\r\\n        logger.error('Failed to parse extension version', e);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param callback\\r\\n * @param options\\r\\n */\\r\\nfunction checkChromeExtInstalled(callback, options) {\\r\\n    if (typeof chrome === 'undefined' || !chrome || !chrome.runtime) {\\r\\n        // No API, so no extension for sure\\r\\n        callback(false, false);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n    chrome.runtime.sendMessage(\\r\\n        options.desktopSharingChromeExtId,\\r\\n        { getVersion: true },\\r\\n        response => {\\r\\n            if (!response || !response.version) {\\r\\n                // Communication failure - assume that no endpoint exists\\r\\n                logger.warn(\\r\\n                    'Extension not installed?: ', chrome.runtime.lastError);\\r\\n                callback(false, false);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            // Check installed extension version\\r\\n            const extVersion = response.version;\\r\\n\\r\\n            logger.log(`Extension version is: ${extVersion}`);\\r\\n            const updateRequired\\r\\n                = isUpdateRequired(\\r\\n                    options.desktopSharingChromeMinExtVersion,\\r\\n                    extVersion);\\r\\n\\r\\n            callback(!updateRequired, updateRequired);\\r\\n        }\\r\\n    );\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param options\\r\\n * @param streamCallback\\r\\n * @param failCallback\\r\\n */\\r\\nfunction doGetStreamFromExtension(options, streamCallback, failCallback) {\\r\\n    const {\\r\\n        desktopSharingChromeSources,\\r\\n        desktopSharingChromeExtId,\\r\\n        gumOptions\\r\\n    } = options;\\r\\n\\r\\n    // Sends 'getStream' msg to the extension.\\r\\n    // Extension id must be defined in the config.\\r\\n    chrome.runtime.sendMessage(\\r\\n        desktopSharingChromeExtId,\\r\\n        {\\r\\n            getStream: true,\\r\\n            sources: desktopSharingChromeSources\\r\\n        },\\r\\n        response => {\\r\\n            if (!response) {\\r\\n                // possibly re-wraping error message to make code consistent\\r\\n                const lastError = chrome.runtime.lastError;\\r\\n\\r\\n                failCallback(lastError instanceof Error\\r\\n                    ? lastError\\r\\n                    : new JitsiTrackError(\\r\\n                        JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR,\\r\\n                        lastError));\\r\\n\\r\\n                return;\\r\\n            }\\r\\n            logger.log('Response from extension: ', response);\\r\\n            onGetStreamResponse(\\r\\n                {\\r\\n                    response,\\r\\n                    gumOptions\\r\\n                },\\r\\n                streamCallback,\\r\\n                failCallback\\r\\n            );\\r\\n        }\\r\\n    );\\r\\n}\\r\\n\\r\\n/**\\r\\n * Initializes <link rel=chrome-webstore-item /> with extension id set in\\r\\n * config.js to support inline installs. Host site must be selected as main\\r\\n * website of published extension.\\r\\n * @param options supports \\\"desktopSharingChromeExtId\\\"\\r\\n */\\r\\nfunction initInlineInstalls(options) {\\r\\n    if ($('link[rel=chrome-webstore-item]').length === 0) {\\r\\n        $('head').append('<link rel=\\\"chrome-webstore-item\\\">');\\r\\n    }\\r\\n    $('link[rel=chrome-webstore-item]').attr('href',\\r\\n        getWebStoreInstallUrl(options));\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param options\\r\\n *\\r\\n * @return {Promise} - a Promise resolved once the initialization process is\\r\\n * finished.\\r\\n */\\r\\nfunction initChromeExtension(options) {\\r\\n    // Initialize Chrome extension inline installs\\r\\n    initInlineInstalls(options);\\r\\n\\r\\n    return new Promise(resolve => {\\r\\n        // Check if extension is installed\\r\\n        checkChromeExtInstalled((installed, updateRequired) => {\\r\\n            chromeExtInstalled = installed;\\r\\n            chromeExtUpdateRequired = updateRequired;\\r\\n            logger.info(\\r\\n                `Chrome extension installed: ${\\r\\n                    chromeExtInstalled} updateRequired: ${\\r\\n                    chromeExtUpdateRequired}`);\\r\\n            resolve();\\r\\n        }, options);\\r\\n    });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Checks \\\"retries\\\" times on every \\\"waitInterval\\\"ms whether the ext is alive.\\r\\n * @param {Object} options the options passed to ScreanObtainer.obtainStream\\r\\n * @param {int} waitInterval the number of ms between retries\\r\\n * @param {int} retries the number of retries\\r\\n * @returns {Promise} returns promise that will be resolved when the extension\\r\\n * is alive and rejected if the extension is not alive even after \\\"retries\\\"\\r\\n * checks\\r\\n */\\r\\nfunction waitForExtensionAfterInstall(options, waitInterval, retries) {\\r\\n    if (retries === 0) {\\r\\n        return Promise.reject();\\r\\n    }\\r\\n\\r\\n    return new Promise((resolve, reject) => {\\r\\n        let currentRetries = retries;\\r\\n        const interval = window.setInterval(() => {\\r\\n            checkChromeExtInstalled(installed => {\\r\\n                if (installed) {\\r\\n                    window.clearInterval(interval);\\r\\n                    resolve();\\r\\n                } else {\\r\\n                    currentRetries--;\\r\\n                    if (currentRetries === 0) {\\r\\n                        reject();\\r\\n                        window.clearInterval(interval);\\r\\n                    }\\r\\n                }\\r\\n            }, options);\\r\\n        }, waitInterval);\\r\\n    });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Handles response from external application / extension and calls GUM to\\r\\n * receive the desktop streams or reports error.\\r\\n * @param {object} options\\r\\n * @param {object} options.response\\r\\n * @param {string} options.response.streamId - the streamId for the desktop\\r\\n * stream.\\r\\n * @param {string} options.response.error - error to be reported.\\r\\n * @param {object} options.gumOptions - options passed to GUM.\\r\\n * @param {Function} onSuccess - callback for success.\\r\\n * @param {Function} onFailure - callback for failure.\\r\\n * @param {object} gumOptions - options passed to GUM.\\r\\n */\\r\\nfunction onGetStreamResponse(\\r\\n        options = {\\r\\n            response: {},\\r\\n            gumOptions: {}\\r\\n        },\\r\\n        onSuccess,\\r\\n        onFailure) {\\r\\n    const { streamId, streamType, error } = options.response || {};\\r\\n\\r\\n    if (streamId) {\\r\\n        const gumOptions = {\\r\\n            desktopStream: streamId,\\r\\n            ...options.gumOptions\\r\\n        };\\r\\n\\r\\n        gumFunction([ 'desktop' ], gumOptions)\\r\\n            .then(stream => onSuccess({\\r\\n                stream,\\r\\n                sourceId: streamId,\\r\\n                sourceType: streamType\\r\\n            }), onFailure);\\r\\n    } else {\\r\\n        // As noted in Chrome Desktop Capture API:\\r\\n        // If user didn't select any source (i.e. canceled the prompt)\\r\\n        // then the callback is called with an empty streamId.\\r\\n        if (streamId === '') {\\r\\n            onFailure(new JitsiTrackError(\\r\\n                JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED));\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        onFailure(new JitsiTrackError(\\r\\n            JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR,\\r\\n            error));\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default ScreenObtainer;\\r\\n\",\"/* global __filename */\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\\r\\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport browser from '../browser';\\r\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\r\\nimport Statistics from '../statistics/statistics';\\r\\nimport { createParticipantConnectionStatusEvent } from '../../service/statistics/AnalyticsEvents';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Default value of 500 milliseconds for\\r\\n * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\\r\\n *\\r\\n * @type {number}\\r\\n */\\r\\nconst DEFAULT_NOT_IN_LAST_N_TIMEOUT = 500;\\r\\n\\r\\n/**\\r\\n * Default value of 2000 milliseconds for\\r\\n * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\\r\\n *\\r\\n * @type {number}\\r\\n */\\r\\nconst DEFAULT_RTC_MUTE_TIMEOUT = 10000;\\r\\n\\r\\n/**\\r\\n * The time to wait a track to be restored. Track which was out of lastN\\r\\n * should be inactive and when entering lastN it becomes restoring and when\\r\\n * data is received from bridge it will become active, but if no data is\\r\\n * received for some time we set status of that participant connection to\\r\\n * interrupted.\\r\\n * @type {number}\\r\\n */\\r\\nconst DEFAULT_RESTORING_TIMEOUT = 10000;\\r\\n\\r\\n/**\\r\\n * Participant connection statuses.\\r\\n *\\r\\n * @type {{\\r\\n *      ACTIVE: string,\\r\\n *      INACTIVE: string,\\r\\n *      INTERRUPTED: string,\\r\\n *      RESTORING: string\\r\\n * }}\\r\\n */\\r\\nexport const ParticipantConnectionStatus = {\\r\\n    /**\\r\\n     * Status indicating that connection is currently active.\\r\\n     */\\r\\n    ACTIVE: 'active',\\r\\n\\r\\n    /**\\r\\n     * Status indicating that connection is currently inactive.\\r\\n     * Inactive means the connection was stopped on purpose from the bridge,\\r\\n     * like exiting lastN or adaptivity decided to drop video because of not\\r\\n     * enough bandwidth.\\r\\n     */\\r\\n    INACTIVE: 'inactive',\\r\\n\\r\\n    /**\\r\\n     * Status indicating that connection is currently interrupted.\\r\\n     */\\r\\n    INTERRUPTED: 'interrupted',\\r\\n\\r\\n    /**\\r\\n     * Status indicating that connection is currently restoring.\\r\\n     */\\r\\n    RESTORING: 'restoring'\\r\\n};\\r\\n\\r\\n/**\\r\\n * Class is responsible for emitting\\r\\n * JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED events.\\r\\n */\\r\\nexport default class ParticipantConnectionStatusHandler {\\r\\n    /* eslint-disable max-params*/\\r\\n    /**\\r\\n     * Calculates the new {@link ParticipantConnectionStatus} based on\\r\\n     * the values given for some specific remote user. It is assumed that\\r\\n     * the conference is currently in the JVB mode (in contrary to the P2P mode)\\r\\n     * @param {boolean} isConnectionActiveByJvb true if the JVB did not get any\\r\\n     * data from the user for the last 15 seconds.\\r\\n     * @param {boolean} isInLastN indicates whether the user is in the last N\\r\\n     * set. When set to false it means that JVB is not sending any video for\\r\\n     * the user.\\r\\n     * @param {boolean} isRestoringTimedout if true it means that the user has\\r\\n     * been outside of last N too long to be considered\\r\\n     * {@link ParticipantConnectionStatus.RESTORING}.\\r\\n     * @param {boolean} isVideoMuted true if the user is video muted and we\\r\\n     * should not expect to receive any video.\\r\\n     * @param {boolean} isVideoTrackFrozen if the current browser support video\\r\\n     * frozen detection then it will be set to true when the video track is\\r\\n     * frozen. If the current browser does not support frozen detection the it's\\r\\n     * always false.\\r\\n     * @return {ParticipantConnectionStatus} the new connection status for\\r\\n     * the user for whom the values above were provided.\\r\\n     * @private\\r\\n     */\\r\\n    static _getNewStateForJvbMode(\\r\\n            isConnectionActiveByJvb,\\r\\n            isInLastN,\\r\\n            isRestoringTimedout,\\r\\n            isVideoMuted,\\r\\n            isVideoTrackFrozen) {\\r\\n        if (!isConnectionActiveByJvb) {\\r\\n            // when there is a connection problem signaled from jvb\\r\\n            // it means no media was flowing for at least 15secs, so both audio\\r\\n            // and video are most likely interrupted\\r\\n            return ParticipantConnectionStatus.INTERRUPTED;\\r\\n        } else if (isVideoMuted) {\\r\\n            // If the connection is active according to JVB and the user is\\r\\n            // video muted there is no way for the connection to be inactive,\\r\\n            // because the detection logic below only makes sense for video.\\r\\n            return ParticipantConnectionStatus.ACTIVE;\\r\\n        }\\r\\n\\r\\n        // Logic when isVideoTrackFrozen is supported\\r\\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\\r\\n            if (!isVideoTrackFrozen) {\\r\\n                // If the video is playing we're good\\r\\n                return ParticipantConnectionStatus.ACTIVE;\\r\\n            } else if (isInLastN) {\\r\\n                return isRestoringTimedout\\r\\n                    ? ParticipantConnectionStatus.INTERRUPTED\\r\\n                    : ParticipantConnectionStatus.RESTORING;\\r\\n            }\\r\\n\\r\\n            return ParticipantConnectionStatus.INACTIVE;\\r\\n        }\\r\\n\\r\\n        // Because this browser is incapable of detecting frozen video we must\\r\\n        // rely on the lastN value\\r\\n        return isInLastN\\r\\n            ? ParticipantConnectionStatus.ACTIVE\\r\\n            : ParticipantConnectionStatus.INACTIVE;\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params*/\\r\\n\\r\\n    /**\\r\\n     * In P2P mode we don't care about any values coming from the JVB and\\r\\n     * the connection status can be only active or interrupted.\\r\\n     * @param {boolean} isVideoMuted the user if video muted\\r\\n     * @param {boolean} isVideoTrackFrozen true if the video track for\\r\\n     * the remote user is currently frozen. If the current browser does not\\r\\n     * support video frozen detection then it's always false.\\r\\n     * @return {ParticipantConnectionStatus}\\r\\n     * @private\\r\\n     */\\r\\n    static _getNewStateForP2PMode(isVideoMuted, isVideoTrackFrozen) {\\r\\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\\r\\n            // There's no way to detect problems in P2P when there's no video\\r\\n            // track frozen detection...\\r\\n            return ParticipantConnectionStatus.ACTIVE;\\r\\n        }\\r\\n\\r\\n        return isVideoMuted || !isVideoTrackFrozen\\r\\n            ? ParticipantConnectionStatus.ACTIVE\\r\\n            : ParticipantConnectionStatus.INTERRUPTED;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates new instance of <tt>ParticipantConnectionStatus</tt>.\\r\\n     *\\r\\n     * @constructor\\r\\n     * @param {RTC} rtc the RTC service instance\\r\\n     * @param {JitsiConference} conference parent conference instance\\r\\n     * @param {Object} options\\r\\n     * @param {number} [options.rtcMuteTimeout=2000] custom value for\\r\\n     * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\\r\\n     * @param {number} [options.outOfLastNTimeout=500] custom value for\\r\\n     * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\\r\\n     */\\r\\n    constructor(rtc, conference, options) {\\r\\n        this.rtc = rtc;\\r\\n        this.conference = conference;\\r\\n\\r\\n        /**\\r\\n         * A map of the \\\"endpoint ID\\\"(which corresponds to the resource part\\r\\n         * of MUC JID(nickname)) to the timeout callback IDs scheduled using\\r\\n         * window.setTimeout.\\r\\n         * @type {Object.<string, number>}\\r\\n         */\\r\\n        this.trackTimers = {};\\r\\n\\r\\n        /**\\r\\n         * This map holds the endpoint connection status received from the JVB\\r\\n         * (as it might be different than the one stored in JitsiParticipant).\\r\\n         * Required for getting back in sync when remote video track is removed.\\r\\n         * @type {Object.<string, boolean>}\\r\\n         */\\r\\n        this.connStatusFromJvb = { };\\r\\n\\r\\n        /**\\r\\n         * If video track frozen detection through RTC mute event is supported,\\r\\n         * we wait some time until video track is considered frozen. But because\\r\\n         * when the user falls out of last N it is expected for the video to\\r\\n         * freeze this timeout must be significantly reduced in \\\"out of last N\\\"\\r\\n         * case.\\r\\n         *\\r\\n         * Basically this value is used instead of {@link rtcMuteTimeout} when\\r\\n         * user is not in last N.\\r\\n         * @type {number}\\r\\n         */\\r\\n        this.outOfLastNTimeout\\r\\n            = typeof options.outOfLastNTimeout === 'number'\\r\\n                ? options.outOfLastNTimeout : DEFAULT_NOT_IN_LAST_N_TIMEOUT;\\r\\n\\r\\n        /**\\r\\n         * How long we're going to wait after the RTC video track muted event\\r\\n         * for the corresponding signalling mute event, before the connection\\r\\n         * interrupted is fired. The default value is\\r\\n         * {@link DEFAULT_RTC_MUTE_TIMEOUT}.\\r\\n         *\\r\\n         * @type {number} amount of time in milliseconds\\r\\n         */\\r\\n        this.rtcMuteTimeout\\r\\n            = typeof options.rtcMuteTimeout === 'number'\\r\\n                ? options.rtcMuteTimeout : DEFAULT_RTC_MUTE_TIMEOUT;\\r\\n\\r\\n        /**\\r\\n         * This map holds a timestamp indicating  when participant's video track\\r\\n         * was RTC muted (it is assumed that each participant can have only 1\\r\\n         * video track at a time). The purpose of storing the timestamp is to\\r\\n         * avoid the transition to disconnected status in case of legitimate\\r\\n         * video mute operation where the signalling video muted event can\\r\\n         * arrive shortly after RTC muted event.\\r\\n         *\\r\\n         * The key is participant's ID which is the same as endpoint id in\\r\\n         * the Colibri conference allocated on the JVB.\\r\\n         *\\r\\n         * The value is a timestamp measured in milliseconds obtained with\\r\\n         * <tt>Date.now()</tt>.\\r\\n         *\\r\\n         * FIXME merge this logic with NO_DATA_FROM_SOURCE event\\r\\n         *       implemented in JitsiLocalTrack by extending the event to\\r\\n         *       the remote track and allowing to set different timeout for\\r\\n         *       local and remote tracks.\\r\\n         *\\r\\n         * @type {Object.<string, number>}\\r\\n         */\\r\\n        this.rtcMutedTimestamp = { };\\r\\n        logger.info(`RtcMuteTimeout set to: ${this.rtcMuteTimeout}`);\\r\\n\\r\\n        /**\\r\\n         * This map holds the timestamps indicating when participant's video\\r\\n         * entered lastN set. Participants entering lastN will have connection\\r\\n         * status restoring and when we start receiving video will become\\r\\n         * active, but if video is not received for certain time\\r\\n         * {@link DEFAULT_RESTORING_TIMEOUT} that participant connection status\\r\\n         * will become interrupted.\\r\\n         *\\r\\n         * @type {Map<string, number>}\\r\\n         */\\r\\n        this.enteredLastNTimestamp = new Map();\\r\\n\\r\\n        /**\\r\\n         * A map of the \\\"endpoint ID\\\"(which corresponds to the resource part\\r\\n         * of MUC JID(nickname)) to the restoring timeout callback IDs\\r\\n         * scheduled using window.setTimeout.\\r\\n         *\\r\\n         * @type {Map<string, number>}\\r\\n         */\\r\\n        this.restoringTimers = new Map();\\r\\n\\r\\n        /**\\r\\n         * A map that holds the current connection status (along with all the internal events that happen\\r\\n         * while in that state).\\r\\n         *\\r\\n         * The goal is to send this information to the analytics backend for post-mortem analysis.\\r\\n         */\\r\\n        this.connectionStatusMap = new Map();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the video frozen timeout for given user.\\r\\n     * @param {string} id endpoint/participant ID\\r\\n     * @return {number} how long are we going to wait since RTC video muted\\r\\n     * even, before a video track is considered frozen.\\r\\n     * @private\\r\\n     */\\r\\n    _getVideoFrozenTimeout(id) {\\r\\n        return this.rtc.isInLastN(id)\\r\\n            ? this.rtcMuteTimeout : this.outOfLastNTimeout;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes <tt>ParticipantConnectionStatus</tt> and bind required event\\r\\n     * listeners.\\r\\n     */\\r\\n    init() {\\r\\n\\r\\n        this._onEndpointConnStatusChanged\\r\\n            = this.onEndpointConnStatusChanged.bind(this);\\r\\n\\r\\n        this.rtc.addListener(\\r\\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\\r\\n            this._onEndpointConnStatusChanged);\\r\\n\\r\\n        // Handles P2P status changes\\r\\n        this._onP2PStatus = this.refreshConnectionStatusForAll.bind(this);\\r\\n        this.conference.on(JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\\r\\n\\r\\n        // Used to send analytics events for the participant that left the call.\\r\\n        this._onUserLeft = this.onUserLeft.bind(this);\\r\\n        this.conference.on(JitsiConferenceEvents.USER_LEFT, this._onUserLeft);\\r\\n\\r\\n        // On some browsers MediaStreamTrack trigger \\\"onmute\\\"/\\\"onunmute\\\"\\r\\n        // events for video type tracks when they stop receiving data which is\\r\\n        // often a sign that remote user is having connectivity issues\\r\\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\\r\\n\\r\\n            this._onTrackRtcMuted = this.onTrackRtcMuted.bind(this);\\r\\n            this.rtc.addListener(\\r\\n                RTCEvents.REMOTE_TRACK_MUTE, this._onTrackRtcMuted);\\r\\n\\r\\n            this._onTrackRtcUnmuted = this.onTrackRtcUnmuted.bind(this);\\r\\n            this.rtc.addListener(\\r\\n                RTCEvents.REMOTE_TRACK_UNMUTE, this._onTrackRtcUnmuted);\\r\\n\\r\\n            // Track added/removed listeners are used to bind \\\"mute\\\"/\\\"unmute\\\"\\r\\n            // event handlers\\r\\n            this._onRemoteTrackAdded = this.onRemoteTrackAdded.bind(this);\\r\\n            this.conference.on(\\r\\n                JitsiConferenceEvents.TRACK_ADDED,\\r\\n                this._onRemoteTrackAdded);\\r\\n\\r\\n            this._onRemoteTrackRemoved = this.onRemoteTrackRemoved.bind(this);\\r\\n            this.conference.on(\\r\\n                JitsiConferenceEvents.TRACK_REMOVED,\\r\\n                this._onRemoteTrackRemoved);\\r\\n\\r\\n            // Listened which will be bound to JitsiRemoteTrack to listen for\\r\\n            // signalling mute/unmute events.\\r\\n            this._onSignallingMuteChanged\\r\\n                = this.onSignallingMuteChanged.bind(this);\\r\\n\\r\\n            // Used to send an analytics event when the video type changes.\\r\\n            this._onTrackVideoTypeChanged\\r\\n                = this.onTrackVideoTypeChanged.bind(this);\\r\\n        }\\r\\n\\r\\n        this._onLastNChanged = this._onLastNChanged.bind(this);\\r\\n        this.conference.on(\\r\\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\\r\\n            this._onLastNChanged);\\r\\n\\r\\n        this._onLastNValueChanged\\r\\n            = this.refreshConnectionStatusForAll.bind(this);\\r\\n        this.rtc.on(\\r\\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes all event listeners and disposes of all resources held by this\\r\\n     * instance.\\r\\n     */\\r\\n    dispose() {\\r\\n\\r\\n        this.rtc.removeListener(\\r\\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\\r\\n            this._onEndpointConnStatusChanged);\\r\\n\\r\\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\\r\\n            this.rtc.removeListener(\\r\\n                RTCEvents.REMOTE_TRACK_MUTE,\\r\\n                this._onTrackRtcMuted);\\r\\n            this.rtc.removeListener(\\r\\n                RTCEvents.REMOTE_TRACK_UNMUTE,\\r\\n                this._onTrackRtcUnmuted);\\r\\n\\r\\n            this.conference.off(\\r\\n                JitsiConferenceEvents.TRACK_ADDED,\\r\\n                this._onRemoteTrackAdded);\\r\\n            this.conference.off(\\r\\n                JitsiConferenceEvents.TRACK_REMOVED,\\r\\n                this._onRemoteTrackRemoved);\\r\\n        }\\r\\n\\r\\n        this.conference.off(\\r\\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\\r\\n            this._onLastNChanged);\\r\\n\\r\\n        this.rtc.removeListener(\\r\\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\\r\\n\\r\\n        this.conference.off(\\r\\n            JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\\r\\n\\r\\n        this.conference.off(\\r\\n            JitsiConferenceEvents.USER_LEFT, this._onUserLeft);\\r\\n\\r\\n        const participantIds = Object.keys(this.trackTimers);\\r\\n\\r\\n        for (const participantId of participantIds) {\\r\\n            this.clearTimeout(participantId);\\r\\n            this.clearRtcMutedTimestamp(participantId);\\r\\n        }\\r\\n\\r\\n        for (const id in this.connectionStatusMap) {\\r\\n            if (this.connectionStatusMap.hasOwnProperty(id)) {\\r\\n                this.onUserLeft(id);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // Clear RTC connection status cache\\r\\n        this.connStatusFromJvb = {};\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles RTCEvents.ENDPOINT_CONN_STATUS_CHANGED triggered when we receive\\r\\n     * notification over the data channel from the bridge about endpoint's\\r\\n     * connection status update.\\r\\n     * @param {string} endpointId - The endpoint ID(MUC nickname/resource JID).\\r\\n     * @param {boolean} isActive - true if the connection is OK or false otherwise.\\r\\n     */\\r\\n    onEndpointConnStatusChanged(endpointId, isActive) {\\r\\n\\r\\n        logger.debug(\\r\\n            `Detector RTCEvents.ENDPOINT_CONN_STATUS_CHANGED(${Date.now()}): ${\\r\\n                endpointId}: ${isActive}`);\\r\\n\\r\\n        // Filter out events for the local JID for now\\r\\n        if (endpointId !== this.conference.myUserId()) {\\r\\n            // Store the status received over the data channels\\r\\n            this.connStatusFromJvb[endpointId] = isActive;\\r\\n            this.figureOutConnectionStatus(endpointId);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Changes connection status.\\r\\n     * @param {JitsiParticipant} participant\\r\\n     * @param newStatus\\r\\n     */\\r\\n    _changeConnectionStatus(participant, newStatus) {\\r\\n        if (participant.getConnectionStatus() !== newStatus) {\\r\\n\\r\\n            const endpointId = participant.getId();\\r\\n\\r\\n            participant._setConnectionStatus(newStatus);\\r\\n\\r\\n            logger.debug(\\r\\n                `Emit endpoint conn status(${Date.now()}) ${endpointId}: ${\\r\\n                    newStatus}`);\\r\\n\\r\\n            // Log the event on CallStats\\r\\n            Statistics.sendLog(\\r\\n                JSON.stringify({\\r\\n                    id: 'peer.conn.status',\\r\\n                    participant: endpointId,\\r\\n                    status: newStatus\\r\\n                }));\\r\\n\\r\\n\\r\\n            this.conference.eventEmitter.emit(\\r\\n                JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED,\\r\\n                endpointId, newStatus);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reset the postponed \\\"connection interrupted\\\" event which was previously\\r\\n     * scheduled as a timeout on RTC 'onmute' event.\\r\\n     *\\r\\n     * @param {string} participantId - The participant for which the \\\"connection\\r\\n     * interrupted\\\" timeout was scheduled.\\r\\n     */\\r\\n    clearTimeout(participantId) {\\r\\n        if (this.trackTimers[participantId]) {\\r\\n            window.clearTimeout(this.trackTimers[participantId]);\\r\\n            this.trackTimers[participantId] = null;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Clears the timestamp of the RTC muted event for participant's video track\\r\\n     * @param {string} participantId the id of the conference participant which\\r\\n     * is the same as the Colibri endpoint ID of the video channel allocated for\\r\\n     * the user on the videobridge.\\r\\n     */\\r\\n    clearRtcMutedTimestamp(participantId) {\\r\\n        this.rtcMutedTimestamp[participantId] = null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Bind signalling mute event listeners for video {JitsiRemoteTrack} when\\r\\n     * a new one is added to the conference.\\r\\n     *\\r\\n     * @param {JitsiTrack} remoteTrack - The {JitsiTrack} which is being added to\\r\\n     * the conference.\\r\\n     */\\r\\n    onRemoteTrackAdded(remoteTrack) {\\r\\n        if (!remoteTrack.isLocal()\\r\\n                && remoteTrack.getType() === MediaType.VIDEO) {\\r\\n\\r\\n            logger.debug(\\r\\n                `Detector on remote track added for: ${\\r\\n                    remoteTrack.getParticipantId()}`);\\r\\n\\r\\n            remoteTrack.on(\\r\\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\\r\\n                this._onSignallingMuteChanged);\\r\\n            remoteTrack.on(\\r\\n                JitsiTrackEvents.TRACK_VIDEOTYPE_CHANGED,\\r\\n                videoType => this._onTrackVideoTypeChanged(remoteTrack, videoType));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes all event listeners bound to the remote video track and clears\\r\\n     * any related timeouts.\\r\\n     *\\r\\n     * @param {JitsiRemoteTrack} remoteTrack - The remote track which is being\\r\\n     * removed from the conference.\\r\\n     */\\r\\n    onRemoteTrackRemoved(remoteTrack) {\\r\\n        if (!remoteTrack.isLocal()\\r\\n                && remoteTrack.getType() === MediaType.VIDEO) {\\r\\n\\r\\n            const endpointId = remoteTrack.getParticipantId();\\r\\n\\r\\n            logger.debug(`Detector on remote track removed: ${endpointId}`);\\r\\n\\r\\n            remoteTrack.off(\\r\\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\\r\\n                this._onSignallingMuteChanged);\\r\\n\\r\\n            this.clearTimeout(endpointId);\\r\\n            this.clearRtcMutedTimestamp(endpointId);\\r\\n\\r\\n            this.figureOutConnectionStatus(endpointId);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if given participant's video is considered frozen.\\r\\n     * @param {JitsiParticipant} participant - The participant.\\r\\n     * @return {boolean} <tt>true</tt> if the video has frozen for given\\r\\n     * participant or <tt>false</tt> when it's either not considered frozen\\r\\n     * (yet) or if freeze detection is not supported by the current browser.\\r\\n     *\\r\\n     * FIXME merge this logic with NO_DATA_FROM_SOURCE event\\r\\n     *       implemented in JitsiLocalTrack by extending the event to\\r\\n     *       the remote track and allowing to set different timeout for\\r\\n     *       local and remote tracks.\\r\\n     *\\r\\n     */\\r\\n    isVideoTrackFrozen(participant) {\\r\\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        const id = participant.getId();\\r\\n        const hasAnyVideoRTCMuted = participant.hasAnyVideoTrackWebRTCMuted();\\r\\n        const rtcMutedTimestamp = this.rtcMutedTimestamp[id];\\r\\n        const timeout = this._getVideoFrozenTimeout(id);\\r\\n\\r\\n        return hasAnyVideoRTCMuted\\r\\n            && typeof rtcMutedTimestamp === 'number'\\r\\n            && (Date.now() - rtcMutedTimestamp) >= timeout;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Goes over every participant and updates connectivity status.\\r\\n     * Should be called when a parameter which affects all of the participants\\r\\n     * is changed (P2P for example).\\r\\n     */\\r\\n    refreshConnectionStatusForAll() {\\r\\n        const participants = this.conference.getParticipants();\\r\\n\\r\\n        for (const participant of participants) {\\r\\n            this.figureOutConnectionStatus(participant.getId());\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Figures out (and updates) the current connectivity status for\\r\\n     * the participant identified by the given id.\\r\\n     *\\r\\n     * @param {string} id - The participant's id (MUC nickname or Colibri endpoint ID).\\r\\n     */\\r\\n    figureOutConnectionStatus(id) {\\r\\n        const participant = this.conference.getParticipantById(id);\\r\\n\\r\\n        if (!participant) {\\r\\n            // Probably the participant is no longer in the conference\\r\\n            // (at the time of writing this code, participant is\\r\\n            // detached from the conference and TRACK_REMOVED events are\\r\\n            // fired),\\r\\n            // so we don't care, but let's print a log message for debugging purposes.\\r\\n            logger.debug(`figure out conn status - no participant for: ${id}`);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const inP2PMode = this.conference.isP2PActive();\\r\\n        const isRestoringTimedOut = this._isRestoringTimedout(id);\\r\\n        const audioOnlyMode = this.rtc.getLastN() === 0;\\r\\n\\r\\n        // NOTE Overriding videoMuted to true for audioOnlyMode should disable\\r\\n        // any detection based on video playback or the last N.\\r\\n        const isVideoMuted = participant.isVideoMuted() || audioOnlyMode;\\r\\n        const isVideoTrackFrozen = this.isVideoTrackFrozen(participant);\\r\\n        const isInLastN = this.rtc.isInLastN(id);\\r\\n        let isConnActiveByJvb = this.connStatusFromJvb[id];\\r\\n\\r\\n        if (typeof isConnActiveByJvb !== 'boolean') {\\r\\n            // If no status was received from the JVB it means that it's active\\r\\n            // (the bridge does not send notification unless there is a problem)\\r\\n            logger.debug('Assuming connection active by JVB - no notification');\\r\\n            isConnActiveByJvb = true;\\r\\n        }\\r\\n\\r\\n        const newState\\r\\n            = inP2PMode\\r\\n                ? ParticipantConnectionStatusHandler._getNewStateForP2PMode(\\r\\n                    isVideoMuted,\\r\\n                    isVideoTrackFrozen)\\r\\n                : ParticipantConnectionStatusHandler._getNewStateForJvbMode(\\r\\n                    isConnActiveByJvb,\\r\\n                    isInLastN,\\r\\n                    isRestoringTimedOut,\\r\\n                    isVideoMuted,\\r\\n                    isVideoTrackFrozen);\\r\\n\\r\\n        // if the new state is not restoring clear timers and timestamps\\r\\n        // that we use to track the restoring state\\r\\n        if (newState !== ParticipantConnectionStatus.RESTORING) {\\r\\n            this._clearRestoringTimer(id);\\r\\n        }\\r\\n\\r\\n        logger.debug(\\r\\n            `Figure out conn status for ${id}, is video muted: ${\\r\\n                isVideoMuted} is active(jvb): ${\\r\\n                isConnActiveByJvb} video track frozen: ${\\r\\n                isVideoTrackFrozen} p2p mode: ${\\r\\n                inP2PMode} is in last N: ${\\r\\n                isInLastN} currentStatus => newStatus: ${\\r\\n                participant.getConnectionStatus()} => ${newState}`);\\r\\n\\r\\n        const oldConnectionStatus = this.connectionStatusMap[id] || {};\\r\\n\\r\\n        // Send an analytics event (guard on either the p2p flag or the connection status has changed\\r\\n        // since the last time this code block run).\\r\\n        if (!('p2p' in oldConnectionStatus)\\r\\n            || !('connectionStatus' in oldConnectionStatus)\\r\\n            || oldConnectionStatus.p2p !== inP2PMode\\r\\n            || oldConnectionStatus.connectionStatus !== newState) {\\r\\n\\r\\n            const nowMs = Date.now();\\r\\n\\r\\n            this.maybeSendParticipantConnectionStatusEvent(id, nowMs);\\r\\n\\r\\n            this.connectionStatusMap[id] = {\\r\\n                ...oldConnectionStatus,\\r\\n                connectionStatus: newState,\\r\\n                p2p: inP2PMode,\\r\\n                startedMs: nowMs\\r\\n            };\\r\\n\\r\\n            // sometimes (always?) we're late to hook the TRACK_VIDEOTYPE_CHANGED event and the\\r\\n            // video type is not in oldConnectionStatus.\\r\\n            if (!('videoType' in this.connectionStatusMap[id])) {\\r\\n                const videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\\r\\n\\r\\n                if (Array.isArray(videoTracks) && videoTracks.length !== 0) {\\r\\n                    this.connectionStatusMap[id].videoType = videoTracks[0].videoType;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        this._changeConnectionStatus(participant, newState);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Computes the duration of the current connection status for the participant with the specified id (i.e. 15 seconds\\r\\n     * in the INTERRUPTED state) and sends a participant connection status event.\\r\\n     * @param {string} id - The jid of the participant.\\r\\n     * @param {Number} nowMs - The current time (in millis).\\r\\n     * @returns {void}\\r\\n     */\\r\\n    maybeSendParticipantConnectionStatusEvent(id, nowMs) {\\r\\n        const participantConnectionStatus = this.connectionStatusMap[id];\\r\\n\\r\\n        if (participantConnectionStatus\\r\\n            && 'startedMs' in participantConnectionStatus\\r\\n            && 'videoType' in participantConnectionStatus\\r\\n            && 'connectionStatus' in participantConnectionStatus\\r\\n            && 'p2p' in participantConnectionStatus) {\\r\\n            participantConnectionStatus.value = nowMs - participantConnectionStatus.startedMs;\\r\\n            Statistics.sendAnalytics(\\r\\n                createParticipantConnectionStatusEvent(participantConnectionStatus));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * On change in Last N set check all leaving and entering participants to\\r\\n     * change their corresponding statuses.\\r\\n     *\\r\\n     * @param {Array<string>} leavingLastN - The array of ids leaving lastN.\\r\\n     * @param {Array<string>} enteringLastN - The array of ids entering lastN.\\r\\n     * @private\\r\\n     */\\r\\n    _onLastNChanged(leavingLastN = [], enteringLastN = []) {\\r\\n        const now = Date.now();\\r\\n\\r\\n        logger.debug(\\r\\n            'leaving/entering lastN', leavingLastN, enteringLastN, now);\\r\\n\\r\\n        for (const id of leavingLastN) {\\r\\n            this.enteredLastNTimestamp.delete(id);\\r\\n            this._clearRestoringTimer(id);\\r\\n            this.figureOutConnectionStatus(id);\\r\\n        }\\r\\n        for (const id of enteringLastN) {\\r\\n            // store the timestamp this id is entering lastN\\r\\n            this.enteredLastNTimestamp.set(id, now);\\r\\n            this.figureOutConnectionStatus(id);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Clears the restoring timer for participant's video track and the\\r\\n     * timestamp for entering lastN.\\r\\n     *\\r\\n     * @param {string} participantId - The id of the conference participant which\\r\\n     * is the same as the Colibri endpoint ID of the video channel allocated for\\r\\n     * the user on the videobridge.\\r\\n     */\\r\\n    _clearRestoringTimer(participantId) {\\r\\n        const rTimer = this.restoringTimers.get(participantId);\\r\\n\\r\\n        if (rTimer) {\\r\\n            clearTimeout(rTimer);\\r\\n            this.restoringTimers.delete(participantId);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether a track had stayed enough in restoring state, compares\\r\\n     * current time and the time the track entered in lastN. If it hasn't\\r\\n     * timedout and there is no timer added, add new timer in order to give it\\r\\n     * more time to become active or mark it as interrupted on next check.\\r\\n     *\\r\\n     * @param {string} participantId - The id of the conference participant which\\r\\n     * is the same as the Colibri endpoint ID of the video channel allocated for\\r\\n     * the user on the videobridge.\\r\\n     * @returns {boolean} <tt>true</tt> if the track was in restoring state\\r\\n     * more than the timeout ({@link DEFAULT_RESTORING_TIMEOUT}.) in order to\\r\\n     * set its status to interrupted.\\r\\n     * @private\\r\\n     */\\r\\n    _isRestoringTimedout(participantId) {\\r\\n        const enteredLastNTimestamp\\r\\n            = this.enteredLastNTimestamp.get(participantId);\\r\\n\\r\\n        if (enteredLastNTimestamp\\r\\n            && (Date.now() - enteredLastNTimestamp)\\r\\n                >= DEFAULT_RESTORING_TIMEOUT) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        // still haven't reached timeout, if there is no timer scheduled,\\r\\n        // schedule one so we can track the restoring state and change it after\\r\\n        // reaching the timeout\\r\\n        const rTimer = this.restoringTimers.get(participantId);\\r\\n\\r\\n        if (!rTimer) {\\r\\n            this.restoringTimers.set(participantId, setTimeout(\\r\\n                () => this.figureOutConnectionStatus(participantId),\\r\\n                DEFAULT_RESTORING_TIMEOUT));\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends a last/final participant connection status event for the participant that left the conference.\\r\\n     * @param {string} id - The id of the participant that left the conference.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    onUserLeft(id) {\\r\\n        this.maybeSendParticipantConnectionStatusEvent(id, Date.now());\\r\\n        delete this.connectionStatusMap[id];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles RTC 'onmute' event for the video track.\\r\\n     *\\r\\n     * @param {JitsiRemoteTrack} track - The video track for which 'onmute' event\\r\\n     * will be processed.\\r\\n     */\\r\\n    onTrackRtcMuted(track) {\\r\\n        const participantId = track.getParticipantId();\\r\\n        const participant = this.conference.getParticipantById(participantId);\\r\\n\\r\\n        logger.debug(`Detector track RTC muted: ${participantId}`, Date.now());\\r\\n        if (!participant) {\\r\\n            logger.error(`No participant for id: ${participantId}`);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n        this.rtcMutedTimestamp[participantId] = Date.now();\\r\\n        if (!participant.isVideoMuted()) {\\r\\n            // If the user is not muted according to the signalling we'll give\\r\\n            // it some time, before the connection interrupted event is\\r\\n            // triggered.\\r\\n            this.clearTimeout(participantId);\\r\\n\\r\\n            // The timeout is reduced when user is not in the last N\\r\\n            const timeout = this._getVideoFrozenTimeout(participantId);\\r\\n\\r\\n            this.trackTimers[participantId] = window.setTimeout(() => {\\r\\n                logger.debug(\\r\\n                    `Set RTC mute timeout for: ${participantId}\\\\\\r\\n                     of ${timeout} ms`);\\r\\n                this.clearTimeout(participantId);\\r\\n                this.figureOutConnectionStatus(participantId);\\r\\n            }, timeout);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles RTC 'onunmute' event for the video track.\\r\\n     *\\r\\n     * @param {JitsiRemoteTrack} track - The video track for which 'onunmute'\\r\\n     * event will be processed.\\r\\n     */\\r\\n    onTrackRtcUnmuted(track) {\\r\\n        const participantId = track.getParticipantId();\\r\\n\\r\\n        logger.debug(\\r\\n            `Detector track RTC unmuted: ${participantId}`, Date.now());\\r\\n\\r\\n        this.clearTimeout(participantId);\\r\\n        this.clearRtcMutedTimestamp(participantId);\\r\\n\\r\\n        this.figureOutConnectionStatus(participantId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Here the signalling \\\"mute\\\"/\\\"unmute\\\" events are processed.\\r\\n     *\\r\\n     * @param {JitsiRemoteTrack} track - The remote video track for which\\r\\n     * the signalling mute/unmute event will be processed.\\r\\n     */\\r\\n    onSignallingMuteChanged(track) {\\r\\n        const participantId = track.getParticipantId();\\r\\n\\r\\n        logger.debug(\\r\\n            `Detector on track signalling mute changed: ${participantId}`,\\r\\n            track.isMuted());\\r\\n\\r\\n        this.figureOutConnectionStatus(participantId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends a participant connection status event as a result of the video type\\r\\n     * changing.\\r\\n     * @param {JitsiRemoteTrack} track - The track.\\r\\n     * @param {VideoType} type - The video type.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    onTrackVideoTypeChanged(track, type) {\\r\\n        const id = track.getParticipantId();\\r\\n        const nowMs = Date.now();\\r\\n\\r\\n        this.maybeSendParticipantConnectionStatusEvent(id, nowMs);\\r\\n\\r\\n        this.connectionStatusMap[id] = {\\r\\n            ...this.connectionStatusMap[id] || {},\\r\\n            videoType: type,\\r\\n            startedMs: nowMs\\r\\n        };\\r\\n    }\\r\\n}\\r\\n\",\"/**\\r\\n * A collection of utility functions for taking in XML and parsing it to return\\r\\n * certain values.\\r\\n */\\r\\nexport default {\\r\\n    /**\\r\\n     * Parses the presence update of the focus and returns an object with the\\r\\n     * statuses related to recording.\\r\\n     *\\r\\n     * @param {Node} presence - An XMPP presence update.\\r\\n     * @returns {Object} The current presence values related to recording.\\r\\n     */\\r\\n    getFocusRecordingUpdate(presence) {\\r\\n        const jibriStatus = presence\\r\\n            && presence.getElementsByTagName('jibri-recording-status')[0];\\r\\n\\r\\n        if (!jibriStatus) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        return {\\r\\n            error: jibriStatus.getAttribute('failure_reason'),\\r\\n            recordingMode: jibriStatus.getAttribute('recording_mode'),\\r\\n            sessionID: jibriStatus.getAttribute('session_id'),\\r\\n            status: jibriStatus.getAttribute('status')\\r\\n        };\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Parses the presence update from a hidden domain participant and returns\\r\\n     * an object with the statuses related to recording.\\r\\n     *\\r\\n     * @param {Node} presence - An XMPP presence update.\\r\\n     * @returns {Object} The current presence values related to recording.\\r\\n     */\\r\\n    getHiddenDomainUpdate(presence) {\\r\\n        const liveStreamViewURLContainer\\r\\n            = presence.getElementsByTagName('live-stream-view-url')[0];\\r\\n        const liveStreamViewURL = liveStreamViewURLContainer\\r\\n            && liveStreamViewURLContainer.textContent;\\r\\n        const modeContainer\\r\\n            = presence.getElementsByTagName('mode')[0];\\r\\n        const mode = modeContainer\\r\\n            && modeContainer.textContent\\r\\n            && modeContainer.textContent.toLowerCase();\\r\\n        const sessionIDContainer\\r\\n            = presence.getElementsByTagName('session_id')[0];\\r\\n        const sessionID\\r\\n            = sessionIDContainer && sessionIDContainer.textContent;\\r\\n\\r\\n        return {\\r\\n            liveStreamViewURL,\\r\\n            mode,\\r\\n            sessionID\\r\\n        };\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Returns the recording session ID from a successful IQ.\\r\\n     *\\r\\n     * @param {Node} response - The response from the IQ.\\r\\n     * @returns {string} The session ID of the recording session.\\r\\n     */\\r\\n    getSessionIdFromIq(response) {\\r\\n        const jibri = response && response.getElementsByTagName('jibri')[0];\\r\\n\\r\\n        return jibri && jibri.getAttribute('session_id');\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Returns the recording session ID from a presence, if it exists.\\r\\n     *\\r\\n     * @param {Node} presence - An XMPP presence update.\\r\\n     * @returns {string|undefined} The session ID of the recording session.\\r\\n     */\\r\\n    getSessionId(presence) {\\r\\n        const sessionIdContainer\\r\\n            = presence.getElementsByTagName('session_id')[0];\\r\\n        const sessionId = sessionIdContainer && sessionIdContainer.textContent;\\r\\n\\r\\n        return sessionId;\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Returns whether or not a presence is from the focus.\\r\\n     *\\r\\n     * @param {Node} presence - An XMPP presence update.\\r\\n     * @returns {boolean} True if the presence is from the focus.\\r\\n     */\\r\\n    isFromFocus(presence) {\\r\\n        return presence.getAttribute('from').includes('focus');\\r\\n    }\\r\\n};\\r\\n\",\"var g;\\n\\n// This works in non-strict mode\\ng = (function() {\\n\\treturn this;\\n})();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || new Function(\\\"return this\\\")();\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif (typeof window === \\\"object\\\") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it's\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;\\n\",\"/* global __filename, $ */\\r\\n\\r\\nimport {\\r\\n    ICE_DURATION,\\r\\n    ICE_STATE_CHANGED\\r\\n} from '../../service/statistics/AnalyticsEvents';\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport { $iq, Strophe } from 'strophe.js';\\r\\nimport { integerHash } from '../util/StringUtils';\\r\\n\\r\\nimport JingleSession from './JingleSession';\\r\\nimport * as JingleSessionState from './JingleSessionState';\\r\\nimport SDP from './SDP';\\r\\nimport SDPDiffer from './SDPDiffer';\\r\\nimport SDPUtil from './SDPUtil';\\r\\nimport SignalingLayerImpl from './SignalingLayerImpl';\\r\\n\\r\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\r\\nimport Statistics from '../statistics/statistics';\\r\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\r\\nimport AsyncQueue from '../util/AsyncQueue';\\r\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Constant tells how long we're going to wait for IQ response, before timeout\\r\\n * error is  triggered.\\r\\n * @type {number}\\r\\n */\\r\\nconst IQ_TIMEOUT = 10000;\\r\\n\\r\\n/*\\r\\n * The default number of samples (per stat) to keep when webrtc stats gathering\\r\\n * is enabled in TraceablePeerConnection.\\r\\n */\\r\\nconst DEFAULT_MAX_STATS = 300;\\r\\n\\r\\n/**\\r\\n * @typedef {Object} JingleSessionPCOptions\\r\\n * @property {Object} abTesting - A/B testing related options (ask George).\\r\\n * @property {boolean} abTesting.enableSuspendVideoTest - enables the suspend\\r\\n * video test ?(ask George).\\r\\n * @property {boolean} disableH264 - Described in the config.js[1].\\r\\n * @property {boolean} disableRtx - Described in the config.js[1].\\r\\n * @property {boolean} disableSimulcast - Described in the config.js[1].\\r\\n * @property {boolean} enableLayerSuspension - Described in the config.js[1].\\r\\n * @property {boolean} failICE - it's an option used in the tests. Set to\\r\\n * <tt>true</tt> to block any real candidates and make the ICE fail.\\r\\n * @property {boolean} gatherStats - Described in the config.js[1].\\r\\n * @property {object} p2p - Peer to peer related options (FIXME those could be\\r\\n * fetched from config.p2p on the upper level).\\r\\n * @property {boolean} p2p.disableH264 - Described in the config.js[1].\\r\\n * @property {boolean} p2p.preferH264 - Described in the config.js[1].\\r\\n * @property {boolean} preferH264 - Described in the config.js[1].\\r\\n * @property {Object} testing - Testing and/or experimental options.\\r\\n * @property {boolean} testing.enableFirefoxSimulcast - Described in the\\r\\n * config.js[1].\\r\\n * @property {boolean} webrtcIceUdpDisable - Described in the config.js[1].\\r\\n * @property {boolean} webrtcIceTcpDisable - Described in the config.js[1].\\r\\n *\\r\\n * [1]: https://github.com/jitsi/jitsi-meet/blob/master/config.js\\r\\n */\\r\\n/**\\r\\n *\\r\\n */\\r\\nexport default class JingleSessionPC extends JingleSession {\\r\\n    /**\\r\\n     * Parses 'senders' attribute of the video content.\\r\\n     * @param {jQuery} jingleContents\\r\\n     * @return {string|null} one of the values of content \\\"senders\\\" attribute\\r\\n     * defined by Jingle. If there is no \\\"senders\\\" attribute or if the value is\\r\\n     * invalid then <tt>null</tt> will be returned.\\r\\n     * @private\\r\\n     */\\r\\n    static parseVideoSenders(jingleContents) {\\r\\n        const videoContents = jingleContents.find('>content[name=\\\"video\\\"]');\\r\\n\\r\\n        if (videoContents.length) {\\r\\n            const senders = videoContents[0].getAttribute('senders');\\r\\n\\r\\n            if (senders === 'both'\\r\\n                || senders === 'initiator'\\r\\n                || senders === 'responder'\\r\\n                || senders === 'none') {\\r\\n                return senders;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    /**\\r\\n     * Creates new <tt>JingleSessionPC</tt>\\r\\n     * @param {string} sid the Jingle Session ID - random string which\\r\\n     * identifies the session\\r\\n     * @param {string} localJid our JID\\r\\n     * @param {string} remoteJid remote peer JID\\r\\n     * @param {Strophe.Connection} connection Strophe XMPP connection instance\\r\\n     * used to send packets.\\r\\n     * @param mediaConstraints the media constraints object passed to\\r\\n     * createOffer/Answer, as defined by the WebRTC standard\\r\\n     * @param iceConfig the ICE servers config object as defined by the WebRTC\\r\\n     * standard.\\r\\n     * @param {boolean} isP2P indicates whether this instance is\\r\\n     * meant to be used in a direct, peer to peer connection or <tt>false</tt>\\r\\n     * if it's a JVB connection.\\r\\n     * @param {boolean} isInitiator indicates if it will be the side which\\r\\n     * initiates the session.\\r\\n     * @constructor\\r\\n     *\\r\\n     * @implements {SignalingLayer}\\r\\n     */\\r\\n    constructor(\\r\\n            sid,\\r\\n            localJid,\\r\\n            remoteJid,\\r\\n            connection,\\r\\n            mediaConstraints,\\r\\n            iceConfig,\\r\\n            isP2P,\\r\\n            isInitiator) {\\r\\n        super(\\r\\n            sid,\\r\\n            localJid,\\r\\n            remoteJid, connection, mediaConstraints, iceConfig, isInitiator);\\r\\n\\r\\n        /**\\r\\n         * The bridge session's identifier. One Jingle session can during\\r\\n         * it's lifetime participate in multiple bridge sessions managed by\\r\\n         * Jicofo. A new bridge session is started whenever Jicofo sends\\r\\n         * 'session-initiate' or 'transport-replace'.\\r\\n         *\\r\\n         * @type {?string}\\r\\n         * @private\\r\\n         */\\r\\n        this._bridgeSessionId = null;\\r\\n\\r\\n        /**\\r\\n         * Stores result of {@link window.performance.now()} at the time when\\r\\n         * ICE enters 'checking' state.\\r\\n         * @type {number|null} null if no value has been stored yet\\r\\n         * @private\\r\\n         */\\r\\n        this._iceCheckingStartedTimestamp = null;\\r\\n\\r\\n        /**\\r\\n         * Stores result of {@link window.performance.now()} at the time when\\r\\n         * first ICE candidate is spawned by the peerconnection to mark when\\r\\n         * ICE gathering started. That's, because ICE gathering state changed\\r\\n         * events are not supported by most of the browsers, so we try something\\r\\n         * that will work everywhere. It may not be as accurate, but given that\\r\\n         * 'host' candidate usually comes first, the delay should be minimal.\\r\\n         * @type {number|null} null if no value has been stored yet\\r\\n         * @private\\r\\n         */\\r\\n        this._gatheringStartedTimestamp = null;\\r\\n\\r\\n        /**\\r\\n         * Indicates whether or not this session is willing to send/receive\\r\\n         * video media. When set to <tt>false</tt> the underlying peer\\r\\n         * connection will disable local video transfer and the remote peer will\\r\\n         * be will be asked to stop sending video via 'content-modify' IQ\\r\\n         * (the senders attribute of video contents will be adjusted\\r\\n         * accordingly). Note that this notification is sent only in P2P\\r\\n         * session, because Jicofo does not support it yet. Obviously when\\r\\n         * the value is changed from <tt>false</tt> to <tt>true</tt> another\\r\\n         * notification will be sent to resume video transfer on the remote\\r\\n         * side.\\r\\n         * @type {boolean}\\r\\n         * @private\\r\\n         */\\r\\n        this._localVideoActive = true;\\r\\n\\r\\n        /**\\r\\n         * Indicates whether or not the remote peer has video transfer active.\\r\\n         * When set to <tt>true</tt> it means that remote peer is neither\\r\\n         * sending nor willing to receive video. In such case we'll ask\\r\\n         * our peerconnection to stop sending video by calling\\r\\n         * {@link TraceablePeerConnection.setVideoTransferActive} with\\r\\n         * <tt>false</tt>.\\r\\n         * @type {boolean}\\r\\n         * @private\\r\\n         */\\r\\n        this._remoteVideoActive = true;\\r\\n\\r\\n        /**\\r\\n         * Marks that ICE gathering duration has been reported already. That\\r\\n         * prevents reporting it again, after eventual 'transport-replace' (JVB\\r\\n         * conference migration/ICE restart).\\r\\n         * @type {boolean}\\r\\n         * @private\\r\\n         */\\r\\n        this._gatheringReported = false;\\r\\n\\r\\n        this.lasticecandidate = false;\\r\\n        this.closed = false;\\r\\n\\r\\n        /**\\r\\n         * Indicates whether or not this <tt>JingleSessionPC</tt> is used in\\r\\n         * a peer to peer type of session.\\r\\n         * @type {boolean} <tt>true</tt> if it's a peer to peer\\r\\n         * session or <tt>false</tt> if it's a JVB session\\r\\n         */\\r\\n        this.isP2P = isP2P;\\r\\n\\r\\n        /**\\r\\n         * The signaling layer implementation.\\r\\n         * @type {SignalingLayerImpl}\\r\\n         */\\r\\n        this.signalingLayer = new SignalingLayerImpl();\\r\\n\\r\\n        /**\\r\\n         * The queue used to serialize operations done on the peerconnection.\\r\\n         *\\r\\n         * @type {AsyncQueue}\\r\\n         */\\r\\n        this.modificationQueue = new AsyncQueue();\\r\\n\\r\\n        /**\\r\\n         * Flag used to guarantee that the connection established event is\\r\\n         * triggered just once.\\r\\n         * @type {boolean}\\r\\n         */\\r\\n        this.wasConnected = false;\\r\\n\\r\\n        /**\\r\\n         * Keeps track of how long (in ms) it took from ICE start to ICE\\r\\n         * connect.\\r\\n         *\\r\\n         * @type {number}\\r\\n         */\\r\\n        this.establishmentDuration = undefined;\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Checks whether or not this session instance is still operational.\\r\\n     * @private\\r\\n     * @returns {boolean} {@code true} if operation or {@code false} otherwise.\\r\\n     */\\r\\n    _assertNotEnded() {\\r\\n        return this.state !== JingleSessionState.ENDED;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @inheritDoc\\r\\n     * @param {JingleSessionPCOptions} options  - a set of config options.\\r\\n     */\\r\\n    doInitialize(options) {\\r\\n        this.failICE = Boolean(options.failICE);\\r\\n        this.lasticecandidate = false;\\r\\n        this.options = options;\\r\\n\\r\\n        /**\\r\\n         * {@code true} if reconnect is in progress.\\r\\n         * @type {boolean}\\r\\n         */\\r\\n        this.isReconnect = false;\\r\\n\\r\\n        /**\\r\\n         * Set to {@code true} if the connection was ever stable\\r\\n         * @type {boolean}\\r\\n         */\\r\\n        this.wasstable = false;\\r\\n        this.webrtcIceUdpDisable = Boolean(options.webrtcIceUdpDisable);\\r\\n        this.webrtcIceTcpDisable = Boolean(options.webrtcIceTcpDisable);\\r\\n\\r\\n        const pcOptions = { disableRtx: options.disableRtx };\\r\\n\\r\\n        if (options.gatherStats) {\\r\\n            pcOptions.maxstats = DEFAULT_MAX_STATS;\\r\\n        }\\r\\n\\r\\n        if (this.isP2P) {\\r\\n            // simulcast needs to be disabled for P2P (121) calls\\r\\n            pcOptions.disableSimulcast = true;\\r\\n            pcOptions.disableH264 = options.p2p && options.p2p.disableH264;\\r\\n            pcOptions.preferH264 = options.p2p && options.p2p.preferH264;\\r\\n\\r\\n            const abtestSuspendVideo = this._abtestSuspendVideoEnabled(options);\\r\\n\\r\\n            if (typeof abtestSuspendVideo !== 'undefined') {\\r\\n                pcOptions.abtestSuspendVideo = abtestSuspendVideo;\\r\\n            }\\r\\n        } else {\\r\\n            // H264 does not support simulcast, so it needs to be disabled.\\r\\n            pcOptions.disableSimulcast\\r\\n                = options.disableSimulcast\\r\\n                    || (options.preferH264 && !options.disableH264);\\r\\n            pcOptions.preferH264 = options.preferH264;\\r\\n            pcOptions.enableFirefoxSimulcast\\r\\n                = options.testing && options.testing.enableFirefoxSimulcast;\\r\\n            pcOptions.enableLayerSuspension = options.enableLayerSuspension;\\r\\n        }\\r\\n\\r\\n        if (options.startSilent) {\\r\\n            pcOptions.startSilent = true;\\r\\n        }\\r\\n\\r\\n        this.peerconnection\\r\\n            = this.rtc.createPeerConnection(\\r\\n                    this.signalingLayer,\\r\\n                    this.iceConfig,\\r\\n                    this.isP2P,\\r\\n                    pcOptions);\\r\\n\\r\\n        this.peerconnection.onicecandidate = ev => {\\r\\n            if (!ev) {\\r\\n                // There was an incomplete check for ev before which left\\r\\n                // the last line of the function unprotected from a potential\\r\\n                // throw of an exception. Consequently, it may be argued that\\r\\n                // the check is unnecessary. Anyway, I'm leaving it and making\\r\\n                // the check complete.\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            // XXX this is broken, candidate is not parsed.\\r\\n            const candidate = ev.candidate;\\r\\n            const now = window.performance.now();\\r\\n\\r\\n            if (candidate) {\\r\\n                if (this._gatheringStartedTimestamp === null) {\\r\\n                    this._gatheringStartedTimestamp = now;\\r\\n                }\\r\\n\\r\\n                // Discard candidates of disabled protocols.\\r\\n                let protocol = candidate.protocol;\\r\\n\\r\\n                if (typeof protocol === 'string') {\\r\\n                    protocol = protocol.toLowerCase();\\r\\n                    if (protocol === 'tcp' || protocol === 'ssltcp') {\\r\\n                        if (this.webrtcIceTcpDisable) {\\r\\n                            return;\\r\\n                        }\\r\\n                    } else if (protocol === 'udp') {\\r\\n                        if (this.webrtcIceUdpDisable) {\\r\\n                            return;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            } else if (!this._gatheringReported) {\\r\\n                // End of gathering\\r\\n                Statistics.sendAnalytics(\\r\\n                    ICE_DURATION,\\r\\n                    {\\r\\n                        phase: 'gathering',\\r\\n                        value: now - this._gatheringStartedTimestamp,\\r\\n                        p2p: this.isP2P,\\r\\n                        initiator: this.isInitiator\\r\\n                    });\\r\\n                this._gatheringReported = true;\\r\\n            }\\r\\n            this.sendIceCandidate(candidate);\\r\\n        };\\r\\n\\r\\n        // Note there is a change in the spec about closed:\\r\\n        // This value moved into the RTCPeerConnectionState enum in\\r\\n        // the May 13, 2016 draft of the specification, as it reflects the state\\r\\n        // of the RTCPeerConnection, not the signaling connection. You now\\r\\n        // detect a closed connection by checking for connectionState to be\\r\\n        // \\\"closed\\\" instead.\\r\\n        // I suppose at some point this will be moved to onconnectionstatechange\\r\\n        this.peerconnection.onsignalingstatechange = () => {\\r\\n            if (this.peerconnection.signalingState === 'stable') {\\r\\n                this.wasstable = true;\\r\\n            } else if (this.peerconnection.signalingState === 'closed'\\r\\n                || this.peerconnection.connectionState === 'closed') {\\r\\n                this.room.eventEmitter.emit(XMPPEvents.SUSPEND_DETECTED, this);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * The oniceconnectionstatechange event handler contains the code to\\r\\n         * execute when the iceconnectionstatechange event, of type Event,\\r\\n         * is received by this RTCPeerConnection. Such an event is sent when\\r\\n         * the value of RTCPeerConnection.iceConnectionState changes.\\r\\n         */\\r\\n        this.peerconnection.oniceconnectionstatechange = () => {\\r\\n            const now = window.performance.now();\\r\\n\\r\\n            if (!this.isP2P) {\\r\\n                this.room.connectionTimes[\\r\\n                    `ice.state.${this.peerconnection.iceConnectionState}`]\\r\\n                    = now;\\r\\n            }\\r\\n            logger.log(\\r\\n                `(TIME) ICE ${this.peerconnection.iceConnectionState}`\\r\\n                    + ` P2P? ${this.isP2P}:\\\\t`,\\r\\n                now);\\r\\n\\r\\n            Statistics.sendAnalytics(\\r\\n                ICE_STATE_CHANGED,\\r\\n                {\\r\\n                    p2p: this.isP2P,\\r\\n                    state: this.peerconnection.iceConnectionState,\\r\\n                    'signaling_state': this.peerconnection.signalingState,\\r\\n                    reconnect: this.isReconnect,\\r\\n                    value: now\\r\\n                });\\r\\n\\r\\n            this.room.eventEmitter.emit(\\r\\n                XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\\r\\n                this,\\r\\n                this.peerconnection.iceConnectionState);\\r\\n            switch (this.peerconnection.iceConnectionState) {\\r\\n            case 'checking':\\r\\n                this._iceCheckingStartedTimestamp = now;\\r\\n                break;\\r\\n            case 'connected':\\r\\n                // Informs interested parties that the connection has been\\r\\n                // restored.\\r\\n                if (this.peerconnection.signalingState === 'stable') {\\r\\n                    if (this.isReconnect) {\\r\\n                        this.room.eventEmitter.emit(\\r\\n                            XMPPEvents.CONNECTION_RESTORED, this);\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (!this.wasConnected && this.wasstable) {\\r\\n\\r\\n                    Statistics.sendAnalytics(\\r\\n                        ICE_DURATION,\\r\\n                        {\\r\\n                            phase: 'checking',\\r\\n                            value: now - this._iceCheckingStartedTimestamp,\\r\\n                            p2p: this.isP2P,\\r\\n                            initiator: this.isInitiator\\r\\n                        });\\r\\n\\r\\n                    // Switch between ICE gathering and ICE checking whichever\\r\\n                    // started first (scenarios are different for initiator\\r\\n                    // vs responder)\\r\\n                    const iceStarted\\r\\n                        = Math.min(\\r\\n                            this._iceCheckingStartedTimestamp,\\r\\n                            this._gatheringStartedTimestamp);\\r\\n\\r\\n                    this.establishmentDuration = now - iceStarted;\\r\\n\\r\\n                    Statistics.sendAnalytics(\\r\\n                        ICE_DURATION,\\r\\n                        {\\r\\n                            phase: 'establishment',\\r\\n                            value: this.establishmentDuration,\\r\\n                            p2p: this.isP2P,\\r\\n                            initiator: this.isInitiator\\r\\n                        });\\r\\n\\r\\n                    this.wasConnected = true;\\r\\n                    this.room.eventEmitter.emit(\\r\\n                        XMPPEvents.CONNECTION_ESTABLISHED, this);\\r\\n                }\\r\\n                this.isReconnect = false;\\r\\n                break;\\r\\n            case 'disconnected':\\r\\n                this.isReconnect = true;\\r\\n\\r\\n                // Informs interested parties that the connection has been\\r\\n                // interrupted.\\r\\n                if (this.wasstable) {\\r\\n                    this.room.eventEmitter.emit(\\r\\n                        XMPPEvents.CONNECTION_INTERRUPTED, this);\\r\\n                }\\r\\n                break;\\r\\n            case 'failed':\\r\\n                this.room.eventEmitter.emit(\\r\\n                    XMPPEvents.CONNECTION_ICE_FAILED, this);\\r\\n                break;\\r\\n            }\\r\\n        };\\r\\n        this.peerconnection.onnegotiationneeded = () => {\\r\\n            this.room.eventEmitter.emit(XMPPEvents.PEERCONNECTION_READY, this);\\r\\n        };\\r\\n\\r\\n        // The signaling layer will bind it's listeners at this point\\r\\n        this.signalingLayer.setChatRoom(this.room);\\r\\n\\r\\n        if (!this.isP2P && options.enableLayerSuspension) {\\r\\n            // If this is the bridge session, we'll listen for\\r\\n            // IS_SELECTED_CHANGED events and notify the peer connection\\r\\n            this.rtc.addListener(RTCEvents.IS_SELECTED_CHANGED,\\r\\n                isSelected => {\\r\\n                    this.peerconnection.setIsSelected(isSelected);\\r\\n                    logger.info('Doing local O/A due to '\\r\\n                        + 'IS_SELECTED_CHANGED event');\\r\\n                    this.modificationQueue.push(finishedCallback => {\\r\\n                        this._renegotiate()\\r\\n                            .then(finishedCallback)\\r\\n                            .catch(finishedCallback);\\r\\n                    });\\r\\n                }\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends given candidate in Jingle 'transport-info' message.\\r\\n     * @param {RTCIceCandidate} candidate the WebRTC ICE candidate instance\\r\\n     * @private\\r\\n     */\\r\\n    sendIceCandidate(candidate) {\\r\\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\\r\\n\\r\\n        if (candidate && !this.lasticecandidate) {\\r\\n            const ice\\r\\n                = SDPUtil.iceparams(\\r\\n                    localSDP.media[candidate.sdpMLineIndex], localSDP.session);\\r\\n            const jcand = SDPUtil.candidateToJingle(candidate.candidate);\\r\\n\\r\\n            if (!(ice && jcand)) {\\r\\n                const errorMesssage = 'failed to get ice && jcand';\\r\\n\\r\\n                GlobalOnErrorHandler.callErrorHandler(new Error(errorMesssage));\\r\\n                logger.error(errorMesssage);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n            ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\\r\\n\\r\\n            if (this.usedrip) {\\r\\n                if (this.dripContainer.length === 0) {\\r\\n                    // start 20ms callout\\r\\n                    setTimeout(() => {\\r\\n                        if (this.dripContainer.length === 0) {\\r\\n                            return;\\r\\n                        }\\r\\n                        this.sendIceCandidates(this.dripContainer);\\r\\n                        this.dripContainer = [];\\r\\n                    }, 20);\\r\\n                }\\r\\n                this.dripContainer.push(candidate);\\r\\n            } else {\\r\\n                this.sendIceCandidates([ candidate ]);\\r\\n            }\\r\\n        } else {\\r\\n            logger.log('sendIceCandidate: last candidate.');\\r\\n\\r\\n            // FIXME: remember to re-think in ICE-restart\\r\\n            this.lasticecandidate = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends given candidates in Jingle 'transport-info' message.\\r\\n     * @param {Array<RTCIceCandidate>} candidates an array of the WebRTC ICE\\r\\n     * candidate instances\\r\\n     * @private\\r\\n     */\\r\\n    sendIceCandidates(candidates) {\\r\\n        if (!this._assertNotEnded('sendIceCandidates')) {\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        logger.log('sendIceCandidates', candidates);\\r\\n        const cand = $iq({ to: this.remoteJid,\\r\\n            type: 'set' })\\r\\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\\r\\n                action: 'transport-info',\\r\\n                initiator: this.initiatorJid,\\r\\n                sid: this.sid });\\r\\n\\r\\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\\r\\n\\r\\n        for (let mid = 0; mid < localSDP.media.length; mid++) {\\r\\n            const cands = candidates.filter(el => el.sdpMLineIndex === mid);\\r\\n            const mline\\r\\n                = SDPUtil.parseMLine(localSDP.media[mid].split('\\\\r\\\\n')[0]);\\r\\n\\r\\n            if (cands.length > 0) {\\r\\n                const ice\\r\\n                    = SDPUtil.iceparams(localSDP.media[mid], localSDP.session);\\r\\n\\r\\n                ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\\r\\n                cand.c('content', {\\r\\n                    creator: this.initiatorJid === this.localJid\\r\\n                        ? 'initiator' : 'responder',\\r\\n                    name: cands[0].sdpMid ? cands[0].sdpMid : mline.media\\r\\n                }).c('transport', ice);\\r\\n                for (let i = 0; i < cands.length; i++) {\\r\\n                    const candidate\\r\\n                        = SDPUtil.candidateToJingle(cands[i].candidate);\\r\\n\\r\\n                    // Mangle ICE candidate if 'failICE' test option is enabled\\r\\n\\r\\n                    if (this.failICE) {\\r\\n                        candidate.ip = '1.1.1.1';\\r\\n                    }\\r\\n                    cand.c('candidate', candidate).up();\\r\\n                }\\r\\n\\r\\n                // add fingerprint\\r\\n                const fingerprintLine\\r\\n                    = SDPUtil.findLine(\\r\\n                        localSDP.media[mid],\\r\\n                        'a=fingerprint:', localSDP.session);\\r\\n\\r\\n                if (fingerprintLine) {\\r\\n                    const tmp = SDPUtil.parseFingerprint(fingerprintLine);\\r\\n\\r\\n                    tmp.required = true;\\r\\n                    cand.c(\\r\\n                        'fingerprint',\\r\\n                        { xmlns: 'urn:xmpp:jingle:apps:dtls:0' })\\r\\n                        .t(tmp.fingerprint);\\r\\n                    delete tmp.fingerprint;\\r\\n                    cand.attrs(tmp);\\r\\n                    cand.up();\\r\\n                }\\r\\n                cand.up(); // transport\\r\\n                cand.up(); // content\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // might merge last-candidate notification into this, but it is called\\r\\n        // a lot later. See webrtc issue #2340\\r\\n        // logger.log('was this the last candidate', this.lasticecandidate);\\r\\n        this.connection.sendIQ(\\r\\n            cand, null, this.newJingleErrorHandler(cand), IQ_TIMEOUT);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends Jingle 'session-info' message which includes custom Jitsi Meet\\r\\n     * 'ice-state' element with the text value 'failed' to let Jicofo know\\r\\n     * that the ICE connection has entered the failed state. It can then\\r\\n     * choose to re-create JVB channels and send 'transport-replace' to\\r\\n     * retry the connection.\\r\\n     */\\r\\n    sendIceFailedNotification() {\\r\\n        const sessionInfo\\r\\n            = $iq({\\r\\n                to: this.remoteJid,\\r\\n                type: 'set' })\\r\\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\\r\\n                action: 'session-info',\\r\\n                initiator: this.initiatorJid,\\r\\n                sid: this.sid })\\r\\n            .c('ice-state', { xmlns: 'http://jitsi.org/protocol/focus' })\\r\\n            .t('failed')\\r\\n            .up();\\r\\n\\r\\n        this._bridgeSessionId\\r\\n            && sessionInfo.c(\\r\\n                'bridge-session', {\\r\\n                    xmlns: 'http://jitsi.org/protocol/focus',\\r\\n                    id: this._bridgeSessionId\\r\\n                });\\r\\n\\r\\n        this.connection.sendIQ(\\r\\n            sessionInfo,\\r\\n            null,\\r\\n            this.newJingleErrorHandler(sessionInfo),\\r\\n            /*\\r\\n             * This message will be often sent when there are connectivity\\r\\n             * issues, so make it slightly longer than Prosody's default BOSH\\r\\n             * inactivity timeout of 60 seconds.\\r\\n             */ 65);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * {@inheritDoc}\\r\\n     */\\r\\n    addIceCandidates(elem) {\\r\\n        if (this.peerconnection.signalingState === 'closed') {\\r\\n            logger.warn('Ignored add ICE candidate when in closed state');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const iceCandidates = [];\\r\\n\\r\\n        elem.find('>content>transport>candidate')\\r\\n            .each((idx, candidate) => {\\r\\n                let line = SDPUtil.candidateFromJingle(candidate);\\r\\n\\r\\n                line = line.replace('\\\\r\\\\n', '').replace('a=', '');\\r\\n\\r\\n                // FIXME this code does not care to handle\\r\\n                // non-bundle transport\\r\\n                const rtcCandidate = new RTCIceCandidate({\\r\\n                    sdpMLineIndex: 0,\\r\\n\\r\\n                    // FF comes up with more complex names like audio-23423,\\r\\n                    // Given that it works on both Chrome and FF without\\r\\n                    // providing it, let's leave it like this for the time\\r\\n                    // being...\\r\\n                    // sdpMid: 'audio',\\r\\n                    sdpMid: '',\\r\\n                    candidate: line\\r\\n                });\\r\\n\\r\\n                iceCandidates.push(rtcCandidate);\\r\\n            });\\r\\n\\r\\n        if (!iceCandidates.length) {\\r\\n            logger.error(\\r\\n                'No ICE candidates to add ?', elem[0] && elem[0].outerHTML);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // We want to have this task queued, so that we know it is executed,\\r\\n        // after the initial sRD/sLD offer/answer cycle was done (based on\\r\\n        // the assumption that candidates are spawned after the offer/answer\\r\\n        // and XMPP preserves order).\\r\\n        const workFunction = finishedCallback => {\\r\\n            for (const iceCandidate of iceCandidates) {\\r\\n                this.peerconnection.addIceCandidate(iceCandidate)\\r\\n                    .then(\\r\\n                        () => logger.debug('addIceCandidate ok!'),\\r\\n                        err => logger.error('addIceCandidate failed!', err));\\r\\n            }\\r\\n\\r\\n            finishedCallback();\\r\\n        };\\r\\n\\r\\n        logger.debug(\\r\\n            `Queued add (${iceCandidates.length}) ICE candidates task...`);\\r\\n        this.modificationQueue.push(workFunction);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param contents\\r\\n     */\\r\\n    readSsrcInfo(contents) {\\r\\n        const ssrcs\\r\\n            = $(contents).find(\\r\\n                '>description>'\\r\\n                    + 'source[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]');\\r\\n\\r\\n        ssrcs.each((i, ssrcElement) => {\\r\\n            const ssrc = Number(ssrcElement.getAttribute('ssrc'));\\r\\n\\r\\n            if (this.isP2P) {\\r\\n                // In P2P all SSRCs are owner by the remote peer\\r\\n                this.signalingLayer.setSSRCOwner(\\r\\n                    ssrc, Strophe.getResourceFromJid(this.remoteJid));\\r\\n            } else {\\r\\n                $(ssrcElement)\\r\\n                    .find('>ssrc-info[xmlns=\\\"http://jitsi.org/jitmeet\\\"]')\\r\\n                    .each((i3, ssrcInfoElement) => {\\r\\n                        const owner = ssrcInfoElement.getAttribute('owner');\\r\\n\\r\\n                        if (owner && owner.length) {\\r\\n                            if (isNaN(ssrc) || ssrc < 0) {\\r\\n                                logger.warn(\\r\\n                                    `Invalid SSRC ${ssrc} value received`\\r\\n                                        + ` for ${owner}`);\\r\\n                            } else {\\r\\n                                this.signalingLayer.setSSRCOwner(\\r\\n                                    ssrc,\\r\\n                                    Strophe.getResourceFromJid(owner));\\r\\n                            }\\r\\n                        }\\r\\n                    });\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Makes the underlying TraceablePeerConnection generate new SSRC for\\r\\n     * the recvonly video stream.\\r\\n     * @deprecated\\r\\n     */\\r\\n    generateRecvonlySsrc() {\\r\\n        if (this.peerconnection) {\\r\\n            this.peerconnection.generateRecvonlySsrc();\\r\\n        } else {\\r\\n            logger.error(\\r\\n                'Unable to generate recvonly SSRC - no peerconnection');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n    /**\\r\\n     * Accepts incoming Jingle 'session-initiate' and should send\\r\\n     * 'session-accept' in result.\\r\\n     * @param jingleOffer jQuery selector pointing to the jingle element of\\r\\n     * the offer IQ\\r\\n     * @param success callback called when we accept incoming session\\r\\n     * successfully and receive RESULT packet to 'session-accept' sent.\\r\\n     * @param failure function(error) called if for any reason we fail to accept\\r\\n     * the incoming offer. 'error' argument can be used to log some details\\r\\n     * about the error.\\r\\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\\r\\n     * the local tracks that will be added, before the offer/answer cycle\\r\\n     * executes. We allow the localTracks to optionally be passed in so that\\r\\n     * the addition of the local tracks and the processing of the initial offer\\r\\n     * can all be done atomically. We want to make sure that any other\\r\\n     * operations which originate in the XMPP Jingle messages related with\\r\\n     * this session to be executed with an assumption that the initial\\r\\n     * offer/answer cycle has been executed already.\\r\\n     */\\r\\n    acceptOffer(jingleOffer, success, failure, localTracks) {\\r\\n        this.setOfferAnswerCycle(\\r\\n            jingleOffer,\\r\\n            () => {\\r\\n                // FIXME we may not care about RESULT packet for session-accept\\r\\n                // then we should either call 'success' here immediately or\\r\\n                // modify sendSessionAccept method to do that\\r\\n                this.sendSessionAccept(success, failure);\\r\\n            },\\r\\n            failure,\\r\\n            localTracks);\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Creates an offer and sends Jingle 'session-initiate' to the remote peer.\\r\\n     * @param {Array<JitsiLocalTrack>} localTracks the local tracks that will be\\r\\n     * added, before the offer/answer cycle executes (for the local track\\r\\n     * addition to be an atomic operation together with the offer/answer).\\r\\n     */\\r\\n    invite(localTracks) {\\r\\n        if (!this.isInitiator) {\\r\\n            throw new Error('Trying to invite from the responder session');\\r\\n        }\\r\\n        const workFunction = finishedCallback => {\\r\\n            for (const localTrack of localTracks) {\\r\\n                this.peerconnection.addTrack(localTrack);\\r\\n            }\\r\\n            this.peerconnection.createOffer(this.mediaConstraints)\\r\\n                .then(offerSdp => {\\r\\n                    this.peerconnection.setLocalDescription(offerSdp)\\r\\n                        .then(() => {\\r\\n                            // NOTE that the offer is obtained from\\r\\n                            // the localDescription getter as it needs to go\\r\\n                            // though the transformation chain.\\r\\n                            this.sendSessionInitiate(\\r\\n                                this.peerconnection.localDescription.sdp);\\r\\n                            finishedCallback();\\r\\n                        }, error => {\\r\\n                            logger.error(\\r\\n                                'Failed to set local SDP', error, offerSdp);\\r\\n                            finishedCallback(error);\\r\\n                        });\\r\\n                }, error => {\\r\\n                    logger.error(\\r\\n                        'Failed to create an offer',\\r\\n                        error,\\r\\n                        this.mediaConstraints);\\r\\n                    finishedCallback(error);\\r\\n                });\\r\\n        };\\r\\n\\r\\n        this.modificationQueue.push(\\r\\n            workFunction,\\r\\n            error => {\\r\\n                if (error) {\\r\\n                    logger.error('invite error', error);\\r\\n                } else {\\r\\n                    logger.debug('invite executed - OK');\\r\\n                }\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends 'session-initiate' to the remote peer.\\r\\n     *\\r\\n     * NOTE this method is synchronous and we're not waiting for the RESULT\\r\\n     * response which would delay the startup process.\\r\\n     *\\r\\n     * @param {string} offerSdp  - The local session description which will be\\r\\n     * used to generate an offer.\\r\\n     * @private\\r\\n     */\\r\\n    sendSessionInitiate(offerSdp) {\\r\\n        let init = $iq({\\r\\n            to: this.remoteJid,\\r\\n            type: 'set'\\r\\n        }).c('jingle', {\\r\\n            xmlns: 'urn:xmpp:jingle:1',\\r\\n            action: 'session-initiate',\\r\\n            initiator: this.initiatorJid,\\r\\n            sid: this.sid\\r\\n        });\\r\\n\\r\\n        new SDP(offerSdp).toJingle(\\r\\n            init,\\r\\n            this.isInitiator ? 'initiator' : 'responder');\\r\\n        init = init.tree();\\r\\n        logger.info('Session-initiate: ', init);\\r\\n        this.connection.sendIQ(init,\\r\\n            () => {\\r\\n                logger.info('Got RESULT for \\\"session-initiate\\\"');\\r\\n            },\\r\\n            error => {\\r\\n                logger.error('\\\"session-initiate\\\" error', error);\\r\\n            },\\r\\n            IQ_TIMEOUT);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the answer received from the remote peer.\\r\\n     * @param jingleAnswer\\r\\n     */\\r\\n    setAnswer(jingleAnswer) {\\r\\n        if (!this.isInitiator) {\\r\\n            throw new Error('Trying to set an answer on the responder session');\\r\\n        }\\r\\n        this.setOfferAnswerCycle(\\r\\n            jingleAnswer,\\r\\n            () => {\\r\\n                logger.info('setAnswer - succeeded');\\r\\n            },\\r\\n            error => {\\r\\n                logger.error('setAnswer failed: ', error);\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n    /**\\r\\n     * This is a setRemoteDescription/setLocalDescription cycle which starts at\\r\\n     * converting Strophe Jingle IQ into remote offer SDP. Once converted\\r\\n     * setRemoteDescription, createAnswer and setLocalDescription calls follow.\\r\\n     * @param jingleOfferAnswerIq jQuery selector pointing to the jingle element\\r\\n     *        of the offer (or answer) IQ\\r\\n     * @param success callback called when sRD/sLD cycle finishes successfully.\\r\\n     * @param failure callback called with an error object as an argument if we\\r\\n     *        fail at any point during setRD, createAnswer, setLD.\\r\\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\\r\\n     * the local tracks that will be added, before the offer/answer cycle\\r\\n     * executes (for the local track addition to be an atomic operation together\\r\\n     * with the offer/answer).\\r\\n     */\\r\\n    setOfferAnswerCycle(jingleOfferAnswerIq, success, failure, localTracks) {\\r\\n        const workFunction = finishedCallback => {\\r\\n\\r\\n            if (localTracks) {\\r\\n                for (const track of localTracks) {\\r\\n                    this.peerconnection.addTrack(track);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            const newRemoteSdp\\r\\n                = this._processNewJingleOfferIq(jingleOfferAnswerIq);\\r\\n            const oldLocalSdp\\r\\n                = this.peerconnection.localDescription.sdp;\\r\\n\\r\\n            const bridgeSession\\r\\n                = $(jingleOfferAnswerIq)\\r\\n                    .find('>bridge-session['\\r\\n                        + 'xmlns=\\\"http://jitsi.org/protocol/focus\\\"]');\\r\\n            const bridgeSessionId = bridgeSession.attr('id');\\r\\n\\r\\n            if (bridgeSessionId !== this._bridgeSessionId) {\\r\\n                this._bridgeSessionId = bridgeSessionId;\\r\\n            }\\r\\n\\r\\n            this._renegotiate(newRemoteSdp.raw)\\r\\n                .then(() => {\\r\\n                    if (this.state === JingleSessionState.PENDING) {\\r\\n                        this.state = JingleSessionState.ACTIVE;\\r\\n\\r\\n                        // Sync up video transfer active/inactive only after\\r\\n                        // the initial O/A cycle. We want to adjust the video\\r\\n                        // media direction only in the local SDP and the Jingle\\r\\n                        // contents direction included in the initial\\r\\n                        // offer/answer is mapped to the remote SDP. Jingle\\r\\n                        // 'content-modify' IQ is processed in a way that it\\r\\n                        // will only modify local SDP when remote peer is no\\r\\n                        // longer interested in receiving video content.\\r\\n                        // Changing media direction in the remote SDP will mess\\r\\n                        // up our SDP translation chain (simulcast, video mute,\\r\\n                        // RTX etc.)\\r\\n                        if (this.isP2P && !this._localVideoActive) {\\r\\n                            this.sendContentModify(this._localVideoActive);\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    // Old local SDP will be available when we're setting answer\\r\\n                    // for the first time, but not when offer and it's fine\\r\\n                    // since we're generating an answer now it will contain all\\r\\n                    // our SSRCs\\r\\n                    if (oldLocalSdp) {\\r\\n                        const newLocalSdp\\r\\n                            = new SDP(this.peerconnection.localDescription.sdp);\\r\\n\\r\\n                        this.notifyMySSRCUpdate(\\r\\n                            new SDP(oldLocalSdp), newLocalSdp);\\r\\n                    }\\r\\n\\r\\n                    finishedCallback();\\r\\n                }, error => {\\r\\n                    logger.error(\\r\\n                        `Error renegotiating after setting new remote ${\\r\\n                            this.isInitiator ? 'answer: ' : 'offer: '}${error}`,\\r\\n                        newRemoteSdp);\\r\\n\\r\\n                    finishedCallback(error);\\r\\n                });\\r\\n        };\\r\\n\\r\\n        this.modificationQueue.push(\\r\\n            workFunction,\\r\\n            error => {\\r\\n                error ? failure(error) : success();\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Although it states \\\"replace transport\\\" it does accept full Jingle offer\\r\\n     * which should contain new ICE transport details.\\r\\n     * @param jingleOfferElem an element Jingle IQ that contains new offer and\\r\\n     *        transport info.\\r\\n     * @param success callback called when we succeed to accept new offer.\\r\\n     * @param failure function(error) called when we fail to accept new offer.\\r\\n     */\\r\\n    replaceTransport(jingleOfferElem, success, failure) {\\r\\n        this.room.eventEmitter.emit(XMPPEvents.ICE_RESTARTING, this);\\r\\n\\r\\n        // We need to first reject the 'data' section to have the SCTP stack\\r\\n        // cleaned up to signal the known data channel is now invalid. After\\r\\n        // that the original offer is set to have the SCTP connection\\r\\n        // established with the new bridge.\\r\\n        const originalOffer = jingleOfferElem.clone();\\r\\n\\r\\n        jingleOfferElem\\r\\n            .find('>content[name=\\\\'data\\\\']')\\r\\n            .attr('senders', 'rejected');\\r\\n\\r\\n        // Remove all remote sources in order to reset the client's state\\r\\n        // for the remote MediaStreams. When a conference is moved to\\r\\n        // another bridge it will start streaming with a sequence number\\r\\n        // that is not in sync with the most recently seen by the client.\\r\\n        // The symptoms include frozen or black video and lots of \\\"failed to\\r\\n        // unprotect SRTP packets\\\" in Chrome logs.\\r\\n        jingleOfferElem\\r\\n            .find('>content>description>source')\\r\\n            .remove();\\r\\n        jingleOfferElem\\r\\n            .find('>content>description>ssrc-group')\\r\\n            .remove();\\r\\n\\r\\n        // On the JVB it's not a real ICE restart and all layers are re-initialized from scratch as Jicofo does\\r\\n        // the restart by re-allocating new channels. Chrome (or WebRTC stack) needs to have the DTLS transport layer\\r\\n        // reset to start a new handshake with fresh DTLS transport on the bridge. Make it think that the DTLS\\r\\n        // fingerprint has changed by setting an all zeros key.\\r\\n        const newFingerprint = jingleOfferElem.find('>content>transport>fingerprint');\\r\\n\\r\\n        newFingerprint.attr('hash', 'sha-1');\\r\\n        newFingerprint.text('00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00');\\r\\n\\r\\n        // First set an offer with a rejected 'data' section\\r\\n        this.setOfferAnswerCycle(\\r\\n            jingleOfferElem,\\r\\n            () => {\\r\\n                // Now set the original offer(with the 'data' section)\\r\\n                this.setOfferAnswerCycle(\\r\\n                    originalOffer,\\r\\n                    () => {\\r\\n                        const localSDP\\r\\n                            = new SDP(this.peerconnection.localDescription.sdp);\\r\\n\\r\\n                        this.sendTransportAccept(localSDP, success, failure);\\r\\n\\r\\n                        this.room.eventEmitter.emit(\\r\\n                            XMPPEvents.ICE_RESTART_SUCCESS,\\r\\n                            this,\\r\\n                            originalOffer);\\r\\n                    },\\r\\n                    failure);\\r\\n            },\\r\\n            failure\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends Jingle 'session-accept' message.\\r\\n     * @param {function()} success callback called when we receive 'RESULT'\\r\\n     *        packet for the 'session-accept'\\r\\n     * @param {function(error)} failure called when we receive an error response\\r\\n     *        or when the request has timed out.\\r\\n     * @private\\r\\n     */\\r\\n    sendSessionAccept(success, failure) {\\r\\n        // NOTE: since we're just reading from it, we don't need to be within\\r\\n        //  the modification queue to access the local description\\r\\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\\r\\n        let accept = $iq({ to: this.remoteJid,\\r\\n            type: 'set' })\\r\\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\\r\\n                action: 'session-accept',\\r\\n                initiator: this.initiatorJid,\\r\\n                responder: this.responderJid,\\r\\n                sid: this.sid });\\r\\n\\r\\n        if (this.webrtcIceTcpDisable) {\\r\\n            localSDP.removeTcpCandidates = true;\\r\\n        }\\r\\n        if (this.webrtcIceUdpDisable) {\\r\\n            localSDP.removeUdpCandidates = true;\\r\\n        }\\r\\n        if (this.failICE) {\\r\\n            localSDP.failICE = true;\\r\\n        }\\r\\n        localSDP.toJingle(\\r\\n            accept,\\r\\n            this.initiatorJid === this.localJid ? 'initiator' : 'responder',\\r\\n            null);\\r\\n\\r\\n        // Calling tree() to print something useful\\r\\n        accept = accept.tree();\\r\\n        logger.info('Sending session-accept', accept);\\r\\n        this.connection.sendIQ(accept,\\r\\n            success,\\r\\n            this.newJingleErrorHandler(accept, error => {\\r\\n                failure(error);\\r\\n\\r\\n                // 'session-accept' is a critical timeout and we'll\\r\\n                // have to restart\\r\\n                this.room.eventEmitter.emit(\\r\\n                    XMPPEvents.SESSION_ACCEPT_TIMEOUT, this);\\r\\n            }),\\r\\n            IQ_TIMEOUT);\\r\\n\\r\\n        // XXX Videobridge needs WebRTC's answer (ICE ufrag and pwd, DTLS\\r\\n        // fingerprint and setup) ASAP in order to start the connection\\r\\n        // establishment.\\r\\n        //\\r\\n        // FIXME Flushing the connection at this point triggers an issue with\\r\\n        // BOSH request handling in Prosody on slow connections.\\r\\n        //\\r\\n        // The problem is that this request will be quite large and it may take\\r\\n        // time before it reaches Prosody. In the meantime Strophe may decide\\r\\n        // to send the next one. And it was observed that a small request with\\r\\n        // 'transport-info' usually follows this one. It does reach Prosody\\r\\n        // before the previous one was completely received. 'rid' on the server\\r\\n        // is increased and Prosody ignores the request with 'session-accept'.\\r\\n        // It will never reach Jicofo and everything in the request table is\\r\\n        // lost. Removing the flush does not guarantee it will never happen, but\\r\\n        // makes it much less likely('transport-info' is bundled with\\r\\n        // 'session-accept' and any immediate requests).\\r\\n        //\\r\\n        // this.connection.flush();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Will send 'content-modify' IQ in order to ask the remote peer to\\r\\n     * either stop or resume sending video media.\\r\\n     * @param {boolean} videoTransferActive <tt>false</tt> to let the other peer\\r\\n     * know that we're not sending nor interested in receiving video contents.\\r\\n     * When set to <tt>true</tt> remote peer will be asked to resume video\\r\\n     * transfer.\\r\\n     * @private\\r\\n     */\\r\\n    sendContentModify(videoTransferActive) {\\r\\n        const newSendersValue = videoTransferActive ? 'both' : 'none';\\r\\n\\r\\n        const sessionModify\\r\\n            = $iq({\\r\\n                to: this.remoteJid,\\r\\n                type: 'set'\\r\\n            })\\r\\n                .c('jingle', {\\r\\n                    xmlns: 'urn:xmpp:jingle:1',\\r\\n                    action: 'content-modify',\\r\\n                    initiator: this.initiatorJid,\\r\\n                    sid: this.sid\\r\\n                })\\r\\n                .c('content', {\\r\\n                    name: 'video',\\r\\n                    senders: newSendersValue\\r\\n                });\\r\\n\\r\\n        logger.info(\\r\\n            `Sending content-modify, video senders: ${newSendersValue}`);\\r\\n\\r\\n        this.connection.sendIQ(\\r\\n            sessionModify,\\r\\n            null,\\r\\n            this.newJingleErrorHandler(sessionModify),\\r\\n            IQ_TIMEOUT);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends Jingle 'transport-accept' message which is a response to\\r\\n     * 'transport-replace'.\\r\\n     * @param localSDP the 'SDP' object with local session description\\r\\n     * @param success callback called when we receive 'RESULT' packet for\\r\\n     *        'transport-replace'\\r\\n     * @param failure function(error) called when we receive an error response\\r\\n     *        or when the request has timed out.\\r\\n     * @private\\r\\n     */\\r\\n    sendTransportAccept(localSDP, success, failure) {\\r\\n        let transportAccept = $iq({ to: this.remoteJid,\\r\\n            type: 'set' })\\r\\n            .c('jingle', {\\r\\n                xmlns: 'urn:xmpp:jingle:1',\\r\\n                action: 'transport-accept',\\r\\n                initiator: this.initiatorJid,\\r\\n                sid: this.sid\\r\\n            });\\r\\n\\r\\n        localSDP.media.forEach((medialines, idx) => {\\r\\n            const mline = SDPUtil.parseMLine(medialines.split('\\\\r\\\\n')[0]);\\r\\n\\r\\n            transportAccept.c('content',\\r\\n                {\\r\\n                    creator:\\r\\n                        this.initiatorJid === this.localJid\\r\\n                            ? 'initiator'\\r\\n                            : 'responder',\\r\\n                    name: mline.media\\r\\n                }\\r\\n            );\\r\\n            localSDP.transportToJingle(idx, transportAccept);\\r\\n            transportAccept.up();\\r\\n        });\\r\\n\\r\\n        // Calling tree() to print something useful to the logger\\r\\n        transportAccept = transportAccept.tree();\\r\\n        logger.info('Sending transport-accept: ', transportAccept);\\r\\n\\r\\n        this.connection.sendIQ(transportAccept,\\r\\n            success,\\r\\n            this.newJingleErrorHandler(transportAccept, failure),\\r\\n            IQ_TIMEOUT);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends Jingle 'transport-reject' message which is a response to\\r\\n     * 'transport-replace'.\\r\\n     * @param success callback called when we receive 'RESULT' packet for\\r\\n     *        'transport-replace'\\r\\n     * @param failure function(error) called when we receive an error response\\r\\n     *        or when the request has timed out.\\r\\n     *\\r\\n     * FIXME method should be marked as private, but there's some spaghetti that\\r\\n     *       needs to be fixed prior doing that\\r\\n     */\\r\\n    sendTransportReject(success, failure) {\\r\\n        // Send 'transport-reject', so that the focus will\\r\\n        // know that we've failed\\r\\n        let transportReject = $iq({ to: this.remoteJid,\\r\\n            type: 'set' })\\r\\n            .c('jingle', {\\r\\n                xmlns: 'urn:xmpp:jingle:1',\\r\\n                action: 'transport-reject',\\r\\n                initiator: this.initiatorJid,\\r\\n                sid: this.sid\\r\\n            });\\r\\n\\r\\n        transportReject = transportReject.tree();\\r\\n        logger.info('Sending \\\\'transport-reject', transportReject);\\r\\n\\r\\n        this.connection.sendIQ(transportReject,\\r\\n            success,\\r\\n            this.newJingleErrorHandler(transportReject, failure),\\r\\n            IQ_TIMEOUT);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @inheritDoc\\r\\n     */\\r\\n    terminate(success, failure, options) {\\r\\n        if (this.state === JingleSessionState.ENDED) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (!options || Boolean(options.sendSessionTerminate)) {\\r\\n            let sessionTerminate\\r\\n                = $iq({\\r\\n                    to: this.remoteJid,\\r\\n                    type: 'set'\\r\\n                })\\r\\n                    .c('jingle', {\\r\\n                        xmlns: 'urn:xmpp:jingle:1',\\r\\n                        action: 'session-terminate',\\r\\n                        initiator: this.initiatorJid,\\r\\n                        sid: this.sid\\r\\n                    })\\r\\n                    .c('reason')\\r\\n                    .c((options && options.reason) || 'success');\\r\\n\\r\\n            if (options && options.reasonDescription) {\\r\\n                sessionTerminate.up()\\r\\n                    .c('text')\\r\\n                    .t(options.reasonDescription);\\r\\n            }\\r\\n\\r\\n            // Calling tree() to print something useful\\r\\n            sessionTerminate = sessionTerminate.tree();\\r\\n            logger.info('Sending session-terminate', sessionTerminate);\\r\\n            this.connection.sendIQ(\\r\\n                sessionTerminate,\\r\\n                success,\\r\\n                this.newJingleErrorHandler(sessionTerminate, failure),\\r\\n                IQ_TIMEOUT);\\r\\n        } else {\\r\\n            logger.info(`Skipped sending session-terminate for ${this}`);\\r\\n        }\\r\\n\\r\\n        // this should result in 'onTerminated' being called by strope.jingle.js\\r\\n        this.connection.jingle.terminate(this.sid);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param reasonCondition\\r\\n     * @param reasonText\\r\\n     */\\r\\n    onTerminated(reasonCondition, reasonText) {\\r\\n        // Do something with reason and reasonCondition when we start to care\\r\\n        // this.reasonCondition = reasonCondition;\\r\\n        // this.reasonText = reasonText;\\r\\n        logger.info(`Session terminated ${this}`, reasonCondition, reasonText);\\r\\n\\r\\n        this.close();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Parse the information from the xml sourceAddElem and translate it\\r\\n     *  into sdp lines\\r\\n     * @param {jquery xml element} sourceAddElem the source-add\\r\\n     *  element from jingle\\r\\n     * @param {SDP object} currentRemoteSdp the current remote\\r\\n     *  sdp (as of this new source-add)\\r\\n     * @returns {list} a list of SDP line strings that should\\r\\n     *  be added to the remote SDP\\r\\n     */\\r\\n    _parseSsrcInfoFromSourceAdd(sourceAddElem, currentRemoteSdp) {\\r\\n        const addSsrcInfo = [];\\r\\n\\r\\n        $(sourceAddElem).each((i1, content) => {\\r\\n            const name = $(content).attr('name');\\r\\n            let lines = '';\\r\\n\\r\\n            $(content)\\r\\n                .find('ssrc-group[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]')\\r\\n                .each(function() {\\r\\n                    // eslint-disable-next-line no-invalid-this\\r\\n                    const semantics = this.getAttribute('semantics');\\r\\n                    const ssrcs\\r\\n                        = $(this) // eslint-disable-line no-invalid-this\\r\\n                            .find('>source')\\r\\n                            .map(function() {\\r\\n                                // eslint-disable-next-line no-invalid-this\\r\\n                                return this.getAttribute('ssrc');\\r\\n                            })\\r\\n                            .get();\\r\\n\\r\\n                    if (ssrcs.length) {\\r\\n                        lines\\r\\n                            += `a=ssrc-group:${semantics} ${\\r\\n                                ssrcs.join(' ')}\\\\r\\\\n`;\\r\\n                    }\\r\\n                });\\r\\n\\r\\n            // handles both >source and >description>source\\r\\n            const tmp\\r\\n                = $(content).find(\\r\\n                    'source[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]');\\r\\n\\r\\n            /* eslint-disable no-invalid-this */\\r\\n            tmp.each(function() {\\r\\n                const ssrc = $(this).attr('ssrc');\\r\\n\\r\\n                if (currentRemoteSdp.containsSSRC(ssrc)) {\\r\\n                    logger.warn(\\r\\n                        `Source-add request for existing SSRC: ${ssrc}`);\\r\\n\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                // eslint-disable-next-line newline-per-chained-call\\r\\n                $(this).find('>parameter').each(function() {\\r\\n                    lines += `a=ssrc:${ssrc} ${$(this).attr('name')}`;\\r\\n                    if ($(this).attr('value') && $(this).attr('value').length) {\\r\\n                        lines += `:${$(this).attr('value')}`;\\r\\n                    }\\r\\n                    lines += '\\\\r\\\\n';\\r\\n                });\\r\\n            });\\r\\n\\r\\n            /* eslint-enable no-invalid-this */\\r\\n            currentRemoteSdp.media.forEach((media, i2) => {\\r\\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\\r\\n                    return;\\r\\n                }\\r\\n                if (!addSsrcInfo[i2]) {\\r\\n                    addSsrcInfo[i2] = '';\\r\\n                }\\r\\n                addSsrcInfo[i2] += lines;\\r\\n            });\\r\\n        });\\r\\n\\r\\n        return addSsrcInfo;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles a Jingle source-add message for this Jingle session.\\r\\n     * @param elem An array of Jingle \\\"content\\\" elements.\\r\\n     */\\r\\n    addRemoteStream(elem) {\\r\\n        this._addOrRemoveRemoteStream(true /* add */, elem);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles a Jingle source-remove message for this Jingle session.\\r\\n     * @param elem An array of Jingle \\\"content\\\" elements.\\r\\n     */\\r\\n    removeRemoteStream(elem) {\\r\\n        this._addOrRemoveRemoteStream(false /* remove */, elem);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles either Jingle 'source-add' or 'source-remove' message for this\\r\\n     * Jingle session.\\r\\n     * @param {boolean} isAdd <tt>true</tt> for 'source-add' or <tt>false</tt>\\r\\n     * otherwise.\\r\\n     * @param {Array<Element>} elem an array of Jingle \\\"content\\\" elements.\\r\\n     * @private\\r\\n     */\\r\\n    _addOrRemoveRemoteStream(isAdd, elem) {\\r\\n        const logPrefix = isAdd ? 'addRemoteStream' : 'removeRemoteStream';\\r\\n\\r\\n        if (isAdd) {\\r\\n            this.readSsrcInfo(elem);\\r\\n        }\\r\\n\\r\\n        const workFunction = finishedCallback => {\\r\\n            if (!this.peerconnection.localDescription\\r\\n                || !this.peerconnection.localDescription.sdp) {\\r\\n                const errMsg = `${logPrefix} - localDescription not ready yet`;\\r\\n\\r\\n                logger.error(errMsg);\\r\\n                finishedCallback(errMsg);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            logger.log(`Processing ${logPrefix}`);\\r\\n            logger.log(\\r\\n                'ICE connection state: ',\\r\\n                this.peerconnection.iceConnectionState);\\r\\n\\r\\n            const oldLocalSdp\\r\\n                = new SDP(this.peerconnection.localDescription.sdp);\\r\\n            const sdp = new SDP(this.peerconnection.remoteDescription.sdp);\\r\\n            const addOrRemoveSsrcInfo\\r\\n                = isAdd\\r\\n                    ? this._parseSsrcInfoFromSourceAdd(elem, sdp)\\r\\n                    : this._parseSsrcInfoFromSourceRemove(elem, sdp);\\r\\n            const newRemoteSdp\\r\\n                = isAdd\\r\\n                    ? this._processRemoteAddSource(addOrRemoveSsrcInfo)\\r\\n                    : this._processRemoteRemoveSource(addOrRemoveSsrcInfo);\\r\\n\\r\\n            this._renegotiate(newRemoteSdp.raw)\\r\\n                .then(() => {\\r\\n                    const newLocalSdp\\r\\n                        = new SDP(this.peerconnection.localDescription.sdp);\\r\\n\\r\\n                    logger.log(\\r\\n                        `${logPrefix} - OK, SDPs: `, oldLocalSdp, newLocalSdp);\\r\\n                    this.notifyMySSRCUpdate(oldLocalSdp, newLocalSdp);\\r\\n                    finishedCallback();\\r\\n                }, error => {\\r\\n                    logger.error(`${logPrefix} failed:`, error);\\r\\n                    finishedCallback(error);\\r\\n                });\\r\\n        };\\r\\n\\r\\n        // Queue and execute\\r\\n        this.modificationQueue.push(workFunction);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Takes in a jingle offer iq, returns the new sdp offer\\r\\n     * @param {jquery xml element} offerIq the incoming offer\\r\\n     * @returns {SDP object} the jingle offer translated to SDP\\r\\n     */\\r\\n    _processNewJingleOfferIq(offerIq) {\\r\\n        const remoteSdp = new SDP('');\\r\\n\\r\\n        if (this.webrtcIceTcpDisable) {\\r\\n            remoteSdp.removeTcpCandidates = true;\\r\\n        }\\r\\n        if (this.webrtcIceUdpDisable) {\\r\\n            remoteSdp.removeUdpCandidates = true;\\r\\n        }\\r\\n        if (this.failICE) {\\r\\n            remoteSdp.failICE = true;\\r\\n        }\\r\\n\\r\\n        remoteSdp.fromJingle(offerIq);\\r\\n        this.readSsrcInfo($(offerIq).find('>content'));\\r\\n\\r\\n        return remoteSdp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Remove the given ssrc lines from the current remote sdp\\r\\n     * @param {list} removeSsrcInfo a list of SDP line strings that\\r\\n     *  should be removed from the remote SDP\\r\\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\\r\\n     *  in removeSsrcInfo\\r\\n     */\\r\\n    _processRemoteRemoveSource(removeSsrcInfo) {\\r\\n        const remoteSdp = new SDP(this.peerconnection.remoteDescription.sdp);\\r\\n\\r\\n        removeSsrcInfo.forEach((lines, idx) => {\\r\\n            // eslint-disable-next-line no-param-reassign\\r\\n            lines = lines.split('\\\\r\\\\n');\\r\\n            lines.pop(); // remove empty last element;\\r\\n            lines.forEach(line => {\\r\\n                remoteSdp.media[idx]\\r\\n                    = remoteSdp.media[idx].replace(`${line}\\\\r\\\\n`, '');\\r\\n            });\\r\\n        });\\r\\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\\r\\n\\r\\n        return remoteSdp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Add the given ssrc lines to the current remote sdp\\r\\n     * @param {list} addSsrcInfo a list of SDP line strings that\\r\\n     *  should be added to the remote SDP\\r\\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\\r\\n     *  in removeSsrcInfo\\r\\n     */\\r\\n    _processRemoteAddSource(addSsrcInfo) {\\r\\n        const remoteSdp = new SDP(this.peerconnection.remoteDescription.sdp);\\r\\n\\r\\n        addSsrcInfo.forEach((lines, idx) => {\\r\\n            remoteSdp.media[idx] += lines;\\r\\n        });\\r\\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\\r\\n\\r\\n        return remoteSdp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Do a new o/a flow using the existing remote description\\r\\n     * @param {string} [optionalRemoteSdp] optional, raw remote sdp\\r\\n     *  to use.  If not provided, the remote sdp from the\\r\\n     *  peerconnection will be used\\r\\n     * @returns {Promise} promise which resolves when the\\r\\n     *  o/a flow is complete with no arguments or\\r\\n     *  rejects with an error {string}\\r\\n     */\\r\\n    _renegotiate(optionalRemoteSdp) {\\r\\n        if (this.peerconnection.signalingState === 'closed') {\\r\\n            const error = new Error('Attempted to renegotiate in state closed');\\r\\n\\r\\n            this.room.eventEmitter.emit(XMPPEvents.RENEGOTIATION_FAILED, error, this);\\r\\n\\r\\n            return Promise.reject(error);\\r\\n        }\\r\\n\\r\\n        const remoteSdp\\r\\n            = optionalRemoteSdp || this.peerconnection.remoteDescription.sdp;\\r\\n\\r\\n        if (!remoteSdp) {\\r\\n            const error = new Error(`Can not renegotiate without remote description, current state: ${this.state}`);\\r\\n\\r\\n            this.room.eventEmitter.emit(XMPPEvents.RENEGOTIATION_FAILED, error, this);\\r\\n\\r\\n            return Promise.reject(error);\\r\\n        }\\r\\n\\r\\n        const remoteDescription = new RTCSessionDescription({\\r\\n            type: this.isInitiator ? 'answer' : 'offer',\\r\\n            sdp: remoteSdp\\r\\n        });\\r\\n\\r\\n        if (this.isInitiator) {\\r\\n            return this._initiatorRenegotiate(remoteDescription);\\r\\n        }\\r\\n\\r\\n        return this._responderRenegotiate(remoteDescription);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Renegotiate cycle implementation for the responder case.\\r\\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\\r\\n     * which will be used as remote description in the cycle.\\r\\n     * @private\\r\\n     */\\r\\n    _responderRenegotiate(remoteDescription) {\\r\\n        logger.debug('Renegotiate: setting remote description');\\r\\n\\r\\n        return this.peerconnection.setRemoteDescription(remoteDescription)\\r\\n            .then(() => {\\r\\n                logger.debug('Renegotiate: creating answer');\\r\\n\\r\\n                return this.peerconnection.createAnswer(this.mediaConstraints)\\r\\n                    .then(answer => {\\r\\n                        logger.debug('Renegotiate: setting local description');\\r\\n\\r\\n                        return this.peerconnection.setLocalDescription(answer);\\r\\n                    });\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Renegotiate cycle implementation for the initiator's case.\\r\\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\\r\\n     * which will be used as remote description in the cycle.\\r\\n     * @private\\r\\n     */\\r\\n    _initiatorRenegotiate(remoteDescription) {\\r\\n        if (this.peerconnection.signalingState === 'have-local-offer') {\\r\\n            // Skip createOffer and setLocalDescription or FF will fail\\r\\n            logger.debug(\\r\\n                'Renegotiate: setting remote description');\\r\\n\\r\\n            /* eslint-disable arrow-body-style */\\r\\n\\r\\n            return this.peerconnection.setRemoteDescription(remoteDescription)\\r\\n                .then(() => {\\r\\n                    // In case when the answer is being set for the first time,\\r\\n                    // full sRD/sLD cycle is required to have the local\\r\\n                    // description updated and SSRCs synchronized correctly.\\r\\n                    // Otherwise SSRCs for streams added after invite, but\\r\\n                    // before the answer was accepted will not be detected.\\r\\n                    // The reason for that is that renegotiate can not be called\\r\\n                    // when adding tracks and they will not be reflected in\\r\\n                    // the local SDP.\\r\\n                    return this._initiatorRenegotiate(remoteDescription);\\r\\n                });\\r\\n            /* eslint-enable arrow-body-style */\\r\\n        }\\r\\n\\r\\n        logger.debug('Renegotiate: creating offer');\\r\\n\\r\\n        return this.peerconnection.createOffer(this.mediaConstraints)\\r\\n            .then(offer => {\\r\\n                logger.debug('Renegotiate: setting local description');\\r\\n\\r\\n                return this.peerconnection.setLocalDescription(offer)\\r\\n                    .then(() => {\\r\\n                        logger.debug(\\r\\n                            'Renegotiate: setting remote description');\\r\\n\\r\\n                        // eslint-disable-next-line max-len\\r\\n                        return this.peerconnection.setRemoteDescription(remoteDescription);\\r\\n                    });\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> and performs a single\\r\\n     * offer/answer cycle after both operations are done. Either\\r\\n     * <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\\r\\n     * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\\r\\n     * <tt>oldTrack</tt>\\r\\n     * @param {JitsiLocalTrack|null} oldTrack the current track in use to be\\r\\n     * replaced\\r\\n     * @param {JitsiLocalTrack|null} newTrack the new track to use\\r\\n     * @returns {Promise} which resolves once the replacement is complete\\r\\n     *  with no arguments or rejects with an error {string}\\r\\n     */\\r\\n    replaceTrack(oldTrack, newTrack) {\\r\\n        const workFunction = finishedCallback => {\\r\\n            const oldLocalSdp = this.peerconnection.localDescription.sdp;\\r\\n\\r\\n            // NOTE the code below assumes that no more than 1 video track\\r\\n            // can be added to the peer connection.\\r\\n            // Transition from no video to video (possibly screen sharing)\\r\\n            if (!oldTrack && newTrack && newTrack.isVideoTrack()) {\\r\\n                // Clearing current primary SSRC will make\\r\\n                // the SdpConsistency generate a new one which will result\\r\\n                // with:\\r\\n                // 1. source-remove for the recvonly\\r\\n                // 2. source-add for the new video stream\\r\\n                this.peerconnection.clearRecvonlySsrc();\\r\\n\\r\\n            // Transition from video to no video\\r\\n            } else if (oldTrack && oldTrack.isVideoTrack() && !newTrack) {\\r\\n                // Clearing current primary SSRC and generating the recvonly\\r\\n                // will result in:\\r\\n                // 1. source-remove for the old video stream\\r\\n                // 2. source-add for the recvonly stream\\r\\n                this.peerconnection.clearRecvonlySsrc();\\r\\n                this.peerconnection.generateRecvonlySsrc();\\r\\n            }\\r\\n\\r\\n            this.peerconnection.replaceTrack(oldTrack, newTrack)\\r\\n            .then(shouldRenegotiate => {\\r\\n                if (shouldRenegotiate\\r\\n                    && (oldTrack || newTrack)\\r\\n                    && this.state === JingleSessionState.ACTIVE) {\\r\\n                    this._renegotiate()\\r\\n                        .then(() => {\\r\\n                            const newLocalSDP\\r\\n                                = new SDP(\\r\\n                                    this.peerconnection.localDescription.sdp);\\r\\n\\r\\n                            this.notifyMySSRCUpdate(\\r\\n                                new SDP(oldLocalSdp), newLocalSDP);\\r\\n                            finishedCallback();\\r\\n                        },\\r\\n                        finishedCallback /* will be called with en error */);\\r\\n                } else {\\r\\n                    finishedCallback();\\r\\n                }\\r\\n            });\\r\\n        };\\r\\n\\r\\n        return new Promise((resolve, reject) => {\\r\\n            this.modificationQueue.push(\\r\\n                workFunction,\\r\\n                error => {\\r\\n                    if (error) {\\r\\n                        logger.error('Replace track error:', error);\\r\\n                        reject(error);\\r\\n                    } else {\\r\\n                        logger.info('Replace track done!');\\r\\n                        resolve();\\r\\n                    }\\r\\n                });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Parse the information from the xml sourceRemoveElem and translate it\\r\\n     *  into sdp lines\\r\\n     * @param {jquery xml element} sourceRemoveElem the source-remove\\r\\n     *  element from jingle\\r\\n     * @param {SDP object} currentRemoteSdp the current remote\\r\\n     *  sdp (as of this new source-remove)\\r\\n     * @returns {list} a list of SDP line strings that should\\r\\n     *  be removed from the remote SDP\\r\\n     */\\r\\n    _parseSsrcInfoFromSourceRemove(sourceRemoveElem, currentRemoteSdp) {\\r\\n        const removeSsrcInfo = [];\\r\\n\\r\\n        $(sourceRemoveElem).each((i1, content) => {\\r\\n            const name = $(content).attr('name');\\r\\n            let lines = '';\\r\\n\\r\\n            $(content)\\r\\n                .find('ssrc-group[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]')\\r\\n                .each(function() {\\r\\n                    /* eslint-disable no-invalid-this */\\r\\n                    const semantics = this.getAttribute('semantics');\\r\\n                    const ssrcs\\r\\n                        = $(this)\\r\\n                            .find('>source')\\r\\n                            .map(function() {\\r\\n                                return this.getAttribute('ssrc');\\r\\n                            })\\r\\n                            .get();\\r\\n\\r\\n                    if (ssrcs.length) {\\r\\n                        lines\\r\\n                            += `a=ssrc-group:${semantics} ${\\r\\n                                ssrcs.join(' ')}\\\\r\\\\n`;\\r\\n                    }\\r\\n\\r\\n                    /* eslint-enable no-invalid-this */\\r\\n                });\\r\\n            const ssrcs = [];\\r\\n\\r\\n            // handles both >source and >description>source versions\\r\\n            const tmp\\r\\n                = $(content).find(\\r\\n                    'source[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]');\\r\\n\\r\\n            tmp.each(function() {\\r\\n                // eslint-disable-next-line no-invalid-this\\r\\n                const ssrc = $(this).attr('ssrc');\\r\\n\\r\\n                ssrcs.push(ssrc);\\r\\n            });\\r\\n            currentRemoteSdp.media.forEach((media, i2) => {\\r\\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\\r\\n                    return;\\r\\n                }\\r\\n                if (!removeSsrcInfo[i2]) {\\r\\n                    removeSsrcInfo[i2] = '';\\r\\n                }\\r\\n                ssrcs.forEach(ssrc => {\\r\\n                    const ssrcLines\\r\\n                        = SDPUtil.findLines(media, `a=ssrc:${ssrc}`);\\r\\n\\r\\n                    if (ssrcLines.length) {\\r\\n                        removeSsrcInfo[i2] += `${ssrcLines.join('\\\\r\\\\n')}\\\\r\\\\n`;\\r\\n                    }\\r\\n                });\\r\\n                removeSsrcInfo[i2] += lines;\\r\\n            });\\r\\n        });\\r\\n\\r\\n        return removeSsrcInfo;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Will print an error if there is any difference, between the SSRCs given\\r\\n     * in the <tt>oldSDP</tt> and the ones currently described in\\r\\n     * the peerconnection's local description.\\r\\n     * @param {string} operationName the operation's name which will be printed\\r\\n     * in the error message.\\r\\n     * @param {SDP} oldSDP the old local SDP which will be compared with\\r\\n     * the current one.\\r\\n     * @return {boolean} <tt>true</tt> if there was any change or <tt>false</tt>\\r\\n     * otherwise.\\r\\n     * @private\\r\\n     */\\r\\n    _verifyNoSSRCChanged(operationName, oldSDP) {\\r\\n        const currentLocalSDP\\r\\n            = new SDP(this.peerconnection.localDescription.sdp);\\r\\n        let sdpDiff = new SDPDiffer(oldSDP, currentLocalSDP);\\r\\n        const addedMedia = sdpDiff.getNewMedia();\\r\\n\\r\\n        if (Object.keys(addedMedia).length) {\\r\\n            logger.error(\\r\\n                `${this} - some SSRC were added on ${operationName}`,\\r\\n                addedMedia);\\r\\n\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        sdpDiff = new SDPDiffer(currentLocalSDP, oldSDP);\\r\\n        const removedMedia = sdpDiff.getNewMedia();\\r\\n\\r\\n        if (Object.keys(removedMedia).length) {\\r\\n            logger.error(\\r\\n                `${this} - some SSRCs were removed on ${operationName}`,\\r\\n                removedMedia);\\r\\n\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds local track back to this session, as part of the unmute operation.\\r\\n     * @param {JitsiLocalTrack} track\\r\\n     * @return {Promise} a promise that will resolve once the local track is\\r\\n     * added back to this session and renegotiation succeeds. Will be rejected\\r\\n     * with a <tt>string</tt> that provides some error details in case something\\r\\n     * goes wrong.\\r\\n     */\\r\\n    addTrackAsUnmute(track) {\\r\\n        return this._addRemoveTrackAsMuteUnmute(\\r\\n            false /* add as unmute */, track);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Remove local track as part of the mute operation.\\r\\n     * @param {JitsiLocalTrack} track the local track to be removed\\r\\n     * @return {Promise} a promise which will be resolved once the local track\\r\\n     * is removed from this session and the renegotiation is performed.\\r\\n     * The promise will be rejected with a <tt>string</tt> that the describes\\r\\n     * the error if anything goes wrong.\\r\\n     */\\r\\n    removeTrackAsMute(track) {\\r\\n        return this._addRemoveTrackAsMuteUnmute(\\r\\n            true /* remove as mute */, track);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * See {@link addTrackAsUnmute} and {@link removeTrackAsMute}.\\r\\n     * @param {boolean} isMute <tt>true</tt> for \\\"remove as mute\\\" or\\r\\n     * <tt>false</tt> for \\\"add as unmute\\\".\\r\\n     * @param {JitsiLocalTrack} track the track that will be added/removed\\r\\n     * @private\\r\\n     */\\r\\n    _addRemoveTrackAsMuteUnmute(isMute, track) {\\r\\n        if (!track) {\\r\\n            return Promise.reject('invalid \\\"track\\\" argument value');\\r\\n        }\\r\\n        const operationName = isMute ? 'removeTrackMute' : 'addTrackUnmute';\\r\\n        const workFunction = finishedCallback => {\\r\\n            const tpc = this.peerconnection;\\r\\n\\r\\n            if (!tpc) {\\r\\n                finishedCallback(\\r\\n                    `Error:  tried ${operationName} track with no active peer`\\r\\n                        + 'connection');\\r\\n\\r\\n                return;\\r\\n            }\\r\\n            const oldLocalSDP = tpc.localDescription.sdp;\\r\\n            const tpcOperation\\r\\n                = isMute\\r\\n                    ? tpc.removeTrackMute.bind(tpc, track)\\r\\n                    : tpc.addTrackUnmute.bind(tpc, track);\\r\\n\\r\\n            if (!tpcOperation()) {\\r\\n                finishedCallback(`${operationName} failed!`);\\r\\n            } else if (!oldLocalSDP || !tpc.remoteDescription.sdp) {\\r\\n                finishedCallback();\\r\\n            } else {\\r\\n                this._renegotiate()\\r\\n                    .then(() => {\\r\\n                        // The results are ignored, as this check failure is not\\r\\n                        // enough to fail the whole operation. It will log\\r\\n                        // an error inside.\\r\\n                        this._verifyNoSSRCChanged(\\r\\n                            operationName, new SDP(oldLocalSDP));\\r\\n                        finishedCallback();\\r\\n                    },\\r\\n                    finishedCallback /* will be called with an error */);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        return new Promise((resolve, reject) => {\\r\\n            this.modificationQueue.push(\\r\\n                workFunction,\\r\\n                error => {\\r\\n                    if (error) {\\r\\n                        reject(error);\\r\\n                    } else {\\r\\n                        resolve();\\r\\n                    }\\r\\n                });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Resumes or suspends media transfer over the underlying peer connection.\\r\\n     * @param {boolean} audioActive <tt>true</tt> to enable audio media\\r\\n     * transfer or <tt>false</tt> to suspend audio media transmission.\\r\\n     * @param {boolean} videoActive <tt>true</tt> to enable video media\\r\\n     * transfer or <tt>false</tt> to suspend video media transmission.\\r\\n     * @return {Promise} a <tt>Promise</tt> which will resolve once\\r\\n     * the operation is done. It will be rejected with an error description as\\r\\n     * a string in case anything goes wrong.\\r\\n     */\\r\\n    setMediaTransferActive(audioActive, videoActive) {\\r\\n        if (!this.peerconnection) {\\r\\n            return Promise.reject(\\r\\n                'Can not modify transfer active state,'\\r\\n                    + ' before \\\"initialize\\\" is called');\\r\\n        }\\r\\n\\r\\n        const logAudioStr = audioActive ? 'audio active' : 'audio inactive';\\r\\n        const logVideoStr = videoActive ? 'video active' : 'video inactive';\\r\\n\\r\\n        logger.info(`Queued make ${logVideoStr}, ${logAudioStr} task...`);\\r\\n\\r\\n        const workFunction = finishedCallback => {\\r\\n            const isSessionActive = this.state === JingleSessionState.ACTIVE;\\r\\n\\r\\n            // Because the value is modified on the queue it's impossible to\\r\\n            // check it's final value reliably prior to submitting the task.\\r\\n            // The rule here is that the last submitted state counts.\\r\\n            // Check the values here to avoid unnecessary renegotiation cycle.\\r\\n            const audioActiveChanged\\r\\n                = this.peerconnection.setAudioTransferActive(audioActive);\\r\\n\\r\\n            if (this._localVideoActive !== videoActive) {\\r\\n                this._localVideoActive = videoActive;\\r\\n\\r\\n                // Do only for P2P - Jicofo will reply with 'bad-request'\\r\\n                // We don't want to send 'content-modify', before the initial\\r\\n                // O/A (state === JingleSessionState.ACTIVE), because that will\\r\\n                // mess up video media direction in the remote SDP.\\r\\n                // 'content-modify' when processed only affects the media\\r\\n                // direction in the local SDP. We're doing that, because setting\\r\\n                // 'inactive' on video media in remote SDP will mess up our SDP\\r\\n                // translation chain (simulcast, RTX, video mute etc.).\\r\\n                if (this.isP2P && isSessionActive) {\\r\\n                    this.sendContentModify(videoActive);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            const pcVideoActiveChanged\\r\\n                = this.peerconnection.setVideoTransferActive(\\r\\n                    this._localVideoActive && this._remoteVideoActive);\\r\\n\\r\\n            // Will do the sRD/sLD cycle to update SDPs and adjust the media\\r\\n            // direction\\r\\n            if (isSessionActive\\r\\n                    && (audioActiveChanged || pcVideoActiveChanged)) {\\r\\n                this._renegotiate()\\r\\n                    .then(\\r\\n                        finishedCallback,\\r\\n                        finishedCallback /* will be called with an error */);\\r\\n            } else {\\r\\n                finishedCallback();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        return new Promise((resolve, reject) => {\\r\\n            this.modificationQueue.push(\\r\\n                workFunction,\\r\\n                error => {\\r\\n                    if (error) {\\r\\n                        reject(error);\\r\\n                    } else {\\r\\n                        resolve();\\r\\n                    }\\r\\n                });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Will put and execute on the queue a session modify task. Currently it\\r\\n     * only checks the senders attribute of the video content in order to figure\\r\\n     * out if the remote peer has video in the inactive state (stored locally\\r\\n     * in {@link _remoteVideoActive} - see field description for more info).\\r\\n     * @param {jQuery} jingleContents jQuery selector pointing to the jingle\\r\\n     * element of the session modify IQ.\\r\\n     * @see {@link _remoteVideoActive}\\r\\n     * @see {@link _localVideoActive}\\r\\n     */\\r\\n    modifyContents(jingleContents) {\\r\\n        const newVideoSenders\\r\\n            = JingleSessionPC.parseVideoSenders(jingleContents);\\r\\n\\r\\n        if (newVideoSenders === null) {\\r\\n            logger.error(\\r\\n                `${this} - failed to parse video \\\"senders\\\" attribute in`\\r\\n                    + '\\\"content-modify\\\" action');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const workFunction = finishedCallback => {\\r\\n            if (this._assertNotEnded('content-modify')\\r\\n                    && this._modifyRemoteVideoActive(newVideoSenders)) {\\r\\n                // Will do the sRD/sLD cycle to update SDPs and adjust\\r\\n                // the media direction\\r\\n                this._renegotiate()\\r\\n                    .then(finishedCallback, finishedCallback /* (error) */);\\r\\n            } else {\\r\\n                finishedCallback();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        logger.debug(\\r\\n            `${this} queued \\\"content-modify\\\" task`\\r\\n                + `(video senders=\\\"${newVideoSenders}\\\")`);\\r\\n\\r\\n        this.modificationQueue.push(\\r\\n            workFunction,\\r\\n            error => {\\r\\n                if (error) {\\r\\n                    logger.error('\\\"content-modify\\\" failed', error);\\r\\n                }\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Processes new value of remote video \\\"senders\\\" Jingle attribute and tries\\r\\n     * to apply it for {@link _remoteVideoActive}.\\r\\n     * @param {string} remoteVideoSenders the value of \\\"senders\\\" attribute of\\r\\n     * Jingle video content element advertised by remote peer.\\r\\n     * @return {boolean} <tt>true</tt> if the change affected state of\\r\\n     * the underlying peerconnection and renegotiation is required for\\r\\n     * the changes to take effect.\\r\\n     * @private\\r\\n     */\\r\\n    _modifyRemoteVideoActive(remoteVideoSenders) {\\r\\n        const isRemoteVideoActive\\r\\n            = remoteVideoSenders === 'both'\\r\\n                || (remoteVideoSenders === 'initiator' && this.isInitiator)\\r\\n                || (remoteVideoSenders === 'responder' && !this.isInitiator);\\r\\n\\r\\n        if (isRemoteVideoActive !== this._remoteVideoActive) {\\r\\n            logger.debug(\\r\\n                `${this} new remote video active: ${isRemoteVideoActive}`);\\r\\n            this._remoteVideoActive = isRemoteVideoActive;\\r\\n        }\\r\\n\\r\\n        return this.peerconnection.setVideoTransferActive(\\r\\n            this._localVideoActive && this._remoteVideoActive);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Figures out added/removed ssrcs and send update IQs.\\r\\n     * @param oldSDP SDP object for old description.\\r\\n     * @param newSDP SDP object for new description.\\r\\n     */\\r\\n    notifyMySSRCUpdate(oldSDP, newSDP) {\\r\\n\\r\\n        if (this.state !== JingleSessionState.ACTIVE) {\\r\\n            logger.warn(`Skipping SSRC update in '${this.state} ' state.`);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // send source-remove IQ.\\r\\n        let sdpDiffer = new SDPDiffer(newSDP, oldSDP);\\r\\n        const remove = $iq({ to: this.remoteJid,\\r\\n            type: 'set' })\\r\\n            .c('jingle', {\\r\\n                xmlns: 'urn:xmpp:jingle:1',\\r\\n                action: 'source-remove',\\r\\n                initiator: this.initiatorJid,\\r\\n                sid: this.sid\\r\\n            }\\r\\n            );\\r\\n        const removedAnySSRCs = sdpDiffer.toJingle(remove);\\r\\n\\r\\n        if (removedAnySSRCs) {\\r\\n            logger.info('Sending source-remove', remove.tree());\\r\\n            this.connection.sendIQ(\\r\\n                remove, null,\\r\\n                this.newJingleErrorHandler(remove), IQ_TIMEOUT);\\r\\n        } else {\\r\\n            logger.log('removal not necessary');\\r\\n        }\\r\\n\\r\\n        // send source-add IQ.\\r\\n        sdpDiffer = new SDPDiffer(oldSDP, newSDP);\\r\\n        const add = $iq({ to: this.remoteJid,\\r\\n            type: 'set' })\\r\\n            .c('jingle', {\\r\\n                xmlns: 'urn:xmpp:jingle:1',\\r\\n                action: 'source-add',\\r\\n                initiator: this.initiatorJid,\\r\\n                sid: this.sid\\r\\n            }\\r\\n            );\\r\\n\\r\\n        const containsNewSSRCs = sdpDiffer.toJingle(add);\\r\\n\\r\\n        if (containsNewSSRCs) {\\r\\n            logger.info('Sending source-add', add.tree());\\r\\n            this.connection.sendIQ(\\r\\n                add, null, this.newJingleErrorHandler(add), IQ_TIMEOUT);\\r\\n        } else {\\r\\n            logger.log('addition not necessary');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Method returns function(errorResponse) which is a callback to be passed\\r\\n     * to Strophe connection.sendIQ method. An 'error' structure is created that\\r\\n     * is passed as 1st argument to given <tt>failureCb</tt>. The format of this\\r\\n     * structure is as follows:\\r\\n     * {\\r\\n     *  code: {XMPP error response code}\\r\\n     *  reason: {the name of XMPP error reason element or 'timeout' if the\\r\\n      *          request has timed out within <tt>IQ_TIMEOUT</tt> milliseconds}\\r\\n     *  source: {request.tree() that provides original request}\\r\\n     *  session: {this JingleSessionPC.toString()}\\r\\n     * }\\r\\n     * @param request Strophe IQ instance which is the request to be dumped into\\r\\n     *        the error structure\\r\\n     * @param failureCb function(error) called when error response was returned\\r\\n     *        or when a timeout has occurred.\\r\\n     * @returns {function(this:JingleSessionPC)}\\r\\n     */\\r\\n    newJingleErrorHandler(request, failureCb) {\\r\\n        return errResponse => {\\r\\n\\r\\n            const error = {};\\r\\n\\r\\n            // Get XMPP error code and condition(reason)\\r\\n            const errorElSel = $(errResponse).find('error');\\r\\n\\r\\n            if (errorElSel.length) {\\r\\n                error.code = errorElSel.attr('code');\\r\\n                const errorReasonSel = $(errResponse).find('error :first');\\r\\n\\r\\n                if (errorReasonSel.length) {\\r\\n                    error.reason = errorReasonSel[0].tagName;\\r\\n                }\\r\\n\\r\\n                const errorMsgSel = errorElSel.find('>text');\\r\\n\\r\\n                if (errorMsgSel.length) {\\r\\n                    error.msg = errorMsgSel.text();\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (!errResponse) {\\r\\n                error.reason = 'timeout';\\r\\n            }\\r\\n\\r\\n            error.session = this.toString();\\r\\n\\r\\n            if (failureCb) {\\r\\n                failureCb(error);\\r\\n            } else if (this.state === JingleSessionState.ENDED\\r\\n                        && error.reason === 'item-not-found') {\\r\\n                // When remote peer decides to terminate the session, but it\\r\\n                // still have few messages on the queue for processing,\\r\\n                // it will first send us 'session-terminate' (we enter ENDED)\\r\\n                // and then follow with 'item-not-found' for the queued requests\\r\\n                // We don't want to have that logged on error level.\\r\\n                logger.debug(`Jingle error: ${JSON.stringify(error)}`);\\r\\n            } else {\\r\\n                GlobalOnErrorHandler.callErrorHandler(\\r\\n                    new Error(\\r\\n                        `Jingle error: ${JSON.stringify(error)}`));\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the ice connection state for the peer connection.\\r\\n     * @returns the ice connection state for the peer connection.\\r\\n     */\\r\\n    getIceConnectionState() {\\r\\n        return this.peerconnection.iceConnectionState;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Closes the peerconnection.\\r\\n     */\\r\\n    close() {\\r\\n        this.state = JingleSessionState.ENDED;\\r\\n        this.establishmentDuration = undefined;\\r\\n\\r\\n        this.peerconnection.onicecandidate = null;\\r\\n        this.peerconnection.oniceconnectionstatechange = null;\\r\\n        this.peerconnection.onnegotiationneeded = null;\\r\\n        this.peerconnection.onsignalingstatechange = null;\\r\\n\\r\\n        // Remove any pending tasks from the queue\\r\\n        this.modificationQueue.clear();\\r\\n\\r\\n        this.modificationQueue.push(finishCallback => {\\r\\n            // The signaling layer will remove it's listeners\\r\\n            this.signalingLayer.setChatRoom(null);\\r\\n\\r\\n            // do not try to close if already closed.\\r\\n            this.peerconnection && this.peerconnection.close();\\r\\n            finishCallback();\\r\\n        });\\r\\n\\r\\n        // No more tasks can go in after the close task\\r\\n        this.modificationQueue.shutdown();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts to string with minor summary.\\r\\n     * @return {string}\\r\\n     */\\r\\n    toString() {\\r\\n        return `JingleSessionPC[p2p=${this.isP2P},`\\r\\n                    + `initiator=${this.isInitiator},sid=${this.sid}]`;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * If the A/B test for suspend video is disabled according to the room's\\r\\n     * configuration, returns undefined. Otherwise returns a boolean which\\r\\n     * indicates whether the suspend video option should be enabled or disabled.\\r\\n     * @param {JingleSessionPCOptions} options - The config options.\\r\\n     */\\r\\n    _abtestSuspendVideoEnabled({ abTesting }) {\\r\\n        if (!abTesting || !abTesting.enableSuspendVideoTest) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // We want the two participants in a P2P call to agree on the value of\\r\\n        // the \\\"suspend\\\" option. We use the JID of the initiator, because it is\\r\\n        // both randomly selected and agreed upon by both participants.\\r\\n        const jid = this._getInitiatorJid();\\r\\n\\r\\n        return integerHash(jid) % 2 === 0;\\r\\n    }\\r\\n}\\r\\n\",\"/**\\r\\n * The events for the media devices.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Indicates that the list of available media devices has been changed. The\\r\\n * event provides the following parameters to its listeners:\\r\\n *\\r\\n * @param {MediaDeviceInfo[]} devices - array of MediaDeviceInfo or\\r\\n *  MediaDeviceInfo-like objects that are currently connected.\\r\\n *  @see https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo\\r\\n */\\r\\nexport const DEVICE_LIST_CHANGED = 'mediaDevices.devicechange';\\r\\n\\r\\n/**\\r\\n * Indicates that the environment is currently showing permission prompt to\\r\\n * access camera and/or microphone. The event provides the following\\r\\n * parameters to its listeners:\\r\\n *\\r\\n * @param {'chrome'|'opera'|'firefox'|'safari'|'nwjs'\\r\\n *  |'react-native'|'android'} environmentType - type of browser or\\r\\n *  other execution environment.\\r\\n */\\r\\nexport const PERMISSION_PROMPT_IS_SHOWN\\r\\n    = 'mediaDevices.permissionPromptIsShown';\\r\\n\",\"/*!\\n * Bowser - a browser detector\\n * https://github.com/ded/bowser\\n * MIT License | (c) Dustin Diaz 2015\\n */\\n\\n!function (root, name, definition) {\\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\\n  else if (typeof define == 'function' && define.amd) define(name, definition)\\n  else root[name] = definition()\\n}(this, 'bowser', function () {\\n  /**\\n    * See useragents.js for examples of navigator.userAgent\\n    */\\n\\n  var t = true\\n\\n  function detect(ua) {\\n\\n    function getFirstMatch(regex) {\\n      var match = ua.match(regex);\\n      return (match && match.length > 1 && match[1]) || '';\\n    }\\n\\n    function getSecondMatch(regex) {\\n      var match = ua.match(regex);\\n      return (match && match.length > 1 && match[2]) || '';\\n    }\\n\\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\\n      , likeAndroid = /like android/i.test(ua)\\n      , android = !likeAndroid && /android/i.test(ua)\\n      , nexusMobile = /nexus\\\\s*[0-6]\\\\s*/i.test(ua)\\n      , nexusTablet = !nexusMobile && /nexus\\\\s*[0-9]+/i.test(ua)\\n      , chromeos = /CrOS/.test(ua)\\n      , silk = /silk/i.test(ua)\\n      , sailfish = /sailfish/i.test(ua)\\n      , tizen = /tizen/i.test(ua)\\n      , webos = /(web|hpw)os/i.test(ua)\\n      , windowsphone = /windows phone/i.test(ua)\\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\\n      , windows = !windowsphone && /windows/i.test(ua)\\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\\n      , edgeVersion = getSecondMatch(/edg([ea]|ios)\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      , versionIdentifier = getFirstMatch(/version\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)\\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\\n      , xbox = /xbox/i.test(ua)\\n      , result\\n\\n    if (/opera/i.test(ua)) {\\n      //  an old Opera\\n      result = {\\n        name: 'Opera'\\n      , opera: t\\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    } else if (/opr\\\\/|opios/i.test(ua)) {\\n      // a new Opera\\n      result = {\\n        name: 'Opera'\\n        , opera: t\\n        , version: getFirstMatch(/(?:opr|opios)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i) || versionIdentifier\\n      }\\n    }\\n    else if (/SamsungBrowser/i.test(ua)) {\\n      result = {\\n        name: 'Samsung Internet for Android'\\n        , samsungBrowser: t\\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/coast/i.test(ua)) {\\n      result = {\\n        name: 'Opera Coast'\\n        , coast: t\\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/yabrowser/i.test(ua)) {\\n      result = {\\n        name: 'Yandex Browser'\\n      , yandexbrowser: t\\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/ucbrowser/i.test(ua)) {\\n      result = {\\n          name: 'UC Browser'\\n        , ucbrowser: t\\n        , version: getFirstMatch(/(?:ucbrowser)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/mxios/i.test(ua)) {\\n      result = {\\n        name: 'Maxthon'\\n        , maxthon: t\\n        , version: getFirstMatch(/(?:mxios)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/epiphany/i.test(ua)) {\\n      result = {\\n        name: 'Epiphany'\\n        , epiphany: t\\n        , version: getFirstMatch(/(?:epiphany)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/puffin/i.test(ua)) {\\n      result = {\\n        name: 'Puffin'\\n        , puffin: t\\n        , version: getFirstMatch(/(?:puffin)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/sleipnir/i.test(ua)) {\\n      result = {\\n        name: 'Sleipnir'\\n        , sleipnir: t\\n        , version: getFirstMatch(/(?:sleipnir)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/k-meleon/i.test(ua)) {\\n      result = {\\n        name: 'K-Meleon'\\n        , kMeleon: t\\n        , version: getFirstMatch(/(?:k-meleon)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (windowsphone) {\\n      result = {\\n        name: 'Windows Phone'\\n      , osname: 'Windows Phone'\\n      , windowsphone: t\\n      }\\n      if (edgeVersion) {\\n        result.msedge = t\\n        result.version = edgeVersion\\n      }\\n      else {\\n        result.msie = t\\n        result.version = getFirstMatch(/iemobile\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/msie|trident/i.test(ua)) {\\n      result = {\\n        name: 'Internet Explorer'\\n      , msie: t\\n      , version: getFirstMatch(/(?:msie |rv:)(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    } else if (chromeos) {\\n      result = {\\n        name: 'Chrome'\\n      , osname: 'Chrome OS'\\n      , chromeos: t\\n      , chromeBook: t\\n      , chrome: t\\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    } else if (/edg([ea]|ios)/i.test(ua)) {\\n      result = {\\n        name: 'Microsoft Edge'\\n      , msedge: t\\n      , version: edgeVersion\\n      }\\n    }\\n    else if (/vivaldi/i.test(ua)) {\\n      result = {\\n        name: 'Vivaldi'\\n        , vivaldi: t\\n        , version: getFirstMatch(/vivaldi\\\\/(\\\\d+(\\\\.\\\\d+)?)/i) || versionIdentifier\\n      }\\n    }\\n    else if (sailfish) {\\n      result = {\\n        name: 'Sailfish'\\n      , osname: 'Sailfish OS'\\n      , sailfish: t\\n      , version: getFirstMatch(/sailfish\\\\s?browser\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/seamonkey\\\\//i.test(ua)) {\\n      result = {\\n        name: 'SeaMonkey'\\n      , seamonkey: t\\n      , version: getFirstMatch(/seamonkey\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\\n      result = {\\n        name: 'Firefox'\\n      , firefox: t\\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n      if (/\\\\((mobile|tablet);[^\\\\)]*rv:[\\\\d\\\\.]+\\\\)/i.test(ua)) {\\n        result.firefoxos = t\\n        result.osname = 'Firefox OS'\\n      }\\n    }\\n    else if (silk) {\\n      result =  {\\n        name: 'Amazon Silk'\\n      , silk: t\\n      , version : getFirstMatch(/silk\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/phantom/i.test(ua)) {\\n      result = {\\n        name: 'PhantomJS'\\n      , phantom: t\\n      , version: getFirstMatch(/phantomjs\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/slimerjs/i.test(ua)) {\\n      result = {\\n        name: 'SlimerJS'\\n        , slimer: t\\n        , version: getFirstMatch(/slimerjs\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/blackberry|\\\\bbb\\\\d+/i.test(ua) || /rim\\\\stablet/i.test(ua)) {\\n      result = {\\n        name: 'BlackBerry'\\n      , osname: 'BlackBerry OS'\\n      , blackberry: t\\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\\\d]+\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (webos) {\\n      result = {\\n        name: 'WebOS'\\n      , osname: 'WebOS'\\n      , webos: t\\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      };\\n      /touchpad\\\\//i.test(ua) && (result.touchpad = t)\\n    }\\n    else if (/bada/i.test(ua)) {\\n      result = {\\n        name: 'Bada'\\n      , osname: 'Bada'\\n      , bada: t\\n      , version: getFirstMatch(/dolfin\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      };\\n    }\\n    else if (tizen) {\\n      result = {\\n        name: 'Tizen'\\n      , osname: 'Tizen'\\n      , tizen: t\\n      , version: getFirstMatch(/(?:tizen\\\\s?)?browser\\\\/(\\\\d+(\\\\.\\\\d+)?)/i) || versionIdentifier\\n      };\\n    }\\n    else if (/qupzilla/i.test(ua)) {\\n      result = {\\n        name: 'QupZilla'\\n        , qupzilla: t\\n        , version: getFirstMatch(/(?:qupzilla)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i) || versionIdentifier\\n      }\\n    }\\n    else if (/chromium/i.test(ua)) {\\n      result = {\\n        name: 'Chromium'\\n        , chromium: t\\n        , version: getFirstMatch(/(?:chromium)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)?)/i) || versionIdentifier\\n      }\\n    }\\n    else if (/chrome|crios|crmo/i.test(ua)) {\\n      result = {\\n        name: 'Chrome'\\n        , chrome: t\\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (android) {\\n      result = {\\n        name: 'Android'\\n        , version: versionIdentifier\\n      }\\n    }\\n    else if (/safari|applewebkit/i.test(ua)) {\\n      result = {\\n        name: 'Safari'\\n      , safari: t\\n      }\\n      if (versionIdentifier) {\\n        result.version = versionIdentifier\\n      }\\n    }\\n    else if (iosdevice) {\\n      result = {\\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\\n      }\\n      // WTF: version is not part of user agent in web apps\\n      if (versionIdentifier) {\\n        result.version = versionIdentifier\\n      }\\n    }\\n    else if(/googlebot/i.test(ua)) {\\n      result = {\\n        name: 'Googlebot'\\n      , googlebot: t\\n      , version: getFirstMatch(/googlebot\\\\/(\\\\d+(\\\\.\\\\d+))/i) || versionIdentifier\\n      }\\n    }\\n    else {\\n      result = {\\n        name: getFirstMatch(/^(.*)\\\\/(.*) /),\\n        version: getSecondMatch(/^(.*)\\\\/(.*) /)\\n     };\\n   }\\n\\n    // set webkit or gecko flag for browsers based on these engines\\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\\n      if (/(apple)?webkit\\\\/537\\\\.36/i.test(ua)) {\\n        result.name = result.name || \\\"Blink\\\"\\n        result.blink = t\\n      } else {\\n        result.name = result.name || \\\"Webkit\\\"\\n        result.webkit = t\\n      }\\n      if (!result.version && versionIdentifier) {\\n        result.version = versionIdentifier\\n      }\\n    } else if (!result.opera && /gecko\\\\//i.test(ua)) {\\n      result.name = result.name || \\\"Gecko\\\"\\n      result.gecko = t\\n      result.version = result.version || getFirstMatch(/gecko\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n    }\\n\\n    // set OS flags for platforms that have multiple browsers\\n    if (!result.windowsphone && (android || result.silk)) {\\n      result.android = t\\n      result.osname = 'Android'\\n    } else if (!result.windowsphone && iosdevice) {\\n      result[iosdevice] = t\\n      result.ios = t\\n      result.osname = 'iOS'\\n    } else if (mac) {\\n      result.mac = t\\n      result.osname = 'macOS'\\n    } else if (xbox) {\\n      result.xbox = t\\n      result.osname = 'Xbox'\\n    } else if (windows) {\\n      result.windows = t\\n      result.osname = 'Windows'\\n    } else if (linux) {\\n      result.linux = t\\n      result.osname = 'Linux'\\n    }\\n\\n    function getWindowsVersion (s) {\\n      switch (s) {\\n        case 'NT': return 'NT'\\n        case 'XP': return 'XP'\\n        case 'NT 5.0': return '2000'\\n        case 'NT 5.1': return 'XP'\\n        case 'NT 5.2': return '2003'\\n        case 'NT 6.0': return 'Vista'\\n        case 'NT 6.1': return '7'\\n        case 'NT 6.2': return '8'\\n        case 'NT 6.3': return '8.1'\\n        case 'NT 10.0': return '10'\\n        default: return undefined\\n      }\\n    }\\n\\n    // OS version extraction\\n    var osVersion = '';\\n    if (result.windows) {\\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\\\d\\\\d?.\\\\d)?)/i))\\n    } else if (result.windowsphone) {\\n      osVersion = getFirstMatch(/windows phone (?:os)?\\\\s?(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.mac) {\\n      osVersion = getFirstMatch(/Mac OS X (\\\\d+([_\\\\.\\\\s]\\\\d+)*)/i);\\n      osVersion = osVersion.replace(/[_\\\\s]/g, '.');\\n    } else if (iosdevice) {\\n      osVersion = getFirstMatch(/os (\\\\d+([_\\\\s]\\\\d+)*) like mac os x/i);\\n      osVersion = osVersion.replace(/[_\\\\s]/g, '.');\\n    } else if (android) {\\n      osVersion = getFirstMatch(/android[ \\\\/-](\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.webos) {\\n      osVersion = getFirstMatch(/(?:web|hpw)os\\\\/(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.blackberry) {\\n      osVersion = getFirstMatch(/rim\\\\stablet\\\\sos\\\\s(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.bada) {\\n      osVersion = getFirstMatch(/bada\\\\/(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.tizen) {\\n      osVersion = getFirstMatch(/tizen[\\\\/\\\\s](\\\\d+(\\\\.\\\\d+)*)/i);\\n    }\\n    if (osVersion) {\\n      result.osversion = osVersion;\\n    }\\n\\n    // device type extraction\\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\\n    if (\\n         tablet\\n      || nexusTablet\\n      || iosdevice == 'ipad'\\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\\n      || result.silk\\n    ) {\\n      result.tablet = t\\n    } else if (\\n         mobile\\n      || iosdevice == 'iphone'\\n      || iosdevice == 'ipod'\\n      || android\\n      || nexusMobile\\n      || result.blackberry\\n      || result.webos\\n      || result.bada\\n    ) {\\n      result.mobile = t\\n    }\\n\\n    // Graded Browser Support\\n    // http://developer.yahoo.com/yui/articles/gbs\\n    if (result.msedge ||\\n        (result.msie && result.version >= 10) ||\\n        (result.yandexbrowser && result.version >= 15) ||\\n\\t\\t    (result.vivaldi && result.version >= 1.0) ||\\n        (result.chrome && result.version >= 20) ||\\n        (result.samsungBrowser && result.version >= 4) ||\\n        (result.firefox && result.version >= 20.0) ||\\n        (result.safari && result.version >= 6) ||\\n        (result.opera && result.version >= 10.0) ||\\n        (result.ios && result.osversion && result.osversion.split(\\\".\\\")[0] >= 6) ||\\n        (result.blackberry && result.version >= 10.1)\\n        || (result.chromium && result.version >= 20)\\n        ) {\\n      result.a = t;\\n    }\\n    else if ((result.msie && result.version < 10) ||\\n        (result.chrome && result.version < 20) ||\\n        (result.firefox && result.version < 20.0) ||\\n        (result.safari && result.version < 6) ||\\n        (result.opera && result.version < 10.0) ||\\n        (result.ios && result.osversion && result.osversion.split(\\\".\\\")[0] < 6)\\n        || (result.chromium && result.version < 20)\\n        ) {\\n      result.c = t\\n    } else result.x = t\\n\\n    return result\\n  }\\n\\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\\n\\n  bowser.test = function (browserList) {\\n    for (var i = 0; i < browserList.length; ++i) {\\n      var browserItem = browserList[i];\\n      if (typeof browserItem=== 'string') {\\n        if (browserItem in bowser) {\\n          return true;\\n        }\\n      }\\n    }\\n    return false;\\n  }\\n\\n  /**\\n   * Get version precisions count\\n   *\\n   * @example\\n   *   getVersionPrecision(\\\"1.10.3\\\") // 3\\n   *\\n   * @param  {string} version\\n   * @return {number}\\n   */\\n  function getVersionPrecision(version) {\\n    return version.split(\\\".\\\").length;\\n  }\\n\\n  /**\\n   * Array::map polyfill\\n   *\\n   * @param  {Array} arr\\n   * @param  {Function} iterator\\n   * @return {Array}\\n   */\\n  function map(arr, iterator) {\\n    var result = [], i;\\n    if (Array.prototype.map) {\\n      return Array.prototype.map.call(arr, iterator);\\n    }\\n    for (i = 0; i < arr.length; i++) {\\n      result.push(iterator(arr[i]));\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Calculate browser version weight\\n   *\\n   * @example\\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\\n   *\\n   * @param  {Array<String>} versions versions to compare\\n   * @return {Number} comparison result\\n   */\\n  function compareVersions(versions) {\\n    // 1) get common precision for both versions, for example for \\\"10.0\\\" and \\\"9\\\" it should be 2\\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\\n    var chunks = map(versions, function (version) {\\n      var delta = precision - getVersionPrecision(version);\\n\\n      // 2) \\\"9\\\" -> \\\"9.0\\\" (for precision = 2)\\n      version = version + new Array(delta + 1).join(\\\".0\\\");\\n\\n      // 3) \\\"9.0\\\" -> [\\\"000000000\\\"\\\", \\\"000000009\\\"]\\n      return map(version.split(\\\".\\\"), function (chunk) {\\n        return new Array(20 - chunk.length).join(\\\"0\\\") + chunk;\\n      }).reverse();\\n    });\\n\\n    // iterate in reverse order by reversed chunks array\\n    while (--precision >= 0) {\\n      // 4) compare: \\\"000000009\\\" > \\\"000000010\\\" = false (but \\\"9\\\" > \\\"10\\\" = true)\\n      if (chunks[0][precision] > chunks[1][precision]) {\\n        return 1;\\n      }\\n      else if (chunks[0][precision] === chunks[1][precision]) {\\n        if (precision === 0) {\\n          // all version chunks are same\\n          return 0;\\n        }\\n      }\\n      else {\\n        return -1;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Check if browser is unsupported\\n   *\\n   * @example\\n   *   bowser.isUnsupportedBrowser({\\n   *     msie: \\\"10\\\",\\n   *     firefox: \\\"23\\\",\\n   *     chrome: \\\"29\\\",\\n   *     safari: \\\"5.1\\\",\\n   *     opera: \\\"16\\\",\\n   *     phantom: \\\"534\\\"\\n   *   });\\n   *\\n   * @param  {Object}  minVersions map of minimal version to browser\\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\\n   * @param  {String}  [ua] user agent string\\n   * @return {Boolean}\\n   */\\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\\n    var _bowser = bowser;\\n\\n    // make strictMode param optional with ua param usage\\n    if (typeof strictMode === 'string') {\\n      ua = strictMode;\\n      strictMode = void(0);\\n    }\\n\\n    if (strictMode === void(0)) {\\n      strictMode = false;\\n    }\\n    if (ua) {\\n      _bowser = detect(ua);\\n    }\\n\\n    var version = \\\"\\\" + _bowser.version;\\n    for (var browser in minVersions) {\\n      if (minVersions.hasOwnProperty(browser)) {\\n        if (_bowser[browser]) {\\n          if (typeof minVersions[browser] !== 'string') {\\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\\n          }\\n\\n          // browser version and min supported version.\\n          return compareVersions([version, minVersions[browser]]) < 0;\\n        }\\n      }\\n    }\\n\\n    return strictMode; // not found\\n  }\\n\\n  /**\\n   * Check if browser is supported\\n   *\\n   * @param  {Object} minVersions map of minimal version to browser\\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\\n   * @param  {String}  [ua] user agent string\\n   * @return {Boolean}\\n   */\\n  function check(minVersions, strictMode, ua) {\\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\\n  }\\n\\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\\n  bowser.compareVersions = compareVersions;\\n  bowser.check = check;\\n\\n  /*\\n   * Set our detect method to the main bowser object so we can\\n   * reuse it to test other user agents.\\n   * This is needed to implement future tests.\\n   */\\n  bowser._detect = detect;\\n\\n  /*\\n   * Set our detect public method to the main bowser object\\n   * This is needed to implement bowser in server side\\n   */\\n  bowser.detect = detect;\\n  return bowser\\n});\\n\",\"import SDPUtil from './SDPUtil';\\r\\n\\r\\n// this could be useful in Array.prototype.\\r\\n/**\\r\\n *\\r\\n * @param array1\\r\\n * @param array2\\r\\n */\\r\\nfunction arrayEquals(array1, array2) {\\r\\n    // if the other array is a falsy value, return\\r\\n    if (!array2) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    // compare lengths - can save a lot of time\\r\\n    if (array1.length !== array2.length) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    for (let i = 0, l = array1.length; i < l; i++) {\\r\\n        // Check if we have nested arrays\\r\\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\\r\\n            // recurse into the nested arrays\\r\\n            if (!array1[i].equals(array2[i])) {\\r\\n                return false;\\r\\n            }\\r\\n        } else if (array1[i] !== array2[i]) {\\r\\n            // Warning - two different object instances will never be\\r\\n            // equal: {x:20} != {x:20}\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return true;\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param mySDP\\r\\n * @param otherSDP\\r\\n */\\r\\nexport default function SDPDiffer(mySDP, otherSDP) {\\r\\n    this.mySDP = mySDP;\\r\\n    this.otherSDP = otherSDP;\\r\\n    if (!mySDP) {\\r\\n        throw new Error('\\\"mySDP\\\" is undefined!');\\r\\n    } else if (!otherSDP) {\\r\\n        throw new Error('\\\"otherSDP\\\" is undefined!');\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns map of MediaChannel that contains media contained in\\r\\n * 'mySDP', but not contained in 'otherSdp'. Mapped by channel idx.\\r\\n */\\r\\nSDPDiffer.prototype.getNewMedia = function() {\\r\\n\\r\\n    const myMedias = this.mySDP.getMediaSsrcMap();\\r\\n    const othersMedias = this.otherSDP.getMediaSsrcMap();\\r\\n    const newMedia = {};\\r\\n\\r\\n    Object.keys(othersMedias).forEach(othersMediaIdx => {\\r\\n        const myMedia = myMedias[othersMediaIdx];\\r\\n        const othersMedia = othersMedias[othersMediaIdx];\\r\\n\\r\\n        if (!myMedia && othersMedia) {\\r\\n            // Add whole channel\\r\\n            newMedia[othersMediaIdx] = othersMedia;\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // Look for new ssrcs across the channel\\r\\n        Object.keys(othersMedia.ssrcs).forEach(ssrc => {\\r\\n            if (Object.keys(myMedia.ssrcs).indexOf(ssrc) === -1) {\\r\\n                // Allocate channel if we've found ssrc that doesn't exist in\\r\\n                // our channel\\r\\n                if (!newMedia[othersMediaIdx]) {\\r\\n                    newMedia[othersMediaIdx] = {\\r\\n                        mediaindex: othersMedia.mediaindex,\\r\\n                        mid: othersMedia.mid,\\r\\n                        ssrcs: {},\\r\\n                        ssrcGroups: []\\r\\n                    };\\r\\n                }\\r\\n                newMedia[othersMediaIdx].ssrcs[ssrc] = othersMedia.ssrcs[ssrc];\\r\\n            } else if (othersMedia.ssrcs[ssrc].lines\\r\\n                        && myMedia.ssrcs[ssrc].lines) {\\r\\n                // we want to detect just changes in adding/removing msid\\r\\n                const myContainMsid = myMedia.ssrcs[ssrc].lines.find(\\r\\n                    line => line.indexOf('msid') !== -1) !== undefined;\\r\\n                const newContainMsid = othersMedia.ssrcs[ssrc].lines.find(\\r\\n                    line => line.indexOf('msid') !== -1) !== undefined;\\r\\n\\r\\n                if (myContainMsid !== newContainMsid) {\\r\\n                    if (!newMedia[othersMediaIdx]) {\\r\\n                        newMedia[othersMediaIdx] = {\\r\\n                            mediaindex: othersMedia.mediaindex,\\r\\n                            mid: othersMedia.mid,\\r\\n                            ssrcs: {},\\r\\n                            ssrcGroups: []\\r\\n                        };\\r\\n                    }\\r\\n                    newMedia[othersMediaIdx].ssrcs[ssrc]\\r\\n                        = othersMedia.ssrcs[ssrc];\\r\\n                }\\r\\n            }\\r\\n        });\\r\\n\\r\\n        // Look for new ssrc groups across the channels\\r\\n        othersMedia.ssrcGroups.forEach(otherSsrcGroup => {\\r\\n\\r\\n            // try to match the other ssrc-group with an ssrc-group of ours\\r\\n            let matched = false;\\r\\n\\r\\n            for (let i = 0; i < myMedia.ssrcGroups.length; i++) {\\r\\n                const mySsrcGroup = myMedia.ssrcGroups[i];\\r\\n\\r\\n                if (otherSsrcGroup.semantics === mySsrcGroup.semantics\\r\\n                    && arrayEquals(otherSsrcGroup.ssrcs, mySsrcGroup.ssrcs)) {\\r\\n\\r\\n                    matched = true;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (!matched) {\\r\\n                // Allocate channel if we've found an ssrc-group that doesn't\\r\\n                // exist in our channel\\r\\n\\r\\n                if (!newMedia[othersMediaIdx]) {\\r\\n                    newMedia[othersMediaIdx] = {\\r\\n                        mediaindex: othersMedia.mediaindex,\\r\\n                        mid: othersMedia.mid,\\r\\n                        ssrcs: {},\\r\\n                        ssrcGroups: []\\r\\n                    };\\r\\n                }\\r\\n                newMedia[othersMediaIdx].ssrcGroups.push(otherSsrcGroup);\\r\\n            }\\r\\n        });\\r\\n    });\\r\\n\\r\\n    return newMedia;\\r\\n};\\r\\n\\r\\n/**\\r\\n * TODO: document!\\r\\n */\\r\\nSDPDiffer.prototype.toJingle = function(modify) {\\r\\n    const sdpMediaSsrcs = this.getNewMedia();\\r\\n\\r\\n    let modified = false;\\r\\n\\r\\n    Object.keys(sdpMediaSsrcs).forEach(mediaindex => {\\r\\n        modified = true;\\r\\n        const media = sdpMediaSsrcs[mediaindex];\\r\\n\\r\\n        modify.c('content', { name: media.mid });\\r\\n\\r\\n        modify.c('description',\\r\\n            { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\\r\\n                media: media.mid });\\r\\n\\r\\n        // FIXME: not completely sure this operates on blocks and / or handles\\r\\n        // different ssrcs correctly\\r\\n        // generate sources from lines\\r\\n        Object.keys(media.ssrcs).forEach(ssrcNum => {\\r\\n            const mediaSsrc = media.ssrcs[ssrcNum];\\r\\n\\r\\n            modify.c('source', { xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\\r\\n            modify.attrs({ ssrc: mediaSsrc.ssrc });\\r\\n\\r\\n            // iterate over ssrc lines\\r\\n            mediaSsrc.lines.forEach(line => {\\r\\n                const idx = line.indexOf(' ');\\r\\n                const kv = line.substr(idx + 1);\\r\\n\\r\\n                modify.c('parameter');\\r\\n                if (kv.indexOf(':') === -1) {\\r\\n                    modify.attrs({ name: kv });\\r\\n                } else {\\r\\n                    const nv = kv.split(':', 2);\\r\\n                    const name = nv[0];\\r\\n                    const value = SDPUtil.filterSpecialChars(nv[1]);\\r\\n\\r\\n                    modify.attrs({ name });\\r\\n                    modify.attrs({ value });\\r\\n                }\\r\\n                modify.up(); // end of parameter\\r\\n            });\\r\\n            modify.up(); // end of source\\r\\n        });\\r\\n\\r\\n        // generate source groups from lines\\r\\n        media.ssrcGroups.forEach(ssrcGroup => {\\r\\n            if (ssrcGroup.ssrcs.length) {\\r\\n\\r\\n                modify.c('ssrc-group', {\\r\\n                    semantics: ssrcGroup.semantics,\\r\\n                    xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\\r\\n                });\\r\\n\\r\\n                ssrcGroup.ssrcs.forEach(ssrc => {\\r\\n                    modify.c('source', { ssrc })\\r\\n                        .up(); // end of source\\r\\n                });\\r\\n                modify.up(); // end of ssrc-group\\r\\n            }\\r\\n        });\\r\\n\\r\\n        modify.up(); // end of description\\r\\n        modify.up(); // end of content\\r\\n    });\\r\\n\\r\\n    return modified;\\r\\n};\\r\\n\",\"// shim for using process in browser\\nvar process = module.exports = {};\\n\\n// cached from whatever global is present so that test runners that stub it\\n// don't break things.  But we need to wrap it in a try catch in case it is\\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\\n// function because try/catches deoptimize in certain engines.\\n\\nvar cachedSetTimeout;\\nvar cachedClearTimeout;\\n\\nfunction defaultSetTimout() {\\n    throw new Error('setTimeout has not been defined');\\n}\\nfunction defaultClearTimeout () {\\n    throw new Error('clearTimeout has not been defined');\\n}\\n(function () {\\n    try {\\n        if (typeof setTimeout === 'function') {\\n            cachedSetTimeout = setTimeout;\\n        } else {\\n            cachedSetTimeout = defaultSetTimout;\\n        }\\n    } catch (e) {\\n        cachedSetTimeout = defaultSetTimout;\\n    }\\n    try {\\n        if (typeof clearTimeout === 'function') {\\n            cachedClearTimeout = clearTimeout;\\n        } else {\\n            cachedClearTimeout = defaultClearTimeout;\\n        }\\n    } catch (e) {\\n        cachedClearTimeout = defaultClearTimeout;\\n    }\\n} ())\\nfunction runTimeout(fun) {\\n    if (cachedSetTimeout === setTimeout) {\\n        //normal enviroments in sane situations\\n        return setTimeout(fun, 0);\\n    }\\n    // if setTimeout wasn't available but was latter defined\\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\\n        cachedSetTimeout = setTimeout;\\n        return setTimeout(fun, 0);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedSetTimeout(fun, 0);\\n    } catch(e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\\n            return cachedSetTimeout.call(null, fun, 0);\\n        } catch(e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\\n            return cachedSetTimeout.call(this, fun, 0);\\n        }\\n    }\\n\\n\\n}\\nfunction runClearTimeout(marker) {\\n    if (cachedClearTimeout === clearTimeout) {\\n        //normal enviroments in sane situations\\n        return clearTimeout(marker);\\n    }\\n    // if clearTimeout wasn't available but was latter defined\\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\\n        cachedClearTimeout = clearTimeout;\\n        return clearTimeout(marker);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedClearTimeout(marker);\\n    } catch (e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\\n            return cachedClearTimeout.call(null, marker);\\n        } catch (e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\\n            return cachedClearTimeout.call(this, marker);\\n        }\\n    }\\n\\n\\n\\n}\\nvar queue = [];\\nvar draining = false;\\nvar currentQueue;\\nvar queueIndex = -1;\\n\\nfunction cleanUpNextTick() {\\n    if (!draining || !currentQueue) {\\n        return;\\n    }\\n    draining = false;\\n    if (currentQueue.length) {\\n        queue = currentQueue.concat(queue);\\n    } else {\\n        queueIndex = -1;\\n    }\\n    if (queue.length) {\\n        drainQueue();\\n    }\\n}\\n\\nfunction drainQueue() {\\n    if (draining) {\\n        return;\\n    }\\n    var timeout = runTimeout(cleanUpNextTick);\\n    draining = true;\\n\\n    var len = queue.length;\\n    while(len) {\\n        currentQueue = queue;\\n        queue = [];\\n        while (++queueIndex < len) {\\n            if (currentQueue) {\\n                currentQueue[queueIndex].run();\\n            }\\n        }\\n        queueIndex = -1;\\n        len = queue.length;\\n    }\\n    currentQueue = null;\\n    draining = false;\\n    runClearTimeout(timeout);\\n}\\n\\nprocess.nextTick = function (fun) {\\n    var args = new Array(arguments.length - 1);\\n    if (arguments.length > 1) {\\n        for (var i = 1; i < arguments.length; i++) {\\n            args[i - 1] = arguments[i];\\n        }\\n    }\\n    queue.push(new Item(fun, args));\\n    if (queue.length === 1 && !draining) {\\n        runTimeout(drainQueue);\\n    }\\n};\\n\\n// v8 likes predictible objects\\nfunction Item(fun, array) {\\n    this.fun = fun;\\n    this.array = array;\\n}\\nItem.prototype.run = function () {\\n    this.fun.apply(null, this.array);\\n};\\nprocess.title = 'browser';\\nprocess.browser = true;\\nprocess.env = {};\\nprocess.argv = [];\\nprocess.version = ''; // empty string to avoid regexp issues\\nprocess.versions = {};\\n\\nfunction noop() {}\\n\\nprocess.on = noop;\\nprocess.addListener = noop;\\nprocess.once = noop;\\nprocess.off = noop;\\nprocess.removeListener = noop;\\nprocess.removeAllListeners = noop;\\nprocess.emit = noop;\\nprocess.prependListener = noop;\\nprocess.prependOnceListener = noop;\\n\\nprocess.listeners = function (name) { return [] }\\n\\nprocess.binding = function (name) {\\n    throw new Error('process.binding is not supported');\\n};\\n\\nprocess.cwd = function () { return '/' };\\nprocess.chdir = function (dir) {\\n    throw new Error('process.chdir is not supported');\\n};\\nprocess.umask = function() { return 0; };\\n\",\"/**\\r\\n * Indicates that the end-to-end round-trip-time for a participant has changed.\\r\\n */\\r\\nexport const E2E_RTT_CHANGED = 'e2eping.e2e_rtt_changed';\\r\\n\",\"/**\\r\\n * Provides statistics for the local stream.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Size of the webaudio analyzer buffer.\\r\\n * @type {number}\\r\\n */\\r\\nconst WEBAUDIO_ANALYZER_FFT_SIZE = 2048;\\r\\n\\r\\n/**\\r\\n * Value of the webaudio analyzer smoothing time parameter.\\r\\n * @type {number}\\r\\n */\\r\\nconst WEBAUDIO_ANALYZER_SMOOTING_TIME = 0.8;\\r\\n\\r\\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\\r\\n\\r\\nlet context = null;\\r\\n\\r\\nif (window.AudioContext) {\\r\\n    context = new AudioContext();\\r\\n\\r\\n    // XXX Not all browsers define a suspend method on AudioContext. As the\\r\\n    // invocation is at the (ES6 module) global execution level, it breaks the\\r\\n    // loading of the lib-jitsi-meet library in such browsers and, consequently,\\r\\n    // the loading of the very Web app that uses the lib-jitsi-meet library. For\\r\\n    // example, Google Chrome 40 on Android does not define the method but we\\r\\n    // still want to be able to load the lib-jitsi-meet library there and\\r\\n    // display a page which notifies the user that the Web app is not supported\\r\\n    // there.\\r\\n    context.suspend && context.suspend();\\r\\n}\\r\\n\\r\\n/**\\r\\n * Converts time domain data array to audio level.\\r\\n * @param samples the time domain data array.\\r\\n * @returns {number} the audio level\\r\\n */\\r\\nfunction timeDomainDataToAudioLevel(samples) {\\r\\n\\r\\n    let maxVolume = 0;\\r\\n\\r\\n    const length = samples.length;\\r\\n\\r\\n    for (let i = 0; i < length; i++) {\\r\\n        if (maxVolume < samples[i]) {\\r\\n            maxVolume = samples[i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return parseFloat(((maxVolume - 127) / 128).toFixed(3));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Animates audio level change\\r\\n * @param newLevel the new audio level\\r\\n * @param lastLevel the last audio level\\r\\n * @returns {Number} the audio level to be set\\r\\n */\\r\\nfunction animateLevel(newLevel, lastLevel) {\\r\\n    let value = 0;\\r\\n    const diff = lastLevel - newLevel;\\r\\n\\r\\n    if (diff > 0.2) {\\r\\n        value = lastLevel - 0.2;\\r\\n    } else if (diff < -0.4) {\\r\\n        value = lastLevel + 0.4;\\r\\n    } else {\\r\\n        value = newLevel;\\r\\n    }\\r\\n\\r\\n    return parseFloat(value.toFixed(3));\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * <tt>LocalStatsCollector</tt> calculates statistics for the local stream.\\r\\n *\\r\\n * @param stream the local stream\\r\\n * @param interval stats refresh interval given in ms.\\r\\n * @param callback function that receives the audio levels.\\r\\n * @constructor\\r\\n */\\r\\nexport default function LocalStatsCollector(stream, interval, callback) {\\r\\n    this.stream = stream;\\r\\n    this.intervalId = null;\\r\\n    this.intervalMilis = interval;\\r\\n    this.audioLevel = 0;\\r\\n    this.callback = callback;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Starts the collecting the statistics.\\r\\n */\\r\\nLocalStatsCollector.prototype.start = function() {\\r\\n    if (!LocalStatsCollector.isLocalStatsSupported()) {\\r\\n        return;\\r\\n    }\\r\\n    context.resume();\\r\\n    const analyser = context.createAnalyser();\\r\\n\\r\\n    analyser.smoothingTimeConstant = WEBAUDIO_ANALYZER_SMOOTING_TIME;\\r\\n    analyser.fftSize = WEBAUDIO_ANALYZER_FFT_SIZE;\\r\\n\\r\\n    const source = context.createMediaStreamSource(this.stream);\\r\\n\\r\\n    source.connect(analyser);\\r\\n\\r\\n\\r\\n    const self = this;\\r\\n\\r\\n    this.intervalId = setInterval(\\r\\n        () => {\\r\\n            const array = new Uint8Array(analyser.frequencyBinCount);\\r\\n\\r\\n            analyser.getByteTimeDomainData(array);\\r\\n            const audioLevel = timeDomainDataToAudioLevel(array);\\r\\n\\r\\n            if (audioLevel !== self.audioLevel) {\\r\\n                self.audioLevel = animateLevel(audioLevel, self.audioLevel);\\r\\n                self.callback(self.audioLevel);\\r\\n            }\\r\\n        },\\r\\n        this.intervalMilis\\r\\n    );\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stops collecting the statistics.\\r\\n */\\r\\nLocalStatsCollector.prototype.stop = function() {\\r\\n    if (this.intervalId) {\\r\\n        clearInterval(this.intervalId);\\r\\n        this.intervalId = null;\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Checks if the environment has the necessary conditions to support\\r\\n * collecting stats from local streams.\\r\\n *\\r\\n * @returns {boolean}\\r\\n */\\r\\nLocalStatsCollector.isLocalStatsSupported = function() {\\r\\n    return Boolean(context);\\r\\n};\\r\\n\",\"const currentExecutingScript = require('current-executing-script');\\r\\n\\r\\n/* eslint-disable max-params */\\r\\n\\r\\n/**\\r\\n * Implements utility functions which facilitate the dealing with scripts such\\r\\n * as the download and execution of a JavaScript file.\\r\\n */\\r\\nconst ScriptUtil = {\\r\\n    /**\\r\\n     * Loads a script from a specific source.\\r\\n     *\\r\\n     * @param src the source from the which the script is to be (down)loaded\\r\\n     * @param async true to asynchronously load the script or false to\\r\\n     * synchronously load the script\\r\\n     * @param prepend true to schedule the loading of the script as soon as\\r\\n     * possible or false to schedule the loading of the script at the end of the\\r\\n     * scripts known at the time\\r\\n     * @param relativeURL whether we need load the library from url relative\\r\\n     * to the url that lib-jitsi-meet was loaded. Useful when sourcing the\\r\\n     * library from different location than the app that is using it\\r\\n     * @param loadCallback on load callback function\\r\\n     * @param errorCallback callback to be called on error loading the script\\r\\n     */\\r\\n    loadScript(\\r\\n            src,\\r\\n            async,\\r\\n            prepend,\\r\\n            relativeURL,\\r\\n            loadCallback,\\r\\n            errorCallback) {\\r\\n        const d = document;\\r\\n        const tagName = 'script';\\r\\n        const script = d.createElement(tagName);\\r\\n        const referenceNode = d.getElementsByTagName(tagName)[0];\\r\\n\\r\\n        script.async = async;\\r\\n\\r\\n        if (relativeURL) {\\r\\n            // finds the src url of the current loaded script\\r\\n            // and use it as base of the src supplied argument\\r\\n            const scriptEl = currentExecutingScript();\\r\\n\\r\\n            if (scriptEl) {\\r\\n                const scriptSrc = scriptEl.src;\\r\\n                const baseScriptSrc\\r\\n                    = scriptSrc.substring(0, scriptSrc.lastIndexOf('/') + 1);\\r\\n\\r\\n                if (scriptSrc && baseScriptSrc) {\\r\\n                    // eslint-disable-next-line no-param-reassign\\r\\n                    src = baseScriptSrc + src;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (loadCallback) {\\r\\n            script.onload = loadCallback;\\r\\n        }\\r\\n        if (errorCallback) {\\r\\n            script.onerror = errorCallback;\\r\\n        }\\r\\n\\r\\n        script.src = src;\\r\\n        if (prepend) {\\r\\n            referenceNode.parentNode.insertBefore(script, referenceNode);\\r\\n        } else {\\r\\n            referenceNode.parentNode.appendChild(script);\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\n/* eslint-enable max-params */\\r\\n\\r\\nmodule.exports = ScriptUtil;\\r\\n\",\"/**\\r\\n * The transciption is on.\\r\\n *\\r\\n * @type {String}\\r\\n */\\r\\nexport const ON = 'on';\\r\\n\\r\\n/**\\r\\n * The transciption is off.\\r\\n *\\r\\n * @type {String}\\r\\n */\\r\\nexport const OFF = 'off';\\r\\n\",\"/* global __filename, module */\\r\\nimport EventEmitter from 'events';\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport RTCUtils from './RTCUtils';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Maps our handler types to MediaStreamTrack properties.\\r\\n */\\r\\nconst trackHandler2Prop = {\\r\\n    'track_mute': 'onmute', // Not supported on FF\\r\\n    'track_unmute': 'onunmute',\\r\\n    'track_ended': 'onended'\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds onended/oninactive handler to a MediaStream.\\r\\n * @param mediaStream a MediaStream to attach onended/oninactive handler\\r\\n * @param handler the handler\\r\\n */\\r\\nfunction addMediaStreamInactiveHandler(mediaStream, handler) {\\r\\n    mediaStream.oninactive = handler;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Represents a single media track (either audio or video).\\r\\n */\\r\\nexport default class JitsiTrack extends EventEmitter {\\r\\n    /* eslint-disable max-params */\\r\\n    /**\\r\\n     * Represents a single media track (either audio or video).\\r\\n     * @constructor\\r\\n     * @param conference the rtc instance\\r\\n     * @param stream the WebRTC MediaStream instance\\r\\n     * @param track the WebRTC MediaStreamTrack instance, must be part of\\r\\n     * the given <tt>stream</tt>.\\r\\n     * @param streamInactiveHandler the function that will handle\\r\\n     *        onended/oninactive events of the stream.\\r\\n     * @param trackMediaType the media type of the JitsiTrack\\r\\n     * @param videoType the VideoType for this track if any\\r\\n     */\\r\\n    constructor(\\r\\n            conference,\\r\\n            stream,\\r\\n            track,\\r\\n            streamInactiveHandler,\\r\\n            trackMediaType,\\r\\n            videoType) {\\r\\n        super();\\r\\n\\r\\n        // aliases for addListener/removeListener\\r\\n        this.addEventListener = this.addListener;\\r\\n        this.removeEventListener = this.off = this.removeListener;\\r\\n\\r\\n        /**\\r\\n         * Array with the HTML elements that are displaying the streams.\\r\\n         * @type {Array}\\r\\n         */\\r\\n        this.containers = [];\\r\\n        this.conference = conference;\\r\\n        this.audioLevel = -1;\\r\\n        this.type = trackMediaType;\\r\\n        this.track = track;\\r\\n        this.videoType = videoType;\\r\\n        this.handlers = new Map();\\r\\n\\r\\n        /**\\r\\n         * Indicates whether this JitsiTrack has been disposed. If true, this\\r\\n         * JitsiTrack is to be considered unusable and operations involving it\\r\\n         * are to fail (e.g. {@link JitsiConference#addTrack(JitsiTrack)},\\r\\n         * {@link JitsiConference#removeTrack(JitsiTrack)}).\\r\\n         * @type {boolean}\\r\\n         */\\r\\n        this.disposed = false;\\r\\n\\r\\n        /**\\r\\n         * The inactive handler which will be triggered when the underlying\\r\\n         * <tt>MediaStream</tt> ends.\\r\\n         *\\r\\n         * @private\\r\\n         * @type {Function}\\r\\n         */\\r\\n        this._streamInactiveHandler = streamInactiveHandler;\\r\\n\\r\\n        this._setStream(stream);\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Sets handler to the WebRTC MediaStream or MediaStreamTrack object\\r\\n     * depending on the passed type.\\r\\n     * @param {string} type the type of the handler that is going to be set\\r\\n     * @param {Function} handler the handler.\\r\\n     */\\r\\n    _setHandler(type, handler) {\\r\\n        if (!trackHandler2Prop.hasOwnProperty(type)) {\\r\\n            logger.error(`Invalid handler type ${type}`);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n        if (handler) {\\r\\n            this.handlers.set(type, handler);\\r\\n        } else {\\r\\n            this.handlers.delete(type);\\r\\n        }\\r\\n\\r\\n        if (this.stream) {\\r\\n            for (const track of this.stream.getTracks()) {\\r\\n                track[trackHandler2Prop[type]] = handler;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Unregisters all event handlers bound to the underlying media stream/track\\r\\n     * @private\\r\\n     */\\r\\n    _unregisterHandlers() {\\r\\n        if (!this.stream) {\\r\\n            logger.warn(\\r\\n                `${this}: unable to unregister handlers - no stream object`);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        for (const type of this.handlers.keys()) {\\r\\n            // FIXME Why only video tracks?\\r\\n            for (const videoTrack of this.stream.getVideoTracks()) {\\r\\n                videoTrack[trackHandler2Prop[type]] = undefined;\\r\\n            }\\r\\n        }\\r\\n        if (this._streamInactiveHandler) {\\r\\n            addMediaStreamInactiveHandler(this.stream, undefined);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the stream property of JitsiTrack object and sets all stored\\r\\n     * handlers to it.\\r\\n     *\\r\\n     * @param {MediaStream} stream the new stream.\\r\\n     * @protected\\r\\n     */\\r\\n    _setStream(stream) {\\r\\n        if (this.stream === stream) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.stream = stream;\\r\\n\\r\\n        // TODO Practically, that's like the opposite of _unregisterHandlers\\r\\n        // i.e. may be abstracted into a function/method called\\r\\n        // _registerHandlers for clarity and easing the maintenance of the two\\r\\n        // pieces of source code.\\r\\n        if (this.stream) {\\r\\n            for (const type of this.handlers.keys()) {\\r\\n                this._setHandler(type, this.handlers.get(type));\\r\\n            }\\r\\n            if (this._streamInactiveHandler) {\\r\\n                addMediaStreamInactiveHandler(\\r\\n                    this.stream, this._streamInactiveHandler);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the type (audio or video) of this track.\\r\\n     */\\r\\n    getType() {\\r\\n        return this.type;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Check if this is an audio track.\\r\\n     */\\r\\n    isAudioTrack() {\\r\\n        return this.getType() === MediaType.AUDIO;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether the underlying WebRTC <tt>MediaStreamTrack</tt> is muted\\r\\n     * according to it's 'muted' field status.\\r\\n     * @return {boolean} <tt>true</tt> if the underlying\\r\\n     * <tt>MediaStreamTrack</tt> is muted or <tt>false</tt> otherwise.\\r\\n     */\\r\\n    isWebRTCTrackMuted() {\\r\\n        return this.track && this.track.muted;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Check if this is a video track.\\r\\n     */\\r\\n    isVideoTrack() {\\r\\n        return this.getType() === MediaType.VIDEO;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether this is a local track.\\r\\n     * @abstract\\r\\n     * @return {boolean} 'true' if it's a local track or 'false' otherwise.\\r\\n     */\\r\\n    isLocal() {\\r\\n        throw new Error('Not implemented by subclass');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the WebRTC MediaStream instance.\\r\\n     */\\r\\n    getOriginalStream() {\\r\\n        return this.stream;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the ID of the underlying WebRTC Media Stream(if any)\\r\\n     * @returns {String|null}\\r\\n     */\\r\\n    getStreamId() {\\r\\n        return this.stream ? this.stream.id : null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Return the underlying WebRTC MediaStreamTrack\\r\\n     * @returns {MediaStreamTrack}\\r\\n     */\\r\\n    getTrack() {\\r\\n        return this.track;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the ID of the underlying WebRTC MediaStreamTrack(if any)\\r\\n     * @returns {String|null}\\r\\n     */\\r\\n    getTrackId() {\\r\\n        return this.track ? this.track.id : null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Return meaningful usage label for this track depending on it's media and\\r\\n     * eventual video type.\\r\\n     * @returns {string}\\r\\n     */\\r\\n    getUsageLabel() {\\r\\n        if (this.isAudioTrack()) {\\r\\n            return 'mic';\\r\\n        }\\r\\n\\r\\n        return this.videoType ? this.videoType : 'default';\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Eventually will trigger RTCEvents.TRACK_ATTACHED event.\\r\\n     * @param container the video/audio container to which this stream is\\r\\n     *        attached and for which event will be fired.\\r\\n     * @private\\r\\n     */\\r\\n    _maybeFireTrackAttached(container) {\\r\\n        if (this.conference && container) {\\r\\n            this.conference._onTrackAttach(this, container);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Attaches the MediaStream of this track to an HTML container.\\r\\n     * Adds the container to the list of containers that are displaying the\\r\\n     * track.\\r\\n     *\\r\\n     * @param container the HTML container which can be 'video' or 'audio'\\r\\n     * element.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    attach(container) {\\r\\n        if (this.stream) {\\r\\n            this._onTrackAttach(container);\\r\\n            RTCUtils.attachMediaStream(container, this.stream);\\r\\n        }\\r\\n        this.containers.push(container);\\r\\n        this._maybeFireTrackAttached(container);\\r\\n        this._attachTTFMTracker(container);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes this JitsiTrack from the passed HTML container.\\r\\n     *\\r\\n     * @param container the HTML container to detach from this JitsiTrack. If\\r\\n     * <tt>null</tt> or <tt>undefined</tt>, all containers are removed. A\\r\\n     * container can be a 'video', 'audio' or 'object' HTML element instance to\\r\\n     * which this JitsiTrack is currently attached.\\r\\n     */\\r\\n    detach(container) {\\r\\n        for (let cs = this.containers, i = cs.length - 1; i >= 0; --i) {\\r\\n            const c = cs[i];\\r\\n\\r\\n            if (!container) {\\r\\n                this._onTrackDetach(c);\\r\\n                RTCUtils.attachMediaStream(c, null);\\r\\n            }\\r\\n            if (!container || c === container) {\\r\\n                cs.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (container) {\\r\\n            this._onTrackDetach(container);\\r\\n            RTCUtils.attachMediaStream(container, null);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Called when the track has been attached to a new container.\\r\\n     *\\r\\n     * @param {HTMLElement} container the HTML container which can be 'video' or\\r\\n     * 'audio' element.\\r\\n     * @private\\r\\n     */\\r\\n    _onTrackAttach(container) { // eslint-disable-line no-unused-vars\\r\\n        // Should be defined by the classes that are extending JitsiTrack\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Called when the track has been detached from a container.\\r\\n     *\\r\\n     * @param {HTMLElement} container the HTML container which can be 'video' or\\r\\n     * 'audio' element.\\r\\n     * @private\\r\\n     */\\r\\n    _onTrackDetach(container) { // eslint-disable-line no-unused-vars\\r\\n        // Should be defined by the classes that are extending JitsiTrack\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Attach time to first media tracker only if there is conference and only\\r\\n     * for the first element.\\r\\n     *\\r\\n     * @param {HTMLElement} container the HTML container which can be 'video' or\\r\\n     * 'audio' element.\\r\\n     * @private\\r\\n     */\\r\\n    _attachTTFMTracker(container) { // eslint-disable-line no-unused-vars\\r\\n        // Should be defined by the classes that are extending JitsiTrack\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes attached event listeners.\\r\\n     *\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    dispose() {\\r\\n        this.removeAllListeners();\\r\\n\\r\\n        this.disposed = true;\\r\\n\\r\\n        return Promise.resolve();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns true if this is a video track and the source of the video is a\\r\\n     * screen capture as opposed to a camera.\\r\\n     */\\r\\n    isScreenSharing() {\\r\\n        // FIXME: Should be fixed or removed.\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns id of the track.\\r\\n     * @returns {string|null} id of the track or null if this is fake track.\\r\\n     */\\r\\n    getId() {\\r\\n        if (this.stream) {\\r\\n            return RTCUtils.getStreamID(this.stream);\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether the MediaStream is active/not ended.\\r\\n     * When there is no check for active we don't have information and so\\r\\n     * will return that stream is active (in case of FF).\\r\\n     * @returns {boolean} whether MediaStream is active.\\r\\n     */\\r\\n    isActive() {\\r\\n        if (typeof this.stream.active !== 'undefined') {\\r\\n            return this.stream.active;\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the audio level for the stream\\r\\n     * @param {number} audioLevel value between 0 and 1\\r\\n     * @param {TraceablePeerConnection} [tpc] the peerconnection instance which\\r\\n     * is source for the audio level. It can be <tt>undefined</tt> for\\r\\n     * a local track if the audio level was measured outside of the\\r\\n     * peerconnection (see /modules/statistics/LocalStatsCollector.js).\\r\\n     */\\r\\n    setAudioLevel(audioLevel, tpc) {\\r\\n        if (this.audioLevel !== audioLevel) {\\r\\n            this.audioLevel = audioLevel;\\r\\n            this.emit(\\r\\n                JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\\r\\n                audioLevel,\\r\\n                tpc);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the msid of the stream attached to the JitsiTrack object or null\\r\\n     * if no stream is attached.\\r\\n     */\\r\\n    getMSID() {\\r\\n        const streamId = this.getStreamId();\\r\\n        const trackId = this.getTrackId();\\r\\n\\r\\n        return streamId && trackId ? `${streamId} ${trackId}` : null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets new audio output device for track's DOM elements. Video tracks are\\r\\n     * ignored.\\r\\n     * @param {string} audioOutputDeviceId - id of 'audiooutput' device from\\r\\n     *      navigator.mediaDevices.enumerateDevices(), '' for default device\\r\\n     * @emits JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    setAudioOutput(audioOutputDeviceId) {\\r\\n        if (!RTCUtils.isDeviceChangeAvailable('output')) {\\r\\n            return Promise.reject(\\r\\n                new Error('Audio output device change is not supported'));\\r\\n        }\\r\\n\\r\\n        // All audio communication is done through audio tracks, so ignore\\r\\n        // changing audio output for video tracks at all.\\r\\n        if (this.isVideoTrack()) {\\r\\n            return Promise.resolve();\\r\\n        }\\r\\n\\r\\n        return (\\r\\n            Promise.all(\\r\\n                this.containers.map(\\r\\n                    element =>\\r\\n                        element.setSinkId(audioOutputDeviceId)\\r\\n                            .catch(error => {\\r\\n                                logger.warn(\\r\\n                                    'Failed to change audio output device on'\\r\\n                                        + ' element. Default or previously set'\\r\\n                                        + ' audio output device will be used.',\\r\\n                                    element,\\r\\n                                    error);\\r\\n                                throw error;\\r\\n                            }))\\r\\n            )\\r\\n                .then(() => {\\r\\n                    this.emit(\\r\\n                        JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED,\\r\\n                        audioOutputDeviceId);\\r\\n                }));\\r\\n    }\\r\\n}\\r\\n\",\"\\r\\n\\r\\n/**\\r\\n * The method will increase the given number by 1. If the given counter is equal\\r\\n * or greater to {@link Number.MAX_SAFE_INTEGER} then it will be rolled back to\\r\\n * 1.\\r\\n * @param {number} number - An integer counter value to be incremented.\\r\\n * @return {number} the next counter value increased by 1 (see the description\\r\\n * above for exception).\\r\\n */\\r\\nexport function safeCounterIncrement(number) {\\r\\n    let nextValue = number;\\r\\n\\r\\n    if (number >= Number.MAX_SAFE_INTEGER) {\\r\\n        nextValue = 0;\\r\\n    }\\r\\n\\r\\n    return nextValue + 1;\\r\\n}\\r\\n\",\"/**\\r\\n * A model for keeping track of each user's total\\r\\n * time as a dominant speaker. The model also\\r\\n * keeps track of the user's last known name\\r\\n * in case the user has left the meeting,\\r\\n * which is also tracked.\\r\\n */\\r\\nclass SpeakerStats {\\r\\n    /**\\r\\n     * Initializes a new SpeakerStats instance.\\r\\n     *\\r\\n     * @constructor\\r\\n     * @param {string} userId - The id of the user being tracked.\\r\\n     * @param {string} displayName - The name of the user being tracked.\\r\\n     * @param {boolean} isLocalStats - True if the stats model tracks\\r\\n     * the local user.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    constructor(userId, displayName, isLocalStats) {\\r\\n        this._userId = userId;\\r\\n        this.setDisplayName(displayName);\\r\\n        this._isLocalStats = isLocalStats || false;\\r\\n        this.setDominantSpeaker(false);\\r\\n        this.totalDominantSpeakerTime = 0;\\r\\n        this._dominantSpeakerStart = 0;\\r\\n        this._hasLeft = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Get the user id being tracked.\\r\\n     *\\r\\n     * @returns {string} The user id.\\r\\n     */\\r\\n    getUserId() {\\r\\n        return this._userId;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Get the name of the user being tracked.\\r\\n     *\\r\\n     * @returns {string} The user name.\\r\\n     */\\r\\n    getDisplayName() {\\r\\n        return this.displayName;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates the last known name of the user being tracked.\\r\\n     *\\r\\n     * @param {string} - The user name.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    setDisplayName(newName) {\\r\\n        this.displayName = newName;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns true if the stats are tracking the local user.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isLocalStats() {\\r\\n        return this._isLocalStats;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns true if the tracked user is currently a dominant speaker.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isDominantSpeaker() {\\r\\n        return this._dominantSpeakerStart > 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns true if the tracked user is currently a dominant speaker.\\r\\n     *\\r\\n     * @param {boolean} - If true, the user will being accumulating time\\r\\n     * as dominant speaker. If false, the user will not accumulate time\\r\\n     * and will record any time accumulated since starting as dominant speaker.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    setDominantSpeaker(isNowDominantSpeaker) {\\r\\n        if (!this.isDominantSpeaker() && isNowDominantSpeaker) {\\r\\n            this._dominantSpeakerStart = Date.now();\\r\\n        } else if (this.isDominantSpeaker() && !isNowDominantSpeaker) {\\r\\n            const now = Date.now();\\r\\n            const timeElapsed = now - this._dominantSpeakerStart;\\r\\n\\r\\n            this.totalDominantSpeakerTime += timeElapsed;\\r\\n            this._dominantSpeakerStart = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Get how long the tracked user has been dominant speaker.\\r\\n     *\\r\\n     * @returns {number} - The speaker time in milliseconds.\\r\\n     */\\r\\n    getTotalDominantSpeakerTime() {\\r\\n        let total = this.totalDominantSpeakerTime;\\r\\n\\r\\n        if (this.isDominantSpeaker()) {\\r\\n            total += Date.now() - this._dominantSpeakerStart;\\r\\n        }\\r\\n\\r\\n        return total;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Get whether or not the user is still in the meeting.\\r\\n     *\\r\\n     * @returns {boolean} True if the user is no longer in the meeting.\\r\\n     */\\r\\n    hasLeft() {\\r\\n        return this._hasLeft;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set the user as having left the meeting.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    markAsHasLeft() {\\r\\n        this._hasLeft = true;\\r\\n        this.setDominantSpeaker(false);\\r\\n    }\\r\\n}\\r\\n\\r\\nmodule.exports = SpeakerStats;\\r\\n\",\"module.exports = function(module) {\\r\\n\\tif (!module.webpackPolyfill) {\\r\\n\\t\\tmodule.deprecate = function() {};\\r\\n\\t\\tmodule.paths = [];\\r\\n\\t\\t// module.parent = undefined by default\\r\\n\\t\\tif (!module.children) module.children = [];\\r\\n\\t\\tObject.defineProperty(module, \\\"loaded\\\", {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tget: function() {\\r\\n\\t\\t\\t\\treturn module.l;\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\t\\tObject.defineProperty(module, \\\"id\\\", {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tget: function() {\\r\\n\\t\\t\\t\\treturn module.i;\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\t\\tmodule.webpackPolyfill = 1;\\r\\n\\t}\\r\\n\\treturn module;\\r\\n};\\r\\n\",\"const AuthenticationEvents = {\\r\\n    /**\\r\\n     * Event callback arguments:\\r\\n     * function(authenticationEnabled, userIdentity)\\r\\n     * authenticationEnabled - indicates whether authentication has been enabled\\r\\n     *                         in this session\\r\\n     * userIdentity - if user has been logged in then it contains user name. If\\r\\n     *                contains 'null' or 'undefined' then user is not logged in.\\r\\n     */\\r\\n    IDENTITY_UPDATED: 'authentication.identity_updated'\\r\\n};\\r\\n\\r\\nmodule.exports = AuthenticationEvents;\\r\\n\",\"/* global __filename, Promise */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport JitsiTrack from './JitsiTrack';\\r\\nimport JitsiTrackError from '../../JitsiTrackError';\\r\\nimport {\\r\\n    TRACK_IS_DISPOSED,\\r\\n    TRACK_NO_STREAM_FOUND\\r\\n} from '../../JitsiTrackErrors';\\r\\nimport {\\r\\n    LOCAL_TRACK_STOPPED,\\r\\n    NO_DATA_FROM_SOURCE,\\r\\n    TRACK_MUTE_CHANGED\\r\\n} from '../../JitsiTrackEvents';\\r\\nimport browser from '../browser';\\r\\nimport RTCUtils from './RTCUtils';\\r\\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\r\\nimport VideoType from '../../service/RTC/VideoType';\\r\\nimport {\\r\\n    NO_BYTES_SENT,\\r\\n    TRACK_UNMUTED,\\r\\n    createNoDataFromSourceEvent\\r\\n} from '../../service/statistics/AnalyticsEvents';\\r\\nimport Statistics from '../statistics/statistics';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Represents a single media track(either audio or video).\\r\\n * One <tt>JitsiLocalTrack</tt> corresponds to one WebRTC MediaStreamTrack.\\r\\n */\\r\\nexport default class JitsiLocalTrack extends JitsiTrack {\\r\\n    /**\\r\\n     * Constructs new JitsiLocalTrack instance.\\r\\n     *\\r\\n     * @constructor\\r\\n     * @param {Object} trackInfo\\r\\n     * @param {number} trackInfo.rtcId the ID assigned by the RTC module\\r\\n     * @param trackInfo.stream WebRTC MediaStream, parent of the track\\r\\n     * @param trackInfo.track underlying WebRTC MediaStreamTrack for new\\r\\n     * JitsiRemoteTrack\\r\\n     * @param trackInfo.mediaType the MediaType of the JitsiRemoteTrack\\r\\n     * @param trackInfo.videoType the VideoType of the JitsiRemoteTrack\\r\\n     * @param trackInfo.effects the effects array contains the effect instance to use\\r\\n     * @param trackInfo.resolution the video resolution if it's a video track\\r\\n     * @param trackInfo.deviceId the ID of the local device for this track\\r\\n     * @param trackInfo.facingMode the camera facing mode used in getUserMedia\\r\\n     * call\\r\\n     * @param {sourceId} trackInfo.sourceId - The id of the desktop sharing\\r\\n     * source. NOTE: defined for desktop sharing tracks only.\\r\\n     */\\r\\n    constructor({\\r\\n        deviceId,\\r\\n        facingMode,\\r\\n        mediaType,\\r\\n        resolution,\\r\\n        rtcId,\\r\\n        sourceId,\\r\\n        sourceType,\\r\\n        stream,\\r\\n        track,\\r\\n        videoType,\\r\\n        effects = []\\r\\n    }) {\\r\\n        super(\\r\\n            /* conference */ null,\\r\\n            stream,\\r\\n            track,\\r\\n            /* streamInactiveHandler */ () => this.emit(LOCAL_TRACK_STOPPED),\\r\\n            mediaType,\\r\\n            videoType);\\r\\n\\r\\n        this._setEffectInProgress = false;\\r\\n        const effect = effects.find(e => e.isEnabled(this));\\r\\n\\r\\n        if (effect) {\\r\\n            this._startStreamEffect(effect);\\r\\n        }\\r\\n\\r\\n        /**\\r\\n         * The ID assigned by the RTC module on instance creation.\\r\\n         *\\r\\n         * @type {number}\\r\\n         */\\r\\n        this.rtcId = rtcId;\\r\\n        this.sourceId = sourceId;\\r\\n        this.sourceType = sourceType;\\r\\n\\r\\n        if (browser.usesNewGumFlow()) {\\r\\n            // Get the resolution from the track itself because it cannot be\\r\\n            // certain which resolution webrtc has fallen back to using.\\r\\n            this.resolution = track.getSettings().height;\\r\\n\\r\\n            // Cache the constraints of the track in case of any this track\\r\\n            // model needs to call getUserMedia again, such as when unmuting.\\r\\n            this._constraints = track.getConstraints();\\r\\n        } else {\\r\\n            // FIXME Currently, Firefox is ignoring our constraints about\\r\\n            // resolutions so we do not store it, to avoid wrong reporting of\\r\\n            // local track resolution.\\r\\n            this.resolution = browser.isFirefox() ? null : resolution;\\r\\n        }\\r\\n\\r\\n        this.deviceId = deviceId;\\r\\n\\r\\n        /**\\r\\n         * The <tt>Promise</tt> which represents the progress of a previously\\r\\n         * queued/scheduled {@link _setMuted} (from the point of view of\\r\\n         * {@link _queueSetMuted}).\\r\\n         *\\r\\n         * @private\\r\\n         * @type {Promise}\\r\\n         */\\r\\n        this._prevSetMuted = Promise.resolve();\\r\\n\\r\\n        /**\\r\\n         * The facing mode of the camera from which this JitsiLocalTrack\\r\\n         * instance was obtained.\\r\\n         *\\r\\n         * @private\\r\\n         * @type {CameraFacingMode|undefined}\\r\\n         */\\r\\n        this._facingMode = facingMode;\\r\\n\\r\\n        // Currently there is no way to know the MediaStreamTrack ended due to\\r\\n        // to device disconnect in Firefox through e.g. \\\"readyState\\\" property.\\r\\n        // Instead we will compare current track's label with device labels from\\r\\n        // enumerateDevices() list.\\r\\n        this._trackEnded = false;\\r\\n\\r\\n        /**\\r\\n         * Indicates whether data has been sent or not.\\r\\n         */\\r\\n        this._hasSentData = false;\\r\\n\\r\\n        /**\\r\\n         * Used only for detection of audio problems. We want to check only once\\r\\n         * whether the track is sending data ot not. This flag is set to false\\r\\n         * after the check.\\r\\n         */\\r\\n        this._testDataSent = true;\\r\\n\\r\\n        // Currently there is no way to determine with what device track was\\r\\n        // created (until getConstraints() support), however we can associate\\r\\n        // tracks with real devices obtained from enumerateDevices() call as\\r\\n        // soon as it's called.\\r\\n        // NOTE: this.deviceId corresponds to the device id specified in GUM constraints and this._realDeviceId seems to\\r\\n        // correspond to the id of a matching device from the available device list.\\r\\n        this._realDeviceId = this.deviceId === '' ? undefined : this.deviceId;\\r\\n\\r\\n        this._trackMutedTS = 0;\\r\\n\\r\\n        this._onDeviceListWillChange = devices => {\\r\\n            const oldRealDeviceId = this._realDeviceId;\\r\\n\\r\\n            this._setRealDeviceIdFromDeviceList(devices);\\r\\n\\r\\n            if (\\r\\n                // Mark track as ended for those browsers that do not support\\r\\n                // \\\"readyState\\\" property. We do not touch tracks created with\\r\\n                // default device ID \\\"\\\".\\r\\n                (typeof this.getTrack().readyState === 'undefined'\\r\\n                    && typeof this._realDeviceId !== 'undefined'\\r\\n                    && !devices.find(d => d.deviceId === this._realDeviceId))\\r\\n\\r\\n                // If there was an associated realDeviceID and after the device change the realDeviceId is undefined\\r\\n                // then the associated device has been disconnected and the _trackEnded flag needs to be set. In\\r\\n                // addition on some Chrome versions the readyState property is set after the device change event is\\r\\n                // triggered which causes issues in jitsi-meet with the selection of a new device because we don't\\r\\n                // detect that the old one was removed.\\r\\n                || (typeof oldRealDeviceId !== 'undefined' && typeof this._realDeviceId === 'undefined')\\r\\n            ) {\\r\\n                this._trackEnded = true;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        // Subscribe each created local audio track to\\r\\n        // RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED event. This is different from\\r\\n        // handling this event for remote tracks (which are handled in RTC.js),\\r\\n        // because there might be local tracks not attached to a conference.\\r\\n        if (this.isAudioTrack() && RTCUtils.isDeviceChangeAvailable('output')) {\\r\\n            this._onAudioOutputDeviceChanged = this.setAudioOutput.bind(this);\\r\\n            RTCUtils.addListener(\\r\\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\\r\\n                this._onAudioOutputDeviceChanged);\\r\\n        }\\r\\n\\r\\n        RTCUtils.addListener(RTCEvents.DEVICE_LIST_WILL_CHANGE, this._onDeviceListWillChange);\\r\\n\\r\\n        this._initNoDataFromSourceHandlers();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns if associated MediaStreamTrack is in the 'ended' state\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isEnded() {\\r\\n        if (this.isVideoTrack() && this.isMuted()) {\\r\\n            // If a video track is muted the readyState will be ended, that's why we need to rely only on the\\r\\n            // _trackEnded flag.\\r\\n            return this._trackEnded;\\r\\n        }\\r\\n\\r\\n        return this.getTrack().readyState === 'ended' || this._trackEnded;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets handlers to the MediaStreamTrack object that will detect camera\\r\\n     * issues.\\r\\n     */\\r\\n    _initNoDataFromSourceHandlers() {\\r\\n        if (!this._isNoDataFromSourceEventsEnabled()) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._setHandler('track_mute', () => {\\r\\n            this._trackMutedTS = window.performance.now();\\r\\n            this._fireNoDataFromSourceEvent();\\r\\n        });\\r\\n\\r\\n        this._setHandler('track_unmute', () => {\\r\\n            this._fireNoDataFromSourceEvent();\\r\\n            Statistics.sendAnalyticsAndLog(\\r\\n                TRACK_UNMUTED,\\r\\n                {\\r\\n                    'media_type': this.getType(),\\r\\n                    'track_type': 'local',\\r\\n                    value: window.performance.now() - this._trackMutedTS\\r\\n                });\\r\\n        });\\r\\n\\r\\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\\r\\n            this._setHandler('track_ended', () => {\\r\\n                if (!this.isReceivingData()) {\\r\\n                    this._fireNoDataFromSourceEvent();\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns true if no data from source events are enabled for this JitsiLocalTrack and false otherwise.\\r\\n     *\\r\\n     * @returns {boolean} - True if no data from source events are enabled for this JitsiLocalTrack and false otherwise.\\r\\n     */\\r\\n    _isNoDataFromSourceEventsEnabled() {\\r\\n        // Disable the events for screen sharing.\\r\\n        return !this.isVideoTrack() || this.videoType !== VideoType.DESKTOP;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Fires NO_DATA_FROM_SOURCE event and logs it to analytics and callstats.\\r\\n     */\\r\\n    _fireNoDataFromSourceEvent() {\\r\\n        const value = !this.isReceivingData();\\r\\n\\r\\n        this.emit(NO_DATA_FROM_SOURCE, value);\\r\\n\\r\\n        // FIXME: Should we report all of those events\\r\\n        Statistics.sendAnalytics(createNoDataFromSourceEvent(this.getType(), value));\\r\\n        Statistics.sendLog(JSON.stringify({\\r\\n            name: NO_DATA_FROM_SOURCE,\\r\\n            log: value\\r\\n        }));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets real device ID by comparing track information with device\\r\\n     * information. This is temporary solution until getConstraints() method\\r\\n     * will be implemented in browsers.\\r\\n     *\\r\\n     * @param {MediaDeviceInfo[]} devices - list of devices obtained from\\r\\n     * enumerateDevices() call\\r\\n     */\\r\\n    _setRealDeviceIdFromDeviceList(devices) {\\r\\n        const track = this.getTrack();\\r\\n        const kind = `${track.kind}input`;\\r\\n        let device = devices.find(d => d.kind === kind && d.label === track.label);\\r\\n\\r\\n        if (!device && this._realDeviceId === 'default') { // the default device has been changed.\\r\\n            // If the default device was 'A' and the default device is changed to 'B' the label for the track will\\r\\n            // remain 'Default - A' but the label for the device in the device list will be updated to 'A'. That's\\r\\n            // why in order to match it we need to remove the 'Default - ' part.\\r\\n            const label = (track.label || '').replace('Default - ', '');\\r\\n\\r\\n            device = devices.find(d => d.kind === kind && d.label === label);\\r\\n        }\\r\\n\\r\\n        if (device) {\\r\\n            this._realDeviceId = device.deviceId;\\r\\n        } else {\\r\\n            this._realDeviceId = undefined;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the stream property of JitsiLocalTrack object and sets all stored\\r\\n     * handlers to it.\\r\\n     *\\r\\n     * @param {MediaStream} stream the new stream.\\r\\n     * @protected\\r\\n     */\\r\\n    _setStream(stream) {\\r\\n        super._setStream(stream);\\r\\n\\r\\n        if (stream) {\\r\\n            // Store the MSID for video mute/unmute purposes.\\r\\n            this.storedMSID = this.getMSID();\\r\\n            logger.debug(`Setting new MSID: ${this.storedMSID} on ${this}`);\\r\\n        } else {\\r\\n            logger.debug(`Setting 'null' stream on ${this}`);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Starts the effect process and returns the modified stream.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} effect - Represents effect instance\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _startStreamEffect(effect) {\\r\\n        this._streamEffect = effect;\\r\\n        this._originalStream = this.stream;\\r\\n        this._setStream(this._streamEffect.startEffect(this._originalStream));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stops the effect process and returns the original stream.\\r\\n     *\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _stopStreamEffect() {\\r\\n        if (this._streamEffect) {\\r\\n            this._streamEffect.stopEffect();\\r\\n            this._setStream(this._originalStream);\\r\\n            this._originalStream = undefined;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stops the currently used effect (if there is one) and starts the passed effect (if there is one).\\r\\n     *\\r\\n     * @param {Object|undefined} effect - The new effect to be set.\\r\\n     */\\r\\n    _switchStreamEffect(effect) {\\r\\n        if (this._streamEffect) {\\r\\n            this._stopStreamEffect();\\r\\n            this._streamEffect = undefined;\\r\\n        }\\r\\n        if (effect) {\\r\\n            this._startStreamEffect(effect);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the effect and switches between the modified stream and original one.\\r\\n     *\\r\\n     * @param {Object} effect - Represents the effect instance to be used.\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    setEffect(effect) {\\r\\n        if (typeof this._streamEffect === 'undefined' && typeof effect === 'undefined') {\\r\\n            return Promise.resolve();\\r\\n        }\\r\\n\\r\\n        if (typeof effect !== 'undefined' && !effect.isEnabled(this)) {\\r\\n            return Promise.reject(new Error('Incompatible effect instance!'));\\r\\n        }\\r\\n\\r\\n        if (this._setEffectInProgress === true) {\\r\\n            return Promise.reject(new Error('setEffect already in progress!'));\\r\\n        }\\r\\n\\r\\n        if (this.isMuted()) {\\r\\n            this._streamEffect = effect;\\r\\n\\r\\n            return Promise.resolve();\\r\\n        }\\r\\n\\r\\n        const conference = this.conference;\\r\\n\\r\\n        if (!conference) {\\r\\n            this._switchStreamEffect(effect);\\r\\n\\r\\n            return Promise.resolve();\\r\\n        }\\r\\n\\r\\n        this._setEffectInProgress = true;\\r\\n\\r\\n        // TODO: Create new JingleSessionPC method for replacing a stream in JitsiLocalTrack without offer answer.\\r\\n        return conference.removeTrack(this)\\r\\n            .then(() => {\\r\\n                this._switchStreamEffect(effect);\\r\\n                if (this.isVideoTrack()) {\\r\\n                    this.containers.forEach(cont => RTCUtils.attachMediaStream(cont, this.stream));\\r\\n                }\\r\\n\\r\\n                return conference.addTrack(this);\\r\\n            })\\r\\n            .then(() => {\\r\\n                this._setEffectInProgress = false;\\r\\n            })\\r\\n            .catch(error => {\\r\\n                // Any error will be not recovarable and will trigger CONFERENCE_FAILED event. But let's try to cleanup\\r\\n                // everyhting related to the effect functionality.\\r\\n                this._setEffectInProgress = false;\\r\\n                this._switchStreamEffect();\\r\\n                logger.error('Failed to switch to the new stream!', error);\\r\\n                throw error;\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Asynchronously mutes this track.\\r\\n     *\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    mute() {\\r\\n        return this._queueSetMuted(true);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Asynchronously unmutes this track.\\r\\n     *\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    unmute() {\\r\\n        return this._queueSetMuted(false);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes a new Promise to execute {@link #_setMuted}. May be called\\r\\n     * multiple times in a row and the invocations of {@link #_setMuted} and,\\r\\n     * consequently, {@link #mute} and/or {@link #unmute} will be resolved in a\\r\\n     * serialized fashion.\\r\\n     *\\r\\n     * @param {boolean} muted - The value to invoke <tt>_setMuted</tt> with.\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    _queueSetMuted(muted) {\\r\\n        const setMuted = this._setMuted.bind(this, muted);\\r\\n\\r\\n        this._prevSetMuted = this._prevSetMuted.then(setMuted, setMuted);\\r\\n\\r\\n        return this._prevSetMuted;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Mutes / unmutes this track.\\r\\n     *\\r\\n     * @param {boolean} muted - If <tt>true</tt>, this track will be muted;\\r\\n     * otherwise, this track will be unmuted.\\r\\n     * @private\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    _setMuted(muted) {\\r\\n        if (this.isMuted() === muted) {\\r\\n            return Promise.resolve();\\r\\n        }\\r\\n\\r\\n        if (this.disposed) {\\r\\n            return Promise.reject(new JitsiTrackError(TRACK_IS_DISPOSED));\\r\\n        }\\r\\n\\r\\n        let promise = Promise.resolve();\\r\\n\\r\\n        // A function that will print info about muted status transition\\r\\n        const logMuteInfo = () => logger.info(`Mute ${this}: ${muted}`);\\r\\n\\r\\n        if (this.isAudioTrack()\\r\\n                || this.videoType === VideoType.DESKTOP\\r\\n                || !browser.doesVideoMuteByStreamRemove()) {\\r\\n            logMuteInfo();\\r\\n            if (this.track) {\\r\\n                this.track.enabled = !muted;\\r\\n            }\\r\\n        } else if (muted) {\\r\\n            promise = new Promise((resolve, reject) => {\\r\\n                logMuteInfo();\\r\\n                this._removeStreamFromConferenceAsMute(\\r\\n                    () => {\\r\\n                        if (this._streamEffect) {\\r\\n                            this._stopStreamEffect();\\r\\n                        }\\r\\n\\r\\n                        // FIXME: Maybe here we should set the SRC for the\\r\\n                        // containers to something\\r\\n                        // We don't want any events to be fired on this stream\\r\\n                        this._unregisterHandlers();\\r\\n                        this.stopStream();\\r\\n                        this._setStream(null);\\r\\n                        resolve();\\r\\n                    },\\r\\n                    reject);\\r\\n            });\\r\\n        } else {\\r\\n            logMuteInfo();\\r\\n\\r\\n            // This path is only for camera.\\r\\n            const streamOptions = {\\r\\n                cameraDeviceId: this.getDeviceId(),\\r\\n                devices: [ MediaType.VIDEO ],\\r\\n                effects: this._streamEffect ? [ this._streamEffect ] : [],\\r\\n                facingMode: this.getCameraFacingMode()\\r\\n            };\\r\\n\\r\\n            if (browser.usesNewGumFlow()) {\\r\\n                promise\\r\\n                    = RTCUtils.newObtainAudioAndVideoPermissions(Object.assign(\\r\\n                        {},\\r\\n                        streamOptions,\\r\\n                        { constraints: { video: this._constraints } }));\\r\\n            } else {\\r\\n                if (this.resolution) {\\r\\n                    streamOptions.resolution = this.resolution;\\r\\n                }\\r\\n\\r\\n                promise\\r\\n                    = RTCUtils.obtainAudioAndVideoPermissions(streamOptions);\\r\\n            }\\r\\n\\r\\n            promise.then(streamsInfo => {\\r\\n                const mediaType = this.getType();\\r\\n                const streamInfo\\r\\n                    = browser.usesNewGumFlow()\\r\\n                        ? streamsInfo.find(\\r\\n                            info => info.track.kind === mediaType)\\r\\n                        : streamsInfo.find(\\r\\n                            info => info.mediaType === mediaType);\\r\\n\\r\\n                if (streamInfo) {\\r\\n                    this._setStream(streamInfo.stream);\\r\\n                    this.track = streamInfo.track;\\r\\n\\r\\n                    // This is not good when video type changes after\\r\\n                    // unmute, but let's not crash here\\r\\n                    if (this.videoType !== streamInfo.videoType) {\\r\\n                        logger.warn(\\r\\n                            `${this}: video type has changed after unmute!`,\\r\\n                            this.videoType, streamInfo.videoType);\\r\\n                        this.videoType = streamInfo.videoType;\\r\\n                    }\\r\\n                } else {\\r\\n                    throw new JitsiTrackError(TRACK_NO_STREAM_FOUND);\\r\\n                }\\r\\n\\r\\n                if (this._streamEffect) {\\r\\n                    this._startStreamEffect(this._streamEffect);\\r\\n                }\\r\\n\\r\\n                this.containers.map(\\r\\n                    cont => RTCUtils.attachMediaStream(cont, this.stream));\\r\\n\\r\\n                return this._addStreamToConferenceAsUnmute();\\r\\n            });\\r\\n        }\\r\\n\\r\\n        return promise\\r\\n            .then(() => this._sendMuteStatus(muted))\\r\\n            .then(() => this.emit(TRACK_MUTE_CHANGED, this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds stream to conference and marks it as \\\"unmute\\\" operation.\\r\\n     *\\r\\n     * @private\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    _addStreamToConferenceAsUnmute() {\\r\\n        if (!this.conference) {\\r\\n            return Promise.resolve();\\r\\n        }\\r\\n\\r\\n        // FIXME it would be good to not included conference as part of this\\r\\n        // process. Only TraceablePeerConnections to which the track is attached\\r\\n        // should care about this action. The TPCs to which the track is not\\r\\n        // attached can sync up when track is re-attached.\\r\\n        // A problem with that is that the \\\"modify sources\\\" queue is part of\\r\\n        // the JingleSessionPC and it would be excluded from the process. One\\r\\n        // solution would be to extract class between TPC and JingleSessionPC\\r\\n        // which would contain the queue and would notify the signaling layer\\r\\n        // when local SSRCs are changed. This would help to separate XMPP from\\r\\n        // the RTC module.\\r\\n        return new Promise((resolve, reject) => {\\r\\n            this.conference._addLocalTrackAsUnmute(this)\\r\\n                .then(resolve, error => reject(new Error(error)));\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes stream from conference and marks it as \\\"mute\\\" operation.\\r\\n     *\\r\\n     * @param {Function} successCallback will be called on success\\r\\n     * @param {Function} errorCallback will be called on error\\r\\n     * @private\\r\\n     */\\r\\n    _removeStreamFromConferenceAsMute(successCallback, errorCallback) {\\r\\n        if (!this.conference) {\\r\\n            successCallback();\\r\\n\\r\\n            return;\\r\\n        }\\r\\n        this.conference._removeLocalTrackAsMute(this).then(\\r\\n            successCallback,\\r\\n            error => errorCallback(new Error(error)));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends mute status for a track to conference if any.\\r\\n     *\\r\\n     * @param {boolean} mute - If track is muted.\\r\\n     * @private\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    _sendMuteStatus(mute) {\\r\\n        if (!this.conference || !this.conference.room) {\\r\\n            return Promise.resolve();\\r\\n        }\\r\\n\\r\\n        return new Promise(resolve => {\\r\\n            this.conference.room[\\r\\n                this.isAudioTrack()\\r\\n                    ? 'setAudioMute'\\r\\n                    : 'setVideoMute'](mute, resolve);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @inheritdoc\\r\\n     *\\r\\n     * Stops sending the media track. And removes it from the HTML.\\r\\n     * NOTE: Works for local tracks only.\\r\\n     *\\r\\n     * @extends JitsiTrack#dispose\\r\\n     * @returns {Promise}\\r\\n     */\\r\\n    dispose() {\\r\\n        this._switchStreamEffect();\\r\\n\\r\\n        let promise = Promise.resolve();\\r\\n\\r\\n        if (this.conference) {\\r\\n            promise = this.conference.removeTrack(this);\\r\\n        }\\r\\n\\r\\n        if (this.stream) {\\r\\n            this.stopStream();\\r\\n            this.detach();\\r\\n        }\\r\\n\\r\\n        RTCUtils.removeListener(RTCEvents.DEVICE_LIST_WILL_CHANGE, this._onDeviceListWillChange);\\r\\n\\r\\n        if (this._onAudioOutputDeviceChanged) {\\r\\n            RTCUtils.removeListener(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\\r\\n                this._onAudioOutputDeviceChanged);\\r\\n        }\\r\\n\\r\\n        return promise.then(() => super.dispose());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns <tt>true</tt> - if the stream is muted and <tt>false</tt>\\r\\n     * otherwise.\\r\\n     *\\r\\n     * @returns {boolean} <tt>true</tt> - if the stream is muted and\\r\\n     * <tt>false</tt> otherwise.\\r\\n     */\\r\\n    isMuted() {\\r\\n        // this.stream will be null when we mute local video on Chrome\\r\\n        if (!this.stream) {\\r\\n            return true;\\r\\n        }\\r\\n        if (this.isVideoTrack() && !this.isActive()) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        return !this.track || !this.track.enabled;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the JitsiConference object associated with the track. This is temp\\r\\n     * solution.\\r\\n     *\\r\\n     * @param conference the JitsiConference object\\r\\n     */\\r\\n    _setConference(conference) {\\r\\n        this.conference = conference;\\r\\n\\r\\n        // We want to keep up with postponed events which should have been fired\\r\\n        // on \\\"attach\\\" call, but for local track we not always have the\\r\\n        // conference before attaching. However this may result in duplicated\\r\\n        // events if they have been triggered on \\\"attach\\\" already.\\r\\n        for (let i = 0; i < this.containers.length; i++) {\\r\\n            this._maybeFireTrackAttached(this.containers[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns <tt>true</tt>.\\r\\n     *\\r\\n     * @returns {boolean} <tt>true</tt>\\r\\n     */\\r\\n    isLocal() {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns device id associated with track.\\r\\n     *\\r\\n     * @returns {string}\\r\\n     */\\r\\n    getDeviceId() {\\r\\n        return this._realDeviceId || this.deviceId;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the participant id which owns the track.\\r\\n     *\\r\\n     * @returns {string} the id of the participants. It corresponds to the\\r\\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\\r\\n     */\\r\\n    getParticipantId() {\\r\\n        return this.conference && this.conference.myUserId();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles bytes sent statistics.\\r\\n     *\\r\\n     * @param {TraceablePeerConnection} tpc the source of the \\\"bytes sent\\\" stat\\r\\n     * @param {number} bytesSent the new value\\r\\n     * NOTE: used only for audio tracks to detect audio issues.\\r\\n     */\\r\\n    _onByteSentStatsReceived(tpc, bytesSent) {\\r\\n        if (bytesSent > 0) {\\r\\n            this._hasSentData = true;\\r\\n        }\\r\\n        const iceConnectionState = tpc.getConnectionState();\\r\\n\\r\\n        if (this._testDataSent && iceConnectionState === 'connected') {\\r\\n            setTimeout(() => {\\r\\n                if (!this._hasSentData) {\\r\\n                    logger.warn(`${this} 'bytes sent' <= 0: \\\\\\r\\n                        ${bytesSent}`);\\r\\n\\r\\n                    Statistics.analytics.sendEvent(NO_BYTES_SENT, { 'media_type': this.getType() });\\r\\n                }\\r\\n            }, 3000);\\r\\n            this._testDataSent = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns facing mode for video track from camera. For other cases (e.g.\\r\\n     * audio track or 'desktop' video track) returns undefined.\\r\\n     *\\r\\n     * @returns {CameraFacingMode|undefined}\\r\\n     */\\r\\n    getCameraFacingMode() {\\r\\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\\r\\n            // MediaStreamTrack#getSettings() is not implemented in many\\r\\n            // browsers, so we need feature checking here. Progress on the\\r\\n            // respective browser's implementation can be tracked at\\r\\n            // https://bugs.chromium.org/p/webrtc/issues/detail?id=2481 for\\r\\n            // Chromium and https://bugzilla.mozilla.org/show_bug.cgi?id=1213517\\r\\n            // for Firefox. Even if a browser implements getSettings() already,\\r\\n            // it might still not return anything for 'facingMode'.\\r\\n            let trackSettings;\\r\\n\\r\\n            try {\\r\\n                trackSettings = this.track.getSettings();\\r\\n            } catch (e) {\\r\\n                // XXX React-native-webrtc, for example, defines\\r\\n                // MediaStreamTrack#getSettings() but the implementation throws\\r\\n                // a \\\"Not implemented\\\" Error.\\r\\n            }\\r\\n            if (trackSettings && 'facingMode' in trackSettings) {\\r\\n                return trackSettings.facingMode;\\r\\n            }\\r\\n\\r\\n            if (typeof this._facingMode !== 'undefined') {\\r\\n                return this._facingMode;\\r\\n            }\\r\\n\\r\\n            // In most cases we are showing a webcam. So if we've gotten here,\\r\\n            // it should be relatively safe to assume that we are probably\\r\\n            // showing the user-facing camera.\\r\\n            return CameraFacingMode.USER;\\r\\n        }\\r\\n\\r\\n        return undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stops the associated MediaStream.\\r\\n     */\\r\\n    stopStream() {\\r\\n        /**\\r\\n         * Indicates that we are executing {@link #stopStream} i.e.\\r\\n         * {@link RTCUtils#stopMediaStream} for the <tt>MediaStream</tt>\\r\\n         * associated with this <tt>JitsiTrack</tt> instance.\\r\\n         *\\r\\n         * @private\\r\\n         * @type {boolean}\\r\\n         */\\r\\n        this._stopStreamInProgress = true;\\r\\n\\r\\n        try {\\r\\n            RTCUtils.stopMediaStream(this.stream);\\r\\n        } finally {\\r\\n            this._stopStreamInProgress = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Switches the camera facing mode if the WebRTC implementation supports the\\r\\n     * custom MediaStreamTrack._switchCamera method. Currently, the method in\\r\\n     * question is implemented in react-native-webrtc only. When such a WebRTC\\r\\n     * implementation is executing, the method is the preferred way to switch\\r\\n     * between the front/user-facing and the back/environment-facing cameras\\r\\n     * because it will likely be (as is the case of react-native-webrtc)\\r\\n     * noticeably faster that creating a new MediaStreamTrack via a new\\r\\n     * getUserMedia call with the switched facingMode constraint value.\\r\\n     * Moreover, the approach with a new getUserMedia call may not even work:\\r\\n     * WebRTC on Android and iOS is either very slow to open the camera a second\\r\\n     * time or plainly freezes attempting to do that.\\r\\n     */\\r\\n    _switchCamera() {\\r\\n        if (this.isVideoTrack()\\r\\n                && this.videoType === VideoType.CAMERA\\r\\n                && typeof this.track._switchCamera === 'function') {\\r\\n            this.track._switchCamera();\\r\\n\\r\\n            this._facingMode\\r\\n                = this._facingMode === CameraFacingMode.ENVIRONMENT\\r\\n                    ? CameraFacingMode.USER\\r\\n                    : CameraFacingMode.ENVIRONMENT;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether the attached MediaStream is receiving data from source or\\r\\n     * not. If the stream property is null(because of mute or another reason)\\r\\n     * this method will return false.\\r\\n     * NOTE: This method doesn't indicate problem with the streams directly.\\r\\n     * For example in case of video mute the method will return false or if the\\r\\n     * user has disposed the track.\\r\\n     *\\r\\n     * @returns {boolean} true if the stream is receiving data and false\\r\\n     * this otherwise.\\r\\n     */\\r\\n    isReceivingData() {\\r\\n        if (this.isVideoTrack()\\r\\n            && (this.isMuted() || this._stopStreamInProgress || this.videoType === VideoType.DESKTOP)) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        if (!this.stream) {\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        // In older version of the spec there is no muted property and\\r\\n        // readyState can have value muted. In the latest versions\\r\\n        // readyState can have values \\\"live\\\" and \\\"ended\\\" and there is\\r\\n        // muted boolean property. If the stream is muted that means that\\r\\n        // we aren't receiving any data from the source. We want to notify\\r\\n        // the users for error if the stream is muted or ended on it's\\r\\n        // creation.\\r\\n\\r\\n        // For video blur enabled use the original video stream\\r\\n        const stream = this._effectEnabled ? this._originalStream : this.stream;\\r\\n\\r\\n        return stream.getTracks().some(track =>\\r\\n            (!('readyState' in track) || track.readyState === 'live')\\r\\n                && (!('muted' in track) || track.muted !== true));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a text representation of this local track instance.\\r\\n     *\\r\\n     * @return {string}\\r\\n     */\\r\\n    toString() {\\r\\n        return `LocalTrack[${this.rtcId},${this.getType()}]`;\\r\\n    }\\r\\n}\\r\\n\",\"import { $iq } from 'strophe.js';\\r\\n\\r\\nimport recordingXMLUtils from './recordingXMLUtils';\\r\\n\\r\\n/**\\r\\n * Represents a recording session.\\r\\n */\\r\\nexport default class JibriSession {\\r\\n    /**\\r\\n     * Initializes a new JibriSession instance.\\r\\n     *\\r\\n     * @constructor\\r\\n     */\\r\\n    constructor(options = {}) {\\r\\n        this._connection = options.connection;\\r\\n        this._mode = options.mode;\\r\\n\\r\\n        this._setSessionID(options.sessionID);\\r\\n        this.setStatus(options.status);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the error related to the session instance, if any.\\r\\n     *\\r\\n     * @returns {string|undefined}\\r\\n     */\\r\\n    getError() {\\r\\n        return this._error;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the session ID of the session instance.\\r\\n     *\\r\\n     * @returns {string|undefined}\\r\\n     */\\r\\n    getID() {\\r\\n        return this._sessionID;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the streaming URL of the session.\\r\\n     *\\r\\n     * @returns {string|undefined}\\r\\n     */\\r\\n    getLiveStreamViewURL() {\\r\\n        return this._liveStreamViewURL;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the current status of the session.\\r\\n     *\\r\\n     * @returns {string|undefined}\\r\\n     */\\r\\n    getStatus() {\\r\\n        return this._status;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the current recording mode of the session, such as \\\"file\\\".\\r\\n     *\\r\\n     * @returns {string}\\r\\n     */\\r\\n    getMode() {\\r\\n        return this._mode;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the last known error message related to the session.\\r\\n     *\\r\\n     * @param {string} error - The error string explaining why the session\\r\\n     * entered an error state.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    setError(error) {\\r\\n        this._error = error;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the last live stream URL for the session instance. Usually this is\\r\\n     * a YouTube URL and usually this is only set for \\\"stream\\\" sessions.\\r\\n     *\\r\\n     * @param {string} url - The live stream URL associated with the session.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    setLiveStreamViewURL(url) {\\r\\n        this._liveStreamViewURL = url;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the last known status for this recording session.\\r\\n     *\\r\\n     * @param {string} status - The new status to set.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    setStatus(status) {\\r\\n        this._status = status;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends a message to start the actual recording.\\r\\n     *\\r\\n     * @param {Object} options - Additional arguments for starting the\\r\\n     * recording.\\r\\n     * @param {string} [options.appData] - Data specific to the app/service that\\r\\n     * the result file will be uploaded.\\r\\n     * @param {string} [options.broadcastId] - The broadcast ID of an\\r\\n     * associated YouTube stream, used for knowing the URL from which the stream\\r\\n     * can be viewed.\\r\\n     * @param {string} options.focusMucJid - The JID of the focus participant\\r\\n     * that controls recording.\\r\\n     * @param {streamId} options.streamId - Necessary for live streaming, this\\r\\n     * is the the stream key needed to start a live streaming session with the\\r\\n     * streaming service provider.\\r\\n     * @returns Promise\\r\\n     */\\r\\n    start({ appData, broadcastId, focusMucJid, streamId }) {\\r\\n        return new Promise((resolve, reject) => {\\r\\n            this._connection.sendIQ(\\r\\n                this._createIQ({\\r\\n                    action: 'start',\\r\\n                    appData,\\r\\n                    focusMucJid,\\r\\n                    broadcastId,\\r\\n                    streamId\\r\\n                }),\\r\\n                result => {\\r\\n                    // All users will eventually receive the 'pending' status\\r\\n                    // from the backend, but for the user initiating the session\\r\\n                    // it's better to give some instant feedback that recording\\r\\n                    // is starting so fire 'pending' here manually.\\r\\n                    this.setStatus('pending');\\r\\n                    this._setSessionID(\\r\\n                        recordingXMLUtils.getSessionIdFromIq(result));\\r\\n\\r\\n                    resolve();\\r\\n                },\\r\\n                error => {\\r\\n                    this._setErrorFromIq(error);\\r\\n\\r\\n                    reject(error);\\r\\n                });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends a message to actually stop the recording session.\\r\\n     *\\r\\n     * @param {Object} options - Additional arguments for stopping the\\r\\n     * recording.\\r\\n     * @param {Object} options.focusMucJid - The JID of the focus participant\\r\\n     * that controls recording.\\r\\n     * @returns Promise\\r\\n     */\\r\\n    stop({ focusMucJid }) {\\r\\n        return new Promise((resolve, reject) => {\\r\\n            this._connection.sendIQ(\\r\\n                this._createIQ({\\r\\n                    action: 'stop',\\r\\n                    focusMucJid\\r\\n                }),\\r\\n                resolve,\\r\\n                reject);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Generates the message to change the status of the recording session.\\r\\n     *\\r\\n     * @param {string} status - The new status to which the recording session\\r\\n     * should transition.\\r\\n     * @param {string} [options.appData] - Data specific to the app/service that\\r\\n     * the result file will be uploaded.\\r\\n     * @param {string} [options.broadcastId] - The broadcast ID of an\\r\\n     * associated YouTube stream, used for knowing the URL from which the stream\\r\\n     * can be viewed.\\r\\n     * @param {string} options.focusMucJid - The JID of the focus participant\\r\\n     * that controls recording.\\r\\n     * @param {streamId} options.streamId - Necessary for live streaming, this\\r\\n     * is the the stream key needed to start a live streaming session with the\\r\\n     * streaming service provider.\\r\\n     * @returns Object - The XMPP IQ message.\\r\\n     */\\r\\n    _createIQ({ action, appData, broadcastId, focusMucJid, streamId }) {\\r\\n        return $iq({\\r\\n            to: focusMucJid,\\r\\n            type: 'set'\\r\\n        })\\r\\n        .c('jibri', {\\r\\n            'xmlns': 'http://jitsi.org/protocol/jibri',\\r\\n            'action': action,\\r\\n            'app_data': appData,\\r\\n            'recording_mode': this._mode,\\r\\n            'streamid': streamId,\\r\\n            'you_tube_broadcast_id': broadcastId\\r\\n        })\\r\\n        .up();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles the error from an iq and stores the error.\\r\\n     *\\r\\n     * @param {Node} errorIq - The error response from an Iq.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _setErrorFromIq(errorIq) {\\r\\n        const error = errorIq.getElementsByTagName('error')[0];\\r\\n\\r\\n        this.setError(error.children[0].tagName);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the known session ID for this recording session.\\r\\n     *\\r\\n     * @param {string} sessionID\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _setSessionID(sessionID) {\\r\\n        this._sessionID = sessionID;\\r\\n    }\\r\\n}\\r\\n\",\"import EventEmitter from 'events';\\r\\n\\r\\nimport * as MediaType from './service/RTC/MediaType';\\r\\nimport browser from './modules/browser';\\r\\nimport RTC from './modules/RTC/RTC';\\r\\nimport RTCEvents from './service/RTC/RTCEvents';\\r\\nimport Statistics from './modules/statistics/statistics';\\r\\n\\r\\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\\r\\n\\r\\nconst AUDIO_PERMISSION_NAME = 'microphone';\\r\\nconst PERMISSION_GRANTED_STATUS = 'granted';\\r\\nconst VIDEO_PERMISSION_NAME = 'camera';\\r\\n\\r\\n/**\\r\\n * Media devices utilities for Jitsi.\\r\\n */\\r\\nclass JitsiMediaDevices {\\r\\n    /**\\r\\n     * Initializes a {@code JitsiMediaDevices} object. There will be a single\\r\\n     * instance of this class.\\r\\n     */\\r\\n    constructor() {\\r\\n        this._eventEmitter = new EventEmitter();\\r\\n        this._grantedPermissions = {};\\r\\n\\r\\n        RTC.addListener(\\r\\n            RTCEvents.DEVICE_LIST_CHANGED,\\r\\n            devices =>\\r\\n                this._eventEmitter.emit(\\r\\n                    JitsiMediaDevicesEvents.DEVICE_LIST_CHANGED,\\r\\n                    devices));\\r\\n        RTC.addListener(\\r\\n            RTCEvents.DEVICE_LIST_AVAILABLE,\\r\\n            devices =>\\r\\n                this._logOutputDevice(\\r\\n                    this.getAudioOutputDevice(),\\r\\n                    devices));\\r\\n        RTC.addListener(\\r\\n            RTCEvents.GRANTED_PERMISSIONS,\\r\\n            grantedPermissions =>\\r\\n                this._handleGrantedPermissions(grantedPermissions));\\r\\n\\r\\n        // Test if the W3C Permissions API is implemented and the 'camera' and\\r\\n        // 'microphone' permissions are implemented. (Testing for at least one\\r\\n        // of them seems sufficient).\\r\\n        this._permissionsApiSupported = new Promise(resolve => {\\r\\n            if (!navigator.permissions) {\\r\\n                resolve(false);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            navigator.permissions.query({ name: VIDEO_PERMISSION_NAME })\\r\\n                .then(() => resolve(true), () => resolve(false));\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updated the local granted permissions cache. A permissions might be\\r\\n     * granted, denied, or undefined. This is represented by having its media\\r\\n     * type key set to {@code true} or {@code false} respectively.\\r\\n     *\\r\\n     * @param {Object} grantedPermissions - Array with the permissions\\r\\n     * which were granted.\\r\\n     */\\r\\n    _handleGrantedPermissions(grantedPermissions) {\\r\\n        this._grantedPermissions = {\\r\\n            ...this._grantedPermissions,\\r\\n            ...grantedPermissions\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gathers data and sends it to statistics.\\r\\n     * @param deviceID the device id to log\\r\\n     * @param devices list of devices\\r\\n     */\\r\\n    _logOutputDevice(deviceID, devices) {\\r\\n        const device\\r\\n            = devices.find(\\r\\n                d => d.kind === 'audiooutput' && d.deviceId === deviceID);\\r\\n\\r\\n        if (device) {\\r\\n            Statistics.sendActiveDeviceListEvent(\\r\\n                RTC.getEventDataForActiveDevice(device));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Executes callback with list of media devices connected.\\r\\n     * @param {function} callback\\r\\n     */\\r\\n    enumerateDevices(callback) {\\r\\n        RTC.enumerateDevices(callback);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if its possible to enumerate available cameras/micropones.\\r\\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\\r\\n     * the WebRTC stack is ready, either with true if the device listing is\\r\\n     * available available or with false otherwise.\\r\\n     */\\r\\n    isDeviceListAvailable() {\\r\\n        return RTC.isDeviceListAvailable();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns true if changing the input (camera / microphone) or output\\r\\n     * (audio) device is supported and false if not.\\r\\n     * @param {string} [deviceType] - type of device to change. Default is\\r\\n     *      undefined or 'input', 'output' - for audio output device change.\\r\\n     * @returns {boolean} true if available, false otherwise.\\r\\n     */\\r\\n    isDeviceChangeAvailable(deviceType) {\\r\\n        return RTC.isDeviceChangeAvailable(deviceType);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the permission for the given device was granted.\\r\\n     *\\r\\n     * @param {'audio'|'video'} [type] - type of devices to check,\\r\\n     *      undefined stands for both 'audio' and 'video' together\\r\\n     * @returns {Promise<boolean>}\\r\\n     */\\r\\n    isDevicePermissionGranted(type) {\\r\\n        return new Promise(resolve => {\\r\\n            // Shortcut: first check if we already know the permission was\\r\\n            // granted.\\r\\n            if (type in this._grantedPermissions) {\\r\\n                resolve(this._grantedPermissions[type]);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            // Check using the Permissions API.\\r\\n            this._permissionsApiSupported.then(supported => {\\r\\n                if (!supported) {\\r\\n                    resolve(false);\\r\\n\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                const promises = [];\\r\\n\\r\\n                switch (type) {\\r\\n                case MediaType.VIDEO:\\r\\n                    promises.push(\\r\\n                        navigator.permissions.query({\\r\\n                            name: VIDEO_PERMISSION_NAME\\r\\n                        }));\\r\\n                    break;\\r\\n                case MediaType.AUDIO:\\r\\n                    promises.push(\\r\\n                        navigator.permissions.query({\\r\\n                            name: AUDIO_PERMISSION_NAME\\r\\n                        }));\\r\\n                    break;\\r\\n                default:\\r\\n                    promises.push(\\r\\n                        navigator.permissions.query({\\r\\n                            name: VIDEO_PERMISSION_NAME\\r\\n                        }));\\r\\n                    promises.push(\\r\\n                        navigator.permissions.query({\\r\\n                            name: AUDIO_PERMISSION_NAME\\r\\n                        }));\\r\\n                }\\r\\n\\r\\n                Promise.all(promises).then(\\r\\n                    results => resolve(results.every(permissionStatus => {\\r\\n                        // The status attribute is deprecated, and state\\r\\n                        // should be used instead, but check both for now\\r\\n                        // for backwards compatibility.\\r\\n                        const grantStatus = permissionStatus.state\\r\\n                            || permissionStatus.status;\\r\\n\\r\\n                        return grantStatus === PERMISSION_GRANTED_STATUS;\\r\\n                    })),\\r\\n                    () => resolve(false)\\r\\n                );\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns true if it is possible to be simultaneously capturing audio\\r\\n     * from more than one device.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isMultipleAudioInputSupported() {\\r\\n        return !browser.isFirefox();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns currently used audio output device id, 'default' stands\\r\\n     * for default device\\r\\n     * @returns {string}\\r\\n     */\\r\\n    getAudioOutputDevice() {\\r\\n        return RTC.getAudioOutputDevice();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets current audio output device.\\r\\n     * @param {string} deviceId - id of 'audiooutput' device from\\r\\n     *      navigator.mediaDevices.enumerateDevices(), 'default' is for\\r\\n     *      default device\\r\\n     * @returns {Promise} - resolves when audio output is changed, is rejected\\r\\n     *      otherwise\\r\\n     */\\r\\n    setAudioOutputDevice(deviceId) {\\r\\n        const availableDevices = RTC.getCurrentlyAvailableMediaDevices();\\r\\n\\r\\n        if (availableDevices && availableDevices.length > 0) {\\r\\n            // if we have devices info report device to stats\\r\\n            // normally this will not happen on startup as this method is called\\r\\n            // too early. This will happen only on user selection of new device\\r\\n            this._logOutputDevice(\\r\\n                deviceId, RTC.getCurrentlyAvailableMediaDevices());\\r\\n        }\\r\\n\\r\\n        return RTC.setAudioOutputDevice(deviceId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds an event handler.\\r\\n     * @param {string} event - event name\\r\\n     * @param {function} handler - event handler\\r\\n     */\\r\\n    addEventListener(event, handler) {\\r\\n        this._eventEmitter.addListener(event, handler);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes event handler.\\r\\n     * @param {string} event - event name\\r\\n     * @param {function} handler - event handler\\r\\n     */\\r\\n    removeEventListener(event, handler) {\\r\\n        this._eventEmitter.removeListener(event, handler);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Emits an event.\\r\\n     * @param {string} event - event name\\r\\n     */\\r\\n    emitEvent(event, ...args) {\\r\\n        this._eventEmitter.emit(event, ...args);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns whether or not the current browser can support capturing video,\\r\\n     * be it camera or desktop, and displaying received video.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    supportsVideo() {\\r\\n        // Defer to the browser capabilities to allow exposure of the api to the\\r\\n        // consumer but prevent other files from having to import\\r\\n        // JitsiMediaDevices.\\r\\n        return browser.supportsVideo();\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default new JitsiMediaDevices();\\r\\n\",\"/* Copyright @ 2015-present 8x8, Inc.\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *     http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Ordered log levels.\\r\\n */\\r\\nvar levels = {\\r\\n    \\\"trace\\\": 0,\\r\\n    \\\"debug\\\": 1,\\r\\n    \\\"info\\\": 2,\\r\\n    \\\"log\\\": 3,\\r\\n    \\\"warn\\\": 4,\\r\\n    \\\"error\\\": 5\\r\\n};\\r\\n\\r\\n/**\\r\\n * The default transport - console\\r\\n * @type LoggerTransport\\r\\n */\\r\\nLogger.consoleTransport = console;\\r\\n\\r\\n/**\\r\\n * The array which stores currently registered global transports.\\r\\n * @type {[LoggerTransport]}\\r\\n */\\r\\nvar globalTransports = [ Logger.consoleTransport ];\\r\\n\\r\\n/**\\r\\n * Adds given {@link LoggerTransport} instance to the list of global\\r\\n * transports which means that it'll be used by all {@link Logger}s\\r\\n * @param {LoggerTransport} transport\\r\\n */\\r\\nLogger.addGlobalTransport = function(transport) {\\r\\n    if (globalTransports.indexOf(transport) === -1) {\\r\\n        globalTransports.push(transport);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes given {@link LoggerTransport} instance from the list of global\\r\\n * transports\\r\\n * @param {LoggerTransport} transport\\r\\n */\\r\\nLogger.removeGlobalTransport = function(transport) {\\r\\n    var transportIdx = globalTransports.indexOf(transport);\\r\\n    if (transportIdx !== -1) {\\r\\n        globalTransports.splice(transportIdx, 1);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * The global configuration options.\\r\\n */\\r\\nvar globalOptions = {};\\r\\n\\r\\n/**\\r\\n * Sets global options which will be used by all loggers. Changing these works\\r\\n * even after other loggers are created.\\r\\n */\\r\\nLogger.setGlobalOptions = function(options) {\\r\\n    globalOptions = options || {};\\r\\n}\\r\\n\\r\\n/**\\r\\n * Parses Error's object stack trace and extracts information about the last\\r\\n * caller before the log method was called.\\r\\n * @returns JS object with info about the caller - method name, file location,\\r\\n * line and column.\\r\\n */\\r\\nfunction getCallerInfo() {\\r\\n    var callerInfo = {\\r\\n        methodName: \\\"\\\",\\r\\n        fileLocation: \\\"\\\",\\r\\n        line: null,\\r\\n        column: null\\r\\n    };\\r\\n    //gets the part of the stack without the logger wrappers\\r\\n    var error = new Error();\\r\\n    var stack = error.stack? error.stack.split(\\\"\\\\n\\\") : [];\\r\\n    if(!stack || stack.length < 1) {\\r\\n        return callerInfo;\\r\\n    }\\r\\n    var m = null;\\r\\n    if(stack[3]) {\\r\\n        m = stack[3].match(/\\\\s*at\\\\s*(.+?)\\\\s*\\\\((\\\\S*)\\\\s*:(\\\\d*)\\\\s*:(\\\\d*)\\\\)/);\\r\\n    }\\r\\n    if(!m || m.length <= 4) {\\r\\n        //Firefox && Safari\\r\\n        if(stack[2].indexOf(\\\"log@\\\") === 0){\\r\\n            //Safari\\r\\n            callerInfo.methodName = stack[3].substr(0, stack[3].indexOf(\\\"@\\\"));\\r\\n        } else {\\r\\n            //Firefox\\r\\n            callerInfo.methodName = stack[2].substr(0, stack[2].indexOf(\\\"@\\\"));\\r\\n        }\\r\\n        return callerInfo;\\r\\n    }\\r\\n\\r\\n    callerInfo.methodName = m[1];\\r\\n    callerInfo.fileLocation = m[2];\\r\\n    callerInfo.line = m[3];\\r\\n    callerInfo.column = m[4];\\r\\n    return callerInfo;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Logs messages using the transports and level from the logger.\\r\\n * @param logger a logger instance.\\r\\n * @param level the log level of the message. See the levels variable.\\r\\n * @param arguments array with arguments that will be logged.\\r\\n */\\r\\nfunction log() {\\r\\n    var logger = arguments[0], level = arguments[1],\\r\\n        args = Array.prototype.slice.call(arguments, 2);\\r\\n    if(levels[level] < logger.level) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    var callerInfo\\r\\n        = !(logger.options.disableCallerInfo\\r\\n            || globalOptions.disableCallerInfo) && getCallerInfo();\\r\\n    var transports = globalTransports.concat(logger.transports);\\r\\n    for(var i = 0; i < transports.length; i++) {\\r\\n        var t = transports[i];\\r\\n        var l = t[level];\\r\\n        if(l && typeof(l) === \\\"function\\\") {\\r\\n            var logPrefixes = [];\\r\\n\\r\\n            if (logger.id) {\\r\\n                logPrefixes.push(\\\"[\\\" + logger.id + \\\"]\\\");\\r\\n            }\\r\\n\\r\\n            if (callerInfo && callerInfo.methodName.length > 1) {\\r\\n                logPrefixes.push(\\\"<\\\" + callerInfo.methodName + \\\">: \\\");\\r\\n            }\\r\\n\\r\\n            var fullLogParts = logPrefixes.concat(args);\\r\\n\\r\\n            l.bind(t).apply(t, fullLogParts);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n * Constructs new logger object.\\r\\n * @param level the logging level for the new logger\\r\\n * @param id optional identifier for the logger instance.\\r\\n * @param {LoggerTransport} transports optional list of handlers(objects) for\\r\\n * the logs. The handlers must support - log, warn, error, debug, info, trace.\\r\\n * @param options optional configuration file for how the logger should behave.\\r\\n * @param {boolean} options.disableCallerInfo Whether the call site of a logger\\r\\n * method invocation should be included in the log. Defaults to false, so the\\r\\n * call site will be included.\\r\\n */\\r\\nfunction Logger(level, id, transports, options) {\\r\\n    this.id = id;\\r\\n    this.options = options || {};\\r\\n    this.transports = transports;\\r\\n    if(!this.transports) {\\r\\n        this.transports = [];\\r\\n    }\\r\\n    this.level = levels[level];\\r\\n    var methods = Object.keys(levels);\\r\\n    for(var i = 0; i < methods.length; i++){\\r\\n        this[methods[i]] =\\r\\n            log.bind(null, this, methods[i]);\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Sets the log level for the logger.\\r\\n * @param level the new log level.\\r\\n */\\r\\nLogger.prototype.setLevel = function (level) {\\r\\n    this.level = levels[level];\\r\\n};\\r\\nmodule.exports = Logger;\\r\\n\\r\\n/**\\r\\n * Enum for the supported log levels.\\r\\n */\\r\\nLogger.levels = {\\r\\n    TRACE: \\\"trace\\\",\\r\\n    DEBUG: \\\"debug\\\",\\r\\n    INFO: \\\"info\\\",\\r\\n    LOG: \\\"log\\\",\\r\\n    WARN: \\\"warn\\\",\\r\\n    ERROR: \\\"error\\\"\\r\\n};\\r\\n\",\" /* eslint-env node */\\n'use strict';\\n\\n// SDP helpers.\\nvar SDPUtils = {};\\n\\n// Generate an alphanumeric identifier for cname or mids.\\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\\nSDPUtils.generateIdentifier = function() {\\n  return Math.random().toString(36).substr(2, 10);\\n};\\n\\n// The RTCP CNAME used by all peerconnections from the same JS.\\nSDPUtils.localCName = SDPUtils.generateIdentifier();\\n\\n// Splits SDP into lines, dealing with both CRLF and LF.\\nSDPUtils.splitLines = function(blob) {\\n  return blob.trim().split('\\\\n').map(function(line) {\\n    return line.trim();\\n  });\\n};\\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\\nSDPUtils.splitSections = function(blob) {\\n  var parts = blob.split('\\\\nm=');\\n  return parts.map(function(part, index) {\\n    return (index > 0 ? 'm=' + part : part).trim() + '\\\\r\\\\n';\\n  });\\n};\\n\\n// returns the session description.\\nSDPUtils.getDescription = function(blob) {\\n  var sections = SDPUtils.splitSections(blob);\\n  return sections && sections[0];\\n};\\n\\n// returns the individual media sections.\\nSDPUtils.getMediaSections = function(blob) {\\n  var sections = SDPUtils.splitSections(blob);\\n  sections.shift();\\n  return sections;\\n};\\n\\n// Returns lines that start with a certain prefix.\\nSDPUtils.matchPrefix = function(blob, prefix) {\\n  return SDPUtils.splitLines(blob).filter(function(line) {\\n    return line.indexOf(prefix) === 0;\\n  });\\n};\\n\\n// Parses an ICE candidate line. Sample input:\\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\\n// rport 55996\\\"\\nSDPUtils.parseCandidate = function(line) {\\n  var parts;\\n  // Parse both variants.\\n  if (line.indexOf('a=candidate:') === 0) {\\n    parts = line.substring(12).split(' ');\\n  } else {\\n    parts = line.substring(10).split(' ');\\n  }\\n\\n  var candidate = {\\n    foundation: parts[0],\\n    component: parseInt(parts[1], 10),\\n    protocol: parts[2].toLowerCase(),\\n    priority: parseInt(parts[3], 10),\\n    ip: parts[4],\\n    port: parseInt(parts[5], 10),\\n    // skip parts[6] == 'typ'\\n    type: parts[7]\\n  };\\n\\n  for (var i = 8; i < parts.length; i += 2) {\\n    switch (parts[i]) {\\n      case 'raddr':\\n        candidate.relatedAddress = parts[i + 1];\\n        break;\\n      case 'rport':\\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\\n        break;\\n      case 'tcptype':\\n        candidate.tcpType = parts[i + 1];\\n        break;\\n      case 'ufrag':\\n        candidate.ufrag = parts[i + 1]; // for backward compability.\\n        candidate.usernameFragment = parts[i + 1];\\n        break;\\n      default: // extension handling, in particular ufrag\\n        candidate[parts[i]] = parts[i + 1];\\n        break;\\n    }\\n  }\\n  return candidate;\\n};\\n\\n// Translates a candidate object into SDP candidate attribute.\\nSDPUtils.writeCandidate = function(candidate) {\\n  var sdp = [];\\n  sdp.push(candidate.foundation);\\n  sdp.push(candidate.component);\\n  sdp.push(candidate.protocol.toUpperCase());\\n  sdp.push(candidate.priority);\\n  sdp.push(candidate.ip);\\n  sdp.push(candidate.port);\\n\\n  var type = candidate.type;\\n  sdp.push('typ');\\n  sdp.push(type);\\n  if (type !== 'host' && candidate.relatedAddress &&\\n      candidate.relatedPort) {\\n    sdp.push('raddr');\\n    sdp.push(candidate.relatedAddress); // was: relAddr\\n    sdp.push('rport');\\n    sdp.push(candidate.relatedPort); // was: relPort\\n  }\\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\\n    sdp.push('tcptype');\\n    sdp.push(candidate.tcpType);\\n  }\\n  if (candidate.ufrag) {\\n    sdp.push('ufrag');\\n    sdp.push(candidate.ufrag);\\n  }\\n  return 'candidate:' + sdp.join(' ');\\n};\\n\\n// Parses an ice-options line, returns an array of option tags.\\n// a=ice-options:foo bar\\nSDPUtils.parseIceOptions = function(line) {\\n  return line.substr(14).split(' ');\\n}\\n\\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\\n// a=rtpmap:111 opus/48000/2\\nSDPUtils.parseRtpMap = function(line) {\\n  var parts = line.substr(9).split(' ');\\n  var parsed = {\\n    payloadType: parseInt(parts.shift(), 10) // was: id\\n  };\\n\\n  parts = parts[0].split('/');\\n\\n  parsed.name = parts[0];\\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\\n  // was: channels\\n  parsed.numChannels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\\n  return parsed;\\n};\\n\\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\\n// RTCRtpCodecParameters.\\nSDPUtils.writeRtpMap = function(codec) {\\n  var pt = codec.payloadType;\\n  if (codec.preferredPayloadType !== undefined) {\\n    pt = codec.preferredPayloadType;\\n  }\\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\\n      (codec.numChannels !== 1 ? '/' + codec.numChannels : '') + '\\\\r\\\\n';\\n};\\n\\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\\nSDPUtils.parseExtmap = function(line) {\\n  var parts = line.substr(9).split(' ');\\n  return {\\n    id: parseInt(parts[0], 10),\\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\\n    uri: parts[1]\\n  };\\n};\\n\\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\\n// RTCRtpHeaderExtension.\\nSDPUtils.writeExtmap = function(headerExtension) {\\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\\n          ? '/' + headerExtension.direction\\n          : '') +\\n      ' ' + headerExtension.uri + '\\\\r\\\\n';\\n};\\n\\n// Parses an ftmp line, returns dictionary. Sample input:\\n// a=fmtp:96 vbr=on;cng=on\\n// Also deals with vbr=on; cng=on\\nSDPUtils.parseFmtp = function(line) {\\n  var parsed = {};\\n  var kv;\\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\\n  for (var j = 0; j < parts.length; j++) {\\n    kv = parts[j].trim().split('=');\\n    parsed[kv[0].trim()] = kv[1];\\n  }\\n  return parsed;\\n};\\n\\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\\nSDPUtils.writeFmtp = function(codec) {\\n  var line = '';\\n  var pt = codec.payloadType;\\n  if (codec.preferredPayloadType !== undefined) {\\n    pt = codec.preferredPayloadType;\\n  }\\n  if (codec.parameters && Object.keys(codec.parameters).length) {\\n    var params = [];\\n    Object.keys(codec.parameters).forEach(function(param) {\\n      params.push(param + '=' + codec.parameters[param]);\\n    });\\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\\\r\\\\n';\\n  }\\n  return line;\\n};\\n\\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\\n// a=rtcp-fb:98 nack rpsi\\nSDPUtils.parseRtcpFb = function(line) {\\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\\n  return {\\n    type: parts.shift(),\\n    parameter: parts.join(' ')\\n  };\\n};\\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\\nSDPUtils.writeRtcpFb = function(codec) {\\n  var lines = '';\\n  var pt = codec.payloadType;\\n  if (codec.preferredPayloadType !== undefined) {\\n    pt = codec.preferredPayloadType;\\n  }\\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\\n    // FIXME: special handling for trr-int?\\n    codec.rtcpFeedback.forEach(function(fb) {\\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\\n          '\\\\r\\\\n';\\n    });\\n  }\\n  return lines;\\n};\\n\\n// Parses an RFC 5576 ssrc media attribute. Sample input:\\n// a=ssrc:3735928559 cname:something\\nSDPUtils.parseSsrcMedia = function(line) {\\n  var sp = line.indexOf(' ');\\n  var parts = {\\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\\n  };\\n  var colon = line.indexOf(':', sp);\\n  if (colon > -1) {\\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\\n    parts.value = line.substr(colon + 1);\\n  } else {\\n    parts.attribute = line.substr(sp + 1);\\n  }\\n  return parts;\\n};\\n\\n// Extracts the MID (RFC 5888) from a media section.\\n// returns the MID or undefined if no mid line was found.\\nSDPUtils.getMid = function(mediaSection) {\\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\\n  if (mid) {\\n    return mid.substr(6);\\n  }\\n}\\n\\nSDPUtils.parseFingerprint = function(line) {\\n  var parts = line.substr(14).split(' ');\\n  return {\\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\\n    value: parts[1]\\n  };\\n};\\n\\n// Extracts DTLS parameters from SDP media section or sessionpart.\\n// FIXME: for consistency with other functions this should only\\n//   get the fingerprint line as input. See also getIceParameters.\\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\\n      'a=fingerprint:');\\n  // Note: a=setup line is ignored since we use the 'auto' role.\\n  // Note2: 'algorithm' is not case sensitive except in Edge.\\n  return {\\n    role: 'auto',\\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\\n  };\\n};\\n\\n// Serializes DTLS parameters to SDP.\\nSDPUtils.writeDtlsParameters = function(params, setupType) {\\n  var sdp = 'a=setup:' + setupType + '\\\\r\\\\n';\\n  params.fingerprints.forEach(function(fp) {\\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\\\r\\\\n';\\n  });\\n  return sdp;\\n};\\n// Parses ICE information from SDP media section or sessionpart.\\n// FIXME: for consistency with other functions this should only\\n//   get the ice-ufrag and ice-pwd lines as input.\\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\\n  var lines = SDPUtils.splitLines(mediaSection);\\n  // Search in session part, too.\\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\\n  var iceParameters = {\\n    usernameFragment: lines.filter(function(line) {\\n      return line.indexOf('a=ice-ufrag:') === 0;\\n    })[0].substr(12),\\n    password: lines.filter(function(line) {\\n      return line.indexOf('a=ice-pwd:') === 0;\\n    })[0].substr(10)\\n  };\\n  return iceParameters;\\n};\\n\\n// Serializes ICE parameters to SDP.\\nSDPUtils.writeIceParameters = function(params) {\\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\\\r\\\\n' +\\n      'a=ice-pwd:' + params.password + '\\\\r\\\\n';\\n};\\n\\n// Parses the SDP media section and returns RTCRtpParameters.\\nSDPUtils.parseRtpParameters = function(mediaSection) {\\n  var description = {\\n    codecs: [],\\n    headerExtensions: [],\\n    fecMechanisms: [],\\n    rtcp: []\\n  };\\n  var lines = SDPUtils.splitLines(mediaSection);\\n  var mline = lines[0].split(' ');\\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\\n    var pt = mline[i];\\n    var rtpmapline = SDPUtils.matchPrefix(\\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\\n    if (rtpmapline) {\\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\\n      var fmtps = SDPUtils.matchPrefix(\\n          mediaSection, 'a=fmtp:' + pt + ' ');\\n      // Only the first a=fmtp:<pt> is considered.\\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\\n        .map(SDPUtils.parseRtcpFb);\\n      description.codecs.push(codec);\\n      // parse FEC mechanisms from rtpmap lines.\\n      switch (codec.name.toUpperCase()) {\\n        case 'RED':\\n        case 'ULPFEC':\\n          description.fecMechanisms.push(codec.name.toUpperCase());\\n          break;\\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\\n          break;\\n      }\\n    }\\n  }\\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\\n  });\\n  // FIXME: parse rtcp.\\n  return description;\\n};\\n\\n// Generates parts of the SDP media section describing the capabilities /\\n// parameters.\\nSDPUtils.writeRtpDescription = function(kind, caps) {\\n  var sdp = '';\\n\\n  // Build the mline.\\n  sdp += 'm=' + kind + ' ';\\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\\n  sdp += ' UDP/TLS/RTP/SAVPF ';\\n  sdp += caps.codecs.map(function(codec) {\\n    if (codec.preferredPayloadType !== undefined) {\\n      return codec.preferredPayloadType;\\n    }\\n    return codec.payloadType;\\n  }).join(' ') + '\\\\r\\\\n';\\n\\n  sdp += 'c=IN IP4 0.0.0.0\\\\r\\\\n';\\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\\\r\\\\n';\\n\\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\\n  caps.codecs.forEach(function(codec) {\\n    sdp += SDPUtils.writeRtpMap(codec);\\n    sdp += SDPUtils.writeFmtp(codec);\\n    sdp += SDPUtils.writeRtcpFb(codec);\\n  });\\n  var maxptime = 0;\\n  caps.codecs.forEach(function(codec) {\\n    if (codec.maxptime > maxptime) {\\n      maxptime = codec.maxptime;\\n    }\\n  });\\n  if (maxptime > 0) {\\n    sdp += 'a=maxptime:' + maxptime + '\\\\r\\\\n';\\n  }\\n  sdp += 'a=rtcp-mux\\\\r\\\\n';\\n\\n  caps.headerExtensions.forEach(function(extension) {\\n    sdp += SDPUtils.writeExtmap(extension);\\n  });\\n  // FIXME: write fecMechanisms.\\n  return sdp;\\n};\\n\\n// Parses the SDP media section and returns an array of\\n// RTCRtpEncodingParameters.\\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\\n  var encodingParameters = [];\\n  var description = SDPUtils.parseRtpParameters(mediaSection);\\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\\n\\n  // filter a=ssrc:... cname:, ignore PlanB-msid\\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\\n  .map(function(line) {\\n    return SDPUtils.parseSsrcMedia(line);\\n  })\\n  .filter(function(parts) {\\n    return parts.attribute === 'cname';\\n  });\\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\\n  var secondarySsrc;\\n\\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\\n  .map(function(line) {\\n    var parts = line.split(' ');\\n    parts.shift();\\n    return parts.map(function(part) {\\n      return parseInt(part, 10);\\n    });\\n  });\\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\\n    secondarySsrc = flows[0][1];\\n  }\\n\\n  description.codecs.forEach(function(codec) {\\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\\n      var encParam = {\\n        ssrc: primarySsrc,\\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\\n        rtx: {\\n          ssrc: secondarySsrc\\n        }\\n      };\\n      encodingParameters.push(encParam);\\n      if (hasRed) {\\n        encParam = JSON.parse(JSON.stringify(encParam));\\n        encParam.fec = {\\n          ssrc: secondarySsrc,\\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\\n        };\\n        encodingParameters.push(encParam);\\n      }\\n    }\\n  });\\n  if (encodingParameters.length === 0 && primarySsrc) {\\n    encodingParameters.push({\\n      ssrc: primarySsrc\\n    });\\n  }\\n\\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\\n  if (bandwidth.length) {\\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\\n      // use formula from JSEP to convert b=AS to TIAS value.\\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\\n          - (50 * 40 * 8);\\n    } else {\\n      bandwidth = undefined;\\n    }\\n    encodingParameters.forEach(function(params) {\\n      params.maxBitrate = bandwidth;\\n    });\\n  }\\n  return encodingParameters;\\n};\\n\\n// parses http://draft.ortc.org/#rtcrtcpparameters*\\nSDPUtils.parseRtcpParameters = function(mediaSection) {\\n  var rtcpParameters = {};\\n\\n  var cname;\\n  // Gets the first SSRC. Note that with RTX there might be multiple\\n  // SSRCs.\\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\\n      .map(function(line) {\\n        return SDPUtils.parseSsrcMedia(line);\\n      })\\n      .filter(function(obj) {\\n        return obj.attribute === 'cname';\\n      })[0];\\n  if (remoteSsrc) {\\n    rtcpParameters.cname = remoteSsrc.value;\\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\\n  }\\n\\n  // Edge uses the compound attribute instead of reducedSize\\n  // compound is !reducedSize\\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\\n  rtcpParameters.reducedSize = rsize.length > 0;\\n  rtcpParameters.compound = rsize.length === 0;\\n\\n  // parses the rtcp-mux attrіbute.\\n  // Note that Edge does not support unmuxed RTCP.\\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\\n  rtcpParameters.mux = mux.length > 0;\\n\\n  return rtcpParameters;\\n};\\n\\n// parses either a=msid: or a=ssrc:... msid lines and returns\\n// the id of the MediaStream and MediaStreamTrack.\\nSDPUtils.parseMsid = function(mediaSection) {\\n  var parts;\\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\\n  if (spec.length === 1) {\\n    parts = spec[0].substr(7).split(' ');\\n    return {stream: parts[0], track: parts[1]};\\n  }\\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\\n  .map(function(line) {\\n    return SDPUtils.parseSsrcMedia(line);\\n  })\\n  .filter(function(parts) {\\n    return parts.attribute === 'msid';\\n  });\\n  if (planB.length > 0) {\\n    parts = planB[0].value.split(' ');\\n    return {stream: parts[0], track: parts[1]};\\n  }\\n};\\n\\n// Generate a session ID for SDP.\\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\\n// recommends using a cryptographically random +ve 64-bit value\\n// but right now this should be acceptable and within the right range\\nSDPUtils.generateSessionId = function() {\\n  return Math.random().toString().substr(2, 21);\\n};\\n\\n// Write boilder plate for start of SDP\\n// sessId argument is optional - if not supplied it will\\n// be generated randomly\\n// sessVersion is optional and defaults to 2\\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer) {\\n  var sessionId;\\n  var version = sessVer !== undefined ? sessVer : 2;\\n  if (sessId) {\\n    sessionId = sessId;\\n  } else {\\n    sessionId = SDPUtils.generateSessionId();\\n  }\\n  // FIXME: sess-id should be an NTP timestamp.\\n  return 'v=0\\\\r\\\\n' +\\n      'o=thisisadapterortc ' + sessionId + ' ' + version + ' IN IP4 127.0.0.1\\\\r\\\\n' +\\n      's=-\\\\r\\\\n' +\\n      't=0 0\\\\r\\\\n';\\n};\\n\\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\\n\\n  // Map ICE parameters (ufrag, pwd) to SDP.\\n  sdp += SDPUtils.writeIceParameters(\\n      transceiver.iceGatherer.getLocalParameters());\\n\\n  // Map DTLS parameters to SDP.\\n  sdp += SDPUtils.writeDtlsParameters(\\n      transceiver.dtlsTransport.getLocalParameters(),\\n      type === 'offer' ? 'actpass' : 'active');\\n\\n  sdp += 'a=mid:' + transceiver.mid + '\\\\r\\\\n';\\n\\n  if (transceiver.direction) {\\n    sdp += 'a=' + transceiver.direction + '\\\\r\\\\n';\\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\\n    sdp += 'a=sendrecv\\\\r\\\\n';\\n  } else if (transceiver.rtpSender) {\\n    sdp += 'a=sendonly\\\\r\\\\n';\\n  } else if (transceiver.rtpReceiver) {\\n    sdp += 'a=recvonly\\\\r\\\\n';\\n  } else {\\n    sdp += 'a=inactive\\\\r\\\\n';\\n  }\\n\\n  if (transceiver.rtpSender) {\\n    // spec.\\n    var msid = 'msid:' + stream.id + ' ' +\\n        transceiver.rtpSender.track.id + '\\\\r\\\\n';\\n    sdp += 'a=' + msid;\\n\\n    // for Chrome.\\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\\n        ' ' + msid;\\n    if (transceiver.sendEncodingParameters[0].rtx) {\\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\\n          ' ' + msid;\\n      sdp += 'a=ssrc-group:FID ' +\\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\\n          '\\\\r\\\\n';\\n    }\\n  }\\n  // FIXME: this should be written by writeRtpDescription.\\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\\n      ' cname:' + SDPUtils.localCName + '\\\\r\\\\n';\\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\\n        ' cname:' + SDPUtils.localCName + '\\\\r\\\\n';\\n  }\\n  return sdp;\\n};\\n\\n// Gets the direction from the mediaSection or the sessionpart.\\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\\n  var lines = SDPUtils.splitLines(mediaSection);\\n  for (var i = 0; i < lines.length; i++) {\\n    switch (lines[i]) {\\n      case 'a=sendrecv':\\n      case 'a=sendonly':\\n      case 'a=recvonly':\\n      case 'a=inactive':\\n        return lines[i].substr(2);\\n      default:\\n        // FIXME: What should happen here?\\n    }\\n  }\\n  if (sessionpart) {\\n    return SDPUtils.getDirection(sessionpart);\\n  }\\n  return 'sendrecv';\\n};\\n\\nSDPUtils.getKind = function(mediaSection) {\\n  var lines = SDPUtils.splitLines(mediaSection);\\n  var mline = lines[0].split(' ');\\n  return mline[0].substr(2);\\n};\\n\\nSDPUtils.isRejected = function(mediaSection) {\\n  return mediaSection.split(' ', 2)[1] === '0';\\n};\\n\\nSDPUtils.parseMLine = function(mediaSection) {\\n  var lines = SDPUtils.splitLines(mediaSection);\\n  var parts = lines[0].substr(2).split(' ');\\n  return {\\n    kind: parts[0],\\n    port: parseInt(parts[1], 10),\\n    protocol: parts[2],\\n    fmt: parts.slice(3).join(' ')\\n  };\\n};\\n\\nSDPUtils.parseOLine = function(mediaSection) {\\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\\n  var parts = line.substr(2).split(' ');\\n  return {\\n    username: parts[0],\\n    sessionId: parts[1],\\n    sessionVersion: parseInt(parts[2], 10),\\n    netType: parts[3],\\n    addressType: parts[4],\\n    address: parts[5],\\n  };\\n}\\n\\n// Expose public methods.\\nif (typeof module === 'object') {\\n  module.exports = SDPUtils;\\n}\\n\",\"var grammar = module.exports = {\\n  v: [{\\n    name: 'version',\\n    reg: /^(\\\\d*)$/\\n  }],\\n  o: [{ //o=- 20518 0 IN IP4 203.0.113.1\\n    // NB: sessionId will be a String in most cases because it is huge\\n    name: 'origin',\\n    reg: /^(\\\\S*) (\\\\d*) (\\\\d*) (\\\\S*) IP(\\\\d) (\\\\S*)/,\\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\\n    format: '%s %s %d %s IP%d %s'\\n  }],\\n  // default parsing of these only (though some of these feel outdated)\\n  s: [{ name: 'name' }],\\n  i: [{ name: 'description' }],\\n  u: [{ name: 'uri' }],\\n  e: [{ name: 'email' }],\\n  p: [{ name: 'phone' }],\\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\\n  //k: [{}], // outdated thing ignored\\n  t: [{ //t=0 0\\n    name: 'timing',\\n    reg: /^(\\\\d*) (\\\\d*)/,\\n    names: ['start', 'stop'],\\n    format: '%d %d'\\n  }],\\n  c: [{ //c=IN IP4 10.47.197.26\\n    name: 'connection',\\n    reg: /^IN IP(\\\\d) (\\\\S*)/,\\n    names: ['version', 'ip'],\\n    format: 'IN IP%d %s'\\n  }],\\n  b: [{ //b=AS:4000\\n    push: 'bandwidth',\\n    reg: /^(TIAS|AS|CT|RR|RS):(\\\\d*)/,\\n    names: ['type', 'limit'],\\n    format: '%s:%s'\\n  }],\\n  m: [{ //m=video 51744 RTP/AVP 126 97 98 34 31\\n    // NB: special - pushes to session\\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\\n    reg: /^(\\\\w*) (\\\\d*) ([\\\\w\\\\/]*)(?: (.*))?/,\\n    names: ['type', 'port', 'protocol', 'payloads'],\\n    format: '%s %d %s %s'\\n  }],\\n  a: [\\n    { //a=rtpmap:110 opus/48000/2\\n      push: 'rtp',\\n      reg: /^rtpmap:(\\\\d*) ([\\\\w\\\\-\\\\.]*)(?:\\\\s*\\\\/(\\\\d*)(?:\\\\s*\\\\/(\\\\S*))?)?/,\\n      names: ['payload', 'codec', 'rate', 'encoding'],\\n      format: function (o) {\\n        return (o.encoding) ?\\n          'rtpmap:%d %s/%s/%s':\\n          o.rate ?\\n          'rtpmap:%d %s/%s':\\n          'rtpmap:%d %s';\\n      }\\n    },\\n    { //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\\n      //a=fmtp:111 minptime=10; useinbandfec=1\\n      push: 'fmtp',\\n      reg: /^fmtp:(\\\\d*) ([\\\\S| ]*)/,\\n      names: ['payload', 'config'],\\n      format: 'fmtp:%d %s'\\n    },\\n    { //a=control:streamid=0\\n      name: 'control',\\n      reg: /^control:(.*)/,\\n      format: 'control:%s'\\n    },\\n    { //a=rtcp:65179 IN IP4 193.84.77.194\\n      name: 'rtcp',\\n      reg: /^rtcp:(\\\\d*)(?: (\\\\S*) IP(\\\\d) (\\\\S*))?/,\\n      names: ['port', 'netType', 'ipVer', 'address'],\\n      format: function (o) {\\n        return (o.address != null) ?\\n          'rtcp:%d %s IP%d %s':\\n          'rtcp:%d';\\n      }\\n    },\\n    { //a=rtcp-fb:98 trr-int 100\\n      push: 'rtcpFbTrrInt',\\n      reg: /^rtcp-fb:(\\\\*|\\\\d*) trr-int (\\\\d*)/,\\n      names: ['payload', 'value'],\\n      format: 'rtcp-fb:%d trr-int %d'\\n    },\\n    { //a=rtcp-fb:98 nack rpsi\\n      push: 'rtcpFb',\\n      reg: /^rtcp-fb:(\\\\*|\\\\d*) ([\\\\w-_]*)(?: ([\\\\w-_]*))?/,\\n      names: ['payload', 'type', 'subtype'],\\n      format: function (o) {\\n        return (o.subtype != null) ?\\n          'rtcp-fb:%s %s %s':\\n          'rtcp-fb:%s %s';\\n      }\\n    },\\n    { //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\\n      //a=extmap:1/recvonly URI-gps-string\\n      push: 'ext',\\n      reg: /^extmap:(\\\\d+)(?:\\\\/(\\\\w+))? (\\\\S*)(?: (\\\\S*))?/,\\n      names: ['value', 'direction', 'uri', 'config'],\\n      format: function (o) {\\n        return 'extmap:%d' + (o.direction ? '/%s' : '%v') + ' %s' + (o.config ? ' %s' : '');\\n      }\\n    },\\n    { //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\\n      push: 'crypto',\\n      reg: /^crypto:(\\\\d*) ([\\\\w_]*) (\\\\S*)(?: (\\\\S*))?/,\\n      names: ['id', 'suite', 'config', 'sessionConfig'],\\n      format: function (o) {\\n        return (o.sessionConfig != null) ?\\n          'crypto:%d %s %s %s':\\n          'crypto:%d %s %s';\\n      }\\n    },\\n    { //a=setup:actpass\\n      name: 'setup',\\n      reg: /^setup:(\\\\w*)/,\\n      format: 'setup:%s'\\n    },\\n    { //a=mid:1\\n      name: 'mid',\\n      reg: /^mid:([^\\\\s]*)/,\\n      format: 'mid:%s'\\n    },\\n    { //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\\n      name: 'msid',\\n      reg: /^msid:(.*)/,\\n      format: 'msid:%s'\\n    },\\n    { //a=ptime:20\\n      name: 'ptime',\\n      reg: /^ptime:(\\\\d*)/,\\n      format: 'ptime:%d'\\n    },\\n    { //a=maxptime:60\\n      name: 'maxptime',\\n      reg: /^maxptime:(\\\\d*)/,\\n      format: 'maxptime:%d'\\n    },\\n    { //a=sendrecv\\n      name: 'direction',\\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\\n    },\\n    { //a=ice-lite\\n      name: 'icelite',\\n      reg: /^(ice-lite)/\\n    },\\n    { //a=ice-ufrag:F7gI\\n      name: 'iceUfrag',\\n      reg: /^ice-ufrag:(\\\\S*)/,\\n      format: 'ice-ufrag:%s'\\n    },\\n    { //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\\n      name: 'icePwd',\\n      reg: /^ice-pwd:(\\\\S*)/,\\n      format: 'ice-pwd:%s'\\n    },\\n    { //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\\n      name: 'fingerprint',\\n      reg: /^fingerprint:(\\\\S*) (\\\\S*)/,\\n      names: ['type', 'hash'],\\n      format: 'fingerprint:%s %s'\\n    },\\n    { //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\\n      //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\\n      //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\\n      //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\\n      //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\\n      push:'candidates',\\n      reg: /^candidate:(\\\\S*) (\\\\d*) (\\\\S*) (\\\\d*) (\\\\S*) (\\\\d*) typ (\\\\S*)(?: raddr (\\\\S*) rport (\\\\d*))?(?: tcptype (\\\\S*))?(?: generation (\\\\d*))?(?: network-id (\\\\d*))?(?: network-cost (\\\\d*))?/,\\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\\n      format: function (o) {\\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\\n\\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\\n\\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\\n\\n        if (o.generation != null) {\\n          str += ' generation %d';\\n        }\\n\\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\\n        return str;\\n      }\\n    },\\n    { //a=end-of-candidates (keep after the candidates line for readability)\\n      name: 'endOfCandidates',\\n      reg: /^(end-of-candidates)/\\n    },\\n    { //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\\n      name: 'remoteCandidates',\\n      reg: /^remote-candidates:(.*)/,\\n      format: 'remote-candidates:%s'\\n    },\\n    { //a=ice-options:google-ice\\n      name: 'iceOptions',\\n      reg: /^ice-options:(\\\\S*)/,\\n      format: 'ice-options:%s'\\n    },\\n    { //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\\n      push: 'ssrcs',\\n      reg: /^ssrc:(\\\\d*) ([\\\\w_]*)(?::(.*))?/,\\n      names: ['id', 'attribute', 'value'],\\n      format: function (o) {\\n        var str = 'ssrc:%d';\\n        if (o.attribute != null) {\\n          str += ' %s';\\n          if (o.value != null) {\\n            str += ':%s';\\n          }\\n        }\\n        return str;\\n      }\\n    },\\n    { //a=ssrc-group:FEC 1 2\\n      //a=ssrc-group:FEC-FR 3004364195 1080772241\\n      push: 'ssrcGroups',\\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\\n      reg: /^ssrc-group:([\\\\x21\\\\x23\\\\x24\\\\x25\\\\x26\\\\x27\\\\x2A\\\\x2B\\\\x2D\\\\x2E\\\\w]*) (.*)/,\\n      names: ['semantics', 'ssrcs'],\\n      format: 'ssrc-group:%s %s'\\n    },\\n    { //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\\n      name: 'msidSemantic',\\n      reg: /^msid-semantic:\\\\s?(\\\\w*) (\\\\S*)/,\\n      names: ['semantic', 'token'],\\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\\n    },\\n    { //a=group:BUNDLE audio video\\n      push: 'groups',\\n      reg: /^group:(\\\\w*) (.*)/,\\n      names: ['type', 'mids'],\\n      format: 'group:%s %s'\\n    },\\n    { //a=rtcp-mux\\n      name: 'rtcpMux',\\n      reg: /^(rtcp-mux)/\\n    },\\n    { //a=rtcp-rsize\\n      name: 'rtcpRsize',\\n      reg: /^(rtcp-rsize)/\\n    },\\n    { //a=sctpmap:5000 webrtc-datachannel 1024\\n      name: 'sctpmap',\\n      reg: /^sctpmap:([\\\\w_\\\\/]*) (\\\\S*)(?: (\\\\S*))?/,\\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\\n      format: function (o) {\\n        return (o.maxMessageSize != null) ?\\n          'sctpmap:%s %s %s' :\\n          'sctpmap:%s %s';\\n      }\\n    },\\n    { //a=x-google-flag:conference\\n      name: 'xGoogleFlag',\\n      reg: /^x-google-flag:([^\\\\s]*)/,\\n      format: 'x-google-flag:%s'\\n    },\\n    { //a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\\n      push: 'rids',\\n      reg: /^rid:([\\\\d\\\\w]+) (\\\\w+)(?: ([\\\\S| ]*))?/,\\n      names: ['id', 'direction', 'params'],\\n      format: function (o) {\\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\\n      }\\n    },\\n    { //a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\\n      //a=imageattr:* send [x=800,y=640] recv *\\n      //a=imageattr:100 recv [x=320,y=240]\\n      push: 'imageattrs',\\n      reg: new RegExp(\\n        //a=imageattr:97\\n        '^imageattr:(\\\\\\\\d+|\\\\\\\\*)' +\\n        //send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\\n        '[\\\\\\\\s\\\\\\\\t]+(send|recv)[\\\\\\\\s\\\\\\\\t]+(\\\\\\\\*|\\\\\\\\[\\\\\\\\S+\\\\\\\\](?:[\\\\\\\\s\\\\\\\\t]+\\\\\\\\[\\\\\\\\S+\\\\\\\\])*)' +\\n        //recv [x=330,y=250]\\n        '(?:[\\\\\\\\s\\\\\\\\t]+(recv|send)[\\\\\\\\s\\\\\\\\t]+(\\\\\\\\*|\\\\\\\\[\\\\\\\\S+\\\\\\\\](?:[\\\\\\\\s\\\\\\\\t]+\\\\\\\\[\\\\\\\\S+\\\\\\\\])*))?'\\n      ),\\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\\n      format: function (o) {\\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\\n      }\\n    },\\n    { //a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\\n      //a=simulcast:recv 1;4,5 send 6;7\\n      name: 'simulcast',\\n      reg: new RegExp(\\n        //a=simulcast:\\n        '^simulcast:' +\\n        //send 1,2,3;~4,~5\\n        '(send|recv) ([a-zA-Z0-9\\\\\\\\-_~;,]+)' +\\n        //space + recv 6;~7,~8\\n        '(?:\\\\\\\\s?(send|recv) ([a-zA-Z0-9\\\\\\\\-_~;,]+))?' +\\n        //end\\n        '$'\\n      ),\\n      names: ['dir1', 'list1', 'dir2', 'list2'],\\n      format: function (o) {\\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\\n      }\\n    },\\n    { //Old simulcast draft 03 (implemented by Firefox)\\n      //  https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\\n      //a=simulcast: recv pt=97;98 send pt=97\\n      //a=simulcast: send rid=5;6;7 paused=6,7\\n      name: 'simulcast_03',\\n      reg: /^simulcast:[\\\\s\\\\t]+([\\\\S+\\\\s\\\\t]+)$/,\\n      names: ['value'],\\n      format: 'simulcast: %s'\\n    },\\n    {\\n      //a=framerate:25\\n      //a=framerate:29.97\\n      name: 'framerate',\\n      reg: /^framerate:(\\\\d+(?:$|\\\\.\\\\d+))/,\\n      format: 'framerate:%s'\\n    },\\n    { // any a= that we don't understand is kepts verbatim on media.invalid\\n      push: 'invalid',\\n      names: ['value']\\n    }\\n  ]\\n};\\n\\n// set sensible defaults to avoid polluting the grammar with boring details\\nObject.keys(grammar).forEach(function (key) {\\n  var objs = grammar[key];\\n  objs.forEach(function (obj) {\\n    if (!obj.reg) {\\n      obj.reg = /(.*)/;\\n    }\\n    if (!obj.format) {\\n      obj.format = '%s';\\n    }\\n  });\\n});\\n\",\"/* global MediaRecorder, MediaStream */\\r\\n\\r\\nconst RecordingResult = require('./recordingResult');\\r\\n\\r\\n/**\\r\\n * Possible audio formats MIME types\\r\\n */\\r\\nconst AUDIO_WEBM = 'audio/webm'; // Supported in chrome\\r\\nconst AUDIO_OGG = 'audio/ogg'; // Supported in firefox\\r\\n\\r\\n/**\\r\\n * A TrackRecorder object holds all the information needed for recording a\\r\\n * single JitsiTrack (either remote or local)\\r\\n * @param track The JitsiTrack the object is going to hold\\r\\n */\\r\\nconst TrackRecorder = function(track) {\\r\\n    // The JitsiTrack holding the stream\\r\\n    this.track = track;\\r\\n\\r\\n    // The MediaRecorder recording the stream\\r\\n    this.recorder = null;\\r\\n\\r\\n    // The array of data chunks recorded from the stream\\r\\n    // acts as a buffer until the data is stored on disk\\r\\n    this.data = null;\\r\\n\\r\\n    // the name of the person of the JitsiTrack. This can be undefined and/or\\r\\n    // not unique\\r\\n    this.name = null;\\r\\n\\r\\n    // the time of the start of the recording\\r\\n    this.startTime = null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Starts the recording of a JitsiTrack in a TrackRecorder object.\\r\\n * This will also define the timestamp and try to update the name\\r\\n * @param trackRecorder the TrackRecorder to start\\r\\n */\\r\\nfunction startRecorder(trackRecorder) {\\r\\n    if (trackRecorder.recorder === undefined) {\\r\\n        throw new Error('Passed an object to startRecorder which is not a '\\r\\n            + 'TrackRecorder object');\\r\\n    }\\r\\n    trackRecorder.recorder.start();\\r\\n    trackRecorder.startTime = new Date();\\r\\n}\\r\\n\\r\\n/**\\r\\n * Stops the recording of a JitsiTrack in a TrackRecorder object.\\r\\n * This will also try to update the name\\r\\n * @param trackRecorder the TrackRecorder to stop\\r\\n */\\r\\nfunction stopRecorder(trackRecorder) {\\r\\n    if (trackRecorder.recorder === undefined) {\\r\\n        throw new Error('Passed an object to stopRecorder which is not a '\\r\\n            + 'TrackRecorder object');\\r\\n    }\\r\\n    trackRecorder.recorder.stop();\\r\\n}\\r\\n\\r\\n/**\\r\\n * Determines which kind of audio recording the browser supports\\r\\n * chrome supports \\\"audio/webm\\\" and firefox supports \\\"audio/ogg\\\"\\r\\n */\\r\\nfunction determineCorrectFileType() {\\r\\n    if (MediaRecorder.isTypeSupported(AUDIO_WEBM)) {\\r\\n        return AUDIO_WEBM;\\r\\n    } else if (MediaRecorder.isTypeSupported(AUDIO_OGG)) {\\r\\n        return AUDIO_OGG;\\r\\n    }\\r\\n    throw new Error(\\r\\n        'unable to create a MediaRecorder with the right mimetype!');\\r\\n}\\r\\n\\r\\n/**\\r\\n * main exported object of the file, holding all\\r\\n * relevant functions and variables for the outside world\\r\\n * @param jitsiConference the jitsiConference which this object\\r\\n * is going to record\\r\\n */\\r\\nfunction AudioRecorder(jitsiConference) {\\r\\n    // array of TrackRecorders, where each trackRecorder\\r\\n    // holds the JitsiTrack, MediaRecorder and recorder data\\r\\n    this.recorders = [];\\r\\n\\r\\n    // get which file type is supported by the current browser\\r\\n    this.fileType = determineCorrectFileType();\\r\\n\\r\\n    // boolean flag for active recording\\r\\n    this.isRecording = false;\\r\\n\\r\\n    // the jitsiconference the object is recording\\r\\n    this.jitsiConference = jitsiConference;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Add the the exported module so that it can be accessed by other files\\r\\n */\\r\\nAudioRecorder.determineCorrectFileType = determineCorrectFileType;\\r\\n\\r\\n/**\\r\\n * Adds a new TrackRecorder object to the array.\\r\\n *\\r\\n * @param track the track potentially holding an audio stream\\r\\n */\\r\\nAudioRecorder.prototype.addTrack = function(track) {\\r\\n    if (track.isAudioTrack()) {\\r\\n        // create the track recorder\\r\\n        const trackRecorder = this.instantiateTrackRecorder(track);\\r\\n\\r\\n        // push it to the local array of all recorders\\r\\n\\r\\n        this.recorders.push(trackRecorder);\\r\\n\\r\\n        // update the name of the trackRecorders\\r\\n        this.updateNames();\\r\\n\\r\\n        // If we're already recording, immediately start recording this new\\r\\n        // track.\\r\\n        if (this.isRecording) {\\r\\n            startRecorder(trackRecorder);\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates a TrackRecorder object. Also creates the MediaRecorder and\\r\\n * data array for the trackRecorder.\\r\\n * @param track the JitsiTrack holding the audio MediaStream(s)\\r\\n */\\r\\nAudioRecorder.prototype.instantiateTrackRecorder = function(track) {\\r\\n    const trackRecorder = new TrackRecorder(track);\\r\\n\\r\\n    // Create a new stream which only holds the audio track\\r\\n    const originalStream = trackRecorder.track.getOriginalStream();\\r\\n    const stream = createEmptyStream();\\r\\n\\r\\n    originalStream.getAudioTracks().forEach(t => stream.addTrack(t));\\r\\n\\r\\n    // Create the MediaRecorder\\r\\n    trackRecorder.recorder = new MediaRecorder(stream,\\r\\n        { mimeType: this.fileType });\\r\\n\\r\\n    // array for holding the recorder data. Resets it when\\r\\n    // audio already has been recorder once\\r\\n    trackRecorder.data = [];\\r\\n\\r\\n    // function handling a dataEvent, e.g the stream gets new data\\r\\n    trackRecorder.recorder.ondataavailable = function(dataEvent) {\\r\\n        if (dataEvent.data.size > 0) {\\r\\n            trackRecorder.data.push(dataEvent.data);\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return trackRecorder;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies the module that a specific track has stopped, e.g participant left\\r\\n * the conference.\\r\\n * if the recording has not started yet, the TrackRecorder will be removed from\\r\\n * the array. If the recording has started, the recorder will stop recording\\r\\n * but not removed from the array so that the recorded stream can still be\\r\\n * accessed\\r\\n *\\r\\n * @param {JitsiTrack} track the JitsiTrack to remove from the recording session\\r\\n */\\r\\nAudioRecorder.prototype.removeTrack = function(track) {\\r\\n    if (track.isVideoTrack()) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const array = this.recorders;\\r\\n    let i;\\r\\n\\r\\n    for (i = 0; i < array.length; i++) {\\r\\n        if (array[i].track.getParticipantId() === track.getParticipantId()) {\\r\\n            const recorderToRemove = array[i];\\r\\n\\r\\n            if (this.isRecording) {\\r\\n                stopRecorder(recorderToRemove);\\r\\n            } else {\\r\\n                // remove the TrackRecorder from the array\\r\\n                array.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // make sure the names are up to date\\r\\n    this.updateNames();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Tries to update the name value of all TrackRecorder in the array.\\r\\n * If it hasn't changed,it will keep the exiting name. If it changes to a\\r\\n * undefined value, the old value will also be kept.\\r\\n */\\r\\nAudioRecorder.prototype.updateNames = function() {\\r\\n    const conference = this.jitsiConference;\\r\\n\\r\\n    this.recorders.forEach(trackRecorder => {\\r\\n        if (trackRecorder.track.isLocal()) {\\r\\n            trackRecorder.name = 'the transcriber';\\r\\n        } else {\\r\\n            const id = trackRecorder.track.getParticipantId();\\r\\n            const participant = conference.getParticipantById(id);\\r\\n            const newName = participant.getDisplayName();\\r\\n\\r\\n            if (newName !== 'undefined') {\\r\\n                trackRecorder.name = newName;\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Starts the audio recording of every local and remote track\\r\\n */\\r\\nAudioRecorder.prototype.start = function() {\\r\\n    if (this.isRecording) {\\r\\n        throw new Error('audiorecorder is already recording');\\r\\n    }\\r\\n\\r\\n    // set boolean isRecording flag to true so if new participants join the\\r\\n    // conference, that track can instantly start recording as well\\r\\n    this.isRecording = true;\\r\\n\\r\\n    // start all the mediaRecorders\\r\\n    this.recorders.forEach(trackRecorder => startRecorder(trackRecorder));\\r\\n\\r\\n    // log that recording has started\\r\\n    console.log(\\r\\n        `Started the recording of the audio. There are currently ${\\r\\n            this.recorders.length} recorders active.`);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stops the audio recording of every local and remote track\\r\\n */\\r\\nAudioRecorder.prototype.stop = function() {\\r\\n    // set the boolean flag to false\\r\\n    this.isRecording = false;\\r\\n\\r\\n    // stop all recorders\\r\\n    this.recorders.forEach(trackRecorder => stopRecorder(trackRecorder));\\r\\n    console.log('stopped recording');\\r\\n};\\r\\n\\r\\n/**\\r\\n * link hacking to download all recorded audio streams\\r\\n */\\r\\nAudioRecorder.prototype.download = function() {\\r\\n    this.recorders.forEach(trackRecorder => {\\r\\n        const blob = new Blob(trackRecorder.data, { type: this.fileType });\\r\\n        const url = URL.createObjectURL(blob);\\r\\n        const a = document.createElement('a');\\r\\n\\r\\n        document.body.appendChild(a);\\r\\n        a.style = 'display: none';\\r\\n        a.href = url;\\r\\n        a.download = `test.${this.fileType.split('/')[1]}`;\\r\\n        a.click();\\r\\n        window.URL.revokeObjectURL(url);\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * returns the audio files of all recorders as an array of objects,\\r\\n * which include the name of the owner of the track and the starting time stamp\\r\\n * @returns {Array} an array of RecordingResult objects\\r\\n */\\r\\nAudioRecorder.prototype.getRecordingResults = function() {\\r\\n    if (this.isRecording) {\\r\\n        throw new Error(\\r\\n            'cannot get blobs because the AudioRecorder is still recording!');\\r\\n    }\\r\\n\\r\\n    // make sure the names are up to date before sending them off\\r\\n    this.updateNames();\\r\\n\\r\\n    const array = [];\\r\\n\\r\\n    this.recorders.forEach(\\r\\n        recorder =>\\r\\n            array.push(\\r\\n                new RecordingResult(\\r\\n                    new Blob(recorder.data, { type: this.fileType }),\\r\\n                    recorder.name,\\r\\n                    recorder.startTime)));\\r\\n\\r\\n    return array;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Gets the mime type of the recorder audio\\r\\n * @returns {String} the mime type of the recorder audio\\r\\n */\\r\\nAudioRecorder.prototype.getFileType = function() {\\r\\n    return this.fileType;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates a empty MediaStream object which can be used\\r\\n * to add MediaStreamTracks to\\r\\n * @returns MediaStream\\r\\n */\\r\\nfunction createEmptyStream() {\\r\\n    if (typeof MediaStream !== 'undefined') {\\r\\n        return new MediaStream();\\r\\n    }\\r\\n    throw new Error('cannot create a clean mediaStream');\\r\\n}\\r\\n\\r\\n/**\\r\\n * export the main object AudioRecorder\\r\\n */\\r\\nmodule.exports = AudioRecorder;\\r\\n\",\"const AuthUtil = {\\r\\n    /**\\r\\n     * Creates the URL pointing to JWT token authentication service. It is\\r\\n     * formatted from the 'urlPattern' argument which can contain the following\\r\\n     * constants:\\r\\n     * '{room}' - name of the conference room passed as <tt>roomName</tt>\\r\\n     * argument to this method.\\r\\n     * '{roleUpgrade}' - will contain 'true' if the URL will be used for\\r\\n     * the role upgrade scenario, where user connects from anonymous domain and\\r\\n     * then gets upgraded to the moderator by logging-in from the popup window.\\r\\n     *\\r\\n     * @param urlPattern a URL pattern pointing to the login service\\r\\n     * @param roomName the name of the conference room for which the user will\\r\\n     * be authenticated\\r\\n     * @param {bool} roleUpgrade <tt>true</tt> if the URL will be used for role\\r\\n     * upgrade scenario, where the user logs-in from the popup window in order\\r\\n     * to have the moderator rights granted\\r\\n     *\\r\\n     * @returns {string|null} the URL pointing to JWT login service or\\r\\n     * <tt>null</tt> if 'urlPattern' is not a string and the URL can not be\\r\\n     * constructed.\\r\\n     */\\r\\n    getTokenAuthUrl(urlPattern, roomName, roleUpgrade) {\\r\\n        const url = urlPattern;\\r\\n\\r\\n        if (typeof url !== 'string') {\\r\\n            return null;\\r\\n        }\\r\\n\\r\\n        return url.replace('{room}', roomName)\\r\\n            .replace('{roleUpgrade}', roleUpgrade === true);\\r\\n    }\\r\\n};\\r\\n\\r\\nmodule.exports = AuthUtil;\\r\\n\",\"import {\\r\\n    CONNECTION_DISCONNECTED as ANALYTICS_CONNECTION_DISCONNECTED,\\r\\n    createConnectionFailedEvent\\r\\n} from './service/statistics/AnalyticsEvents';\\r\\nimport JitsiConference from './JitsiConference';\\r\\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\\r\\nimport Statistics from './modules/statistics/statistics';\\r\\nimport XMPP from './modules/xmpp/xmpp';\\r\\n\\r\\n/**\\r\\n * Creates a new connection object for the Jitsi Meet server side video\\r\\n * conferencing service. Provides access to the JitsiConference interface.\\r\\n * @param appID identification for the provider of Jitsi Meet video conferencing\\r\\n * services.\\r\\n * @param token the JWT token used to authenticate with the server(optional)\\r\\n * @param options Object with properties / settings related to connection with\\r\\n * the server.\\r\\n * @constructor\\r\\n */\\r\\nexport default function JitsiConnection(appID, token, options) {\\r\\n    this.appID = appID;\\r\\n    this.token = token;\\r\\n    this.options = options;\\r\\n    this.xmpp = new XMPP(options, token);\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_FAILED,\\r\\n        (errType, msg, credentials, details) => {\\r\\n            Statistics.sendAnalyticsAndLog(\\r\\n                createConnectionFailedEvent(errType, msg, details));\\r\\n        });\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_DISCONNECTED,\\r\\n        msg => {\\r\\n            // we can see disconnects from normal tab closing of the browser\\r\\n            // and then there are no msgs, but we want to log only disconnects\\r\\n            // when there is real error\\r\\n            // XXX Do we need the difference in handling between the log and\\r\\n            // analytics event here?\\r\\n            if (msg) {\\r\\n                Statistics.sendAnalytics(\\r\\n                    ANALYTICS_CONNECTION_DISCONNECTED,\\r\\n                    { message: msg });\\r\\n            }\\r\\n            Statistics.sendLog(\\r\\n                JSON.stringify(\\r\\n                    {\\r\\n                        id: ANALYTICS_CONNECTION_DISCONNECTED,\\r\\n                        msg\\r\\n                    }));\\r\\n        });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Connect the client with the server.\\r\\n * @param options {object} connecting options\\r\\n * (for example authentications parameters).\\r\\n */\\r\\nJitsiConnection.prototype.connect = function(options = {}) {\\r\\n    this.xmpp.connect(options.id, options.password);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Attach to existing connection. Can be used for optimizations. For example:\\r\\n * if the connection is created on the server we can attach to it and start\\r\\n * using it.\\r\\n *\\r\\n * @param options {object} connecting options - rid, sid and jid.\\r\\n */\\r\\nJitsiConnection.prototype.attach = function(options) {\\r\\n    this.xmpp.attach(options);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Disconnect the client from the server.\\r\\n * @returns {Promise} - Resolves when the disconnect process is finished or rejects with an error.\\r\\n */\\r\\nJitsiConnection.prototype.disconnect = function(...args) {\\r\\n    // XXX Forward any arguments passed to JitsiConnection.disconnect to\\r\\n    // XMPP.disconnect. For example, the caller of JitsiConnection.disconnect\\r\\n    // may optionally pass the event which triggered the disconnect in order to\\r\\n    // provide the implementation with finer-grained context.\\r\\n    return this.xmpp.disconnect(...args);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the jid of the participant associated with the XMPP connection.\\r\\n *\\r\\n * @returns {string} The jid of the participant.\\r\\n */\\r\\nJitsiConnection.prototype.getJid = function() {\\r\\n    return this.xmpp.getJid();\\r\\n};\\r\\n\\r\\n/**\\r\\n * This method allows renewal of the tokens if they are expiring.\\r\\n * @param token the new token.\\r\\n */\\r\\nJitsiConnection.prototype.setToken = function(token) {\\r\\n    this.token = token;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates and joins new conference.\\r\\n * @param name the name of the conference; if null - a generated name will be\\r\\n * provided from the api\\r\\n * @param options Object with properties / settings related to the conference\\r\\n * that will be created.\\r\\n * @returns {JitsiConference} returns the new conference object.\\r\\n */\\r\\nJitsiConnection.prototype.initJitsiConference = function(name, options) {\\r\\n    return new JitsiConference({\\r\\n        name,\\r\\n        config: options,\\r\\n        connection: this\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Subscribes the passed listener to the event.\\r\\n * @param event {JitsiConnectionEvents} the connection event.\\r\\n * @param listener {Function} the function that will receive the event\\r\\n */\\r\\nJitsiConnection.prototype.addEventListener = function(event, listener) {\\r\\n    this.xmpp.addListener(event, listener);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Unsubscribes the passed handler.\\r\\n * @param event {JitsiConnectionEvents} the connection event.\\r\\n * @param listener {Function} the function that will receive the event\\r\\n */\\r\\nJitsiConnection.prototype.removeEventListener = function(event, listener) {\\r\\n    this.xmpp.removeListener(event, listener);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns measured connectionTimes.\\r\\n */\\r\\nJitsiConnection.prototype.getConnectionTimes = function() {\\r\\n    return this.xmpp.connectionTimes;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds new feature to the list of supported features for the local\\r\\n * participant.\\r\\n * @param {String} feature the name of the feature.\\r\\n * @param {boolean} submit if true - the new list of features will be\\r\\n * immediately submitted to the others.\\r\\n */\\r\\nJitsiConnection.prototype.addFeature = function(feature, submit = false) {\\r\\n    return this.xmpp.caps.addFeature(feature, submit);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes a feature from the list of supported features for the local\\r\\n * participant\\r\\n * @param {String} feature the name of the feature.\\r\\n * @param {boolean} submit if true - the new list of features will be\\r\\n * immediately submitted to the others.\\r\\n */\\r\\nJitsiConnection.prototype.removeFeature = function(feature, submit = false) {\\r\\n    return this.xmpp.caps.removeFeature(feature, submit);\\r\\n};\\r\\n\",\"/* global __filename, $, Promise */\\r\\nimport { Strophe } from 'strophe.js';\\r\\n\\r\\nimport EventEmitter from 'events';\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport isEqual from 'lodash.isequal';\\r\\n\\r\\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\\r\\nimport JitsiConferenceEventManager from './JitsiConferenceEventManager';\\r\\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\\r\\nimport JitsiParticipant from './JitsiParticipant';\\r\\nimport JitsiTrackError from './JitsiTrackError';\\r\\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\\r\\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\\r\\nimport authenticateAndUpgradeRole from './authenticateAndUpgradeRole';\\r\\nimport JitsiDTMFManager from './modules/DTMF/JitsiDTMFManager';\\r\\nimport P2PDominantSpeakerDetection from './modules/P2PDominantSpeakerDetection';\\r\\nimport RTC from './modules/RTC/RTC';\\r\\nimport TalkMutedDetection from './modules/TalkMutedDetection';\\r\\nimport browser from './modules/browser';\\r\\nimport ConnectionQuality from './modules/connectivity/ConnectionQuality';\\r\\nimport IceFailedNotification\\r\\n    from './modules/connectivity/IceFailedNotification';\\r\\nimport ParticipantConnectionStatusHandler\\r\\n    from './modules/connectivity/ParticipantConnectionStatus';\\r\\nimport E2ePing from './modules/e2eping/e2eping';\\r\\nimport Jvb121EventGenerator from './modules/event/Jvb121EventGenerator';\\r\\nimport RecordingManager from './modules/recording/RecordingManager';\\r\\nimport RttMonitor from './modules/rttmonitor/rttmonitor';\\r\\nimport AvgRTPStatsReporter from './modules/statistics/AvgRTPStatsReporter';\\r\\nimport AudioOutputProblemDetector from './modules/statistics/AudioOutputProblemDetector';\\r\\nimport SpeakerStatsCollector from './modules/statistics/SpeakerStatsCollector';\\r\\nimport Statistics from './modules/statistics/statistics';\\r\\nimport Transcriber from './modules/transcription/transcriber';\\r\\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\\r\\nimport RandomUtil from './modules/util/RandomUtil';\\r\\nimport ComponentsVersions from './modules/version/ComponentsVersions';\\r\\nimport VideoSIPGW from './modules/videosipgw/VideoSIPGW';\\r\\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\\r\\nimport { JITSI_MEET_MUC_TYPE } from './modules/xmpp/xmpp';\\r\\nimport * as MediaType from './service/RTC/MediaType';\\r\\nimport * as RTCEvents from './service/RTC/RTCEvents';\\r\\nimport VideoType from './service/RTC/VideoType';\\r\\nimport {\\r\\n    ACTION_JINGLE_RESTART,\\r\\n    ACTION_JINGLE_SI_RECEIVED,\\r\\n    ACTION_JINGLE_SI_TIMEOUT,\\r\\n    ACTION_JINGLE_TERMINATE,\\r\\n    ACTION_P2P_ESTABLISHED,\\r\\n    ACTION_P2P_FAILED,\\r\\n    ACTION_P2P_SWITCH_TO_JVB,\\r\\n    ICE_ESTABLISHMENT_DURATION_DIFF,\\r\\n    createJingleEvent,\\r\\n    createP2PEvent\\r\\n} from './service/statistics/AnalyticsEvents';\\r\\nimport * as XMPPEvents from './service/xmpp/XMPPEvents';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * How long since Jicofo is supposed to send a session-initiate, before\\r\\n * {@link ACTION_JINGLE_SI_TIMEOUT} analytics event is sent (in ms).\\r\\n * @type {number}\\r\\n */\\r\\nconst JINGLE_SI_TIMEOUT = 5000;\\r\\n\\r\\n/**\\r\\n * Creates a JitsiConference object with the given name and properties.\\r\\n * Note: this constructor is not a part of the public API (objects should be\\r\\n * created using JitsiConnection.createConference).\\r\\n * @param options.config properties / settings related to the conference that\\r\\n * will be created.\\r\\n * @param options.name the name of the conference\\r\\n * @param options.connection the JitsiConnection object for this\\r\\n * JitsiConference.\\r\\n * @param {number} [options.config.avgRtpStatsN=15] how many samples are to be\\r\\n * collected by {@link AvgRTPStatsReporter}, before arithmetic mean is\\r\\n * calculated and submitted to the analytics module.\\r\\n * @param {boolean} [options.config.p2p.enabled] when set to <tt>true</tt>\\r\\n * the peer to peer mode will be enabled. It means that when there are only 2\\r\\n * participants in the conference an attempt to make direct connection will be\\r\\n * made. If the connection succeeds the conference will stop sending data\\r\\n * through the JVB connection and will use the direct one instead.\\r\\n * @param {number} [options.config.p2p.backToP2PDelay=5] a delay given in\\r\\n * seconds, before the conference switches back to P2P, after the 3rd\\r\\n * participant has left the room.\\r\\n * @param {number} [options.config.channelLastN=-1] The requested amount of\\r\\n * videos are going to be delivered after the value is in effect. Set to -1 for\\r\\n * unlimited or all available videos.\\r\\n * @param {number} [options.config.forceJVB121Ratio]\\r\\n * \\\"Math.random() < forceJVB121Ratio\\\" will determine whether a 2 people\\r\\n * conference should be moved to the JVB instead of P2P. The decision is made on\\r\\n * the responder side, after ICE succeeds on the P2P connection.\\r\\n * @param {*} [options.config.openBridgeChannel] Which kind of communication to\\r\\n * open with the videobridge. Values can be \\\"datachannel\\\", \\\"websocket\\\", true\\r\\n * (treat it as \\\"datachannel\\\"), undefined (treat it as \\\"datachannel\\\") and false\\r\\n * (don't open any channel).\\r\\n * @constructor\\r\\n *\\r\\n * FIXME Make all methods which are called from lib-internal classes\\r\\n *       to non-public (use _). To name a few:\\r\\n *       {@link JitsiConference.onLocalRoleChanged}\\r\\n *       {@link JitsiConference.onUserRoleChanged}\\r\\n *       {@link JitsiConference.onMemberLeft}\\r\\n *       and so on...\\r\\n */\\r\\nexport default function JitsiConference(options) {\\r\\n    if (!options.name || options.name.toLowerCase() !== options.name) {\\r\\n        const errmsg\\r\\n            = 'Invalid conference name (no conference name passed or it '\\r\\n                + 'contains invalid characters like capital letters)!';\\r\\n\\r\\n        logger.error(errmsg);\\r\\n        throw new Error(errmsg);\\r\\n    }\\r\\n    this.eventEmitter = new EventEmitter();\\r\\n    this.options = options;\\r\\n    this.eventManager = new JitsiConferenceEventManager(this);\\r\\n    this.participants = {};\\r\\n    this._init(options);\\r\\n    this.componentsVersions = new ComponentsVersions(this);\\r\\n\\r\\n    /**\\r\\n     * Jingle session instance for the JVB connection.\\r\\n     * @type {JingleSessionPC}\\r\\n     */\\r\\n    this.jvbJingleSession = null;\\r\\n    this.lastDominantSpeaker = null;\\r\\n    this.dtmfManager = null;\\r\\n    this.somebodySupportsDTMF = false;\\r\\n    this.authEnabled = false;\\r\\n    this.startAudioMuted = false;\\r\\n    this.startVideoMuted = false;\\r\\n    this.startMutedPolicy = {\\r\\n        audio: false,\\r\\n        video: false\\r\\n    };\\r\\n    this.isMutedByFocus = false;\\r\\n\\r\\n    // when muted by focus we receive the jid of the initiator of the mute\\r\\n    this.mutedByFocusActor = null;\\r\\n\\r\\n    // Flag indicates if the 'onCallEnded' method was ever called on this\\r\\n    // instance. Used to log extra analytics event for debugging purpose.\\r\\n    // We need to know if the potential issue happened before or after\\r\\n    // the restart.\\r\\n    this.wasStopped = false;\\r\\n\\r\\n    // Conference properties, maintained by jicofo.\\r\\n    this.properties = {};\\r\\n\\r\\n    /**\\r\\n     * The object which monitors local and remote connection statistics (e.g.\\r\\n     * sending bitrate) and calculates a number which represents the connection\\r\\n     * quality.\\r\\n     */\\r\\n    this.connectionQuality\\r\\n        = new ConnectionQuality(this, this.eventEmitter, options);\\r\\n\\r\\n    /**\\r\\n     * Reports average RTP statistics to the analytics module.\\r\\n     * @type {AvgRTPStatsReporter}\\r\\n     */\\r\\n    this.avgRtpStatsReporter\\r\\n        = new AvgRTPStatsReporter(this, options.config.avgRtpStatsN || 15);\\r\\n\\r\\n    /**\\r\\n     * Detects issues with the audio of remote participants.\\r\\n     * @type {AudioOutputProblemDetector}\\r\\n     */\\r\\n    this._audioOutputProblemDetector = new AudioOutputProblemDetector(this);\\r\\n\\r\\n    /**\\r\\n     * Indicates whether the connection is interrupted or not.\\r\\n     */\\r\\n    this.isJvbConnectionInterrupted = false;\\r\\n\\r\\n    /**\\r\\n     * The object which tracks active speaker times\\r\\n     */\\r\\n    this.speakerStatsCollector = new SpeakerStatsCollector(this);\\r\\n\\r\\n    /* P2P related fields below: */\\r\\n\\r\\n    /**\\r\\n     * Stores reference to deferred start P2P task. It's created when 3rd\\r\\n     * participant leaves the room in order to avoid ping pong effect (it\\r\\n     * could be just a page reload).\\r\\n     * @type {number|null}\\r\\n     */\\r\\n    this.deferredStartP2PTask = null;\\r\\n\\r\\n    const delay\\r\\n        = parseInt(options.config.p2p && options.config.p2p.backToP2PDelay, 10);\\r\\n\\r\\n    /**\\r\\n     * A delay given in seconds, before the conference switches back to P2P\\r\\n     * after the 3rd participant has left.\\r\\n     * @type {number}\\r\\n     */\\r\\n    this.backToP2PDelay = isNaN(delay) ? 5 : delay;\\r\\n    logger.info(`backToP2PDelay: ${this.backToP2PDelay}`);\\r\\n\\r\\n    /**\\r\\n     * If set to <tt>true</tt> it means the P2P ICE is no longer connected.\\r\\n     * When <tt>false</tt> it means that P2P ICE (media) connection is up\\r\\n     * and running.\\r\\n     * @type {boolean}\\r\\n     */\\r\\n    this.isP2PConnectionInterrupted = false;\\r\\n\\r\\n    /**\\r\\n     * Flag set to <tt>true</tt> when P2P session has been established\\r\\n     * (ICE has been connected) and this conference is currently in the peer to\\r\\n     * peer mode (P2P connection is the active one).\\r\\n     * @type {boolean}\\r\\n     */\\r\\n    this.p2p = false;\\r\\n\\r\\n    /**\\r\\n     * A JingleSession for the direct peer to peer connection.\\r\\n     * @type {JingleSessionPC}\\r\\n     */\\r\\n    this.p2pJingleSession = null;\\r\\n\\r\\n    this.videoSIPGWHandler = new VideoSIPGW(this.room);\\r\\n    this.recordingManager = new RecordingManager(this.room);\\r\\n}\\r\\n\\r\\n// FIXME convert JitsiConference to ES6 - ASAP !\\r\\nJitsiConference.prototype.constructor = JitsiConference;\\r\\n\\r\\n/**\\r\\n * Create a resource for the a jid. We use the room nickname (the resource part\\r\\n * of the occupant JID, see XEP-0045) as the endpoint ID in colibri. We require\\r\\n * endpoint IDs to be 8 hex digits because in some cases they get serialized\\r\\n * into a 32bit field.\\r\\n *\\r\\n * @param {string} jid - The id set onto the XMPP connection.\\r\\n * @param {boolean} isAuthenticatedUser - Whether or not the user has connected\\r\\n * to the XMPP service with a password.\\r\\n * @returns {string}\\r\\n * @static\\r\\n */\\r\\nJitsiConference.resourceCreator = function(jid, isAuthenticatedUser) {\\r\\n    let mucNickname;\\r\\n\\r\\n    if (isAuthenticatedUser) {\\r\\n        // For authenticated users generate a random ID.\\r\\n        mucNickname = RandomUtil.randomHexString(8).toLowerCase();\\r\\n    } else {\\r\\n        // We try to use the first part of the node (which for anonymous users\\r\\n        // on prosody is a UUID) to match the previous behavior (and maybe make\\r\\n        // debugging easier).\\r\\n        mucNickname = Strophe.getNodeFromJid(jid).substr(0, 8)\\r\\n            .toLowerCase();\\r\\n\\r\\n        // But if this doesn't have the required format we just generate a new\\r\\n        // random nickname.\\r\\n        const re = /[0-9a-f]{8}/g;\\r\\n\\r\\n        if (!re.test(mucNickname)) {\\r\\n            mucNickname = RandomUtil.randomHexString(8).toLowerCase();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return mucNickname;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Initializes the conference object properties\\r\\n * @param options {object}\\r\\n * @param options.connection {JitsiConnection} overrides this.connection\\r\\n */\\r\\nJitsiConference.prototype._init = function(options = {}) {\\r\\n    // Override connection and xmpp properties (Useful if the connection\\r\\n    // reloaded)\\r\\n    if (options.connection) {\\r\\n        this.connection = options.connection;\\r\\n        this.xmpp = this.connection.xmpp;\\r\\n\\r\\n        // Setup XMPP events only if we have new connection object.\\r\\n        this.eventManager.setupXMPPListeners();\\r\\n    }\\r\\n\\r\\n    const { config } = this.options;\\r\\n\\r\\n    this.room = this.xmpp.createRoom(\\r\\n        this.options.name,\\r\\n        config,\\r\\n        JitsiConference.resourceCreator\\r\\n    );\\r\\n\\r\\n    // Connection interrupted/restored listeners\\r\\n    this._onIceConnectionInterrupted\\r\\n        = this._onIceConnectionInterrupted.bind(this);\\r\\n    this.room.addListener(\\r\\n        XMPPEvents.CONNECTION_INTERRUPTED, this._onIceConnectionInterrupted);\\r\\n\\r\\n    this._onIceConnectionRestored = this._onIceConnectionRestored.bind(this);\\r\\n    this.room.addListener(\\r\\n        XMPPEvents.CONNECTION_RESTORED, this._onIceConnectionRestored);\\r\\n\\r\\n    this._onIceConnectionEstablished\\r\\n        = this._onIceConnectionEstablished.bind(this);\\r\\n    this.room.addListener(\\r\\n        XMPPEvents.CONNECTION_ESTABLISHED, this._onIceConnectionEstablished);\\r\\n\\r\\n    this._updateProperties = this._updateProperties.bind(this);\\r\\n    this.room.addListener(XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\\r\\n        this._updateProperties);\\r\\n\\r\\n    this.rttMonitor = new RttMonitor(config.rttMonitor || {});\\r\\n\\r\\n    this.e2eping = new E2ePing(\\r\\n        this,\\r\\n        config,\\r\\n        (message, to) => {\\r\\n            try {\\r\\n                this.sendMessage(\\r\\n                    message, to, true /* sendThroughVideobridge */);\\r\\n            } catch (error) {\\r\\n                logger.warn('Failed to send a ping request or response.');\\r\\n            }\\r\\n        });\\r\\n\\r\\n    if (!this.rtc) {\\r\\n        this.rtc = new RTC(this, options);\\r\\n        this.eventManager.setupRTCListeners();\\r\\n    }\\r\\n\\r\\n    this.participantConnectionStatus\\r\\n        = new ParticipantConnectionStatusHandler(\\r\\n            this.rtc,\\r\\n            this,\\r\\n            {\\r\\n                // Both these options are not public API, leaving it here only\\r\\n                // as an entry point through config for tuning up purposes.\\r\\n                // Default values should be adjusted as soon as optimal values\\r\\n                // are discovered.\\r\\n                rtcMuteTimeout: config._peerConnStatusRtcMuteTimeout,\\r\\n                outOfLastNTimeout: config._peerConnStatusOutOfLastNTimeout\\r\\n            });\\r\\n    this.participantConnectionStatus.init();\\r\\n\\r\\n    if (!this.statistics) {\\r\\n        let callStatsAliasName = this.myUserId();\\r\\n\\r\\n        if (config.enableDisplayNameInStats && config.displayName) {\\r\\n            callStatsAliasName = config.displayName;\\r\\n        }\\r\\n\\r\\n        this.statistics = new Statistics(this.xmpp, {\\r\\n            callStatsAliasName,\\r\\n            callStatsConfIDNamespace: this.connection.options.hosts.domain,\\r\\n            confID: config.confID || `${this.connection.options.hosts.domain}/${this.options.name}`,\\r\\n            customScriptUrl: config.callStatsCustomScriptUrl,\\r\\n            callStatsID: config.callStatsID,\\r\\n            callStatsSecret: config.callStatsSecret,\\r\\n            roomName: this.options.name,\\r\\n            swapUserNameAndAlias: config.enableStatsID,\\r\\n            applicationName: config.applicationName,\\r\\n            getWiFiStatsMethod: config.getWiFiStatsMethod\\r\\n        });\\r\\n    }\\r\\n\\r\\n    this.eventManager.setupChatRoomListeners();\\r\\n\\r\\n    // Always add listeners because on reload we are executing leave and the\\r\\n    // listeners are removed from statistics module.\\r\\n    this.eventManager.setupStatisticsListeners();\\r\\n\\r\\n    if (config.enableTalkWhileMuted) {\\r\\n        // eslint-disable-next-line no-new\\r\\n        new TalkMutedDetection(\\r\\n            this,\\r\\n            () =>\\r\\n                this.eventEmitter.emit(JitsiConferenceEvents.TALK_WHILE_MUTED));\\r\\n    }\\r\\n\\r\\n    if ('channelLastN' in config) {\\r\\n        this.setLastN(config.channelLastN);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Emits {@link JitsiConferenceEvents.JVB121_STATUS}.\\r\\n     * @type {Jvb121EventGenerator}\\r\\n     */\\r\\n    this.jvb121Status = new Jvb121EventGenerator(this);\\r\\n\\r\\n    // creates dominant speaker detection that works only in p2p mode\\r\\n    this.p2pDominantSpeakerDetection = new P2PDominantSpeakerDetection(this);\\r\\n\\r\\n    if (config && config.deploymentInfo && config.deploymentInfo.userRegion) {\\r\\n        this.setLocalParticipantProperty(\\r\\n            'region', config.deploymentInfo.userRegion);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Joins the conference.\\r\\n * @param password {string} the password\\r\\n */\\r\\nJitsiConference.prototype.join = function(password) {\\r\\n    if (this.room) {\\r\\n        this.room.join(password).then(() => this._maybeSetSITimeout());\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Authenticates and upgrades the role of the local participant/user.\\r\\n *\\r\\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\\r\\n * authenticating and upgrading the role of the local participant/user finishes\\r\\n * and (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\\r\\n * process.\\r\\n */\\r\\nJitsiConference.prototype.authenticateAndUpgradeRole = function(options) {\\r\\n    return authenticateAndUpgradeRole.call(this, {\\r\\n        ...options,\\r\\n        onCreateResource: JitsiConference.resourceCreator\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Check if joined to the conference.\\r\\n */\\r\\nJitsiConference.prototype.isJoined = function() {\\r\\n    return this.room && this.room.joined;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Tells whether or not the P2P mode is enabled in the configuration.\\r\\n * @return {boolean}\\r\\n */\\r\\nJitsiConference.prototype.isP2PEnabled = function() {\\r\\n    return Boolean(this.options.config.p2p && this.options.config.p2p.enabled)\\r\\n\\r\\n        // FIXME: remove once we have a default config template. -saghul\\r\\n        || typeof this.options.config.p2p === 'undefined';\\r\\n};\\r\\n\\r\\n/**\\r\\n * When in P2P test mode, the conference will not automatically switch to P2P\\r\\n * when there 2 participants.\\r\\n * @return {boolean}\\r\\n */\\r\\nJitsiConference.prototype.isP2PTestModeEnabled = function() {\\r\\n    return Boolean(this.options.config.testing\\r\\n        && this.options.config.testing.p2pTestMode);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Leaves the conference.\\r\\n * @returns {Promise}\\r\\n */\\r\\nJitsiConference.prototype.leave = function() {\\r\\n    if (this.participantConnectionStatus) {\\r\\n        this.participantConnectionStatus.dispose();\\r\\n        this.participantConnectionStatus = null;\\r\\n    }\\r\\n    if (this.avgRtpStatsReporter) {\\r\\n        this.avgRtpStatsReporter.dispose();\\r\\n        this.avgRtpStatsReporter = null;\\r\\n    }\\r\\n\\r\\n    if (this._audioOutputProblemDetector) {\\r\\n        this._audioOutputProblemDetector.dispose();\\r\\n        this._audioOutputProblemDetector = null;\\r\\n    }\\r\\n\\r\\n    if (this.rttMonitor) {\\r\\n        this.rttMonitor.stop();\\r\\n        this.rttMonitor = null;\\r\\n    }\\r\\n\\r\\n    if (this.e2eping) {\\r\\n        this.e2eping.stop();\\r\\n        this.e2eping = null;\\r\\n    }\\r\\n\\r\\n    this.getLocalTracks().forEach(track => this.onLocalTrackRemoved(track));\\r\\n\\r\\n    this.rtc.closeBridgeChannel();\\r\\n    if (this.statistics) {\\r\\n        this.statistics.dispose();\\r\\n    }\\r\\n\\r\\n    this._delayedIceFailed && this._delayedIceFailed.cancel();\\r\\n\\r\\n    // Close both JVb and P2P JingleSessions\\r\\n    if (this.jvbJingleSession) {\\r\\n        this.jvbJingleSession.close();\\r\\n        this.jvbJingleSession = null;\\r\\n    }\\r\\n    if (this.p2pJingleSession) {\\r\\n        this.p2pJingleSession.close();\\r\\n        this.p2pJingleSession = null;\\r\\n    }\\r\\n\\r\\n    // leave the conference\\r\\n    if (this.room) {\\r\\n        const room = this.room;\\r\\n\\r\\n        // Unregister connection state listeners\\r\\n        room.removeListener(\\r\\n            XMPPEvents.CONNECTION_INTERRUPTED,\\r\\n            this._onIceConnectionInterrupted);\\r\\n        room.removeListener(\\r\\n            XMPPEvents.CONNECTION_RESTORED,\\r\\n            this._onIceConnectionRestored);\\r\\n        room.removeListener(\\r\\n            XMPPEvents.CONNECTION_ESTABLISHED,\\r\\n            this._onIceConnectionEstablished);\\r\\n\\r\\n        room.removeListener(\\r\\n            XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\\r\\n            this._updateProperties);\\r\\n\\r\\n        this.eventManager.removeXMPPListeners();\\r\\n\\r\\n        this.room = null;\\r\\n\\r\\n        return room.leave()\\r\\n            .then(() => {\\r\\n                if (this.rtc) {\\r\\n                    this.rtc.destroy();\\r\\n                }\\r\\n            })\\r\\n            .catch(error => {\\r\\n                // remove all participants because currently the conference\\r\\n                // won't be usable anyway. This is done on success automatically\\r\\n                // by the ChatRoom instance.\\r\\n                this.getParticipants().forEach(\\r\\n                    participant => this.onMemberLeft(participant.getJid()));\\r\\n\\r\\n                throw error;\\r\\n            });\\r\\n    }\\r\\n\\r\\n    // If this.room == null we are calling second time leave().\\r\\n    return Promise.reject(\\r\\n        new Error('The conference is has been already left'));\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns name of this conference.\\r\\n */\\r\\nJitsiConference.prototype.getName = function() {\\r\\n    return this.options.name;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the {@link JitsiConnection} used by this this conference.\\r\\n */\\r\\nJitsiConference.prototype.getConnection = function() {\\r\\n    return this.connection;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Check if authentication is enabled for this conference.\\r\\n */\\r\\nJitsiConference.prototype.isAuthEnabled = function() {\\r\\n    return this.authEnabled;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Check if user is logged in.\\r\\n */\\r\\nJitsiConference.prototype.isLoggedIn = function() {\\r\\n    return Boolean(this.authIdentity);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get authorized login.\\r\\n */\\r\\nJitsiConference.prototype.getAuthLogin = function() {\\r\\n    return this.authIdentity;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Check if external authentication is enabled for this conference.\\r\\n */\\r\\nJitsiConference.prototype.isExternalAuthEnabled = function() {\\r\\n    return this.room && this.room.moderator.isExternalAuthEnabled();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get url for external authentication.\\r\\n * @param {boolean} [urlForPopup] if true then return url for login popup,\\r\\n *                                else url of login page.\\r\\n * @returns {Promise}\\r\\n */\\r\\nJitsiConference.prototype.getExternalAuthUrl = function(urlForPopup) {\\r\\n    return new Promise((resolve, reject) => {\\r\\n        if (!this.isExternalAuthEnabled()) {\\r\\n            reject();\\r\\n\\r\\n            return;\\r\\n        }\\r\\n        if (urlForPopup) {\\r\\n            this.room.moderator.getPopupLoginUrl(resolve, reject);\\r\\n        } else {\\r\\n            this.room.moderator.getLoginUrl(resolve, reject);\\r\\n        }\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the local tracks of the given media type, or all local tracks if no\\r\\n * specific type is given.\\r\\n * @param {MediaType} [mediaType] Optional media type (audio or video).\\r\\n */\\r\\nJitsiConference.prototype.getLocalTracks = function(mediaType) {\\r\\n    let tracks = [];\\r\\n\\r\\n    if (this.rtc) {\\r\\n        tracks = this.rtc.getLocalTracks(mediaType);\\r\\n    }\\r\\n\\r\\n    return tracks;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Obtains local audio track.\\r\\n * @return {JitsiLocalTrack|null}\\r\\n */\\r\\nJitsiConference.prototype.getLocalAudioTrack = function() {\\r\\n    return this.rtc ? this.rtc.getLocalAudioTrack() : null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Obtains local video track.\\r\\n * @return {JitsiLocalTrack|null}\\r\\n */\\r\\nJitsiConference.prototype.getLocalVideoTrack = function() {\\r\\n    return this.rtc ? this.rtc.getLocalVideoTrack() : null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Attaches a handler for events(For example - \\\"participant joined\\\".) in the\\r\\n * conference. All possible event are defined in JitsiConferenceEvents.\\r\\n * @param eventId the event ID.\\r\\n * @param handler handler for the event.\\r\\n *\\r\\n * Note: consider adding eventing functionality by extending an EventEmitter\\r\\n * impl, instead of rolling ourselves\\r\\n */\\r\\nJitsiConference.prototype.on = function(eventId, handler) {\\r\\n    if (this.eventEmitter) {\\r\\n        this.eventEmitter.on(eventId, handler);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes event listener\\r\\n * @param eventId the event ID.\\r\\n * @param [handler] optional, the specific handler to unbind\\r\\n *\\r\\n * Note: consider adding eventing functionality by extending an EventEmitter\\r\\n * impl, instead of rolling ourselves\\r\\n */\\r\\nJitsiConference.prototype.off = function(eventId, handler) {\\r\\n    if (this.eventEmitter) {\\r\\n        this.eventEmitter.removeListener(eventId, handler);\\r\\n    }\\r\\n};\\r\\n\\r\\n// Common aliases for event emitter\\r\\nJitsiConference.prototype.addEventListener = JitsiConference.prototype.on;\\r\\nJitsiConference.prototype.removeEventListener = JitsiConference.prototype.off;\\r\\n\\r\\n/**\\r\\n * Receives notifications from other participants about commands / custom events\\r\\n * (sent by sendCommand or sendCommandOnce methods).\\r\\n * @param command {String} the name of the command\\r\\n * @param handler {Function} handler for the command\\r\\n */\\r\\nJitsiConference.prototype.addCommandListener = function(command, handler) {\\r\\n    if (this.room) {\\r\\n        this.room.addPresenceListener(command, handler);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n  * Removes command  listener\\r\\n  * @param command {String} the name of the command\\r\\n  * @param handler {Function} handler to remove for the command\\r\\n  */\\r\\nJitsiConference.prototype.removeCommandListener = function(command, handler) {\\r\\n    if (this.room) {\\r\\n        this.room.removePresenceListener(command, handler);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sends text message to the other participants in the conference\\r\\n * @param message the text message.\\r\\n * @param elementName the element name to encapsulate the message.\\r\\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\\r\\n */\\r\\nJitsiConference.prototype.sendTextMessage = function(\\r\\n        message, elementName = 'body') {\\r\\n    if (this.room) {\\r\\n        const displayName = (this.room.getFromPresence('nick') || {}).value;\\r\\n\\r\\n        this.room.sendMessage(message, elementName, displayName);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Send private text message to another participant of the conference\\r\\n * @param id the id of the participant to send a private message.\\r\\n * @param message the text message.\\r\\n * @param elementName the element name to encapsulate the message.\\r\\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\\r\\n */\\r\\nJitsiConference.prototype.sendPrivateTextMessage = function(\\r\\n        id, message, elementName = 'body') {\\r\\n    if (this.room) {\\r\\n        this.room.sendPrivateMessage(id, message, elementName);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Send presence command.\\r\\n * @param name {String} the name of the command.\\r\\n * @param values {Object} with keys and values that will be sent.\\r\\n **/\\r\\nJitsiConference.prototype.sendCommand = function(name, values) {\\r\\n    if (this.room) {\\r\\n        this.room.addToPresence(name, values);\\r\\n        this.room.sendPresence();\\r\\n    } else {\\r\\n        logger.warn('Not sending a command, room not initialized.');\\r\\n    }\\r\\n\\r\\n};\\r\\n\\r\\n/**\\r\\n * Send presence command one time.\\r\\n * @param name {String} the name of the command.\\r\\n * @param values {Object} with keys and values that will be sent.\\r\\n **/\\r\\nJitsiConference.prototype.sendCommandOnce = function(name, values) {\\r\\n    this.sendCommand(name, values);\\r\\n    this.removeCommand(name);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes presence command.\\r\\n * @param name {String} the name of the command.\\r\\n **/\\r\\nJitsiConference.prototype.removeCommand = function(name) {\\r\\n    if (this.room) {\\r\\n        this.room.removeFromPresence(name);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sets the display name for this conference.\\r\\n * @param name the display name to set\\r\\n */\\r\\nJitsiConference.prototype.setDisplayName = function(name) {\\r\\n    if (this.room) {\\r\\n        // remove previously set nickname\\r\\n        this.room.removeFromPresence('nick');\\r\\n\\r\\n        this.room.addToPresence('nick', {\\r\\n            attributes: { xmlns: 'http://jabber.org/protocol/nick' },\\r\\n            value: name\\r\\n        });\\r\\n        this.room.sendPresence();\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Set new subject for this conference. (available only for moderator)\\r\\n * @param {string} subject new subject\\r\\n */\\r\\nJitsiConference.prototype.setSubject = function(subject) {\\r\\n    if (this.room && this.isModerator()) {\\r\\n        this.room.setSubject(subject);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get a transcriber object for all current participants in this conference\\r\\n * @return {Transcriber} the transcriber object\\r\\n */\\r\\nJitsiConference.prototype.getTranscriber = function() {\\r\\n    if (this.transcriber === undefined) {\\r\\n        this.transcriber = new Transcriber();\\r\\n\\r\\n        // add all existing local audio tracks to the transcriber\\r\\n        const localAudioTracks = this.getLocalTracks(MediaType.AUDIO);\\r\\n\\r\\n        for (const localAudio of localAudioTracks) {\\r\\n            this.transcriber.addTrack(localAudio);\\r\\n        }\\r\\n\\r\\n        // and all remote audio tracks\\r\\n        const remoteAudioTracks = this.rtc.getRemoteTracks(MediaType.AUDIO);\\r\\n\\r\\n        for (const remoteTrack of remoteAudioTracks) {\\r\\n            this.transcriber.addTrack(remoteTrack);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return this.transcriber;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the transcription status.\\r\\n *\\r\\n * @returns {String} \\\"on\\\" or \\\"off\\\".\\r\\n */\\r\\nJitsiConference.prototype.getTranscriptionStatus = function() {\\r\\n    return this.room.transcriptionStatus;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds JitsiLocalTrack object to the conference.\\r\\n * @param track the JitsiLocalTrack object.\\r\\n * @returns {Promise<JitsiLocalTrack>}\\r\\n * @throws {Error} if the specified track is a video track and there is already\\r\\n * another video track in the conference.\\r\\n */\\r\\nJitsiConference.prototype.addTrack = function(track) {\\r\\n    if (track.isVideoTrack()) {\\r\\n        // Ensure there's exactly 1 local video track in the conference.\\r\\n        const localVideoTrack = this.rtc.getLocalVideoTrack();\\r\\n\\r\\n        if (localVideoTrack) {\\r\\n            // Don't be excessively harsh and severe if the API client happens\\r\\n            // to attempt to add the same local video track twice.\\r\\n            if (track === localVideoTrack) {\\r\\n                return Promise.resolve(track);\\r\\n            }\\r\\n\\r\\n            return Promise.reject(new Error(\\r\\n                'cannot add second video track to the conference'));\\r\\n\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return this.replaceTrack(null, track);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Fires TRACK_AUDIO_LEVEL_CHANGED change conference event (for local tracks).\\r\\n * @param {number} audioLevel the audio level\\r\\n * @param {TraceablePeerConnection} [tpc]\\r\\n */\\r\\nJitsiConference.prototype._fireAudioLevelChangeEvent = function(\\r\\n        audioLevel,\\r\\n        tpc) {\\r\\n    const activeTpc = this.getActivePeerConnection();\\r\\n\\r\\n    // There will be no TraceablePeerConnection if audio levels do not come from\\r\\n    // a peerconnection. LocalStatsCollector.js measures audio levels using Web\\r\\n    // Audio Analyser API and emits local audio levels events through\\r\\n    // JitsiTrack.setAudioLevel, but does not provide TPC instance which is\\r\\n    // optional.\\r\\n    if (!tpc || activeTpc === tpc) {\\r\\n        this.eventEmitter.emit(\\r\\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\\r\\n            this.myUserId(), audioLevel);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Fires TRACK_MUTE_CHANGED change conference event.\\r\\n * @param track the JitsiTrack object related to the event.\\r\\n */\\r\\nJitsiConference.prototype._fireMuteChangeEvent = function(track) {\\r\\n    // check if track was muted by focus and now is unmuted by user\\r\\n    if (this.isMutedByFocus && track.isAudioTrack() && !track.isMuted()) {\\r\\n        this.isMutedByFocus = false;\\r\\n\\r\\n        // unmute local user on server\\r\\n        this.room.muteParticipant(this.room.myroomjid, false);\\r\\n    }\\r\\n\\r\\n    let actorParticipant;\\r\\n\\r\\n    if (this.mutedByFocusActor) {\\r\\n        const actorId = Strophe.getResourceFromJid(this.mutedByFocusActor);\\r\\n\\r\\n        actorParticipant = this.participants[actorId];\\r\\n    }\\r\\n\\r\\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track, actorParticipant);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Clear JitsiLocalTrack properties and listeners.\\r\\n * @param track the JitsiLocalTrack object.\\r\\n */\\r\\nJitsiConference.prototype.onLocalTrackRemoved = function(track) {\\r\\n    track._setConference(null);\\r\\n    this.rtc.removeLocalTrack(track);\\r\\n    track.removeEventListener(JitsiTrackEvents.TRACK_MUTE_CHANGED,\\r\\n        track.muteHandler);\\r\\n    track.removeEventListener(JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\\r\\n        track.audioLevelHandler);\\r\\n\\r\\n    // send event for stopping screen sharing\\r\\n    // FIXME: we assume we have only one screen sharing track\\r\\n    // if we change this we need to fix this check\\r\\n    if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\\r\\n        this.statistics.sendScreenSharingEvent(false);\\r\\n    }\\r\\n\\r\\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes JitsiLocalTrack from the conference and performs\\r\\n * a new offer/answer cycle.\\r\\n * @param {JitsiLocalTrack} track\\r\\n * @returns {Promise}\\r\\n */\\r\\nJitsiConference.prototype.removeTrack = function(track) {\\r\\n    return this.replaceTrack(track, null);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Replaces oldTrack with newTrack and performs a single offer/answer\\r\\n *  cycle after both operations are done.  Either oldTrack or newTrack\\r\\n *  can be null; replacing a valid 'oldTrack' with a null 'newTrack'\\r\\n *  effectively just removes 'oldTrack'\\r\\n * @param {JitsiLocalTrack} oldTrack the current stream in use to be replaced\\r\\n * @param {JitsiLocalTrack} newTrack the new stream to use\\r\\n * @returns {Promise} resolves when the replacement is finished\\r\\n */\\r\\nJitsiConference.prototype.replaceTrack = function(oldTrack, newTrack) {\\r\\n    // First do the removal of the oldTrack at the JitsiConference level\\r\\n    if (oldTrack) {\\r\\n        if (oldTrack.disposed) {\\r\\n            return Promise.reject(\\r\\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\\r\\n        }\\r\\n    }\\r\\n    if (newTrack) {\\r\\n        if (newTrack.disposed) {\\r\\n            return Promise.reject(\\r\\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Now replace the stream at the lower levels\\r\\n    return this._doReplaceTrack(oldTrack, newTrack)\\r\\n        .then(() => {\\r\\n            if (oldTrack) {\\r\\n                this.onLocalTrackRemoved(oldTrack);\\r\\n            }\\r\\n            if (newTrack) {\\r\\n                // Now handle the addition of the newTrack at the\\r\\n                // JitsiConference level\\r\\n                this._setupNewTrack(newTrack);\\r\\n            }\\r\\n\\r\\n            return Promise.resolve();\\r\\n        }, error => Promise.reject(new Error(error)));\\r\\n};\\r\\n\\r\\n/**\\r\\n * Replaces the tracks at the lower level by going through the Jingle session\\r\\n * and WebRTC peer connection. The method will resolve immediately if there is\\r\\n * currently no JingleSession started.\\r\\n * @param {JitsiLocalTrack|null} oldTrack the track to be removed during\\r\\n * the process or <tt>null</t> if the method should act as \\\"add track\\\"\\r\\n * @param {JitsiLocalTrack|null} newTrack the new track to be added or\\r\\n * <tt>null</tt> if the method should act as \\\"remove track\\\"\\r\\n * @return {Promise} resolved when the process is done or rejected with a string\\r\\n * which describes the error.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._doReplaceTrack = function(oldTrack, newTrack) {\\r\\n    const replaceTrackPromises = [];\\r\\n\\r\\n    if (this.jvbJingleSession) {\\r\\n        replaceTrackPromises.push(\\r\\n            this.jvbJingleSession.replaceTrack(oldTrack, newTrack));\\r\\n    } else {\\r\\n        logger.info('_doReplaceTrack - no JVB JingleSession');\\r\\n    }\\r\\n\\r\\n    if (this.p2pJingleSession) {\\r\\n        replaceTrackPromises.push(\\r\\n            this.p2pJingleSession.replaceTrack(oldTrack, newTrack));\\r\\n    } else {\\r\\n        logger.info('_doReplaceTrack - no P2P JingleSession');\\r\\n    }\\r\\n\\r\\n    return Promise.all(replaceTrackPromises);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Operations related to creating a new track\\r\\n * @param {JitsiLocalTrack} newTrack the new track being created\\r\\n */\\r\\nJitsiConference.prototype._setupNewTrack = function(newTrack) {\\r\\n    if (newTrack.isAudioTrack() || (newTrack.isVideoTrack()\\r\\n            && newTrack.videoType !== VideoType.DESKTOP)) {\\r\\n        // Report active device to statistics\\r\\n        const devices = RTC.getCurrentlyAvailableMediaDevices();\\r\\n        const device\\r\\n            = devices.find(\\r\\n                d =>\\r\\n                    d.kind === `${newTrack.getTrack().kind}input`\\r\\n                        && d.label === newTrack.getTrack().label);\\r\\n\\r\\n        if (device) {\\r\\n            Statistics.sendActiveDeviceListEvent(\\r\\n                RTC.getEventDataForActiveDevice(device));\\r\\n        }\\r\\n    }\\r\\n    if (newTrack.isVideoTrack()) {\\r\\n        this.removeCommand('videoType');\\r\\n        this.sendCommand('videoType', {\\r\\n            value: newTrack.videoType,\\r\\n            attributes: {\\r\\n                xmlns: 'http://jitsi.org/jitmeet/video'\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    this.rtc.addLocalTrack(newTrack);\\r\\n\\r\\n    // ensure that we're sharing proper \\\"is muted\\\" state\\r\\n    if (newTrack.isAudioTrack()) {\\r\\n        this.room.setAudioMute(newTrack.isMuted());\\r\\n    } else {\\r\\n        this.room.setVideoMute(newTrack.isMuted());\\r\\n    }\\r\\n\\r\\n    newTrack.muteHandler = this._fireMuteChangeEvent.bind(this, newTrack);\\r\\n    newTrack.audioLevelHandler = this._fireAudioLevelChangeEvent.bind(this);\\r\\n    newTrack.addEventListener(\\r\\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\\r\\n        newTrack.muteHandler);\\r\\n    newTrack.addEventListener(\\r\\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\\r\\n        newTrack.audioLevelHandler);\\r\\n\\r\\n    newTrack._setConference(this);\\r\\n\\r\\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_ADDED, newTrack);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to add\\r\\n * back the underlying WebRTC MediaStream to the PeerConnection (which has\\r\\n * removed on video mute).\\r\\n * @param {JitsiLocalTrack} track the local track that will be added as part of\\r\\n * the unmute operation.\\r\\n * @return {Promise} resolved when the process is done or rejected with a string\\r\\n * which describes the error.\\r\\n */\\r\\nJitsiConference.prototype._addLocalTrackAsUnmute = function(track) {\\r\\n    const addAsUnmutePromises = [];\\r\\n\\r\\n    if (this.jvbJingleSession) {\\r\\n        addAsUnmutePromises.push(this.jvbJingleSession.addTrackAsUnmute(track));\\r\\n    } else {\\r\\n        logger.info(\\r\\n            'Add local MediaStream as unmute -'\\r\\n                + ' no JVB Jingle session started yet');\\r\\n    }\\r\\n\\r\\n    if (this.p2pJingleSession) {\\r\\n        addAsUnmutePromises.push(this.p2pJingleSession.addTrackAsUnmute(track));\\r\\n    } else {\\r\\n        logger.info(\\r\\n            'Add local MediaStream as unmute -'\\r\\n                + ' no P2P Jingle session started yet');\\r\\n    }\\r\\n\\r\\n    return Promise.all(addAsUnmutePromises);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to remove\\r\\n * the underlying WebRTC MediaStream from the PeerConnection. The purpose of\\r\\n * that is to stop sending any data and turn off the HW camera device.\\r\\n * @param {JitsiLocalTrack} track the local track that will be removed.\\r\\n * @return {Promise}\\r\\n */\\r\\nJitsiConference.prototype._removeLocalTrackAsMute = function(track) {\\r\\n    const removeAsMutePromises = [];\\r\\n\\r\\n    if (this.jvbJingleSession) {\\r\\n        removeAsMutePromises.push(\\r\\n            this.jvbJingleSession.removeTrackAsMute(track));\\r\\n    } else {\\r\\n        logger.info(\\r\\n            'Remove local MediaStream - no JVB JingleSession started yet');\\r\\n    }\\r\\n    if (this.p2pJingleSession) {\\r\\n        removeAsMutePromises.push(\\r\\n            this.p2pJingleSession.removeTrackAsMute(track));\\r\\n    } else {\\r\\n        logger.info(\\r\\n            'Remove local MediaStream - no P2P JingleSession started yet');\\r\\n    }\\r\\n\\r\\n    return Promise.all(removeAsMutePromises);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get role of the local user.\\r\\n * @returns {string} user role: 'moderator' or 'none'\\r\\n */\\r\\nJitsiConference.prototype.getRole = function() {\\r\\n    return this.room.role;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns whether or not the current conference has been joined as a hidden\\r\\n * user.\\r\\n *\\r\\n * @returns {boolean|null} True if hidden, false otherwise. Will return null if\\r\\n * no connection is active.\\r\\n */\\r\\nJitsiConference.prototype.isHidden = function() {\\r\\n    if (!this.connection) {\\r\\n        return null;\\r\\n    }\\r\\n\\r\\n    return Strophe.getDomainFromJid(this.connection.getJid())\\r\\n        === this.options.config.hiddenDomain;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Check if local user is moderator.\\r\\n * @returns {boolean|null} true if local user is moderator, false otherwise. If\\r\\n * we're no longer in the conference room then <tt>null</tt> is returned.\\r\\n */\\r\\nJitsiConference.prototype.isModerator = function() {\\r\\n    return this.room ? this.room.isModerator() : null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Set password for the room.\\r\\n * @param {string} password new password for the room.\\r\\n * @returns {Promise}\\r\\n */\\r\\nJitsiConference.prototype.lock = function(password) {\\r\\n    if (!this.isModerator()) {\\r\\n        return Promise.reject(new Error('You are not moderator.'));\\r\\n    }\\r\\n\\r\\n    return new Promise((resolve, reject) => {\\r\\n        this.room.lockRoom(\\r\\n            password || '',\\r\\n            () => resolve(),\\r\\n            err => reject(err),\\r\\n            () => reject(JitsiConferenceErrors.PASSWORD_NOT_SUPPORTED));\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Remove password from the room.\\r\\n * @returns {Promise}\\r\\n */\\r\\nJitsiConference.prototype.unlock = function() {\\r\\n    return this.lock();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Elects the participant with the given id to be the selected participant in\\r\\n * order to receive higher video quality (if simulcast is enabled).\\r\\n * Or cache it if channel is not created and send it once channel is available.\\r\\n * @param participantId the identifier of the participant\\r\\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\\r\\n * @returns {void}\\r\\n */\\r\\nJitsiConference.prototype.selectParticipant = function(participantId) {\\r\\n    this.selectParticipants([ participantId ]);\\r\\n};\\r\\n\\r\\n/*\\r\\n * Elects participants with given ids to be the selected participants in order\\r\\n * to receive higher video quality (if simulcast is enabled). The argument\\r\\n * should be an array of participant id strings or an empty array; an error will\\r\\n * be thrown if a non-array is passed in. The error is thrown as a layer of\\r\\n * protection against passing an invalid argument, as the error will happen in\\r\\n * the bridge and may not be visible in the client.\\r\\n *\\r\\n * @param {Array<strings>} participantIds - An array of identifiers for\\r\\n * participants.\\r\\n * @returns {void}\\r\\n */\\r\\nJitsiConference.prototype.selectParticipants = function(participantIds) {\\r\\n    if (!Array.isArray(participantIds)) {\\r\\n        throw new Error('Invalid argument; participantIds must be an array.');\\r\\n    }\\r\\n\\r\\n    this.rtc.selectEndpoints(participantIds);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Elects the participant with the given id to be the pinned participant in\\r\\n * order to always receive video for this participant (even when last n is\\r\\n * enabled).\\r\\n * @param participantId the identifier of the participant\\r\\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\\r\\n */\\r\\nJitsiConference.prototype.pinParticipant = function(participantId) {\\r\\n    this.rtc.pinEndpoint(participantId);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Obtains the current value for \\\"lastN\\\". See {@link setLastN} for more info.\\r\\n * @returns {number}\\r\\n */\\r\\nJitsiConference.prototype.getLastN = function() {\\r\\n    return this.rtc.getLastN();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Selects a new value for \\\"lastN\\\". The requested amount of videos are going\\r\\n * to be delivered after the value is in effect. Set to -1 for unlimited or\\r\\n * all available videos.\\r\\n * @param lastN the new number of videos the user would like to receive.\\r\\n * @throws Error or RangeError if the given value is not a number or is smaller\\r\\n * than -1.\\r\\n */\\r\\nJitsiConference.prototype.setLastN = function(lastN) {\\r\\n    if (!Number.isInteger(lastN) && !Number.parseInt(lastN, 10)) {\\r\\n        throw new Error(`Invalid value for lastN: ${lastN}`);\\r\\n    }\\r\\n    const n = Number(lastN);\\r\\n\\r\\n    if (n < -1) {\\r\\n        throw new RangeError('lastN cannot be smaller than -1');\\r\\n    }\\r\\n    this.rtc.setLastN(n);\\r\\n\\r\\n    // If the P2P session is not fully established yet, we wait until it gets\\r\\n    // established.\\r\\n    if (this.p2pJingleSession) {\\r\\n        const isVideoActive = n !== 0;\\r\\n\\r\\n        this.p2pJingleSession\\r\\n            .setMediaTransferActive(true, isVideoActive)\\r\\n            .catch(error => {\\r\\n                logger.error(\\r\\n                    `Failed to adjust video transfer status (${isVideoActive})`,\\r\\n                    error);\\r\\n            });\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Checks if the participant given by participantId is currently included in\\r\\n * the last N.\\r\\n * @param {string} participantId the identifier of the participant we would\\r\\n * like to check.\\r\\n * @return {boolean} true if the participant with id is in the last N set or\\r\\n * if there's no last N set, false otherwise.\\r\\n * @deprecated this method should never be used to figure out the UI, but\\r\\n * {@link ParticipantConnectionStatus} should be used instead.\\r\\n */\\r\\nJitsiConference.prototype.isInLastN = function(participantId) {\\r\\n    return this.rtc.isInLastN(participantId);\\r\\n};\\r\\n\\r\\n/**\\r\\n * @return Array<JitsiParticipant> an array of all participants in this\\r\\n * conference.\\r\\n */\\r\\nJitsiConference.prototype.getParticipants = function() {\\r\\n    return Object.keys(this.participants).map(function(key) {\\r\\n        return this.participants[key];\\r\\n    }, this);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the number of participants in the conference, including the local\\r\\n * participant.\\r\\n * @param countHidden {boolean} Whether or not to include hidden participants\\r\\n * in the count. Default: false.\\r\\n **/\\r\\nJitsiConference.prototype.getParticipantCount\\r\\n    = function(countHidden = false) {\\r\\n\\r\\n        let participants = this.getParticipants();\\r\\n\\r\\n        if (!countHidden) {\\r\\n            participants = participants.filter(p => !p.isHidden());\\r\\n        }\\r\\n\\r\\n        // Add one for the local participant.\\r\\n        return participants.length + 1;\\r\\n    };\\r\\n\\r\\n/**\\r\\n * @returns {JitsiParticipant} the participant in this conference with the\\r\\n * specified id (or undefined if there isn't one).\\r\\n * @param id the id of the participant.\\r\\n */\\r\\nJitsiConference.prototype.getParticipantById = function(id) {\\r\\n    return this.participants[id];\\r\\n};\\r\\n\\r\\n/**\\r\\n * Kick participant from this conference.\\r\\n * @param {string} id id of the participant to kick\\r\\n */\\r\\nJitsiConference.prototype.kickParticipant = function(id) {\\r\\n    const participant = this.getParticipantById(id);\\r\\n\\r\\n    if (!participant) {\\r\\n        return;\\r\\n    }\\r\\n    this.room.kick(participant.getJid());\\r\\n};\\r\\n\\r\\n/**\\r\\n * Maybe clears the timeout which emits {@link ACTION_JINGLE_SI_TIMEOUT}\\r\\n * analytics event.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._maybeClearSITimeout = function() {\\r\\n    if (this._sessionInitiateTimeout\\r\\n            && (this.jvbJingleSession || this.getParticipantCount() < 2)) {\\r\\n        window.clearTimeout(this._sessionInitiateTimeout);\\r\\n        this._sessionInitiateTimeout = null;\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sets a timeout which will emit {@link ACTION_JINGLE_SI_TIMEOUT} analytics\\r\\n * event.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._maybeSetSITimeout = function() {\\r\\n    // Jicofo is supposed to invite if there are at least 2 participants\\r\\n    if (!this.jvbJingleSession\\r\\n            && this.getParticipantCount() >= 2\\r\\n            && !this._sessionInitiateTimeout) {\\r\\n        this._sessionInitiateTimeout = window.setTimeout(() => {\\r\\n            this._sessionInitiateTimeout = null;\\r\\n            Statistics.sendAnalytics(createJingleEvent(\\r\\n                ACTION_JINGLE_SI_TIMEOUT,\\r\\n                {\\r\\n                    p2p: false,\\r\\n                    value: JINGLE_SI_TIMEOUT\\r\\n                }));\\r\\n        }, JINGLE_SI_TIMEOUT);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Mutes a participant.\\r\\n * @param {string} id The id of the participant to mute.\\r\\n */\\r\\nJitsiConference.prototype.muteParticipant = function(id) {\\r\\n    const participant = this.getParticipantById(id);\\r\\n\\r\\n    if (!participant) {\\r\\n        return;\\r\\n    }\\r\\n    this.room.muteParticipant(participant.getJid(), true);\\r\\n};\\r\\n\\r\\n/* eslint-disable max-params */\\r\\n\\r\\n/**\\r\\n * Notifies this JitsiConference that a new member has joined its chat room.\\r\\n *\\r\\n * FIXME This should NOT be exposed!\\r\\n *\\r\\n * @param jid the jid of the participant in the MUC\\r\\n * @param nick the display name of the participant\\r\\n * @param role the role of the participant in the MUC\\r\\n * @param isHidden indicates if this is a hidden participant (system\\r\\n * participant for example a recorder).\\r\\n * @param statsID the participant statsID (optional)\\r\\n * @param status the initial status if any\\r\\n * @param identity the member identity, if any\\r\\n * @param botType the member botType, if any\\r\\n */\\r\\nJitsiConference.prototype.onMemberJoined = function(\\r\\n        jid, nick, role, isHidden, statsID, status, identity, botType) {\\r\\n    const id = Strophe.getResourceFromJid(jid);\\r\\n\\r\\n    if (id === 'focus' || this.myUserId() === id) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const participant\\r\\n        = new JitsiParticipant(jid, this, nick, isHidden, statsID, status, identity);\\r\\n\\r\\n    participant._role = role;\\r\\n    participant._botType = botType;\\r\\n    this.participants[id] = participant;\\r\\n    this.eventEmitter.emit(\\r\\n        JitsiConferenceEvents.USER_JOINED,\\r\\n        id,\\r\\n        participant);\\r\\n\\r\\n    this._updateFeatures(participant);\\r\\n\\r\\n    this._maybeStartOrStopP2P();\\r\\n    this._maybeSetSITimeout();\\r\\n};\\r\\n\\r\\n/* eslint-enable max-params */\\r\\n\\r\\n/**\\r\\n * Updates features for a participant.\\r\\n * @param {JitsiParticipant} participant - The participant to query for features.\\r\\n * @returns {void}\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._updateFeatures = function(participant) {\\r\\n    participant.getFeatures()\\r\\n        .then(features => {\\r\\n            participant._supportsDTMF = features.has('urn:xmpp:jingle:dtmf:0');\\r\\n            this.updateDTMFSupport();\\r\\n\\r\\n            if (features.has('http://jitsi.org/protocol/jigasi')) {\\r\\n                participant.setProperty('features_jigasi', true);\\r\\n            }\\r\\n        })\\r\\n        .catch(() => false);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get notified when member bot type had changed.\\r\\n * @param jid the member jid\\r\\n * @param botType the new botType value\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._onMemberBotTypeChanged = function(jid, botType) {\\r\\n\\r\\n    // find the participant and mark it as non bot, as the real one will join\\r\\n    // in a moment\\r\\n    const peers = this.getParticipants();\\r\\n    const botParticipant = peers.find(p => p.getJid() === jid);\\r\\n\\r\\n    if (botParticipant) {\\r\\n        botParticipant._botType = botType;\\r\\n        const id = Strophe.getResourceFromJid(jid);\\r\\n\\r\\n        this.eventEmitter.emit(\\r\\n            JitsiConferenceEvents.BOT_TYPE_CHANGED,\\r\\n            id,\\r\\n            botType);\\r\\n    }\\r\\n\\r\\n    // if botType changed to undefined, botType was removed, in case of\\r\\n    // poltergeist mode this is the moment when the poltergeist had exited and\\r\\n    // the real participant had already replaced it.\\r\\n    // In this case we can check and try p2p\\r\\n    if (!botParticipant._botType) {\\r\\n        this._maybeStartOrStopP2P();\\r\\n    }\\r\\n};\\r\\n\\r\\nJitsiConference.prototype.onMemberLeft = function(jid) {\\r\\n    const id = Strophe.getResourceFromJid(jid);\\r\\n\\r\\n    if (id === 'focus' || this.myUserId() === id) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const participant = this.participants[id];\\r\\n\\r\\n    delete this.participants[id];\\r\\n\\r\\n    const removedTracks = this.rtc.removeRemoteTracks(id);\\r\\n\\r\\n    removedTracks.forEach(\\r\\n        track =>\\r\\n            this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track));\\r\\n\\r\\n    // there can be no participant in case the member that left is focus\\r\\n    if (participant) {\\r\\n        this.eventEmitter.emit(\\r\\n            JitsiConferenceEvents.USER_LEFT, id, participant);\\r\\n    }\\r\\n\\r\\n    this._maybeStartOrStopP2P(true /* triggered by user left event */);\\r\\n    this._maybeClearSITimeout();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Designates an event indicating that we were kicked from the XMPP MUC.\\r\\n * @param {boolean} isSelfPresence - whether it is for local participant\\r\\n * or another participant.\\r\\n * @param {string} actorId - the id of the participant who was initiator\\r\\n * of the kick.\\r\\n * @param {string?} kickedParticipantId - when it is not a kick for local participant,\\r\\n * this is the id of the participant which was kicked.\\r\\n */\\r\\nJitsiConference.prototype.onMemberKicked = function(isSelfPresence, actorId, kickedParticipantId) {\\r\\n    const actorParticipant = this.participants[actorId];\\r\\n\\r\\n    if (isSelfPresence) {\\r\\n        this.eventEmitter.emit(\\r\\n            JitsiConferenceEvents.KICKED, actorParticipant);\\r\\n\\r\\n        this.leave();\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const kickedParticipant = this.participants[kickedParticipantId];\\r\\n\\r\\n    this.eventEmitter.emit(\\r\\n        JitsiConferenceEvents.PARTICIPANT_KICKED, actorParticipant, kickedParticipant);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Method called on local MUC role change.\\r\\n * @param {string} role the name of new user's role as defined by XMPP MUC.\\r\\n */\\r\\nJitsiConference.prototype.onLocalRoleChanged = function(role) {\\r\\n    // Emit role changed for local  JID\\r\\n    this.eventEmitter.emit(\\r\\n        JitsiConferenceEvents.USER_ROLE_CHANGED, this.myUserId(), role);\\r\\n};\\r\\n\\r\\nJitsiConference.prototype.onUserRoleChanged = function(jid, role) {\\r\\n    const id = Strophe.getResourceFromJid(jid);\\r\\n    const participant = this.getParticipantById(id);\\r\\n\\r\\n    if (!participant) {\\r\\n        return;\\r\\n    }\\r\\n    participant._role = role;\\r\\n    this.eventEmitter.emit(JitsiConferenceEvents.USER_ROLE_CHANGED, id, role);\\r\\n};\\r\\n\\r\\nJitsiConference.prototype.onDisplayNameChanged = function(jid, displayName) {\\r\\n    const id = Strophe.getResourceFromJid(jid);\\r\\n    const participant = this.getParticipantById(id);\\r\\n\\r\\n    if (!participant) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    if (participant._displayName === displayName) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    participant._displayName = displayName;\\r\\n    this.eventEmitter.emit(\\r\\n        JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\\r\\n        id,\\r\\n        displayName);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies this JitsiConference that a JitsiRemoteTrack was added into\\r\\n * the conference.\\r\\n *\\r\\n * @param {JitsiRemoteTrack} track the JitsiRemoteTrack which was added to this\\r\\n * JitsiConference\\r\\n */\\r\\nJitsiConference.prototype.onRemoteTrackAdded = function(track) {\\r\\n    if (track.isP2P && !this.isP2PActive()) {\\r\\n        logger.info(\\r\\n            'Trying to add remote P2P track, when not in P2P - IGNORED');\\r\\n\\r\\n        return;\\r\\n    } else if (!track.isP2P && this.isP2PActive()) {\\r\\n        logger.info(\\r\\n            'Trying to add remote JVB track, when in P2P - IGNORED');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const id = track.getParticipantId();\\r\\n    const participant = this.getParticipantById(id);\\r\\n\\r\\n    if (!participant) {\\r\\n        logger.error(`No participant found for id: ${id}`);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // Add track to JitsiParticipant.\\r\\n    participant._tracks.push(track);\\r\\n\\r\\n    if (this.transcriber) {\\r\\n        this.transcriber.addTrack(track);\\r\\n    }\\r\\n\\r\\n    const emitter = this.eventEmitter;\\r\\n\\r\\n    track.addEventListener(\\r\\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\\r\\n        () => emitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track));\\r\\n    track.addEventListener(\\r\\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\\r\\n        (audioLevel, tpc) => {\\r\\n            const activeTPC = this.getActivePeerConnection();\\r\\n\\r\\n            if (activeTPC === tpc) {\\r\\n                emitter.emit(\\r\\n                    JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\\r\\n                    id,\\r\\n                    audioLevel);\\r\\n            }\\r\\n        }\\r\\n    );\\r\\n\\r\\n    emitter.emit(JitsiConferenceEvents.TRACK_ADDED, track);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Callback called by the Jingle plugin when 'session-answer' is received.\\r\\n * @param {JingleSessionPC} session the Jingle session for which an answer was\\r\\n * received.\\r\\n * @param {jQuery} answer a jQuery selector pointing to 'jingle' IQ element\\r\\n */\\r\\n// eslint-disable-next-line no-unused-vars\\r\\nJitsiConference.prototype.onCallAccepted = function(session, answer) {\\r\\n    if (this.p2pJingleSession === session) {\\r\\n        logger.info('P2P setAnswer');\\r\\n        this.p2pJingleSession.setAnswer(answer);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Callback called by the Jingle plugin when 'transport-info' is received.\\r\\n * @param {JingleSessionPC} session the Jingle session for which the IQ was\\r\\n * received\\r\\n * @param {jQuery} transportInfo a jQuery selector pointing to 'jingle' IQ\\r\\n * element\\r\\n */\\r\\n// eslint-disable-next-line no-unused-vars\\r\\nJitsiConference.prototype.onTransportInfo = function(session, transportInfo) {\\r\\n    if (this.p2pJingleSession === session) {\\r\\n        logger.info('P2P addIceCandidates');\\r\\n        this.p2pJingleSession.addIceCandidates(transportInfo);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Notifies this JitsiConference that a JitsiRemoteTrack was removed from\\r\\n * the conference.\\r\\n *\\r\\n * @param {JitsiRemoteTrack} removedTrack\\r\\n */\\r\\nJitsiConference.prototype.onRemoteTrackRemoved = function(removedTrack) {\\r\\n    this.getParticipants().forEach(participant => {\\r\\n        const tracks = participant.getTracks();\\r\\n\\r\\n        for (let i = 0; i < tracks.length; i++) {\\r\\n            if (tracks[i] === removedTrack) {\\r\\n                // Since the tracks have been compared and are\\r\\n                // considered equal the result of splice can be ignored.\\r\\n                participant._tracks.splice(i, 1);\\r\\n\\r\\n                this.eventEmitter.emit(\\r\\n                    JitsiConferenceEvents.TRACK_REMOVED, removedTrack);\\r\\n\\r\\n                if (this.transcriber) {\\r\\n                    this.transcriber.removeTrack(removedTrack);\\r\\n                }\\r\\n\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n    }, this);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Handles an incoming call event for the P2P jingle session.\\r\\n */\\r\\nJitsiConference.prototype._onIncomingCallP2P = function(\\r\\n        jingleSession,\\r\\n        jingleOffer) {\\r\\n\\r\\n    let rejectReason;\\r\\n\\r\\n    if (!browser.supportsP2P()) {\\r\\n        rejectReason = {\\r\\n            reason: 'unsupported-applications',\\r\\n            reasonDescription: 'P2P not supported',\\r\\n            errorMsg: 'This client does not support P2P connections'\\r\\n        };\\r\\n    } else if (!this.isP2PEnabled() && !this.isP2PTestModeEnabled()) {\\r\\n        rejectReason = {\\r\\n            reason: 'decline',\\r\\n            reasonDescription: 'P2P disabled',\\r\\n            errorMsg: 'P2P mode disabled in the configuration'\\r\\n        };\\r\\n    } else if (this.p2pJingleSession) {\\r\\n        // Reject incoming P2P call (already in progress)\\r\\n        rejectReason = {\\r\\n            reason: 'busy',\\r\\n            reasonDescription: 'P2P already in progress',\\r\\n            errorMsg: 'Duplicated P2P \\\"session-initiate\\\"'\\r\\n        };\\r\\n    }\\r\\n\\r\\n    if (rejectReason) {\\r\\n        this._rejectIncomingCall(jingleSession, rejectReason);\\r\\n    } else {\\r\\n        this._acceptP2PIncomingCall(jingleSession, jingleOffer);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Handles an incoming call event.\\r\\n */\\r\\nJitsiConference.prototype.onIncomingCall = function(\\r\\n        jingleSession,\\r\\n        jingleOffer,\\r\\n        now) {\\r\\n    // Handle incoming P2P call\\r\\n    if (jingleSession.isP2P) {\\r\\n        this._onIncomingCallP2P(jingleSession, jingleOffer);\\r\\n    } else {\\r\\n        if (!this.room.isFocus(jingleSession.remoteJid)) {\\r\\n            const description = 'Rejecting session-initiate from non-focus.';\\r\\n\\r\\n            this._rejectIncomingCall(\\r\\n                jingleSession, {\\r\\n                    reason: 'security-error',\\r\\n                    reasonDescription: description,\\r\\n                    errorMsg: description\\r\\n                });\\r\\n\\r\\n            return;\\r\\n        }\\r\\n        this._acceptJvbIncomingCall(jingleSession, jingleOffer, now);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Accepts an incoming call event for the JVB jingle session.\\r\\n */\\r\\nJitsiConference.prototype._acceptJvbIncomingCall = function(\\r\\n        jingleSession,\\r\\n        jingleOffer,\\r\\n        now) {\\r\\n\\r\\n    // Accept incoming call\\r\\n    this.jvbJingleSession = jingleSession;\\r\\n    this.room.connectionTimes['session.initiate'] = now;\\r\\n\\r\\n    if (this.wasStopped) {\\r\\n        Statistics.sendAnalyticsAndLog(\\r\\n            createJingleEvent(ACTION_JINGLE_RESTART, { p2p: false }));\\r\\n    }\\r\\n\\r\\n    const serverRegion\\r\\n        = $(jingleOffer)\\r\\n            .find('>bridge-session[xmlns=\\\"http://jitsi.org/protocol/focus\\\"]')\\r\\n            .attr('region');\\r\\n\\r\\n    this.eventEmitter.emit(\\r\\n        JitsiConferenceEvents.SERVER_REGION_CHANGED,\\r\\n        serverRegion);\\r\\n\\r\\n    this._maybeClearSITimeout();\\r\\n    Statistics.sendAnalytics(createJingleEvent(\\r\\n        ACTION_JINGLE_SI_RECEIVED,\\r\\n        {\\r\\n            p2p: false,\\r\\n            value: now\\r\\n        }));\\r\\n    try {\\r\\n        jingleSession.initialize(this.room, this.rtc, this.options.config);\\r\\n    } catch (error) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(error);\\r\\n    }\\r\\n\\r\\n    // Open a channel with the videobridge.\\r\\n    this._setBridgeChannel(jingleOffer, jingleSession.peerconnection);\\r\\n\\r\\n    // Add local tracks to the session\\r\\n    try {\\r\\n        jingleSession.acceptOffer(\\r\\n            jingleOffer,\\r\\n            () => {\\r\\n                // If for any reason invite for the JVB session arrived after\\r\\n                // the P2P has been established already the media transfer needs\\r\\n                // to be turned off here.\\r\\n                if (this.isP2PActive() && this.jvbJingleSession) {\\r\\n                    this._suspendMediaTransferForJvbConnection();\\r\\n                }\\r\\n            },\\r\\n            error => {\\r\\n                GlobalOnErrorHandler.callErrorHandler(error);\\r\\n                logger.error(\\r\\n                    'Failed to accept incoming Jingle session', error);\\r\\n            },\\r\\n            this.getLocalTracks()\\r\\n        );\\r\\n\\r\\n        // Start callstats as soon as peerconnection is initialized,\\r\\n        // do not wait for XMPPEvents.PEERCONNECTION_READY, as it may never\\r\\n        // happen in case if user doesn't have or denied permission to\\r\\n        // both camera and microphone.\\r\\n        logger.info('Starting CallStats for JVB connection...');\\r\\n        this.statistics.startCallStats(\\r\\n            this.jvbJingleSession.peerconnection,\\r\\n            'jitsi' /* Remote user ID for JVB is 'jitsi' */);\\r\\n        this.statistics.startRemoteStats(this.jvbJingleSession.peerconnection);\\r\\n    } catch (e) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(e);\\r\\n        logger.error(e);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sets the BridgeChannel.\\r\\n *\\r\\n * @param {jQuery} offerIq a jQuery selector pointing to the jingle element of\\r\\n * the offer IQ which may carry the WebSocket URL for the 'websocket'\\r\\n * BridgeChannel mode.\\r\\n * @param {TraceablePeerConnection} pc the peer connection which will be used\\r\\n * to listen for new WebRTC Data Channels (in the 'datachannel' mode).\\r\\n */\\r\\nJitsiConference.prototype._setBridgeChannel = function(offerIq, pc) {\\r\\n    let wsUrl = null;\\r\\n    const webSocket\\r\\n        = $(offerIq)\\r\\n            .find('>content>transport>web-socket')\\r\\n            .first();\\r\\n\\r\\n    if (webSocket.length === 1) {\\r\\n        wsUrl = webSocket[0].getAttribute('url');\\r\\n    }\\r\\n\\r\\n    let bridgeChannelType;\\r\\n\\r\\n    switch (this.options.config.openBridgeChannel) {\\r\\n    case 'datachannel':\\r\\n    case true:\\r\\n    case undefined:\\r\\n        bridgeChannelType = 'datachannel';\\r\\n        break;\\r\\n    case 'websocket':\\r\\n        bridgeChannelType = 'websocket';\\r\\n        break;\\r\\n    }\\r\\n\\r\\n    if (bridgeChannelType === 'datachannel'\\r\\n        && !browser.supportsDataChannels()) {\\r\\n        bridgeChannelType = 'websocket';\\r\\n    }\\r\\n\\r\\n    if (bridgeChannelType === 'datachannel') {\\r\\n        this.rtc.initializeBridgeChannel(pc, null);\\r\\n    } else if (bridgeChannelType === 'websocket' && wsUrl) {\\r\\n        this.rtc.initializeBridgeChannel(null, wsUrl);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Rejects incoming Jingle call.\\r\\n * @param {JingleSessionPC} jingleSession the session instance to be rejected.\\r\\n * @param {object} [options]\\r\\n * @param {string} options.reason the name of the reason element as defined\\r\\n * by Jingle\\r\\n * @param {string} options.reasonDescription the reason description which will\\r\\n * be included in Jingle 'session-terminate' message.\\r\\n * @param {string} options.errorMsg an error message to be logged on global\\r\\n * error handler\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._rejectIncomingCall = function(\\r\\n        jingleSession,\\r\\n        options) {\\r\\n    if (options && options.errorMsg) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(new Error(options.errorMsg));\\r\\n    }\\r\\n\\r\\n    // Terminate the jingle session with a reason\\r\\n    jingleSession.terminate(\\r\\n        null /* success callback => we don't care */,\\r\\n        error => {\\r\\n            logger.warn(\\r\\n                'An error occurred while trying to terminate'\\r\\n                    + ' invalid Jingle session', error);\\r\\n        }, {\\r\\n            reason: options && options.reason,\\r\\n            reasonDescription: options && options.reasonDescription,\\r\\n            sendSessionTerminate: true\\r\\n        });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Handles the call ended event.\\r\\n * XXX is this due to the remote side terminating the Jingle session?\\r\\n *\\r\\n * @param {JingleSessionPC} jingleSession the jingle session which has been\\r\\n * terminated.\\r\\n * @param {String} reasonCondition the Jingle reason condition.\\r\\n * @param {String|null} reasonText human readable reason text which may provide\\r\\n * more details about why the call has been terminated.\\r\\n */\\r\\nJitsiConference.prototype.onCallEnded = function(\\r\\n        jingleSession,\\r\\n        reasonCondition,\\r\\n        reasonText) {\\r\\n    logger.info(\\r\\n        `Call ended: ${reasonCondition} - ${reasonText} P2P ?${\\r\\n            jingleSession.isP2P}`);\\r\\n    if (jingleSession === this.jvbJingleSession) {\\r\\n        this.wasStopped = true;\\r\\n\\r\\n        Statistics.sendAnalytics(\\r\\n            createJingleEvent(ACTION_JINGLE_TERMINATE, { p2p: false }));\\r\\n\\r\\n        // Stop the stats\\r\\n        if (this.statistics) {\\r\\n            this.statistics.stopRemoteStats(\\r\\n                this.jvbJingleSession.peerconnection);\\r\\n            logger.info('Stopping JVB CallStats');\\r\\n            this.statistics.stopCallStats(\\r\\n                this.jvbJingleSession.peerconnection);\\r\\n        }\\r\\n\\r\\n        // Current JVB JingleSession is no longer valid, so set it to null\\r\\n        this.jvbJingleSession = null;\\r\\n\\r\\n        // Let the RTC service do any cleanups\\r\\n        this.rtc.onCallEnded();\\r\\n    } else if (jingleSession === this.p2pJingleSession) {\\r\\n        // It's the responder who decides to enforce JVB mode, so that both\\r\\n        // initiator and responder are aware if it was intentional.\\r\\n        if (reasonCondition === 'decline' && reasonText === 'force JVB121') {\\r\\n            logger.info('In forced JVB 121 mode...');\\r\\n            Statistics.analytics.addPermanentProperties({ forceJvb121: true });\\r\\n        } else if (reasonCondition === 'connectivity-error'\\r\\n            && reasonText === 'ICE FAILED') {\\r\\n            // It can happen that the other peer detects ICE failed and\\r\\n            // terminates the session, before we get the event on our side.\\r\\n            // But we are able to parse the reason and mark it here.\\r\\n            Statistics.analytics.addPermanentProperties({ p2pFailed: true });\\r\\n        }\\r\\n        this._stopP2PSession();\\r\\n    } else {\\r\\n        logger.error(\\r\\n            'Received onCallEnded for invalid session',\\r\\n            jingleSession.sid,\\r\\n            jingleSession.remoteJid,\\r\\n            reasonCondition,\\r\\n            reasonText);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Handles the suspend detected event. Leaves the room and fires suspended.\\r\\n * @param {JingleSessionPC} jingleSession\\r\\n */\\r\\nJitsiConference.prototype.onSuspendDetected = function(jingleSession) {\\r\\n    if (!jingleSession.isP2P) {\\r\\n        this.leave();\\r\\n        this.eventEmitter.emit(JitsiConferenceEvents.SUSPEND_DETECTED);\\r\\n    }\\r\\n};\\r\\n\\r\\nJitsiConference.prototype.updateDTMFSupport = function() {\\r\\n    let somebodySupportsDTMF = false;\\r\\n    const participants = this.getParticipants();\\r\\n\\r\\n    // check if at least 1 participant supports DTMF\\r\\n    for (let i = 0; i < participants.length; i += 1) {\\r\\n        if (participants[i].supportsDTMF()) {\\r\\n            somebodySupportsDTMF = true;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n    if (somebodySupportsDTMF !== this.somebodySupportsDTMF) {\\r\\n        this.somebodySupportsDTMF = somebodySupportsDTMF;\\r\\n        this.eventEmitter.emit(\\r\\n            JitsiConferenceEvents.DTMF_SUPPORT_CHANGED,\\r\\n            somebodySupportsDTMF);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Allows to check if there is at least one user in the conference\\r\\n * that supports DTMF.\\r\\n * @returns {boolean} true if somebody supports DTMF, false otherwise\\r\\n */\\r\\nJitsiConference.prototype.isDTMFSupported = function() {\\r\\n    return this.somebodySupportsDTMF;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the local user's ID\\r\\n * @return {string} local user's ID\\r\\n */\\r\\nJitsiConference.prototype.myUserId = function() {\\r\\n    return (\\r\\n        this.room && this.room.myroomjid\\r\\n            ? Strophe.getResourceFromJid(this.room.myroomjid)\\r\\n            : null);\\r\\n};\\r\\n\\r\\nJitsiConference.prototype.sendTones = function(tones, duration, pause) {\\r\\n    if (!this.dtmfManager) {\\r\\n        const peerConnection = this.getActivePeerConnection();\\r\\n\\r\\n        if (!peerConnection) {\\r\\n            logger.warn('cannot sendTones: no peer connection');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const localAudio = this.getLocalAudioTrack();\\r\\n\\r\\n        if (!localAudio) {\\r\\n            logger.warn('cannot sendTones: no local audio stream');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n        this.dtmfManager = new JitsiDTMFManager(localAudio, peerConnection);\\r\\n    }\\r\\n\\r\\n    this.dtmfManager.sendTones(tones, duration, pause);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Starts recording the current conference.\\r\\n *\\r\\n * @param {Object} options - Configuration for the recording. See\\r\\n * {@link Chatroom#startRecording} for more info.\\r\\n * @returns {Promise} See {@link Chatroom#startRecording} for more info.\\r\\n */\\r\\nJitsiConference.prototype.startRecording = function(options) {\\r\\n    if (this.room) {\\r\\n        return this.recordingManager.startRecording(options);\\r\\n    }\\r\\n\\r\\n    return Promise.reject(new Error('The conference is not created yet!'));\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stop a recording session.\\r\\n *\\r\\n * @param {string} sessionID - The ID of the recording session that\\r\\n * should be stopped.\\r\\n * @returns {Promise} See {@link Chatroom#stopRecording} for more info.\\r\\n */\\r\\nJitsiConference.prototype.stopRecording = function(sessionID) {\\r\\n    if (this.room) {\\r\\n        return this.recordingManager.stopRecording(sessionID);\\r\\n    }\\r\\n\\r\\n    return Promise.reject(new Error('The conference is not created yet!'));\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns true if the SIP calls are supported and false otherwise\\r\\n */\\r\\nJitsiConference.prototype.isSIPCallingSupported = function() {\\r\\n    if (this.room) {\\r\\n        return this.room.isSIPCallingSupported();\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Dials a number.\\r\\n * @param number the number\\r\\n */\\r\\nJitsiConference.prototype.dial = function(number) {\\r\\n    if (this.room) {\\r\\n        return this.room.dial(number);\\r\\n    }\\r\\n\\r\\n    return new Promise((resolve, reject) => {\\r\\n        reject(new Error('The conference is not created yet!'));\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Hangup an existing call\\r\\n */\\r\\nJitsiConference.prototype.hangup = function() {\\r\\n    if (this.room) {\\r\\n        return this.room.hangup();\\r\\n    }\\r\\n\\r\\n    return new Promise((resolve, reject) => {\\r\\n        reject(new Error('The conference is not created yet!'));\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Starts the transcription service.\\r\\n */\\r\\nJitsiConference.prototype.startTranscriber = function() {\\r\\n    return this.dial('jitsi_meet_transcribe');\\r\\n};\\r\\n\\r\\n\\r\\n/**\\r\\n * Stops the transcription service.\\r\\n */\\r\\nJitsiConference.prototype.stopTranscriber = JitsiConference.prototype.hangup;\\r\\n\\r\\n/**\\r\\n * Returns the phone number for joining the conference.\\r\\n */\\r\\nJitsiConference.prototype.getPhoneNumber = function() {\\r\\n    if (this.room) {\\r\\n        return this.room.getPhoneNumber();\\r\\n    }\\r\\n\\r\\n    return null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the pin for joining the conference with phone.\\r\\n */\\r\\nJitsiConference.prototype.getPhonePin = function() {\\r\\n    if (this.room) {\\r\\n        return this.room.getPhonePin();\\r\\n    }\\r\\n\\r\\n    return null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Will return P2P or JVB <tt>TraceablePeerConnection</tt> depending on\\r\\n * which connection is currently active.\\r\\n *\\r\\n * @return {TraceablePeerConnection|null} null if there isn't any active\\r\\n * <tt>TraceablePeerConnection</tt> currently available.\\r\\n * @public (FIXME how to make package local ?)\\r\\n */\\r\\nJitsiConference.prototype.getActivePeerConnection = function() {\\r\\n    if (this.isP2PActive()) {\\r\\n        return this.p2pJingleSession.peerconnection;\\r\\n    }\\r\\n\\r\\n    return this.jvbJingleSession ? this.jvbJingleSession.peerconnection : null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the connection state for the current room. Its ice connection state\\r\\n * for its session.\\r\\n * NOTE that \\\"completed\\\" ICE state which can appear on the P2P connection will\\r\\n * be converted to \\\"connected\\\".\\r\\n * @return {string|null} ICE state name or <tt>null</tt> if there is no active\\r\\n * peer connection at this time.\\r\\n */\\r\\nJitsiConference.prototype.getConnectionState = function() {\\r\\n    const peerConnection = this.getActivePeerConnection();\\r\\n\\r\\n    return peerConnection ? peerConnection.getConnectionState() : null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Make all new participants mute their audio/video on join.\\r\\n * @param policy {Object} object with 2 boolean properties for video and audio:\\r\\n * @param {boolean} audio if audio should be muted.\\r\\n * @param {boolean} video if video should be muted.\\r\\n */\\r\\nJitsiConference.prototype.setStartMutedPolicy = function(policy) {\\r\\n    if (!this.isModerator()) {\\r\\n        return;\\r\\n    }\\r\\n    this.startMutedPolicy = policy;\\r\\n    this.room.removeFromPresence('startmuted');\\r\\n    this.room.addToPresence('startmuted', {\\r\\n        attributes: {\\r\\n            audio: policy.audio,\\r\\n            video: policy.video,\\r\\n            xmlns: 'http://jitsi.org/jitmeet/start-muted'\\r\\n        }\\r\\n    });\\r\\n    this.room.sendPresence();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns current start muted policy\\r\\n * @returns {Object} with 2 properties - audio and video.\\r\\n */\\r\\nJitsiConference.prototype.getStartMutedPolicy = function() {\\r\\n    return this.startMutedPolicy;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Check if audio is muted on join.\\r\\n */\\r\\nJitsiConference.prototype.isStartAudioMuted = function() {\\r\\n    return this.startAudioMuted;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Check if video is muted on join.\\r\\n */\\r\\nJitsiConference.prototype.isStartVideoMuted = function() {\\r\\n    return this.startVideoMuted;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get object with internal logs.\\r\\n */\\r\\nJitsiConference.prototype.getLogs = function() {\\r\\n    const data = this.xmpp.getJingleLog();\\r\\n\\r\\n    const metadata = {};\\r\\n\\r\\n    metadata.time = new Date();\\r\\n    metadata.url = window.location.href;\\r\\n    metadata.ua = navigator.userAgent;\\r\\n\\r\\n    const log = this.xmpp.getXmppLog();\\r\\n\\r\\n    if (log) {\\r\\n        metadata.xmpp = log;\\r\\n    }\\r\\n\\r\\n    data.metadata = metadata;\\r\\n\\r\\n    return data;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns measured connectionTimes.\\r\\n */\\r\\nJitsiConference.prototype.getConnectionTimes = function() {\\r\\n    return this.room.connectionTimes;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sets a property for the local participant.\\r\\n */\\r\\nJitsiConference.prototype.setLocalParticipantProperty = function(name, value) {\\r\\n    this.sendCommand(`jitsi_participant_${name}`, { value });\\r\\n};\\r\\n\\r\\n/**\\r\\n *  Removes a property for the local participant and sends the updated presence.\\r\\n */\\r\\nJitsiConference.prototype.removeLocalParticipantProperty = function(name) {\\r\\n    this.removeCommand(`jitsi_participant_${name}`);\\r\\n    this.room.sendPresence();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Gets a local participant property.\\r\\n *\\r\\n * @return value of the local participant property if the tagName exists in the\\r\\n * list of properties, otherwise returns undefined.\\r\\n */\\r\\nJitsiConference.prototype.getLocalParticipantProperty = function(name) {\\r\\n    const property = this.room.presMap.nodes.find(prop =>\\r\\n        prop.tagName === `jitsi_participant_${name}`\\r\\n    );\\r\\n\\r\\n    return property ? property.value : undefined;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sends the given feedback through CallStats if enabled.\\r\\n *\\r\\n * @param overallFeedback an integer between 1 and 5 indicating the\\r\\n * user feedback\\r\\n * @param detailedFeedback detailed feedback from the user. Not yet used\\r\\n * @returns {Promise} Resolves if feedback is submitted successfully.\\r\\n */\\r\\nJitsiConference.prototype.sendFeedback = function(\\r\\n        overallFeedback,\\r\\n        detailedFeedback) {\\r\\n    return this.statistics.sendFeedback(overallFeedback, detailedFeedback);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns true if the callstats integration is enabled, otherwise returns\\r\\n * false.\\r\\n *\\r\\n * @returns true if the callstats integration is enabled, otherwise returns\\r\\n * false.\\r\\n */\\r\\nJitsiConference.prototype.isCallstatsEnabled = function() {\\r\\n    return this.statistics.isCallstatsEnabled();\\r\\n};\\r\\n\\r\\n\\r\\n/**\\r\\n * Handles track attached to container (Calls associateStreamWithVideoTag method\\r\\n * from statistics module)\\r\\n * @param {JitsiLocalTrack|JitsiRemoteTrack} track the track\\r\\n * @param container the container\\r\\n */\\r\\nJitsiConference.prototype._onTrackAttach = function(track, container) {\\r\\n    const isLocal = track.isLocal();\\r\\n    let ssrc = null;\\r\\n    const isP2P = track.isP2P;\\r\\n    const remoteUserId = isP2P ? track.getParticipantId() : 'jitsi';\\r\\n    const peerConnection\\r\\n        = isP2P\\r\\n            ? this.p2pJingleSession && this.p2pJingleSession.peerconnection\\r\\n            : this.jvbJingleSession && this.jvbJingleSession.peerconnection;\\r\\n\\r\\n    if (isLocal) {\\r\\n        // Local tracks have SSRC stored on per peer connection basis\\r\\n        if (peerConnection) {\\r\\n            ssrc = peerConnection.getLocalSSRC(track);\\r\\n        }\\r\\n    } else {\\r\\n        ssrc = track.getSSRC();\\r\\n    }\\r\\n    if (!container.id || !ssrc || !peerConnection) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    this.statistics.associateStreamWithVideoTag(\\r\\n        peerConnection,\\r\\n        ssrc,\\r\\n        isLocal,\\r\\n        remoteUserId,\\r\\n        track.getUsageLabel(),\\r\\n        container.id);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Logs an \\\"application log\\\" message.\\r\\n * @param message {string} The message to log. Note that while this can be a\\r\\n * generic string, the convention used by lib-jitsi-meet and jitsi-meet is to\\r\\n * log valid JSON strings, with an \\\"id\\\" field used for distinguishing between\\r\\n * message types. E.g.: {id: \\\"recorder_status\\\", status: \\\"off\\\"}\\r\\n */\\r\\nJitsiConference.prototype.sendApplicationLog = function(message) {\\r\\n    Statistics.sendLog(message);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Checks if the user identified by given <tt>mucJid</tt> is the conference\\r\\n * focus.\\r\\n * @param mucJid the full MUC address of the user to be checked.\\r\\n * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus,\\r\\n * <tt>false</tt> when is not. <tt>null</tt> if we're not in the MUC anymore and\\r\\n * are unable to figure out the status or if given <tt>mucJid</tt> is invalid.\\r\\n */\\r\\nJitsiConference.prototype._isFocus = function(mucJid) {\\r\\n    return this.room ? this.room.isFocus(mucJid) : null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Fires CONFERENCE_FAILED event with INCOMPATIBLE_SERVER_VERSIONS parameter\\r\\n */\\r\\nJitsiConference.prototype._fireIncompatibleVersionsEvent = function() {\\r\\n    this.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.INCOMPATIBLE_SERVER_VERSIONS);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sends a message via the data channel.\\r\\n * @param to {string} the id of the endpoint that should receive the message.\\r\\n * If \\\"\\\" the message will be sent to all participants.\\r\\n * @param payload {object} the payload of the message.\\r\\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\\r\\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\\r\\n */\\r\\nJitsiConference.prototype.sendEndpointMessage = function(to, payload) {\\r\\n    this.rtc.sendChannelMessage(to, payload);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sends a broadcast message via the data channel.\\r\\n * @param payload {object} the payload of the message.\\r\\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\\r\\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\\r\\n */\\r\\nJitsiConference.prototype.broadcastEndpointMessage = function(payload) {\\r\\n    this.sendEndpointMessage('', payload);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sends a message to a given endpoint (if 'to' is a non-empty string), or\\r\\n * broadcasts it to all endpoints in the conference.\\r\\n * @param {string} to The ID of the endpoint/participant which is to receive\\r\\n * the message, or '' to broadcast the message to all endpoints in the\\r\\n * conference.\\r\\n * @param {string|object} message the message to send. If this is of type\\r\\n * 'string' it will be sent as a chat message. If it is of type 'object', it\\r\\n * will be encapsulated in a format recognized by jitsi-meet and converted to\\r\\n * JSON before being sent.\\r\\n * @param {boolean} sendThroughVideobridge Whether to send the message through\\r\\n * jitsi-videobridge (via the COLIBRI data channel or web socket), or through\\r\\n * the XMPP MUC. Currently only objects can be sent through jitsi-videobridge.\\r\\n */\\r\\nJitsiConference.prototype.sendMessage = function(\\r\\n        message,\\r\\n        to = '',\\r\\n        sendThroughVideobridge = false) {\\r\\n    const messageType = typeof message;\\r\\n\\r\\n    // Through videobridge we support only objects. Through XMPP we support\\r\\n    // objects (encapsulated in a specific JSON format) and strings (i.e.\\r\\n    // regular chat messages).\\r\\n    if (messageType !== 'object'\\r\\n            && (sendThroughVideobridge || messageType !== 'string')) {\\r\\n        logger.error(`Can not send a message of type ${messageType}`);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    if (sendThroughVideobridge) {\\r\\n        this.sendEndpointMessage(to, message);\\r\\n    } else {\\r\\n        let messageToSend = message;\\r\\n\\r\\n        // Name of packet extension of message stanza to send the required\\r\\n        // message in.\\r\\n        let elementName = 'body';\\r\\n\\r\\n        if (messageType === 'object') {\\r\\n            elementName = 'json-message';\\r\\n\\r\\n            // Mark as valid JSON message if not already\\r\\n            if (!messageToSend.hasOwnProperty(JITSI_MEET_MUC_TYPE)) {\\r\\n                messageToSend[JITSI_MEET_MUC_TYPE] = '';\\r\\n            }\\r\\n\\r\\n            try {\\r\\n                messageToSend = JSON.stringify(messageToSend);\\r\\n            } catch (e) {\\r\\n                logger.error('Can not send a message, stringify failed: ', e);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (to) {\\r\\n            this.sendPrivateTextMessage(to, messageToSend, elementName);\\r\\n        } else {\\r\\n            // Broadcast\\r\\n            this.sendTextMessage(messageToSend, elementName);\\r\\n        }\\r\\n    }\\r\\n\\r\\n};\\r\\n\\r\\nJitsiConference.prototype.isConnectionInterrupted = function() {\\r\\n    return this.isP2PActive()\\r\\n        ? this.isP2PConnectionInterrupted : this.isJvbConnectionInterrupted;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Handles {@link XMPPEvents.CONNECTION_INTERRUPTED}\\r\\n * @param {JingleSessionPC} session\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._onIceConnectionInterrupted = function(session) {\\r\\n    if (session.isP2P) {\\r\\n        this.isP2PConnectionInterrupted = true;\\r\\n    } else {\\r\\n        this.isJvbConnectionInterrupted = true;\\r\\n    }\\r\\n    if (session.isP2P === this.isP2PActive()) {\\r\\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_INTERRUPTED);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Handles {@link XMPPEvents.CONNECTION_ICE_FAILED}\\r\\n * @param {JingleSessionPC} session\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._onIceConnectionFailed = function(session) {\\r\\n    // We do nothing for the JVB connection, because it's up to the Jicofo to\\r\\n    // eventually come up with the new offer (at least for the time being).\\r\\n    if (session.isP2P) {\\r\\n        // Add p2pFailed property to analytics to distinguish, between \\\"good\\\"\\r\\n        // and \\\"bad\\\" connection\\r\\n        Statistics.analytics.addPermanentProperties({ p2pFailed: true });\\r\\n\\r\\n        if (this.p2pJingleSession) {\\r\\n            Statistics.sendAnalyticsAndLog(\\r\\n                createP2PEvent(\\r\\n                    ACTION_P2P_FAILED,\\r\\n                    {\\r\\n                        initiator: this.p2pJingleSession.isInitiator\\r\\n                    }));\\r\\n\\r\\n        }\\r\\n        this._stopP2PSession('connectivity-error', 'ICE FAILED');\\r\\n    } else if (session && this.jvbJingleSession === session) {\\r\\n        if (this.xmpp.isPingSupported()) {\\r\\n            this._delayedIceFailed = new IceFailedNotification(this);\\r\\n            this._delayedIceFailed.start(session);\\r\\n        } else {\\r\\n            // Let Jicofo know that the JVB's ICE connection has failed\\r\\n            logger.info('PING not supported - sending ICE failed immediately');\\r\\n            session.sendIceFailedNotification();\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Handles {@link XMPPEvents.CONNECTION_RESTORED}\\r\\n * @param {JingleSessionPC} session\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._onIceConnectionRestored = function(session) {\\r\\n    if (session.isP2P) {\\r\\n        this.isP2PConnectionInterrupted = false;\\r\\n    } else {\\r\\n        this.isJvbConnectionInterrupted = false;\\r\\n        this._delayedIceFailed && this._delayedIceFailed.cancel();\\r\\n    }\\r\\n\\r\\n    if (session.isP2P === this.isP2PActive()) {\\r\\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_RESTORED);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Accept incoming P2P Jingle call.\\r\\n * @param {JingleSessionPC} jingleSession the session instance\\r\\n * @param {jQuery} jingleOffer a jQuery selector pointing to 'jingle' IQ element\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._acceptP2PIncomingCall = function(\\r\\n        jingleSession,\\r\\n        jingleOffer) {\\r\\n    this.isP2PConnectionInterrupted = false;\\r\\n\\r\\n    // Accept the offer\\r\\n    this.p2pJingleSession = jingleSession;\\r\\n\\r\\n    this.p2pJingleSession.initialize(this.room, this.rtc, this.options.config);\\r\\n\\r\\n    logger.info('Starting CallStats for P2P connection...');\\r\\n\\r\\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\\r\\n\\r\\n    if (this.options.config.enableStatsID) {\\r\\n        const participant = this.participants[remoteID];\\r\\n\\r\\n        if (participant) {\\r\\n            remoteID = participant.getStatsID() || remoteID;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    this.statistics.startCallStats(\\r\\n        this.p2pJingleSession.peerconnection,\\r\\n        remoteID);\\r\\n\\r\\n    const localTracks = this.getLocalTracks();\\r\\n\\r\\n    this.p2pJingleSession.acceptOffer(\\r\\n        jingleOffer,\\r\\n        () => {\\r\\n            logger.debug('Got RESULT for P2P \\\"session-accept\\\"');\\r\\n        },\\r\\n        error => {\\r\\n            logger.error(\\r\\n                'Failed to accept incoming P2P Jingle session', error);\\r\\n        },\\r\\n        localTracks);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds remote tracks to the conference associated with the JVB session.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._addRemoteJVBTracks = function() {\\r\\n    this._addRemoteTracks(\\r\\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds remote tracks to the conference associated with the P2P session.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._addRemoteP2PTracks = function() {\\r\\n    this._addRemoteTracks(\\r\\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\\r\\n};\\r\\n\\r\\n/**\\r\\n * Generates fake \\\"remote track added\\\" events for given Jingle session.\\r\\n * @param {string} logName the session's nickname which will appear in log\\r\\n * messages.\\r\\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be added\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._addRemoteTracks = function(logName, remoteTracks) {\\r\\n    for (const track of remoteTracks) {\\r\\n        logger.info(`Adding remote ${logName} track: ${track}`);\\r\\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, track);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Called when {@link XMPPEvents.CONNECTION_ESTABLISHED} event is\\r\\n * triggered for a {@link JingleSessionPC}. Switches the conference to use\\r\\n * the P2P connection if the event comes from the P2P session.\\r\\n * @param {JingleSessionPC} jingleSession the session instance.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._onIceConnectionEstablished = function(\\r\\n        jingleSession) {\\r\\n    if (this.p2pJingleSession !== null) {\\r\\n        // store the establishment time of the p2p session as a field of the\\r\\n        // JitsiConference because the p2pJingleSession might get disposed (thus\\r\\n        // the value is lost).\\r\\n        this.p2pEstablishmentDuration\\r\\n            = this.p2pJingleSession.establishmentDuration;\\r\\n    }\\r\\n\\r\\n    if (this.jvbJingleSession !== null) {\\r\\n        this.jvbEstablishmentDuration\\r\\n            = this.jvbJingleSession.establishmentDuration;\\r\\n    }\\r\\n\\r\\n    let done = false;\\r\\n    const forceJVB121Ratio = this.options.config.forceJVB121Ratio;\\r\\n\\r\\n    // We don't care about the JVB case, there's nothing to be done\\r\\n    if (!jingleSession.isP2P) {\\r\\n        done = true;\\r\\n    } else if (this.p2pJingleSession !== jingleSession) {\\r\\n        logger.error('CONNECTION_ESTABLISHED - wrong P2P session instance ?!');\\r\\n\\r\\n        done = true;\\r\\n    } else if (!jingleSession.isInitiator\\r\\n        && typeof forceJVB121Ratio === 'number'\\r\\n        && Math.random() < forceJVB121Ratio) {\\r\\n        logger.info(`Forcing JVB 121 mode (ratio=${forceJVB121Ratio})...`);\\r\\n        Statistics.analytics.addPermanentProperties({ forceJvb121: true });\\r\\n        this._stopP2PSession('decline', 'force JVB121');\\r\\n\\r\\n        done = true;\\r\\n    }\\r\\n\\r\\n    if (!isNaN(this.p2pEstablishmentDuration)\\r\\n        && !isNaN(this.jvbEstablishmentDuration)) {\\r\\n        const establishmentDurationDiff\\r\\n            = this.p2pEstablishmentDuration - this.jvbEstablishmentDuration;\\r\\n\\r\\n        Statistics.sendAnalytics(\\r\\n            ICE_ESTABLISHMENT_DURATION_DIFF,\\r\\n            { value: establishmentDurationDiff });\\r\\n    }\\r\\n\\r\\n    if (jingleSession.isP2P === this.isP2PActive()) {\\r\\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_ESTABLISHED);\\r\\n    }\\r\\n\\r\\n    if (done) {\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // Update P2P status and emit events\\r\\n    this._setP2PStatus(true);\\r\\n\\r\\n    // Remove remote tracks\\r\\n    if (this.jvbJingleSession) {\\r\\n        this._removeRemoteJVBTracks();\\r\\n    } else {\\r\\n        logger.info('Not removing remote JVB tracks - no session yet');\\r\\n    }\\r\\n\\r\\n    this._addRemoteP2PTracks();\\r\\n\\r\\n    // Stop media transfer over the JVB connection\\r\\n    if (this.jvbJingleSession) {\\r\\n        this._suspendMediaTransferForJvbConnection();\\r\\n    }\\r\\n\\r\\n    logger.info('Starting remote stats with p2p connection');\\r\\n    this.statistics.startRemoteStats(this.p2pJingleSession.peerconnection);\\r\\n\\r\\n    Statistics.sendAnalyticsAndLog(\\r\\n        createP2PEvent(\\r\\n            ACTION_P2P_ESTABLISHED,\\r\\n            {\\r\\n                initiator: this.p2pJingleSession.isInitiator\\r\\n            }));\\r\\n\\r\\n};\\r\\n\\r\\n/**\\r\\n * Called when the chat room reads a new list of properties from jicofo's\\r\\n * presence. The properties may have changed, but they don't have to.\\r\\n *\\r\\n * @param {Object} properties - The properties keyed by the property name\\r\\n * ('key').\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._updateProperties = function(properties = {}) {\\r\\n    const changed = !isEqual(properties, this.properties);\\r\\n\\r\\n    this.properties = properties;\\r\\n    if (changed) {\\r\\n        this.eventEmitter.emit(\\r\\n            JitsiConferenceEvents.PROPERTIES_CHANGED,\\r\\n            this.properties);\\r\\n\\r\\n        // Some of the properties need to be added to analytics events.\\r\\n        const analyticsKeys = [\\r\\n\\r\\n            // The number of jitsi-videobridge instances currently used for the\\r\\n            // conference.\\r\\n            'bridge-count',\\r\\n\\r\\n            // The conference creation time (set by jicofo).\\r\\n            'created-ms',\\r\\n            'octo-enabled'\\r\\n        ];\\r\\n\\r\\n        analyticsKeys.forEach(key => {\\r\\n            if (properties[key] !== undefined) {\\r\\n                Statistics.analytics.addPermanentProperties({\\r\\n                    [key.replace('-', '_')]: properties[key]\\r\\n                });\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Gets a conference property with a given key.\\r\\n *\\r\\n * @param {string} key - The key.\\r\\n * @returns {*} The value\\r\\n */\\r\\nJitsiConference.prototype.getProperty = function(key) {\\r\\n    return this.properties[key];\\r\\n};\\r\\n\\r\\n/**\\r\\n * Clears the deferred start P2P task if it has been scheduled.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._maybeClearDeferredStartP2P = function() {\\r\\n    if (this.deferredStartP2PTask) {\\r\\n        logger.info('Cleared deferred start P2P task');\\r\\n        clearTimeout(this.deferredStartP2PTask);\\r\\n        this.deferredStartP2PTask = null;\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes from the conference remote tracks associated with the JVB\\r\\n * connection.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._removeRemoteJVBTracks = function() {\\r\\n    this._removeRemoteTracks(\\r\\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes from the conference remote tracks associated with the P2P\\r\\n * connection.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._removeRemoteP2PTracks = function() {\\r\\n    this._removeRemoteTracks(\\r\\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\\r\\n};\\r\\n\\r\\n/**\\r\\n * Generates fake \\\"remote track removed\\\" events for given Jingle session.\\r\\n * @param {string} sessionNickname the session's nickname which will appear in\\r\\n * log messages.\\r\\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be removed\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._removeRemoteTracks = function(\\r\\n        sessionNickname,\\r\\n        remoteTracks) {\\r\\n    for (const track of remoteTracks) {\\r\\n        logger.info(`Removing remote ${sessionNickname} track: ${track}`);\\r\\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, track);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Resumes media transfer over the JVB connection.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._resumeMediaTransferForJvbConnection = function() {\\r\\n    logger.info('Resuming media transfer over the JVB connection...');\\r\\n    this.jvbJingleSession.setMediaTransferActive(true, true).then(\\r\\n        () => {\\r\\n            logger.info('Resumed media transfer over the JVB connection!');\\r\\n        },\\r\\n        error => {\\r\\n            logger.error(\\r\\n                'Failed to resume media transfer over the JVB connection:',\\r\\n                error);\\r\\n        });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sets new P2P status and updates some events/states hijacked from\\r\\n * the <tt>JitsiConference</tt>.\\r\\n * @param {boolean} newStatus the new P2P status value, <tt>true</tt> means that\\r\\n * P2P is now in use, <tt>false</tt> means that the JVB connection is now in use\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._setP2PStatus = function(newStatus) {\\r\\n    if (this.p2p === newStatus) {\\r\\n        logger.debug(`Called _setP2PStatus with the same status: ${newStatus}`);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n    this.p2p = newStatus;\\r\\n    if (newStatus) {\\r\\n        logger.info('Peer to peer connection established!');\\r\\n\\r\\n        // When we end up in a valid P2P session need to reset the properties\\r\\n        // in case they have persisted, after session with another peer.\\r\\n        Statistics.analytics.addPermanentProperties({\\r\\n            p2pFailed: false,\\r\\n            forceJvb121: false\\r\\n        });\\r\\n\\r\\n        // Sync up video transfer active in case p2pJingleSession not existed\\r\\n        // when the lastN value was being adjusted.\\r\\n        const isVideoActive = this.rtc.getLastN() !== 0;\\r\\n\\r\\n        this.p2pJingleSession\\r\\n            .setMediaTransferActive(true, isVideoActive)\\r\\n            .catch(error => {\\r\\n                logger.error(\\r\\n                    'Failed to sync up P2P video transfer status'\\r\\n                        + `(${isVideoActive})`, error);\\r\\n            });\\r\\n    } else {\\r\\n        logger.info('Peer to peer connection closed!');\\r\\n    }\\r\\n\\r\\n    // Put the JVB connection on hold/resume\\r\\n    if (this.jvbJingleSession) {\\r\\n        this.statistics.sendConnectionResumeOrHoldEvent(\\r\\n            this.jvbJingleSession.peerconnection, !newStatus);\\r\\n    }\\r\\n\\r\\n    // Clear dtmfManager, so that it can be recreated with new connection\\r\\n    this.dtmfManager = null;\\r\\n\\r\\n    // Update P2P status\\r\\n    this.eventEmitter.emit(\\r\\n        JitsiConferenceEvents.P2P_STATUS,\\r\\n        this,\\r\\n        this.p2p);\\r\\n\\r\\n    // Refresh connection interrupted/restored\\r\\n    this.eventEmitter.emit(\\r\\n        this.isConnectionInterrupted()\\r\\n            ? JitsiConferenceEvents.CONNECTION_INTERRUPTED\\r\\n            : JitsiConferenceEvents.CONNECTION_RESTORED);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Starts new P2P session.\\r\\n * @param {string} remoteJid the JID of the remote participant\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._startP2PSession = function(remoteJid) {\\r\\n    this._maybeClearDeferredStartP2P();\\r\\n    if (this.p2pJingleSession) {\\r\\n        logger.error('P2P session already started!');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    this.isP2PConnectionInterrupted = false;\\r\\n    this.p2pJingleSession\\r\\n        = this.xmpp.connection.jingle.newP2PJingleSession(\\r\\n            this.room.myroomjid,\\r\\n            remoteJid);\\r\\n    logger.info(\\r\\n        'Created new P2P JingleSession', this.room.myroomjid, remoteJid);\\r\\n\\r\\n    this.p2pJingleSession.initialize(this.room, this.rtc, this.options.config);\\r\\n\\r\\n    logger.info('Starting CallStats for P2P connection...');\\r\\n\\r\\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\\r\\n\\r\\n    if (this.options.config.enableStatsID) {\\r\\n        const participant = this.participants[remoteID];\\r\\n\\r\\n        if (participant) {\\r\\n            remoteID = participant.getStatsID() || remoteID;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    this.statistics.startCallStats(\\r\\n        this.p2pJingleSession.peerconnection,\\r\\n        remoteID);\\r\\n\\r\\n    // NOTE one may consider to start P2P with the local tracks detached,\\r\\n    // but no data will be sent until ICE succeeds anyway. And we switch\\r\\n    // immediately once the P2P ICE connects.\\r\\n    const localTracks = this.getLocalTracks();\\r\\n\\r\\n    this.p2pJingleSession.invite(localTracks);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Suspends media transfer over the JVB connection.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._suspendMediaTransferForJvbConnection = function() {\\r\\n    logger.info('Suspending media transfer over the JVB connection...');\\r\\n    this.jvbJingleSession.setMediaTransferActive(false, false).then(\\r\\n        () => {\\r\\n            logger.info('Suspended media transfer over the JVB connection !');\\r\\n        },\\r\\n        error => {\\r\\n            logger.error(\\r\\n                'Failed to suspend media transfer over the JVB connection:',\\r\\n                error);\\r\\n        });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Method when called will decide whether it's the time to start or stop\\r\\n * the P2P session.\\r\\n * @param {boolean} userLeftEvent if <tt>true</tt> it means that the call\\r\\n * originates from the user left event.\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._maybeStartOrStopP2P = function(userLeftEvent) {\\r\\n    if (!browser.supportsP2P()\\r\\n        || !this.isP2PEnabled()\\r\\n        || this.isP2PTestModeEnabled()) {\\r\\n        logger.info('Auto P2P disabled');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n    const peers = this.getParticipants();\\r\\n    const peerCount = peers.length;\\r\\n    const isModerator = this.isModerator();\\r\\n    const hasBotPeer\\r\\n        = peers.find(p => p._botType === 'poltergeist') !== undefined;\\r\\n\\r\\n    // FIXME 1 peer and it must *support* P2P switching\\r\\n    const shouldBeInP2P = peerCount === 1 && !hasBotPeer;\\r\\n\\r\\n    logger.debug(\\r\\n        `P2P? isModerator: ${isModerator}, peerCount: ${\\r\\n            peerCount}, hasBotPeer: ${hasBotPeer} => ${\\r\\n            shouldBeInP2P}`);\\r\\n\\r\\n    // Clear deferred \\\"start P2P\\\" task\\r\\n    if (!shouldBeInP2P && this.deferredStartP2PTask) {\\r\\n        this._maybeClearDeferredStartP2P();\\r\\n    }\\r\\n\\r\\n    // Start peer to peer session\\r\\n    if (!this.p2pJingleSession && shouldBeInP2P) {\\r\\n        const peer = peerCount && peers[0];\\r\\n\\r\\n\\r\\n        const myId = this.myUserId();\\r\\n        const peersId = peer.getId();\\r\\n\\r\\n        if (myId > peersId) {\\r\\n            logger.debug(\\r\\n                'I\\\\'m the bigger peersId - '\\r\\n                + 'the other peer should start P2P', myId, peersId);\\r\\n\\r\\n            return;\\r\\n        } else if (myId === peersId) {\\r\\n            logger.error('The same IDs ? ', myId, peersId);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const jid = peer.getJid();\\r\\n\\r\\n        if (userLeftEvent) {\\r\\n            if (this.deferredStartP2PTask) {\\r\\n                logger.error('Deferred start P2P task\\\\'s been set already!');\\r\\n\\r\\n                return;\\r\\n            }\\r\\n            logger.info(\\r\\n                `Will start P2P with: ${jid} after ${\\r\\n                    this.backToP2PDelay} seconds...`);\\r\\n            this.deferredStartP2PTask = setTimeout(\\r\\n                this._startP2PSession.bind(this, jid),\\r\\n                this.backToP2PDelay * 1000);\\r\\n        } else {\\r\\n            logger.info(`Will start P2P with: ${jid}`);\\r\\n            this._startP2PSession(jid);\\r\\n        }\\r\\n    } else if (this.p2pJingleSession && !shouldBeInP2P) {\\r\\n        logger.info(`Will stop P2P with: ${this.p2pJingleSession.remoteJid}`);\\r\\n\\r\\n        // Log that there will be a switch back to the JVB connection\\r\\n        if (this.p2pJingleSession.isInitiator && peerCount > 1) {\\r\\n            Statistics.sendAnalyticsAndLog(\\r\\n                createP2PEvent(ACTION_P2P_SWITCH_TO_JVB));\\r\\n        }\\r\\n        this._stopP2PSession();\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stops the current P2P session.\\r\\n * @param {string} [reason=\\\"success\\\"] one of the Jingle \\\"reason\\\" element\\r\\n * names as defined by https://xmpp.org/extensions/xep-0166.html#def-reason\\r\\n * @param {string} [reasonDescription=\\\"Turing off P2P session\\\"] text\\r\\n * description that will be included in the session terminate message\\r\\n * @private\\r\\n */\\r\\nJitsiConference.prototype._stopP2PSession = function(\\r\\n        reason,\\r\\n        reasonDescription) {\\r\\n    if (!this.p2pJingleSession) {\\r\\n        logger.error('No P2P session to be stopped!');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const wasP2PEstablished = this.isP2PActive();\\r\\n\\r\\n    // Swap remote tracks, but only if the P2P has been fully established\\r\\n    if (wasP2PEstablished) {\\r\\n        if (this.jvbJingleSession) {\\r\\n            this._resumeMediaTransferForJvbConnection();\\r\\n        }\\r\\n\\r\\n        // Remove remote P2P tracks\\r\\n        this._removeRemoteP2PTracks();\\r\\n    }\\r\\n\\r\\n    // Stop P2P stats\\r\\n    logger.info('Stopping remote stats for P2P connection');\\r\\n    this.statistics.stopRemoteStats(this.p2pJingleSession.peerconnection);\\r\\n    logger.info('Stopping CallStats for P2P connection');\\r\\n    this.statistics.stopCallStats(this.p2pJingleSession.peerconnection);\\r\\n\\r\\n    this.p2pJingleSession.terminate(\\r\\n        () => {\\r\\n            logger.info('P2P session terminate RESULT');\\r\\n        },\\r\\n        error => {\\r\\n            // Because both initiator and responder are simultaneously\\r\\n            // terminating their JingleSessions in case of the 'to JVB switch'\\r\\n            // when 3rd participant joins, both will dispose their sessions and\\r\\n            // reply with 'item-not-found' (see strophe.jingle.js). We don't\\r\\n            // want to log this as an error since it's expected behaviour.\\r\\n            //\\r\\n            // We want them both to terminate, because in case of initiator's\\r\\n            // crash the responder would stay in P2P mode until ICE fails which\\r\\n            // could take up to 20 seconds.\\r\\n            //\\r\\n            // NOTE lack of 'reason' is considered as graceful session terminate\\r\\n            // where both initiator and responder terminate their sessions\\r\\n            // simultaneously.\\r\\n            if (reason) {\\r\\n                logger.error(\\r\\n                    'An error occurred while trying to terminate'\\r\\n                        + ' P2P Jingle session', error);\\r\\n            }\\r\\n        }, {\\r\\n            reason: reason ? reason : 'success',\\r\\n            reasonDescription: reasonDescription\\r\\n                ? reasonDescription : 'Turing off P2P session',\\r\\n            sendSessionTerminate: this.room\\r\\n                && this.getParticipantById(\\r\\n                    Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid))\\r\\n        });\\r\\n\\r\\n    this.p2pJingleSession = null;\\r\\n\\r\\n    // Update P2P status and other affected events/states\\r\\n    this._setP2PStatus(false);\\r\\n\\r\\n    if (wasP2PEstablished) {\\r\\n        // Add back remote JVB tracks\\r\\n        if (this.jvbJingleSession) {\\r\\n            this._addRemoteJVBTracks();\\r\\n        } else {\\r\\n            logger.info('Not adding remote JVB tracks - no session yet');\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Checks whether or not the conference is currently in the peer to peer mode.\\r\\n * Being in peer to peer mode means that the direct connection has been\\r\\n * established and the P2P connection is being used for media transmission.\\r\\n * @return {boolean} <tt>true</tt> if in P2P mode or <tt>false</tt> otherwise.\\r\\n */\\r\\nJitsiConference.prototype.isP2PActive = function() {\\r\\n    return this.p2p;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the current ICE state of the P2P connection.\\r\\n * NOTE: method is used by the jitsi-meet-torture tests.\\r\\n * @return {string|null} an ICE state or <tt>null</tt> if there's currently\\r\\n * no P2P connection.\\r\\n */\\r\\nJitsiConference.prototype.getP2PConnectionState = function() {\\r\\n    if (this.isP2PActive()) {\\r\\n        return this.p2pJingleSession.peerconnection.getConnectionState();\\r\\n    }\\r\\n\\r\\n    return null;\\r\\n};\\r\\n\\r\\n\\r\\n/**\\r\\n * Manually starts new P2P session (should be used only in the tests).\\r\\n */\\r\\nJitsiConference.prototype.startP2PSession = function() {\\r\\n    const peers = this.getParticipants();\\r\\n\\r\\n    // Start peer to peer session\\r\\n    if (peers.length === 1) {\\r\\n        const peerJid = peers[0].getJid();\\r\\n\\r\\n        this._startP2PSession(peerJid);\\r\\n    } else {\\r\\n        throw new Error(\\r\\n            'There must be exactly 1 participant to start the P2P session !');\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Manually stops the current P2P session (should be used only in the tests)\\r\\n */\\r\\nJitsiConference.prototype.stopP2PSession = function() {\\r\\n    this._stopP2PSession();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get a summary of how long current participants have been the dominant speaker\\r\\n * @returns {object}\\r\\n */\\r\\nJitsiConference.prototype.getSpeakerStats = function() {\\r\\n    return this.speakerStatsCollector.getStats();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sets the maximum video size the local participant should receive from remote\\r\\n * participants.\\r\\n *\\r\\n * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\\r\\n * this receiver is willing to receive.\\r\\n * @returns {void}\\r\\n */\\r\\nJitsiConference.prototype.setReceiverVideoConstraint = function(\\r\\n        maxFrameHeight) {\\r\\n    this.rtc.setReceiverVideoConstraint(maxFrameHeight);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates a video SIP GW session and returns it if service is enabled. Before\\r\\n * creating a session one need to check whether video SIP GW service is\\r\\n * available in the system {@link JitsiConference.isVideoSIPGWAvailable}. Even\\r\\n * if there are available nodes to serve this request, after creating the\\r\\n * session those nodes can be taken and the request about using the\\r\\n * created session can fail.\\r\\n *\\r\\n * @param {string} sipAddress - The sip address to be used.\\r\\n * @param {string} displayName - The display name to be used for this session.\\r\\n * @returns {JitsiVideoSIPGWSession|Error} Returns null if conference is not\\r\\n * initialised and there is no room.\\r\\n */\\r\\nJitsiConference.prototype.createVideoSIPGWSession\\r\\n    = function(sipAddress, displayName) {\\r\\n        if (!this.room) {\\r\\n            return new Error(VideoSIPGWConstants.ERROR_NO_CONNECTION);\\r\\n        }\\r\\n\\r\\n        return this.videoSIPGWHandler\\r\\n            .createVideoSIPGWSession(sipAddress, displayName);\\r\\n    };\\r\\n\",\"/**\\n * Lodash (Custom Build) <https://lodash.com/>\\n * Build: `lodash modularize exports=\\\"npm\\\" -o ./`\\n * Copyright JS Foundation and other contributors <https://js.foundation/>\\n * Released under MIT license <https://lodash.com/license>\\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\\n */\\n\\n/** Used as the size to enable large array optimizations. */\\nvar LARGE_ARRAY_SIZE = 200;\\n\\n/** Used to stand-in for `undefined` hash values. */\\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\\n\\n/** Used to compose bitmasks for value comparisons. */\\nvar COMPARE_PARTIAL_FLAG = 1,\\n    COMPARE_UNORDERED_FLAG = 2;\\n\\n/** Used as references for various `Number` constants. */\\nvar MAX_SAFE_INTEGER = 9007199254740991;\\n\\n/** `Object#toString` result references. */\\nvar argsTag = '[object Arguments]',\\n    arrayTag = '[object Array]',\\n    asyncTag = '[object AsyncFunction]',\\n    boolTag = '[object Boolean]',\\n    dateTag = '[object Date]',\\n    errorTag = '[object Error]',\\n    funcTag = '[object Function]',\\n    genTag = '[object GeneratorFunction]',\\n    mapTag = '[object Map]',\\n    numberTag = '[object Number]',\\n    nullTag = '[object Null]',\\n    objectTag = '[object Object]',\\n    promiseTag = '[object Promise]',\\n    proxyTag = '[object Proxy]',\\n    regexpTag = '[object RegExp]',\\n    setTag = '[object Set]',\\n    stringTag = '[object String]',\\n    symbolTag = '[object Symbol]',\\n    undefinedTag = '[object Undefined]',\\n    weakMapTag = '[object WeakMap]';\\n\\nvar arrayBufferTag = '[object ArrayBuffer]',\\n    dataViewTag = '[object DataView]',\\n    float32Tag = '[object Float32Array]',\\n    float64Tag = '[object Float64Array]',\\n    int8Tag = '[object Int8Array]',\\n    int16Tag = '[object Int16Array]',\\n    int32Tag = '[object Int32Array]',\\n    uint8Tag = '[object Uint8Array]',\\n    uint8ClampedTag = '[object Uint8ClampedArray]',\\n    uint16Tag = '[object Uint16Array]',\\n    uint32Tag = '[object Uint32Array]';\\n\\n/**\\n * Used to match `RegExp`\\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\\n */\\nvar reRegExpChar = /[\\\\\\\\^$.*+?()[\\\\]{}|]/g;\\n\\n/** Used to detect host constructors (Safari). */\\nvar reIsHostCtor = /^\\\\[object .+?Constructor\\\\]$/;\\n\\n/** Used to detect unsigned integer values. */\\nvar reIsUint = /^(?:0|[1-9]\\\\d*)$/;\\n\\n/** Used to identify `toStringTag` values of typed arrays. */\\nvar typedArrayTags = {};\\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\\ntypedArrayTags[uint32Tag] = true;\\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\\ntypedArrayTags[weakMapTag] = false;\\n\\n/** Detect free variable `global` from Node.js. */\\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\\n\\n/** Detect free variable `self`. */\\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\\n\\n/** Used as a reference to the global object. */\\nvar root = freeGlobal || freeSelf || Function('return this')();\\n\\n/** Detect free variable `exports`. */\\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\\n\\n/** Detect free variable `module`. */\\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\\n\\n/** Detect the popular CommonJS extension `module.exports`. */\\nvar moduleExports = freeModule && freeModule.exports === freeExports;\\n\\n/** Detect free variable `process` from Node.js. */\\nvar freeProcess = moduleExports && freeGlobal.process;\\n\\n/** Used to access faster Node.js helpers. */\\nvar nodeUtil = (function() {\\n  try {\\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\\n  } catch (e) {}\\n}());\\n\\n/* Node.js helper references. */\\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\\n\\n/**\\n * A specialized version of `_.filter` for arrays without support for\\n * iteratee shorthands.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} predicate The function invoked per iteration.\\n * @returns {Array} Returns the new filtered array.\\n */\\nfunction arrayFilter(array, predicate) {\\n  var index = -1,\\n      length = array == null ? 0 : array.length,\\n      resIndex = 0,\\n      result = [];\\n\\n  while (++index < length) {\\n    var value = array[index];\\n    if (predicate(value, index, array)) {\\n      result[resIndex++] = value;\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * Appends the elements of `values` to `array`.\\n *\\n * @private\\n * @param {Array} array The array to modify.\\n * @param {Array} values The values to append.\\n * @returns {Array} Returns `array`.\\n */\\nfunction arrayPush(array, values) {\\n  var index = -1,\\n      length = values.length,\\n      offset = array.length;\\n\\n  while (++index < length) {\\n    array[offset + index] = values[index];\\n  }\\n  return array;\\n}\\n\\n/**\\n * A specialized version of `_.some` for arrays without support for iteratee\\n * shorthands.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} predicate The function invoked per iteration.\\n * @returns {boolean} Returns `true` if any element passes the predicate check,\\n *  else `false`.\\n */\\nfunction arraySome(array, predicate) {\\n  var index = -1,\\n      length = array == null ? 0 : array.length;\\n\\n  while (++index < length) {\\n    if (predicate(array[index], index, array)) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\n\\n/**\\n * The base implementation of `_.times` without support for iteratee shorthands\\n * or max array length checks.\\n *\\n * @private\\n * @param {number} n The number of times to invoke `iteratee`.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Array} Returns the array of results.\\n */\\nfunction baseTimes(n, iteratee) {\\n  var index = -1,\\n      result = Array(n);\\n\\n  while (++index < n) {\\n    result[index] = iteratee(index);\\n  }\\n  return result;\\n}\\n\\n/**\\n * The base implementation of `_.unary` without support for storing metadata.\\n *\\n * @private\\n * @param {Function} func The function to cap arguments for.\\n * @returns {Function} Returns the new capped function.\\n */\\nfunction baseUnary(func) {\\n  return function(value) {\\n    return func(value);\\n  };\\n}\\n\\n/**\\n * Checks if a `cache` value for `key` exists.\\n *\\n * @private\\n * @param {Object} cache The cache to query.\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction cacheHas(cache, key) {\\n  return cache.has(key);\\n}\\n\\n/**\\n * Gets the value at `key` of `object`.\\n *\\n * @private\\n * @param {Object} [object] The object to query.\\n * @param {string} key The key of the property to get.\\n * @returns {*} Returns the property value.\\n */\\nfunction getValue(object, key) {\\n  return object == null ? undefined : object[key];\\n}\\n\\n/**\\n * Converts `map` to its key-value pairs.\\n *\\n * @private\\n * @param {Object} map The map to convert.\\n * @returns {Array} Returns the key-value pairs.\\n */\\nfunction mapToArray(map) {\\n  var index = -1,\\n      result = Array(map.size);\\n\\n  map.forEach(function(value, key) {\\n    result[++index] = [key, value];\\n  });\\n  return result;\\n}\\n\\n/**\\n * Creates a unary function that invokes `func` with its argument transformed.\\n *\\n * @private\\n * @param {Function} func The function to wrap.\\n * @param {Function} transform The argument transform.\\n * @returns {Function} Returns the new function.\\n */\\nfunction overArg(func, transform) {\\n  return function(arg) {\\n    return func(transform(arg));\\n  };\\n}\\n\\n/**\\n * Converts `set` to an array of its values.\\n *\\n * @private\\n * @param {Object} set The set to convert.\\n * @returns {Array} Returns the values.\\n */\\nfunction setToArray(set) {\\n  var index = -1,\\n      result = Array(set.size);\\n\\n  set.forEach(function(value) {\\n    result[++index] = value;\\n  });\\n  return result;\\n}\\n\\n/** Used for built-in method references. */\\nvar arrayProto = Array.prototype,\\n    funcProto = Function.prototype,\\n    objectProto = Object.prototype;\\n\\n/** Used to detect overreaching core-js shims. */\\nvar coreJsData = root['__core-js_shared__'];\\n\\n/** Used to resolve the decompiled source of functions. */\\nvar funcToString = funcProto.toString;\\n\\n/** Used to check objects for own properties. */\\nvar hasOwnProperty = objectProto.hasOwnProperty;\\n\\n/** Used to detect methods masquerading as native. */\\nvar maskSrcKey = (function() {\\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\\n  return uid ? ('Symbol(src)_1.' + uid) : '';\\n}());\\n\\n/**\\n * Used to resolve the\\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\\n * of values.\\n */\\nvar nativeObjectToString = objectProto.toString;\\n\\n/** Used to detect if a method is native. */\\nvar reIsNative = RegExp('^' +\\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\\\\\$&')\\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\\\\\\\()| for .+?(?=\\\\\\\\\\\\])/g, '$1.*?') + '$'\\n);\\n\\n/** Built-in value references. */\\nvar Buffer = moduleExports ? root.Buffer : undefined,\\n    Symbol = root.Symbol,\\n    Uint8Array = root.Uint8Array,\\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\\n    splice = arrayProto.splice,\\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\\n\\n/* Built-in method references for those with the same name as other `lodash` methods. */\\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\\n    nativeKeys = overArg(Object.keys, Object);\\n\\n/* Built-in method references that are verified to be native. */\\nvar DataView = getNative(root, 'DataView'),\\n    Map = getNative(root, 'Map'),\\n    Promise = getNative(root, 'Promise'),\\n    Set = getNative(root, 'Set'),\\n    WeakMap = getNative(root, 'WeakMap'),\\n    nativeCreate = getNative(Object, 'create');\\n\\n/** Used to detect maps, sets, and weakmaps. */\\nvar dataViewCtorString = toSource(DataView),\\n    mapCtorString = toSource(Map),\\n    promiseCtorString = toSource(Promise),\\n    setCtorString = toSource(Set),\\n    weakMapCtorString = toSource(WeakMap);\\n\\n/** Used to convert symbols to primitives and strings. */\\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\\n\\n/**\\n * Creates a hash object.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction Hash(entries) {\\n  var index = -1,\\n      length = entries == null ? 0 : entries.length;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the hash.\\n *\\n * @private\\n * @name clear\\n * @memberOf Hash\\n */\\nfunction hashClear() {\\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\\n  this.size = 0;\\n}\\n\\n/**\\n * Removes `key` and its value from the hash.\\n *\\n * @private\\n * @name delete\\n * @memberOf Hash\\n * @param {Object} hash The hash to modify.\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction hashDelete(key) {\\n  var result = this.has(key) && delete this.__data__[key];\\n  this.size -= result ? 1 : 0;\\n  return result;\\n}\\n\\n/**\\n * Gets the hash value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf Hash\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction hashGet(key) {\\n  var data = this.__data__;\\n  if (nativeCreate) {\\n    var result = data[key];\\n    return result === HASH_UNDEFINED ? undefined : result;\\n  }\\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\\n}\\n\\n/**\\n * Checks if a hash value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf Hash\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction hashHas(key) {\\n  var data = this.__data__;\\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\\n}\\n\\n/**\\n * Sets the hash `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf Hash\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the hash instance.\\n */\\nfunction hashSet(key, value) {\\n  var data = this.__data__;\\n  this.size += this.has(key) ? 0 : 1;\\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\\n  return this;\\n}\\n\\n// Add methods to `Hash`.\\nHash.prototype.clear = hashClear;\\nHash.prototype['delete'] = hashDelete;\\nHash.prototype.get = hashGet;\\nHash.prototype.has = hashHas;\\nHash.prototype.set = hashSet;\\n\\n/**\\n * Creates an list cache object.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction ListCache(entries) {\\n  var index = -1,\\n      length = entries == null ? 0 : entries.length;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the list cache.\\n *\\n * @private\\n * @name clear\\n * @memberOf ListCache\\n */\\nfunction listCacheClear() {\\n  this.__data__ = [];\\n  this.size = 0;\\n}\\n\\n/**\\n * Removes `key` and its value from the list cache.\\n *\\n * @private\\n * @name delete\\n * @memberOf ListCache\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction listCacheDelete(key) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  if (index < 0) {\\n    return false;\\n  }\\n  var lastIndex = data.length - 1;\\n  if (index == lastIndex) {\\n    data.pop();\\n  } else {\\n    splice.call(data, index, 1);\\n  }\\n  --this.size;\\n  return true;\\n}\\n\\n/**\\n * Gets the list cache value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf ListCache\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction listCacheGet(key) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  return index < 0 ? undefined : data[index][1];\\n}\\n\\n/**\\n * Checks if a list cache value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf ListCache\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction listCacheHas(key) {\\n  return assocIndexOf(this.__data__, key) > -1;\\n}\\n\\n/**\\n * Sets the list cache `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf ListCache\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the list cache instance.\\n */\\nfunction listCacheSet(key, value) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  if (index < 0) {\\n    ++this.size;\\n    data.push([key, value]);\\n  } else {\\n    data[index][1] = value;\\n  }\\n  return this;\\n}\\n\\n// Add methods to `ListCache`.\\nListCache.prototype.clear = listCacheClear;\\nListCache.prototype['delete'] = listCacheDelete;\\nListCache.prototype.get = listCacheGet;\\nListCache.prototype.has = listCacheHas;\\nListCache.prototype.set = listCacheSet;\\n\\n/**\\n * Creates a map cache object to store key-value pairs.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction MapCache(entries) {\\n  var index = -1,\\n      length = entries == null ? 0 : entries.length;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the map.\\n *\\n * @private\\n * @name clear\\n * @memberOf MapCache\\n */\\nfunction mapCacheClear() {\\n  this.size = 0;\\n  this.__data__ = {\\n    'hash': new Hash,\\n    'map': new (Map || ListCache),\\n    'string': new Hash\\n  };\\n}\\n\\n/**\\n * Removes `key` and its value from the map.\\n *\\n * @private\\n * @name delete\\n * @memberOf MapCache\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction mapCacheDelete(key) {\\n  var result = getMapData(this, key)['delete'](key);\\n  this.size -= result ? 1 : 0;\\n  return result;\\n}\\n\\n/**\\n * Gets the map value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf MapCache\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction mapCacheGet(key) {\\n  return getMapData(this, key).get(key);\\n}\\n\\n/**\\n * Checks if a map value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf MapCache\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction mapCacheHas(key) {\\n  return getMapData(this, key).has(key);\\n}\\n\\n/**\\n * Sets the map `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf MapCache\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the map cache instance.\\n */\\nfunction mapCacheSet(key, value) {\\n  var data = getMapData(this, key),\\n      size = data.size;\\n\\n  data.set(key, value);\\n  this.size += data.size == size ? 0 : 1;\\n  return this;\\n}\\n\\n// Add methods to `MapCache`.\\nMapCache.prototype.clear = mapCacheClear;\\nMapCache.prototype['delete'] = mapCacheDelete;\\nMapCache.prototype.get = mapCacheGet;\\nMapCache.prototype.has = mapCacheHas;\\nMapCache.prototype.set = mapCacheSet;\\n\\n/**\\n *\\n * Creates an array cache object to store unique values.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [values] The values to cache.\\n */\\nfunction SetCache(values) {\\n  var index = -1,\\n      length = values == null ? 0 : values.length;\\n\\n  this.__data__ = new MapCache;\\n  while (++index < length) {\\n    this.add(values[index]);\\n  }\\n}\\n\\n/**\\n * Adds `value` to the array cache.\\n *\\n * @private\\n * @name add\\n * @memberOf SetCache\\n * @alias push\\n * @param {*} value The value to cache.\\n * @returns {Object} Returns the cache instance.\\n */\\nfunction setCacheAdd(value) {\\n  this.__data__.set(value, HASH_UNDEFINED);\\n  return this;\\n}\\n\\n/**\\n * Checks if `value` is in the array cache.\\n *\\n * @private\\n * @name has\\n * @memberOf SetCache\\n * @param {*} value The value to search for.\\n * @returns {number} Returns `true` if `value` is found, else `false`.\\n */\\nfunction setCacheHas(value) {\\n  return this.__data__.has(value);\\n}\\n\\n// Add methods to `SetCache`.\\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\\nSetCache.prototype.has = setCacheHas;\\n\\n/**\\n * Creates a stack cache object to store key-value pairs.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction Stack(entries) {\\n  var data = this.__data__ = new ListCache(entries);\\n  this.size = data.size;\\n}\\n\\n/**\\n * Removes all key-value entries from the stack.\\n *\\n * @private\\n * @name clear\\n * @memberOf Stack\\n */\\nfunction stackClear() {\\n  this.__data__ = new ListCache;\\n  this.size = 0;\\n}\\n\\n/**\\n * Removes `key` and its value from the stack.\\n *\\n * @private\\n * @name delete\\n * @memberOf Stack\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction stackDelete(key) {\\n  var data = this.__data__,\\n      result = data['delete'](key);\\n\\n  this.size = data.size;\\n  return result;\\n}\\n\\n/**\\n * Gets the stack value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf Stack\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction stackGet(key) {\\n  return this.__data__.get(key);\\n}\\n\\n/**\\n * Checks if a stack value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf Stack\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction stackHas(key) {\\n  return this.__data__.has(key);\\n}\\n\\n/**\\n * Sets the stack `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf Stack\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the stack cache instance.\\n */\\nfunction stackSet(key, value) {\\n  var data = this.__data__;\\n  if (data instanceof ListCache) {\\n    var pairs = data.__data__;\\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\\n      pairs.push([key, value]);\\n      this.size = ++data.size;\\n      return this;\\n    }\\n    data = this.__data__ = new MapCache(pairs);\\n  }\\n  data.set(key, value);\\n  this.size = data.size;\\n  return this;\\n}\\n\\n// Add methods to `Stack`.\\nStack.prototype.clear = stackClear;\\nStack.prototype['delete'] = stackDelete;\\nStack.prototype.get = stackGet;\\nStack.prototype.has = stackHas;\\nStack.prototype.set = stackSet;\\n\\n/**\\n * Creates an array of the enumerable property names of the array-like `value`.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @param {boolean} inherited Specify returning inherited property names.\\n * @returns {Array} Returns the array of property names.\\n */\\nfunction arrayLikeKeys(value, inherited) {\\n  var isArr = isArray(value),\\n      isArg = !isArr && isArguments(value),\\n      isBuff = !isArr && !isArg && isBuffer(value),\\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\\n      skipIndexes = isArr || isArg || isBuff || isType,\\n      result = skipIndexes ? baseTimes(value.length, String) : [],\\n      length = result.length;\\n\\n  for (var key in value) {\\n    if ((inherited || hasOwnProperty.call(value, key)) &&\\n        !(skipIndexes && (\\n           // Safari 9 has enumerable `arguments.length` in strict mode.\\n           key == 'length' ||\\n           // Node.js 0.10 has enumerable non-index properties on buffers.\\n           (isBuff && (key == 'offset' || key == 'parent')) ||\\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\\n           // Skip index properties.\\n           isIndex(key, length)\\n        ))) {\\n      result.push(key);\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * Gets the index at which the `key` is found in `array` of key-value pairs.\\n *\\n * @private\\n * @param {Array} array The array to inspect.\\n * @param {*} key The key to search for.\\n * @returns {number} Returns the index of the matched value, else `-1`.\\n */\\nfunction assocIndexOf(array, key) {\\n  var length = array.length;\\n  while (length--) {\\n    if (eq(array[length][0], key)) {\\n      return length;\\n    }\\n  }\\n  return -1;\\n}\\n\\n/**\\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\\n * symbols of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {Function} keysFunc The function to get the keys of `object`.\\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\\n * @returns {Array} Returns the array of property names and symbols.\\n */\\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\\n  var result = keysFunc(object);\\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\\n}\\n\\n/**\\n * The base implementation of `getTag` without fallbacks for buggy environments.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the `toStringTag`.\\n */\\nfunction baseGetTag(value) {\\n  if (value == null) {\\n    return value === undefined ? undefinedTag : nullTag;\\n  }\\n  return (symToStringTag && symToStringTag in Object(value))\\n    ? getRawTag(value)\\n    : objectToString(value);\\n}\\n\\n/**\\n * The base implementation of `_.isArguments`.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\n */\\nfunction baseIsArguments(value) {\\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\\n}\\n\\n/**\\n * The base implementation of `_.isEqual` which supports partial comparisons\\n * and tracks traversed objects.\\n *\\n * @private\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @param {boolean} bitmask The bitmask flags.\\n *  1 - Unordered comparison\\n *  2 - Partial comparison\\n * @param {Function} [customizer] The function to customize comparisons.\\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n */\\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\\n  if (value === other) {\\n    return true;\\n  }\\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\\n    return value !== value && other !== other;\\n  }\\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\\n}\\n\\n/**\\n * A specialized version of `baseIsEqual` for arrays and objects which performs\\n * deep comparisons and tracks traversed objects enabling objects with circular\\n * references to be compared.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\\n  var objIsArr = isArray(object),\\n      othIsArr = isArray(other),\\n      objTag = objIsArr ? arrayTag : getTag(object),\\n      othTag = othIsArr ? arrayTag : getTag(other);\\n\\n  objTag = objTag == argsTag ? objectTag : objTag;\\n  othTag = othTag == argsTag ? objectTag : othTag;\\n\\n  var objIsObj = objTag == objectTag,\\n      othIsObj = othTag == objectTag,\\n      isSameTag = objTag == othTag;\\n\\n  if (isSameTag && isBuffer(object)) {\\n    if (!isBuffer(other)) {\\n      return false;\\n    }\\n    objIsArr = true;\\n    objIsObj = false;\\n  }\\n  if (isSameTag && !objIsObj) {\\n    stack || (stack = new Stack);\\n    return (objIsArr || isTypedArray(object))\\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\\n  }\\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\\n\\n    if (objIsWrapped || othIsWrapped) {\\n      var objUnwrapped = objIsWrapped ? object.value() : object,\\n          othUnwrapped = othIsWrapped ? other.value() : other;\\n\\n      stack || (stack = new Stack);\\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\\n    }\\n  }\\n  if (!isSameTag) {\\n    return false;\\n  }\\n  stack || (stack = new Stack);\\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\\n}\\n\\n/**\\n * The base implementation of `_.isNative` without bad shim checks.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a native function,\\n *  else `false`.\\n */\\nfunction baseIsNative(value) {\\n  if (!isObject(value) || isMasked(value)) {\\n    return false;\\n  }\\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\\n  return pattern.test(toSource(value));\\n}\\n\\n/**\\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\n */\\nfunction baseIsTypedArray(value) {\\n  return isObjectLike(value) &&\\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\\n}\\n\\n/**\\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names.\\n */\\nfunction baseKeys(object) {\\n  if (!isPrototype(object)) {\\n    return nativeKeys(object);\\n  }\\n  var result = [];\\n  for (var key in Object(object)) {\\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\\n      result.push(key);\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for arrays with support for\\n * partial deep comparisons.\\n *\\n * @private\\n * @param {Array} array The array to compare.\\n * @param {Array} other The other array to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} stack Tracks traversed `array` and `other` objects.\\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\\n */\\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\\n      arrLength = array.length,\\n      othLength = other.length;\\n\\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\\n    return false;\\n  }\\n  // Assume cyclic values are equal.\\n  var stacked = stack.get(array);\\n  if (stacked && stack.get(other)) {\\n    return stacked == other;\\n  }\\n  var index = -1,\\n      result = true,\\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\\n\\n  stack.set(array, other);\\n  stack.set(other, array);\\n\\n  // Ignore non-index properties.\\n  while (++index < arrLength) {\\n    var arrValue = array[index],\\n        othValue = other[index];\\n\\n    if (customizer) {\\n      var compared = isPartial\\n        ? customizer(othValue, arrValue, index, other, array, stack)\\n        : customizer(arrValue, othValue, index, array, other, stack);\\n    }\\n    if (compared !== undefined) {\\n      if (compared) {\\n        continue;\\n      }\\n      result = false;\\n      break;\\n    }\\n    // Recursively compare arrays (susceptible to call stack limits).\\n    if (seen) {\\n      if (!arraySome(other, function(othValue, othIndex) {\\n            if (!cacheHas(seen, othIndex) &&\\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\\n              return seen.push(othIndex);\\n            }\\n          })) {\\n        result = false;\\n        break;\\n      }\\n    } else if (!(\\n          arrValue === othValue ||\\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\\n        )) {\\n      result = false;\\n      break;\\n    }\\n  }\\n  stack['delete'](array);\\n  stack['delete'](other);\\n  return result;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for comparing objects of\\n * the same `toStringTag`.\\n *\\n * **Note:** This function only supports comparing values with tags of\\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {string} tag The `toStringTag` of the objects to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} stack Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\\n  switch (tag) {\\n    case dataViewTag:\\n      if ((object.byteLength != other.byteLength) ||\\n          (object.byteOffset != other.byteOffset)) {\\n        return false;\\n      }\\n      object = object.buffer;\\n      other = other.buffer;\\n\\n    case arrayBufferTag:\\n      if ((object.byteLength != other.byteLength) ||\\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\\n        return false;\\n      }\\n      return true;\\n\\n    case boolTag:\\n    case dateTag:\\n    case numberTag:\\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\\n      // Invalid dates are coerced to `NaN`.\\n      return eq(+object, +other);\\n\\n    case errorTag:\\n      return object.name == other.name && object.message == other.message;\\n\\n    case regexpTag:\\n    case stringTag:\\n      // Coerce regexes to strings and treat strings, primitives and objects,\\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\\n      // for more details.\\n      return object == (other + '');\\n\\n    case mapTag:\\n      var convert = mapToArray;\\n\\n    case setTag:\\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\\n      convert || (convert = setToArray);\\n\\n      if (object.size != other.size && !isPartial) {\\n        return false;\\n      }\\n      // Assume cyclic values are equal.\\n      var stacked = stack.get(object);\\n      if (stacked) {\\n        return stacked == other;\\n      }\\n      bitmask |= COMPARE_UNORDERED_FLAG;\\n\\n      // Recursively compare objects (susceptible to call stack limits).\\n      stack.set(object, other);\\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\\n      stack['delete'](object);\\n      return result;\\n\\n    case symbolTag:\\n      if (symbolValueOf) {\\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\\n      }\\n  }\\n  return false;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for objects with support for\\n * partial deep comparisons.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} stack Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\\n      objProps = getAllKeys(object),\\n      objLength = objProps.length,\\n      othProps = getAllKeys(other),\\n      othLength = othProps.length;\\n\\n  if (objLength != othLength && !isPartial) {\\n    return false;\\n  }\\n  var index = objLength;\\n  while (index--) {\\n    var key = objProps[index];\\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\\n      return false;\\n    }\\n  }\\n  // Assume cyclic values are equal.\\n  var stacked = stack.get(object);\\n  if (stacked && stack.get(other)) {\\n    return stacked == other;\\n  }\\n  var result = true;\\n  stack.set(object, other);\\n  stack.set(other, object);\\n\\n  var skipCtor = isPartial;\\n  while (++index < objLength) {\\n    key = objProps[index];\\n    var objValue = object[key],\\n        othValue = other[key];\\n\\n    if (customizer) {\\n      var compared = isPartial\\n        ? customizer(othValue, objValue, key, other, object, stack)\\n        : customizer(objValue, othValue, key, object, other, stack);\\n    }\\n    // Recursively compare objects (susceptible to call stack limits).\\n    if (!(compared === undefined\\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\\n          : compared\\n        )) {\\n      result = false;\\n      break;\\n    }\\n    skipCtor || (skipCtor = key == 'constructor');\\n  }\\n  if (result && !skipCtor) {\\n    var objCtor = object.constructor,\\n        othCtor = other.constructor;\\n\\n    // Non `Object` object instances with different constructors are not equal.\\n    if (objCtor != othCtor &&\\n        ('constructor' in object && 'constructor' in other) &&\\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\\n      result = false;\\n    }\\n  }\\n  stack['delete'](object);\\n  stack['delete'](other);\\n  return result;\\n}\\n\\n/**\\n * Creates an array of own enumerable property names and symbols of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names and symbols.\\n */\\nfunction getAllKeys(object) {\\n  return baseGetAllKeys(object, keys, getSymbols);\\n}\\n\\n/**\\n * Gets the data for `map`.\\n *\\n * @private\\n * @param {Object} map The map to query.\\n * @param {string} key The reference key.\\n * @returns {*} Returns the map data.\\n */\\nfunction getMapData(map, key) {\\n  var data = map.__data__;\\n  return isKeyable(key)\\n    ? data[typeof key == 'string' ? 'string' : 'hash']\\n    : data.map;\\n}\\n\\n/**\\n * Gets the native function at `key` of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {string} key The key of the method to get.\\n * @returns {*} Returns the function if it's native, else `undefined`.\\n */\\nfunction getNative(object, key) {\\n  var value = getValue(object, key);\\n  return baseIsNative(value) ? value : undefined;\\n}\\n\\n/**\\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the raw `toStringTag`.\\n */\\nfunction getRawTag(value) {\\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\\n      tag = value[symToStringTag];\\n\\n  try {\\n    value[symToStringTag] = undefined;\\n    var unmasked = true;\\n  } catch (e) {}\\n\\n  var result = nativeObjectToString.call(value);\\n  if (unmasked) {\\n    if (isOwn) {\\n      value[symToStringTag] = tag;\\n    } else {\\n      delete value[symToStringTag];\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * Creates an array of the own enumerable symbols of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of symbols.\\n */\\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\\n  if (object == null) {\\n    return [];\\n  }\\n  object = Object(object);\\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\\n    return propertyIsEnumerable.call(object, symbol);\\n  });\\n};\\n\\n/**\\n * Gets the `toStringTag` of `value`.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the `toStringTag`.\\n */\\nvar getTag = baseGetTag;\\n\\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\\n    (Map && getTag(new Map) != mapTag) ||\\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\\n    (Set && getTag(new Set) != setTag) ||\\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\\n  getTag = function(value) {\\n    var result = baseGetTag(value),\\n        Ctor = result == objectTag ? value.constructor : undefined,\\n        ctorString = Ctor ? toSource(Ctor) : '';\\n\\n    if (ctorString) {\\n      switch (ctorString) {\\n        case dataViewCtorString: return dataViewTag;\\n        case mapCtorString: return mapTag;\\n        case promiseCtorString: return promiseTag;\\n        case setCtorString: return setTag;\\n        case weakMapCtorString: return weakMapTag;\\n      }\\n    }\\n    return result;\\n  };\\n}\\n\\n/**\\n * Checks if `value` is a valid array-like index.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\\n */\\nfunction isIndex(value, length) {\\n  length = length == null ? MAX_SAFE_INTEGER : length;\\n  return !!length &&\\n    (typeof value == 'number' || reIsUint.test(value)) &&\\n    (value > -1 && value % 1 == 0 && value < length);\\n}\\n\\n/**\\n * Checks if `value` is suitable for use as unique object key.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\\n */\\nfunction isKeyable(value) {\\n  var type = typeof value;\\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\\n    ? (value !== '__proto__')\\n    : (value === null);\\n}\\n\\n/**\\n * Checks if `func` has its source masked.\\n *\\n * @private\\n * @param {Function} func The function to check.\\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\\n */\\nfunction isMasked(func) {\\n  return !!maskSrcKey && (maskSrcKey in func);\\n}\\n\\n/**\\n * Checks if `value` is likely a prototype object.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\\n */\\nfunction isPrototype(value) {\\n  var Ctor = value && value.constructor,\\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\\n\\n  return value === proto;\\n}\\n\\n/**\\n * Converts `value` to a string using `Object.prototype.toString`.\\n *\\n * @private\\n * @param {*} value The value to convert.\\n * @returns {string} Returns the converted string.\\n */\\nfunction objectToString(value) {\\n  return nativeObjectToString.call(value);\\n}\\n\\n/**\\n * Converts `func` to its source code.\\n *\\n * @private\\n * @param {Function} func The function to convert.\\n * @returns {string} Returns the source code.\\n */\\nfunction toSource(func) {\\n  if (func != null) {\\n    try {\\n      return funcToString.call(func);\\n    } catch (e) {}\\n    try {\\n      return (func + '');\\n    } catch (e) {}\\n  }\\n  return '';\\n}\\n\\n/**\\n * Performs a\\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n * comparison between two values to determine if they are equivalent.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n * @example\\n *\\n * var object = { 'a': 1 };\\n * var other = { 'a': 1 };\\n *\\n * _.eq(object, object);\\n * // => true\\n *\\n * _.eq(object, other);\\n * // => false\\n *\\n * _.eq('a', 'a');\\n * // => true\\n *\\n * _.eq('a', Object('a'));\\n * // => false\\n *\\n * _.eq(NaN, NaN);\\n * // => true\\n */\\nfunction eq(value, other) {\\n  return value === other || (value !== value && other !== other);\\n}\\n\\n/**\\n * Checks if `value` is likely an `arguments` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\n *  else `false`.\\n * @example\\n *\\n * _.isArguments(function() { return arguments; }());\\n * // => true\\n *\\n * _.isArguments([1, 2, 3]);\\n * // => false\\n */\\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\\n    !propertyIsEnumerable.call(value, 'callee');\\n};\\n\\n/**\\n * Checks if `value` is classified as an `Array` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\\n * @example\\n *\\n * _.isArray([1, 2, 3]);\\n * // => true\\n *\\n * _.isArray(document.body.children);\\n * // => false\\n *\\n * _.isArray('abc');\\n * // => false\\n *\\n * _.isArray(_.noop);\\n * // => false\\n */\\nvar isArray = Array.isArray;\\n\\n/**\\n * Checks if `value` is array-like. A value is considered array-like if it's\\n * not a function and has a `value.length` that's an integer greater than or\\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\\n * @example\\n *\\n * _.isArrayLike([1, 2, 3]);\\n * // => true\\n *\\n * _.isArrayLike(document.body.children);\\n * // => true\\n *\\n * _.isArrayLike('abc');\\n * // => true\\n *\\n * _.isArrayLike(_.noop);\\n * // => false\\n */\\nfunction isArrayLike(value) {\\n  return value != null && isLength(value.length) && !isFunction(value);\\n}\\n\\n/**\\n * Checks if `value` is a buffer.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.3.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\\n * @example\\n *\\n * _.isBuffer(new Buffer(2));\\n * // => true\\n *\\n * _.isBuffer(new Uint8Array(2));\\n * // => false\\n */\\nvar isBuffer = nativeIsBuffer || stubFalse;\\n\\n/**\\n * Performs a deep comparison between two values to determine if they are\\n * equivalent.\\n *\\n * **Note:** This method supports comparing arrays, array buffers, booleans,\\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\\n * by their own, not inherited, enumerable properties. Functions and DOM\\n * nodes are compared by strict equality, i.e. `===`.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n * @example\\n *\\n * var object = { 'a': 1 };\\n * var other = { 'a': 1 };\\n *\\n * _.isEqual(object, other);\\n * // => true\\n *\\n * object === other;\\n * // => false\\n */\\nfunction isEqual(value, other) {\\n  return baseIsEqual(value, other);\\n}\\n\\n/**\\n * Checks if `value` is classified as a `Function` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\\n * @example\\n *\\n * _.isFunction(_);\\n * // => true\\n *\\n * _.isFunction(/abc/);\\n * // => false\\n */\\nfunction isFunction(value) {\\n  if (!isObject(value)) {\\n    return false;\\n  }\\n  // The use of `Object#toString` avoids issues with the `typeof` operator\\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\\n  var tag = baseGetTag(value);\\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\\n}\\n\\n/**\\n * Checks if `value` is a valid array-like length.\\n *\\n * **Note:** This method is loosely based on\\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\\n * @example\\n *\\n * _.isLength(3);\\n * // => true\\n *\\n * _.isLength(Number.MIN_VALUE);\\n * // => false\\n *\\n * _.isLength(Infinity);\\n * // => false\\n *\\n * _.isLength('3');\\n * // => false\\n */\\nfunction isLength(value) {\\n  return typeof value == 'number' &&\\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\\n}\\n\\n/**\\n * Checks if `value` is the\\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\\n * @example\\n *\\n * _.isObject({});\\n * // => true\\n *\\n * _.isObject([1, 2, 3]);\\n * // => true\\n *\\n * _.isObject(_.noop);\\n * // => true\\n *\\n * _.isObject(null);\\n * // => false\\n */\\nfunction isObject(value) {\\n  var type = typeof value;\\n  return value != null && (type == 'object' || type == 'function');\\n}\\n\\n/**\\n * Checks if `value` is object-like. A value is object-like if it's not `null`\\n * and has a `typeof` result of \\\"object\\\".\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\\n * @example\\n *\\n * _.isObjectLike({});\\n * // => true\\n *\\n * _.isObjectLike([1, 2, 3]);\\n * // => true\\n *\\n * _.isObjectLike(_.noop);\\n * // => false\\n *\\n * _.isObjectLike(null);\\n * // => false\\n */\\nfunction isObjectLike(value) {\\n  return value != null && typeof value == 'object';\\n}\\n\\n/**\\n * Checks if `value` is classified as a typed array.\\n *\\n * @static\\n * @memberOf _\\n * @since 3.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\n * @example\\n *\\n * _.isTypedArray(new Uint8Array);\\n * // => true\\n *\\n * _.isTypedArray([]);\\n * // => false\\n */\\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\\n\\n/**\\n * Creates an array of the own enumerable property names of `object`.\\n *\\n * **Note:** Non-object values are coerced to objects. See the\\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\\n * for more details.\\n *\\n * @static\\n * @since 0.1.0\\n * @memberOf _\\n * @category Object\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names.\\n * @example\\n *\\n * function Foo() {\\n *   this.a = 1;\\n *   this.b = 2;\\n * }\\n *\\n * Foo.prototype.c = 3;\\n *\\n * _.keys(new Foo);\\n * // => ['a', 'b'] (iteration order is not guaranteed)\\n *\\n * _.keys('hi');\\n * // => ['0', '1']\\n */\\nfunction keys(object) {\\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\\n}\\n\\n/**\\n * This method returns a new empty array.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.13.0\\n * @category Util\\n * @returns {Array} Returns the new empty array.\\n * @example\\n *\\n * var arrays = _.times(2, _.stubArray);\\n *\\n * console.log(arrays);\\n * // => [[], []]\\n *\\n * console.log(arrays[0] === arrays[1]);\\n * // => false\\n */\\nfunction stubArray() {\\n  return [];\\n}\\n\\n/**\\n * This method returns `false`.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.13.0\\n * @category Util\\n * @returns {boolean} Returns `false`.\\n * @example\\n *\\n * _.times(2, _.stubFalse);\\n * // => [false, false]\\n */\\nfunction stubFalse() {\\n  return false;\\n}\\n\\nmodule.exports = isEqual;\\n\",\"/* global __filename */\\r\\nimport { Strophe } from 'strophe.js';\\r\\n\\r\\nimport {\\r\\n    ACTION_JINGLE_SA_TIMEOUT,\\r\\n    createBridgeDownEvent,\\r\\n    createConnectionStageReachedEvent,\\r\\n    createFocusLeftEvent,\\r\\n    createJingleEvent,\\r\\n    createRemotelyMutedEvent\\r\\n} from './service/statistics/AnalyticsEvents';\\r\\nimport AuthenticationEvents\\r\\n    from './service/authentication/AuthenticationEvents';\\r\\nimport EventEmitterForwarder from './modules/util/EventEmitterForwarder';\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\\r\\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\\r\\nimport * as MediaType from './service/RTC/MediaType';\\r\\nimport RTCEvents from './service/RTC/RTCEvents';\\r\\nimport VideoType from './service/RTC/VideoType';\\r\\nimport Statistics from './modules/statistics/statistics';\\r\\nimport XMPPEvents from './service/xmpp/XMPPEvents';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Setups all event listeners related to conference\\r\\n * @param conference {JitsiConference} the conference\\r\\n */\\r\\nexport default function JitsiConferenceEventManager(conference) {\\r\\n    this.conference = conference;\\r\\n    this.xmppListeners = {};\\r\\n\\r\\n    // Listeners related to the conference only\\r\\n    conference.on(JitsiConferenceEvents.TRACK_MUTE_CHANGED,\\r\\n        track => {\\r\\n            if (!track.isLocal() || !conference.statistics) {\\r\\n                return;\\r\\n            }\\r\\n            const session\\r\\n                = track.isP2P\\r\\n                    ? conference.p2pJingleSession : conference.jvbJingleSession;\\r\\n\\r\\n            // TPC will be null, before the conference starts, but the event\\r\\n            // still should be queued\\r\\n            const tpc = (session && session.peerconnection) || null;\\r\\n\\r\\n            conference.statistics.sendMuteEvent(\\r\\n                tpc,\\r\\n                track.isMuted(),\\r\\n                track.getType());\\r\\n        });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Setups event listeners related to conference.chatRoom\\r\\n */\\r\\nJitsiConferenceEventManager.prototype.setupChatRoomListeners = function() {\\r\\n    const conference = this.conference;\\r\\n    const chatRoom = conference.room;\\r\\n\\r\\n    this.chatRoomForwarder = new EventEmitterForwarder(chatRoom,\\r\\n        this.conference.eventEmitter);\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.ICE_RESTARTING, jingleSession => {\\r\\n        if (!jingleSession.isP2P) {\\r\\n            // If using DataChannel as bridge channel, it must be closed\\r\\n            // before ICE restart, otherwise Chrome will not trigger \\\"opened\\\"\\r\\n            // event for the channel established with the new bridge.\\r\\n            // TODO: This may be bypassed when using a WebSocket as bridge\\r\\n            // channel.\\r\\n            conference.rtc.closeBridgeChannel();\\r\\n        }\\r\\n\\r\\n        // else: there are no DataChannels in P2P session (at least for now)\\r\\n    });\\r\\n\\r\\n    chatRoom.addListener(\\r\\n        XMPPEvents.ICE_RESTART_SUCCESS,\\r\\n        (jingleSession, offerIq) => {\\r\\n            // The JVB data chanel needs to be reopened in case the conference\\r\\n            // has been moved to a new bridge.\\r\\n            !jingleSession.isP2P\\r\\n                && conference._setBridgeChannel(\\r\\n                    offerIq, jingleSession.peerconnection);\\r\\n        });\\r\\n\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.AUDIO_MUTED_BY_FOCUS,\\r\\n        actor => {\\r\\n            // TODO: Add a way to differentiate between commands which caused\\r\\n            // us to mute and those that did not change our state (i.e. we were\\r\\n            // already muted).\\r\\n            Statistics.sendAnalytics(createRemotelyMutedEvent());\\r\\n\\r\\n            conference.mutedByFocusActor = actor;\\r\\n\\r\\n            // set isMutedByFocus when setAudioMute Promise ends\\r\\n            conference.rtc.setAudioMute(true).then(\\r\\n                () => {\\r\\n                    conference.isMutedByFocus = true;\\r\\n                    conference.mutedByFocusActor = null;\\r\\n                })\\r\\n                .catch(\\r\\n                    error => {\\r\\n                        conference.mutedByFocusActor = null;\\r\\n                        logger.warn(\\r\\n                            'Error while audio muting due to focus request', error);\\r\\n                    });\\r\\n        }\\r\\n    );\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.SUBJECT_CHANGED,\\r\\n        JitsiConferenceEvents.SUBJECT_CHANGED);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_JOINED,\\r\\n        JitsiConferenceEvents.CONFERENCE_JOINED);\\r\\n\\r\\n    // send some analytics events\\r\\n    chatRoom.addListener(XMPPEvents.MUC_JOINED,\\r\\n        () => {\\r\\n            this.conference.isJvbConnectionInterrupted = false;\\r\\n\\r\\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\\r\\n            Object.keys(chatRoom.connectionTimes).forEach(key => {\\r\\n                const event\\r\\n                    = createConnectionStageReachedEvent(\\r\\n                        `conference_${key}`,\\r\\n                        { value: chatRoom.connectionTimes[key] });\\r\\n\\r\\n                Statistics.sendAnalytics(event);\\r\\n            });\\r\\n\\r\\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\\r\\n            Object.keys(chatRoom.xmpp.connectionTimes).forEach(key => {\\r\\n                const event\\r\\n                    = createConnectionStageReachedEvent(\\r\\n                        `xmpp_${key}`,\\r\\n                        { value: chatRoom.xmpp.connectionTimes[key] });\\r\\n\\r\\n                Statistics.sendAnalytics(event);\\r\\n            });\\r\\n        });\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.RENEGOTIATION_FAILED, (e, session) => {\\r\\n        if (!session.isP2P) {\\r\\n            conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n                JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_JOIN_ERROR,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.CONNECTION_ERROR);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_ERROR,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.CONNECTION_ERROR);\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.NOT_ALLOWED_ERROR);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_MAX_USERS_ERROR,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.CONFERENCE_MAX_USERS);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.PASSWORD_REQUIRED,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.PASSWORD_REQUIRED);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.AUTHENTICATION_REQUIRED,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.AUTHENTICATION_REQUIRED);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.BRIDGE_DOWN,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.VIDEOBRIDGE_NOT_AVAILABLE);\\r\\n    chatRoom.addListener(\\r\\n        XMPPEvents.BRIDGE_DOWN,\\r\\n        () => Statistics.sendAnalytics(createBridgeDownEvent()));\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.RESERVATION_ERROR,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.RESERVATION_ERROR);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.GRACEFUL_SHUTDOWN,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.GRACEFUL_SHUTDOWN);\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\\r\\n        jingleSession => {\\r\\n            conference._onIceConnectionFailed(jingleSession);\\r\\n        });\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_DESTROYED,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.CONFERENCE_DESTROYED);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.CHAT_ERROR_RECEIVED,\\r\\n        JitsiConferenceEvents.CONFERENCE_ERROR,\\r\\n        JitsiConferenceErrors.CHAT_ERROR);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.FOCUS_DISCONNECTED,\\r\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n        JitsiConferenceErrors.FOCUS_DISCONNECTED);\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.FOCUS_LEFT,\\r\\n        () => {\\r\\n            Statistics.sendAnalytics(createFocusLeftEvent());\\r\\n            conference.eventEmitter.emit(\\r\\n                JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n                JitsiConferenceErrors.FOCUS_LEFT);\\r\\n        });\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.SESSION_ACCEPT_TIMEOUT,\\r\\n        jingleSession => {\\r\\n            Statistics.sendAnalyticsAndLog(\\r\\n                createJingleEvent(\\r\\n                    ACTION_JINGLE_SA_TIMEOUT,\\r\\n                    { p2p: jingleSession.isP2P }));\\r\\n        });\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.RECORDER_STATE_CHANGED,\\r\\n        JitsiConferenceEvents.RECORDER_STATE_CHANGED);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\\r\\n        JitsiConferenceEvents.TRANSCRIPTION_STATUS_CHANGED);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED,\\r\\n        JitsiConferenceEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED);\\r\\n\\r\\n    this.chatRoomForwarder.forward(\\r\\n        XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\\r\\n        JitsiConferenceEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED);\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.PHONE_NUMBER_CHANGED,\\r\\n        JitsiConferenceEvents.PHONE_NUMBER_CHANGED);\\r\\n\\r\\n    chatRoom.setParticipantPropertyListener((node, from) => {\\r\\n        const participant = conference.getParticipantById(from);\\r\\n\\r\\n        if (!participant) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        participant.setProperty(\\r\\n            node.tagName.substring('jitsi_participant_'.length),\\r\\n            node.value);\\r\\n    });\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.KICKED,\\r\\n        conference.onMemberKicked.bind(conference));\\r\\n    chatRoom.addListener(XMPPEvents.SUSPEND_DETECTED,\\r\\n        conference.onSuspendDetected.bind(conference));\\r\\n\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOCK_CHANGED,\\r\\n        JitsiConferenceEvents.LOCK_STATE_CHANGED);\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_JOINED,\\r\\n        conference.onMemberJoined.bind(conference));\\r\\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\\r\\n        conference._onMemberBotTypeChanged.bind(conference));\\r\\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_LEFT,\\r\\n        conference.onMemberLeft.bind(conference));\\r\\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LEFT,\\r\\n        JitsiConferenceEvents.CONFERENCE_LEFT);\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.DISPLAY_NAME_CHANGED,\\r\\n        conference.onDisplayNameChanged.bind(conference));\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.LOCAL_ROLE_CHANGED, role => {\\r\\n        conference.onLocalRoleChanged(role);\\r\\n\\r\\n        // log all events for the recorder operated by the moderator\\r\\n        if (conference.statistics && conference.isModerator()) {\\r\\n            conference.on(JitsiConferenceEvents.RECORDER_STATE_CHANGED,\\r\\n                recorderSession => {\\r\\n                    const logObject = {\\r\\n                        error: recorderSession.getError(),\\r\\n                        id: 'recorder_status',\\r\\n                        status: recorderSession.getStatus()\\r\\n                    };\\r\\n\\r\\n                    Statistics.sendLog(JSON.stringify(logObject));\\r\\n                });\\r\\n        }\\r\\n    });\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.MUC_ROLE_CHANGED,\\r\\n        conference.onUserRoleChanged.bind(conference));\\r\\n\\r\\n    chatRoom.addListener(AuthenticationEvents.IDENTITY_UPDATED,\\r\\n        (authEnabled, authIdentity) => {\\r\\n            conference.authEnabled = authEnabled;\\r\\n            conference.authIdentity = authIdentity;\\r\\n            conference.eventEmitter.emit(\\r\\n                JitsiConferenceEvents.AUTH_STATUS_CHANGED, authEnabled,\\r\\n                authIdentity);\\r\\n        });\\r\\n\\r\\n    chatRoom.addListener(\\r\\n        XMPPEvents.MESSAGE_RECEIVED,\\r\\n\\r\\n        // eslint-disable-next-line max-params\\r\\n        (jid, displayName, txt, myJid, ts) => {\\r\\n            const id = Strophe.getResourceFromJid(jid);\\r\\n\\r\\n            conference.eventEmitter.emit(\\r\\n                JitsiConferenceEvents.MESSAGE_RECEIVED,\\r\\n                id, txt, ts, displayName);\\r\\n        });\\r\\n\\r\\n    chatRoom.addListener(\\r\\n        XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\\r\\n\\r\\n        // eslint-disable-next-line max-params\\r\\n        (jid, displayName, txt, myJid, ts) => {\\r\\n            const id = Strophe.getResourceFromJid(jid);\\r\\n\\r\\n            conference.eventEmitter.emit(\\r\\n                JitsiConferenceEvents.PRIVATE_MESSAGE_RECEIVED,\\r\\n                id, txt, ts);\\r\\n        });\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.PRESENCE_STATUS,\\r\\n        (jid, status) => {\\r\\n            const id = Strophe.getResourceFromJid(jid);\\r\\n            const participant = conference.getParticipantById(id);\\r\\n\\r\\n            if (!participant || participant._status === status) {\\r\\n                return;\\r\\n            }\\r\\n            participant._status = status;\\r\\n            conference.eventEmitter.emit(\\r\\n                JitsiConferenceEvents.USER_STATUS_CHANGED, id, status);\\r\\n        });\\r\\n\\r\\n    chatRoom.addListener(XMPPEvents.JSON_MESSAGE_RECEIVED,\\r\\n        (from, payload) => {\\r\\n            const id = Strophe.getResourceFromJid(from);\\r\\n            const participant = conference.getParticipantById(id);\\r\\n\\r\\n            if (participant) {\\r\\n                conference.eventEmitter.emit(\\r\\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\\r\\n                    participant, payload);\\r\\n            } else {\\r\\n                logger.warn(\\r\\n                    'Ignored XMPPEvents.JSON_MESSAGE_RECEIVED for not existing '\\r\\n                    + `participant: ${from}`,\\r\\n                    payload);\\r\\n            }\\r\\n        });\\r\\n\\r\\n    chatRoom.addPresenceListener('startmuted', (data, from) => {\\r\\n        let isModerator = false;\\r\\n\\r\\n        if (conference.myUserId() === from && conference.isModerator()) {\\r\\n            isModerator = true;\\r\\n        } else {\\r\\n            const participant = conference.getParticipantById(from);\\r\\n\\r\\n            if (participant && participant.isModerator()) {\\r\\n                isModerator = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (!isModerator) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const startAudioMuted = data.attributes.audio === 'true';\\r\\n        const startVideoMuted = data.attributes.video === 'true';\\r\\n\\r\\n        let updated = false;\\r\\n\\r\\n        if (startAudioMuted !== conference.startMutedPolicy.audio) {\\r\\n            conference.startMutedPolicy.audio = startAudioMuted;\\r\\n            updated = true;\\r\\n        }\\r\\n\\r\\n        if (startVideoMuted !== conference.startMutedPolicy.video) {\\r\\n            conference.startMutedPolicy.video = startVideoMuted;\\r\\n            updated = true;\\r\\n        }\\r\\n\\r\\n        if (updated) {\\r\\n            conference.eventEmitter.emit(\\r\\n                JitsiConferenceEvents.START_MUTED_POLICY_CHANGED,\\r\\n                conference.startMutedPolicy\\r\\n            );\\r\\n        }\\r\\n    });\\r\\n\\r\\n    if (conference.statistics) {\\r\\n        // FIXME ICE related events should end up in RTCEvents eventually\\r\\n        chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\\r\\n            session => {\\r\\n                conference.statistics.sendIceConnectionFailedEvent(\\r\\n                    session.peerconnection);\\r\\n            });\\r\\n\\r\\n        // FIXME XMPPEvents.ADD_ICE_CANDIDATE_FAILED is never emitted\\r\\n        chatRoom.addListener(XMPPEvents.ADD_ICE_CANDIDATE_FAILED,\\r\\n            (e, pc) => {\\r\\n                conference.statistics.sendAddIceCandidateFailed(e, pc);\\r\\n            });\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Setups event listeners related to conference.rtc\\r\\n */\\r\\nJitsiConferenceEventManager.prototype.setupRTCListeners = function() {\\r\\n    const conference = this.conference;\\r\\n    const rtc = conference.rtc;\\r\\n\\r\\n    rtc.addListener(\\r\\n        RTCEvents.REMOTE_TRACK_ADDED,\\r\\n        conference.onRemoteTrackAdded.bind(conference));\\r\\n\\r\\n    rtc.addListener(\\r\\n        RTCEvents.REMOTE_TRACK_REMOVED,\\r\\n        conference.onRemoteTrackRemoved.bind(conference));\\r\\n\\r\\n    rtc.addListener(RTCEvents.DOMINANT_SPEAKER_CHANGED,\\r\\n        id => {\\r\\n            if (conference.lastDominantSpeaker !== id && conference.room) {\\r\\n                conference.lastDominantSpeaker = id;\\r\\n                conference.eventEmitter.emit(\\r\\n                    JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED, id);\\r\\n\\r\\n                if (conference.statistics && conference.myUserId() === id) {\\r\\n                    // We are the new dominant speaker.\\r\\n                    conference.statistics.sendDominantSpeakerEvent(\\r\\n                        conference.room.roomjid);\\r\\n                }\\r\\n            }\\r\\n        });\\r\\n\\r\\n    rtc.addListener(RTCEvents.DATA_CHANNEL_OPEN, () => {\\r\\n        const now = window.performance.now();\\r\\n        const key = 'data.channel.opened';\\r\\n\\r\\n        // TODO: Move all of the 'connectionTimes' logic to its own module.\\r\\n        logger.log(`(TIME) ${key}`, now);\\r\\n        conference.room.connectionTimes[key] = now;\\r\\n        Statistics.sendAnalytics(\\r\\n            createConnectionStageReachedEvent(key, { value: now }));\\r\\n\\r\\n        conference.eventEmitter.emit(JitsiConferenceEvents.DATA_CHANNEL_OPENED);\\r\\n    });\\r\\n\\r\\n    rtc.addListener(RTCEvents.ENDPOINT_MESSAGE_RECEIVED,\\r\\n        (from, payload) => {\\r\\n            const participant = conference.getParticipantById(from);\\r\\n\\r\\n            if (participant) {\\r\\n                conference.eventEmitter.emit(\\r\\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\\r\\n                    participant, payload);\\r\\n            } else {\\r\\n                logger.warn(\\r\\n                    'Ignored ENDPOINT_MESSAGE_RECEIVED for not existing '\\r\\n                        + `participant: ${from}`,\\r\\n                    payload);\\r\\n            }\\r\\n        });\\r\\n\\r\\n    rtc.addListener(RTCEvents.LOCAL_UFRAG_CHANGED,\\r\\n        (tpc, ufrag) => {\\r\\n            if (!tpc.isP2P) {\\r\\n                Statistics.sendLog(\\r\\n                    JSON.stringify({\\r\\n                        id: 'local_ufrag',\\r\\n                        value: ufrag\\r\\n                    }));\\r\\n            }\\r\\n        });\\r\\n    rtc.addListener(RTCEvents.REMOTE_UFRAG_CHANGED,\\r\\n        (tpc, ufrag) => {\\r\\n            if (!tpc.isP2P) {\\r\\n                Statistics.sendLog(\\r\\n                    JSON.stringify({\\r\\n                        id: 'remote_ufrag',\\r\\n                        value: ufrag\\r\\n                    }));\\r\\n            }\\r\\n        });\\r\\n\\r\\n    rtc.addListener(RTCEvents.CREATE_ANSWER_FAILED,\\r\\n        (e, tpc) => {\\r\\n            conference.statistics.sendCreateAnswerFailed(e, tpc);\\r\\n            if (!tpc.isP2P) {\\r\\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\\r\\n            }\\r\\n        });\\r\\n\\r\\n    rtc.addListener(RTCEvents.CREATE_OFFER_FAILED,\\r\\n        (e, tpc) => {\\r\\n            conference.statistics.sendCreateOfferFailed(e, tpc);\\r\\n            if (!tpc.isP2P) {\\r\\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\\r\\n            }\\r\\n        });\\r\\n\\r\\n    rtc.addListener(RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\\r\\n        (e, tpc) => {\\r\\n            conference.statistics.sendSetLocalDescFailed(e, tpc);\\r\\n            if (!tpc.isP2P) {\\r\\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\\r\\n            }\\r\\n        });\\r\\n\\r\\n    rtc.addListener(RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\\r\\n        (e, tpc) => {\\r\\n            conference.statistics.sendSetRemoteDescFailed(e, tpc);\\r\\n            if (!tpc.isP2P) {\\r\\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\\r\\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\\r\\n            }\\r\\n        });\\r\\n\\r\\n    rtc.addListener(RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\\r\\n        (track, ssrc) => {\\r\\n            // when starting screen sharing, the track is created and when\\r\\n            // we do set local description and we process the ssrc we\\r\\n            // will be notified for it and we will report it with the event\\r\\n            // for screen sharing\\r\\n            if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\\r\\n                conference.statistics.sendScreenSharingEvent(true, ssrc);\\r\\n            }\\r\\n        });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes event listeners related to conference.xmpp\\r\\n */\\r\\nJitsiConferenceEventManager.prototype.removeXMPPListeners = function() {\\r\\n    const conference = this.conference;\\r\\n\\r\\n    conference.xmpp.caps.removeListener(\\r\\n        XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\\r\\n        this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED]);\\r\\n    delete this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED];\\r\\n\\r\\n    Object.keys(this.xmppListeners).forEach(eventName => {\\r\\n        conference.xmpp.removeListener(\\r\\n            eventName,\\r\\n            this.xmppListeners[eventName]);\\r\\n    });\\r\\n    this.xmppListeners = {};\\r\\n};\\r\\n\\r\\n\\r\\n/**\\r\\n * Setups event listeners related to conference.xmpp\\r\\n */\\r\\nJitsiConferenceEventManager.prototype.setupXMPPListeners = function() {\\r\\n    const conference = this.conference;\\r\\n\\r\\n    const featuresChangedListener = from => {\\r\\n        const participant\\r\\n            = conference.getParticipantById(\\r\\n            Strophe.getResourceFromJid(from));\\r\\n\\r\\n        if (participant) {\\r\\n            conference.eventEmitter.emit(\\r\\n                JitsiConferenceEvents.PARTCIPANT_FEATURES_CHANGED,\\r\\n                participant);\\r\\n        }\\r\\n    };\\r\\n\\r\\n    conference.xmpp.caps.addListener(\\r\\n        XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\\r\\n        featuresChangedListener);\\r\\n    this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED]\\r\\n        = featuresChangedListener;\\r\\n\\r\\n    this._addConferenceXMPPListener(\\r\\n        XMPPEvents.CALL_INCOMING,\\r\\n        conference.onIncomingCall.bind(conference));\\r\\n    this._addConferenceXMPPListener(\\r\\n        XMPPEvents.CALL_ACCEPTED,\\r\\n        conference.onCallAccepted.bind(conference));\\r\\n    this._addConferenceXMPPListener(\\r\\n        XMPPEvents.TRANSPORT_INFO,\\r\\n        conference.onTransportInfo.bind(conference));\\r\\n    this._addConferenceXMPPListener(\\r\\n        XMPPEvents.CALL_ENDED,\\r\\n        conference.onCallEnded.bind(conference));\\r\\n\\r\\n    this._addConferenceXMPPListener(XMPPEvents.START_MUTED_FROM_FOCUS,\\r\\n        (audioMuted, videoMuted) => {\\r\\n            if (conference.options.config.ignoreStartMuted) {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            conference.startAudioMuted = audioMuted;\\r\\n            conference.startVideoMuted = videoMuted;\\r\\n\\r\\n            // mute existing local tracks because this is initial mute from\\r\\n            // Jicofo\\r\\n            conference.getLocalTracks().forEach(track => {\\r\\n                switch (track.getType()) {\\r\\n                case MediaType.AUDIO:\\r\\n                    conference.startAudioMuted && track.mute();\\r\\n                    break;\\r\\n                case MediaType.VIDEO:\\r\\n                    conference.startVideoMuted && track.mute();\\r\\n                    break;\\r\\n                }\\r\\n            });\\r\\n\\r\\n            conference.eventEmitter.emit(JitsiConferenceEvents.STARTED_MUTED);\\r\\n        });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Add XMPP listener and save its reference for remove on leave conference.\\r\\n */\\r\\nJitsiConferenceEventManager.prototype._addConferenceXMPPListener = function(\\r\\n        eventName, listener) {\\r\\n    this.xmppListeners[eventName] = listener;\\r\\n    this.conference.xmpp.addListener(eventName, listener);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Setups event listeners related to conference.statistics\\r\\n */\\r\\nJitsiConferenceEventManager.prototype.setupStatisticsListeners = function() {\\r\\n    const conference = this.conference;\\r\\n\\r\\n    if (!conference.statistics) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n    conference.statistics.addAudioLevelListener((tpc, ssrc, level, isLocal) => {\\r\\n        conference.rtc.setAudioLevel(tpc, ssrc, level, isLocal);\\r\\n    });\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    // Forward the \\\"before stats disposed\\\" event\\r\\n    conference.statistics.addBeforeDisposedListener(() => {\\r\\n        conference.eventEmitter.emit(\\r\\n            JitsiConferenceEvents.BEFORE_STATISTICS_DISPOSED);\\r\\n    });\\r\\n\\r\\n    // if we are in startSilent mode we will not be sending/receiving so nothing to detect\\r\\n    if (!conference.options.config.startSilent) {\\r\\n        conference.statistics.addByteSentStatsListener((tpc, stats) => {\\r\\n            conference.getLocalTracks(MediaType.AUDIO).forEach(track => {\\r\\n                const ssrc = tpc.getLocalSSRC(track);\\r\\n\\r\\n                if (!ssrc || !stats.hasOwnProperty(ssrc)) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                track._onByteSentStatsReceived(tpc, stats[ssrc]);\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n};\\r\\n\",\"/**\\r\\n * Implements utility to forward events from one eventEmitter to another.\\r\\n * @param src {object} instance of EventEmitter or another class that implements\\r\\n * addListener method which will register listener to EventEmitter instance.\\r\\n * @param dest {object} instance of EventEmitter or another class that\\r\\n * implements emit method which will emit an event.\\r\\n */\\r\\nfunction EventEmitterForwarder(src, dest) {\\r\\n    if (!src || !dest || typeof src.addListener !== 'function'\\r\\n        || typeof dest.emit !== 'function') {\\r\\n        throw new Error('Invalid arguments passed to EventEmitterForwarder');\\r\\n    }\\r\\n    this.src = src;\\r\\n    this.dest = dest;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds event to be forwarded from src to dest.\\r\\n * @param srcEvent {string} the event that EventEmitterForwarder is listening\\r\\n * for.\\r\\n * @param dstEvent {string} the event that will be fired from dest.\\r\\n * @param arguments all other passed arguments are going to be fired with\\r\\n * dstEvent.\\r\\n */\\r\\nEventEmitterForwarder.prototype.forward = function(...args) {\\r\\n    const srcEvent = args[0];\\r\\n\\r\\n    // This will be the \\\"this\\\" value for emit function.\\r\\n\\r\\n    args[0] = this.dest;\\r\\n\\r\\n    // Using bind.apply to pass the arguments as Array-like object (\\\"arguments\\\")\\r\\n    this.src.addListener(\\r\\n        srcEvent,\\r\\n        Function.prototype.bind.apply(this.dest.emit, args));\\r\\n};\\r\\n\\r\\nmodule.exports = EventEmitterForwarder;\\r\\n\",\"import {\\r\\n    TYPE_OPERATIONAL,\\r\\n    TYPE_PAGE,\\r\\n    TYPE_TRACK,\\r\\n    TYPE_UI\\r\\n} from '../../service/statistics/AnalyticsEvents';\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport browser from '../browser';\\r\\nimport Settings from '../settings/Settings';\\r\\n\\r\\nconst MAX_CACHE_SIZE = 100;\\r\\n\\r\\n// eslist-disable-line no-undef\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * This class provides an API to lib-jitsi-meet and its users for sending\\r\\n * analytics events. It serves as a bridge to different backend implementations\\r\\n * (\\\"analytics handlers\\\") and a cache for events attempted to be sent before\\r\\n * the analytics handlers were enabled.\\r\\n *\\r\\n * The API is designed to be an easy replacement for the previous version of\\r\\n * this adapter, and is meant to be extended with more convenience methods.\\r\\n *\\r\\n *\\r\\n * The API calls are translated to objects with the following structure, which\\r\\n * are then passed to the sendEvent(event) function of the underlying handlers:\\r\\n *\\r\\n * {\\r\\n *    type,\\r\\n *\\r\\n *    action,\\r\\n *    actionSubject,\\r\\n *    actionSubjectId,\\r\\n *    attributes,\\r\\n *    categories,\\r\\n *    containerId,\\r\\n *    containerType,\\r\\n *    name,\\r\\n *    objectId,\\r\\n *    objectType,\\r\\n *    source,\\r\\n *    tags\\r\\n * }\\r\\n *\\r\\n * The 'type' is one of 'operational', 'page', 'track' or 'ui', and some of the\\r\\n * other properties are considered required according to the type.\\r\\n *\\r\\n * For events with type 'page', the required properties are: name.\\r\\n *\\r\\n * For events with type 'operational' and 'ui', the required properties are:\\r\\n * action, actionSubject, source\\r\\n *\\r\\n * For events with type 'page', the required properties are:\\r\\n * action, actionSubject, source, containerType, containerId, objectType,\\r\\n * objectId\\r\\n */\\r\\nclass AnalyticsAdapter {\\r\\n    /**\\r\\n     * Creates new AnalyticsAdapter instance.\\r\\n     */\\r\\n    constructor() {\\r\\n        this.reset();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reset the state to the initial one.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    reset() {\\r\\n        /**\\r\\n         * Whether this AnalyticsAdapter has been disposed of or not. Once this\\r\\n         * is set to true, the AnalyticsAdapter is disabled and does not accept\\r\\n         * any more events, and it can not be re-enabled.\\r\\n         * @type {boolean}\\r\\n         */\\r\\n        this.disposed = false;\\r\\n\\r\\n        /**\\r\\n         * The set of handlers to which events will be sent.\\r\\n         * @type {Set<any>}\\r\\n         */\\r\\n        this.analyticsHandlers = new Set();\\r\\n\\r\\n        /**\\r\\n         * The cache of events which are not sent yet. The cache is enabled\\r\\n         * while this field is truthy, and disabled otherwise.\\r\\n         * @type {Array}\\r\\n         */\\r\\n        this.cache = [];\\r\\n\\r\\n        /**\\r\\n         * Map of properties that will be added to every event. Note that the\\r\\n         * keys will be prefixed with \\\"permanent.\\\".\\r\\n         */\\r\\n        this.permanentProperties = {};\\r\\n\\r\\n        /**\\r\\n         * The name of the conference that this AnalyticsAdapter is associated\\r\\n         * with.\\r\\n         * @type {null}\\r\\n         */\\r\\n        this.conferenceName = '';\\r\\n\\r\\n        this.addPermanentProperties({\\r\\n            'callstats_name': Settings.callStatsUserName,\\r\\n            'user_agent': navigator.userAgent,\\r\\n            'browser_name': browser.getName()\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Dispose analytics. Clears all handlers.\\r\\n     */\\r\\n    dispose() {\\r\\n        logger.warn('Disposing of analytics adapter.');\\r\\n\\r\\n        if (this.analyticsHandlers && this.analyticsHandlers.size > 0) {\\r\\n            this.analyticsHandlers.forEach(handler => {\\r\\n                if (typeof handler.dispose === 'function') {\\r\\n                    handler.dispose();\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n\\r\\n        this.setAnalyticsHandlers([]);\\r\\n        this.disposed = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the handlers that are going to be used to send analytics. Sends any\\r\\n     * cached events.\\r\\n     * @param {Array} handlers the handlers\\r\\n     */\\r\\n    setAnalyticsHandlers(handlers) {\\r\\n        if (this.disposed) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.analyticsHandlers = new Set(handlers);\\r\\n\\r\\n        this._setUserProperties();\\r\\n\\r\\n        // Note that we disable the cache even if the set of handlers is empty.\\r\\n        const cache = this.cache;\\r\\n\\r\\n        this.cache = null;\\r\\n        if (cache) {\\r\\n            cache.forEach(event => this._sendEvent(event));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set the user properties to the analytics handlers.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _setUserProperties() {\\r\\n        this.analyticsHandlers.forEach(handler => {\\r\\n            try {\\r\\n                handler.setUserProperties(this.permanentProperties);\\r\\n            } catch (error) {\\r\\n                logger.warn('Error in setUserProperties method of one of the '\\r\\n                    + `analytics handlers: ${error}`);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds a set of permanent properties to this this AnalyticsAdapter.\\r\\n     * Permanent properties will be added as \\\"attributes\\\" to events sent to\\r\\n     * the underlying \\\"analytics handlers\\\", and their keys will be prefixed\\r\\n     * by \\\"permanent_\\\", i.e. adding a permanent property {key: \\\"value\\\"} will\\r\\n     * result in {\\\"permanent_key\\\": \\\"value\\\"} object to be added to the\\r\\n     * \\\"attributes\\\" field of events.\\r\\n     *\\r\\n     * @param {Object} properties the properties to add\\r\\n     */\\r\\n    addPermanentProperties(properties) {\\r\\n        this.permanentProperties = {\\r\\n            ...this.permanentProperties,\\r\\n            ...properties\\r\\n        };\\r\\n\\r\\n        this._setUserProperties();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the name of the conference that this AnalyticsAdapter is associated\\r\\n     * with.\\r\\n     * @param name the name to set.\\r\\n     */\\r\\n    setConferenceName(name) {\\r\\n        this.conferenceName = name;\\r\\n        this.addPermanentProperties({ 'conference_name': name });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends an event with a given name and given properties. The first\\r\\n     * parameter is either a string or an object. If it is a string, it is used\\r\\n     * as the event name and the second parameter is used at the attributes to\\r\\n     * attach to the event. If it is an object, it represents the whole event,\\r\\n     * including any desired attributes, and the second parameter is ignored.\\r\\n     *\\r\\n     * @param {String|Object} eventName either a string to be used as the name\\r\\n     * of the event, or an event object. If an event object is passed, the\\r\\n     * properties parameters is ignored.\\r\\n     * @param {Object} properties the properties/attributes to attach to the\\r\\n     * event, if eventName is a string.\\r\\n     */\\r\\n    sendEvent(eventName, properties = {}) {\\r\\n        if (this.disposed) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        let event = null;\\r\\n\\r\\n        if (typeof eventName === 'string') {\\r\\n            event = {\\r\\n                type: TYPE_OPERATIONAL,\\r\\n                action: eventName,\\r\\n                actionSubject: eventName,\\r\\n                source: eventName,\\r\\n                attributes: properties\\r\\n            };\\r\\n        } else if (typeof eventName === 'object') {\\r\\n            event = eventName;\\r\\n        }\\r\\n\\r\\n        if (!this._verifyRequiredFields(event)) {\\r\\n            logger.error(\\r\\n                `Dropping a mis-formatted event: ${JSON.stringify(event)}`);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._sendEvent(event);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether an event has all of the required fields set, and tries\\r\\n     * to fill in some of the missing fields with reasonable default values.\\r\\n     * Returns true if after this operation the event has all of the required\\r\\n     * fields set, and false otherwise (if some of the required fields were not\\r\\n     * set and the attempt to fill them in with a default failed).\\r\\n     *\\r\\n     * @param event the event object.\\r\\n     * @return {boolean} true if the event (after the call to this function)\\r\\n     * contains all of the required fields, and false otherwise.\\r\\n     * @private\\r\\n     */\\r\\n    _verifyRequiredFields(event) {\\r\\n        if (!event) {\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        if (!event.type) {\\r\\n            event.type = TYPE_OPERATIONAL;\\r\\n        }\\r\\n\\r\\n        const type = event.type;\\r\\n\\r\\n        if (type !== TYPE_OPERATIONAL && type !== TYPE_PAGE\\r\\n            && type !== TYPE_UI && type !== TYPE_TRACK) {\\r\\n            logger.error(`Unknown event type: ${type}`);\\r\\n\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        if (type === TYPE_PAGE) {\\r\\n            return Boolean(event.name);\\r\\n        }\\r\\n\\r\\n        // Try to set some reasonable default values in case some of the\\r\\n        // parameters required by the handler API are missing.\\r\\n        event.action = event.action || event.name || event.actionSubject;\\r\\n        event.actionSubject = event.actionSubject || event.name || event.action;\\r\\n        event.source = event.source || event.name || event.action\\r\\n            || event.actionSubject;\\r\\n\\r\\n        if (!event.action || !event.actionSubject || !event.source) {\\r\\n            logger.error(\\r\\n                'Required field missing (action, actionSubject or source)');\\r\\n\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        // Track events have additional required fields.\\r\\n        if (type === TYPE_TRACK) {\\r\\n            event.objectType = event.objectType || 'generic-object-type';\\r\\n            event.containerType = event.containerType || 'conference';\\r\\n            if (event.containerType === 'conference' && !event.containerId) {\\r\\n                event.containerId = this.conferenceName;\\r\\n            }\\r\\n\\r\\n\\r\\n            if (!event.objectType || !event.objectId\\r\\n                || !event.containerType || !event.containerId) {\\r\\n                logger.error(\\r\\n                    'Required field missing (containerId, containerType, '\\r\\n                        + 'objectId or objectType)');\\r\\n\\r\\n                return false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Saves an event to the cache, if the cache is enabled.\\r\\n     * @param event the event to save.\\r\\n     * @returns {boolean} true if the event was saved, and false otherwise (i.e.\\r\\n     * if the cache was disabled).\\r\\n     * @private\\r\\n     */\\r\\n    _maybeCacheEvent(event) {\\r\\n        if (this.cache) {\\r\\n            this.cache.push(event);\\r\\n\\r\\n            // We limit the size of the cache, in case the user fails to ever\\r\\n            // set the analytics handlers.\\r\\n            if (this.cache.length > MAX_CACHE_SIZE) {\\r\\n                this.cache.splice(0, 1);\\r\\n            }\\r\\n\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param event\\r\\n     * @private\\r\\n     */\\r\\n    _sendEvent(event) {\\r\\n        if (this._maybeCacheEvent(event)) {\\r\\n            // The event was consumed by the cache.\\r\\n        } else {\\r\\n            this.analyticsHandlers.forEach(handler => {\\r\\n                try {\\r\\n                    handler.sendEvent(event);\\r\\n                } catch (e) {\\r\\n                    logger.warn(`Error sending analytics event: ${e}`);\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default new AnalyticsAdapter();\\r\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\r\\nimport { BrowserDetection } from 'js-utils';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n// TODO: Move this code to js-utils.\\r\\n\\r\\n// NOTE: Now we are extending BrowserDetection in order to preserve\\r\\n// RTCBrowserType interface but maybe it worth exporting BrowserCapabilities\\r\\n// and BrowserDetection as separate objects in future.\\r\\n\\r\\n/**\\r\\n * Implements browser capabilities for lib-jitsi-meet.\\r\\n */\\r\\nexport default class BrowserCapabilities extends BrowserDetection {\\r\\n    /**\\r\\n     * Creates new BrowserCapabilities instance.\\r\\n     */\\r\\n    constructor() {\\r\\n        super();\\r\\n        logger.info(\\r\\n            `This appears to be ${this.getName()}, ver: ${this.getVersion()}`);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Tells whether or not the <tt>MediaStream/tt> is removed from\\r\\n     * the <tt>PeerConnection</tt> and disposed on video mute (in order to turn\\r\\n     * off the camera device).\\r\\n     * @return {boolean} <tt>true</tt> if the current browser supports this\\r\\n     * strategy or <tt>false</tt> otherwise.\\r\\n     */\\r\\n    doesVideoMuteByStreamRemove() {\\r\\n        return !(\\r\\n            this.isFirefox()\\r\\n            || this.isEdge()\\r\\n            || this.isReactNative()\\r\\n            || this.isSafariWithWebrtc()\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Check whether or not the current browser support peer to peer connections\\r\\n     * @return {boolean} <tt>true</tt> if p2p is supported or <tt>false</tt>\\r\\n     * otherwise.\\r\\n     */\\r\\n    supportsP2P() {\\r\\n        return !this.isEdge() && !this.isFirefox();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the current browser is Chromium based, that is, it's either\\r\\n     * Chrome / Chromium or uses it as its engine, but doesn't identify as\\r\\n     * Chrome.\\r\\n     *\\r\\n     * This includes the following browsers:\\r\\n     * - Chrome and Chromium\\r\\n     * - Other browsers which use the Chrome engine, but are detected as Chrome,\\r\\n     *   such as Brave and Vivaldi\\r\\n     * - Browsers which are NOT Chrome but use it as their engine, and have\\r\\n     *   custom detection code: Opera, Electron and NW.JS\\r\\n     */\\r\\n    isChromiumBased() {\\r\\n        return this.isChrome()\\r\\n            || this.isElectron()\\r\\n            || this.isNWJS()\\r\\n            || this.isOpera();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current browser is a Safari and a version of Safari that\\r\\n     * supports native webrtc.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isSafariWithWebrtc() {\\r\\n        return this.isSafari()\\r\\n            && !this.isVersionLessThan('11');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if current browser is a Safari and a version of Safari that\\r\\n     * supports VP8.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isSafariWithVP8() {\\r\\n        return this.isSafari()\\r\\n            && !this.isVersionLessThan('12.1');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the current browser is supported.\\r\\n     *\\r\\n     * @returns {boolean} true if the browser is supported, false otherwise.\\r\\n     */\\r\\n    isSupported() {\\r\\n        return this.isChromiumBased()\\r\\n            || this.isFirefox()\\r\\n            || this.isReactNative()\\r\\n            || this.isSafariWithWebrtc();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns whether or not the current environment needs a user interaction\\r\\n     * with the page before any unmute can occur.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isUserInteractionRequiredForUnmute() {\\r\\n        return this.isFirefox() || this.isSafari();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the current browser triggers 'onmute'/'onunmute' events when\\r\\n     * user's connection is interrupted and the video stops playback.\\r\\n     * @returns {*|boolean} 'true' if the event is supported or 'false'\\r\\n     * otherwise.\\r\\n     */\\r\\n    supportsVideoMuteOnConnInterrupted() {\\r\\n        return this.isChromiumBased() || this.isReactNative()\\r\\n            || this.isSafariWithVP8();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the current browser reports upload and download bandwidth\\r\\n     * statistics.\\r\\n     * @return {boolean}\\r\\n     */\\r\\n    supportsBandwidthStatistics() {\\r\\n        // FIXME bandwidth stats are currently not implemented for FF on our\\r\\n        // side, but not sure if not possible ?\\r\\n        return !this.isFirefox() && !this.isEdge()\\r\\n            && !this.isSafariWithWebrtc();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the current browser supports WebRTC datachannels.\\r\\n     * @return {boolean}\\r\\n     */\\r\\n    supportsDataChannels() {\\r\\n        // NOTE: Edge does not yet implement DataChannel.\\r\\n        return !this.isEdge();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the current browser support the device change event.\\r\\n     * @return {boolean}\\r\\n     */\\r\\n    supportsDeviceChangeEvent() {\\r\\n        return navigator.mediaDevices\\r\\n            && typeof navigator.mediaDevices.ondevicechange !== 'undefined'\\r\\n            && typeof navigator.mediaDevices.addEventListener !== 'undefined';\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the current browser supports RTP statictics collecting.\\r\\n     * Required by {@link RTPStatsCollector}.\\r\\n     *\\r\\n     * @returns {boolean} true if they are supported, false otherwise.\\r\\n     */\\r\\n    supportsRtpStatistics() {\\r\\n        return this.isChromiumBased()\\r\\n            || this.isEdge()\\r\\n            || this.isFirefox()\\r\\n            || this.isReactNative()\\r\\n            || this.isSafariWithWebrtc();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the current browser supports RTT statistics for srflx local\\r\\n     * candidates through the legacy getStats() API.\\r\\n     */\\r\\n    supportsLocalCandidateRttStatistics() {\\r\\n        return this.isChromiumBased() || this.isReactNative()\\r\\n            || this.isSafariWithVP8();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the current browser reports round trip time statistics for\\r\\n     * the ICE candidate pair.\\r\\n     * @return {boolean}\\r\\n     */\\r\\n    supportsRTTStatistics() {\\r\\n        // Firefox does not seem to report RTT for ICE candidate pair:\\r\\n        // eslint-disable-next-line max-len\\r\\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcicecandidatepairstats-currentroundtriptime\\r\\n        // It does report mozRTT for RTP streams, but at the time of this\\r\\n        // writing it's value does not make sense most of the time\\r\\n        // (is reported as 1):\\r\\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1241066\\r\\n        // For Chrome and others we rely on 'googRtt'.\\r\\n        return !this.isFirefox() && !this.isEdge();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether the browser supports RTPSender.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    supportsRtpSender() {\\r\\n        return this.isFirefox() || this.isSafariWithVP8();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether the browser supports RTX.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    supportsRtx() {\\r\\n        return !this.isFirefox() && !this.usesUnifiedPlan();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Whether jitsi-meet supports simulcast on the current browser.\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    supportsSimulcast() {\\r\\n        return this.isChromiumBased() || this.isFirefox()\\r\\n            || this.isSafariWithVP8() || this.isReactNative();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns whether or not the current browser can support capturing video,\\r\\n     * be it camera or desktop, and displaying received video.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    supportsVideo() {\\r\\n        // FIXME: Check if we can use supportsVideoOut and supportsVideoIn. I\\r\\n        // leave the old implementation here in order not to brake something.\\r\\n\\r\\n        // Older versions of Safari using webrtc/adapter do not support video\\r\\n        // due in part to Safari only supporting H264 and the bridge sending VP8\\r\\n        // Newer Safari support VP8 and other WebRTC features.\\r\\n        return !this.isSafariWithWebrtc()\\r\\n            || (this.isSafariWithVP8() && this.usesPlanB());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the browser uses plan B.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    usesPlanB() {\\r\\n        return !this.usesUnifiedPlan();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the browser uses unified plan.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    usesUnifiedPlan() {\\r\\n        if (this.isFirefox()) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        if (this.isSafariWithVP8() && typeof window.RTCRtpTransceiver !== 'undefined') {\\r\\n            // eslint-disable-next-line max-len\\r\\n            // https://trac.webkit.org/changeset/236144/webkit/trunk/LayoutTests/webrtc/video-addLegacyTransceiver.html\\r\\n            // eslint-disable-next-line no-undef\\r\\n            return Object.keys(RTCRtpTransceiver.prototype)\\r\\n                   .indexOf('currentDirection') > -1;\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns whether or not the current browser should be using the new\\r\\n     * getUserMedia flow, which utilizes the adapter shim. This method should\\r\\n     * be temporary and used while migrating all browsers to use adapter and\\r\\n     * the new getUserMedia.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    usesNewGumFlow() {\\r\\n        const REQUIRED_CHROME_VERSION = 61;\\r\\n\\r\\n        if (this.isChrome()) {\\r\\n            return !this.isVersionLessThan(REQUIRED_CHROME_VERSION);\\r\\n        }\\r\\n\\r\\n        if (this.isFirefox() || this.isSafariWithWebrtc()) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        if (this.isChromiumBased()) {\\r\\n            return this._getChromiumBasedVersion() >= REQUIRED_CHROME_VERSION;\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the browser uses webrtc-adapter. All browsers using the new\\r\\n     * getUserMedia flow and Edge.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    usesAdapter() {\\r\\n        return this.usesNewGumFlow() || this.isEdge();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the browser supports getDisplayMedia.\\r\\n     * @returns {boolean} {@code true} if the browser supports getDisplayMedia.\\r\\n     */\\r\\n    supportsGetDisplayMedia() {\\r\\n        return typeof navigator.getDisplayMedia !== 'undefined'\\r\\n            || (typeof navigator.mediaDevices !== 'undefined'\\r\\n                && typeof navigator.mediaDevices.getDisplayMedia\\r\\n                    !== 'undefined');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the browser supports the \\\"sdpSemantics\\\" configuration option.\\r\\n     * https://webrtc.org/web-apis/chrome/unified-plan/\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    supportsSdpSemantics() {\\r\\n        return this.isChromiumBased() && this._getChromiumBasedVersion() >= 65;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the version of a Chromium based browser.\\r\\n     *\\r\\n     * @returns {Number}\\r\\n     */\\r\\n    _getChromiumBasedVersion() {\\r\\n        if (this.isChromiumBased()) {\\r\\n            // NW.JS doesn't expose the Chrome version in the UA string.\\r\\n            if (this.isNWJS()) {\\r\\n                // eslint-disable-next-line no-undef\\r\\n                return Number.parseInt(process.versions.chromium, 10);\\r\\n            }\\r\\n\\r\\n            // Here we process all browsers which use the Chrome engine but\\r\\n            // don't necessarily identify as Chrome. We cannot use the version\\r\\n            // comparing functions because the Electron, Opera and NW.JS\\r\\n            // versions are inconsequential here, as we need to know the actual\\r\\n            // Chrome engine version.\\r\\n            const ua = navigator.userAgent;\\r\\n\\r\\n            if (ua.match(/Chrome/)) {\\r\\n                const version\\r\\n                    = Number.parseInt(ua.match(/Chrome\\\\/([\\\\d.]+)/)[1], 10);\\r\\n\\r\\n                return version;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return -1;\\r\\n    }\\r\\n}\\r\\n\",\"/**\\n * [js-md5]{@link https://github.com/emn178/js-md5}\\n *\\n * @namespace md5\\n * @version 0.7.3\\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\\n * @copyright Chen, Yi-Cyuan 2014-2017\\n * @license MIT\\n */\\n(function () {\\n  'use strict';\\n\\n  var ERROR = 'input is invalid type';\\n  var WINDOW = typeof window === 'object';\\n  var root = WINDOW ? window : {};\\n  if (root.JS_MD5_NO_WINDOW) {\\n    WINDOW = false;\\n  }\\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\\n  if (NODE_JS) {\\n    root = global;\\n  } else if (WEB_WORKER) {\\n    root = self;\\n  }\\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && typeof module === 'object' && module.exports;\\n  var AMD = typeof define === 'function' && define.amd;\\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\\n  var HEX_CHARS = '0123456789abcdef'.split('');\\n  var EXTRA = [128, 32768, 8388608, -2147483648];\\n  var SHIFT = [0, 8, 16, 24];\\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\\n\\n  var blocks = [], buffer8;\\n  if (ARRAY_BUFFER) {\\n    var buffer = new ArrayBuffer(68);\\n    buffer8 = new Uint8Array(buffer);\\n    blocks = new Uint32Array(buffer);\\n  }\\n\\n  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {\\n    Array.isArray = function (obj) {\\n      return Object.prototype.toString.call(obj) === '[object Array]';\\n    };\\n  }\\n\\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\\n    ArrayBuffer.isView = function (obj) {\\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\\n    };\\n  }\\n\\n  /**\\n   * @method hex\\n   * @memberof md5\\n   * @description Output hash as hex string\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {String} Hex string\\n   * @example\\n   * md5.hex('The quick brown fox jumps over the lazy dog');\\n   * // equal to\\n   * md5('The quick brown fox jumps over the lazy dog');\\n   */\\n  /**\\n   * @method digest\\n   * @memberof md5\\n   * @description Output hash as bytes array\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {Array} Bytes array\\n   * @example\\n   * md5.digest('The quick brown fox jumps over the lazy dog');\\n   */\\n  /**\\n   * @method array\\n   * @memberof md5\\n   * @description Output hash as bytes array\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {Array} Bytes array\\n   * @example\\n   * md5.array('The quick brown fox jumps over the lazy dog');\\n   */\\n  /**\\n   * @method arrayBuffer\\n   * @memberof md5\\n   * @description Output hash as ArrayBuffer\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {ArrayBuffer} ArrayBuffer\\n   * @example\\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\\n   */\\n  /**\\n   * @method buffer\\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\\n   * @memberof md5\\n   * @description Output hash as ArrayBuffer\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {ArrayBuffer} ArrayBuffer\\n   * @example\\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\\n   */\\n  /**\\n   * @method base64\\n   * @memberof md5\\n   * @description Output hash as base64 string\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {String} base64 string\\n   * @example\\n   * md5.base64('The quick brown fox jumps over the lazy dog');\\n   */\\n  var createOutputMethod = function (outputType) {\\n    return function (message) {\\n      return new Md5(true).update(message)[outputType]();\\n    };\\n  };\\n\\n  /**\\n   * @method create\\n   * @memberof md5\\n   * @description Create Md5 object\\n   * @returns {Md5} Md5 object.\\n   * @example\\n   * var hash = md5.create();\\n   */\\n  /**\\n   * @method update\\n   * @memberof md5\\n   * @description Create and update Md5 object\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {Md5} Md5 object.\\n   * @example\\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\\n   * // equal to\\n   * var hash = md5.create();\\n   * hash.update('The quick brown fox jumps over the lazy dog');\\n   */\\n  var createMethod = function () {\\n    var method = createOutputMethod('hex');\\n    if (NODE_JS) {\\n      method = nodeWrap(method);\\n    }\\n    method.create = function () {\\n      return new Md5();\\n    };\\n    method.update = function (message) {\\n      return method.create().update(message);\\n    };\\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\\n      var type = OUTPUT_TYPES[i];\\n      method[type] = createOutputMethod(type);\\n    }\\n    return method;\\n  };\\n\\n  var nodeWrap = function (method) {\\n    var crypto = eval(\\\"require('crypto')\\\");\\n    var Buffer = eval(\\\"require('buffer').Buffer\\\");\\n    var nodeMethod = function (message) {\\n      if (typeof message === 'string') {\\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\\n      } else {\\n        if (message === null || message === undefined) {\\n          throw ERROR;\\n        } else if (message.constructor === ArrayBuffer) {\\n          message = new Uint8Array(message);\\n        }\\n      }\\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\\n        message.constructor === Buffer) {\\n        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');\\n      } else {\\n        return method(message);\\n      }\\n    };\\n    return nodeMethod;\\n  };\\n\\n  /**\\n   * Md5 class\\n   * @class Md5\\n   * @description This is internal class.\\n   * @see {@link md5.create}\\n   */\\n  function Md5(sharedMemory) {\\n    if (sharedMemory) {\\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\n      this.blocks = blocks;\\n      this.buffer8 = buffer8;\\n    } else {\\n      if (ARRAY_BUFFER) {\\n        var buffer = new ArrayBuffer(68);\\n        this.buffer8 = new Uint8Array(buffer);\\n        this.blocks = new Uint32Array(buffer);\\n      } else {\\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\n      }\\n    }\\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\\n    this.finalized = this.hashed = false;\\n    this.first = true;\\n  }\\n\\n  /**\\n   * @method update\\n   * @memberof Md5\\n   * @instance\\n   * @description Update hash\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {Md5} Md5 object.\\n   * @see {@link md5.update}\\n   */\\n  Md5.prototype.update = function (message) {\\n    if (this.finalized) {\\n      return;\\n    }\\n\\n    var notString, type = typeof message;\\n    if (type !== 'string') {\\n      if (type === 'object') {\\n        if (message === null) {\\n          throw ERROR;\\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\\n          message = new Uint8Array(message);\\n        } else if (!Array.isArray(message)) {\\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\\n            throw ERROR;\\n          }\\n        }\\n      } else {\\n        throw ERROR;\\n      }\\n      notString = true;\\n    }\\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\\n    var buffer8 = this.buffer8;\\n\\n    while (index < length) {\\n      if (this.hashed) {\\n        this.hashed = false;\\n        blocks[0] = blocks[16];\\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\n      }\\n\\n      if (notString) {\\n        if (ARRAY_BUFFER) {\\n          for (i = this.start; index < length && i < 64; ++index) {\\n            buffer8[i++] = message[index];\\n          }\\n        } else {\\n          for (i = this.start; index < length && i < 64; ++index) {\\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\\n          }\\n        }\\n      } else {\\n        if (ARRAY_BUFFER) {\\n          for (i = this.start; index < length && i < 64; ++index) {\\n            code = message.charCodeAt(index);\\n            if (code < 0x80) {\\n              buffer8[i++] = code;\\n            } else if (code < 0x800) {\\n              buffer8[i++] = 0xc0 | (code >> 6);\\n              buffer8[i++] = 0x80 | (code & 0x3f);\\n            } else if (code < 0xd800 || code >= 0xe000) {\\n              buffer8[i++] = 0xe0 | (code >> 12);\\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\\n              buffer8[i++] = 0x80 | (code & 0x3f);\\n            } else {\\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\\n              buffer8[i++] = 0xf0 | (code >> 18);\\n              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\\n              buffer8[i++] = 0x80 | (code & 0x3f);\\n            }\\n          }\\n        } else {\\n          for (i = this.start; index < length && i < 64; ++index) {\\n            code = message.charCodeAt(index);\\n            if (code < 0x80) {\\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\\n            } else if (code < 0x800) {\\n              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n            } else if (code < 0xd800 || code >= 0xe000) {\\n              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n            } else {\\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\\n              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n            }\\n          }\\n        }\\n      }\\n      this.lastByteIndex = i;\\n      this.bytes += i - this.start;\\n      if (i >= 64) {\\n        this.start = i - 64;\\n        this.hash();\\n        this.hashed = true;\\n      } else {\\n        this.start = i;\\n      }\\n    }\\n    if (this.bytes > 4294967295) {\\n      this.hBytes += this.bytes / 4294967296 << 0;\\n      this.bytes = this.bytes % 4294967296;\\n    }\\n    return this;\\n  };\\n\\n  Md5.prototype.finalize = function () {\\n    if (this.finalized) {\\n      return;\\n    }\\n    this.finalized = true;\\n    var blocks = this.blocks, i = this.lastByteIndex;\\n    blocks[i >> 2] |= EXTRA[i & 3];\\n    if (i >= 56) {\\n      if (!this.hashed) {\\n        this.hash();\\n      }\\n      blocks[0] = blocks[16];\\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\n    }\\n    blocks[14] = this.bytes << 3;\\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\\n    this.hash();\\n  };\\n\\n  Md5.prototype.hash = function () {\\n    var a, b, c, d, bc, da, blocks = this.blocks;\\n\\n    if (this.first) {\\n      a = blocks[0] - 680876937;\\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\\n      d = (d << 12 | d >>> 20) + a << 0;\\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\\n      c = (c << 17 | c >>> 15) + d << 0;\\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\\n      b = (b << 22 | b >>> 10) + c << 0;\\n    } else {\\n      a = this.h0;\\n      b = this.h1;\\n      c = this.h2;\\n      d = this.h3;\\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\\n      a = (a << 7 | a >>> 25) + b << 0;\\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\\n      d = (d << 12 | d >>> 20) + a << 0;\\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\\n      c = (c << 17 | c >>> 15) + d << 0;\\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\\n      b = (b << 22 | b >>> 10) + c << 0;\\n    }\\n\\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\\n    a = (a << 7 | a >>> 25) + b << 0;\\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\\n    d = (d << 12 | d >>> 20) + a << 0;\\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\\n    c = (c << 17 | c >>> 15) + d << 0;\\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\\n    b = (b << 22 | b >>> 10) + c << 0;\\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\\n    a = (a << 7 | a >>> 25) + b << 0;\\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\\n    d = (d << 12 | d >>> 20) + a << 0;\\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\\n    c = (c << 17 | c >>> 15) + d << 0;\\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\\n    b = (b << 22 | b >>> 10) + c << 0;\\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\\n    a = (a << 7 | a >>> 25) + b << 0;\\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\\n    d = (d << 12 | d >>> 20) + a << 0;\\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\\n    c = (c << 17 | c >>> 15) + d << 0;\\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\\n    b = (b << 22 | b >>> 10) + c << 0;\\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\\n    a = (a << 5 | a >>> 27) + b << 0;\\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\\n    d = (d << 9 | d >>> 23) + a << 0;\\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\\n    c = (c << 14 | c >>> 18) + d << 0;\\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\\n    b = (b << 20 | b >>> 12) + c << 0;\\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\\n    a = (a << 5 | a >>> 27) + b << 0;\\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\\n    d = (d << 9 | d >>> 23) + a << 0;\\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\\n    c = (c << 14 | c >>> 18) + d << 0;\\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\\n    b = (b << 20 | b >>> 12) + c << 0;\\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\\n    a = (a << 5 | a >>> 27) + b << 0;\\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\\n    d = (d << 9 | d >>> 23) + a << 0;\\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\\n    c = (c << 14 | c >>> 18) + d << 0;\\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\\n    b = (b << 20 | b >>> 12) + c << 0;\\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\\n    a = (a << 5 | a >>> 27) + b << 0;\\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\\n    d = (d << 9 | d >>> 23) + a << 0;\\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\\n    c = (c << 14 | c >>> 18) + d << 0;\\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\\n    b = (b << 20 | b >>> 12) + c << 0;\\n    bc = b ^ c;\\n    a += (bc ^ d) + blocks[5] - 378558;\\n    a = (a << 4 | a >>> 28) + b << 0;\\n    d += (bc ^ a) + blocks[8] - 2022574463;\\n    d = (d << 11 | d >>> 21) + a << 0;\\n    da = d ^ a;\\n    c += (da ^ b) + blocks[11] + 1839030562;\\n    c = (c << 16 | c >>> 16) + d << 0;\\n    b += (da ^ c) + blocks[14] - 35309556;\\n    b = (b << 23 | b >>> 9) + c << 0;\\n    bc = b ^ c;\\n    a += (bc ^ d) + blocks[1] - 1530992060;\\n    a = (a << 4 | a >>> 28) + b << 0;\\n    d += (bc ^ a) + blocks[4] + 1272893353;\\n    d = (d << 11 | d >>> 21) + a << 0;\\n    da = d ^ a;\\n    c += (da ^ b) + blocks[7] - 155497632;\\n    c = (c << 16 | c >>> 16) + d << 0;\\n    b += (da ^ c) + blocks[10] - 1094730640;\\n    b = (b << 23 | b >>> 9) + c << 0;\\n    bc = b ^ c;\\n    a += (bc ^ d) + blocks[13] + 681279174;\\n    a = (a << 4 | a >>> 28) + b << 0;\\n    d += (bc ^ a) + blocks[0] - 358537222;\\n    d = (d << 11 | d >>> 21) + a << 0;\\n    da = d ^ a;\\n    c += (da ^ b) + blocks[3] - 722521979;\\n    c = (c << 16 | c >>> 16) + d << 0;\\n    b += (da ^ c) + blocks[6] + 76029189;\\n    b = (b << 23 | b >>> 9) + c << 0;\\n    bc = b ^ c;\\n    a += (bc ^ d) + blocks[9] - 640364487;\\n    a = (a << 4 | a >>> 28) + b << 0;\\n    d += (bc ^ a) + blocks[12] - 421815835;\\n    d = (d << 11 | d >>> 21) + a << 0;\\n    da = d ^ a;\\n    c += (da ^ b) + blocks[15] + 530742520;\\n    c = (c << 16 | c >>> 16) + d << 0;\\n    b += (da ^ c) + blocks[2] - 995338651;\\n    b = (b << 23 | b >>> 9) + c << 0;\\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\\n    a = (a << 6 | a >>> 26) + b << 0;\\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\\n    d = (d << 10 | d >>> 22) + a << 0;\\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\\n    c = (c << 15 | c >>> 17) + d << 0;\\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\\n    b = (b << 21 | b >>> 11) + c << 0;\\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\\n    a = (a << 6 | a >>> 26) + b << 0;\\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\\n    d = (d << 10 | d >>> 22) + a << 0;\\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\\n    c = (c << 15 | c >>> 17) + d << 0;\\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\\n    b = (b << 21 | b >>> 11) + c << 0;\\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\\n    a = (a << 6 | a >>> 26) + b << 0;\\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\\n    d = (d << 10 | d >>> 22) + a << 0;\\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\\n    c = (c << 15 | c >>> 17) + d << 0;\\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\\n    b = (b << 21 | b >>> 11) + c << 0;\\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\\n    a = (a << 6 | a >>> 26) + b << 0;\\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\\n    d = (d << 10 | d >>> 22) + a << 0;\\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\\n    c = (c << 15 | c >>> 17) + d << 0;\\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\\n    b = (b << 21 | b >>> 11) + c << 0;\\n\\n    if (this.first) {\\n      this.h0 = a + 1732584193 << 0;\\n      this.h1 = b - 271733879 << 0;\\n      this.h2 = c - 1732584194 << 0;\\n      this.h3 = d + 271733878 << 0;\\n      this.first = false;\\n    } else {\\n      this.h0 = this.h0 + a << 0;\\n      this.h1 = this.h1 + b << 0;\\n      this.h2 = this.h2 + c << 0;\\n      this.h3 = this.h3 + d << 0;\\n    }\\n  };\\n\\n  /**\\n   * @method hex\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as hex string\\n   * @returns {String} Hex string\\n   * @see {@link md5.hex}\\n   * @example\\n   * hash.hex();\\n   */\\n  Md5.prototype.hex = function () {\\n    this.finalize();\\n\\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\\n\\n    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\\n      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\\n  };\\n\\n  /**\\n   * @method toString\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as hex string\\n   * @returns {String} Hex string\\n   * @see {@link md5.hex}\\n   * @example\\n   * hash.toString();\\n   */\\n  Md5.prototype.toString = Md5.prototype.hex;\\n\\n  /**\\n   * @method digest\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as bytes array\\n   * @returns {Array} Bytes array\\n   * @see {@link md5.digest}\\n   * @example\\n   * hash.digest();\\n   */\\n  Md5.prototype.digest = function () {\\n    this.finalize();\\n\\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\\n    return [\\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\\n    ];\\n  };\\n\\n  /**\\n   * @method array\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as bytes array\\n   * @returns {Array} Bytes array\\n   * @see {@link md5.array}\\n   * @example\\n   * hash.array();\\n   */\\n  Md5.prototype.array = Md5.prototype.digest;\\n\\n  /**\\n   * @method arrayBuffer\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as ArrayBuffer\\n   * @returns {ArrayBuffer} ArrayBuffer\\n   * @see {@link md5.arrayBuffer}\\n   * @example\\n   * hash.arrayBuffer();\\n   */\\n  Md5.prototype.arrayBuffer = function () {\\n    this.finalize();\\n\\n    var buffer = new ArrayBuffer(16);\\n    var blocks = new Uint32Array(buffer);\\n    blocks[0] = this.h0;\\n    blocks[1] = this.h1;\\n    blocks[2] = this.h2;\\n    blocks[3] = this.h3;\\n    return buffer;\\n  };\\n\\n  /**\\n   * @method buffer\\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as ArrayBuffer\\n   * @returns {ArrayBuffer} ArrayBuffer\\n   * @see {@link md5.buffer}\\n   * @example\\n   * hash.buffer();\\n   */\\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\\n\\n  /**\\n   * @method base64\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as base64 string\\n   * @returns {String} base64 string\\n   * @see {@link md5.base64}\\n   * @example\\n   * hash.base64();\\n   */\\n  Md5.prototype.base64 = function () {\\n    var v1, v2, v3, base64Str = '', bytes = this.array();\\n    for (var i = 0; i < 15;) {\\n      v1 = bytes[i++];\\n      v2 = bytes[i++];\\n      v3 = bytes[i++];\\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\\n        BASE64_ENCODE_CHAR[v3 & 63];\\n    }\\n    v1 = bytes[i];\\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\\n      '==';\\n    return base64Str;\\n  };\\n\\n  var exports = createMethod();\\n\\n  if (COMMON_JS) {\\n    module.exports = exports;\\n  } else {\\n    /**\\n     * @method md5\\b\\n     * @description Md5 hash function, export to global in browsers.\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n     * @returns {String} md5 hashes\\n     * @example\\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\\n     *\\n     * // It also supports UTF-8 encoding\\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\\n     *\\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\\n     */\\n    root.md5 = exports;\\n    if (AMD) {\\n      define(function () {\\n        return exports;\\n      });\\n    }\\n  }\\n})();\\n\",\"const RandomUtil = require('./RandomUtil');\\r\\n\\r\\n/**\\r\\n * from faker.js - Copyright (c) 2014-2015 Matthew Bergman & Marak Squires\\r\\n * MIT License\\r\\n * http://github.com/marak/faker.js/\\r\\n *\\r\\n * @const\\r\\n */\\r\\nconst names = [\\r\\n    'Aaliyah', 'Aaron', 'Abagail', 'Abbey', 'Abbie', 'Abbigail', 'Abby',\\r\\n    'Abdiel', 'Abdul', 'Abdullah', 'Abe', 'Abel', 'Abelardo', 'Abigail',\\r\\n    'Abigale', 'Abigayle', 'Abner', 'Abraham', 'Ada', 'Adah', 'Adalberto',\\r\\n    'Adaline', 'Adam', 'Adan', 'Addie', 'Addison', 'Adela', 'Adelbert', 'Adele',\\r\\n    'Adelia', 'Adeline', 'Adell', 'Adella', 'Adelle', 'Aditya', 'Adolf',\\r\\n    'Adolfo', 'Adolph', 'Adolphus', 'Adonis', 'Adrain', 'Adrian', 'Adriana',\\r\\n    'Adrianna', 'Adriel', 'Adrien', 'Adrienne', 'Afton', 'Aglae', 'Agnes',\\r\\n    'Agustin', 'Agustina', 'Ahmad', 'Ahmed', 'Aida', 'Aidan', 'Aiden', 'Aileen',\\r\\n    'Aisha', 'Aiyana', 'Akeem', 'Al', 'Alaina', 'Alan', 'Alana', 'Alanis',\\r\\n    'Alanna', 'Alayna', 'Alba', 'Albert', 'Alberta', 'Albertha', 'Alberto',\\r\\n    'Albin', 'Albina', 'Alda', 'Alden', 'Alec', 'Aleen', 'Alejandra',\\r\\n    'Alejandrin', 'Alek', 'Alena', 'Alene', 'Alessandra', 'Alessandro',\\r\\n    'Alessia', 'Aletha', 'Alex', 'Alexa', 'Alexander', 'Alexandra', 'Alexandre',\\r\\n    'Alexandrea', 'Alexandria', 'Alexandrine', 'Alexandro', 'Alexane',\\r\\n    'Alexanne', 'Alexie', 'Alexis', 'Alexys', 'Alexzander', 'Alf', 'Alfonso',\\r\\n    'Alfonzo', 'Alford', 'Alfred', 'Alfreda', 'Alfredo', 'Ali', 'Alia', 'Alice',\\r\\n    'Alicia', 'Alisa', 'Alisha', 'Alison', 'Alivia', 'Aliya', 'Aliyah', 'Aliza',\\r\\n    'Alize', 'Allan', 'Allen', 'Allene', 'Allie', 'Allison', 'Ally', 'Alphonso',\\r\\n    'Alta', 'Althea', 'Alva', 'Alvah', 'Alvena', 'Alvera', 'Alverta', 'Alvina',\\r\\n    'Alvis', 'Alyce', 'Alycia', 'Alysa', 'Alysha', 'Alyson', 'Alysson',\\r\\n    'Amalia', 'Amanda', 'Amani', 'Amara', 'Amari', 'Amaya', 'Amber', 'Ambrose',\\r\\n    'Amelia', 'Amelie', 'Amely', 'America', 'Americo', 'Amie', 'Amina', 'Amir',\\r\\n    'Amira', 'Amiya', 'Amos', 'Amparo', 'Amy', 'Amya', 'Ana', 'Anabel',\\r\\n    'Anabelle', 'Anahi', 'Anais', 'Anastacio', 'Anastasia', 'Anderson', 'Andre',\\r\\n    'Andreane', 'Andreanne', 'Andres', 'Andrew', 'Andy', 'Angel', 'Angela',\\r\\n    'Angelica', 'Angelina', 'Angeline', 'Angelita', 'Angelo', 'Angie', 'Angus',\\r\\n    'Anibal', 'Anika', 'Anissa', 'Anita', 'Aniya', 'Aniyah', 'Anjali', 'Anna',\\r\\n    'Annabel', 'Annabell', 'Annabelle', 'Annalise', 'Annamae', 'Annamarie',\\r\\n    'Anne', 'Annetta', 'Annette', 'Annie', 'Ansel', 'Ansley', 'Anthony',\\r\\n    'Antoinette', 'Antone', 'Antonetta', 'Antonette', 'Antonia', 'Antonietta',\\r\\n    'Antonina', 'Antonio', 'Antwan', 'Antwon', 'Anya', 'April', 'Ara',\\r\\n    'Araceli', 'Aracely', 'Arch', 'Archibald', 'Ardella', 'Arden', 'Ardith',\\r\\n    'Arely', 'Ari', 'Ariane', 'Arianna', 'Aric', 'Ariel', 'Arielle', 'Arjun',\\r\\n    'Arlene', 'Arlie', 'Arlo', 'Armand', 'Armando', 'Armani', 'Arnaldo', 'Arne',\\r\\n    'Arno', 'Arnold', 'Arnoldo', 'Arnulfo', 'Aron', 'Art', 'Arthur', 'Arturo',\\r\\n    'Arvel', 'Arvid', 'Arvilla', 'Aryanna', 'Asa', 'Asha', 'Ashlee', 'Ashleigh',\\r\\n    'Ashley', 'Ashly', 'Ashlynn', 'Ashton', 'Ashtyn', 'Asia', 'Assunta',\\r\\n    'Astrid', 'Athena', 'Aubree', 'Aubrey', 'Audie', 'Audra', 'Audreanne',\\r\\n    'Audrey', 'August', 'Augusta', 'Augustine', 'Augustus', 'Aurelia',\\r\\n    'Aurelie', 'Aurelio', 'Aurore', 'Austen', 'Austin', 'Austyn', 'Autumn',\\r\\n    'Ava', 'Avery', 'Avis', 'Axel', 'Ayana', 'Ayden', 'Ayla', 'Aylin', 'Baby',\\r\\n    'Bailee', 'Bailey', 'Barbara', 'Barney', 'Baron', 'Barrett', 'Barry',\\r\\n    'Bart', 'Bartholome', 'Barton', 'Baylee', 'Beatrice', 'Beau', 'Beaulah',\\r\\n    'Bell', 'Bella', 'Belle', 'Ben', 'Benedict', 'Benjamin', 'Bennett',\\r\\n    'Bennie', 'Benny', 'Benton', 'Berenice', 'Bernadette', 'Bernadine',\\r\\n    'Bernard', 'Bernardo', 'Berneice', 'Bernhard', 'Bernice', 'Bernie',\\r\\n    'Berniece', 'Bernita', 'Berry', 'Bert', 'Berta', 'Bertha', 'Bertram',\\r\\n    'Bertrand', 'Beryl', 'Bessie', 'Beth', 'Bethany', 'Bethel', 'Betsy',\\r\\n    'Bette', 'Bettie', 'Betty', 'Bettye', 'Beulah', 'Beverly', 'Bianka', 'Bill',\\r\\n    'Billie', 'Billy', 'Birdie', 'Blair', 'Blaise', 'Blake', 'Blanca',\\r\\n    'Blanche', 'Blaze', 'Bo', 'Bobbie', 'Bobby', 'Bonita', 'Bonnie', 'Boris',\\r\\n    'Boyd', 'Brad', 'Braden', 'Bradford', 'Bradley', 'Bradly', 'Brady',\\r\\n    'Braeden', 'Brain', 'Brandi', 'Brando', 'Brandon', 'Brandt', 'Brandy',\\r\\n    'Brandyn', 'Brannon', 'Branson', 'Brant', 'Braulio', 'Braxton', 'Brayan',\\r\\n    'Breana', 'Breanna', 'Breanne', 'Brenda', 'Brendan', 'Brenden', 'Brendon',\\r\\n    'Brenna', 'Brennan', 'Brennon', 'Brent', 'Bret', 'Brett', 'Bria', 'Brian',\\r\\n    'Briana', 'Brianne', 'Brice', 'Bridget', 'Bridgette', 'Bridie', 'Brielle',\\r\\n    'Brigitte', 'Brionna', 'Brisa', 'Britney', 'Brittany', 'Brock', 'Broderick',\\r\\n    'Brody', 'Brook', 'Brooke', 'Brooklyn', 'Brooks', 'Brown', 'Bruce',\\r\\n    'Bryana', 'Bryce', 'Brycen', 'Bryon', 'Buck', 'Bud', 'Buddy', 'Buford',\\r\\n    'Bulah', 'Burdette', 'Burley', 'Burnice', 'Buster', 'Cade', 'Caden',\\r\\n    'Caesar', 'Caitlyn', 'Cale', 'Caleb', 'Caleigh', 'Cali', 'Calista',\\r\\n    'Callie', 'Camden', 'Cameron', 'Camila', 'Camilla', 'Camille', 'Camren',\\r\\n    'Camron', 'Camryn', 'Camylle', 'Candace', 'Candelario', 'Candice',\\r\\n    'Candida', 'Candido', 'Cara', 'Carey', 'Carissa', 'Carlee', 'Carleton',\\r\\n    'Carley', 'Carli', 'Carlie', 'Carlo', 'Carlos', 'Carlotta', 'Carmel',\\r\\n    'Carmela', 'Carmella', 'Carmelo', 'Carmen', 'Carmine', 'Carol', 'Carolanne',\\r\\n    'Carole', 'Carolina', 'Caroline', 'Carolyn', 'Carolyne', 'Carrie',\\r\\n    'Carroll', 'Carson', 'Carter', 'Cary', 'Casandra', 'Casey', 'Casimer',\\r\\n    'Casimir', 'Casper', 'Cassandra', 'Cassandre', 'Cassidy', 'Cassie',\\r\\n    'Catalina', 'Caterina', 'Catharine', 'Catherine', 'Cathrine', 'Cathryn',\\r\\n    'Cathy', 'Cayla', 'Ceasar', 'Cecelia', 'Cecil', 'Cecile', 'Cecilia',\\r\\n    'Cedrick', 'Celestine', 'Celestino', 'Celia', 'Celine', 'Cesar', 'Chad',\\r\\n    'Chadd', 'Chadrick', 'Chaim', 'Chance', 'Chandler', 'Chanel', 'Chanelle',\\r\\n    'Charity', 'Charlene', 'Charles', 'Charley', 'Charlie', 'Charlotte',\\r\\n    'Chase', 'Chasity', 'Chauncey', 'Chaya', 'Chaz', 'Chelsea', 'Chelsey',\\r\\n    'Chelsie', 'Chesley', 'Chester', 'Chet', 'Cheyanne', 'Cheyenne', 'Chloe',\\r\\n    'Chris', 'Christ', 'Christa', 'Christelle', 'Christian', 'Christiana',\\r\\n    'Christina', 'Christine', 'Christop', 'Christophe', 'Christopher',\\r\\n    'Christy', 'Chyna', 'Ciara', 'Cicero', 'Cielo', 'Cierra', 'Cindy',\\r\\n    'Citlalli', 'Clair', 'Claire', 'Clara', 'Clarabelle', 'Clare', 'Clarissa',\\r\\n    'Clark', 'Claud', 'Claude', 'Claudia', 'Claudie', 'Claudine', 'Clay',\\r\\n    'Clemens', 'Clement', 'Clementina', 'Clementine', 'Clemmie', 'Cleo',\\r\\n    'Cleora', 'Cleta', 'Cletus', 'Cleve', 'Cleveland', 'Clifford', 'Clifton',\\r\\n    'Clint', 'Clinton', 'Clotilde', 'Clovis', 'Cloyd', 'Clyde', 'Coby', 'Cody',\\r\\n    'Colby', 'Cole', 'Coleman', 'Colin', 'Colleen', 'Collin', 'Colt', 'Colten',\\r\\n    'Colton', 'Columbus', 'Concepcion', 'Conner', 'Connie', 'Connor', 'Conor',\\r\\n    'Conrad', 'Constance', 'Constantin', 'Consuelo', 'Cooper', 'Cora',\\r\\n    'Coralie', 'Corbin', 'Cordelia', 'Cordell', 'Cordia', 'Cordie', 'Corene',\\r\\n    'Corine', 'Cornelius', 'Cornell', 'Corrine', 'Cortez', 'Cortney', 'Cory',\\r\\n    'Coty', 'Courtney', 'Coy', 'Craig', 'Crawford', 'Creola', 'Cristal',\\r\\n    'Cristian', 'Cristina', 'Cristobal', 'Cristopher', 'Cruz', 'Crystal',\\r\\n    'Crystel', 'Cullen', 'Curt', 'Curtis', 'Cydney', 'Cynthia', 'Cyril',\\r\\n    'Cyrus', 'Dagmar', 'Dahlia', 'Daija', 'Daisha', 'Daisy', 'Dakota', 'Dale',\\r\\n    'Dallas', 'Dallin', 'Dalton', 'Damaris', 'Dameon', 'Damian', 'Damien',\\r\\n    'Damion', 'Damon', 'Dan', 'Dana', 'Dandre', 'Dane', 'D\\\\'angelo', 'Dangelo',\\r\\n    'Danial', 'Daniela', 'Daniella', 'Danielle', 'Danika', 'Dannie', 'Danny',\\r\\n    'Dante', 'Danyka', 'Daphne', 'Daphnee', 'Daphney', 'Darby', 'Daren',\\r\\n    'Darian', 'Dariana', 'Darien', 'Dario', 'Darion', 'Darius', 'Darlene',\\r\\n    'Daron', 'Darrel', 'Darrell', 'Darren', 'Darrick', 'Darrin', 'Darrion',\\r\\n    'Darron', 'Darryl', 'Darwin', 'Daryl', 'Dashawn', 'Dasia', 'Dave', 'David',\\r\\n    'Davin', 'Davion', 'Davon', 'Davonte', 'Dawn', 'Dawson', 'Dax', 'Dayana',\\r\\n    'Dayna', 'Dayne', 'Dayton', 'Dean', 'Deangelo', 'Deanna', 'Deborah',\\r\\n    'Declan', 'Dedric', 'Dedrick', 'Dee', 'Deion', 'Deja', 'Dejah', 'Dejon',\\r\\n    'Dejuan', 'Delaney', 'Delbert', 'Delfina', 'Delia', 'Delilah', 'Dell',\\r\\n    'Della', 'Delmer', 'Delores', 'Delpha', 'Delphia', 'Delphine', 'Delta',\\r\\n    'Demarco', 'Demarcus', 'Demario', 'Demetris', 'Demetrius', 'Demond', 'Dena',\\r\\n    'Denis', 'Dennis', 'Deon', 'Deondre', 'Deontae', 'Deonte', 'Dereck',\\r\\n    'Derek', 'Derick', 'Deron', 'Derrick', 'Deshaun', 'Deshawn', 'Desiree',\\r\\n    'Desmond', 'Dessie', 'Destany', 'Destin', 'Destinee', 'Destiney', 'Destini',\\r\\n    'Destiny', 'Devan', 'Devante', 'Deven', 'Devin', 'Devon', 'Devonte',\\r\\n    'Devyn', 'Dewayne', 'Dewitt', 'Dexter', 'Diamond', 'Diana', 'Dianna',\\r\\n    'Diego', 'Dillan', 'Dillon', 'Dimitri', 'Dina', 'Dino', 'Dion', 'Dixie',\\r\\n    'Dock', 'Dolly', 'Dolores', 'Domenic', 'Domenica', 'Domenick', 'Domenico',\\r\\n    'Domingo', 'Dominic', 'Dominique', 'Don', 'Donald', 'Donato', 'Donavon',\\r\\n    'Donna', 'Donnell', 'Donnie', 'Donny', 'Dora', 'Dorcas', 'Dorian', 'Doris',\\r\\n    'Dorothea', 'Dorothy', 'Dorris', 'Dortha', 'Dorthy', 'Doug', 'Douglas',\\r\\n    'Dovie', 'Doyle', 'Drake', 'Drew', 'Duane', 'Dudley', 'Dulce', 'Duncan',\\r\\n    'Durward', 'Dustin', 'Dusty', 'Dwight', 'Dylan', 'Earl', 'Earlene',\\r\\n    'Earline', 'Earnest', 'Earnestine', 'Easter', 'Easton', 'Ebba', 'Ebony',\\r\\n    'Ed', 'Eda', 'Edd', 'Eddie', 'Eden', 'Edgar', 'Edgardo', 'Edison', 'Edmond',\\r\\n    'Edmund', 'Edna', 'Eduardo', 'Edward', 'Edwardo', 'Edwin', 'Edwina',\\r\\n    'Edyth', 'Edythe', 'Effie', 'Efrain', 'Efren', 'Eileen', 'Einar', 'Eino',\\r\\n    'Eladio', 'Elaina', 'Elbert', 'Elda', 'Eldon', 'Eldora', 'Eldred',\\r\\n    'Eldridge', 'Eleanora', 'Eleanore', 'Eleazar', 'Electa', 'Elena', 'Elenor',\\r\\n    'Elenora', 'Eleonore', 'Elfrieda', 'Eli', 'Elian', 'Eliane', 'Elias',\\r\\n    'Eliezer', 'Elijah', 'Elinor', 'Elinore', 'Elisa', 'Elisabeth', 'Elise',\\r\\n    'Eliseo', 'Elisha', 'Elissa', 'Eliza', 'Elizabeth', 'Ella', 'Ellen',\\r\\n    'Ellie', 'Elliot', 'Elliott', 'Ellis', 'Ellsworth', 'Elmer', 'Elmira',\\r\\n    'Elmo', 'Elmore', 'Elna', 'Elnora', 'Elody', 'Eloisa', 'Eloise', 'Elouise',\\r\\n    'Eloy', 'Elroy', 'Elsa', 'Else', 'Elsie', 'Elta', 'Elton', 'Elva', 'Elvera',\\r\\n    'Elvie', 'Elvis', 'Elwin', 'Elwyn', 'Elyse', 'Elyssa', 'Elza', 'Emanuel',\\r\\n    'Emelia', 'Emelie', 'Emely', 'Emerald', 'Emerson', 'Emery', 'Emie', 'Emil',\\r\\n    'Emile', 'Emilia', 'Emiliano', 'Emilie', 'Emilio', 'Emily', 'Emma',\\r\\n    'Emmalee', 'Emmanuel', 'Emmanuelle', 'Emmet', 'Emmett', 'Emmie', 'Emmitt',\\r\\n    'Emmy', 'Emory', 'Ena', 'Enid', 'Enoch', 'Enola', 'Enos', 'Enrico',\\r\\n    'Enrique', 'Ephraim', 'Era', 'Eriberto', 'Eric', 'Erica', 'Erich', 'Erick',\\r\\n    'Ericka', 'Erik', 'Erika', 'Erin', 'Erling', 'Erna', 'Ernest', 'Ernestina',\\r\\n    'Ernestine', 'Ernesto', 'Ernie', 'Ervin', 'Erwin', 'Eryn', 'Esmeralda',\\r\\n    'Esperanza', 'Esta', 'Esteban', 'Estefania', 'Estel', 'Estell', 'Estella',\\r\\n    'Estelle', 'Estevan', 'Esther', 'Estrella', 'Etha', 'Ethan', 'Ethel',\\r\\n    'Ethelyn', 'Ethyl', 'Ettie', 'Eudora', 'Eugene', 'Eugenia', 'Eula', 'Eulah',\\r\\n    'Eulalia', 'Euna', 'Eunice', 'Eusebio', 'Eva', 'Evalyn', 'Evan',\\r\\n    'Evangeline', 'Evans', 'Eve', 'Eveline', 'Evelyn', 'Everardo', 'Everett',\\r\\n    'Everette', 'Evert', 'Evie', 'Ewald', 'Ewell', 'Ezekiel', 'Ezequiel',\\r\\n    'Ezra', 'Fabian', 'Fabiola', 'Fae', 'Fannie', 'Fanny', 'Fatima', 'Faustino',\\r\\n    'Fausto', 'Favian', 'Fay', 'Faye', 'Federico', 'Felicia', 'Felicita',\\r\\n    'Felicity', 'Felipa', 'Felipe', 'Felix', 'Felton', 'Fermin', 'Fern',\\r\\n    'Fernando', 'Ferne', 'Fidel', 'Filiberto', 'Filomena', 'Finn', 'Fiona',\\r\\n    'Flavie', 'Flavio', 'Fleta', 'Fletcher', 'Flo', 'Florence', 'Florencio',\\r\\n    'Florian', 'Florida', 'Florine', 'Flossie', 'Floy', 'Floyd', 'Ford',\\r\\n    'Forest', 'Forrest', 'Foster', 'Frances', 'Francesca', 'Francesco',\\r\\n    'Francis', 'Francisca', 'Francisco', 'Franco', 'Frank', 'Frankie', 'Franz',\\r\\n    'Fred', 'Freda', 'Freddie', 'Freddy', 'Frederic', 'Frederick', 'Frederik',\\r\\n    'Frederique', 'Fredrick', 'Fredy', 'Freeda', 'Freeman', 'Freida', 'Frida',\\r\\n    'Frieda', 'Friedrich', 'Fritz', 'Furman', 'Gabe', 'Gabriel', 'Gabriella',\\r\\n    'Gabrielle', 'Gaetano', 'Gage', 'Gail', 'Gardner', 'Garett', 'Garfield',\\r\\n    'Garland', 'Garnet', 'Garnett', 'Garret', 'Garrett', 'Garrick', 'Garrison',\\r\\n    'Garry', 'Garth', 'Gaston', 'Gavin', 'Gay', 'Gayle', 'Gaylord', 'Gene',\\r\\n    'General', 'Genesis', 'Genevieve', 'Gennaro', 'Genoveva', 'Geo', 'Geoffrey',\\r\\n    'George', 'Georgette', 'Georgiana', 'Georgianna', 'Geovanni', 'Geovanny',\\r\\n    'Geovany', 'Gerald', 'Geraldine', 'Gerard', 'Gerardo', 'Gerda', 'Gerhard',\\r\\n    'Germaine', 'German', 'Gerry', 'Gerson', 'Gertrude', 'Gia', 'Gianni',\\r\\n    'Gideon', 'Gilbert', 'Gilberto', 'Gilda', 'Giles', 'Gillian', 'Gina',\\r\\n    'Gino', 'Giovani', 'Giovanna', 'Giovanni', 'Giovanny', 'Gisselle',\\r\\n    'Giuseppe', 'Gladyce', 'Gladys', 'Glen', 'Glenda', 'Glenna', 'Glennie',\\r\\n    'Gloria', 'Godfrey', 'Golda', 'Golden', 'Gonzalo', 'Gordon', 'Grace',\\r\\n    'Gracie', 'Graciela', 'Grady', 'Graham', 'Grant', 'Granville', 'Grayce',\\r\\n    'Grayson', 'Green', 'Greg', 'Gregg', 'Gregoria', 'Gregorio', 'Gregory',\\r\\n    'Greta', 'Gretchen', 'Greyson', 'Griffin', 'Grover', 'Guadalupe', 'Gudrun',\\r\\n    'Guido', 'Guillermo', 'Guiseppe', 'Gunnar', 'Gunner', 'Gus', 'Gussie',\\r\\n    'Gust', 'Gustave', 'Guy', 'Gwen', 'Gwendolyn', 'Hadley', 'Hailee', 'Hailey',\\r\\n    'Hailie', 'Hal', 'Haleigh', 'Haley', 'Halie', 'Halle', 'Hallie', 'Hank',\\r\\n    'Hanna', 'Hannah', 'Hans', 'Hardy', 'Harley', 'Harmon', 'Harmony', 'Harold',\\r\\n    'Harrison', 'Harry', 'Harvey', 'Haskell', 'Hassan', 'Hassie', 'Hattie',\\r\\n    'Haven', 'Hayden', 'Haylee', 'Hayley', 'Haylie', 'Hazel', 'Hazle', 'Heath',\\r\\n    'Heather', 'Heaven', 'Heber', 'Hector', 'Heidi', 'Helen', 'Helena',\\r\\n    'Helene', 'Helga', 'Hellen', 'Helmer', 'Heloise', 'Henderson', 'Henri',\\r\\n    'Henriette', 'Henry', 'Herbert', 'Herman', 'Hermann', 'Hermina', 'Herminia',\\r\\n    'Herminio', 'Hershel', 'Herta', 'Hertha', 'Hester', 'Hettie', 'Hilario',\\r\\n    'Hilbert', 'Hilda', 'Hildegard', 'Hillard', 'Hillary', 'Hilma', 'Hilton',\\r\\n    'Hipolito', 'Hiram', 'Hobart', 'Holden', 'Hollie', 'Hollis', 'Holly',\\r\\n    'Hope', 'Horace', 'Horacio', 'Hortense', 'Hosea', 'Houston', 'Howard',\\r\\n    'Howell', 'Hoyt', 'Hubert', 'Hudson', 'Hugh', 'Hulda', 'Humberto', 'Hunter',\\r\\n    'Hyman', 'Ian', 'Ibrahim', 'Icie', 'Ida', 'Idell', 'Idella', 'Ignacio',\\r\\n    'Ignatius', 'Ike', 'Ila', 'Ilene', 'Iliana', 'Ima', 'Imani', 'Imelda',\\r\\n    'Immanuel', 'Imogene', 'Ines', 'Irma', 'Irving', 'Irwin', 'Isaac', 'Isabel',\\r\\n    'Isabell', 'Isabella', 'Isabelle', 'Isac', 'Isadore', 'Isai', 'Isaiah',\\r\\n    'Isaias', 'Isidro', 'Ismael', 'Isobel', 'Isom', 'Israel', 'Issac', 'Itzel',\\r\\n    'Iva', 'Ivah', 'Ivory', 'Ivy', 'Izabella', 'Izaiah', 'Jabari', 'Jace',\\r\\n    'Jacey', 'Jacinthe', 'Jacinto', 'Jack', 'Jackeline', 'Jackie', 'Jacklyn',\\r\\n    'Jackson', 'Jacky', 'Jaclyn', 'Jacquelyn', 'Jacques', 'Jacynthe', 'Jada',\\r\\n    'Jade', 'Jaden', 'Jadon', 'Jadyn', 'Jaeden', 'Jaida', 'Jaiden', 'Jailyn',\\r\\n    'Jaime', 'Jairo', 'Jakayla', 'Jake', 'Jakob', 'Jaleel', 'Jalen', 'Jalon',\\r\\n    'Jalyn', 'Jamaal', 'Jamal', 'Jamar', 'Jamarcus', 'Jamel', 'Jameson',\\r\\n    'Jamey', 'Jamie', 'Jamil', 'Jamir', 'Jamison', 'Jammie', 'Jan', 'Jana',\\r\\n    'Janae', 'Jane', 'Janelle', 'Janessa', 'Janet', 'Janice', 'Janick', 'Janie',\\r\\n    'Janis', 'Janiya', 'Jannie', 'Jany', 'Jaquan', 'Jaquelin', 'Jaqueline',\\r\\n    'Jared', 'Jaren', 'Jarod', 'Jaron', 'Jarred', 'Jarrell', 'Jarret',\\r\\n    'Jarrett', 'Jarrod', 'Jarvis', 'Jasen', 'Jasmin', 'Jason', 'Jasper',\\r\\n    'Jaunita', 'Javier', 'Javon', 'Javonte', 'Jay', 'Jayce', 'Jaycee', 'Jayda',\\r\\n    'Jayde', 'Jayden', 'Jaydon', 'Jaylan', 'Jaylen', 'Jaylin', 'Jaylon',\\r\\n    'Jayme', 'Jayne', 'Jayson', 'Jazlyn', 'Jazmin', 'Jazmyn', 'Jazmyne', 'Jean',\\r\\n    'Jeanette', 'Jeanie', 'Jeanne', 'Jed', 'Jedediah', 'Jedidiah', 'Jeff',\\r\\n    'Jefferey', 'Jeffery', 'Jeffrey', 'Jeffry', 'Jena', 'Jenifer', 'Jennie',\\r\\n    'Jennifer', 'Jennings', 'Jennyfer', 'Jensen', 'Jerad', 'Jerald', 'Jeramie',\\r\\n    'Jeramy', 'Jerel', 'Jeremie', 'Jeremy', 'Jermain', 'Jermaine', 'Jermey',\\r\\n    'Jerod', 'Jerome', 'Jeromy', 'Jerrell', 'Jerrod', 'Jerrold', 'Jerry',\\r\\n    'Jess', 'Jesse', 'Jessica', 'Jessie', 'Jessika', 'Jessy', 'Jessyca',\\r\\n    'Jesus', 'Jett', 'Jettie', 'Jevon', 'Jewel', 'Jewell', 'Jillian', 'Jimmie',\\r\\n    'Jimmy', 'Jo', 'Joan', 'Joana', 'Joanie', 'Joanne', 'Joannie', 'Joanny',\\r\\n    'Joany', 'Joaquin', 'Jocelyn', 'Jodie', 'Jody', 'Joe', 'Joel', 'Joelle',\\r\\n    'Joesph', 'Joey', 'Johan', 'Johann', 'Johanna', 'Johathan', 'John',\\r\\n    'Johnathan', 'Johnathon', 'Johnnie', 'Johnny', 'Johnpaul', 'Johnson',\\r\\n    'Jolie', 'Jon', 'Jonas', 'Jonatan', 'Jonathan', 'Jonathon', 'Jordan',\\r\\n    'Jordane', 'Jordi', 'Jordon', 'Jordy', 'Jordyn', 'Jorge', 'Jose', 'Josefa',\\r\\n    'Josefina', 'Joseph', 'Josephine', 'Josh', 'Joshua', 'Joshuah', 'Josiah',\\r\\n    'Josiane', 'Josianne', 'Josie', 'Josue', 'Jovan', 'Jovani', 'Jovanny',\\r\\n    'Jovany', 'Joy', 'Joyce', 'Juana', 'Juanita', 'Judah', 'Judd', 'Jude',\\r\\n    'Judge', 'Judson', 'Judy', 'Jules', 'Julia', 'Julian', 'Juliana',\\r\\n    'Julianne', 'Julie', 'Julien', 'Juliet', 'Julio', 'Julius', 'June',\\r\\n    'Junior', 'Junius', 'Justen', 'Justice', 'Justina', 'Justine', 'Juston',\\r\\n    'Justus', 'Justyn', 'Juvenal', 'Juwan', 'Kacey', 'Kaci', 'Kacie', 'Kade',\\r\\n    'Kaden', 'Kadin', 'Kaela', 'Kaelyn', 'Kaia', 'Kailee', 'Kailey', 'Kailyn',\\r\\n    'Kaitlin', 'Kaitlyn', 'Kale', 'Kaleb', 'Kaleigh', 'Kaley', 'Kali', 'Kallie',\\r\\n    'Kameron', 'Kamille', 'Kamren', 'Kamron', 'Kamryn', 'Kane', 'Kara',\\r\\n    'Kareem', 'Karelle', 'Karen', 'Kari', 'Kariane', 'Karianne', 'Karina',\\r\\n    'Karine', 'Karl', 'Karlee', 'Karley', 'Karli', 'Karlie', 'Karolann',\\r\\n    'Karson', 'Kasandra', 'Kasey', 'Kassandra', 'Katarina', 'Katelin',\\r\\n    'Katelyn', 'Katelynn', 'Katharina', 'Katherine', 'Katheryn', 'Kathleen',\\r\\n    'Kathlyn', 'Kathryn', 'Kathryne', 'Katlyn', 'Katlynn', 'Katrina', 'Katrine',\\r\\n    'Kattie', 'Kavon', 'Kay', 'Kaya', 'Kaycee', 'Kayden', 'Kayla', 'Kaylah',\\r\\n    'Kaylee', 'Kayleigh', 'Kayley', 'Kayli', 'Kaylie', 'Kaylin', 'Keagan',\\r\\n    'Keanu', 'Keara', 'Keaton', 'Keegan', 'Keeley', 'Keely', 'Keenan', 'Keira',\\r\\n    'Keith', 'Kellen', 'Kelley', 'Kelli', 'Kellie', 'Kelly', 'Kelsi', 'Kelsie',\\r\\n    'Kelton', 'Kelvin', 'Ken', 'Kendall', 'Kendra', 'Kendrick', 'Kenna',\\r\\n    'Kennedi', 'Kennedy', 'Kenneth', 'Kennith', 'Kenny', 'Kenton', 'Kenya',\\r\\n    'Kenyatta', 'Kenyon', 'Keon', 'Keshaun', 'Keshawn', 'Keven', 'Kevin',\\r\\n    'Kevon', 'Keyon', 'Keyshawn', 'Khalid', 'Khalil', 'Kian', 'Kiana', 'Kianna',\\r\\n    'Kiara', 'Kiarra', 'Kiel', 'Kiera', 'Kieran', 'Kiley', 'Kim', 'Kimberly',\\r\\n    'King', 'Kip', 'Kira', 'Kirk', 'Kirsten', 'Kirstin', 'Kitty', 'Kobe',\\r\\n    'Koby', 'Kody', 'Kolby', 'Kole', 'Korbin', 'Korey', 'Kory', 'Kraig', 'Kris',\\r\\n    'Krista', 'Kristian', 'Kristin', 'Kristina', 'Kristofer', 'Kristoffer',\\r\\n    'Kristopher', 'Kristy', 'Krystal', 'Krystel', 'Krystina', 'Kurt', 'Kurtis',\\r\\n    'Kyla', 'Kyle', 'Kylee', 'Kyleigh', 'Kyler', 'Kylie', 'Kyra', 'Lacey',\\r\\n    'Lacy', 'Ladarius', 'Lafayette', 'Laila', 'Laisha', 'Lamar', 'Lambert',\\r\\n    'Lamont', 'Lance', 'Landen', 'Lane', 'Laney', 'Larissa', 'Laron', 'Larry',\\r\\n    'Larue', 'Laura', 'Laurel', 'Lauren', 'Laurence', 'Lauretta', 'Lauriane',\\r\\n    'Laurianne', 'Laurie', 'Laurine', 'Laury', 'Lauryn', 'Lavada', 'Lavern',\\r\\n    'Laverna', 'Laverne', 'Lavina', 'Lavinia', 'Lavon', 'Lavonne', 'Lawrence',\\r\\n    'Lawson', 'Layla', 'Layne', 'Lazaro', 'Lea', 'Leann', 'Leanna', 'Leanne',\\r\\n    'Leatha', 'Leda', 'Lee', 'Leif', 'Leila', 'Leilani', 'Lela', 'Lelah',\\r\\n    'Leland', 'Lelia', 'Lempi', 'Lemuel', 'Lenna', 'Lennie', 'Lenny', 'Lenora',\\r\\n    'Lenore', 'Leo', 'Leola', 'Leon', 'Leonard', 'Leonardo', 'Leone', 'Leonel',\\r\\n    'Leonie', 'Leonor', 'Leonora', 'Leopold', 'Leopoldo', 'Leora', 'Lera',\\r\\n    'Lesley', 'Leslie', 'Lesly', 'Lessie', 'Lester', 'Leta', 'Letha', 'Letitia',\\r\\n    'Levi', 'Lew', 'Lewis', 'Lexi', 'Lexie', 'Lexus', 'Lia', 'Liam', 'Liana',\\r\\n    'Libbie', 'Libby', 'Lila', 'Lilian', 'Liliana', 'Liliane', 'Lilla',\\r\\n    'Lillian', 'Lilliana', 'Lillie', 'Lilly', 'Lily', 'Lilyan', 'Lina',\\r\\n    'Lincoln', 'Linda', 'Lindsay', 'Lindsey', 'Linnea', 'Linnie', 'Linwood',\\r\\n    'Lionel', 'Lisa', 'Lisandro', 'Lisette', 'Litzy', 'Liza', 'Lizeth',\\r\\n    'Lizzie', 'Llewellyn', 'Lloyd', 'Logan', 'Lois', 'Lola', 'Lolita', 'Loma',\\r\\n    'Lon', 'London', 'Lonie', 'Lonnie', 'Lonny', 'Lonzo', 'Lora', 'Loraine',\\r\\n    'Loren', 'Lorena', 'Lorenz', 'Lorenza', 'Lorenzo', 'Lori', 'Lorine',\\r\\n    'Lorna', 'Lottie', 'Lou', 'Louie', 'Louisa', 'Lourdes', 'Louvenia',\\r\\n    'Lowell', 'Loy', 'Loyal', 'Loyce', 'Lucas', 'Luciano', 'Lucie', 'Lucienne',\\r\\n    'Lucile', 'Lucinda', 'Lucio', 'Lucious', 'Lucius', 'Lucy', 'Ludie',\\r\\n    'Ludwig', 'Lue', 'Luella', 'Luigi', 'Luis', 'Luisa', 'Lukas', 'Lula',\\r\\n    'Lulu', 'Luna', 'Lupe', 'Lura', 'Lurline', 'Luther', 'Luz', 'Lyda', 'Lydia',\\r\\n    'Lyla', 'Lynn', 'Lyric', 'Lysanne', 'Mabel', 'Mabelle', 'Mable', 'Mac',\\r\\n    'Macey', 'Maci', 'Macie', 'Mack', 'Mackenzie', 'Macy', 'Madaline',\\r\\n    'Madalyn', 'Maddison', 'Madeline', 'Madelyn', 'Madelynn', 'Madge', 'Madie',\\r\\n    'Madilyn', 'Madisen', 'Madison', 'Madisyn', 'Madonna', 'Madyson', 'Mae',\\r\\n    'Maegan', 'Maeve', 'Mafalda', 'Magali', 'Magdalen', 'Magdalena', 'Maggie',\\r\\n    'Magnolia', 'Magnus', 'Maia', 'Maida', 'Maiya', 'Major', 'Makayla',\\r\\n    'Makenna', 'Makenzie', 'Malachi', 'Malcolm', 'Malika', 'Malinda', 'Mallie',\\r\\n    'Mallory', 'Malvina', 'Mandy', 'Manley', 'Manuel', 'Manuela', 'Mara',\\r\\n    'Marc', 'Marcel', 'Marcelina', 'Marcelino', 'Marcella', 'Marcelle',\\r\\n    'Marcellus', 'Marcelo', 'Marcia', 'Marco', 'Marcos', 'Marcus', 'Margaret',\\r\\n    'Margarete', 'Margarett', 'Margaretta', 'Margarette', 'Margarita', 'Marge',\\r\\n    'Margie', 'Margot', 'Margret', 'Marguerite', 'Maria', 'Mariah', 'Mariam',\\r\\n    'Marian', 'Mariana', 'Mariane', 'Marianna', 'Marianne', 'Mariano',\\r\\n    'Maribel', 'Marie', 'Mariela', 'Marielle', 'Marietta', 'Marilie', 'Marilou',\\r\\n    'Marilyne', 'Marina', 'Mario', 'Marion', 'Marisa', 'Marisol', 'Maritza',\\r\\n    'Marjolaine', 'Marjorie', 'Marjory', 'Mark', 'Markus', 'Marlee', 'Marlen',\\r\\n    'Marlene', 'Marley', 'Marlin', 'Marlon', 'Marques', 'Marquis', 'Marquise',\\r\\n    'Marshall', 'Marta', 'Martin', 'Martina', 'Martine', 'Marty', 'Marvin',\\r\\n    'Mary', 'Maryam', 'Maryjane', 'Maryse', 'Mason', 'Mateo', 'Mathew',\\r\\n    'Mathias', 'Mathilde', 'Matilda', 'Matilde', 'Matt', 'Matteo', 'Mattie',\\r\\n    'Maud', 'Maude', 'Maudie', 'Maureen', 'Maurice', 'Mauricio', 'Maurine',\\r\\n    'Maverick', 'Mavis', 'Max', 'Maxie', 'Maxime', 'Maximilian', 'Maximillia',\\r\\n    'Maximillian', 'Maximo', 'Maximus', 'Maxine', 'Maxwell', 'May', 'Maya',\\r\\n    'Maybell', 'Maybelle', 'Maye', 'Maymie', 'Maynard', 'Mayra', 'Mazie',\\r\\n    'Mckayla', 'Mckenna', 'Mckenzie', 'Meagan', 'Meaghan', 'Meda', 'Megane',\\r\\n    'Meggie', 'Meghan', 'Mekhi', 'Melany', 'Melba', 'Melisa', 'Melissa',\\r\\n    'Mellie', 'Melody', 'Melvin', 'Melvina', 'Melyna', 'Melyssa', 'Mercedes',\\r\\n    'Meredith', 'Merl', 'Merle', 'Merlin', 'Merritt', 'Mertie', 'Mervin',\\r\\n    'Meta', 'Mia', 'Micaela', 'Micah', 'Michael', 'Michaela', 'Michale',\\r\\n    'Micheal', 'Michel', 'Michele', 'Michelle', 'Miguel', 'Mikayla', 'Mike',\\r\\n    'Mikel', 'Milan', 'Miles', 'Milford', 'Miller', 'Millie', 'Milo', 'Milton',\\r\\n    'Mina', 'Minerva', 'Minnie', 'Miracle', 'Mireille', 'Mireya', 'Misael',\\r\\n    'Missouri', 'Misty', 'Mitchel', 'Mitchell', 'Mittie', 'Modesta', 'Modesto',\\r\\n    'Mohamed', 'Mohammad', 'Mohammed', 'Moises', 'Mollie', 'Molly', 'Mona',\\r\\n    'Monica', 'Monique', 'Monroe', 'Monserrat', 'Monserrate', 'Montana',\\r\\n    'Monte', 'Monty', 'Morgan', 'Moriah', 'Morris', 'Mortimer', 'Morton',\\r\\n    'Mose', 'Moses', 'Moshe', 'Mossie', 'Mozell', 'Mozelle', 'Muhammad',\\r\\n    'Muriel', 'Murl', 'Murphy', 'Murray', 'Mustafa', 'Mya', 'Myah', 'Mylene',\\r\\n    'Myles', 'Myra', 'Myriam', 'Myrl', 'Myrna', 'Myron', 'Myrtice', 'Myrtie',\\r\\n    'Myrtis', 'Myrtle', 'Nadia', 'Nakia', 'Name', 'Nannie', 'Naomi', 'Naomie',\\r\\n    'Napoleon', 'Narciso', 'Nash', 'Nasir', 'Nat', 'Natalia', 'Natalie',\\r\\n    'Natasha', 'Nathan', 'Nathanael', 'Nathanial', 'Nathaniel', 'Nathen',\\r\\n    'Nayeli', 'Neal', 'Ned', 'Nedra', 'Neha', 'Neil', 'Nelda', 'Nella', 'Nelle',\\r\\n    'Nellie', 'Nels', 'Nelson', 'Neoma', 'Nestor', 'Nettie', 'Neva', 'Newell',\\r\\n    'Newton', 'Nia', 'Nicholas', 'Nicholaus', 'Nichole', 'Nick', 'Nicklaus',\\r\\n    'Nickolas', 'Nico', 'Nicola', 'Nicolas', 'Nicole', 'Nicolette', 'Nigel',\\r\\n    'Nikita', 'Nikki', 'Nikko', 'Niko', 'Nikolas', 'Nils', 'Nina', 'Noah',\\r\\n    'Noble', 'Noe', 'Noel', 'Noelia', 'Noemi', 'Noemie', 'Noemy', 'Nola',\\r\\n    'Nolan', 'Nona', 'Nora', 'Norbert', 'Norberto', 'Norene', 'Norma', 'Norris',\\r\\n    'Norval', 'Norwood', 'Nova', 'Novella', 'Nya', 'Nyah', 'Nyasia', 'Obie',\\r\\n    'Oceane', 'Ocie', 'Octavia', 'Oda', 'Odell', 'Odessa', 'Odie', 'Ofelia',\\r\\n    'Okey', 'Ola', 'Olaf', 'Ole', 'Olen', 'Oleta', 'Olga', 'Olin', 'Oliver',\\r\\n    'Ollie', 'Oma', 'Omari', 'Omer', 'Ona', 'Onie', 'Opal', 'Ophelia', 'Ora',\\r\\n    'Oral', 'Oran', 'Oren', 'Orie', 'Orin', 'Orion', 'Orland', 'Orlando',\\r\\n    'Orlo', 'Orpha', 'Orrin', 'Orval', 'Orville', 'Osbaldo', 'Osborne', 'Oscar',\\r\\n    'Osvaldo', 'Oswald', 'Oswaldo', 'Otha', 'Otho', 'Otilia', 'Otis', 'Ottilie',\\r\\n    'Ottis', 'Otto', 'Ova', 'Owen', 'Ozella', 'Pablo', 'Paige', 'Palma',\\r\\n    'Pamela', 'Pansy', 'Paolo', 'Paris', 'Parker', 'Pascale', 'Pasquale', 'Pat',\\r\\n    'Patience', 'Patricia', 'Patrick', 'Patsy', 'Pattie', 'Paul', 'Paula',\\r\\n    'Pauline', 'Paxton', 'Payton', 'Pearl', 'Pearlie', 'Pearline', 'Pedro',\\r\\n    'Peggie', 'Penelope', 'Percival', 'Percy', 'Perry', 'Pete', 'Peter',\\r\\n    'Petra', 'Peyton', 'Philip', 'Phoebe', 'Phyllis', 'Pierce', 'Pierre',\\r\\n    'Pietro', 'Pink', 'Pinkie', 'Piper', 'Polly', 'Porter', 'Precious',\\r\\n    'Presley', 'Preston', 'Price', 'Prince', 'Princess', 'Priscilla',\\r\\n    'Providenci', 'Prudence', 'Queen', 'Queenie', 'Quentin', 'Quincy', 'Quinn',\\r\\n    'Quinten', 'Quinton', 'Rachael', 'Rachel', 'Rachelle', 'Rae', 'Raegan',\\r\\n    'Rafael', 'Rafaela', 'Raheem', 'Rahsaan', 'Rahul', 'Raina', 'Raleigh',\\r\\n    'Ralph', 'Ramiro', 'Ramon', 'Ramona', 'Randal', 'Randall', 'Randi', 'Randy',\\r\\n    'Ransom', 'Raoul', 'Raphael', 'Raphaelle', 'Raquel', 'Rashad', 'Rashawn',\\r\\n    'Rasheed', 'Raul', 'Raven', 'Ray', 'Raymond', 'Raymundo', 'Reagan',\\r\\n    'Reanna', 'Reba', 'Rebeca', 'Rebecca', 'Rebeka', 'Rebekah', 'Reece', 'Reed',\\r\\n    'Reese', 'Regan', 'Reggie', 'Reginald', 'Reid', 'Reilly', 'Reina',\\r\\n    'Reinhold', 'Remington', 'Rene', 'Renee', 'Ressie', 'Reta', 'Retha',\\r\\n    'Retta', 'Reuben', 'Reva', 'Rex', 'Rey', 'Reyes', 'Reymundo', 'Reyna',\\r\\n    'Reynold', 'Rhea', 'Rhett', 'Rhianna', 'Rhiannon', 'Rhoda', 'Ricardo',\\r\\n    'Richard', 'Richie', 'Richmond', 'Rick', 'Rickey', 'Rickie', 'Ricky',\\r\\n    'Rico', 'Rigoberto', 'Riley', 'Rita', 'River', 'Robb', 'Robbie', 'Robert',\\r\\n    'Roberta', 'Roberto', 'Robin', 'Robyn', 'Rocio', 'Rocky', 'Rod', 'Roderick',\\r\\n    'Rodger', 'Rodolfo', 'Rodrick', 'Rodrigo', 'Roel', 'Rogelio', 'Roger',\\r\\n    'Rogers', 'Rolando', 'Rollin', 'Roma', 'Romaine', 'Roman', 'Ron', 'Ronaldo',\\r\\n    'Ronny', 'Roosevelt', 'Rory', 'Rosa', 'Rosalee', 'Rosalia', 'Rosalind',\\r\\n    'Rosalinda', 'Rosalyn', 'Rosamond', 'Rosanna', 'Rosario', 'Roscoe', 'Rose',\\r\\n    'Rosella', 'Roselyn', 'Rosemarie', 'Rosemary', 'Rosendo', 'Rosetta',\\r\\n    'Rosie', 'Rosina', 'Roslyn', 'Ross', 'Rossie', 'Rowan', 'Rowena', 'Rowland',\\r\\n    'Roxane', 'Roxanne', 'Roy', 'Royal', 'Royce', 'Rozella', 'Ruben', 'Rubie',\\r\\n    'Ruby', 'Rubye', 'Rudolph', 'Rudy', 'Rupert', 'Russ', 'Russel', 'Russell',\\r\\n    'Rusty', 'Ruth', 'Ruthe', 'Ruthie', 'Ryan', 'Ryann', 'Ryder', 'Rylan',\\r\\n    'Rylee', 'Ryleigh', 'Ryley', 'Sabina', 'Sabrina', 'Sabryna', 'Sadie',\\r\\n    'Sadye', 'Sage', 'Saige', 'Sallie', 'Sally', 'Salma', 'Salvador',\\r\\n    'Salvatore', 'Sam', 'Samanta', 'Samantha', 'Samara', 'Samir', 'Sammie',\\r\\n    'Sammy', 'Samson', 'Sandra', 'Sandrine', 'Sandy', 'Sanford', 'Santa',\\r\\n    'Santiago', 'Santina', 'Santino', 'Santos', 'Sarah', 'Sarai', 'Sarina',\\r\\n    'Sasha', 'Saul', 'Savanah', 'Savanna', 'Savannah', 'Savion', 'Scarlett',\\r\\n    'Schuyler', 'Scot', 'Scottie', 'Scotty', 'Seamus', 'Sean', 'Sebastian',\\r\\n    'Sedrick', 'Selena', 'Selina', 'Selmer', 'Serena', 'Serenity', 'Seth',\\r\\n    'Shad', 'Shaina', 'Shakira', 'Shana', 'Shane', 'Shanel', 'Shanelle',\\r\\n    'Shania', 'Shanie', 'Shaniya', 'Shanna', 'Shannon', 'Shanny', 'Shanon',\\r\\n    'Shany', 'Sharon', 'Shaun', 'Shawn', 'Shawna', 'Shaylee', 'Shayna',\\r\\n    'Shayne', 'Shea', 'Sheila', 'Sheldon', 'Shemar', 'Sheridan', 'Sherman',\\r\\n    'Sherwood', 'Shirley', 'Shyann', 'Shyanne', 'Sibyl', 'Sid', 'Sidney',\\r\\n    'Sienna', 'Sierra', 'Sigmund', 'Sigrid', 'Sigurd', 'Silas', 'Sim', 'Simeon',\\r\\n    'Simone', 'Sincere', 'Sister', 'Skye', 'Skyla', 'Skylar', 'Sofia',\\r\\n    'Soledad', 'Solon', 'Sonia', 'Sonny', 'Sonya', 'Sophia', 'Sophie',\\r\\n    'Spencer', 'Stacey', 'Stacy', 'Stan', 'Stanford', 'Stanley', 'Stanton',\\r\\n    'Stefan', 'Stefanie', 'Stella', 'Stephan', 'Stephania', 'Stephanie',\\r\\n    'Stephany', 'Stephen', 'Stephon', 'Sterling', 'Steve', 'Stevie', 'Stewart',\\r\\n    'Stone', 'Stuart', 'Summer', 'Sunny', 'Susan', 'Susana', 'Susanna', 'Susie',\\r\\n    'Suzanne', 'Sven', 'Syble', 'Sydnee', 'Sydney', 'Sydni', 'Sydnie', 'Sylvan',\\r\\n    'Sylvester', 'Sylvia', 'Tabitha', 'Tad', 'Talia', 'Talon', 'Tamara',\\r\\n    'Tamia', 'Tania', 'Tanner', 'Tanya', 'Tara', 'Taryn', 'Tate', 'Tatum',\\r\\n    'Tatyana', 'Taurean', 'Tavares', 'Taya', 'Taylor', 'Teagan', 'Ted', 'Telly',\\r\\n    'Terence', 'Teresa', 'Terrance', 'Terrell', 'Terrence', 'Terrill', 'Terry',\\r\\n    'Tess', 'Tessie', 'Tevin', 'Thad', 'Thaddeus', 'Thalia', 'Thea', 'Thelma',\\r\\n    'Theo', 'Theodora', 'Theodore', 'Theresa', 'Therese', 'Theresia', 'Theron',\\r\\n    'Thomas', 'Thora', 'Thurman', 'Tia', 'Tiana', 'Tianna', 'Tiara', 'Tierra',\\r\\n    'Tiffany', 'Tillman', 'Timmothy', 'Timmy', 'Timothy', 'Tina', 'Tito',\\r\\n    'Titus', 'Tobin', 'Toby', 'Tod', 'Tom', 'Tomas', 'Tomasa', 'Tommie',\\r\\n    'Toney', 'Toni', 'Tony', 'Torey', 'Torrance', 'Torrey', 'Toy', 'Trace',\\r\\n    'Tracey', 'Tracy', 'Travis', 'Travon', 'Tre', 'Tremaine', 'Tremayne',\\r\\n    'Trent', 'Trenton', 'Tressa', 'Tressie', 'Treva', 'Trever', 'Trevion',\\r\\n    'Trevor', 'Trey', 'Trinity', 'Trisha', 'Tristian', 'Tristin', 'Triston',\\r\\n    'Troy', 'Trudie', 'Trycia', 'Trystan', 'Turner', 'Twila', 'Tyler', 'Tyra',\\r\\n    'Tyree', 'Tyreek', 'Tyrel', 'Tyrell', 'Tyrese', 'Tyrique', 'Tyshawn',\\r\\n    'Tyson', 'Ubaldo', 'Ulices', 'Ulises', 'Una', 'Unique', 'Urban', 'Uriah',\\r\\n    'Uriel', 'Ursula', 'Vada', 'Valentin', 'Valentina', 'Valentine', 'Valerie',\\r\\n    'Vallie', 'Van', 'Vance', 'Vanessa', 'Vaughn', 'Veda', 'Velda', 'Vella',\\r\\n    'Velma', 'Velva', 'Vena', 'Verda', 'Verdie', 'Vergie', 'Verla', 'Verlie',\\r\\n    'Vern', 'Verna', 'Verner', 'Vernice', 'Vernie', 'Vernon', 'Verona',\\r\\n    'Veronica', 'Vesta', 'Vicenta', 'Vicente', 'Vickie', 'Vicky', 'Victor',\\r\\n    'Victoria', 'Vida', 'Vidal', 'Vilma', 'Vince', 'Vincent', 'Vincenza',\\r\\n    'Vincenzo', 'Vinnie', 'Viola', 'Violet', 'Violette', 'Virgie', 'Virgil',\\r\\n    'Virginia', 'Virginie', 'Vita', 'Vito', 'Viva', 'Vivian', 'Viviane',\\r\\n    'Vivianne', 'Vivien', 'Vivienne', 'Vladimir', 'Wade', 'Waino', 'Waldo',\\r\\n    'Walker', 'Wallace', 'Walter', 'Walton', 'Wanda', 'Ward', 'Warren',\\r\\n    'Watson', 'Wava', 'Waylon', 'Wayne', 'Webster', 'Weldon', 'Wellington',\\r\\n    'Wendell', 'Wendy', 'Werner', 'Westley', 'Weston', 'Whitney', 'Wilber',\\r\\n    'Wilbert', 'Wilburn', 'Wiley', 'Wilford', 'Wilfred', 'Wilfredo', 'Wilfrid',\\r\\n    'Wilhelm', 'Wilhelmine', 'Will', 'Willa', 'Willard', 'William', 'Willie',\\r\\n    'Willis', 'Willow', 'Willy', 'Wilma', 'Wilmer', 'Wilson', 'Wilton',\\r\\n    'Winfield', 'Winifred', 'Winnifred', 'Winona', 'Winston', 'Woodrow',\\r\\n    'Wyatt', 'Wyman', 'Xander', 'Xavier', 'Xzavier', 'Yadira', 'Yasmeen',\\r\\n    'Yasmin', 'Yasmine', 'Yazmin', 'Yesenia', 'Yessenia', 'Yolanda', 'Yoshiko',\\r\\n    'Yvette', 'Yvonne', 'Zachariah', 'Zachary', 'Zachery', 'Zack', 'Zackary',\\r\\n    'Zackery', 'Zakary', 'Zander', 'Zane', 'Zaria', 'Zechariah', 'Zelda',\\r\\n    'Zella', 'Zelma', 'Zena', 'Zetta', 'Zion', 'Zita', 'Zoe', 'Zoey', 'Zoie',\\r\\n    'Zoila', 'Zola', 'Zora', 'Zula'\\r\\n];\\r\\n\\r\\n/**\\r\\n * Generate random username.\\r\\n * @returns {string} random username\\r\\n */\\r\\nfunction generateUsername() {\\r\\n    const name = RandomUtil.randomElement(names);\\r\\n    const suffix = RandomUtil.randomAlphanumStr(3);\\r\\n\\r\\n    return `${name}-${suffix}`;\\r\\n}\\r\\n\\r\\nmodule.exports = {\\r\\n    generateUsername\\r\\n};\\r\\n\",\"import browser from '../browser';\\r\\nimport { browsers } from 'js-utils';\\r\\n\\r\\nimport * as StatisticsEvents from '../../service/statistics/Events';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\n\\r\\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\\r\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * The lib-jitsi-meet browser-agnostic names of the browser-specific keys\\r\\n * reported by RTCPeerConnection#getStats mapped by browser.\\r\\n */\\r\\nconst KEYS_BY_BROWSER_TYPE = {};\\r\\n\\r\\nKEYS_BY_BROWSER_TYPE[browsers.FIREFOX] = {\\r\\n    'ssrc': 'ssrc',\\r\\n    'packetsReceived': 'packetsReceived',\\r\\n    'packetsLost': 'packetsLost',\\r\\n    'packetsSent': 'packetsSent',\\r\\n    'bytesReceived': 'bytesReceived',\\r\\n    'bytesSent': 'bytesSent',\\r\\n    'framerateMean': 'framerateMean',\\r\\n    'ip': 'ipAddress',\\r\\n    'port': 'portNumber',\\r\\n    'protocol': 'transport'\\r\\n};\\r\\nKEYS_BY_BROWSER_TYPE[browsers.CHROME] = {\\r\\n    'receiveBandwidth': 'googAvailableReceiveBandwidth',\\r\\n    'sendBandwidth': 'googAvailableSendBandwidth',\\r\\n    'remoteAddress': 'googRemoteAddress',\\r\\n    'transportType': 'googTransportType',\\r\\n    'localAddress': 'googLocalAddress',\\r\\n    'activeConnection': 'googActiveConnection',\\r\\n    'ssrc': 'ssrc',\\r\\n    'packetsReceived': 'packetsReceived',\\r\\n    'packetsSent': 'packetsSent',\\r\\n    'packetsLost': 'packetsLost',\\r\\n    'bytesReceived': 'bytesReceived',\\r\\n    'bytesSent': 'bytesSent',\\r\\n    'googFrameHeightReceived': 'googFrameHeightReceived',\\r\\n    'googFrameWidthReceived': 'googFrameWidthReceived',\\r\\n    'googFrameHeightSent': 'googFrameHeightSent',\\r\\n    'googFrameWidthSent': 'googFrameWidthSent',\\r\\n    'googFrameRateReceived': 'googFrameRateReceived',\\r\\n    'googFrameRateSent': 'googFrameRateSent',\\r\\n    'audioInputLevel': 'audioInputLevel',\\r\\n    'audioOutputLevel': 'audioOutputLevel',\\r\\n    'currentRoundTripTime': 'googRtt',\\r\\n    'remoteCandidateType': 'googRemoteCandidateType',\\r\\n    'localCandidateType': 'googLocalCandidateType',\\r\\n    'ip': 'ip',\\r\\n    'port': 'port',\\r\\n    'protocol': 'protocol'\\r\\n};\\r\\nKEYS_BY_BROWSER_TYPE[browsers.EDGE] = {\\r\\n    'sendBandwidth': 'googAvailableSendBandwidth',\\r\\n    'remoteAddress': 'remoteAddress',\\r\\n    'transportType': 'protocol',\\r\\n    'localAddress': 'localAddress',\\r\\n    'activeConnection': 'activeConnection',\\r\\n    'ssrc': 'ssrc',\\r\\n    'packetsReceived': 'packetsReceived',\\r\\n    'packetsSent': 'packetsSent',\\r\\n    'packetsLost': 'packetsLost',\\r\\n    'bytesReceived': 'bytesReceived',\\r\\n    'bytesSent': 'bytesSent',\\r\\n    'googFrameHeightReceived': 'frameHeight',\\r\\n    'googFrameWidthReceived': 'frameWidth',\\r\\n    'googFrameHeightSent': 'frameHeight',\\r\\n    'googFrameWidthSent': 'frameWidth',\\r\\n    'googFrameRateReceived': 'framesPerSecond',\\r\\n    'googFrameRateSent': 'framesPerSecond',\\r\\n    'audioInputLevel': 'audioLevel',\\r\\n    'audioOutputLevel': 'audioLevel',\\r\\n    'currentRoundTripTime': 'roundTripTime'\\r\\n};\\r\\nKEYS_BY_BROWSER_TYPE[browsers.OPERA]\\r\\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\\r\\nKEYS_BY_BROWSER_TYPE[browsers.NWJS]\\r\\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\\r\\nKEYS_BY_BROWSER_TYPE[browsers.ELECTRON]\\r\\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\\r\\nKEYS_BY_BROWSER_TYPE[browsers.SAFARI]\\r\\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\\r\\nKEYS_BY_BROWSER_TYPE[browsers.REACT_NATIVE]\\r\\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\\r\\n\\r\\n/**\\r\\n * Calculates packet lost percent using the number of lost packets and the\\r\\n * number of all packet.\\r\\n * @param lostPackets the number of lost packets\\r\\n * @param totalPackets the number of all packets.\\r\\n * @returns {number} packet loss percent\\r\\n */\\r\\nfunction calculatePacketLoss(lostPackets, totalPackets) {\\r\\n    if (!totalPackets || totalPackets <= 0\\r\\n            || !lostPackets || lostPackets <= 0) {\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    return Math.round((lostPackets / totalPackets) * 100);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Holds \\\"statistics\\\" for a single SSRC.\\r\\n * @constructor\\r\\n */\\r\\nfunction SsrcStats() {\\r\\n    this.loss = {};\\r\\n    this.bitrate = {\\r\\n        download: 0,\\r\\n        upload: 0\\r\\n    };\\r\\n    this.resolution = {};\\r\\n    this.framerate = 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Sets the \\\"loss\\\" object.\\r\\n * @param loss the value to set.\\r\\n */\\r\\nSsrcStats.prototype.setLoss = function(loss) {\\r\\n    this.loss = loss || {};\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sets resolution that belong to the ssrc represented by this instance.\\r\\n * @param resolution new resolution value to be set.\\r\\n */\\r\\nSsrcStats.prototype.setResolution = function(resolution) {\\r\\n    this.resolution = resolution || {};\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds the \\\"download\\\" and \\\"upload\\\" fields from the \\\"bitrate\\\" parameter to\\r\\n * the respective fields of the \\\"bitrate\\\" field of this object.\\r\\n * @param bitrate an object holding the values to add.\\r\\n */\\r\\nSsrcStats.prototype.addBitrate = function(bitrate) {\\r\\n    this.bitrate.download += bitrate.download;\\r\\n    this.bitrate.upload += bitrate.upload;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Resets the bit rate for given <tt>ssrc</tt> that belong to the peer\\r\\n * represented by this instance.\\r\\n */\\r\\nSsrcStats.prototype.resetBitrate = function() {\\r\\n    this.bitrate.download = 0;\\r\\n    this.bitrate.upload = 0;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sets the \\\"framerate\\\".\\r\\n * @param framerate the value to set.\\r\\n */\\r\\nSsrcStats.prototype.setFramerate = function(framerate) {\\r\\n    this.framerate = framerate || 0;\\r\\n};\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nfunction ConferenceStats() {\\r\\n\\r\\n    /**\\r\\n     * The bandwidth\\r\\n     * @type {{}}\\r\\n     */\\r\\n    this.bandwidth = {};\\r\\n\\r\\n    /**\\r\\n     * The bit rate\\r\\n     * @type {{}}\\r\\n     */\\r\\n    this.bitrate = {};\\r\\n\\r\\n    /**\\r\\n     * The packet loss rate\\r\\n     * @type {{}}\\r\\n     */\\r\\n    this.packetLoss = null;\\r\\n\\r\\n    /**\\r\\n     * Array with the transport information.\\r\\n     * @type {Array}\\r\\n     */\\r\\n    this.transport = [];\\r\\n}\\r\\n\\r\\n/* eslint-disable max-params */\\r\\n\\r\\n/**\\r\\n * <tt>StatsCollector</tt> registers for stats updates of given\\r\\n * <tt>peerconnection</tt> in given <tt>interval</tt>. On each update particular\\r\\n * stats are extracted and put in {@link SsrcStats} objects. Once the processing\\r\\n * is done <tt>audioLevelsUpdateCallback</tt> is called with <tt>this</tt>\\r\\n * instance as an event source.\\r\\n *\\r\\n * @param peerconnection WebRTC PeerConnection object.\\r\\n * @param audioLevelsInterval\\r\\n * @param statsInterval stats refresh interval given in ms.\\r\\n * @param eventEmitter\\r\\n * @constructor\\r\\n */\\r\\nexport default function StatsCollector(\\r\\n        peerconnection,\\r\\n        audioLevelsInterval,\\r\\n        statsInterval,\\r\\n        eventEmitter) {\\r\\n    // StatsCollector depends entirely on the format of the reports returned by\\r\\n    // RTCPeerConnection#getStats. Given that the value of\\r\\n    // browser#getName() is very unlikely to change at runtime, it\\r\\n    // makes sense to discover whether StatsCollector supports the executing\\r\\n    // browser as soon as possible. Otherwise, (1) getStatValue would have to\\r\\n    // needlessly check a \\\"static\\\" condition multiple times very very often and\\r\\n    // (2) the lack of support for the executing browser would be discovered and\\r\\n    // reported multiple times very very often too late in the execution in some\\r\\n    // totally unrelated callback.\\r\\n    /**\\r\\n     * The browser type supported by this StatsCollector. In other words, the\\r\\n     * type of the browser which initialized this StatsCollector\\r\\n     * instance.\\r\\n     * @private\\r\\n     */\\r\\n    this._browserType = browser.getName();\\r\\n    const keys = KEYS_BY_BROWSER_TYPE[this._browserType];\\r\\n\\r\\n    if (!keys) {\\r\\n        // eslint-disable-next-line no-throw-literal\\r\\n        throw `The browser type '${this._browserType}' isn't supported!`;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Whether to use the Promise-based getStats API or not.\\r\\n     * @type {boolean}\\r\\n     */\\r\\n    this._usesPromiseGetStats\\r\\n        = browser.isSafariWithWebrtc() || browser.isFirefox();\\r\\n\\r\\n    /**\\r\\n     * The function which is to be used to retrieve the value associated in a\\r\\n     * report returned by RTCPeerConnection#getStats with a lib-jitsi-meet\\r\\n     * browser-agnostic name/key.\\r\\n     *\\r\\n     * @function\\r\\n     * @private\\r\\n     */\\r\\n    this._getStatValue\\r\\n        = this._usesPromiseGetStats\\r\\n            ? this._defineNewGetStatValueMethod(keys)\\r\\n            : this._defineGetStatValueMethod(keys);\\r\\n\\r\\n    this.peerconnection = peerconnection;\\r\\n    this.baselineAudioLevelsReport = null;\\r\\n    this.currentAudioLevelsReport = null;\\r\\n    this.currentStatsReport = null;\\r\\n    this.previousStatsReport = null;\\r\\n    this.audioLevelReportHistory = {};\\r\\n    this.audioLevelsIntervalId = null;\\r\\n    this.eventEmitter = eventEmitter;\\r\\n    this.conferenceStats = new ConferenceStats();\\r\\n\\r\\n    // Updates stats interval\\r\\n    this.audioLevelsIntervalMilis = audioLevelsInterval;\\r\\n\\r\\n    this.statsIntervalId = null;\\r\\n    this.statsIntervalMilis = statsInterval;\\r\\n\\r\\n    /**\\r\\n     * Maps SSRC numbers to {@link SsrcStats}.\\r\\n     * @type {Map<number,SsrcStats}\\r\\n     */\\r\\n    this.ssrc2stats = new Map();\\r\\n}\\r\\n\\r\\n/* eslint-enable max-params */\\r\\n\\r\\n/**\\r\\n * Stops stats updates.\\r\\n */\\r\\nStatsCollector.prototype.stop = function() {\\r\\n    if (this.audioLevelsIntervalId) {\\r\\n        clearInterval(this.audioLevelsIntervalId);\\r\\n        this.audioLevelsIntervalId = null;\\r\\n    }\\r\\n\\r\\n    if (this.statsIntervalId) {\\r\\n        clearInterval(this.statsIntervalId);\\r\\n        this.statsIntervalId = null;\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Callback passed to <tt>getStats</tt> method.\\r\\n * @param error an error that occurred on <tt>getStats</tt> call.\\r\\n */\\r\\nStatsCollector.prototype.errorCallback = function(error) {\\r\\n    GlobalOnErrorHandler.callErrorHandler(error);\\r\\n    logger.error('Get stats error', error);\\r\\n    this.stop();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Starts stats updates.\\r\\n */\\r\\nStatsCollector.prototype.start = function(startAudioLevelStats) {\\r\\n    const self = this;\\r\\n\\r\\n    if (startAudioLevelStats) {\\r\\n        this.audioLevelsIntervalId = setInterval(\\r\\n            () => {\\r\\n                // Interval updates\\r\\n                self.peerconnection.getStats(\\r\\n                    report => {\\r\\n                        let results = null;\\r\\n\\r\\n                        if (!report || !report.result\\r\\n                            || typeof report.result !== 'function') {\\r\\n                            results = report;\\r\\n                        } else {\\r\\n                            results = report.result();\\r\\n                        }\\r\\n                        self.currentAudioLevelsReport = results;\\r\\n                        if (this._usesPromiseGetStats) {\\r\\n                            self.processNewAudioLevelReport();\\r\\n                        } else {\\r\\n                            self.processAudioLevelReport();\\r\\n                        }\\r\\n\\r\\n                        self.baselineAudioLevelsReport\\r\\n                            = self.currentAudioLevelsReport;\\r\\n                    },\\r\\n                    error => self.errorCallback(error)\\r\\n                );\\r\\n            },\\r\\n            self.audioLevelsIntervalMilis\\r\\n        );\\r\\n    }\\r\\n\\r\\n    if (browser.supportsRtpStatistics()) {\\r\\n        this.statsIntervalId = setInterval(\\r\\n            () => {\\r\\n                // Interval updates\\r\\n                self.peerconnection.getStats(\\r\\n                    report => {\\r\\n                        let results = null;\\r\\n\\r\\n                        if (!report || !report.result\\r\\n                            || typeof report.result !== 'function') {\\r\\n                            // firefox\\r\\n                            results = report;\\r\\n                        } else {\\r\\n                            // chrome\\r\\n                            results = report.result();\\r\\n                        }\\r\\n\\r\\n                        self.currentStatsReport = results;\\r\\n                        try {\\r\\n                            if (this._usesPromiseGetStats) {\\r\\n                                self.processNewStatsReport();\\r\\n                            } else {\\r\\n                                self.processStatsReport();\\r\\n                            }\\r\\n                        } catch (e) {\\r\\n                            GlobalOnErrorHandler.callErrorHandler(e);\\r\\n                            logger.error(`Unsupported key:${e}`, e);\\r\\n                        }\\r\\n\\r\\n                        self.previousStatsReport = self.currentStatsReport;\\r\\n                    },\\r\\n                    error => self.errorCallback(error)\\r\\n                );\\r\\n            },\\r\\n            self.statsIntervalMilis\\r\\n        );\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Defines a function which (1) is to be used as a StatsCollector method and (2)\\r\\n * gets the value from a specific report returned by RTCPeerConnection#getStats\\r\\n * associated with a lib-jitsi-meet browser-agnostic name.\\r\\n *\\r\\n * @param {Object.<string,string>} keys the map of LibJitsi browser-agnostic\\r\\n * names to RTCPeerConnection#getStats browser-specific keys\\r\\n */\\r\\nStatsCollector.prototype._defineGetStatValueMethod = function(keys) {\\r\\n    // Define the function which converts a lib-jitsi-meet browser-asnostic name\\r\\n    // to a browser-specific key of a report returned by\\r\\n    // RTCPeerConnection#getStats.\\r\\n    const keyFromName = function(name) {\\r\\n        const key = keys[name];\\r\\n\\r\\n        if (key) {\\r\\n            return key;\\r\\n        }\\r\\n\\r\\n        // eslint-disable-next-line no-throw-literal\\r\\n        throw `The property '${name}' isn't supported!`;\\r\\n    };\\r\\n\\r\\n    // Define the function which retrieves the value from a specific report\\r\\n    // returned by RTCPeerConnection#getStats associated with a given\\r\\n    // browser-specific key.\\r\\n    let itemStatByKey;\\r\\n\\r\\n    switch (this._browserType) {\\r\\n    case browsers.CHROME:\\r\\n    case browsers.OPERA:\\r\\n    case browsers.NWJS:\\r\\n    case browsers.ELECTRON:\\r\\n        // TODO What about other types of browser which are based on Chrome such\\r\\n        // as NW.js? Every time we want to support a new type browser we have to\\r\\n        // go and add more conditions (here and in multiple other places).\\r\\n        // Cannot we do a feature detection instead of a browser type check? For\\r\\n        // example, if item has a stat property of type function, then it's very\\r\\n        // likely that whoever defined it wanted you to call it in order to\\r\\n        // retrieve the value associated with a specific key.\\r\\n        itemStatByKey = (item, key) => item.stat(key);\\r\\n        break;\\r\\n    case browsers.REACT_NATIVE:\\r\\n        // The implementation provided by react-native-webrtc follows the\\r\\n        // Objective-C WebRTC API: RTCStatsReport has a values property of type\\r\\n        // Array in which each element is a key-value pair.\\r\\n        itemStatByKey = function(item, key) {\\r\\n            let value;\\r\\n\\r\\n            item.values.some(pair => {\\r\\n                if (pair.hasOwnProperty(key)) {\\r\\n                    value = pair[key];\\r\\n\\r\\n                    return true;\\r\\n                }\\r\\n\\r\\n                return false;\\r\\n\\r\\n            });\\r\\n\\r\\n            return value;\\r\\n        };\\r\\n        break;\\r\\n    case browsers.EDGE:\\r\\n        itemStatByKey = (item, key) => item[key];\\r\\n        break;\\r\\n    default:\\r\\n        itemStatByKey = (item, key) => item[key];\\r\\n    }\\r\\n\\r\\n    // Compose the 2 functions defined above to get a function which retrieves\\r\\n    // the value from a specific report returned by RTCPeerConnection#getStats\\r\\n    // associated with a specific lib-jitsi-meet browser-agnostic name.\\r\\n    return (item, name) => itemStatByKey(item, keyFromName(name));\\r\\n};\\r\\n\\r\\n/**\\r\\n * Obtains a stat value from given stat and converts it to a non-negative\\r\\n * number. If the value is either invalid or negative then 0 will be returned.\\r\\n * @param report\\r\\n * @param {string} name\\r\\n * @return {number}\\r\\n * @private\\r\\n */\\r\\nStatsCollector.prototype.getNonNegativeStat = function(report, name) {\\r\\n    let value = this._getStatValue(report, name);\\r\\n\\r\\n    if (typeof value !== 'number') {\\r\\n        value = Number(value);\\r\\n    }\\r\\n\\r\\n    if (isNaN(value)) {\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    return Math.max(0, value);\\r\\n};\\r\\n\\r\\n/* eslint-disable no-continue */\\r\\n\\r\\n/**\\r\\n * Stats processing logic.\\r\\n */\\r\\nStatsCollector.prototype.processStatsReport = function() {\\r\\n    if (!this.previousStatsReport) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const getStatValue = this._getStatValue;\\r\\n    const byteSentStats = {};\\r\\n\\r\\n    for (const idx in this.currentStatsReport) {\\r\\n        if (!this.currentStatsReport.hasOwnProperty(idx)) {\\r\\n            continue;\\r\\n        }\\r\\n        const now = this.currentStatsReport[idx];\\r\\n\\r\\n        // The browser API may return \\\"undefined\\\" values in the array\\r\\n        if (!now) {\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        try {\\r\\n            const receiveBandwidth = getStatValue(now, 'receiveBandwidth');\\r\\n            const sendBandwidth = getStatValue(now, 'sendBandwidth');\\r\\n\\r\\n            if (receiveBandwidth || sendBandwidth) {\\r\\n                this.conferenceStats.bandwidth = {\\r\\n                    'download': Math.round(receiveBandwidth / 1000),\\r\\n                    'upload': Math.round(sendBandwidth / 1000)\\r\\n                };\\r\\n            }\\r\\n        } catch (e) { /* not supported*/ }\\r\\n\\r\\n        if (now.type === 'googCandidatePair') {\\r\\n            let active, ip, localCandidateType, localip,\\r\\n                remoteCandidateType, rtt, type;\\r\\n\\r\\n            try {\\r\\n                active = getStatValue(now, 'activeConnection');\\r\\n                if (!active) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                ip = getStatValue(now, 'remoteAddress');\\r\\n                type = getStatValue(now, 'transportType');\\r\\n                localip = getStatValue(now, 'localAddress');\\r\\n                localCandidateType = getStatValue(now, 'localCandidateType');\\r\\n                remoteCandidateType = getStatValue(now, 'remoteCandidateType');\\r\\n                rtt = this.getNonNegativeStat(now, 'currentRoundTripTime');\\r\\n            } catch (e) { /* not supported*/ }\\r\\n            if (!ip || !type || !localip || active !== 'true') {\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            // Save the address unless it has been saved already.\\r\\n            const conferenceStatsTransport = this.conferenceStats.transport;\\r\\n\\r\\n            if (!conferenceStatsTransport.some(\\r\\n                    t =>\\r\\n                        t.ip === ip\\r\\n                            && t.type === type\\r\\n                            && t.localip === localip)) {\\r\\n                conferenceStatsTransport.push({\\r\\n                    ip,\\r\\n                    type,\\r\\n                    localip,\\r\\n                    p2p: this.peerconnection.isP2P,\\r\\n                    localCandidateType,\\r\\n                    remoteCandidateType,\\r\\n                    rtt\\r\\n                });\\r\\n            }\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        if (now.type === 'candidatepair') {\\r\\n            // we need succeeded and selected pairs only\\r\\n            if (now.state !== 'succeeded' || !now.selected) {\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            const local = this.currentStatsReport[now.localCandidateId];\\r\\n            const remote = this.currentStatsReport[now.remoteCandidateId];\\r\\n\\r\\n            this.conferenceStats.transport.push({\\r\\n                ip: `${remote.ipAddress}:${remote.portNumber}`,\\r\\n                type: local.transport,\\r\\n                localip: `${local.ipAddress}:${local.portNumber}`,\\r\\n                p2p: this.peerconnection.isP2P,\\r\\n                localCandidateType: local.candidateType,\\r\\n                remoteCandidateType: remote.candidateType\\r\\n            });\\r\\n        }\\r\\n\\r\\n        // NOTE: Edge's proprietary stats via RTCIceTransport.msGetStats().\\r\\n        if (now.msType === 'transportdiagnostics') {\\r\\n            this.conferenceStats.transport.push({\\r\\n                ip: now.remoteAddress,\\r\\n                type: now.protocol,\\r\\n                localip: now.localAddress,\\r\\n                p2p: this.peerconnection.isP2P\\r\\n            });\\r\\n        }\\r\\n\\r\\n        if (now.type !== 'ssrc' && now.type !== 'outboundrtp'\\r\\n            && now.type !== 'inboundrtp' && now.type !== 'track') {\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        // NOTE: In Edge, stats with type \\\"inboundrtp\\\" and \\\"outboundrtp\\\" are\\r\\n        // completely useless, so ignore them.\\r\\n        if (browser.isEdge()\\r\\n            && (now.type === 'inboundrtp' || now.type === 'outboundrtp')) {\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        const before = this.previousStatsReport[idx];\\r\\n        let ssrc = this.getNonNegativeStat(now, 'ssrc');\\r\\n\\r\\n        // If type=\\\"track\\\", take the first SSRC from ssrcIds.\\r\\n        if (now.type === 'track' && Array.isArray(now.ssrcIds)) {\\r\\n            ssrc = Number(now.ssrcIds[0]);\\r\\n        }\\r\\n\\r\\n        if (!before || !ssrc) {\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        // isRemote is available only in FF and is ignored in case of chrome\\r\\n        // according to the spec\\r\\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcrtpstreamstats-isremote\\r\\n        // when isRemote is true indicates that the measurements were done at\\r\\n        // the remote endpoint and reported in an RTCP RR/XR.\\r\\n        // Fixes a problem where we are calculating local stats wrong adding\\r\\n        // the sent bytes to the local download bitrate.\\r\\n        // In new W3 stats spec, type=\\\"track\\\" has a remoteSource boolean\\r\\n        // property.\\r\\n        // Edge uses the new format, so skip this check.\\r\\n        if (!browser.isEdge()\\r\\n                && (now.isRemote === true || now.remoteSource === true)) {\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        let ssrcStats = this.ssrc2stats.get(ssrc);\\r\\n\\r\\n        if (!ssrcStats) {\\r\\n            ssrcStats = new SsrcStats();\\r\\n            this.ssrc2stats.set(ssrc, ssrcStats);\\r\\n        }\\r\\n\\r\\n        let isDownloadStream = true;\\r\\n        let key = 'packetsReceived';\\r\\n        let packetsNow = getStatValue(now, key);\\r\\n\\r\\n        if (typeof packetsNow === 'undefined'\\r\\n            || packetsNow === null || packetsNow === '') {\\r\\n            isDownloadStream = false;\\r\\n            key = 'packetsSent';\\r\\n            packetsNow = getStatValue(now, key);\\r\\n            if (typeof packetsNow === 'undefined' || packetsNow === null) {\\r\\n                logger.warn('No packetsReceived nor packetsSent stat found');\\r\\n            }\\r\\n        }\\r\\n        if (!packetsNow || packetsNow < 0) {\\r\\n            packetsNow = 0;\\r\\n        }\\r\\n\\r\\n        const packetsBefore = this.getNonNegativeStat(before, key);\\r\\n        const packetsDiff = Math.max(0, packetsNow - packetsBefore);\\r\\n\\r\\n        const packetsLostNow\\r\\n            = this.getNonNegativeStat(now, 'packetsLost');\\r\\n        const packetsLostBefore\\r\\n            = this.getNonNegativeStat(before, 'packetsLost');\\r\\n        const packetsLostDiff = Math.max(0, packetsLostNow - packetsLostBefore);\\r\\n\\r\\n        ssrcStats.setLoss({\\r\\n            packetsTotal: packetsDiff + packetsLostDiff,\\r\\n            packetsLost: packetsLostDiff,\\r\\n            isDownloadStream\\r\\n        });\\r\\n\\r\\n        const bytesReceivedNow\\r\\n            = this.getNonNegativeStat(now, 'bytesReceived');\\r\\n        const bytesReceivedBefore\\r\\n            = this.getNonNegativeStat(before, 'bytesReceived');\\r\\n        const bytesReceived\\r\\n            = Math.max(0, bytesReceivedNow - bytesReceivedBefore);\\r\\n\\r\\n        let bytesSent = 0;\\r\\n\\r\\n        // TODO: clean this mess up!\\r\\n        let nowBytesTransmitted = getStatValue(now, 'bytesSent');\\r\\n\\r\\n        if (typeof nowBytesTransmitted === 'number'\\r\\n            || typeof nowBytesTransmitted === 'string') {\\r\\n            nowBytesTransmitted = Number(nowBytesTransmitted);\\r\\n            if (!isNaN(nowBytesTransmitted)) {\\r\\n                byteSentStats[ssrc] = nowBytesTransmitted;\\r\\n                if (nowBytesTransmitted > 0) {\\r\\n                    bytesSent = nowBytesTransmitted\\r\\n                        - getStatValue(before, 'bytesSent');\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        bytesSent = Math.max(0, bytesSent);\\r\\n\\r\\n        const timeMs = now.timestamp - before.timestamp;\\r\\n        let bitrateReceivedKbps = 0, bitrateSentKbps = 0;\\r\\n\\r\\n        if (timeMs > 0) {\\r\\n            // TODO is there any reason to round here?\\r\\n            bitrateReceivedKbps = Math.round((bytesReceived * 8) / timeMs);\\r\\n            bitrateSentKbps = Math.round((bytesSent * 8) / timeMs);\\r\\n        }\\r\\n\\r\\n        ssrcStats.addBitrate({\\r\\n            'download': bitrateReceivedKbps,\\r\\n            'upload': bitrateSentKbps\\r\\n        });\\r\\n\\r\\n        const resolution = {\\r\\n            height: null,\\r\\n            width: null\\r\\n        };\\r\\n\\r\\n        try {\\r\\n            let height, width;\\r\\n\\r\\n            if ((height = getStatValue(now, 'googFrameHeightReceived'))\\r\\n                && (width = getStatValue(now, 'googFrameWidthReceived'))) {\\r\\n                resolution.height = height;\\r\\n                resolution.width = width;\\r\\n            } else if ((height = getStatValue(now, 'googFrameHeightSent'))\\r\\n                && (width = getStatValue(now, 'googFrameWidthSent'))) {\\r\\n                resolution.height = height;\\r\\n                resolution.width = width;\\r\\n            }\\r\\n        } catch (e) { /* not supported*/ }\\r\\n\\r\\n        // Tries to get frame rate\\r\\n        let frameRate;\\r\\n\\r\\n        try {\\r\\n            frameRate = getStatValue(now, 'googFrameRateReceived')\\r\\n                || getStatValue(now, 'googFrameRateSent') || 0;\\r\\n        } catch (e) {\\r\\n            // if it fails with previous properties(chrome),\\r\\n            // let's try with another one (FF)\\r\\n            try {\\r\\n                frameRate = this.getNonNegativeStat(now, 'framerateMean');\\r\\n            } catch (err) { /* not supported*/ }\\r\\n        }\\r\\n        ssrcStats.setFramerate(Math.round(frameRate || 0));\\r\\n\\r\\n        if (resolution.height && resolution.width) {\\r\\n            ssrcStats.setResolution(resolution);\\r\\n        } else {\\r\\n            ssrcStats.setResolution(null);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    this.eventEmitter.emit(\\r\\n        StatisticsEvents.BYTE_SENT_STATS, this.peerconnection, byteSentStats);\\r\\n\\r\\n    this._processAndEmitReport();\\r\\n};\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nStatsCollector.prototype._processAndEmitReport = function() {\\r\\n    // process stats\\r\\n    const totalPackets = {\\r\\n        download: 0,\\r\\n        upload: 0\\r\\n    };\\r\\n    const lostPackets = {\\r\\n        download: 0,\\r\\n        upload: 0\\r\\n    };\\r\\n    let bitrateDownload = 0;\\r\\n    let bitrateUpload = 0;\\r\\n    const resolutions = {};\\r\\n    const framerates = {};\\r\\n    let audioBitrateDownload = 0;\\r\\n    let audioBitrateUpload = 0;\\r\\n    let videoBitrateDownload = 0;\\r\\n    let videoBitrateUpload = 0;\\r\\n\\r\\n    for (const [ ssrc, ssrcStats ] of this.ssrc2stats) {\\r\\n        // process packet loss stats\\r\\n        const loss = ssrcStats.loss;\\r\\n        const type = loss.isDownloadStream ? 'download' : 'upload';\\r\\n\\r\\n        totalPackets[type] += loss.packetsTotal;\\r\\n        lostPackets[type] += loss.packetsLost;\\r\\n\\r\\n        // process bitrate stats\\r\\n        bitrateDownload += ssrcStats.bitrate.download;\\r\\n        bitrateUpload += ssrcStats.bitrate.upload;\\r\\n\\r\\n        // collect resolutions and framerates\\r\\n        const track = this.peerconnection.getTrackBySSRC(ssrc);\\r\\n\\r\\n        if (track) {\\r\\n            if (track.isAudioTrack()) {\\r\\n                audioBitrateDownload += ssrcStats.bitrate.download;\\r\\n                audioBitrateUpload += ssrcStats.bitrate.upload;\\r\\n            } else {\\r\\n                videoBitrateDownload += ssrcStats.bitrate.download;\\r\\n                videoBitrateUpload += ssrcStats.bitrate.upload;\\r\\n            }\\r\\n\\r\\n            const participantId = track.getParticipantId();\\r\\n\\r\\n            if (participantId) {\\r\\n                const resolution = ssrcStats.resolution;\\r\\n\\r\\n                if (resolution.width\\r\\n                        && resolution.height\\r\\n                        && resolution.width !== -1\\r\\n                        && resolution.height !== -1) {\\r\\n                    const userResolutions = resolutions[participantId] || {};\\r\\n\\r\\n                    userResolutions[ssrc] = resolution;\\r\\n                    resolutions[participantId] = userResolutions;\\r\\n                }\\r\\n                if (ssrcStats.framerate !== 0) {\\r\\n                    const userFramerates = framerates[participantId] || {};\\r\\n\\r\\n                    userFramerates[ssrc] = ssrcStats.framerate;\\r\\n                    framerates[participantId] = userFramerates;\\r\\n                }\\r\\n            } else {\\r\\n                logger.error(`No participant ID returned by ${track}`);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        ssrcStats.resetBitrate();\\r\\n    }\\r\\n\\r\\n    this.conferenceStats.bitrate = {\\r\\n        'upload': bitrateUpload,\\r\\n        'download': bitrateDownload\\r\\n    };\\r\\n\\r\\n    this.conferenceStats.bitrate.audio = {\\r\\n        'upload': audioBitrateUpload,\\r\\n        'download': audioBitrateDownload\\r\\n    };\\r\\n\\r\\n    this.conferenceStats.bitrate.video = {\\r\\n        'upload': videoBitrateUpload,\\r\\n        'download': videoBitrateDownload\\r\\n    };\\r\\n\\r\\n    this.conferenceStats.packetLoss = {\\r\\n        total:\\r\\n            calculatePacketLoss(\\r\\n                lostPackets.download + lostPackets.upload,\\r\\n                totalPackets.download + totalPackets.upload),\\r\\n        download:\\r\\n            calculatePacketLoss(lostPackets.download, totalPackets.download),\\r\\n        upload:\\r\\n            calculatePacketLoss(lostPackets.upload, totalPackets.upload)\\r\\n    };\\r\\n\\r\\n    const avgAudioLevels = {};\\r\\n    let localAvgAudioLevels;\\r\\n\\r\\n    Object.keys(this.audioLevelReportHistory).forEach(ssrc => {\\r\\n        const { data, isLocal } = this.audioLevelReportHistory[ssrc];\\r\\n        const avgAudioLevel = data.reduce((sum, currentValue) => sum + currentValue) / data.length;\\r\\n\\r\\n        if (isLocal) {\\r\\n            localAvgAudioLevels = avgAudioLevel;\\r\\n        } else {\\r\\n            const track = this.peerconnection.getTrackBySSRC(Number(ssrc));\\r\\n\\r\\n            if (track) {\\r\\n                const participantId = track.getParticipantId();\\r\\n\\r\\n                if (participantId) {\\r\\n                    avgAudioLevels[participantId] = avgAudioLevel;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n    this.audioLevelReportHistory = {};\\r\\n\\r\\n    this.eventEmitter.emit(\\r\\n        StatisticsEvents.CONNECTION_STATS,\\r\\n        this.peerconnection,\\r\\n        {\\r\\n            'bandwidth': this.conferenceStats.bandwidth,\\r\\n            'bitrate': this.conferenceStats.bitrate,\\r\\n            'packetLoss': this.conferenceStats.packetLoss,\\r\\n            'resolution': resolutions,\\r\\n            'framerate': framerates,\\r\\n            'transport': this.conferenceStats.transport,\\r\\n            localAvgAudioLevels,\\r\\n            avgAudioLevels\\r\\n        });\\r\\n    this.conferenceStats.transport = [];\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stats processing logic.\\r\\n */\\r\\nStatsCollector.prototype.processAudioLevelReport = function() {\\r\\n    if (!this.baselineAudioLevelsReport) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const getStatValue = this._getStatValue;\\r\\n\\r\\n    for (const idx in this.currentAudioLevelsReport) {\\r\\n        if (!this.currentAudioLevelsReport.hasOwnProperty(idx)) {\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        const now = this.currentAudioLevelsReport[idx];\\r\\n\\r\\n        if (now.type !== 'ssrc' && now.type !== 'track') {\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        const before = this.baselineAudioLevelsReport[idx];\\r\\n        let ssrc = this.getNonNegativeStat(now, 'ssrc');\\r\\n\\r\\n        if (!ssrc && Array.isArray(now.ssrcIds)) {\\r\\n            ssrc = Number(now.ssrcIds[0]);\\r\\n        }\\r\\n\\r\\n        if (!before) {\\r\\n            logger.warn(`${ssrc} not enough data`);\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        if (!ssrc) {\\r\\n            if ((Date.now() - now.timestamp) < 3000) {\\r\\n                logger.warn('No ssrc: ');\\r\\n            }\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        // Audio level\\r\\n        let audioLevel;\\r\\n\\r\\n        try {\\r\\n            audioLevel\\r\\n                = getStatValue(now, 'audioInputLevel')\\r\\n                    || getStatValue(now, 'audioOutputLevel');\\r\\n        } catch (e) { /* not supported*/\\r\\n            logger.warn('Audio Levels are not available in the statistics.');\\r\\n            clearInterval(this.audioLevelsIntervalId);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (audioLevel) {\\r\\n            let isLocal;\\r\\n\\r\\n            // If type=\\\"ssrc\\\" (legacy) check whether they are received packets.\\r\\n            if (now.type === 'ssrc') {\\r\\n                isLocal = !getStatValue(now, 'packetsReceived');\\r\\n\\r\\n            // If type=\\\"track\\\", check remoteSource boolean property.\\r\\n            } else {\\r\\n                isLocal = !now.remoteSource;\\r\\n            }\\r\\n\\r\\n            // According to the W3C WebRTC Stats spec, audioLevel should be in\\r\\n            // 0..1 range (0 == silence). However browsers don't behave that\\r\\n            // way so we must convert it to 0..1.\\r\\n            //\\r\\n            // In Edge the range is -100..0 (-100 == silence) measured in dB,\\r\\n            // so convert to linear. The levels are set to 0 for remote tracks,\\r\\n            // so don't convert those, since 0 means \\\"the maximum\\\" in Edge.\\r\\n            if (browser.isEdge()) {\\r\\n                audioLevel = audioLevel < 0 ? Math.pow(10, audioLevel / 20) : 0;\\r\\n\\r\\n            // TODO: Can't find specs about what this value really is, but it\\r\\n            // seems to vary between 0 and around 32k.\\r\\n            } else {\\r\\n                audioLevel = audioLevel / 32767;\\r\\n            }\\r\\n\\r\\n            if (!(ssrc in this.audioLevelReportHistory)) {\\r\\n                this.audioLevelReportHistory[ssrc] = {\\r\\n                    isLocal,\\r\\n                    data: []\\r\\n                };\\r\\n            }\\r\\n            this.audioLevelReportHistory[ssrc].data.push(audioLevel);\\r\\n\\r\\n            this.eventEmitter.emit(\\r\\n                StatisticsEvents.AUDIO_LEVEL,\\r\\n                this.peerconnection,\\r\\n                ssrc,\\r\\n                audioLevel,\\r\\n                isLocal);\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\n/* eslint-enable no-continue */\\r\\n\\r\\n/**\\r\\n * New promised based getStats report processing.\\r\\n * Tested with chrome, firefox and safari. Not switching it on for chrome as\\r\\n * frameRate stat is missing and calculating it using framesSent,\\r\\n * gives values double the values seen in webrtc-internals.\\r\\n * https://w3c.github.io/webrtc-stats/\\r\\n */\\r\\n\\r\\n/**\\r\\n * Defines a function which (1) is to be used as a StatsCollector method and (2)\\r\\n * gets the value from a specific report returned by RTCPeerConnection#getStats\\r\\n * associated with a lib-jitsi-meet browser-agnostic name in case of using\\r\\n * Promised based getStats.\\r\\n *\\r\\n * @param {Object.<string,string>} keys the map of LibJitsi browser-agnostic\\r\\n * names to RTCPeerConnection#getStats browser-specific keys\\r\\n */\\r\\nStatsCollector.prototype._defineNewGetStatValueMethod = function(keys) {\\r\\n    // Define the function which converts a lib-jitsi-meet browser-asnostic name\\r\\n    // to a browser-specific key of a report returned by\\r\\n    // RTCPeerConnection#getStats.\\r\\n    const keyFromName = function(name) {\\r\\n        const key = keys[name];\\r\\n\\r\\n        if (key) {\\r\\n            return key;\\r\\n        }\\r\\n\\r\\n        // eslint-disable-next-line no-throw-literal\\r\\n        throw `The property '${name}' isn't supported!`;\\r\\n    };\\r\\n\\r\\n    // Compose the 2 functions defined above to get a function which retrieves\\r\\n    // the value from a specific report returned by RTCPeerConnection#getStats\\r\\n    // associated with a specific lib-jitsi-meet browser-agnostic name.\\r\\n    return (item, name) => item[keyFromName(name)];\\r\\n};\\r\\n\\r\\n/**\\r\\n * Converts the value to a non-negative number.\\r\\n * If the value is either invalid or negative then 0 will be returned.\\r\\n * @param {*} v\\r\\n * @return {number}\\r\\n * @private\\r\\n */\\r\\nStatsCollector.prototype.getNonNegativeValue = function(v) {\\r\\n    let value = v;\\r\\n\\r\\n    if (typeof value !== 'number') {\\r\\n        value = Number(value);\\r\\n    }\\r\\n\\r\\n    if (isNaN(value)) {\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    return Math.max(0, value);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Calculates bitrate between before and now using a supplied field name and its\\r\\n * value in the stats.\\r\\n * @param {RTCInboundRtpStreamStats|RTCSentRtpStreamStats} now the current stats\\r\\n * @param {RTCInboundRtpStreamStats|RTCSentRtpStreamStats} before the\\r\\n * previous stats.\\r\\n * @param fieldName the field to use for calculations.\\r\\n * @return {number} the calculated bitrate between now and before.\\r\\n * @private\\r\\n */\\r\\nStatsCollector.prototype._calculateBitrate = function(now, before, fieldName) {\\r\\n    const bytesNow = this.getNonNegativeValue(now[fieldName]);\\r\\n    const bytesBefore = this.getNonNegativeValue(before[fieldName]);\\r\\n    const bytesProcessed = Math.max(0, bytesNow - bytesBefore);\\r\\n\\r\\n    const timeMs = now.timestamp - before.timestamp;\\r\\n    let bitrateKbps = 0;\\r\\n\\r\\n    if (timeMs > 0) {\\r\\n        // TODO is there any reason to round here?\\r\\n        bitrateKbps = Math.round((bytesProcessed * 8) / timeMs);\\r\\n    }\\r\\n\\r\\n    return bitrateKbps;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stats processing new getStats logic.\\r\\n */\\r\\nStatsCollector.prototype.processNewStatsReport = function() {\\r\\n    if (!this.previousStatsReport) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const getStatValue = this._getStatValue;\\r\\n    const byteSentStats = {};\\r\\n\\r\\n    this.currentStatsReport.forEach(now => {\\r\\n\\r\\n        // RTCIceCandidatePairStats\\r\\n        // https://w3c.github.io/webrtc-stats/#candidatepair-dict*\\r\\n        if (now.type === 'candidate-pair'\\r\\n            && now.nominated\\r\\n            && now.state === 'succeeded') {\\r\\n\\r\\n            const availableIncomingBitrate = now.availableIncomingBitrate;\\r\\n            const availableOutgoingBitrate = now.availableOutgoingBitrate;\\r\\n\\r\\n            if (availableIncomingBitrate || availableOutgoingBitrate) {\\r\\n                this.conferenceStats.bandwidth = {\\r\\n                    'download': Math.round(availableIncomingBitrate / 1000),\\r\\n                    'upload': Math.round(availableOutgoingBitrate / 1000)\\r\\n                };\\r\\n            }\\r\\n\\r\\n            const remoteUsedCandidate\\r\\n                = this.currentStatsReport.get(now.remoteCandidateId);\\r\\n            const localUsedCandidate\\r\\n                = this.currentStatsReport.get(now.localCandidateId);\\r\\n\\r\\n            // RTCIceCandidateStats\\r\\n            // https://w3c.github.io/webrtc-stats/#icecandidate-dict*\\r\\n            // safari currently does not provide ice candidates in stats\\r\\n            if (remoteUsedCandidate && localUsedCandidate) {\\r\\n                // FF uses non-standard ipAddress, portNumber, transport\\r\\n                // instead of ip, port, protocol\\r\\n                const remoteIpAddress = getStatValue(remoteUsedCandidate, 'ip');\\r\\n                const remotePort = getStatValue(remoteUsedCandidate, 'port');\\r\\n                const ip = `${remoteIpAddress}:${remotePort}`;\\r\\n\\r\\n                const localIpAddress = getStatValue(localUsedCandidate, 'ip');\\r\\n                const localPort = getStatValue(localUsedCandidate, 'port');\\r\\n\\r\\n                const localIp = `${localIpAddress}:${localPort}`;\\r\\n                const type = getStatValue(remoteUsedCandidate, 'protocol');\\r\\n\\r\\n                // Save the address unless it has been saved already.\\r\\n                const conferenceStatsTransport = this.conferenceStats.transport;\\r\\n\\r\\n                if (!conferenceStatsTransport.some(\\r\\n                        t =>\\r\\n                            t.ip === ip\\r\\n                            && t.type === type\\r\\n                            && t.localip === localIp)) {\\r\\n                    conferenceStatsTransport.push({\\r\\n                        ip,\\r\\n                        type,\\r\\n                        localIp,\\r\\n                        p2p: this.peerconnection.isP2P,\\r\\n                        localCandidateType: localUsedCandidate.candidateType,\\r\\n                        remoteCandidateType: remoteUsedCandidate.candidateType,\\r\\n                        networkType: localUsedCandidate.networkType,\\r\\n                        rtt: now.currentRoundTripTime * 1000\\r\\n                    });\\r\\n                }\\r\\n            }\\r\\n\\r\\n        // RTCReceivedRtpStreamStats\\r\\n        // https://w3c.github.io/webrtc-stats/#receivedrtpstats-dict*\\r\\n        // RTCSentRtpStreamStats\\r\\n        // https://w3c.github.io/webrtc-stats/#sentrtpstats-dict*\\r\\n        } else if (now.type === 'inbound-rtp' || now.type === 'outbound-rtp') {\\r\\n            const before = this.previousStatsReport.get(now.id);\\r\\n            const ssrc = this.getNonNegativeValue(now.ssrc);\\r\\n\\r\\n            if (!before || !ssrc) {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            let ssrcStats = this.ssrc2stats.get(ssrc);\\r\\n\\r\\n            if (!ssrcStats) {\\r\\n                ssrcStats = new SsrcStats();\\r\\n                this.ssrc2stats.set(ssrc, ssrcStats);\\r\\n            }\\r\\n\\r\\n            let isDownloadStream = true;\\r\\n            let key = 'packetsReceived';\\r\\n\\r\\n            if (now.type === 'outbound-rtp') {\\r\\n                isDownloadStream = false;\\r\\n                key = 'packetsSent';\\r\\n            }\\r\\n\\r\\n            let packetsNow = now[key];\\r\\n\\r\\n            if (!packetsNow || packetsNow < 0) {\\r\\n                packetsNow = 0;\\r\\n            }\\r\\n\\r\\n            const packetsBefore = this.getNonNegativeValue(before[key]);\\r\\n            const packetsDiff = Math.max(0, packetsNow - packetsBefore);\\r\\n\\r\\n            const packetsLostNow\\r\\n                = this.getNonNegativeValue(now.packetsLost);\\r\\n            const packetsLostBefore\\r\\n                = this.getNonNegativeValue(before.packetsLost);\\r\\n            const packetsLostDiff\\r\\n                = Math.max(0, packetsLostNow - packetsLostBefore);\\r\\n\\r\\n            ssrcStats.setLoss({\\r\\n                packetsTotal: packetsDiff + packetsLostDiff,\\r\\n                packetsLost: packetsLostDiff,\\r\\n                isDownloadStream\\r\\n            });\\r\\n\\r\\n            if (now.type === 'inbound-rtp') {\\r\\n\\r\\n                ssrcStats.addBitrate({\\r\\n                    'download': this._calculateBitrate(\\r\\n                                    now, before, 'bytesReceived'),\\r\\n                    'upload': 0\\r\\n                });\\r\\n\\r\\n                // RTCInboundRtpStreamStats\\r\\n                // https://w3c.github.io/webrtc-stats/#inboundrtpstats-dict*\\r\\n                // TODO: can we use framesDecoded for frame rate, available\\r\\n                // in chrome\\r\\n            } else {\\r\\n                byteSentStats[ssrc] = this.getNonNegativeValue(now.bytesSent);\\r\\n                ssrcStats.addBitrate({\\r\\n                    'download': 0,\\r\\n                    'upload': this._calculateBitrate(\\r\\n                                now, before, 'bytesSent')\\r\\n                });\\r\\n\\r\\n                // RTCOutboundRtpStreamStats\\r\\n                // https://w3c.github.io/webrtc-stats/#outboundrtpstats-dict*\\r\\n                // TODO: can we use framesEncoded for frame rate, available\\r\\n                // in chrome\\r\\n            }\\r\\n\\r\\n            // FF has framerateMean out of spec\\r\\n            const framerateMean = now.framerateMean;\\r\\n\\r\\n            if (framerateMean) {\\r\\n                ssrcStats.setFramerate(Math.round(framerateMean || 0));\\r\\n            }\\r\\n\\r\\n        // track for resolution\\r\\n        // RTCVideoHandlerStats\\r\\n        // https://w3c.github.io/webrtc-stats/#vststats-dict*\\r\\n        // RTCMediaHandlerStats\\r\\n        // https://w3c.github.io/webrtc-stats/#mststats-dict*\\r\\n        } else if (now.type === 'track') {\\r\\n\\r\\n            const resolution = {\\r\\n                height: now.frameHeight,\\r\\n                width: now.frameWidth\\r\\n            };\\r\\n\\r\\n            // Tries to get frame rate\\r\\n            let frameRate = now.framesPerSecond;\\r\\n\\r\\n            if (!frameRate) {\\r\\n                // we need to calculate it\\r\\n                const before = this.previousStatsReport.get(now.id);\\r\\n\\r\\n                if (before) {\\r\\n                    const timeMs = now.timestamp - before.timestamp;\\r\\n\\r\\n                    if (timeMs > 0 && now.framesSent) {\\r\\n                        const numberOfFramesSinceBefore\\r\\n                            = now.framesSent - before.framesSent;\\r\\n\\r\\n                        frameRate = (numberOfFramesSinceBefore / timeMs) * 1000;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (!frameRate) {\\r\\n                    return;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            const trackIdentifier = now.trackIdentifier;\\r\\n            const ssrc = this.peerconnection.getSsrcByTrackId(trackIdentifier);\\r\\n            let ssrcStats = this.ssrc2stats.get(ssrc);\\r\\n\\r\\n            if (!ssrcStats) {\\r\\n                ssrcStats = new SsrcStats();\\r\\n                this.ssrc2stats.set(ssrc, ssrcStats);\\r\\n            }\\r\\n            ssrcStats.setFramerate(Math.round(frameRate || 0));\\r\\n\\r\\n            if (resolution.height && resolution.width) {\\r\\n                ssrcStats.setResolution(resolution);\\r\\n            } else {\\r\\n                ssrcStats.setResolution(null);\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n\\r\\n    this.eventEmitter.emit(\\r\\n        StatisticsEvents.BYTE_SENT_STATS, this.peerconnection, byteSentStats);\\r\\n\\r\\n    this._processAndEmitReport();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stats processing logic.\\r\\n */\\r\\nStatsCollector.prototype.processNewAudioLevelReport = function() {\\r\\n    if (!this.baselineAudioLevelsReport) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    this.currentAudioLevelsReport.forEach(now => {\\r\\n        if (now.type !== 'track') {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // Audio level\\r\\n        const audioLevel = now.audioLevel;\\r\\n\\r\\n        if (!audioLevel) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const trackIdentifier = now.trackIdentifier;\\r\\n        const ssrc = this.peerconnection.getSsrcByTrackId(trackIdentifier);\\r\\n\\r\\n        if (ssrc) {\\r\\n            const isLocal\\r\\n                = ssrc === this.peerconnection.getLocalSSRC(\\r\\n                this.peerconnection.getLocalTracks(MediaType.AUDIO));\\r\\n\\r\\n            this.eventEmitter.emit(\\r\\n                StatisticsEvents.AUDIO_LEVEL,\\r\\n                this.peerconnection,\\r\\n                ssrc,\\r\\n                audioLevel,\\r\\n                isLocal);\\r\\n        }\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * End new promised based getStats processing methods.\\r\\n */\\r\\n\",\"\\r\\nimport { Strophe } from 'strophe.js';\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\n\\r\\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\\r\\nimport { ParticipantConnectionStatus }\\r\\n    from './modules/connectivity/ParticipantConnectionStatus';\\r\\nimport * as MediaType from './service/RTC/MediaType';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Represents a participant in (i.e. a member of) a conference.\\r\\n */\\r\\nexport default class JitsiParticipant {\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    /**\\r\\n     * Initializes a new JitsiParticipant instance.\\r\\n     *\\r\\n     * @constructor\\r\\n     * @param jid the conference XMPP jid\\r\\n     * @param conference\\r\\n     * @param displayName\\r\\n     * @param {Boolean} hidden - True if the new JitsiParticipant instance is to\\r\\n     * represent a hidden participant; otherwise, false.\\r\\n     * @param {string} statsID - optional participant statsID\\r\\n     * @param {string} status - the initial status if any.\\r\\n     * @param {object} identity - the xmpp identity\\r\\n     */\\r\\n    constructor(jid, conference, displayName, hidden, statsID, status, identity) {\\r\\n        this._jid = jid;\\r\\n        this._id = Strophe.getResourceFromJid(jid);\\r\\n        this._conference = conference;\\r\\n        this._displayName = displayName;\\r\\n        this._supportsDTMF = false;\\r\\n        this._tracks = [];\\r\\n        this._role = 'none';\\r\\n        this._status = status;\\r\\n        this._hidden = hidden;\\r\\n        this._statsID = statsID;\\r\\n        this._connectionStatus = ParticipantConnectionStatus.ACTIVE;\\r\\n        this._properties = {};\\r\\n        this._identity = identity;\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * @returns {JitsiConference} The conference that this participant belongs\\r\\n     * to.\\r\\n     */\\r\\n    getConference() {\\r\\n        return this._conference;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the value of a property of this participant.\\r\\n     */\\r\\n    getProperty(name) {\\r\\n        return this._properties[name];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether this <tt>JitsiParticipant</tt> has any video tracks which\\r\\n     * are muted according to their underlying WebRTC <tt>MediaStreamTrack</tt>\\r\\n     * muted status.\\r\\n     * @return {boolean} <tt>true</tt> if this <tt>participant</tt> contains any\\r\\n     * video <tt>JitsiTrack</tt>s which are muted as defined in\\r\\n     * {@link JitsiTrack.isWebRTCTrackMuted}.\\r\\n     */\\r\\n    hasAnyVideoTrackWebRTCMuted() {\\r\\n        return (\\r\\n            this.getTracks().some(\\r\\n                jitsiTrack =>\\r\\n                    jitsiTrack.getType() === MediaType.VIDEO\\r\\n                        && jitsiTrack.isWebRTCTrackMuted()));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates participant's connection status.\\r\\n     * @param {string} state the current participant connection state.\\r\\n     * {@link ParticipantConnectionStatus}.\\r\\n     * @private\\r\\n     */\\r\\n    _setConnectionStatus(status) {\\r\\n        this._connectionStatus = status;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Return participant's connectivity status.\\r\\n     *\\r\\n     * @returns {string} the connection status\\r\\n     * <tt>ParticipantConnectionStatus</tt> of the user.\\r\\n     * {@link ParticipantConnectionStatus}.\\r\\n     */\\r\\n    getConnectionStatus() {\\r\\n        return this._connectionStatus;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the value of a property of this participant, and fires an event if\\r\\n     * the value has changed.\\r\\n     * @name the name of the property.\\r\\n     * @value the value to set.\\r\\n     */\\r\\n    setProperty(name, value) {\\r\\n        const oldValue = this._properties[name];\\r\\n\\r\\n        if (value !== oldValue) {\\r\\n            this._properties[name] = value;\\r\\n            this._conference.eventEmitter.emit(\\r\\n                JitsiConferenceEvents.PARTICIPANT_PROPERTY_CHANGED,\\r\\n                this,\\r\\n                name,\\r\\n                oldValue,\\r\\n                value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {Array.<JitsiTrack>} The list of media tracks for this\\r\\n     * participant.\\r\\n     */\\r\\n    getTracks() {\\r\\n        return this._tracks.slice();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @param {MediaType} mediaType\\r\\n     * @returns {Array.<JitsiTrack>} an array of media tracks for this\\r\\n     * participant, for given media type.\\r\\n     */\\r\\n    getTracksByMediaType(mediaType) {\\r\\n        return this.getTracks().filter(track => track.getType() === mediaType);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {String} The ID of this participant.\\r\\n     */\\r\\n    getId() {\\r\\n        return this._id;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {String} The JID of this participant.\\r\\n     */\\r\\n    getJid() {\\r\\n        return this._jid;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {String} The human-readable display name of this participant.\\r\\n     */\\r\\n    getDisplayName() {\\r\\n        return this._displayName;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {String} The stats ID of this participant.\\r\\n     */\\r\\n    getStatsID() {\\r\\n        return this._statsID;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {String} The status of the participant.\\r\\n     */\\r\\n    getStatus() {\\r\\n        return this._status;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {Boolean} Whether this participant is a moderator or not.\\r\\n     */\\r\\n    isModerator() {\\r\\n        return this._role === 'moderator';\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {Boolean} Whether this participant is a hidden participant. Some\\r\\n     * special system participants may want to join hidden (like for example the\\r\\n     * recorder).\\r\\n     */\\r\\n    isHidden() {\\r\\n        return this._hidden;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {Boolean} Whether this participant has muted their audio.\\r\\n     */\\r\\n    isAudioMuted() {\\r\\n        return this._isMediaTypeMuted(MediaType.AUDIO);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Determines whether all JitsiTracks which are of a specific MediaType and\\r\\n     * which belong to this JitsiParticipant are muted.\\r\\n     *\\r\\n     * @param {MediaType} mediaType - The MediaType of the JitsiTracks to be\\r\\n     * checked.\\r\\n     * @private\\r\\n     * @returns {Boolean} True if all JitsiTracks which are of the specified\\r\\n     * mediaType and which belong to this JitsiParticipant are muted; otherwise,\\r\\n     * false.\\r\\n     */\\r\\n    _isMediaTypeMuted(mediaType) {\\r\\n        return this.getTracks().reduce(\\r\\n            (muted, track) =>\\r\\n                muted && (track.getType() !== mediaType || track.isMuted()),\\r\\n            true);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {Boolean} Whether this participant has muted their video.\\r\\n     */\\r\\n    isVideoMuted() {\\r\\n        return this._isMediaTypeMuted(MediaType.VIDEO);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @returns {String} The role of this participant.\\r\\n     */\\r\\n    getRole() {\\r\\n        return this._role;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    supportsDTMF() {\\r\\n        return this._supportsDTMF;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns a set with the features for the participant.\\r\\n     * @param {int} timeout the timeout in ms for reply from the participant.\\r\\n     * @returns {Promise<Set<String>, Error>}\\r\\n     */\\r\\n    getFeatures(timeout = 5000) {\\r\\n        return this._conference.xmpp.caps.getFeatures(this._jid, timeout)\\r\\n            .catch(error => {\\r\\n                // when we detect version mismatch we return a string as error\\r\\n                // we want to retry in such case\\r\\n                if (error && error.constructor === String) {\\r\\n                    return this._conference.xmpp.caps.getFeatures(this._jid, timeout);\\r\\n                }\\r\\n\\r\\n                logger.warn(`Failed to discover features of ${this._jid}`, error);\\r\\n\\r\\n                return Promise.reject(error);\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the bot type for the participant.\\r\\n     *\\r\\n     * @returns {string|undefined} - The bot type of the participant.\\r\\n     */\\r\\n    getBotType() {\\r\\n        return this._botType;\\r\\n    }\\r\\n}\\r\\n\",\"import {\\r\\n    CONNECTION_DISCONNECTED,\\r\\n    CONNECTION_ESTABLISHED,\\r\\n    CONNECTION_FAILED\\r\\n} from './JitsiConnectionEvents';\\r\\nimport XMPP from './modules/xmpp/xmpp';\\r\\n\\r\\n/**\\r\\n * @typedef {Object} UpgradeRoleError\\r\\n *\\r\\n * @property {JitsiConnectionErrors} [connectionError] - One of\\r\\n * {@link JitsiConnectionErrors} which occurred when trying to connect to the\\r\\n * XMPP server.\\r\\n * @property {String} [authenticationError] - One of XMPP error conditions\\r\\n * returned by Jicofo on authentication attempt. See\\r\\n * {@link https://xmpp.org/rfcs/rfc3920.html#streams-error}.\\r\\n * @property {String} [message] - More details about the error.\\r\\n * @property {Object} [credentials] - The credentials that failed the\\r\\n * authentication.\\r\\n * @property {String} [credentials.jid] - The XMPP ID part of the credentials\\r\\n * that failed the authentication.\\r\\n * @property {string} [credentials.password] - The password part of the\\r\\n * credentials that failed the authentication.\\r\\n *\\r\\n * NOTE If neither one of the errors is present, then the operation has been\\r\\n * canceled.\\r\\n */\\r\\n\\r\\n/* eslint-disable no-invalid-this */\\r\\n\\r\\n/**\\r\\n * Connects to the XMPP server using the specified credentials and contacts\\r\\n * Jicofo in order to obtain a session ID (which is then stored in the local\\r\\n * storage). The user's role of the parent conference will be upgraded to\\r\\n * moderator (by Jicofo). It's also used to join the conference when starting\\r\\n * from anonymous domain and only authenticated users are allowed to create new\\r\\n * rooms.\\r\\n *\\r\\n * @param {Object} options\\r\\n * @param {string} options.id - XMPP user's ID to log in. For example,\\r\\n * user@xmpp-server.com.\\r\\n * @param {string} options.password - XMPP user's password to log in with.\\r\\n * @param {string} [options.roomPassword] - The password to join the MUC with.\\r\\n * @param {Function} [options.onLoginSuccessful] - Callback called when logging\\r\\n * into the XMPP server was successful. The next step will be to obtain a new\\r\\n * session ID from Jicofo and join the MUC using it which will effectively\\r\\n * upgrade the user's role to moderator.\\r\\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\\r\\n * authenticating and upgrading the role of the specified XMPP user finishes and\\r\\n * (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\\r\\n * process. If the process finishes successfully, the session ID has been stored\\r\\n * in the settings and the <tt>thenable</tt> is resolved. If the process\\r\\n * finishes with failure, the <tt>thenable</tt> is rejected with reason of type\\r\\n * {@link UpgradeRoleError} which will have either <tt>connectionError</tt> or\\r\\n * <tt>authenticationError</tt> property set depending on which of the steps has\\r\\n * failed. If <tt>cancel</tt> is called before the process finishes, then the\\r\\n * thenable will be rejected with an empty object (i.e. no error property will\\r\\n * be set on the rejection reason).\\r\\n */\\r\\nexport default function authenticateAndUpgradeRole({\\r\\n    // 1. Log the specified XMPP user in.\\r\\n    id,\\r\\n    password,\\r\\n    onCreateResource,\\r\\n\\r\\n    // 2. Let the API client/consumer know as soon as the XMPP user has been\\r\\n    //    successfully logged in.\\r\\n    onLoginSuccessful,\\r\\n\\r\\n    // 3. Join the MUC.\\r\\n    roomPassword\\r\\n}) {\\r\\n    let canceled = false;\\r\\n    let rejectPromise;\\r\\n    let xmpp = new XMPP(this.connection.options);\\r\\n\\r\\n    const process = new Promise((resolve, reject) => {\\r\\n        // The process is represented by a Thenable with a cancel method. The\\r\\n        // Thenable is implemented using Promise and the cancel using the\\r\\n        // Promise's reject function.\\r\\n        rejectPromise = reject;\\r\\n\\r\\n\\r\\n        xmpp.addListener(\\r\\n            CONNECTION_DISCONNECTED,\\r\\n            () => {\\r\\n                xmpp = undefined;\\r\\n            });\\r\\n        xmpp.addListener(\\r\\n            CONNECTION_ESTABLISHED,\\r\\n            () => {\\r\\n                if (canceled) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                // Let the caller know that the XMPP login was successful.\\r\\n                onLoginSuccessful && onLoginSuccessful();\\r\\n\\r\\n                // Now authenticate with Jicofo and get a new session ID.\\r\\n                const room = xmpp.createRoom(\\r\\n                    this.options.name,\\r\\n                    this.options.config,\\r\\n                    onCreateResource\\r\\n                );\\r\\n\\r\\n                room.moderator.authenticate()\\r\\n                    .then(() => {\\r\\n                        xmpp && xmpp.disconnect();\\r\\n\\r\\n                        if (canceled) {\\r\\n                            return;\\r\\n                        }\\r\\n\\r\\n                        // At this point we should have the new session ID\\r\\n                        // stored in the settings. Jicofo will allow to join the\\r\\n                        // room.\\r\\n                        this.join(roomPassword);\\r\\n\\r\\n                        resolve();\\r\\n                    })\\r\\n                    .catch(({ error, message }) => {\\r\\n                        xmpp.disconnect();\\r\\n\\r\\n                        reject({\\r\\n                            authenticationError: error,\\r\\n                            message\\r\\n                        });\\r\\n                    });\\r\\n            });\\r\\n        xmpp.addListener(\\r\\n            CONNECTION_FAILED,\\r\\n            (connectionError, message, credentials) => {\\r\\n                reject({\\r\\n                    connectionError,\\r\\n                    credentials,\\r\\n                    message\\r\\n                });\\r\\n                xmpp = undefined;\\r\\n            });\\r\\n\\r\\n        canceled || xmpp.connect(id, password);\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Cancels the process, if it's in progress, of authenticating and upgrading\\r\\n     * the role of the local participant/user.\\r\\n     *\\r\\n     * @public\\r\\n     * @returns {void}\\r\\n     */\\r\\n    process.cancel = () => {\\r\\n        canceled = true;\\r\\n        rejectPromise({});\\r\\n        xmpp && xmpp.disconnect();\\r\\n    };\\r\\n\\r\\n    return process;\\r\\n}\\r\\n\\r\\n/* eslint-enable no-invalid-this */\\r\\n\",\"/* global $ */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport { Strophe } from 'strophe.js';\\r\\n\\r\\nimport ChatRoom from './ChatRoom';\\r\\nimport { ConnectionPluginListenable } from './ConnectionPlugin';\\r\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * MUC connection plugin.\\r\\n */\\r\\nclass MucConnectionPlugin extends ConnectionPluginListenable {\\r\\n    /**\\r\\n     *\\r\\n     * @param xmpp\\r\\n     */\\r\\n    constructor(xmpp) {\\r\\n        super();\\r\\n        this.xmpp = xmpp;\\r\\n        this.rooms = {};\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param connection\\r\\n     */\\r\\n    init(connection) {\\r\\n        super.init(connection);\\r\\n\\r\\n        // add handlers (just once)\\r\\n        this.connection.addHandler(this.onPresence.bind(this), null,\\r\\n            'presence', null, null, null, null);\\r\\n        this.connection.addHandler(this.onPresenceUnavailable.bind(this),\\r\\n            null, 'presence', 'unavailable', null);\\r\\n        this.connection.addHandler(this.onPresenceError.bind(this), null,\\r\\n            'presence', 'error', null);\\r\\n        this.connection.addHandler(this.onMessage.bind(this), null,\\r\\n            'message', null, null);\\r\\n        this.connection.addHandler(this.onMute.bind(this),\\r\\n            'http://jitsi.org/jitmeet/audio', 'iq', 'set', null, null);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param jid\\r\\n     * @param password\\r\\n     * @param options\\r\\n     */\\r\\n    createRoom(jid, password, options) {\\r\\n        const roomJid = Strophe.getBareJidFromJid(jid);\\r\\n\\r\\n        if (this.rooms[roomJid]) {\\r\\n            const errmsg = 'You are already in the room!';\\r\\n\\r\\n            logger.error(errmsg);\\r\\n            throw new Error(errmsg);\\r\\n        }\\r\\n        this.rooms[roomJid] = new ChatRoom(this.connection, jid,\\r\\n            password, this.xmpp, options);\\r\\n        this.eventEmitter.emit(\\r\\n            XMPPEvents.EMUC_ROOM_ADDED, this.rooms[roomJid]);\\r\\n\\r\\n        return this.rooms[roomJid];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param jid\\r\\n     */\\r\\n    doLeave(jid) {\\r\\n        this.eventEmitter.emit(\\r\\n            XMPPEvents.EMUC_ROOM_REMOVED, this.rooms[jid]);\\r\\n        delete this.rooms[jid];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param pres\\r\\n     */\\r\\n    onPresence(pres) {\\r\\n        const from = pres.getAttribute('from');\\r\\n\\r\\n        // What is this for? A workaround for something?\\r\\n        if (pres.getAttribute('type')) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\\r\\n\\r\\n        if (!room) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        // Parse status.\\r\\n        if ($(pres).find('>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]'\\r\\n            + '>status[code=\\\"201\\\"]').length) {\\r\\n            room.createNonAnonymousRoom();\\r\\n        }\\r\\n\\r\\n        room.onPresence(pres);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param pres\\r\\n     */\\r\\n    onPresenceUnavailable(pres) {\\r\\n        const from = pres.getAttribute('from');\\r\\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\\r\\n\\r\\n        if (!room) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        room.onPresenceUnavailable(pres, from);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param pres\\r\\n     */\\r\\n    onPresenceError(pres) {\\r\\n        const from = pres.getAttribute('from');\\r\\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\\r\\n\\r\\n        if (!room) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        room.onPresenceError(pres, from);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param msg\\r\\n     */\\r\\n    onMessage(msg) {\\r\\n        // FIXME: this is a hack. but jingle on muc makes nickchanges hard\\r\\n        const from = msg.getAttribute('from');\\r\\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\\r\\n\\r\\n        if (!room) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        room.onMessage(msg, from);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * TODO: Document\\r\\n     * @param iq\\r\\n     */\\r\\n    onMute(iq) {\\r\\n        const from = iq.getAttribute('from');\\r\\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\\r\\n\\r\\n        // Returning false would result in the listener being deregistered by Strophe\\r\\n        if (!room) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        room.onMute(iq);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param XMPP\\r\\n */\\r\\nexport default function(XMPP) {\\r\\n    Strophe.addConnectionPlugin('emuc', new MucConnectionPlugin(XMPP));\\r\\n}\\r\\n\",\"/* global $, __filename */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport { $iq, $msg, $pres, Strophe } from 'strophe.js';\\r\\n\\r\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\r\\nimport * as JitsiTranscriptionStatus from '../../JitsiTranscriptionStatus';\\r\\nimport Listenable from '../util/Listenable';\\r\\nimport Settings from '../settings/Settings';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\r\\n\\r\\nimport Moderator from './moderator';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\nexport const parser = {\\r\\n    packet2JSON(xmlElement, nodes) {\\r\\n        for (const child of Array.from(xmlElement.children)) {\\r\\n            const node = {\\r\\n                attributes: {},\\r\\n                children: [],\\r\\n                tagName: child.tagName\\r\\n            };\\r\\n\\r\\n            for (const attr of Array.from(child.attributes)) {\\r\\n                node.attributes[attr.name] = attr.value;\\r\\n            }\\r\\n            const text = Strophe.getText(child);\\r\\n\\r\\n            if (text) {\\r\\n                // Using Strophe.getText will do work for traversing all direct\\r\\n                // child text nodes but returns an escaped value, which is not\\r\\n                // desirable at this point.\\r\\n                node.value = Strophe.xmlunescape(text);\\r\\n            }\\r\\n            nodes.push(node);\\r\\n            this.packet2JSON(child, node.children);\\r\\n        }\\r\\n    },\\r\\n    json2packet(nodes, packet) {\\r\\n        for (let i = 0; i < nodes.length; i++) {\\r\\n            const node = nodes[i];\\r\\n\\r\\n            if (node) {\\r\\n                packet.c(node.tagName, node.attributes);\\r\\n                if (node.value) {\\r\\n                    packet.t(node.value);\\r\\n                }\\r\\n                if (node.children) {\\r\\n                    this.json2packet(node.children, packet);\\r\\n                }\\r\\n                packet.up();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // packet.up();\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns array of JS objects from the presence JSON associated with the passed\\r\\n / nodeName\\r\\n * @param pres the presence JSON\\r\\n * @param nodeName the name of the node (videomuted, audiomuted, etc)\\r\\n */\\r\\nfunction filterNodeFromPresenceJSON(pres, nodeName) {\\r\\n    const res = [];\\r\\n\\r\\n    for (let i = 0; i < pres.length; i++) {\\r\\n        if (pres[i].tagName === nodeName) {\\r\\n            res.push(pres[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return res;\\r\\n}\\r\\n\\r\\n// XXX As ChatRoom constructs XMPP stanzas and Strophe is build around the idea\\r\\n// of chaining function calls, allow long function call chains.\\r\\n/* eslint-disable newline-per-chained-call */\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nexport default class ChatRoom extends Listenable {\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param connection\\r\\n     * @param jid\\r\\n     * @param password\\r\\n     * @param XMPP\\r\\n     * @param options\\r\\n     * @param {boolean} options.disableFocus - when set to {@code false} will\\r\\n     * not invite Jicofo into the room. This is intended to be used only by\\r\\n     * jitsi-meet-spot.\\r\\n     */\\r\\n    constructor(connection, jid, password, XMPP, options) {\\r\\n        super();\\r\\n        this.xmpp = XMPP;\\r\\n        this.connection = connection;\\r\\n        this.roomjid = Strophe.getBareJidFromJid(jid);\\r\\n        this.myroomjid = jid;\\r\\n        this.password = password;\\r\\n        logger.info(`Joined MUC as ${this.myroomjid}`);\\r\\n        this.members = {};\\r\\n        this.presMap = {};\\r\\n        this.presHandlers = {};\\r\\n        this.joined = false;\\r\\n        this.role = null;\\r\\n        this.focusMucJid = null;\\r\\n        this.noBridgeAvailable = false;\\r\\n        this.options = options || {};\\r\\n        this.moderator\\r\\n            = new Moderator(this.roomjid, this.xmpp, this.eventEmitter, {\\r\\n                connection: this.xmpp.options,\\r\\n                conference: this.options\\r\\n            });\\r\\n        this.initPresenceMap(options);\\r\\n        this.lastPresences = {};\\r\\n        this.phoneNumber = null;\\r\\n        this.phonePin = null;\\r\\n        this.connectionTimes = {};\\r\\n        this.participantPropertyListener = null;\\r\\n\\r\\n        this.locked = false;\\r\\n        this.transcriptionStatus = JitsiTranscriptionStatus.OFF;\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    initPresenceMap(options = {}) {\\r\\n        this.presMap.to = this.myroomjid;\\r\\n        this.presMap.xns = 'http://jabber.org/protocol/muc';\\r\\n        this.presMap.nodes = [];\\r\\n\\r\\n        if (options.enableStatsID) {\\r\\n            this.presMap.nodes.push({\\r\\n                'tagName': 'stats-id',\\r\\n                'value': Settings.callStatsUserName\\r\\n            });\\r\\n        }\\r\\n\\r\\n        // We need to broadcast 'videomuted' status from the beginning, cause\\r\\n        // Jicofo makes decisions based on that. Initialize it with 'false'\\r\\n        // here.\\r\\n        this.addVideoInfoToPresence(false);\\r\\n\\r\\n        if (options.deploymentInfo && options.deploymentInfo.userRegion) {\\r\\n            this.presMap.nodes.push({\\r\\n                'tagName': 'region',\\r\\n                'attributes': {\\r\\n                    id: options.deploymentInfo.userRegion,\\r\\n                    xmlns: 'http://jitsi.org/jitsi-meet'\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Joins the chat room.\\r\\n     * @param password\\r\\n     * @returns {Promise} - resolved when join completes. At the time of this\\r\\n     * writing it's never rejected.\\r\\n     */\\r\\n    join(password) {\\r\\n        this.password = password;\\r\\n\\r\\n        return new Promise(resolve => {\\r\\n            this.options.disableFocus\\r\\n                && logger.info('Conference focus disabled');\\r\\n\\r\\n            const preJoin\\r\\n                = this.options.disableFocus\\r\\n                    ? Promise.resolve()\\r\\n                    : this.moderator.allocateConferenceFocus();\\r\\n\\r\\n            preJoin.then(() => {\\r\\n                this.sendPresence(true);\\r\\n                resolve();\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param fromJoin\\r\\n     */\\r\\n    sendPresence(fromJoin) {\\r\\n        const to = this.presMap.to;\\r\\n\\r\\n        if (!to || (!this.joined && !fromJoin)) {\\r\\n            // Too early to send presence - not initialized\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const pres = $pres({ to });\\r\\n\\r\\n        // xep-0045 defines: \\\"including in the initial presence stanza an empty\\r\\n        // <x/> element qualified by the 'http://jabber.org/protocol/muc'\\r\\n        // namespace\\\" and subsequent presences should not include that or it can\\r\\n        // be considered as joining, and server can send us the message history\\r\\n        // for the room on every presence\\r\\n        if (fromJoin) {\\r\\n            pres.c('x', { xmlns: this.presMap.xns });\\r\\n\\r\\n            if (this.password) {\\r\\n                pres.c('password').t(this.password).up();\\r\\n            }\\r\\n            pres.up();\\r\\n        }\\r\\n\\r\\n        parser.json2packet(this.presMap.nodes, pres);\\r\\n        this.connection.send(pres);\\r\\n        if (fromJoin) {\\r\\n            // XXX We're pressed for time here because we're beginning a complex\\r\\n            // and/or lengthy conference-establishment process which supposedly\\r\\n            // involves multiple RTTs. We don't have the time to wait for\\r\\n            // Strophe to decide to send our IQ.\\r\\n            this.connection.flush();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends the presence unavailable, signaling the server\\r\\n     * we want to leave the room.\\r\\n     */\\r\\n    doLeave() {\\r\\n        logger.log('do leave', this.myroomjid);\\r\\n        const pres = $pres({ to: this.myroomjid,\\r\\n            type: 'unavailable' });\\r\\n\\r\\n        this.presMap.length = 0;\\r\\n\\r\\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that\\r\\n        // means that there may not be enough time to send the unavailable\\r\\n        // presence. Switching Strophe to synchronous sending is not much of an\\r\\n        // option because it may lead to a noticeable delay in navigating away\\r\\n        // from the current location. As a compromise, we will try to increase\\r\\n        // the chances of sending the unavailable presence within the short time\\r\\n        // span that we have upon unloading by invoking flush() on the\\r\\n        // connection. We flush() once before sending/queuing the unavailable\\r\\n        // presence in order to attemtp to have the unavailable presence at the\\r\\n        // top of the send queue. We flush() once more after sending/queuing the\\r\\n        // unavailable presence in order to attempt to have it sent as soon as\\r\\n        // possible.\\r\\n        this.connection.flush();\\r\\n        this.connection.send(pres);\\r\\n        this.connection.flush();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    discoRoomInfo() {\\r\\n        // https://xmpp.org/extensions/xep-0045.html#disco-roominfo\\r\\n\\r\\n        const getInfo\\r\\n            = $iq({\\r\\n                type: 'get',\\r\\n                to: this.roomjid\\r\\n            })\\r\\n                .c('query', { xmlns: Strophe.NS.DISCO_INFO });\\r\\n\\r\\n        this.connection.sendIQ(getInfo, result => {\\r\\n            const locked\\r\\n                = $(result).find('>query>feature[var=\\\"muc_passwordprotected\\\"]')\\r\\n                    .length\\r\\n                    === 1;\\r\\n\\r\\n            if (locked !== this.locked) {\\r\\n                this.eventEmitter.emit(XMPPEvents.MUC_LOCK_CHANGED, locked);\\r\\n                this.locked = locked;\\r\\n            }\\r\\n        }, error => {\\r\\n            GlobalOnErrorHandler.callErrorHandler(error);\\r\\n            logger.error('Error getting room info: ', error);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    createNonAnonymousRoom() {\\r\\n        // http://xmpp.org/extensions/xep-0045.html#createroom-reserved\\r\\n\\r\\n        const getForm = $iq({ type: 'get',\\r\\n            to: this.roomjid })\\r\\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' })\\r\\n            .c('x', { xmlns: 'jabber:x:data',\\r\\n                type: 'submit' });\\r\\n\\r\\n        const self = this;\\r\\n\\r\\n        this.connection.sendIQ(getForm, form => {\\r\\n            if (!$(form).find(\\r\\n                    '>query>x[xmlns=\\\"jabber:x:data\\\"]'\\r\\n                    + '>field[var=\\\"muc#roomconfig_whois\\\"]').length) {\\r\\n                const errmsg = 'non-anonymous rooms not supported';\\r\\n\\r\\n                GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\r\\n                logger.error(errmsg);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            const formSubmit = $iq({ to: self.roomjid,\\r\\n                type: 'set' })\\r\\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' });\\r\\n\\r\\n            formSubmit.c('x', { xmlns: 'jabber:x:data',\\r\\n                type: 'submit' });\\r\\n\\r\\n            formSubmit.c('field', { 'var': 'FORM_TYPE' })\\r\\n                .c('value')\\r\\n                .t('http://jabber.org/protocol/muc#roomconfig').up().up();\\r\\n\\r\\n            formSubmit.c('field', { 'var': 'muc#roomconfig_whois' })\\r\\n                .c('value').t('anyone').up().up();\\r\\n\\r\\n            self.connection.sendIQ(formSubmit);\\r\\n\\r\\n        }, error => {\\r\\n            GlobalOnErrorHandler.callErrorHandler(error);\\r\\n            logger.error('Error getting room configuration form: ', error);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param pres\\r\\n     */\\r\\n    onPresence(pres) {\\r\\n        const from = pres.getAttribute('from');\\r\\n        const member = {};\\r\\n        const statusEl = pres.getElementsByTagName('status')[0];\\r\\n\\r\\n        if (statusEl) {\\r\\n            member.status = statusEl.textContent || '';\\r\\n        }\\r\\n        let hasStatusUpdate = false;\\r\\n        let hasVersionUpdate = false;\\r\\n        const xElement\\r\\n            = pres.getElementsByTagNameNS(\\r\\n                'http://jabber.org/protocol/muc#user', 'x')[0];\\r\\n        const mucUserItem\\r\\n            = xElement && xElement.getElementsByTagName('item')[0];\\r\\n\\r\\n        member.affiliation\\r\\n            = mucUserItem && mucUserItem.getAttribute('affiliation');\\r\\n        member.role = mucUserItem && mucUserItem.getAttribute('role');\\r\\n\\r\\n        // Focus recognition\\r\\n        const jid = mucUserItem && mucUserItem.getAttribute('jid');\\r\\n\\r\\n        member.jid = jid;\\r\\n        member.isFocus\\r\\n            = jid && jid.indexOf(`${this.moderator.getFocusUserJid()}/`) === 0;\\r\\n        member.isHiddenDomain\\r\\n            = jid && jid.indexOf('@') > 0\\r\\n                && this.options.hiddenDomain\\r\\n                    === jid.substring(jid.indexOf('@') + 1, jid.indexOf('/'));\\r\\n\\r\\n        this.eventEmitter.emit(XMPPEvents.PRESENCE_RECEIVED, {\\r\\n            fromHiddenDomain: member.isHiddenDomain,\\r\\n            presence: pres\\r\\n        });\\r\\n\\r\\n        const xEl = pres.querySelector('x');\\r\\n\\r\\n        if (xEl) {\\r\\n            xEl.remove();\\r\\n        }\\r\\n\\r\\n        const nodes = [];\\r\\n\\r\\n        parser.packet2JSON(pres, nodes);\\r\\n        this.lastPresences[from] = nodes;\\r\\n\\r\\n        // process nodes to extract data needed for MUC_JOINED and\\r\\n        // MUC_MEMBER_JOINED events\\r\\n        const extractIdentityInformation = node => {\\r\\n            const identity = {};\\r\\n            const userInfo = node.children.find(c => c.tagName === 'user');\\r\\n\\r\\n            if (userInfo) {\\r\\n                identity.user = {};\\r\\n                for (const tag of [ 'id', 'name', 'avatar' ]) {\\r\\n                    const child\\r\\n                        = userInfo.children.find(c => c.tagName === tag);\\r\\n\\r\\n                    if (child) {\\r\\n                        identity.user[tag] = child.value;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            const groupInfo = node.children.find(c => c.tagName === 'group');\\r\\n\\r\\n            if (groupInfo) {\\r\\n                identity.group = groupInfo.value;\\r\\n            }\\r\\n\\r\\n            return identity;\\r\\n        };\\r\\n\\r\\n        for (let i = 0; i < nodes.length; i++) {\\r\\n            const node = nodes[i];\\r\\n\\r\\n            switch (node.tagName) {\\r\\n            case 'bot': {\\r\\n                const { attributes } = node;\\r\\n\\r\\n                if (!attributes) {\\r\\n                    break;\\r\\n                }\\r\\n                const { type } = attributes;\\r\\n\\r\\n                member.botType = type;\\r\\n                break;\\r\\n            }\\r\\n            case 'nick':\\r\\n                member.nick = node.value;\\r\\n                break;\\r\\n            case 'userId':\\r\\n                member.id = node.value;\\r\\n                break;\\r\\n            case 'stats-id':\\r\\n                member.statsID = node.value;\\r\\n                break;\\r\\n            case 'identity':\\r\\n                member.identity = extractIdentityInformation(node);\\r\\n                break;\\r\\n            case 'stat': {\\r\\n                const { attributes } = node;\\r\\n\\r\\n                if (!attributes) {\\r\\n                    break;\\r\\n                }\\r\\n                const { name } = attributes;\\r\\n\\r\\n                if (name === 'version') {\\r\\n                    member.version = attributes.value;\\r\\n                }\\r\\n                break;\\r\\n            }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (from === this.myroomjid) {\\r\\n            const newRole\\r\\n                = member.affiliation === 'owner' ? member.role : 'none';\\r\\n\\r\\n            if (this.role !== newRole) {\\r\\n                this.role = newRole;\\r\\n                this.eventEmitter.emit(\\r\\n                    XMPPEvents.LOCAL_ROLE_CHANGED,\\r\\n                    this.role);\\r\\n            }\\r\\n            if (!this.joined) {\\r\\n                this.joined = true;\\r\\n                const now = this.connectionTimes['muc.joined']\\r\\n                    = window.performance.now();\\r\\n\\r\\n                logger.log('(TIME) MUC joined:\\\\t', now);\\r\\n\\r\\n                // set correct initial state of locked\\r\\n                if (this.password) {\\r\\n                    this.locked = true;\\r\\n                }\\r\\n\\r\\n                // Re-send presence in case any presence updates were added,\\r\\n                // but blocked from sending, during the join process.\\r\\n                this.sendPresence();\\r\\n\\r\\n                this.eventEmitter.emit(XMPPEvents.MUC_JOINED);\\r\\n            }\\r\\n        } else if (this.members[from] === undefined) {\\r\\n            // new participant\\r\\n            this.members[from] = member;\\r\\n            logger.log('entered', from, member);\\r\\n            hasStatusUpdate = member.status !== undefined;\\r\\n            hasVersionUpdate = member.version !== undefined;\\r\\n            if (member.isFocus) {\\r\\n                this._initFocus(from, jid);\\r\\n            } else {\\r\\n                // identity is being added to member joined, so external\\r\\n                // services can be notified for that (currently identity is\\r\\n                // not used inside library)\\r\\n                this.eventEmitter.emit(\\r\\n                    XMPPEvents.MUC_MEMBER_JOINED,\\r\\n                    from,\\r\\n                    member.nick,\\r\\n                    member.role,\\r\\n                    member.isHiddenDomain,\\r\\n                    member.statsID,\\r\\n                    member.status,\\r\\n                    member.identity,\\r\\n                    member.botType);\\r\\n\\r\\n                // we are reporting the status with the join\\r\\n                // so we do not want a second event about status update\\r\\n                hasStatusUpdate = false;\\r\\n            }\\r\\n        } else {\\r\\n            // Presence update for existing participant\\r\\n            // Watch role change:\\r\\n            const memberOfThis = this.members[from];\\r\\n\\r\\n            if (memberOfThis.role !== member.role) {\\r\\n                memberOfThis.role = member.role;\\r\\n                this.eventEmitter.emit(\\r\\n                    XMPPEvents.MUC_ROLE_CHANGED, from, member.role);\\r\\n            }\\r\\n\\r\\n            // fire event that botType had changed\\r\\n            if (memberOfThis.botType !== member.botType) {\\r\\n                memberOfThis.botType = member.botType;\\r\\n                this.eventEmitter.emit(\\r\\n                    XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\\r\\n                    from,\\r\\n                    member.botType);\\r\\n            }\\r\\n\\r\\n            if (member.isFocus) {\\r\\n                // From time to time first few presences of the focus are not\\r\\n                // containing it's jid. That way we can mark later the focus\\r\\n                // member instead of not marking it at all and not starting the\\r\\n                // conference.\\r\\n                // FIXME: Maybe there is a better way to handle this issue. It\\r\\n                // seems there is some period of time in prosody that the\\r\\n                // configuration form is received but not applied. And if any\\r\\n                // participant joins during that period of time the first\\r\\n                // presence from the focus won't contain\\r\\n                // <item jid=\\\"focus...\\\" />.\\r\\n                memberOfThis.isFocus = true;\\r\\n                this._initFocus(from, jid);\\r\\n            }\\r\\n\\r\\n            // store the new display name\\r\\n            if (member.displayName) {\\r\\n                memberOfThis.displayName = member.displayName;\\r\\n            }\\r\\n\\r\\n            // update stored status message to be able to detect changes\\r\\n            if (memberOfThis.status !== member.status) {\\r\\n                hasStatusUpdate = true;\\r\\n                memberOfThis.status = member.status;\\r\\n            }\\r\\n\\r\\n            if (memberOfThis.version !== member.version) {\\r\\n                hasVersionUpdate = true;\\r\\n                memberOfThis.version = member.version;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // after we had fired member or room joined events, lets fire events\\r\\n        // for the rest info we got in presence\\r\\n        for (let i = 0; i < nodes.length; i++) {\\r\\n            const node = nodes[i];\\r\\n\\r\\n            switch (node.tagName) {\\r\\n            case 'nick':\\r\\n                if (!member.isFocus) {\\r\\n                    const displayName\\r\\n                        = this.xmpp.options.displayJids\\r\\n                            ? Strophe.getResourceFromJid(from)\\r\\n                            : member.nick;\\r\\n\\r\\n                    this.eventEmitter.emit(\\r\\n                        XMPPEvents.DISPLAY_NAME_CHANGED,\\r\\n                        from,\\r\\n                        displayName);\\r\\n                }\\r\\n                break;\\r\\n            case 'bridgeNotAvailable':\\r\\n                if (member.isFocus && !this.noBridgeAvailable) {\\r\\n                    this.noBridgeAvailable = true;\\r\\n                    this.eventEmitter.emit(XMPPEvents.BRIDGE_DOWN);\\r\\n                }\\r\\n                break;\\r\\n            case 'conference-properties':\\r\\n                if (member.isFocus) {\\r\\n                    const properties = {};\\r\\n\\r\\n                    for (let j = 0; j < node.children.length; j++) {\\r\\n                        const { attributes } = node.children[j];\\r\\n\\r\\n                        if (attributes && attributes.key) {\\r\\n                            properties[attributes.key] = attributes.value;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    this.eventEmitter.emit(\\r\\n                        XMPPEvents.CONFERENCE_PROPERTIES_CHANGED, properties);\\r\\n                }\\r\\n                break;\\r\\n            case 'transcription-status': {\\r\\n                const { attributes } = node;\\r\\n\\r\\n                if (!attributes) {\\r\\n                    break;\\r\\n                }\\r\\n\\r\\n                const { status } = attributes;\\r\\n\\r\\n                if (status && status !== this.transcriptionStatus) {\\r\\n                    this.transcriptionStatus = status;\\r\\n                    this.eventEmitter.emit(\\r\\n                        XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\\r\\n                        status\\r\\n                    );\\r\\n                }\\r\\n\\r\\n\\r\\n                break;\\r\\n            }\\r\\n            case 'call-control': {\\r\\n                const att = node.attributes;\\r\\n\\r\\n                if (!att) {\\r\\n                    break;\\r\\n                }\\r\\n                this.phoneNumber = att.phone || null;\\r\\n                this.phonePin = att.pin || null;\\r\\n                this.eventEmitter.emit(XMPPEvents.PHONE_NUMBER_CHANGED);\\r\\n                break;\\r\\n            }\\r\\n            default:\\r\\n                this.processNode(node, from);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // Trigger status message update if necessary\\r\\n        if (hasStatusUpdate) {\\r\\n            this.eventEmitter.emit(\\r\\n                XMPPEvents.PRESENCE_STATUS,\\r\\n                from,\\r\\n                member.status);\\r\\n        }\\r\\n\\r\\n        if (hasVersionUpdate) {\\r\\n            logger.info(`Received version for ${jid}: ${member.version}`);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initialize some properties when the focus participant is verified.\\r\\n     * @param from jid of the focus\\r\\n     * @param mucJid the jid of the focus in the muc\\r\\n     */\\r\\n    _initFocus(from, mucJid) {\\r\\n        this.focusMucJid = from;\\r\\n\\r\\n        logger.info(`Ignore focus: ${from}, real JID: ${mucJid}`);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the special listener to be used for \\\"command\\\"s whose name starts\\r\\n     * with \\\"jitsi_participant_\\\".\\r\\n     */\\r\\n    setParticipantPropertyListener(listener) {\\r\\n        this.participantPropertyListener = listener;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param node\\r\\n     * @param from\\r\\n     */\\r\\n    processNode(node, from) {\\r\\n        // make sure we catch all errors coming from any handler\\r\\n        // otherwise we can remove the presence handler from strophe\\r\\n        try {\\r\\n            let tagHandlers = this.presHandlers[node.tagName];\\r\\n\\r\\n            if (node.tagName.startsWith('jitsi_participant_')) {\\r\\n                tagHandlers = [ this.participantPropertyListener ];\\r\\n            }\\r\\n\\r\\n            if (tagHandlers) {\\r\\n                tagHandlers.forEach(handler => {\\r\\n                    handler(node, Strophe.getResourceFromJid(from), from);\\r\\n                });\\r\\n            }\\r\\n        } catch (e) {\\r\\n            GlobalOnErrorHandler.callErrorHandler(e);\\r\\n            logger.error(`Error processing:${node.tagName} node.`, e);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Send text message to the other participants in the conference\\r\\n     * @param message\\r\\n     * @param elementName\\r\\n     * @param nickname\\r\\n     */\\r\\n    sendMessage(message, elementName, nickname) {\\r\\n        const msg = $msg({ to: this.roomjid,\\r\\n            type: 'groupchat' });\\r\\n\\r\\n        // We are adding the message in a packet extension. If this element\\r\\n        // is different from 'body', we add a custom namespace.\\r\\n        // e.g. for 'json-message' extension of message stanza.\\r\\n        if (elementName === 'body') {\\r\\n            msg.c(elementName, message).up();\\r\\n        } else {\\r\\n            msg.c(elementName, { xmlns: 'http://jitsi.org/jitmeet' }, message)\\r\\n                .up();\\r\\n        }\\r\\n        if (nickname) {\\r\\n            msg.c('nick', { xmlns: 'http://jabber.org/protocol/nick' })\\r\\n                .t(nickname)\\r\\n                .up()\\r\\n                .up();\\r\\n        }\\r\\n        this.connection.send(msg);\\r\\n        this.eventEmitter.emit(XMPPEvents.SENDING_CHAT_MESSAGE, message);\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n    /**\\r\\n     * Send private text message to another participant of the conference\\r\\n     * @param id id/muc resource of the receiver\\r\\n     * @param message\\r\\n     * @param elementName\\r\\n     * @param nickname\\r\\n     */\\r\\n    sendPrivateMessage(id, message, elementName, nickname) {\\r\\n        const msg = $msg({ to: `${this.roomjid}/${id}`,\\r\\n            type: 'chat' });\\r\\n\\r\\n        // We are adding the message in packet. If this element is different\\r\\n        // from 'body', we add our custom namespace for the same.\\r\\n        // e.g. for 'json-message' message extension.\\r\\n        if (elementName === 'body') {\\r\\n            msg.c(elementName, message).up();\\r\\n        } else {\\r\\n            msg.c(elementName, { xmlns: 'http://jitsi.org/jitmeet' }, message)\\r\\n                .up();\\r\\n        }\\r\\n        if (nickname) {\\r\\n            msg.c('nick', { xmlns: 'http://jabber.org/protocol/nick' })\\r\\n                .t(nickname)\\r\\n                .up()\\r\\n                .up();\\r\\n        }\\r\\n\\r\\n        this.connection.send(msg);\\r\\n        this.eventEmitter.emit(\\r\\n            XMPPEvents.SENDING_PRIVATE_CHAT_MESSAGE, message);\\r\\n    }\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param subject\\r\\n     */\\r\\n    setSubject(subject) {\\r\\n        const msg = $msg({ to: this.roomjid,\\r\\n            type: 'groupchat' });\\r\\n\\r\\n        msg.c('subject', subject);\\r\\n        this.connection.send(msg);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Called when participant leaves.\\r\\n     * @param jid the jid of the participant that leaves\\r\\n     * @param skipEvents optional params to skip any events, including check\\r\\n     * whether this is the focus that left\\r\\n     */\\r\\n    onParticipantLeft(jid, skipEvents) {\\r\\n        delete this.lastPresences[jid];\\r\\n\\r\\n        if (skipEvents) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.eventEmitter.emit(XMPPEvents.MUC_MEMBER_LEFT, jid);\\r\\n\\r\\n        this.moderator.onMucMemberLeft(jid);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param pres\\r\\n     * @param from\\r\\n     */\\r\\n    onPresenceUnavailable(pres, from) {\\r\\n        // ignore presence\\r\\n        if ($(pres).find('>ignore[xmlns=\\\"http://jitsi.org/jitmeet/\\\"]').length) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        // room destroyed ?\\r\\n        if ($(pres).find('>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]'\\r\\n            + '>destroy').length) {\\r\\n            let reason;\\r\\n            const reasonSelect\\r\\n                = $(pres).find(\\r\\n                    '>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]'\\r\\n                        + '>destroy>reason');\\r\\n\\r\\n            if (reasonSelect.length) {\\r\\n                reason = reasonSelect.text();\\r\\n            }\\r\\n\\r\\n            this.eventEmitter.emit(XMPPEvents.MUC_DESTROYED, reason);\\r\\n            this.connection.emuc.doLeave(this.roomjid);\\r\\n\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        // Status code 110 indicates that this notification is \\\"self-presence\\\".\\r\\n        const isSelfPresence\\r\\n            = $(pres)\\r\\n                .find(\\r\\n                    '>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]>'\\r\\n                        + 'status[code=\\\"110\\\"]')\\r\\n                .length;\\r\\n        const isKick\\r\\n            = $(pres)\\r\\n                .find(\\r\\n                    '>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]'\\r\\n                        + '>status[code=\\\"307\\\"]')\\r\\n                .length;\\r\\n        const membersKeys = Object.keys(this.members);\\r\\n\\r\\n        if (isKick) {\\r\\n            const actorSelect\\r\\n                = $(pres)\\r\\n                .find('>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]>item>actor');\\r\\n\\r\\n            let actorNick;\\r\\n\\r\\n            if (actorSelect.length) {\\r\\n                actorNick = actorSelect.attr('nick');\\r\\n            }\\r\\n\\r\\n            // if no member is found this is the case we had kicked someone\\r\\n            // and we are not in the list of members\\r\\n            if (membersKeys.find(jid => Strophe.getResourceFromJid(jid) === actorNick)) {\\r\\n                // we first fire the kicked so we can show the participant\\r\\n                // who kicked, before notifying that participant left\\r\\n                // we fire kicked for us and for any participant kicked\\r\\n                this.eventEmitter.emit(\\r\\n                    XMPPEvents.KICKED,\\r\\n                    isSelfPresence,\\r\\n                    actorNick,\\r\\n                    Strophe.getResourceFromJid(from));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (!isSelfPresence) {\\r\\n            delete this.members[from];\\r\\n            this.onParticipantLeft(from, false);\\r\\n        } else if (membersKeys.length > 0) {\\r\\n            // If the status code is 110 this means we're leaving and we would\\r\\n            // like to remove everyone else from our view, so we trigger the\\r\\n            // event.\\r\\n            membersKeys.forEach(jid => {\\r\\n                const member = this.members[jid];\\r\\n\\r\\n                delete this.members[jid];\\r\\n                this.onParticipantLeft(jid, member.isFocus);\\r\\n            });\\r\\n            this.connection.emuc.doLeave(this.roomjid);\\r\\n\\r\\n            // we fire muc_left only if this is not a kick,\\r\\n            // kick has both statuses 110 and 307.\\r\\n            if (!isKick) {\\r\\n                this.eventEmitter.emit(XMPPEvents.MUC_LEFT);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param msg\\r\\n     * @param from\\r\\n     */\\r\\n    onMessage(msg, from) {\\r\\n        const nick\\r\\n            = $(msg).find('>nick[xmlns=\\\"http://jabber.org/protocol/nick\\\"]')\\r\\n                .text()\\r\\n            || Strophe.getResourceFromJid(from);\\r\\n\\r\\n        const txt = $(msg).find('>body').text();\\r\\n        const type = msg.getAttribute('type');\\r\\n\\r\\n        if (type === 'error') {\\r\\n            this.eventEmitter.emit(XMPPEvents.CHAT_ERROR_RECEIVED,\\r\\n                $(msg).find('>text').text(), txt);\\r\\n\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        const subject = $(msg).find('>subject');\\r\\n\\r\\n        if (subject.length) {\\r\\n            const subjectText = subject.text();\\r\\n\\r\\n            if (subjectText || subjectText === '') {\\r\\n                this.eventEmitter.emit(XMPPEvents.SUBJECT_CHANGED, subjectText);\\r\\n                logger.log(`Subject is changed to ${subjectText}`);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // xep-0203 delay\\r\\n        let stamp = $(msg).find('>delay').attr('stamp');\\r\\n\\r\\n        if (!stamp) {\\r\\n            // or xep-0091 delay, UTC timestamp\\r\\n            stamp = $(msg).find('>[xmlns=\\\"jabber:x:delay\\\"]').attr('stamp');\\r\\n\\r\\n            if (stamp) {\\r\\n                // the format is CCYYMMDDThh:mm:ss\\r\\n                const dateParts\\r\\n                    = stamp.match(/(\\\\d{4})(\\\\d{2})(\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2})/);\\r\\n\\r\\n                stamp = `${dateParts[1]}-${dateParts[2]}-${dateParts[3]}Z`;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (from === this.roomjid\\r\\n                && $(msg)\\r\\n                    .find(\\r\\n                        '>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]'\\r\\n                            + '>status[code=\\\"104\\\"]')\\r\\n                    .length) {\\r\\n            this.discoRoomInfo();\\r\\n        }\\r\\n        const jsonMessage = $(msg).find('>json-message').text();\\r\\n        const parsedJson = this.xmpp.tryParseJSONAndVerify(jsonMessage);\\r\\n\\r\\n        // We emit this event if the message is a valid json, and is not\\r\\n        // delivered after a delay, i.e. stamp is undefined.\\r\\n        // e.g. - subtitles should not be displayed if delayed.\\r\\n        if (parsedJson && stamp === undefined) {\\r\\n            this.eventEmitter.emit(XMPPEvents.JSON_MESSAGE_RECEIVED,\\r\\n                from, parsedJson);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (txt) {\\r\\n            if (type === 'chat') {\\r\\n                this.eventEmitter.emit(XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\\r\\n                        from, nick, txt, this.myroomjid, stamp);\\r\\n            } else if (type === 'groupchat') {\\r\\n                this.eventEmitter.emit(XMPPEvents.MESSAGE_RECEIVED,\\r\\n                        from, nick, txt, this.myroomjid, stamp);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param pres\\r\\n     * @param from\\r\\n     */\\r\\n    onPresenceError(pres, from) {\\r\\n        if ($(pres)\\r\\n                .find(\\r\\n                    '>error[type=\\\"auth\\\"]'\\r\\n                        + '>not-authorized['\\r\\n                        + 'xmlns=\\\"urn:ietf:params:xml:ns:xmpp-stanzas\\\"]')\\r\\n                .length) {\\r\\n            logger.log('on password required', from);\\r\\n            this.eventEmitter.emit(XMPPEvents.PASSWORD_REQUIRED);\\r\\n        } else if ($(pres)\\r\\n                .find(\\r\\n                    '>error[type=\\\"cancel\\\"]'\\r\\n                        + '>not-allowed['\\r\\n                        + 'xmlns=\\\"urn:ietf:params:xml:ns:xmpp-stanzas\\\"]')\\r\\n                .length) {\\r\\n            const toDomain = Strophe.getDomainFromJid(pres.getAttribute('to'));\\r\\n\\r\\n            if (toDomain === this.xmpp.options.hosts.anonymousdomain) {\\r\\n                // enter the room by replying with 'not-authorized'. This would\\r\\n                // result in reconnection from authorized domain.\\r\\n                // We're either missing Jicofo/Prosody config for anonymous\\r\\n                // domains or something is wrong.\\r\\n                this.eventEmitter.emit(XMPPEvents.ROOM_JOIN_ERROR);\\r\\n\\r\\n            } else {\\r\\n                logger.warn('onPresError ', pres);\\r\\n                this.eventEmitter.emit(\\r\\n                    XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR);\\r\\n            }\\r\\n        } else if ($(pres).find('>error>service-unavailable').length) {\\r\\n            logger.warn('Maximum users limit for the room has been reached',\\r\\n                pres);\\r\\n            this.eventEmitter.emit(XMPPEvents.ROOM_MAX_USERS_ERROR);\\r\\n        } else {\\r\\n            logger.warn('onPresError ', pres);\\r\\n            this.eventEmitter.emit(XMPPEvents.ROOM_CONNECT_ERROR);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param jid\\r\\n     */\\r\\n    kick(jid) {\\r\\n        const kickIQ = $iq({ to: this.roomjid,\\r\\n            type: 'set' })\\r\\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#admin' })\\r\\n            .c('item', { nick: Strophe.getResourceFromJid(jid),\\r\\n                role: 'none' })\\r\\n            .c('reason').t('You have been kicked.').up().up().up();\\r\\n\\r\\n        this.connection.sendIQ(\\r\\n            kickIQ,\\r\\n            result => logger.log('Kick participant with jid: ', jid, result),\\r\\n            error => logger.log('Kick participant error: ', error));\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param key\\r\\n     * @param onSuccess\\r\\n     * @param onError\\r\\n     * @param onNotSupported\\r\\n     */\\r\\n    lockRoom(key, onSuccess, onError, onNotSupported) {\\r\\n        // http://xmpp.org/extensions/xep-0045.html#roomconfig\\r\\n        this.connection.sendIQ(\\r\\n            $iq({\\r\\n                to: this.roomjid,\\r\\n                type: 'get'\\r\\n            })\\r\\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' }),\\r\\n            res => {\\r\\n                if ($(res)\\r\\n                        .find(\\r\\n                            '>query>x[xmlns=\\\"jabber:x:data\\\"]'\\r\\n                                + '>field[var=\\\"muc#roomconfig_roomsecret\\\"]')\\r\\n                        .length) {\\r\\n                    const formsubmit\\r\\n                        = $iq({\\r\\n                            to: this.roomjid,\\r\\n                            type: 'set'\\r\\n                        })\\r\\n                            .c('query', {\\r\\n                                xmlns: 'http://jabber.org/protocol/muc#owner'\\r\\n                            });\\r\\n\\r\\n                    formsubmit.c('x', {\\r\\n                        xmlns: 'jabber:x:data',\\r\\n                        type: 'submit'\\r\\n                    });\\r\\n                    formsubmit\\r\\n                        .c('field', { 'var': 'FORM_TYPE' })\\r\\n                        .c('value')\\r\\n                        .t('http://jabber.org/protocol/muc#roomconfig')\\r\\n                        .up()\\r\\n                        .up();\\r\\n                    formsubmit\\r\\n                        .c('field', { 'var': 'muc#roomconfig_roomsecret' })\\r\\n                        .c('value')\\r\\n                        .t(key)\\r\\n                        .up()\\r\\n                        .up();\\r\\n\\r\\n                    // Fixes a bug in prosody 0.9.+\\r\\n                    // https://prosody.im/issues/issue/373\\r\\n                    formsubmit\\r\\n                        .c('field', { 'var': 'muc#roomconfig_whois' })\\r\\n                        .c('value')\\r\\n                        .t('anyone')\\r\\n                        .up()\\r\\n                        .up();\\r\\n\\r\\n                    // FIXME: is muc#roomconfig_passwordprotectedroom required?\\r\\n                    this.connection.sendIQ(formsubmit, onSuccess, onError);\\r\\n                } else {\\r\\n                    onNotSupported();\\r\\n                }\\r\\n            },\\r\\n            onError);\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param key\\r\\n     * @param values\\r\\n     */\\r\\n    addToPresence(key, values) {\\r\\n        values.tagName = key;\\r\\n        this.removeFromPresence(key);\\r\\n        this.presMap.nodes.push(values);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Retreives a value from the presence map.\\r\\n     *\\r\\n     * @param {string} key - The key to find the value for.\\r\\n     * @returns {Object?}\\r\\n     */\\r\\n    getFromPresence(key) {\\r\\n        return this.presMap.nodes.find(node => key === node.tagName);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param key\\r\\n     */\\r\\n    removeFromPresence(key) {\\r\\n        const nodes = this.presMap.nodes.filter(node => key !== node.tagName);\\r\\n\\r\\n        this.presMap.nodes = nodes;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param name\\r\\n     * @param handler\\r\\n     */\\r\\n    addPresenceListener(name, handler) {\\r\\n        if (typeof handler !== 'function') {\\r\\n            throw new Error('\\\"handler\\\" is not a function');\\r\\n        }\\r\\n        let tagHandlers = this.presHandlers[name];\\r\\n\\r\\n        if (!tagHandlers) {\\r\\n            this.presHandlers[name] = tagHandlers = [];\\r\\n        }\\r\\n        if (tagHandlers.indexOf(handler) === -1) {\\r\\n            tagHandlers.push(handler);\\r\\n        } else {\\r\\n            logger.warn(\\r\\n                `Trying to add the same handler more than once for: ${name}`);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param name\\r\\n     * @param handler\\r\\n     */\\r\\n    removePresenceListener(name, handler) {\\r\\n        const tagHandlers = this.presHandlers[name];\\r\\n        const handlerIdx = tagHandlers ? tagHandlers.indexOf(handler) : -1;\\r\\n\\r\\n        // eslint-disable-next-line no-negated-condition\\r\\n        if (handlerIdx !== -1) {\\r\\n            tagHandlers.splice(handlerIdx, 1);\\r\\n        } else {\\r\\n            logger.warn(`Handler for: ${name} was not registered`);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the user identified by given <tt>mucJid</tt> is the conference\\r\\n     * focus.\\r\\n     * @param mucJid the full MUC address of the user to be checked.\\r\\n     * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus\\r\\n     * or <tt>false</tt> if is not. When given <tt>mucJid</tt> does not exist in\\r\\n     * the MUC then <tt>null</tt> is returned.\\r\\n     */\\r\\n    isFocus(mucJid) {\\r\\n        const member = this.members[mucJid];\\r\\n\\r\\n        if (member) {\\r\\n            return member.isFocus;\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    isModerator() {\\r\\n        return this.role === 'moderator';\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param peerJid\\r\\n     */\\r\\n    getMemberRole(peerJid) {\\r\\n        if (this.members[peerJid]) {\\r\\n            return this.members[peerJid].role;\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param mute\\r\\n     * @param callback\\r\\n     */\\r\\n    setVideoMute(mute, callback) {\\r\\n        this.sendVideoInfoPresence(mute);\\r\\n        if (callback) {\\r\\n            callback(mute);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param mute\\r\\n     * @param callback\\r\\n     */\\r\\n    setAudioMute(mute, callback) {\\r\\n        return this.sendAudioInfoPresence(mute, callback);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param mute\\r\\n     */\\r\\n    addAudioInfoToPresence(mute) {\\r\\n        this.removeFromPresence('audiomuted');\\r\\n        this.addToPresence(\\r\\n            'audiomuted',\\r\\n            {\\r\\n                attributes: { 'xmlns': 'http://jitsi.org/jitmeet/audio' },\\r\\n                value: mute.toString()\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param mute\\r\\n     * @param callback\\r\\n     */\\r\\n    sendAudioInfoPresence(mute, callback) {\\r\\n        this.addAudioInfoToPresence(mute);\\r\\n        if (this.connection) {\\r\\n            this.sendPresence();\\r\\n        }\\r\\n        if (callback) {\\r\\n            callback();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param mute\\r\\n     */\\r\\n    addVideoInfoToPresence(mute) {\\r\\n        this.removeFromPresence('videomuted');\\r\\n        this.addToPresence(\\r\\n            'videomuted',\\r\\n            {\\r\\n                attributes: { 'xmlns': 'http://jitsi.org/jitmeet/video' },\\r\\n                value: mute.toString()\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param mute\\r\\n     */\\r\\n    sendVideoInfoPresence(mute) {\\r\\n        this.addVideoInfoToPresence(mute);\\r\\n        if (!this.connection) {\\r\\n            return;\\r\\n        }\\r\\n        this.sendPresence();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Obtains the info about given media advertised in the MUC presence of\\r\\n     * the participant identified by the given endpoint JID.\\r\\n     * @param {string} endpointId the endpoint ID mapped to the participant\\r\\n     * which corresponds to MUC nickname.\\r\\n     * @param {MediaType} mediaType the type of the media for which presence\\r\\n     * info will be obtained.\\r\\n     * @return {PeerMediaInfo} presenceInfo an object with media presence\\r\\n     * info or <tt>null</tt> either if there is no presence available or if\\r\\n     * the media type given is invalid.\\r\\n     */\\r\\n    getMediaPresenceInfo(endpointId, mediaType) {\\r\\n        // Will figure out current muted status by looking up owner's presence\\r\\n        const pres = this.lastPresences[`${this.roomjid}/${endpointId}`];\\r\\n\\r\\n        if (!pres) {\\r\\n            // No presence available\\r\\n            return null;\\r\\n        }\\r\\n        const data = {\\r\\n            muted: false, // unmuted by default\\r\\n            videoType: undefined // no video type by default\\r\\n        };\\r\\n        let mutedNode = null;\\r\\n\\r\\n        if (mediaType === MediaType.AUDIO) {\\r\\n            mutedNode = filterNodeFromPresenceJSON(pres, 'audiomuted');\\r\\n        } else if (mediaType === MediaType.VIDEO) {\\r\\n            mutedNode = filterNodeFromPresenceJSON(pres, 'videomuted');\\r\\n            const videoTypeNode = filterNodeFromPresenceJSON(pres, 'videoType');\\r\\n\\r\\n            if (videoTypeNode.length > 0) {\\r\\n                data.videoType = videoTypeNode[0].value;\\r\\n            }\\r\\n        } else {\\r\\n            logger.error(`Unsupported media type: ${mediaType}`);\\r\\n\\r\\n            return null;\\r\\n        }\\r\\n\\r\\n        data.muted = mutedNode.length > 0 && mutedNode[0].value === 'true';\\r\\n\\r\\n        return data;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns true if the SIP calls are supported and false otherwise\\r\\n     */\\r\\n    isSIPCallingSupported() {\\r\\n        if (this.moderator) {\\r\\n            return this.moderator.isSipGatewayEnabled();\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Dials a number.\\r\\n     * @param number the number\\r\\n     */\\r\\n    dial(number) {\\r\\n        return this.connection.rayo.dial(number, 'fromnumber',\\r\\n            Strophe.getBareJidFromJid(this.myroomjid), this.password,\\r\\n            this.focusMucJid);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Hangup an existing call\\r\\n     */\\r\\n    hangup() {\\r\\n        return this.connection.rayo.hangup();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the phone number for joining the conference.\\r\\n     */\\r\\n    getPhoneNumber() {\\r\\n        return this.phoneNumber;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the pin for joining the conference with phone.\\r\\n     */\\r\\n    getPhonePin() {\\r\\n        return this.phonePin;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Mutes remote participant.\\r\\n     * @param jid of the participant\\r\\n     * @param mute\\r\\n     */\\r\\n    muteParticipant(jid, mute) {\\r\\n        logger.info('set mute', mute);\\r\\n        const iqToFocus = $iq(\\r\\n            { to: this.focusMucJid,\\r\\n                type: 'set' })\\r\\n            .c('mute', {\\r\\n                xmlns: 'http://jitsi.org/jitmeet/audio',\\r\\n                jid\\r\\n            })\\r\\n            .t(mute.toString())\\r\\n            .up();\\r\\n\\r\\n        this.connection.sendIQ(\\r\\n            iqToFocus,\\r\\n            result => logger.log('set mute', result),\\r\\n            error => logger.log('set mute error', error));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * TODO: Document\\r\\n     * @param iq\\r\\n     */\\r\\n    onMute(iq) {\\r\\n        const from = iq.getAttribute('from');\\r\\n\\r\\n        if (from !== this.focusMucJid) {\\r\\n            logger.warn('Ignored mute from non focus peer');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n        const mute = $(iq).find('mute');\\r\\n\\r\\n        if (mute.length && mute.text() === 'true') {\\r\\n            this.eventEmitter.emit(XMPPEvents.AUDIO_MUTED_BY_FOCUS, mute.attr('actor'));\\r\\n        } else {\\r\\n            // XXX Why do we support anything but muting? Why do we encode the\\r\\n            // value in the text of the element? Why do we use a separate XML\\r\\n            // namespace?\\r\\n            logger.warn('Ignoring a mute request which does not explicitly '\\r\\n                + 'specify a positive mute command.');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Leaves the room. Closes the jingle session.\\r\\n     * @returns {Promise} which is resolved if XMPPEvents.MUC_LEFT is received\\r\\n     * less than 5s after sending presence unavailable. Otherwise the promise is\\r\\n     * rejected.\\r\\n     */\\r\\n    leave() {\\r\\n        return new Promise((resolve, reject) => {\\r\\n            const timeout = setTimeout(() => onMucLeft(true), 5000);\\r\\n            const eventEmitter = this.eventEmitter;\\r\\n\\r\\n            /**\\r\\n             *\\r\\n             * @param doReject\\r\\n             */\\r\\n            function onMucLeft(doReject = false) {\\r\\n                eventEmitter.removeListener(XMPPEvents.MUC_LEFT, onMucLeft);\\r\\n                clearTimeout(timeout);\\r\\n                if (doReject) {\\r\\n                    // the timeout expired\\r\\n                    reject(new Error('The timeout for the confirmation about '\\r\\n                        + 'leaving the room expired.'));\\r\\n                } else {\\r\\n                    resolve();\\r\\n                }\\r\\n            }\\r\\n            eventEmitter.on(XMPPEvents.MUC_LEFT, onMucLeft);\\r\\n            this.doLeave();\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\\r\\n/* eslint-enable newline-per-chained-call */\\r\\n\",\"/* global $, Promise */\\r\\n\\r\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\r\\n\\r\\nimport { $iq, Strophe } from 'strophe.js';\\r\\n\\r\\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\\r\\nconst AuthenticationEvents\\r\\n    = require('../../service/authentication/AuthenticationEvents');\\r\\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\\r\\n\\r\\nimport browser from '../browser';\\r\\nimport Settings from '../settings/Settings';\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param step\\r\\n */\\r\\nfunction createExpBackoffTimer(step) {\\r\\n    let count = 1;\\r\\n\\r\\n    return function(reset) {\\r\\n        // Reset call\\r\\n        if (reset) {\\r\\n            count = 1;\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // Calculate next timeout\\r\\n        const timeout = Math.pow(2, count - 1);\\r\\n\\r\\n        count += 1;\\r\\n\\r\\n        return timeout * step;\\r\\n    };\\r\\n}\\r\\n\\r\\n/* eslint-disable max-params */\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param roomName\\r\\n * @param xmpp\\r\\n * @param emitter\\r\\n * @param options\\r\\n */\\r\\nexport default function Moderator(roomName, xmpp, emitter, options) {\\r\\n    this.roomName = roomName;\\r\\n    this.xmppService = xmpp;\\r\\n    this.getNextTimeout = createExpBackoffTimer(1000);\\r\\n    this.getNextErrorTimeout = createExpBackoffTimer(1000);\\r\\n\\r\\n    // External authentication stuff\\r\\n    this.externalAuthEnabled = false;\\r\\n    this.options = options;\\r\\n\\r\\n    // Sip gateway can be enabled by configuring Jigasi host in config.js or\\r\\n    // it will be enabled automatically if focus detects the component through\\r\\n    // service discovery.\\r\\n    this.sipGatewayEnabled\\r\\n        = this.options.connection.hosts\\r\\n            && this.options.connection.hosts.call_control !== undefined;\\r\\n\\r\\n    this.eventEmitter = emitter;\\r\\n\\r\\n    this.connection = this.xmppService.connection;\\r\\n\\r\\n    // FIXME: Message listener that talks to POPUP window\\r\\n    /**\\r\\n     *\\r\\n     * @param event\\r\\n     */\\r\\n    function listener(event) {\\r\\n        if (event.data && event.data.sessionId) {\\r\\n            if (event.origin !== window.location.origin) {\\r\\n                logger.warn(\\r\\n                    `Ignoring sessionId from different origin: ${\\r\\n                        event.origin}`);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n            Settings.sessionId = event.data.sessionId;\\r\\n\\r\\n            // After popup is closed we will authenticate\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Register\\r\\n    if (window.addEventListener) {\\r\\n        window.addEventListener('message', listener, false);\\r\\n    } else {\\r\\n        window.attachEvent('onmessage', listener);\\r\\n    }\\r\\n}\\r\\n\\r\\n/* eslint-enable max-params */\\r\\n\\r\\nModerator.prototype.isExternalAuthEnabled = function() {\\r\\n    return this.externalAuthEnabled;\\r\\n};\\r\\n\\r\\nModerator.prototype.isSipGatewayEnabled = function() {\\r\\n    return this.sipGatewayEnabled;\\r\\n};\\r\\n\\r\\nModerator.prototype.onMucMemberLeft = function(jid) {\\r\\n    logger.info(`Someone left is it focus ? ${jid}`);\\r\\n    const resource = Strophe.getResourceFromJid(jid);\\r\\n\\r\\n    if (resource === 'focus') {\\r\\n        logger.info(\\r\\n            'Focus has left the room - leaving conference');\\r\\n        this.eventEmitter.emit(XMPPEvents.FOCUS_LEFT);\\r\\n    }\\r\\n};\\r\\n\\r\\nModerator.prototype.setFocusUserJid = function(focusJid) {\\r\\n    if (!this.focusUserJid) {\\r\\n        this.focusUserJid = focusJid;\\r\\n        logger.info(`Focus jid set to:  ${this.focusUserJid}`);\\r\\n    }\\r\\n};\\r\\n\\r\\nModerator.prototype.getFocusUserJid = function() {\\r\\n    return this.focusUserJid;\\r\\n};\\r\\n\\r\\nModerator.prototype.getFocusComponent = function() {\\r\\n    // Get focus component address\\r\\n    let focusComponent = this.options.connection.hosts.focus;\\r\\n\\r\\n    // If not specified use default:  'focus.domain'\\r\\n\\r\\n    if (!focusComponent) {\\r\\n        focusComponent = `focus.${this.options.connection.hosts.domain}`;\\r\\n    }\\r\\n\\r\\n    return focusComponent;\\r\\n};\\r\\n\\r\\nModerator.prototype.createConferenceIq = function() {\\r\\n    // Generate create conference IQ\\r\\n    const elem = $iq({ to: this.getFocusComponent(),\\r\\n        type: 'set' });\\r\\n\\r\\n    // Session Id used for authentication\\r\\n    const { sessionId } = Settings;\\r\\n    const machineUID = Settings.machineId;\\r\\n    const config = this.options.conference;\\r\\n\\r\\n    logger.info(`Session ID: ${sessionId} machine UID: ${machineUID}`);\\r\\n\\r\\n    elem.c('conference', {\\r\\n        xmlns: 'http://jitsi.org/protocol/focus',\\r\\n        room: this.roomName,\\r\\n        'machine-uid': machineUID\\r\\n    });\\r\\n\\r\\n    if (sessionId) {\\r\\n        elem.attrs({ 'session-id': sessionId });\\r\\n    }\\r\\n    if (this.options.connection.enforcedBridge !== undefined) {\\r\\n        elem.c(\\r\\n            'property', {\\r\\n                name: 'enforcedBridge',\\r\\n                value: this.options.connection.enforcedBridge\\r\\n            }).up();\\r\\n    }\\r\\n\\r\\n    // Tell the focus we have Jigasi configured\\r\\n    if (this.options.connection.hosts !== undefined\\r\\n        && this.options.connection.hosts.call_control !== undefined) {\\r\\n        elem.c(\\r\\n            'property', {\\r\\n                name: 'call_control',\\r\\n                value: this.options.connection.hosts.call_control\\r\\n            }).up();\\r\\n    }\\r\\n    if (config.channelLastN !== undefined) {\\r\\n        elem.c(\\r\\n            'property', {\\r\\n                name: 'channelLastN',\\r\\n                value: config.channelLastN\\r\\n            }).up();\\r\\n    }\\r\\n    elem.c(\\r\\n        'property', {\\r\\n            name: 'disableRtx',\\r\\n            value: Boolean(config.disableRtx)\\r\\n        }).up();\\r\\n\\r\\n    if (config.enableTcc !== undefined) {\\r\\n        elem.c(\\r\\n                'property', {\\r\\n                    name: 'enableTcc',\\r\\n                    value: Boolean(config.enableTcc)\\r\\n                }).up();\\r\\n    }\\r\\n    if (config.enableRemb !== undefined) {\\r\\n        elem.c(\\r\\n                'property', {\\r\\n                    name: 'enableRemb',\\r\\n                    value: Boolean(config.enableRemb)\\r\\n                }).up();\\r\\n    }\\r\\n    if (config.minParticipants !== undefined) {\\r\\n        elem.c(\\r\\n                'property', {\\r\\n                    name: 'minParticipants',\\r\\n                    value: config.minParticipants\\r\\n                }).up();\\r\\n    }\\r\\n\\r\\n    elem.c(\\r\\n        'property', {\\r\\n            name: 'enableLipSync',\\r\\n            value: this.options.connection.enableLipSync !== false\\r\\n        }).up();\\r\\n    if (config.audioPacketDelay !== undefined) {\\r\\n        elem.c(\\r\\n            'property', {\\r\\n                name: 'audioPacketDelay',\\r\\n                value: config.audioPacketDelay\\r\\n            }).up();\\r\\n    }\\r\\n    if (config.startBitrate) {\\r\\n        elem.c(\\r\\n            'property', {\\r\\n                name: 'startBitrate',\\r\\n                value: config.startBitrate\\r\\n            }).up();\\r\\n    }\\r\\n    if (config.minBitrate) {\\r\\n        elem.c(\\r\\n            'property', {\\r\\n                name: 'minBitrate',\\r\\n                value: config.minBitrate\\r\\n            }).up();\\r\\n    }\\r\\n    if (config.testing && config.testing.octo\\r\\n        && typeof config.testing.octo.probability === 'number') {\\r\\n        if (Math.random() < config.testing.octo.probability) {\\r\\n            elem.c(\\r\\n                'property', {\\r\\n                    name: 'octo',\\r\\n                    value: true\\r\\n                }).up();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    let openSctp;\\r\\n\\r\\n    switch (this.options.conference.openBridgeChannel) {\\r\\n    case 'datachannel':\\r\\n    case true:\\r\\n    case undefined:\\r\\n        openSctp = true;\\r\\n        break;\\r\\n    case 'websocket':\\r\\n        openSctp = false;\\r\\n        break;\\r\\n    }\\r\\n\\r\\n    if (openSctp && !browser.supportsDataChannels()) {\\r\\n        openSctp = false;\\r\\n    }\\r\\n\\r\\n    elem.c(\\r\\n        'property', {\\r\\n            name: 'openSctp',\\r\\n            value: openSctp\\r\\n        }).up();\\r\\n\\r\\n    if (this.options.conference.startAudioMuted !== undefined) {\\r\\n        elem.c(\\r\\n            'property', {\\r\\n                name: 'startAudioMuted',\\r\\n                value: this.options.conference.startAudioMuted\\r\\n            }).up();\\r\\n    }\\r\\n    if (this.options.conference.startVideoMuted !== undefined) {\\r\\n        elem.c(\\r\\n            'property', {\\r\\n                name: 'startVideoMuted',\\r\\n                value: this.options.conference.startVideoMuted\\r\\n            }).up();\\r\\n    }\\r\\n    if (this.options.conference.stereo !== undefined) {\\r\\n        elem.c(\\r\\n            'property', {\\r\\n                name: 'stereo',\\r\\n                value: this.options.conference.stereo\\r\\n            }).up();\\r\\n    }\\r\\n    if (this.options.conference.useRoomAsSharedDocumentName !== undefined) {\\r\\n        elem.c(\\r\\n            'property', {\\r\\n                name: 'useRoomAsSharedDocumentName',\\r\\n                value: this.options.conference.useRoomAsSharedDocumentName\\r\\n            }).up();\\r\\n    }\\r\\n    elem.up();\\r\\n\\r\\n    return elem;\\r\\n};\\r\\n\\r\\n\\r\\nModerator.prototype.parseSessionId = function(resultIq) {\\r\\n    // eslint-disable-next-line newline-per-chained-call\\r\\n    const sessionId = $(resultIq).find('conference').attr('session-id');\\r\\n\\r\\n    if (sessionId) {\\r\\n        logger.info(`Received sessionId:  ${sessionId}`);\\r\\n        Settings.sessionId = sessionId;\\r\\n    }\\r\\n};\\r\\n\\r\\nModerator.prototype.parseConfigOptions = function(resultIq) {\\r\\n    // eslint-disable-next-line newline-per-chained-call\\r\\n    this.setFocusUserJid($(resultIq).find('conference').attr('focusjid'));\\r\\n\\r\\n    const authenticationEnabled\\r\\n        = $(resultIq).find(\\r\\n            '>conference>property'\\r\\n            + '[name=\\\\'authentication\\\\'][value=\\\\'true\\\\']').length > 0;\\r\\n\\r\\n    logger.info(`Authentication enabled: ${authenticationEnabled}`);\\r\\n\\r\\n    this.externalAuthEnabled = $(resultIq).find(\\r\\n        '>conference>property'\\r\\n            + '[name=\\\\'externalAuth\\\\'][value=\\\\'true\\\\']').length > 0;\\r\\n\\r\\n    logger.info(\\r\\n        `External authentication enabled: ${this.externalAuthEnabled}`);\\r\\n\\r\\n    if (!this.externalAuthEnabled) {\\r\\n        // We expect to receive sessionId in 'internal' authentication mode\\r\\n        this.parseSessionId(resultIq);\\r\\n    }\\r\\n\\r\\n    // eslint-disable-next-line newline-per-chained-call\\r\\n    const authIdentity = $(resultIq).find('>conference').attr('identity');\\r\\n\\r\\n    this.eventEmitter.emit(AuthenticationEvents.IDENTITY_UPDATED,\\r\\n        authenticationEnabled, authIdentity);\\r\\n\\r\\n    // Check if focus has auto-detected Jigasi component(this will be also\\r\\n    // included if we have passed our host from the config)\\r\\n    if ($(resultIq).find(\\r\\n        '>conference>property'\\r\\n        + '[name=\\\\'sipGatewayEnabled\\\\'][value=\\\\'true\\\\']').length) {\\r\\n        this.sipGatewayEnabled = true;\\r\\n    }\\r\\n\\r\\n    logger.info(`Sip gateway enabled:  ${this.sipGatewayEnabled}`);\\r\\n};\\r\\n\\r\\n// FIXME We need to show the fact that we're waiting for the focus to the user\\r\\n// (or that the focus is not available)\\r\\n/**\\r\\n * Allocates the conference focus.\\r\\n *\\r\\n * @param {Function} callback - the function to be called back upon the\\r\\n * successful allocation of the conference focus\\r\\n * @returns {Promise} - Resolved when Jicofo allows to join the room. It's never\\r\\n * rejected and it'll keep on pinging Jicofo forever.\\r\\n */\\r\\nModerator.prototype.allocateConferenceFocus = function() {\\r\\n    return new Promise(resolve => {\\r\\n        // Try to use focus user JID from the config\\r\\n        this.setFocusUserJid(this.options.connection.focusUserJid);\\r\\n\\r\\n        // Send create conference IQ\\r\\n        this.connection.sendIQ(\\r\\n            this.createConferenceIq(),\\r\\n            result => this._allocateConferenceFocusSuccess(result, resolve),\\r\\n            error => this._allocateConferenceFocusError(error, resolve));\\r\\n\\r\\n        // XXX We're pressed for time here because we're beginning a complex\\r\\n        // and/or lengthy conference-establishment process which supposedly\\r\\n        // involves multiple RTTs. We don't have the time to wait for Strophe to\\r\\n        // decide to send our IQ.\\r\\n        this.connection.flush();\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving an\\r\\n * error result.\\r\\n *\\r\\n * @param error - the error result of the request that\\r\\n * {@link #allocateConferenceFocus} sent\\r\\n * @param {Function} callback - the function to be called back upon the\\r\\n * successful allocation of the conference focus\\r\\n */\\r\\nModerator.prototype._allocateConferenceFocusError = function(error, callback) {\\r\\n    // If the session is invalid, remove and try again without session ID to get\\r\\n    // a new one\\r\\n    const invalidSession\\r\\n        = $(error).find('>error>session-invalid').length\\r\\n            || $(error).find('>error>not-acceptable').length;\\r\\n\\r\\n    if (invalidSession) {\\r\\n        logger.info('Session expired! - removing');\\r\\n        Settings.sessionId = undefined;\\r\\n    }\\r\\n    if ($(error).find('>error>graceful-shutdown').length) {\\r\\n        this.eventEmitter.emit(XMPPEvents.GRACEFUL_SHUTDOWN);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // Check for error returned by the reservation system\\r\\n    const reservationErr = $(error).find('>error>reservation-error');\\r\\n\\r\\n    if (reservationErr.length) {\\r\\n        // Trigger error event\\r\\n        const errorCode = reservationErr.attr('error-code');\\r\\n        const errorTextNode = $(error).find('>error>text');\\r\\n        let errorMsg;\\r\\n\\r\\n        if (errorTextNode) {\\r\\n            errorMsg = errorTextNode.text();\\r\\n        }\\r\\n        this.eventEmitter.emit(\\r\\n            XMPPEvents.RESERVATION_ERROR,\\r\\n            errorCode,\\r\\n            errorMsg);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // Not authorized to create new room\\r\\n    if ($(error).find('>error>not-authorized').length) {\\r\\n        logger.warn('Unauthorized to start the conference', error);\\r\\n        const toDomain = Strophe.getDomainFromJid(error.getAttribute('to'));\\r\\n\\r\\n        if (toDomain !== this.options.connection.hosts.anonymousdomain) {\\r\\n            // FIXME \\\"is external\\\" should come either from the focus or\\r\\n            // config.js\\r\\n            this.externalAuthEnabled = true;\\r\\n        }\\r\\n        this.eventEmitter.emit(XMPPEvents.AUTHENTICATION_REQUIRED);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n    const waitMs = this.getNextErrorTimeout();\\r\\n    const errmsg = `Focus error, retry after ${waitMs}`;\\r\\n\\r\\n    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\r\\n    logger.error(errmsg, error);\\r\\n\\r\\n    // Show message\\r\\n    const focusComponent = this.getFocusComponent();\\r\\n    const retrySec = waitMs / 1000;\\r\\n\\r\\n    // FIXME: message is duplicated ? Do not show in case of session invalid\\r\\n    // which means just a retry\\r\\n\\r\\n    if (!invalidSession) {\\r\\n        this.eventEmitter.emit(\\r\\n            XMPPEvents.FOCUS_DISCONNECTED,\\r\\n            focusComponent,\\r\\n            retrySec);\\r\\n    }\\r\\n\\r\\n    // Reset response timeout\\r\\n    this.getNextTimeout(true);\\r\\n    window.setTimeout(\\r\\n        () => this.allocateConferenceFocus().then(callback),\\r\\n        waitMs);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving a\\r\\n * success (i.e. non-error) result.\\r\\n *\\r\\n * @param result - the success (i.e. non-error) result of the request that\\r\\n * {@link #allocateConferenceFocus} sent\\r\\n * @param {Function} callback - the function to be called back upon the\\r\\n * successful allocation of the conference focus\\r\\n */\\r\\nModerator.prototype._allocateConferenceFocusSuccess = function(\\r\\n        result,\\r\\n        callback) {\\r\\n    // Setup config options\\r\\n    this.parseConfigOptions(result);\\r\\n\\r\\n    // Reset the error timeout (because we haven't failed here).\\r\\n    this.getNextErrorTimeout(true);\\r\\n\\r\\n    // eslint-disable-next-line newline-per-chained-call\\r\\n    if ($(result).find('conference').attr('ready') === 'true') {\\r\\n        // Reset the non-error timeout (because we've succeeded here).\\r\\n        this.getNextTimeout(true);\\r\\n\\r\\n        // Exec callback\\r\\n        callback();\\r\\n    } else {\\r\\n        const waitMs = this.getNextTimeout();\\r\\n\\r\\n        logger.info(`Waiting for the focus... ${waitMs}`);\\r\\n        window.setTimeout(\\r\\n            () => this.allocateConferenceFocus().then(callback),\\r\\n            waitMs);\\r\\n    }\\r\\n};\\r\\n\\r\\nModerator.prototype.authenticate = function() {\\r\\n    return new Promise((resolve, reject) => {\\r\\n        this.connection.sendIQ(\\r\\n            this.createConferenceIq(),\\r\\n            result => {\\r\\n                this.parseSessionId(result);\\r\\n                resolve();\\r\\n            },\\r\\n            errorIq => reject({\\r\\n                error: $(errorIq).find('iq>error :first')\\r\\n                    .prop('tagName'),\\r\\n                message: $(errorIq).find('iq>error>text')\\r\\n                    .text()\\r\\n            })\\r\\n        );\\r\\n    });\\r\\n};\\r\\n\\r\\nModerator.prototype.getLoginUrl = function(urlCallback, failureCallback) {\\r\\n    this._getLoginUrl(/* popup */ false, urlCallback, failureCallback);\\r\\n};\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param {boolean} popup false for {@link Moderator#getLoginUrl} or true for\\r\\n * {@link Moderator#getPopupLoginUrl}\\r\\n * @param urlCb\\r\\n * @param failureCb\\r\\n */\\r\\nModerator.prototype._getLoginUrl = function(popup, urlCb, failureCb) {\\r\\n    const iq = $iq({ to: this.getFocusComponent(),\\r\\n        type: 'get' });\\r\\n    const attrs = {\\r\\n        xmlns: 'http://jitsi.org/protocol/focus',\\r\\n        room: this.roomName,\\r\\n        'machine-uid': Settings.machineId\\r\\n    };\\r\\n    let str = 'auth url'; // for logger\\r\\n\\r\\n    if (popup) {\\r\\n        attrs.popup = true;\\r\\n        str = `POPUP ${str}`;\\r\\n    }\\r\\n    iq.c('login-url', attrs);\\r\\n\\r\\n    /**\\r\\n     * Implements a failure callback which reports an error message and an error\\r\\n     * through (1) GlobalOnErrorHandler, (2) logger, and (3) failureCb.\\r\\n     *\\r\\n     * @param {string} errmsg the error messsage to report\\r\\n     * @param {*} error the error to report (in addition to errmsg)\\r\\n     */\\r\\n    function reportError(errmsg, err) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\r\\n        logger.error(errmsg, err);\\r\\n        failureCb(err);\\r\\n    }\\r\\n    this.connection.sendIQ(\\r\\n        iq,\\r\\n        result => {\\r\\n            // eslint-disable-next-line newline-per-chained-call\\r\\n            let url = $(result).find('login-url').attr('url');\\r\\n\\r\\n            url = decodeURIComponent(url);\\r\\n            if (url) {\\r\\n                logger.info(`Got ${str}: ${url}`);\\r\\n                urlCb(url);\\r\\n            } else {\\r\\n                reportError(`Failed to get ${str} from the focus`, result);\\r\\n            }\\r\\n        },\\r\\n        reportError.bind(undefined, `Get ${str} error`)\\r\\n    );\\r\\n};\\r\\n\\r\\nModerator.prototype.getPopupLoginUrl = function(urlCallback, failureCallback) {\\r\\n    this._getLoginUrl(/* popup */ true, urlCallback, failureCallback);\\r\\n};\\r\\n\\r\\nModerator.prototype.logout = function(callback) {\\r\\n    const iq = $iq({ to: this.getFocusComponent(),\\r\\n        type: 'set' });\\r\\n    const { sessionId } = Settings;\\r\\n\\r\\n    if (!sessionId) {\\r\\n        callback();\\r\\n\\r\\n        return;\\r\\n    }\\r\\n    iq.c('logout', {\\r\\n        xmlns: 'http://jitsi.org/protocol/focus',\\r\\n        'session-id': sessionId\\r\\n    });\\r\\n    this.connection.sendIQ(\\r\\n        iq,\\r\\n        result => {\\r\\n            // eslint-disable-next-line newline-per-chained-call\\r\\n            let logoutUrl = $(result).find('logout').attr('logout-url');\\r\\n\\r\\n            if (logoutUrl) {\\r\\n                logoutUrl = decodeURIComponent(logoutUrl);\\r\\n            }\\r\\n            logger.info(`Log out OK, url: ${logoutUrl}`, result);\\r\\n            Settings.sessionId = undefined;\\r\\n            callback(logoutUrl);\\r\\n        },\\r\\n        error => {\\r\\n            const errmsg = 'Logout error';\\r\\n\\r\\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\r\\n            logger.error(errmsg, error);\\r\\n        }\\r\\n    );\\r\\n};\\r\\n\",\"/* global $, __filename */\\r\\n\\r\\nimport {\\r\\n    ACTION_JINGLE_TR_RECEIVED,\\r\\n    ACTION_JINGLE_TR_SUCCESS,\\r\\n    createJingleEvent\\r\\n} from '../../service/statistics/AnalyticsEvents';\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport { $iq, Strophe } from 'strophe.js';\\r\\n\\r\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\r\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\r\\nimport RandomUtil from '../util/RandomUtil';\\r\\nimport Statistics from '../statistics/statistics';\\r\\n\\r\\nimport JingleSessionPC from './JingleSessionPC';\\r\\nimport ConnectionPlugin from './ConnectionPlugin';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n// XXX Strophe is build around the idea of chaining function calls so allow long\\r\\n// function call chains.\\r\\n/* eslint-disable newline-per-chained-call */\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nclass JingleConnectionPlugin extends ConnectionPlugin {\\r\\n    /**\\r\\n     * Creates new <tt>JingleConnectionPlugin</tt>\\r\\n     * @param {XMPP} xmpp\\r\\n     * @param {EventEmitter} eventEmitter\\r\\n     * @param {Object} iceConfig an object that holds the iceConfig to be passed\\r\\n     * to the p2p and the jvb <tt>PeerConnection</tt>.\\r\\n     */\\r\\n    constructor(xmpp, eventEmitter, iceConfig) {\\r\\n        super();\\r\\n        this.xmpp = xmpp;\\r\\n        this.eventEmitter = eventEmitter;\\r\\n        this.sessions = {};\\r\\n        this.jvbIceConfig = iceConfig.jvb;\\r\\n        this.p2pIceConfig = iceConfig.p2p;\\r\\n        this.mediaConstraints = {\\r\\n            offerToReceiveAudio: true,\\r\\n            offerToReceiveVideo: true\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param connection\\r\\n     */\\r\\n    init(connection) {\\r\\n        super.init(connection);\\r\\n        this.connection.addHandler(this.onJingle.bind(this),\\r\\n            'urn:xmpp:jingle:1', 'iq', 'set', null, null);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param iq\\r\\n     */\\r\\n    onJingle(iq) {\\r\\n        const sid = $(iq).find('jingle').attr('sid');\\r\\n        const action = $(iq).find('jingle').attr('action');\\r\\n        const fromJid = iq.getAttribute('from');\\r\\n\\r\\n        // send ack first\\r\\n        const ack = $iq({ type: 'result',\\r\\n            to: fromJid,\\r\\n            id: iq.getAttribute('id')\\r\\n        });\\r\\n\\r\\n        logger.log(`on jingle ${action} from ${fromJid}`, iq);\\r\\n        let sess = this.sessions[sid];\\r\\n\\r\\n        if (action !== 'session-initiate') {\\r\\n            if (!sess) {\\r\\n                ack.attrs({ type: 'error' });\\r\\n                ack.c('error', { type: 'cancel' })\\r\\n                    .c('item-not-found', {\\r\\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\\r\\n                    })\\r\\n                    .up()\\r\\n                    .c('unknown-session', {\\r\\n                        xmlns: 'urn:xmpp:jingle:errors:1'\\r\\n                    });\\r\\n                logger.warn('invalid session id', iq);\\r\\n                this.connection.send(ack);\\r\\n\\r\\n                return true;\\r\\n            }\\r\\n\\r\\n            // local jid is not checked\\r\\n            if (fromJid !== sess.remoteJid) {\\r\\n                logger.warn(\\r\\n                    'jid mismatch for session id', sid, sess.remoteJid, iq);\\r\\n                ack.attrs({ type: 'error' });\\r\\n                ack.c('error', { type: 'cancel' })\\r\\n                    .c('item-not-found', {\\r\\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\\r\\n                    })\\r\\n                    .up()\\r\\n                    .c('unknown-session', {\\r\\n                        xmlns: 'urn:xmpp:jingle:errors:1'\\r\\n                    });\\r\\n                this.connection.send(ack);\\r\\n\\r\\n                return true;\\r\\n            }\\r\\n        } else if (sess !== undefined) {\\r\\n            // Existing session with same session id. This might be out-of-order\\r\\n            // if the sess.remoteJid is the same as from.\\r\\n            ack.attrs({ type: 'error' });\\r\\n            ack.c('error', { type: 'cancel' })\\r\\n                .c('service-unavailable', {\\r\\n                    xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\\r\\n                })\\r\\n                .up();\\r\\n            logger.warn('duplicate session id', sid, iq);\\r\\n            this.connection.send(ack);\\r\\n\\r\\n            return true;\\r\\n        }\\r\\n        const now = window.performance.now();\\r\\n\\r\\n        // FIXME that should work most of the time, but we'd have to\\r\\n        // think how secure it is to assume that user with \\\"focus\\\"\\r\\n        // nickname is Jicofo.\\r\\n        const isP2P = Strophe.getResourceFromJid(fromJid) !== 'focus';\\r\\n\\r\\n        // see http://xmpp.org/extensions/xep-0166.html#concepts-session\\r\\n\\r\\n        switch (action) {\\r\\n        case 'session-initiate': {\\r\\n            logger.log('(TIME) received session-initiate:\\\\t', now);\\r\\n            const startMuted = $(iq).find('jingle>startmuted');\\r\\n\\r\\n            if (startMuted && startMuted.length > 0) {\\r\\n                const audioMuted = startMuted.attr('audio');\\r\\n                const videoMuted = startMuted.attr('video');\\r\\n\\r\\n                this.eventEmitter.emit(\\r\\n                    XMPPEvents.START_MUTED_FROM_FOCUS,\\r\\n                    audioMuted === 'true',\\r\\n                    videoMuted === 'true');\\r\\n            }\\r\\n\\r\\n            logger.info(\\r\\n                `Marking session from ${fromJid\\r\\n                } as ${isP2P ? '' : '*not*'} P2P`);\\r\\n            sess\\r\\n                = new JingleSessionPC(\\r\\n                    $(iq).find('jingle').attr('sid'),\\r\\n                    $(iq).attr('to'),\\r\\n                    fromJid,\\r\\n                    this.connection,\\r\\n                    this.mediaConstraints,\\r\\n                    isP2P ? this.p2pIceConfig : this.jvbIceConfig,\\r\\n                    isP2P,\\r\\n                    /* initiator */ false);\\r\\n\\r\\n            this.sessions[sess.sid] = sess;\\r\\n\\r\\n            this.eventEmitter.emit(XMPPEvents.CALL_INCOMING,\\r\\n                sess, $(iq).find('>jingle'), now);\\r\\n            break;\\r\\n        }\\r\\n        case 'session-accept': {\\r\\n            this.eventEmitter.emit(\\r\\n                XMPPEvents.CALL_ACCEPTED, sess, $(iq).find('>jingle'));\\r\\n            break;\\r\\n        }\\r\\n        case 'content-modify': {\\r\\n            sess.modifyContents($(iq).find('>jingle'));\\r\\n            break;\\r\\n        }\\r\\n        case 'transport-info': {\\r\\n            this.eventEmitter.emit(\\r\\n                XMPPEvents.TRANSPORT_INFO, sess, $(iq).find('>jingle'));\\r\\n            break;\\r\\n        }\\r\\n        case 'session-terminate': {\\r\\n            logger.log('terminating...', sess.sid);\\r\\n            let reasonCondition = null;\\r\\n            let reasonText = null;\\r\\n\\r\\n            if ($(iq).find('>jingle>reason').length) {\\r\\n                reasonCondition\\r\\n                    = $(iq).find('>jingle>reason>:first')[0].tagName;\\r\\n                reasonText = $(iq).find('>jingle>reason>text').text();\\r\\n            }\\r\\n            this.terminate(sess.sid, reasonCondition, reasonText);\\r\\n            this.eventEmitter.emit(XMPPEvents.CALL_ENDED,\\r\\n                sess, reasonCondition, reasonText);\\r\\n            break;\\r\\n        }\\r\\n        case 'transport-replace':\\r\\n            logger.info('(TIME) Start transport replace', now);\\r\\n            Statistics.sendAnalytics(createJingleEvent(\\r\\n                ACTION_JINGLE_TR_RECEIVED,\\r\\n                {\\r\\n                    p2p: isP2P,\\r\\n                    value: now\\r\\n                }));\\r\\n\\r\\n            sess.replaceTransport($(iq).find('>jingle'), () => {\\r\\n                const successTime = window.performance.now();\\r\\n\\r\\n                logger.info('(TIME) Transport replace success!', successTime);\\r\\n                Statistics.sendAnalytics(createJingleEvent(\\r\\n                    ACTION_JINGLE_TR_SUCCESS,\\r\\n                    {\\r\\n                        p2p: isP2P,\\r\\n                        value: successTime\\r\\n                    }));\\r\\n            }, error => {\\r\\n                GlobalOnErrorHandler.callErrorHandler(error);\\r\\n                logger.error('Transport replace failed', error);\\r\\n                sess.sendTransportReject();\\r\\n            });\\r\\n            break;\\r\\n        case 'addsource': // FIXME: proprietary, un-jingleish\\r\\n        case 'source-add': // FIXME: proprietary\\r\\n            sess.addRemoteStream($(iq).find('>jingle>content'));\\r\\n            break;\\r\\n        case 'removesource': // FIXME: proprietary, un-jingleish\\r\\n        case 'source-remove': // FIXME: proprietary\\r\\n            sess.removeRemoteStream($(iq).find('>jingle>content'));\\r\\n            break;\\r\\n        default:\\r\\n            logger.warn('jingle action not implemented', action);\\r\\n            ack.attrs({ type: 'error' });\\r\\n            ack.c('error', { type: 'cancel' })\\r\\n                .c('bad-request',\\r\\n                    { xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas' })\\r\\n                .up();\\r\\n            break;\\r\\n        }\\r\\n        this.connection.send(ack);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates new <tt>JingleSessionPC</tt> meant to be used in a direct P2P\\r\\n     * connection, configured as 'initiator'.\\r\\n     * @param {string} me our JID\\r\\n     * @param {string} peer remote participant's JID\\r\\n     * @return {JingleSessionPC}\\r\\n     */\\r\\n    newP2PJingleSession(me, peer) {\\r\\n        const sess\\r\\n            = new JingleSessionPC(\\r\\n                RandomUtil.randomHexString(12),\\r\\n                me,\\r\\n                peer,\\r\\n                this.connection,\\r\\n                this.mediaConstraints,\\r\\n                this.p2pIceConfig,\\r\\n                /* P2P */ true,\\r\\n                /* initiator */ true);\\r\\n\\r\\n        this.sessions[sess.sid] = sess;\\r\\n\\r\\n        return sess;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param sid\\r\\n     * @param reasonCondition\\r\\n     * @param reasonText\\r\\n     */\\r\\n    terminate(sid, reasonCondition, reasonText) {\\r\\n        if (this.sessions.hasOwnProperty(sid)) {\\r\\n            if (this.sessions[sid].state !== 'ended') {\\r\\n                this.sessions[sid].onTerminated(reasonCondition, reasonText);\\r\\n            }\\r\\n            delete this.sessions[sid];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    getStunAndTurnCredentials() {\\r\\n        // get stun and turn configuration from server via xep-0215\\r\\n        // uses time-limited credentials as described in\\r\\n        // http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00\\r\\n        //\\r\\n        // See https://modules.prosody.im/mod_turncredentials.html\\r\\n        // for a prosody module which implements this.\\r\\n        //\\r\\n        // Currently, this doesn't work with updateIce and therefore credentials\\r\\n        // with a long validity have to be fetched before creating the\\r\\n        // peerconnection.\\r\\n        // TODO: implement refresh via updateIce as described in\\r\\n        //      https://code.google.com/p/webrtc/issues/detail?id=1650\\r\\n        this.connection.sendIQ(\\r\\n            $iq({ type: 'get',\\r\\n                to: this.connection.domain })\\r\\n                .c('services', { xmlns: 'urn:xmpp:extdisco:1' }),\\r\\n            res => {\\r\\n                const iceservers = [];\\r\\n\\r\\n                $(res).find('>services>service').each((idx, el) => {\\r\\n                    // eslint-disable-next-line no-param-reassign\\r\\n                    el = $(el);\\r\\n                    const dict = {};\\r\\n                    const type = el.attr('type');\\r\\n\\r\\n                    switch (type) {\\r\\n                    case 'stun':\\r\\n                        dict.url = `stun:${el.attr('host')}`;\\r\\n                        if (el.attr('port')) {\\r\\n                            dict.url += `:${el.attr('port')}`;\\r\\n                        }\\r\\n                        iceservers.push(dict);\\r\\n                        break;\\r\\n                    case 'turn':\\r\\n                    case 'turns': {\\r\\n                        dict.url = `${type}:`;\\r\\n                        const username = el.attr('username');\\r\\n\\r\\n                        // https://code.google.com/p/webrtc/issues/detail\\r\\n                        // ?id=1508\\r\\n\\r\\n                        if (username) {\\r\\n                            const match\\r\\n                                = navigator.userAgent.match(\\r\\n                                    /Chrom(e|ium)\\\\/([0-9]+)\\\\./);\\r\\n\\r\\n                            if (match && parseInt(match[2], 10) < 28) {\\r\\n                                dict.url += `${username}@`;\\r\\n                            } else {\\r\\n                                // only works in M28\\r\\n                                dict.username = username;\\r\\n                            }\\r\\n                        }\\r\\n                        dict.url += el.attr('host');\\r\\n                        const port = el.attr('port');\\r\\n\\r\\n                        if (port) {\\r\\n                            dict.url += `:${el.attr('port')}`;\\r\\n                        }\\r\\n                        const transport = el.attr('transport');\\r\\n\\r\\n                        if (transport && transport !== 'udp') {\\r\\n                            dict.url += `?transport=${transport}`;\\r\\n                        }\\r\\n\\r\\n                        dict.credential = el.attr('password')\\r\\n                                || dict.credential;\\r\\n                        iceservers.push(dict);\\r\\n                        break;\\r\\n                    }\\r\\n                    }\\r\\n                });\\r\\n\\r\\n                const options = this.xmpp.options;\\r\\n\\r\\n                if (options.useStunTurn) {\\r\\n                    // we want to filter and leave only tcp/turns candidates\\r\\n                    // which make sense for the jvb connections\\r\\n                    this.jvbIceConfig.iceServers\\r\\n                        = iceservers.filter(s => s.url.startsWith('turns'));\\r\\n                }\\r\\n\\r\\n                if (options.p2p && options.p2p.useStunTurn) {\\r\\n                    this.p2pIceConfig.iceServers = iceservers;\\r\\n                }\\r\\n\\r\\n            }, err => {\\r\\n                logger.warn('getting turn credentials failed', err);\\r\\n                logger.warn('is mod_turncredentials or similar installed?');\\r\\n            });\\r\\n\\r\\n        // implement push?\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the data saved in 'updateLog' in a format to be logged.\\r\\n     */\\r\\n    getLog() {\\r\\n        const data = {};\\r\\n\\r\\n        Object.keys(this.sessions).forEach(sid => {\\r\\n            const session = this.sessions[sid];\\r\\n            const pc = session.peerconnection;\\r\\n\\r\\n            if (pc && pc.updateLog) {\\r\\n                // FIXME: should probably be a .dump call\\r\\n                data[`jingle_${sid}`] = {\\r\\n                    updateLog: pc.updateLog,\\r\\n                    stats: pc.stats,\\r\\n                    url: window.location.href\\r\\n                };\\r\\n            }\\r\\n        });\\r\\n\\r\\n        return data;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* eslint-enable newline-per-chained-call */\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param XMPP\\r\\n * @param eventEmitter\\r\\n * @param iceConfig\\r\\n */\\r\\nexport default function initJingle(XMPP, eventEmitter, iceConfig) {\\r\\n    Strophe.addConnectionPlugin(\\r\\n        'jingle',\\r\\n        new JingleConnectionPlugin(XMPP, eventEmitter, iceConfig));\\r\\n}\\r\\n\",\"/**\\r\\n * Implements a simple hash code for a string (see\\r\\n * https://en.wikipedia.org/wiki/Java_hashCode()).\\r\\n *\\r\\n * @param {string} The string to return a hash of.\\r\\n * @return {Number} the integer hash code of the string.\\r\\n */\\r\\nfunction integerHash(string) {\\r\\n    if (!string) {\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    let char, hash = 0, i;\\r\\n\\r\\n    for (i = 0; i < string.length; i++) {\\r\\n        char = string.charCodeAt(i);\\r\\n        hash += char * Math.pow(31, string.length - 1 - i);\\r\\n        hash = Math.abs(hash | 0); // eslint-disable-line no-bitwise\\r\\n    }\\r\\n\\r\\n    return hash;\\r\\n}\\r\\n\\r\\nmodule.exports = { integerHash };\\r\\n\",\"/* global __filename */\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport * as JingleSessionState from './JingleSessionState';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * JingleSession provides an API to manage a single Jingle session. We will\\r\\n * have different implementations depending on the underlying interface used\\r\\n * (i.e. WebRTC and ORTC) and here we hold the code common to all of them.\\r\\n */\\r\\nexport default class JingleSession {\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    /**\\r\\n     * Creates new <tt>JingleSession</tt>.\\r\\n     * @param {string} sid the Jingle session identifier\\r\\n     * @param {string} localJid our JID\\r\\n     * @param {string} remoteJid the JID of the remote peer\\r\\n     * @param {Strophe.Connection} connection the XMPP connection\\r\\n     * @param {Object} mediaConstraints the media constraints object passed to\\r\\n     * the PeerConnection onCreateAnswer/Offer as defined by the WebRTC.\\r\\n     * @param {Object} iceConfig the ICE servers config object as defined by\\r\\n     * the WebRTC. Passed to the PeerConnection's constructor.\\r\\n     * @param {boolean} isInitiator indicates if it will be the side which\\r\\n     * initiates the session.\\r\\n     */\\r\\n    constructor(\\r\\n            sid,\\r\\n            localJid,\\r\\n            remoteJid,\\r\\n            connection,\\r\\n            mediaConstraints,\\r\\n            iceConfig,\\r\\n            isInitiator) {\\r\\n        this.sid = sid;\\r\\n        this.localJid = localJid;\\r\\n        this.remoteJid = remoteJid;\\r\\n        this.connection = connection;\\r\\n        this.mediaConstraints = mediaConstraints;\\r\\n        this.iceConfig = iceConfig;\\r\\n\\r\\n        /**\\r\\n         * Indicates whether this instance is an initiator or an answerer of\\r\\n         * the Jingle session.\\r\\n         * @type {boolean}\\r\\n         */\\r\\n        this.isInitiator = isInitiator;\\r\\n\\r\\n        /**\\r\\n         * Whether to use dripping or not. Dripping is sending trickle\\r\\n         * candidates not one-by-one.\\r\\n         */\\r\\n        this.usedrip = true;\\r\\n\\r\\n        /**\\r\\n         *  When dripping is used, stores ICE candidates which are to be sent.\\r\\n         */\\r\\n        this.dripContainer = [];\\r\\n\\r\\n        /**\\r\\n         * The chat room instance associated with the session.\\r\\n         * @type {ChatRoom}\\r\\n         */\\r\\n        this.room = null;\\r\\n\\r\\n        /**\\r\\n         * Jingle session state - uninitialized until {@link initialize} is\\r\\n         * called @type {JingleSessionState}\\r\\n         */\\r\\n        this.state = null;\\r\\n\\r\\n        /**\\r\\n         * The RTC service instance\\r\\n         * @type {RTC}\\r\\n         */\\r\\n        this.rtc = null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns XMPP address of this session's initiator.\\r\\n     * @return {string}\\r\\n     */\\r\\n    get initiatorJid() {\\r\\n        return this.isInitiator ? this.localJid : this.remoteJid;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns XMPP address of this session's responder.\\r\\n     * @return {string}\\r\\n     */\\r\\n    get responderJid() {\\r\\n        return this.isInitiator ? this.remoteJid : this.localJid;\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Prepares this object to initiate a session.\\r\\n     * @param {ChatRoom} room the chat room for the conference associated with\\r\\n     * this session\\r\\n     * @param {RTC} rtc the RTC service instance\\r\\n     * @param {object} options - the options, see implementing class's\\r\\n     * {@link #doInitialize} description for more details.\\r\\n     */\\r\\n    initialize(room, rtc, options) {\\r\\n        if (this.state !== null) {\\r\\n            const errmsg\\r\\n                = `attempt to initiate on session ${this.sid}\\r\\n                   in state ${this.state}`;\\r\\n\\r\\n            logger.error(errmsg);\\r\\n            throw new Error(errmsg);\\r\\n        }\\r\\n        this.room = room;\\r\\n        this.rtc = rtc;\\r\\n        this.state = JingleSessionState.PENDING;\\r\\n        this.doInitialize(options);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The implementing class finishes initialization here. Called at the end of\\r\\n     * {@link initialize}.\\r\\n     * @param {Object} options - The options specific to the implementing class.\\r\\n     * @protected\\r\\n     */\\r\\n    doInitialize(options) { } // eslint-disable-line no-unused-vars, no-empty-function, max-len\\r\\n\\r\\n    /* eslint-disable no-unused-vars, no-empty-function */\\r\\n\\r\\n    /**\\r\\n     * Adds the ICE candidates found in the 'contents' array as remote\\r\\n     * candidates?\\r\\n     * Note: currently only used on transport-info\\r\\n     *\\r\\n     * @param contents\\r\\n     */\\r\\n    addIceCandidates(contents) {}\\r\\n\\r\\n    /* eslint-enable no-unused-vars, no-empty-function */\\r\\n\\r\\n    /**\\r\\n     * Returns current state of this <tt>JingleSession</tt> instance.\\r\\n     * @returns {JingleSessionState} the current state of this session instance.\\r\\n     */\\r\\n    getState() {\\r\\n        return this.state;\\r\\n    }\\r\\n\\r\\n    /* eslint-disable no-unused-vars, no-empty-function */\\r\\n\\r\\n    /**\\r\\n     * Handles an 'add-source' event.\\r\\n     *\\r\\n     * @param contents an array of Jingle 'content' elements.\\r\\n     */\\r\\n    addSources(contents) {}\\r\\n\\r\\n    /**\\r\\n     * Handles a 'remove-source' event.\\r\\n     *\\r\\n     * @param contents an array of Jingle 'content' elements.\\r\\n     */\\r\\n    removeSources(contents) {}\\r\\n\\r\\n    /**\\r\\n     * Terminates this Jingle session by sending session-terminate\\r\\n     * @param success a callback called once the 'session-terminate' packet has\\r\\n     * been acknowledged with RESULT.\\r\\n     * @param failure a callback called when either timeout occurs or ERROR\\r\\n     * response is received.\\r\\n     * @param {Object} options\\r\\n     * @param {string} [options.reason] XMPP Jingle error condition\\r\\n     * @param {string} [options.reasonDescription] some meaningful error message\\r\\n     * @param {boolean} [options.sendSessionTerminate=true] set to false to skip\\r\\n     * sending session-terminate. It may not make sense to send it if the XMPP\\r\\n     * connection has been closed already or if the remote peer has disconnected\\r\\n     */\\r\\n    terminate(success, failure, options) {}\\r\\n\\r\\n    /**\\r\\n     * Handles an offer from the remote peer (prepares to accept a session).\\r\\n     * @param jingle the 'jingle' XML element.\\r\\n     * @param success callback called when we the incoming session has been\\r\\n     * accepted\\r\\n     * @param failure callback called when we fail for any reason, will supply\\r\\n     * error object with details(which is meant more to be printed to the logger\\r\\n     * than analysed in the code, as the error is unrecoverable anyway)\\r\\n     */\\r\\n    acceptOffer(jingle, success, failure) {}\\r\\n\\r\\n    /**\\r\\n     * Returns the JID of the initiator of the jingle session.\\r\\n     */\\r\\n    _getInitiatorJid() {\\r\\n        return this.isInitiator ? this.localJid : this.remoteJid;\\r\\n    }\\r\\n\\r\\n    /* eslint-enable no-unused-vars, no-empty-function */\\r\\n}\\r\\n\",\"/* global __filename */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\\r\\nimport SignalingLayer from '../../service/RTC/SignalingLayer';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Default XMPP implementation of the {@link SignalingLayer} interface. Obtains\\r\\n * the data from the MUC presence.\\r\\n */\\r\\nexport default class SignalingLayerImpl extends SignalingLayer {\\r\\n    /**\\r\\n     * Creates new instance.\\r\\n     */\\r\\n    constructor() {\\r\\n        super();\\r\\n\\r\\n        /**\\r\\n         * A map that stores SSRCs of remote streams. And is used only locally\\r\\n         * We store the mapping when jingle is received, and later is used\\r\\n         * onaddstream webrtc event where we have only the ssrc\\r\\n         * FIXME: This map got filled and never cleaned and can grow during long\\r\\n         * conference\\r\\n         * @type {Map<number, string>} maps SSRC number to jid\\r\\n         */\\r\\n        this.ssrcOwners = new Map();\\r\\n\\r\\n        /**\\r\\n         *\\r\\n         * @type {ChatRoom|null}\\r\\n         */\\r\\n        this.chatRoom = null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the <tt>ChatRoom</tt> instance used and binds presence listeners.\\r\\n     * @param {ChatRoom} room\\r\\n     */\\r\\n    setChatRoom(room) {\\r\\n        const oldChatRoom = this.chatRoom;\\r\\n\\r\\n        this.chatRoom = room;\\r\\n        if (oldChatRoom) {\\r\\n            oldChatRoom.removePresenceListener(\\r\\n                'audiomuted', this._audioMuteHandler);\\r\\n            oldChatRoom.removePresenceListener(\\r\\n                'videomuted', this._videoMuteHandler);\\r\\n            oldChatRoom.removePresenceListener(\\r\\n                'videoType', this._videoTypeHandler);\\r\\n        }\\r\\n        if (room) {\\r\\n            // SignalingEvents\\r\\n            this._audioMuteHandler = (node, from) => {\\r\\n                this.eventEmitter.emit(\\r\\n                    SignalingEvents.PEER_MUTED_CHANGED,\\r\\n                    from, MediaType.AUDIO, node.value === 'true');\\r\\n            };\\r\\n            room.addPresenceListener('audiomuted', this._audioMuteHandler);\\r\\n\\r\\n            this._videoMuteHandler = (node, from) => {\\r\\n                this.eventEmitter.emit(\\r\\n                    SignalingEvents.PEER_MUTED_CHANGED,\\r\\n                    from, MediaType.VIDEO, node.value === 'true');\\r\\n            };\\r\\n            room.addPresenceListener('videomuted', this._videoMuteHandler);\\r\\n\\r\\n            this._videoTypeHandler = (node, from) => {\\r\\n                this.eventEmitter.emit(\\r\\n                    SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\\r\\n                    from, node.value);\\r\\n            };\\r\\n            room.addPresenceListener('videoType', this._videoTypeHandler);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @inheritDoc\\r\\n     */\\r\\n    getPeerMediaInfo(owner, mediaType) {\\r\\n        if (this.chatRoom) {\\r\\n            return this.chatRoom.getMediaPresenceInfo(owner, mediaType);\\r\\n        }\\r\\n        logger.error('Requested peer media info, before room was set');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @inheritDoc\\r\\n     */\\r\\n    getSSRCOwner(ssrc) {\\r\\n        return this.ssrcOwners.get(ssrc);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set an SSRC owner.\\r\\n     * @param {number} ssrc an SSRC to be owned\\r\\n     * @param {string} endpointId owner's ID (MUC nickname)\\r\\n     * @throws TypeError if <tt>ssrc</tt> is not a number\\r\\n     */\\r\\n    setSSRCOwner(ssrc, endpointId) {\\r\\n        if (typeof ssrc !== 'number') {\\r\\n            throw new TypeError(`SSRC(${ssrc}) must be a number`);\\r\\n        }\\r\\n        this.ssrcOwners.set(ssrc, endpointId);\\r\\n    }\\r\\n}\\r\\n\",\"\\r\\nimport Listenable from '../../modules/util/Listenable';\\r\\n\\r\\n/**\\r\\n * An object that carries the info about specific media type advertised by\\r\\n * participant in the signaling channel.\\r\\n * @typedef {Object} PeerMediaInfo\\r\\n * @property {boolean} muted indicates if the media is currently muted\\r\\n * @property {VideoType|undefined} videoType the type of the video if applicable\\r\\n */\\r\\n\\r\\n/**\\r\\n * Interface used to expose the information carried over the signaling channel\\r\\n * which is not available to the RTC module in the media SDP.\\r\\n *\\r\\n * @interface SignalingLayer\\r\\n */\\r\\nexport default class SignalingLayer extends Listenable {\\r\\n\\r\\n    /**\\r\\n     * Obtains the endpoint ID for given SSRC.\\r\\n     * @param {number} ssrc the SSRC number.\\r\\n     * @return {string|null} the endpoint ID for given media SSRC.\\r\\n     */\\r\\n    getSSRCOwner(ssrc) { // eslint-disable-line no-unused-vars\\r\\n        throw new Error('not implemented');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Obtains the info about given media advertised in the MUC presence of\\r\\n     * the participant identified by the given MUC JID.\\r\\n     * @param {string} owner the MUC jid of the participant for whom\\r\\n     * {@link PeerMediaInfo} will be obtained.\\r\\n     * @param {MediaType} mediaType the type of the media for which presence\\r\\n     * info will be obtained.\\r\\n     * @return {PeerMediaInfo|null} presenceInfo an object with media presence\\r\\n     * info or <tt>null</tt> either if there is no presence available for given\\r\\n     * JID or if the media type given is invalid.\\r\\n     */\\r\\n    getPeerMediaInfo(owner, mediaType) { // eslint-disable-line no-unused-vars\\r\\n        throw new Error('not implemented');\\r\\n    }\\r\\n}\\r\\n\",\"import async from 'async';\\r\\n\\r\\n/**\\r\\n * A queue for async task execution.\\r\\n */\\r\\nexport default class AsyncQueue {\\r\\n    /**\\r\\n     * Creates new instance.\\r\\n     */\\r\\n    constructor() {\\r\\n        this._queue = async.queue(this._processQueueTasks.bind(this), 1);\\r\\n        this._stopped = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes any pending tasks from the queue.\\r\\n     */\\r\\n    clear() {\\r\\n        this._queue.kill();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Internal task processing implementation which makes things work.\\r\\n     */\\r\\n    _processQueueTasks(task, finishedCallback) {\\r\\n        task(finishedCallback);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The 'task' function will be given a callback it MUST call with either:\\r\\n     *  1) No arguments if it was successful or\\r\\n     *  2) An error argument if there was an error\\r\\n     * If the task wants to process the success or failure of the task, it\\r\\n     * should pass the {@code callback} to the push function, e.g.:\\r\\n     * queue.push(task, (err) => {\\r\\n     *     if (err) {\\r\\n     *         // error handling\\r\\n     *     } else {\\r\\n     *         // success handling\\r\\n     *     }\\r\\n     * });\\r\\n     *\\r\\n     * @param {function} task - The task to be executed. See the description above.\\r\\n     * @param {function} [callback] - Optional callback to be called after the task has been executed.\\r\\n     */\\r\\n    push(task, callback) {\\r\\n        if (this._stopped) {\\r\\n            callback && callback(new Error('The queue has been stopped'));\\r\\n\\r\\n            return;\\r\\n        }\\r\\n        this._queue.push(task, callback);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Shutdowns the queue. All already queued tasks will execute, but no future tasks can be added. If a task is added\\r\\n     * after the queue has been shutdown then the callback will be called with an error.\\r\\n     */\\r\\n    shutdown() {\\r\\n        this._stopped = true;\\r\\n    }\\r\\n}\\r\\n\",\"/*!\\n * async\\n * https://github.com/caolan/async\\n *\\n * Copyright 2010-2014 Caolan McMahon\\n * Released under the MIT license\\n */\\n/*jshint onevar: false, indent:4 */\\n/*global setImmediate: false, setTimeout: false, console: false */\\n(function () {\\n\\n    var async = {};\\n\\n    // global on the server, window in the browser\\n    var root, previous_async;\\n\\n    root = this;\\n    if (root != null) {\\n      previous_async = root.async;\\n    }\\n\\n    async.noConflict = function () {\\n        root.async = previous_async;\\n        return async;\\n    };\\n\\n    function only_once(fn) {\\n        var called = false;\\n        return function() {\\n            if (called) throw new Error(\\\"Callback was already called.\\\");\\n            called = true;\\n            fn.apply(root, arguments);\\n        }\\n    }\\n\\n    //// cross-browser compatiblity functions ////\\n\\n    var _toString = Object.prototype.toString;\\n\\n    var _isArray = Array.isArray || function (obj) {\\n        return _toString.call(obj) === '[object Array]';\\n    };\\n\\n    var _each = function (arr, iterator) {\\n        if (arr.forEach) {\\n            return arr.forEach(iterator);\\n        }\\n        for (var i = 0; i < arr.length; i += 1) {\\n            iterator(arr[i], i, arr);\\n        }\\n    };\\n\\n    var _map = function (arr, iterator) {\\n        if (arr.map) {\\n            return arr.map(iterator);\\n        }\\n        var results = [];\\n        _each(arr, function (x, i, a) {\\n            results.push(iterator(x, i, a));\\n        });\\n        return results;\\n    };\\n\\n    var _reduce = function (arr, iterator, memo) {\\n        if (arr.reduce) {\\n            return arr.reduce(iterator, memo);\\n        }\\n        _each(arr, function (x, i, a) {\\n            memo = iterator(memo, x, i, a);\\n        });\\n        return memo;\\n    };\\n\\n    var _keys = function (obj) {\\n        if (Object.keys) {\\n            return Object.keys(obj);\\n        }\\n        var keys = [];\\n        for (var k in obj) {\\n            if (obj.hasOwnProperty(k)) {\\n                keys.push(k);\\n            }\\n        }\\n        return keys;\\n    };\\n\\n    //// exported async module functions ////\\n\\n    //// nextTick implementation with browser-compatible fallback ////\\n    if (typeof process === 'undefined' || !(process.nextTick)) {\\n        if (typeof setImmediate === 'function') {\\n            async.nextTick = function (fn) {\\n                // not a direct alias for IE10 compatibility\\n                setImmediate(fn);\\n            };\\n            async.setImmediate = async.nextTick;\\n        }\\n        else {\\n            async.nextTick = function (fn) {\\n                setTimeout(fn, 0);\\n            };\\n            async.setImmediate = async.nextTick;\\n        }\\n    }\\n    else {\\n        async.nextTick = process.nextTick;\\n        if (typeof setImmediate !== 'undefined') {\\n            async.setImmediate = function (fn) {\\n              // not a direct alias for IE10 compatibility\\n              setImmediate(fn);\\n            };\\n        }\\n        else {\\n            async.setImmediate = async.nextTick;\\n        }\\n    }\\n\\n    async.each = function (arr, iterator, callback) {\\n        callback = callback || function () {};\\n        if (!arr.length) {\\n            return callback();\\n        }\\n        var completed = 0;\\n        _each(arr, function (x) {\\n            iterator(x, only_once(done) );\\n        });\\n        function done(err) {\\n          if (err) {\\n              callback(err);\\n              callback = function () {};\\n          }\\n          else {\\n              completed += 1;\\n              if (completed >= arr.length) {\\n                  callback();\\n              }\\n          }\\n        }\\n    };\\n    async.forEach = async.each;\\n\\n    async.eachSeries = function (arr, iterator, callback) {\\n        callback = callback || function () {};\\n        if (!arr.length) {\\n            return callback();\\n        }\\n        var completed = 0;\\n        var iterate = function () {\\n            iterator(arr[completed], function (err) {\\n                if (err) {\\n                    callback(err);\\n                    callback = function () {};\\n                }\\n                else {\\n                    completed += 1;\\n                    if (completed >= arr.length) {\\n                        callback();\\n                    }\\n                    else {\\n                        iterate();\\n                    }\\n                }\\n            });\\n        };\\n        iterate();\\n    };\\n    async.forEachSeries = async.eachSeries;\\n\\n    async.eachLimit = function (arr, limit, iterator, callback) {\\n        var fn = _eachLimit(limit);\\n        fn.apply(null, [arr, iterator, callback]);\\n    };\\n    async.forEachLimit = async.eachLimit;\\n\\n    var _eachLimit = function (limit) {\\n\\n        return function (arr, iterator, callback) {\\n            callback = callback || function () {};\\n            if (!arr.length || limit <= 0) {\\n                return callback();\\n            }\\n            var completed = 0;\\n            var started = 0;\\n            var running = 0;\\n\\n            (function replenish () {\\n                if (completed >= arr.length) {\\n                    return callback();\\n                }\\n\\n                while (running < limit && started < arr.length) {\\n                    started += 1;\\n                    running += 1;\\n                    iterator(arr[started - 1], function (err) {\\n                        if (err) {\\n                            callback(err);\\n                            callback = function () {};\\n                        }\\n                        else {\\n                            completed += 1;\\n                            running -= 1;\\n                            if (completed >= arr.length) {\\n                                callback();\\n                            }\\n                            else {\\n                                replenish();\\n                            }\\n                        }\\n                    });\\n                }\\n            })();\\n        };\\n    };\\n\\n\\n    var doParallel = function (fn) {\\n        return function () {\\n            var args = Array.prototype.slice.call(arguments);\\n            return fn.apply(null, [async.each].concat(args));\\n        };\\n    };\\n    var doParallelLimit = function(limit, fn) {\\n        return function () {\\n            var args = Array.prototype.slice.call(arguments);\\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\\n        };\\n    };\\n    var doSeries = function (fn) {\\n        return function () {\\n            var args = Array.prototype.slice.call(arguments);\\n            return fn.apply(null, [async.eachSeries].concat(args));\\n        };\\n    };\\n\\n\\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\\n        arr = _map(arr, function (x, i) {\\n            return {index: i, value: x};\\n        });\\n        if (!callback) {\\n            eachfn(arr, function (x, callback) {\\n                iterator(x.value, function (err) {\\n                    callback(err);\\n                });\\n            });\\n        } else {\\n            var results = [];\\n            eachfn(arr, function (x, callback) {\\n                iterator(x.value, function (err, v) {\\n                    results[x.index] = v;\\n                    callback(err);\\n                });\\n            }, function (err) {\\n                callback(err, results);\\n            });\\n        }\\n    };\\n    async.map = doParallel(_asyncMap);\\n    async.mapSeries = doSeries(_asyncMap);\\n    async.mapLimit = function (arr, limit, iterator, callback) {\\n        return _mapLimit(limit)(arr, iterator, callback);\\n    };\\n\\n    var _mapLimit = function(limit) {\\n        return doParallelLimit(limit, _asyncMap);\\n    };\\n\\n    // reduce only has a series version, as doing reduce in parallel won't\\n    // work in many situations.\\n    async.reduce = function (arr, memo, iterator, callback) {\\n        async.eachSeries(arr, function (x, callback) {\\n            iterator(memo, x, function (err, v) {\\n                memo = v;\\n                callback(err);\\n            });\\n        }, function (err) {\\n            callback(err, memo);\\n        });\\n    };\\n    // inject alias\\n    async.inject = async.reduce;\\n    // foldl alias\\n    async.foldl = async.reduce;\\n\\n    async.reduceRight = function (arr, memo, iterator, callback) {\\n        var reversed = _map(arr, function (x) {\\n            return x;\\n        }).reverse();\\n        async.reduce(reversed, memo, iterator, callback);\\n    };\\n    // foldr alias\\n    async.foldr = async.reduceRight;\\n\\n    var _filter = function (eachfn, arr, iterator, callback) {\\n        var results = [];\\n        arr = _map(arr, function (x, i) {\\n            return {index: i, value: x};\\n        });\\n        eachfn(arr, function (x, callback) {\\n            iterator(x.value, function (v) {\\n                if (v) {\\n                    results.push(x);\\n                }\\n                callback();\\n            });\\n        }, function (err) {\\n            callback(_map(results.sort(function (a, b) {\\n                return a.index - b.index;\\n            }), function (x) {\\n                return x.value;\\n            }));\\n        });\\n    };\\n    async.filter = doParallel(_filter);\\n    async.filterSeries = doSeries(_filter);\\n    // select alias\\n    async.select = async.filter;\\n    async.selectSeries = async.filterSeries;\\n\\n    var _reject = function (eachfn, arr, iterator, callback) {\\n        var results = [];\\n        arr = _map(arr, function (x, i) {\\n            return {index: i, value: x};\\n        });\\n        eachfn(arr, function (x, callback) {\\n            iterator(x.value, function (v) {\\n                if (!v) {\\n                    results.push(x);\\n                }\\n                callback();\\n            });\\n        }, function (err) {\\n            callback(_map(results.sort(function (a, b) {\\n                return a.index - b.index;\\n            }), function (x) {\\n                return x.value;\\n            }));\\n        });\\n    };\\n    async.reject = doParallel(_reject);\\n    async.rejectSeries = doSeries(_reject);\\n\\n    var _detect = function (eachfn, arr, iterator, main_callback) {\\n        eachfn(arr, function (x, callback) {\\n            iterator(x, function (result) {\\n                if (result) {\\n                    main_callback(x);\\n                    main_callback = function () {};\\n                }\\n                else {\\n                    callback();\\n                }\\n            });\\n        }, function (err) {\\n            main_callback();\\n        });\\n    };\\n    async.detect = doParallel(_detect);\\n    async.detectSeries = doSeries(_detect);\\n\\n    async.some = function (arr, iterator, main_callback) {\\n        async.each(arr, function (x, callback) {\\n            iterator(x, function (v) {\\n                if (v) {\\n                    main_callback(true);\\n                    main_callback = function () {};\\n                }\\n                callback();\\n            });\\n        }, function (err) {\\n            main_callback(false);\\n        });\\n    };\\n    // any alias\\n    async.any = async.some;\\n\\n    async.every = function (arr, iterator, main_callback) {\\n        async.each(arr, function (x, callback) {\\n            iterator(x, function (v) {\\n                if (!v) {\\n                    main_callback(false);\\n                    main_callback = function () {};\\n                }\\n                callback();\\n            });\\n        }, function (err) {\\n            main_callback(true);\\n        });\\n    };\\n    // all alias\\n    async.all = async.every;\\n\\n    async.sortBy = function (arr, iterator, callback) {\\n        async.map(arr, function (x, callback) {\\n            iterator(x, function (err, criteria) {\\n                if (err) {\\n                    callback(err);\\n                }\\n                else {\\n                    callback(null, {value: x, criteria: criteria});\\n                }\\n            });\\n        }, function (err, results) {\\n            if (err) {\\n                return callback(err);\\n            }\\n            else {\\n                var fn = function (left, right) {\\n                    var a = left.criteria, b = right.criteria;\\n                    return a < b ? -1 : a > b ? 1 : 0;\\n                };\\n                callback(null, _map(results.sort(fn), function (x) {\\n                    return x.value;\\n                }));\\n            }\\n        });\\n    };\\n\\n    async.auto = function (tasks, callback) {\\n        callback = callback || function () {};\\n        var keys = _keys(tasks);\\n        var remainingTasks = keys.length\\n        if (!remainingTasks) {\\n            return callback();\\n        }\\n\\n        var results = {};\\n\\n        var listeners = [];\\n        var addListener = function (fn) {\\n            listeners.unshift(fn);\\n        };\\n        var removeListener = function (fn) {\\n            for (var i = 0; i < listeners.length; i += 1) {\\n                if (listeners[i] === fn) {\\n                    listeners.splice(i, 1);\\n                    return;\\n                }\\n            }\\n        };\\n        var taskComplete = function () {\\n            remainingTasks--\\n            _each(listeners.slice(0), function (fn) {\\n                fn();\\n            });\\n        };\\n\\n        addListener(function () {\\n            if (!remainingTasks) {\\n                var theCallback = callback;\\n                // prevent final callback from calling itself if it errors\\n                callback = function () {};\\n\\n                theCallback(null, results);\\n            }\\n        });\\n\\n        _each(keys, function (k) {\\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\\n            var taskCallback = function (err) {\\n                var args = Array.prototype.slice.call(arguments, 1);\\n                if (args.length <= 1) {\\n                    args = args[0];\\n                }\\n                if (err) {\\n                    var safeResults = {};\\n                    _each(_keys(results), function(rkey) {\\n                        safeResults[rkey] = results[rkey];\\n                    });\\n                    safeResults[k] = args;\\n                    callback(err, safeResults);\\n                    // stop subsequent errors hitting callback multiple times\\n                    callback = function () {};\\n                }\\n                else {\\n                    results[k] = args;\\n                    async.setImmediate(taskComplete);\\n                }\\n            };\\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\\n            var ready = function () {\\n                return _reduce(requires, function (a, x) {\\n                    return (a && results.hasOwnProperty(x));\\n                }, true) && !results.hasOwnProperty(k);\\n            };\\n            if (ready()) {\\n                task[task.length - 1](taskCallback, results);\\n            }\\n            else {\\n                var listener = function () {\\n                    if (ready()) {\\n                        removeListener(listener);\\n                        task[task.length - 1](taskCallback, results);\\n                    }\\n                };\\n                addListener(listener);\\n            }\\n        });\\n    };\\n\\n    async.retry = function(times, task, callback) {\\n        var DEFAULT_TIMES = 5;\\n        var attempts = [];\\n        // Use defaults if times not passed\\n        if (typeof times === 'function') {\\n            callback = task;\\n            task = times;\\n            times = DEFAULT_TIMES;\\n        }\\n        // Make sure times is a number\\n        times = parseInt(times, 10) || DEFAULT_TIMES;\\n        var wrappedTask = function(wrappedCallback, wrappedResults) {\\n            var retryAttempt = function(task, finalAttempt) {\\n                return function(seriesCallback) {\\n                    task(function(err, result){\\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\\n                    }, wrappedResults);\\n                };\\n            };\\n            while (times) {\\n                attempts.push(retryAttempt(task, !(times-=1)));\\n            }\\n            async.series(attempts, function(done, data){\\n                data = data[data.length - 1];\\n                (wrappedCallback || callback)(data.err, data.result);\\n            });\\n        }\\n        // If a callback is passed, run this as a controll flow\\n        return callback ? wrappedTask() : wrappedTask\\n    };\\n\\n    async.waterfall = function (tasks, callback) {\\n        callback = callback || function () {};\\n        if (!_isArray(tasks)) {\\n          var err = new Error('First argument to waterfall must be an array of functions');\\n          return callback(err);\\n        }\\n        if (!tasks.length) {\\n            return callback();\\n        }\\n        var wrapIterator = function (iterator) {\\n            return function (err) {\\n                if (err) {\\n                    callback.apply(null, arguments);\\n                    callback = function () {};\\n                }\\n                else {\\n                    var args = Array.prototype.slice.call(arguments, 1);\\n                    var next = iterator.next();\\n                    if (next) {\\n                        args.push(wrapIterator(next));\\n                    }\\n                    else {\\n                        args.push(callback);\\n                    }\\n                    async.setImmediate(function () {\\n                        iterator.apply(null, args);\\n                    });\\n                }\\n            };\\n        };\\n        wrapIterator(async.iterator(tasks))();\\n    };\\n\\n    var _parallel = function(eachfn, tasks, callback) {\\n        callback = callback || function () {};\\n        if (_isArray(tasks)) {\\n            eachfn.map(tasks, function (fn, callback) {\\n                if (fn) {\\n                    fn(function (err) {\\n                        var args = Array.prototype.slice.call(arguments, 1);\\n                        if (args.length <= 1) {\\n                            args = args[0];\\n                        }\\n                        callback.call(null, err, args);\\n                    });\\n                }\\n            }, callback);\\n        }\\n        else {\\n            var results = {};\\n            eachfn.each(_keys(tasks), function (k, callback) {\\n                tasks[k](function (err) {\\n                    var args = Array.prototype.slice.call(arguments, 1);\\n                    if (args.length <= 1) {\\n                        args = args[0];\\n                    }\\n                    results[k] = args;\\n                    callback(err);\\n                });\\n            }, function (err) {\\n                callback(err, results);\\n            });\\n        }\\n    };\\n\\n    async.parallel = function (tasks, callback) {\\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\\n    };\\n\\n    async.parallelLimit = function(tasks, limit, callback) {\\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\\n    };\\n\\n    async.series = function (tasks, callback) {\\n        callback = callback || function () {};\\n        if (_isArray(tasks)) {\\n            async.mapSeries(tasks, function (fn, callback) {\\n                if (fn) {\\n                    fn(function (err) {\\n                        var args = Array.prototype.slice.call(arguments, 1);\\n                        if (args.length <= 1) {\\n                            args = args[0];\\n                        }\\n                        callback.call(null, err, args);\\n                    });\\n                }\\n            }, callback);\\n        }\\n        else {\\n            var results = {};\\n            async.eachSeries(_keys(tasks), function (k, callback) {\\n                tasks[k](function (err) {\\n                    var args = Array.prototype.slice.call(arguments, 1);\\n                    if (args.length <= 1) {\\n                        args = args[0];\\n                    }\\n                    results[k] = args;\\n                    callback(err);\\n                });\\n            }, function (err) {\\n                callback(err, results);\\n            });\\n        }\\n    };\\n\\n    async.iterator = function (tasks) {\\n        var makeCallback = function (index) {\\n            var fn = function () {\\n                if (tasks.length) {\\n                    tasks[index].apply(null, arguments);\\n                }\\n                return fn.next();\\n            };\\n            fn.next = function () {\\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\\n            };\\n            return fn;\\n        };\\n        return makeCallback(0);\\n    };\\n\\n    async.apply = function (fn) {\\n        var args = Array.prototype.slice.call(arguments, 1);\\n        return function () {\\n            return fn.apply(\\n                null, args.concat(Array.prototype.slice.call(arguments))\\n            );\\n        };\\n    };\\n\\n    var _concat = function (eachfn, arr, fn, callback) {\\n        var r = [];\\n        eachfn(arr, function (x, cb) {\\n            fn(x, function (err, y) {\\n                r = r.concat(y || []);\\n                cb(err);\\n            });\\n        }, function (err) {\\n            callback(err, r);\\n        });\\n    };\\n    async.concat = doParallel(_concat);\\n    async.concatSeries = doSeries(_concat);\\n\\n    async.whilst = function (test, iterator, callback) {\\n        if (test()) {\\n            iterator(function (err) {\\n                if (err) {\\n                    return callback(err);\\n                }\\n                async.whilst(test, iterator, callback);\\n            });\\n        }\\n        else {\\n            callback();\\n        }\\n    };\\n\\n    async.doWhilst = function (iterator, test, callback) {\\n        iterator(function (err) {\\n            if (err) {\\n                return callback(err);\\n            }\\n            var args = Array.prototype.slice.call(arguments, 1);\\n            if (test.apply(null, args)) {\\n                async.doWhilst(iterator, test, callback);\\n            }\\n            else {\\n                callback();\\n            }\\n        });\\n    };\\n\\n    async.until = function (test, iterator, callback) {\\n        if (!test()) {\\n            iterator(function (err) {\\n                if (err) {\\n                    return callback(err);\\n                }\\n                async.until(test, iterator, callback);\\n            });\\n        }\\n        else {\\n            callback();\\n        }\\n    };\\n\\n    async.doUntil = function (iterator, test, callback) {\\n        iterator(function (err) {\\n            if (err) {\\n                return callback(err);\\n            }\\n            var args = Array.prototype.slice.call(arguments, 1);\\n            if (!test.apply(null, args)) {\\n                async.doUntil(iterator, test, callback);\\n            }\\n            else {\\n                callback();\\n            }\\n        });\\n    };\\n\\n    async.queue = function (worker, concurrency) {\\n        if (concurrency === undefined) {\\n            concurrency = 1;\\n        }\\n        function _insert(q, data, pos, callback) {\\n          if (!q.started){\\n            q.started = true;\\n          }\\n          if (!_isArray(data)) {\\n              data = [data];\\n          }\\n          if(data.length == 0) {\\n             // call drain immediately if there are no tasks\\n             return async.setImmediate(function() {\\n                 if (q.drain) {\\n                     q.drain();\\n                 }\\n             });\\n          }\\n          _each(data, function(task) {\\n              var item = {\\n                  data: task,\\n                  callback: typeof callback === 'function' ? callback : null\\n              };\\n\\n              if (pos) {\\n                q.tasks.unshift(item);\\n              } else {\\n                q.tasks.push(item);\\n              }\\n\\n              if (q.saturated && q.tasks.length === q.concurrency) {\\n                  q.saturated();\\n              }\\n              async.setImmediate(q.process);\\n          });\\n        }\\n\\n        var workers = 0;\\n        var q = {\\n            tasks: [],\\n            concurrency: concurrency,\\n            saturated: null,\\n            empty: null,\\n            drain: null,\\n            started: false,\\n            paused: false,\\n            push: function (data, callback) {\\n              _insert(q, data, false, callback);\\n            },\\n            kill: function () {\\n              q.drain = null;\\n              q.tasks = [];\\n            },\\n            unshift: function (data, callback) {\\n              _insert(q, data, true, callback);\\n            },\\n            process: function () {\\n                if (!q.paused && workers < q.concurrency && q.tasks.length) {\\n                    var task = q.tasks.shift();\\n                    if (q.empty && q.tasks.length === 0) {\\n                        q.empty();\\n                    }\\n                    workers += 1;\\n                    var next = function () {\\n                        workers -= 1;\\n                        if (task.callback) {\\n                            task.callback.apply(task, arguments);\\n                        }\\n                        if (q.drain && q.tasks.length + workers === 0) {\\n                            q.drain();\\n                        }\\n                        q.process();\\n                    };\\n                    var cb = only_once(next);\\n                    worker(task.data, cb);\\n                }\\n            },\\n            length: function () {\\n                return q.tasks.length;\\n            },\\n            running: function () {\\n                return workers;\\n            },\\n            idle: function() {\\n                return q.tasks.length + workers === 0;\\n            },\\n            pause: function () {\\n                if (q.paused === true) { return; }\\n                q.paused = true;\\n                q.process();\\n            },\\n            resume: function () {\\n                if (q.paused === false) { return; }\\n                q.paused = false;\\n                q.process();\\n            }\\n        };\\n        return q;\\n    };\\n    \\n    async.priorityQueue = function (worker, concurrency) {\\n        \\n        function _compareTasks(a, b){\\n          return a.priority - b.priority;\\n        };\\n        \\n        function _binarySearch(sequence, item, compare) {\\n          var beg = -1,\\n              end = sequence.length - 1;\\n          while (beg < end) {\\n            var mid = beg + ((end - beg + 1) >>> 1);\\n            if (compare(item, sequence[mid]) >= 0) {\\n              beg = mid;\\n            } else {\\n              end = mid - 1;\\n            }\\n          }\\n          return beg;\\n        }\\n        \\n        function _insert(q, data, priority, callback) {\\n          if (!q.started){\\n            q.started = true;\\n          }\\n          if (!_isArray(data)) {\\n              data = [data];\\n          }\\n          if(data.length == 0) {\\n             // call drain immediately if there are no tasks\\n             return async.setImmediate(function() {\\n                 if (q.drain) {\\n                     q.drain();\\n                 }\\n             });\\n          }\\n          _each(data, function(task) {\\n              var item = {\\n                  data: task,\\n                  priority: priority,\\n                  callback: typeof callback === 'function' ? callback : null\\n              };\\n              \\n              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\\n\\n              if (q.saturated && q.tasks.length === q.concurrency) {\\n                  q.saturated();\\n              }\\n              async.setImmediate(q.process);\\n          });\\n        }\\n        \\n        // Start with a normal queue\\n        var q = async.queue(worker, concurrency);\\n        \\n        // Override push to accept second parameter representing priority\\n        q.push = function (data, priority, callback) {\\n          _insert(q, data, priority, callback);\\n        };\\n        \\n        // Remove unshift function\\n        delete q.unshift;\\n\\n        return q;\\n    };\\n\\n    async.cargo = function (worker, payload) {\\n        var working     = false,\\n            tasks       = [];\\n\\n        var cargo = {\\n            tasks: tasks,\\n            payload: payload,\\n            saturated: null,\\n            empty: null,\\n            drain: null,\\n            drained: true,\\n            push: function (data, callback) {\\n                if (!_isArray(data)) {\\n                    data = [data];\\n                }\\n                _each(data, function(task) {\\n                    tasks.push({\\n                        data: task,\\n                        callback: typeof callback === 'function' ? callback : null\\n                    });\\n                    cargo.drained = false;\\n                    if (cargo.saturated && tasks.length === payload) {\\n                        cargo.saturated();\\n                    }\\n                });\\n                async.setImmediate(cargo.process);\\n            },\\n            process: function process() {\\n                if (working) return;\\n                if (tasks.length === 0) {\\n                    if(cargo.drain && !cargo.drained) cargo.drain();\\n                    cargo.drained = true;\\n                    return;\\n                }\\n\\n                var ts = typeof payload === 'number'\\n                            ? tasks.splice(0, payload)\\n                            : tasks.splice(0, tasks.length);\\n\\n                var ds = _map(ts, function (task) {\\n                    return task.data;\\n                });\\n\\n                if(cargo.empty) cargo.empty();\\n                working = true;\\n                worker(ds, function () {\\n                    working = false;\\n\\n                    var args = arguments;\\n                    _each(ts, function (data) {\\n                        if (data.callback) {\\n                            data.callback.apply(null, args);\\n                        }\\n                    });\\n\\n                    process();\\n                });\\n            },\\n            length: function () {\\n                return tasks.length;\\n            },\\n            running: function () {\\n                return working;\\n            }\\n        };\\n        return cargo;\\n    };\\n\\n    var _console_fn = function (name) {\\n        return function (fn) {\\n            var args = Array.prototype.slice.call(arguments, 1);\\n            fn.apply(null, args.concat([function (err) {\\n                var args = Array.prototype.slice.call(arguments, 1);\\n                if (typeof console !== 'undefined') {\\n                    if (err) {\\n                        if (console.error) {\\n                            console.error(err);\\n                        }\\n                    }\\n                    else if (console[name]) {\\n                        _each(args, function (x) {\\n                            console[name](x);\\n                        });\\n                    }\\n                }\\n            }]));\\n        };\\n    };\\n    async.log = _console_fn('log');\\n    async.dir = _console_fn('dir');\\n    /*async.info = _console_fn('info');\\n    async.warn = _console_fn('warn');\\n    async.error = _console_fn('error');*/\\n\\n    async.memoize = function (fn, hasher) {\\n        var memo = {};\\n        var queues = {};\\n        hasher = hasher || function (x) {\\n            return x;\\n        };\\n        var memoized = function () {\\n            var args = Array.prototype.slice.call(arguments);\\n            var callback = args.pop();\\n            var key = hasher.apply(null, args);\\n            if (key in memo) {\\n                async.nextTick(function () {\\n                    callback.apply(null, memo[key]);\\n                });\\n            }\\n            else if (key in queues) {\\n                queues[key].push(callback);\\n            }\\n            else {\\n                queues[key] = [callback];\\n                fn.apply(null, args.concat([function () {\\n                    memo[key] = arguments;\\n                    var q = queues[key];\\n                    delete queues[key];\\n                    for (var i = 0, l = q.length; i < l; i++) {\\n                      q[i].apply(null, arguments);\\n                    }\\n                }]));\\n            }\\n        };\\n        memoized.memo = memo;\\n        memoized.unmemoized = fn;\\n        return memoized;\\n    };\\n\\n    async.unmemoize = function (fn) {\\n      return function () {\\n        return (fn.unmemoized || fn).apply(null, arguments);\\n      };\\n    };\\n\\n    async.times = function (count, iterator, callback) {\\n        var counter = [];\\n        for (var i = 0; i < count; i++) {\\n            counter.push(i);\\n        }\\n        return async.map(counter, iterator, callback);\\n    };\\n\\n    async.timesSeries = function (count, iterator, callback) {\\n        var counter = [];\\n        for (var i = 0; i < count; i++) {\\n            counter.push(i);\\n        }\\n        return async.mapSeries(counter, iterator, callback);\\n    };\\n\\n    async.seq = function (/* functions... */) {\\n        var fns = arguments;\\n        return function () {\\n            var that = this;\\n            var args = Array.prototype.slice.call(arguments);\\n            var callback = args.pop();\\n            async.reduce(fns, args, function (newargs, fn, cb) {\\n                fn.apply(that, newargs.concat([function () {\\n                    var err = arguments[0];\\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\\n                    cb(err, nextargs);\\n                }]))\\n            },\\n            function (err, results) {\\n                callback.apply(that, [err].concat(results));\\n            });\\n        };\\n    };\\n\\n    async.compose = function (/* functions... */) {\\n      return async.seq.apply(null, Array.prototype.reverse.call(arguments));\\n    };\\n\\n    var _applyEach = function (eachfn, fns /*args...*/) {\\n        var go = function () {\\n            var that = this;\\n            var args = Array.prototype.slice.call(arguments);\\n            var callback = args.pop();\\n            return eachfn(fns, function (fn, cb) {\\n                fn.apply(that, args.concat([cb]));\\n            },\\n            callback);\\n        };\\n        if (arguments.length > 2) {\\n            var args = Array.prototype.slice.call(arguments, 2);\\n            return go.apply(this, args);\\n        }\\n        else {\\n            return go;\\n        }\\n    };\\n    async.applyEach = doParallel(_applyEach);\\n    async.applyEachSeries = doSeries(_applyEach);\\n\\n    async.forever = function (fn, callback) {\\n        function next(err) {\\n            if (err) {\\n                if (callback) {\\n                    return callback(err);\\n                }\\n                throw err;\\n            }\\n            fn(next);\\n        }\\n        next();\\n    };\\n\\n    // Node.js\\n    if (typeof module !== 'undefined' && module.exports) {\\n        module.exports = async;\\n    }\\n    // AMD / RequireJS\\n    else if (typeof define !== 'undefined' && define.amd) {\\n        define([], function () {\\n            return async;\\n        });\\n    }\\n    // included directly via <script> tag\\n    else {\\n        root.async = async;\\n    }\\n\\n}());\\n\",\"/* global __filename */\\r\\n/**\\r\\n * Strophe logger implementation. Logs from level WARN and above.\\r\\n */\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport { Strophe } from 'strophe.js';\\r\\n\\r\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * This is the last HTTP error status captured from Strophe debug logs.\\r\\n * The purpose of storing it is to distinguish between the network and\\r\\n * infrastructure reason for connection being dropped (see connectionHandler in\\r\\n * xmpp.js). The value will be cleared (-1) if the subsequent request succeeds\\r\\n * which means that the failure could be transient.\\r\\n *\\r\\n * FIXME in the latest Strophe (not released on npm) there is API to handle\\r\\n * particular HTTP errors, but there is no way to learn if the subsequent\\r\\n * request succeeded in order to tell if the error was one time incident or if\\r\\n * it was the reason for dropping the connection by Strophe (the connection is\\r\\n * dropped after 5 subsequent failures). Ideally Strophe should provide more\\r\\n * details about the reason on why the connection stopped.\\r\\n *\\r\\n * @type {number}\\r\\n */\\r\\nlet lastErrorStatus = -1;\\r\\n\\r\\n/**\\r\\n * A regular expression used to catch Strophe's log message indicating that the\\r\\n * last BOSH request was successful. When there is such message seen the\\r\\n * {@link lastErrorStatus} will be set back to '-1'.\\r\\n * @type {RegExp}\\r\\n */\\r\\nconst resetLastErrorStatusRegExpr = /request id \\\\d+.\\\\d+ got 200/;\\r\\n\\r\\n/**\\r\\n * A regular expression used to capture the current value of the BOSH request\\r\\n * error status (HTTP error code or '0' or something else).\\r\\n * @type {RegExp}\\r\\n */\\r\\nconst lastErrorStatusRegExpr\\r\\n    = /request errored, status: (\\\\d+), number of errors: \\\\d+/;\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nexport default function() {\\r\\n\\r\\n    Strophe.log = function(level, msg) {\\r\\n        // Our global handler reports uncaught errors to the stats which may\\r\\n        // interpret those as partial call failure.\\r\\n        // Strophe log entry about secondary request timeout does not mean that\\r\\n        // it's a final failure(the request will be restarted), so we lower it's\\r\\n        // level here to a warning.\\r\\n        logger.trace('Strophe', level, msg);\\r\\n        if (typeof msg === 'string'\\r\\n                && msg.indexOf('Request ') !== -1\\r\\n                && msg.indexOf('timed out (secondary), restarting') !== -1) {\\r\\n            // eslint-disable-next-line no-param-reassign\\r\\n            level = Strophe.LogLevel.WARN;\\r\\n        }\\r\\n\\r\\n        /* eslint-disable no-case-declarations */\\r\\n        switch (level) {\\r\\n        case Strophe.LogLevel.DEBUG:\\r\\n            // The log message which reports successful status is logged on\\r\\n            // Strophe's DEBUG level.\\r\\n            if (lastErrorStatus !== -1\\r\\n                    && resetLastErrorStatusRegExpr.test(msg)) {\\r\\n                logger.debug('Reset lastErrorStatus');\\r\\n                lastErrorStatus = -1;\\r\\n            }\\r\\n            break;\\r\\n        case Strophe.LogLevel.WARN:\\r\\n            logger.warn(`Strophe: ${msg}`);\\r\\n            const errStatusCapture = lastErrorStatusRegExpr.exec(msg);\\r\\n\\r\\n            if (errStatusCapture && errStatusCapture.length === 2) {\\r\\n                lastErrorStatus = parseInt(errStatusCapture[1], 10);\\r\\n                logger.debug(`lastErrorStatus set to: ${lastErrorStatus}`);\\r\\n            }\\r\\n            break;\\r\\n        case Strophe.LogLevel.ERROR:\\r\\n        case Strophe.LogLevel.FATAL:\\r\\n            // eslint-disable-next-line no-param-reassign\\r\\n            msg = `Strophe: ${msg}`;\\r\\n            GlobalOnErrorHandler.callErrorHandler(new Error(msg));\\r\\n            logger.error(msg);\\r\\n            break;\\r\\n        }\\r\\n\\r\\n        /* eslint-enable no-case-declarations */\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * Returns error status (HTTP error code) of the last BOSH request.\\r\\n     *\\r\\n     * @return {number} HTTP error code, '0' for unknown or \\\"god knows what\\\"\\r\\n     * (this is a hack).\\r\\n     */\\r\\n    Strophe.getLastErrorStatus = function() {\\r\\n        return lastErrorStatus;\\r\\n    };\\r\\n\\r\\n    Strophe.getStatusString = function(status) {\\r\\n        switch (status) {\\r\\n        case Strophe.Status.ERROR:\\r\\n            return 'ERROR';\\r\\n        case Strophe.Status.CONNECTING:\\r\\n            return 'CONNECTING';\\r\\n        case Strophe.Status.CONNFAIL:\\r\\n            return 'CONNFAIL';\\r\\n        case Strophe.Status.AUTHENTICATING:\\r\\n            return 'AUTHENTICATING';\\r\\n        case Strophe.Status.AUTHFAIL:\\r\\n            return 'AUTHFAIL';\\r\\n        case Strophe.Status.CONNECTED:\\r\\n            return 'CONNECTED';\\r\\n        case Strophe.Status.DISCONNECTED:\\r\\n            return 'DISCONNECTED';\\r\\n        case Strophe.Status.DISCONNECTING:\\r\\n            return 'DISCONNECTING';\\r\\n        case Strophe.Status.ATTACHED:\\r\\n            return 'ATTACHED';\\r\\n        default:\\r\\n            return 'unknown';\\r\\n        }\\r\\n    };\\r\\n}\\r\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\r\\nimport { $iq, Strophe } from 'strophe.js';\\r\\n\\r\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\r\\n\\r\\nimport ConnectionPlugin from './ConnectionPlugin';\\r\\n\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Ping every 10 sec\\r\\n */\\r\\nconst PING_INTERVAL = 10000;\\r\\n\\r\\n/**\\r\\n * Ping timeout error after 15 sec of waiting.\\r\\n */\\r\\nconst PING_TIMEOUT = 15000;\\r\\n\\r\\n/**\\r\\n * Will close the connection after 3 consecutive ping errors.\\r\\n */\\r\\nconst PING_THRESHOLD = 3;\\r\\n\\r\\n/**\\r\\n * The number of timestamps of send pings to keep.\\r\\n * The current value is 2 minutes.\\r\\n * @type {number} number of timestamps.\\r\\n */\\r\\nconst PING_TIMESTAMPS_TO_KEEP = 120000 / PING_INTERVAL;\\r\\n\\r\\n/**\\r\\n * XEP-0199 ping plugin.\\r\\n *\\r\\n * Registers \\\"urn:xmpp:ping\\\" namespace under Strophe.NS.PING.\\r\\n */\\r\\nclass PingConnectionPlugin extends ConnectionPlugin {\\r\\n    /**\\r\\n     * Contructs new object\\r\\n     * @param {XMPP} xmpp the xmpp module.\\r\\n     * @constructor\\r\\n     */\\r\\n    constructor(xmpp) {\\r\\n        super();\\r\\n        this.failedPings = 0;\\r\\n        this.xmpp = xmpp;\\r\\n        this.pingExecIntervals = new Array(PING_TIMESTAMPS_TO_KEEP);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes the plugin. Method called by Strophe.\\r\\n     * @param connection Strophe connection instance.\\r\\n     */\\r\\n    init(connection) {\\r\\n        super.init(connection);\\r\\n        Strophe.addNamespace('PING', 'urn:xmpp:ping');\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    /**\\r\\n     * Sends \\\"ping\\\" to given <tt>jid</tt>\\r\\n     * @param jid the JID to which ping request will be sent.\\r\\n     * @param success callback called on success.\\r\\n     * @param error callback called on error.\\r\\n     * @param timeout ms how long are we going to wait for the response. On\\r\\n     * timeout <tt>error<//t> callback is called with undefined error argument.\\r\\n     */\\r\\n    ping(jid, success, error, timeout) {\\r\\n        this._addPingExecutionTimestamp();\\r\\n\\r\\n        const iq = $iq({\\r\\n            type: 'get',\\r\\n            to: jid\\r\\n        });\\r\\n\\r\\n        iq.c('ping', { xmlns: Strophe.NS.PING });\\r\\n        this.connection.sendIQ(iq, success, error, timeout);\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Starts to send ping in given interval to specified remote JID.\\r\\n     * This plugin supports only one such task and <tt>stopInterval</tt>\\r\\n     * must be called before starting a new one.\\r\\n     * @param remoteJid remote JID to which ping requests will be sent to.\\r\\n     * @param interval task interval in ms.\\r\\n     */\\r\\n    startInterval(remoteJid, interval = PING_INTERVAL) {\\r\\n        if (this.intervalId) {\\r\\n            const errmsg = 'Ping task scheduled already';\\r\\n\\r\\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\r\\n            logger.error(errmsg);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n        this.intervalId = window.setInterval(() => {\\r\\n            this.ping(remoteJid, () => {\\r\\n                this.failedPings = 0;\\r\\n            }, error => {\\r\\n                this.failedPings += 1;\\r\\n                const errmsg = `Ping ${error ? 'error' : 'timeout'}`;\\r\\n\\r\\n                if (this.failedPings >= PING_THRESHOLD) {\\r\\n                    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\r\\n                    logger.error(errmsg, error);\\r\\n\\r\\n                    // FIXME it doesn't help to disconnect when 3rd PING\\r\\n                    // times out, it only stops Strophe from retrying.\\r\\n                    // Not really sure what's the right thing to do in that\\r\\n                    // situation, but just closing the connection makes no\\r\\n                    // sense.\\r\\n                    // self.connection.disconnect();\\r\\n                } else {\\r\\n                    logger.warn(errmsg, error);\\r\\n                }\\r\\n            }, PING_TIMEOUT);\\r\\n        }, interval);\\r\\n        logger.info(`XMPP pings will be sent every ${interval} ms`);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stops current \\\"ping\\\"  interval task.\\r\\n     */\\r\\n    stopInterval() {\\r\\n        if (this.intervalId) {\\r\\n            window.clearInterval(this.intervalId);\\r\\n            this.intervalId = null;\\r\\n            this.failedPings = 0;\\r\\n            logger.info('Ping interval cleared');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds the current time to the array of send ping timestamps.\\r\\n     * @private\\r\\n     */\\r\\n    _addPingExecutionTimestamp() {\\r\\n        this.pingExecIntervals.push(new Date().getTime());\\r\\n\\r\\n        // keep array length to PING_TIMESTAMPS_TO_KEEP\\r\\n        if (this.pingExecIntervals.length > PING_TIMESTAMPS_TO_KEEP) {\\r\\n            this.pingExecIntervals.shift();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the maximum time between the recent sent pings, if there is a\\r\\n     * big value it means the computer was inactive for some time(suspended).\\r\\n     * Checks the maximum gap between sending pings, considering and the\\r\\n     * current time. Trying to detect computer inactivity (sleep).\\r\\n     *\\r\\n     * @returns {int} the time ping was suspended, if it was not 0 is returned.\\r\\n     */\\r\\n    getPingSuspendTime() {\\r\\n        const pingIntervals = this.pingExecIntervals.slice();\\r\\n\\r\\n        // we need current time, as if ping was sent now\\r\\n        // if computer sleeps we will get correct interval after next\\r\\n        // scheduled ping, bet we sometimes need that interval before waiting\\r\\n        // for the next ping, on closing the connection on error.\\r\\n        pingIntervals.push(new Date().getTime());\\r\\n\\r\\n        let maxInterval = 0;\\r\\n        let previousTS = pingIntervals[0];\\r\\n\\r\\n        pingIntervals.forEach(e => {\\r\\n            const currentInterval = e - previousTS;\\r\\n\\r\\n            if (currentInterval > maxInterval) {\\r\\n                maxInterval = currentInterval;\\r\\n            }\\r\\n\\r\\n            previousTS = e;\\r\\n        });\\r\\n\\r\\n        // remove the interval between the ping sent\\r\\n        // this way in normal execution there is no suspend and the return\\r\\n        // will be 0 or close to 0.\\r\\n        maxInterval -= PING_INTERVAL;\\r\\n\\r\\n        // make sure we do not return less than 0\\r\\n        return Math.max(maxInterval, 0);\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param xmpp\\r\\n */\\r\\nexport default function(xmpp) {\\r\\n    Strophe.addConnectionPlugin('ping', new PingConnectionPlugin(xmpp));\\r\\n}\\r\\n\",\"/* global $ */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport { $iq, Strophe } from 'strophe.js';\\r\\n\\r\\nimport ConnectionPlugin from './ConnectionPlugin';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\nconst RAYO_XMLNS = 'urn:xmpp:rayo:1';\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nclass RayoConnectionPlugin extends ConnectionPlugin {\\r\\n    /**\\r\\n     *\\r\\n     * @param connection\\r\\n     */\\r\\n    init(connection) {\\r\\n        super.init(connection);\\r\\n\\r\\n        this.connection.addHandler(\\r\\n            this.onRayo.bind(this), RAYO_XMLNS, 'iq', 'set', null, null);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param iq\\r\\n     */\\r\\n    onRayo(iq) {\\r\\n        logger.info('Rayo IQ', iq);\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param to\\r\\n     * @param from\\r\\n     * @param roomName\\r\\n     * @param roomPass\\r\\n     * @param focusMucJid\\r\\n     */\\r\\n    dial(to, from, roomName, roomPass, focusMucJid) {\\r\\n        return new Promise((resolve, reject) => {\\r\\n            if (!focusMucJid) {\\r\\n                reject(new Error('Internal error!'));\\r\\n\\r\\n                return;\\r\\n            }\\r\\n            const req = $iq({\\r\\n                type: 'set',\\r\\n                to: focusMucJid\\r\\n            });\\r\\n\\r\\n            req.c('dial', {\\r\\n                xmlns: RAYO_XMLNS,\\r\\n                to,\\r\\n                from\\r\\n            });\\r\\n            req.c('header', {\\r\\n                name: 'JvbRoomName',\\r\\n                value: roomName\\r\\n            }).up();\\r\\n\\r\\n            if (roomPass && roomPass.length) {\\r\\n                req.c('header', {\\r\\n                    name: 'JvbRoomPassword',\\r\\n                    value: roomPass\\r\\n                }).up();\\r\\n            }\\r\\n\\r\\n            this.connection.sendIQ(\\r\\n                req,\\r\\n                result => {\\r\\n                    logger.info('Dial result ', result);\\r\\n\\r\\n                    // eslint-disable-next-line newline-per-chained-call\\r\\n                    const resource = $(result).find('ref').attr('uri');\\r\\n\\r\\n                    this.callResource = resource.substr('xmpp:'.length);\\r\\n                    logger.info(`Received call resource: ${this.callResource}`);\\r\\n                    resolve();\\r\\n                },\\r\\n                error => {\\r\\n                    logger.info('Dial error ', error);\\r\\n                    reject(error);\\r\\n                });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    hangup() {\\r\\n        return new Promise((resolve, reject) => {\\r\\n            if (!this.callResource) {\\r\\n                reject(new Error('No call in progress'));\\r\\n                logger.warn('No call in progress');\\r\\n\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            const req = $iq({\\r\\n                type: 'set',\\r\\n                to: this.callResource\\r\\n            });\\r\\n\\r\\n            req.c('hangup', {\\r\\n                xmlns: RAYO_XMLNS\\r\\n            });\\r\\n\\r\\n            this.connection.sendIQ(req, result => {\\r\\n                logger.info('Hangup result ', result);\\r\\n                this.callResource = null;\\r\\n                resolve();\\r\\n            }, error => {\\r\\n                logger.info('Hangup error ', error);\\r\\n                this.callResource = null;\\r\\n                reject(new Error('Hangup error '));\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nexport default function() {\\r\\n    Strophe.addConnectionPlugin('rayo', new RayoConnectionPlugin());\\r\\n}\\r\\n\",\"import { Strophe } from 'strophe.js';\\r\\n\\r\\nimport ConnectionPlugin from './ConnectionPlugin';\\r\\n\\r\\n/**\\r\\n *  Logs raw stanzas and makes them available for download as JSON\\r\\n */\\r\\nclass StropheLogger extends ConnectionPlugin {\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    constructor() {\\r\\n        super();\\r\\n        this.log = [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param connection\\r\\n     */\\r\\n    init(connection) {\\r\\n        super.init(connection);\\r\\n        this.connection.rawInput = this.logIncoming.bind(this);\\r\\n        this.connection.rawOutput = this.logOutgoing.bind(this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param stanza\\r\\n     */\\r\\n    logIncoming(stanza) {\\r\\n        this.log.push([ new Date().getTime(), 'incoming', stanza ]);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param stanza\\r\\n     */\\r\\n    logOutgoing(stanza) {\\r\\n        this.log.push([ new Date().getTime(), 'outgoing', stanza ]);\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n */\\r\\nexport default function() {\\r\\n    Strophe.addConnectionPlugin('logger', new StropheLogger());\\r\\n}\\r\\n\",\"/**\\r\\n * Class attaches to Strophe BOSH connection and tracks the time of last successful request.\\r\\n * It does that by overriding {@code nextValidRid} method and tracking how the RID value changes.\\r\\n * A request was successful if the number has increased by 1 since the last time the method was called.\\r\\n */\\r\\nexport default class LastRequestTracker {\\r\\n    /**\\r\\n     * Initializes new instance.\\r\\n     */\\r\\n    constructor() {\\r\\n        this._nextValidRid = null;\\r\\n        this._lastSuccess = null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Starts tracking requests on the given connection.\\r\\n     *\\r\\n     * @param {Object} stropheConnection - Strophe connection instance.\\r\\n     */\\r\\n    startTracking(stropheConnection) {\\r\\n        stropheConnection.nextValidRid = rid => {\\r\\n            // Just before connect and on disconnect RID will get assigned a new random value.\\r\\n            // A request was successful only when the value got increased exactly by 1.\\r\\n            if (this._nextValidRid === rid - 1) {\\r\\n                this._lastSuccess = new Date().getTime();\\r\\n            }\\r\\n            this._nextValidRid = rid;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns how many milliseconds have passed since the last successful BOSH request.\\r\\n     *\\r\\n     * @returns {number|null}\\r\\n     */\\r\\n    getTimeSinceLastSuccess() {\\r\\n        return this._lastSuccess\\r\\n            ? new Date().getTime() - this._lastSuccess\\r\\n            : null;\\r\\n    }\\r\\n}\\r\\n\",\"/* global $ */\\r\\n\\r\\nimport { b64_sha1, Strophe } from 'strophe.js'; // eslint-disable-line camelcase\\r\\n\\r\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\r\\nimport Listenable from '../util/Listenable';\\r\\n\\r\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * The property\\r\\n */\\r\\nconst IDENTITY_PROPERTIES = [ 'category', 'type', 'lang', 'name' ];\\r\\nconst IDENTITY_PROPERTIES_FOR_COMPARE = [ 'category', 'type', 'lang' ];\\r\\nconst HASH = 'sha-1';\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param a\\r\\n * @param b\\r\\n */\\r\\nfunction compareIdentities(a, b) {\\r\\n    let res = 0;\\r\\n\\r\\n    IDENTITY_PROPERTIES_FOR_COMPARE.some(key =>\\r\\n        (res = ((a[key] > b[key]) && 1) || ((a[key] < b[key]) && -1)) !== 0\\r\\n    );\\r\\n\\r\\n    return res;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Produces a sha-1 from provided identity and features values.\\r\\n *\\r\\n * @param {Array<Object>} identities - The identity objects.\\r\\n * @param {Array<string>} features - The features.\\r\\n * @returns {string}\\r\\n */\\r\\nfunction generateSha(identities, features) {\\r\\n    const sortedIdentities = identities.sort(compareIdentities).reduce(\\r\\n        (accumulatedValue, identity) => `${\\r\\n            IDENTITY_PROPERTIES.reduce(\\r\\n                (tmp, key, idx) =>\\r\\n                    tmp\\r\\n                        + (idx === 0 ? '' : '/')\\r\\n                        + (identity[key] ? identity[key] : ''),\\r\\n                '')\\r\\n        }<`, '');\\r\\n    const sortedFeatures = features.sort().reduce(\\r\\n        (tmp, feature) => `${tmp + feature}<`, '');\\r\\n\\r\\n    return b64_sha1(sortedIdentities + sortedFeatures);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Implements xep-0115 ( http://xmpp.org/extensions/xep-0115.html )\\r\\n */\\r\\nexport default class Caps extends Listenable {\\r\\n    /**\\r\\n     * Constructs new Caps instance.\\r\\n     * @param {Strophe.Connection} connection the strophe connection object\\r\\n     * @param {String} node the value of the node attribute of the \\\"c\\\" xml node\\r\\n     * that will be sent to the other participants\\r\\n     */\\r\\n    constructor(connection = {}, node = 'http://jitsi.org/jitsimeet') {\\r\\n        super();\\r\\n        this.node = node;\\r\\n        this.disco = connection.disco;\\r\\n        if (!this.disco) {\\r\\n            throw new Error(\\r\\n                'Missing strophe-plugins '\\r\\n                + '(disco plugin is required)!');\\r\\n        }\\r\\n\\r\\n        this.versionToCapabilities = Object.create(null);\\r\\n        this.jidToVersion = Object.create(null);\\r\\n        this.version = '';\\r\\n        this.rooms = new Set();\\r\\n\\r\\n        const emuc = connection.emuc;\\r\\n\\r\\n        emuc.addListener(XMPPEvents.EMUC_ROOM_ADDED,\\r\\n            room => this._addChatRoom(room));\\r\\n        emuc.addListener(XMPPEvents.EMUC_ROOM_REMOVED,\\r\\n            room => this._removeChatRoom(room));\\r\\n        Object.keys(emuc.rooms).forEach(jid => {\\r\\n            this._addChatRoom(emuc.rooms[jid]);\\r\\n        });\\r\\n\\r\\n        Strophe.addNamespace('CAPS', 'http://jabber.org/protocol/caps');\\r\\n        this.disco.addFeature(Strophe.NS.CAPS);\\r\\n        connection.addHandler(this._handleCaps.bind(this), Strophe.NS.CAPS);\\r\\n\\r\\n        this._onMucMemberLeft = this._removeJidToVersionEntry.bind(this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds new feature to the list of supported features for the local\\r\\n     * participant\\r\\n     * @param {String} feature the name of the feature.\\r\\n     * @param {boolean} submit if true - new presence with updated \\\"c\\\" node\\r\\n     * will be sent.\\r\\n     */\\r\\n    addFeature(feature, submit = false) {\\r\\n        this.disco.addFeature(feature);\\r\\n        this._generateVersion();\\r\\n        if (submit) {\\r\\n            this.submit();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes a feature from the list of supported features for the local\\r\\n     * participant\\r\\n     * @param {String} feature the name of the feature.\\r\\n     * @param {boolean} submit if true - new presence with updated \\\"c\\\" node\\r\\n     * will be sent.\\r\\n     */\\r\\n    removeFeature(feature, submit = false) {\\r\\n        this.disco.removeFeature(feature);\\r\\n        this._generateVersion();\\r\\n        if (submit) {\\r\\n            this.submit();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends new presence stanza for every room from the list of rooms.\\r\\n     */\\r\\n    submit() {\\r\\n        this.rooms.forEach(room => room.sendPresence());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns a set with the features for a participant.\\r\\n     * @param {String} jid the jid of the participant\\r\\n     * @param {int} timeout the timeout in ms for reply from the participant.\\r\\n     * @returns {Promise<Set<String>, Error>}\\r\\n     */\\r\\n    getFeatures(jid, timeout = 5000) {\\r\\n        const user\\r\\n            = jid in this.jidToVersion ? this.jidToVersion[jid] : null;\\r\\n\\r\\n        if (!user || !(user.version in this.versionToCapabilities)) {\\r\\n            const node = user ? `${user.node}#${user.version}` : null;\\r\\n\\r\\n            return this._getDiscoInfo(jid, node, timeout)\\r\\n                .then(({ features, identities }) => {\\r\\n                    if (user) {\\r\\n                        const sha = generateSha(\\r\\n                            Array.from(identities),\\r\\n                            Array.from(features)\\r\\n                        );\\r\\n                        const receivedNode = `${user.node}#${sha}`;\\r\\n\\r\\n                        if (receivedNode === node) {\\r\\n                            this.versionToCapabilities[receivedNode] = features;\\r\\n\\r\\n                            return features;\\r\\n                        }\\r\\n\\r\\n                        // Check once if it has been cached asynchronously.\\r\\n                        if (this.versionToCapabilities[receivedNode]) {\\r\\n                            return this.versionToCapabilities[receivedNode];\\r\\n                        }\\r\\n\\r\\n                        logger.error(`Expected node ${node} but received ${\\r\\n                            receivedNode}`);\\r\\n\\r\\n                        return Promise.reject('Feature version mismatch');\\r\\n                    }\\r\\n                });\\r\\n        }\\r\\n\\r\\n        return Promise.resolve(this.versionToCapabilities[user.version]);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns a set with the features for a host.\\r\\n     * @param {String} jid the jid of the host\\r\\n     * @param {int} timeout the timeout in ms for reply from the host.\\r\\n     * @returns {Promise<Set<String>, Error>}\\r\\n     */\\r\\n    getFeaturesAndIdentities(jid, timeout = 5000) {\\r\\n        return this._getDiscoInfo(jid, null, timeout);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns a set with the features and identities for a host.\\r\\n     * @param {String} jid the jid of the host\\r\\n     * @param {String|null} node the node to query\\r\\n     * @param {int} timeout the timeout in ms for reply from the host.\\r\\n     * @returns {Promise<Object>}\\r\\n     * @private\\r\\n     */\\r\\n    _getDiscoInfo(jid, node, timeout) {\\r\\n        return new Promise((resolve, reject) =>\\r\\n            this.disco.info(jid, node, response => {\\r\\n                const features = new Set();\\r\\n                const identities = new Set();\\r\\n\\r\\n                $(response)\\r\\n                    .find('>query>feature')\\r\\n                    .each(\\r\\n                        (_, el) => features.add(el.getAttribute('var')));\\r\\n                $(response)\\r\\n                    .find('>query>identity')\\r\\n                    .each(\\r\\n                        (_, el) => identities.add({\\r\\n                            type: el.getAttribute('type'),\\r\\n                            name: el.getAttribute('name'),\\r\\n                            category: el.getAttribute('category')\\r\\n                        }));\\r\\n                resolve({\\r\\n                    features,\\r\\n                    identities });\\r\\n            }, reject, timeout)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds ChatRoom instance to the list of rooms. Adds listeners to the room\\r\\n     * and adds \\\"c\\\" element to the presences of the room.\\r\\n     * @param {ChatRoom} room the room.\\r\\n     */\\r\\n    _addChatRoom(room) {\\r\\n        this.rooms.add(room);\\r\\n        room.addListener(XMPPEvents.MUC_MEMBER_LEFT, this._onMucMemberLeft);\\r\\n        this._fixChatRoomPresenceMap(room);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes ChatRoom instance from the list of rooms. Removes listeners\\r\\n     * added from the Caps class.\\r\\n     * @param {ChatRoom} room the room.\\r\\n     */\\r\\n    _removeChatRoom(room) {\\r\\n        this.rooms.delete(room);\\r\\n        room.removeListener(XMPPEvents.MUC_MEMBER_LEFT, this._onMucMemberLeft);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates/updates the \\\"c\\\" xml node into the presence of the passed room.\\r\\n     * @param {ChatRoom} room the room.\\r\\n     */\\r\\n    _fixChatRoomPresenceMap(room) {\\r\\n        room.addToPresence('c', {\\r\\n            attributes: {\\r\\n                xmlns: Strophe.NS.CAPS,\\r\\n                hash: HASH,\\r\\n                node: this.node,\\r\\n                ver: this.version\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles this.version changes.\\r\\n     */\\r\\n    _notifyVersionChanged() {\\r\\n        // update the version for all rooms\\r\\n        this.rooms.forEach(room => this._fixChatRoomPresenceMap(room));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Generates the value for the \\\"ver\\\" attribute.\\r\\n     */\\r\\n    _generateVersion() {\\r\\n        this.version\\r\\n            = generateSha(this.disco._identities, this.disco._features);\\r\\n\\r\\n        this._notifyVersionChanged();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Parses the \\\"c\\\" xml node from presence.\\r\\n     * @param {DOMElement} stanza the presence packet\\r\\n     */\\r\\n    _handleCaps(stanza) {\\r\\n        const from = stanza.getAttribute('from');\\r\\n        const caps = stanza.querySelector('c');\\r\\n        const version = caps.getAttribute('ver');\\r\\n        const node = caps.getAttribute('node');\\r\\n        const oldVersion = this.jidToVersion[from];\\r\\n\\r\\n        this.jidToVersion[from] = { version,\\r\\n            node };\\r\\n        if (oldVersion && oldVersion.version !== version) {\\r\\n            this.eventEmitter.emit(XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\\r\\n                from);\\r\\n        }\\r\\n\\r\\n        // return true to not remove the handler from Strophe\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes entry from this.jidToVersion map.\\r\\n     * @param {String} jid the jid to be removed.\\r\\n     */\\r\\n    _removeJidToVersionEntry(jid) {\\r\\n        if (jid in this.jidToVersion) {\\r\\n            delete this.jidToVersion[jid];\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"const logger = require('jitsi-meet-logger').getLogger(__filename);\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param localAudio\\r\\n * @param peerConnection\\r\\n */\\r\\nfunction JitsiDTMFManager(localAudio, peerConnection) {\\r\\n    const audioTrack = localAudio.getTrack();\\r\\n\\r\\n    if (!audioTrack) {\\r\\n        throw new Error('Failed to initialize DTMFSender: no audio track.');\\r\\n    }\\r\\n    this.dtmfSender\\r\\n        = peerConnection.peerconnection.createDTMFSender(audioTrack);\\r\\n    logger.debug('Initialized DTMFSender');\\r\\n}\\r\\n\\r\\nJitsiDTMFManager.prototype.sendTones = function(tones, duration, pause) {\\r\\n    this.dtmfSender.insertDTMF(tones, duration || 200, pause || 200);\\r\\n};\\r\\n\\r\\nmodule.exports = JitsiDTMFManager;\\r\\n\\r\\n\",\"import * as JitsiConferenceEvents from '../JitsiConferenceEvents';\\r\\nimport RTCEvents from '../service/RTC/RTCEvents';\\r\\n\\r\\n/**\\r\\n * The value which we use to say, every sound over this threshold\\r\\n * is talking on the mic.\\r\\n * @type {number}\\r\\n */\\r\\nconst SPEECH_DETECT_THRESHOLD = 0.6;\\r\\n\\r\\n/**\\r\\n * The <tt>P2PDominantSpeakerDetection</tt> is activated only when p2p is\\r\\n * currently used.\\r\\n * Listens for changes in the audio level changes of the local p2p audio track\\r\\n * or remote p2p one and fires dominant speaker events to be able to use\\r\\n * features depending on those events (speaker stats), to make them work without\\r\\n * the video bridge.\\r\\n */\\r\\nexport default class P2PDominantSpeakerDetection {\\r\\n    /**\\r\\n     * Creates P2PDominantSpeakerDetection\\r\\n     * @param conference the JitsiConference instance that created us.\\r\\n     * @constructor\\r\\n     */\\r\\n    constructor(conference) {\\r\\n        this.conference = conference;\\r\\n\\r\\n        conference.addEventListener(\\r\\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\\r\\n            this._audioLevel.bind(this));\\r\\n\\r\\n        this.myUserID = this.conference.myUserId();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Receives audio level events for all streams in the conference.\\r\\n     *\\r\\n     * @param {String} id - The participant id\\r\\n     * @param {number} audioLevel - The audio level.\\r\\n     */\\r\\n    _audioLevel(id, audioLevel) {\\r\\n\\r\\n        // we do not process if p2p is not active\\r\\n        // or audio level is under certain threshold\\r\\n        // or if the audio level is for local audio track which is muted\\r\\n        if (!this.conference.isP2PActive()\\r\\n            || audioLevel <= SPEECH_DETECT_THRESHOLD\\r\\n            || (id === this.myUserID\\r\\n                    && this.conference.getLocalAudioTrack().isMuted())) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.conference.rtc.eventEmitter.emit(\\r\\n            RTCEvents.DOMINANT_SPEAKER_CHANGED,\\r\\n            id);\\r\\n    }\\r\\n}\\r\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\r\\n\\r\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\r\\nimport { createBridgeChannelClosedEvent } from '../../service/statistics/AnalyticsEvents';\\r\\nimport Statistics from '../statistics/statistics';\\r\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Handles a WebRTC RTCPeerConnection or a WebSocket instance to communicate\\r\\n * with the videobridge.\\r\\n */\\r\\nexport default class BridgeChannel {\\r\\n    /**\\r\\n     * Binds \\\"ondatachannel\\\" event listener on the given RTCPeerConnection\\r\\n     * instance, or creates a WebSocket connection with the videobridge.\\r\\n     * At least one of both, peerconnection or wsUrl parameters, must be\\r\\n     * given.\\r\\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\\r\\n     * instance.\\r\\n     * @param {string} [wsUrl] WebSocket URL.\\r\\n     * @param {EventEmitter} eventEmitter EventEmitter instance.\\r\\n     */\\r\\n    constructor(peerconnection, wsUrl, emitter) {\\r\\n        if (!peerconnection && !wsUrl) {\\r\\n            throw new TypeError(\\r\\n                'At least peerconnection or wsUrl must be given');\\r\\n        } else if (peerconnection && wsUrl) {\\r\\n            throw new TypeError(\\r\\n                'Just one of peerconnection or wsUrl must be given');\\r\\n        }\\r\\n\\r\\n        if (peerconnection) {\\r\\n            logger.debug('constructor() with peerconnection');\\r\\n        } else {\\r\\n            logger.debug(`constructor() with wsUrl:\\\"${wsUrl}\\\"`);\\r\\n        }\\r\\n\\r\\n        // The underlying WebRTC RTCDataChannel or WebSocket instance.\\r\\n        // @type {RTCDataChannel|WebSocket}\\r\\n        this._channel = null;\\r\\n\\r\\n        // @type {EventEmitter}\\r\\n        this._eventEmitter = emitter;\\r\\n\\r\\n        // Whether a RTCDataChannel or WebSocket is internally used.\\r\\n        // @type {string} \\\"datachannel\\\" / \\\"websocket\\\"\\r\\n        this._mode = null;\\r\\n\\r\\n        // Indicates whether the connection retries are enabled or not.\\r\\n        this._areRetriesEnabled = false;\\r\\n\\r\\n        // Indicates whether the connection was closed from the client or not.\\r\\n        this._closedFromClient = false;\\r\\n\\r\\n        // If a RTCPeerConnection is given, listen for new RTCDataChannel\\r\\n        // event.\\r\\n        if (peerconnection) {\\r\\n            const datachannel\\r\\n                = peerconnection.createDataChannel(\\r\\n                    'JVB data channel', {\\r\\n                        protocol: 'http://jitsi.org/protocols/colibri'\\r\\n                    });\\r\\n\\r\\n            // Handle the RTCDataChannel.\\r\\n            this._handleChannel(datachannel);\\r\\n            this._mode = 'datachannel';\\r\\n\\r\\n        // Otherwise create a WebSocket connection.\\r\\n        } else if (wsUrl) {\\r\\n            this._areRetriesEnabled = true;\\r\\n            this._wsUrl = wsUrl;\\r\\n            this._initWebSocket();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes the web socket channel.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _initWebSocket() {\\r\\n        // Create a WebSocket instance.\\r\\n        const ws = new WebSocket(this._wsUrl);\\r\\n\\r\\n        // Handle the WebSocket.\\r\\n        this._handleChannel(ws);\\r\\n        this._mode = 'websocket';\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Starts the websocket connection retries.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _startConnectionRetries() {\\r\\n        let timeoutS = 1;\\r\\n\\r\\n        const reload = () => {\\r\\n            if (this.isOpen()) {\\r\\n                return;\\r\\n            }\\r\\n            this._initWebSocket(this._wsUrl);\\r\\n            timeoutS = Math.min(timeoutS * 2, 60);\\r\\n            this._retryTimeout = setTimeout(reload, timeoutS * 1000);\\r\\n        };\\r\\n\\r\\n        this._retryTimeout = setTimeout(reload, timeoutS * 1000);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stops the websocket connection retries.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _stopConnectionRetries() {\\r\\n        if (this._retryTimeout) {\\r\\n            clearTimeout(this._retryTimeout);\\r\\n            this._retryTimeout = undefined;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Retries to establish the websocket connection after the connection was closed by the server.\\r\\n     *\\r\\n     * @param {CloseEvent} closeEvent - The close event that triggered the retries.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _retryWebSocketConnection(closeEvent) {\\r\\n        if (!this._areRetriesEnabled) {\\r\\n            return;\\r\\n        }\\r\\n        const { code, reason } = closeEvent;\\r\\n\\r\\n        Statistics.sendAnalytics(createBridgeChannelClosedEvent(code, reason));\\r\\n        this._areRetriesEnabled = false;\\r\\n        this._eventEmitter.once(RTCEvents.DATA_CHANNEL_OPEN, () => {\\r\\n            this._stopConnectionRetries();\\r\\n            this._areRetriesEnabled = true;\\r\\n        });\\r\\n        this._startConnectionRetries();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The channel mode.\\r\\n     * @return {string} \\\"datachannel\\\" or \\\"websocket\\\" (or null if not yet set).\\r\\n     */\\r\\n    get mode() {\\r\\n        return this._mode;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Closes the currently opened channel.\\r\\n     */\\r\\n    close() {\\r\\n        this._closedFromClient = true;\\r\\n        this._stopConnectionRetries();\\r\\n        this._areRetriesEnabled = false;\\r\\n        if (this._channel) {\\r\\n            try {\\r\\n                this._channel.close();\\r\\n            } catch (error) {} // eslint-disable-line no-empty\\r\\n\\r\\n            this._channel = null;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Whether there is an underlying RTCDataChannel or WebSocket and it's\\r\\n     * open.\\r\\n     * @return {boolean}\\r\\n     */\\r\\n    isOpen() {\\r\\n        return this._channel && (this._channel.readyState === 'open'\\r\\n            || this._channel.readyState === WebSocket.OPEN);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends message via the channel.\\r\\n     * @param {string} to The id of the endpoint that should receive the\\r\\n     * message. If \\\"\\\" the message will be sent to all participants.\\r\\n     * @param  {object} payload The payload of the message.\\r\\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\\r\\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\\r\\n     * or from WebSocket#send or Error with \\\"No opened channel\\\" message.\\r\\n     */\\r\\n    sendMessage(to, payload) {\\r\\n        this._send({\\r\\n            colibriClass: 'EndpointMessage',\\r\\n            msgPayload: payload,\\r\\n            to\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends a \\\"lastN value changed\\\" message via the channel.\\r\\n     * @param {number} value The new value for lastN. -1 means unlimited.\\r\\n     */\\r\\n    sendSetLastNMessage(value) {\\r\\n        const jsonObject = {\\r\\n            colibriClass: 'LastNChangedEvent',\\r\\n            lastN: value\\r\\n        };\\r\\n\\r\\n        this._send(jsonObject);\\r\\n        logger.log(`Channel lastN set to: ${value}`);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends a \\\"pinned endpoint changed\\\" message via the channel.\\r\\n     * @param {string} endpointId The id of the pinned endpoint.\\r\\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\\r\\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\\r\\n     * or from WebSocket#send or Error with \\\"No opened channel\\\" message.\\r\\n     */\\r\\n    sendPinnedEndpointMessage(endpointId) {\\r\\n        logger.log(\\r\\n            'sending pinned changed notification to the bridge for endpoint ',\\r\\n            endpointId);\\r\\n\\r\\n        this._send({\\r\\n            colibriClass: 'PinnedEndpointChangedEvent',\\r\\n            pinnedEndpoint: endpointId || null\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends a \\\"selected endpoints changed\\\" message via the channel.\\r\\n     *\\r\\n     * @param {Array<string>} endpointIds - The ids of the selected endpoints.\\r\\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\\r\\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\\r\\n     * or from WebSocket#send or Error with \\\"No opened channel\\\" message.\\r\\n     */\\r\\n    sendSelectedEndpointsMessage(endpointIds) {\\r\\n        logger.log(\\r\\n            'sending selected changed notification to the bridge for endpoints',\\r\\n            endpointIds);\\r\\n\\r\\n        this._send({\\r\\n            colibriClass: 'SelectedEndpointsChangedEvent',\\r\\n            selectedEndpoints: endpointIds\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends a \\\"receiver video constraint\\\" message via the channel.\\r\\n     * @param {Number} maxFrameHeightPixels the maximum frame height,\\r\\n     * in pixels, this receiver is willing to receive\\r\\n     */\\r\\n    sendReceiverVideoConstraintMessage(maxFrameHeightPixels) {\\r\\n        logger.log('sending a ReceiverVideoConstraint message with '\\r\\n            + `a maxFrameHeight of ${maxFrameHeightPixels} pixels`);\\r\\n        this._send({\\r\\n            colibriClass: 'ReceiverVideoConstraint',\\r\\n            maxFrameHeight: maxFrameHeightPixels\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set events on the given RTCDataChannel or WebSocket instance.\\r\\n     */\\r\\n    _handleChannel(channel) {\\r\\n        const emitter = this._eventEmitter;\\r\\n\\r\\n        channel.onopen = () => {\\r\\n            logger.info(`${this._mode} channel opened`);\\r\\n\\r\\n            // Code sample for sending string and/or binary data.\\r\\n            // Sends string message to the bridge:\\r\\n            //     channel.send(\\\"Hello bridge!\\\");\\r\\n            // Sends 12 bytes binary message to the bridge:\\r\\n            //     channel.send(new ArrayBuffer(12));\\r\\n\\r\\n            emitter.emit(RTCEvents.DATA_CHANNEL_OPEN);\\r\\n        };\\r\\n\\r\\n        channel.onerror = event => {\\r\\n            // WS error events contain no information about the failure (this is available in the onclose event) and\\r\\n            // the event references the WS object itself, which causes hangs on mobile.\\r\\n            if (this._mode !== 'websocket') {\\r\\n                logger.error(`Channel error: ${event.message}`);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        channel.onmessage = ({ data }) => {\\r\\n            // JSON object.\\r\\n            let obj;\\r\\n\\r\\n            try {\\r\\n                obj = JSON.parse(data);\\r\\n            } catch (error) {\\r\\n                GlobalOnErrorHandler.callErrorHandler(error);\\r\\n                logger.error(\\r\\n                    'Failed to parse channel message as JSON: ',\\r\\n                    data, error);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            const colibriClass = obj.colibriClass;\\r\\n\\r\\n            switch (colibriClass) {\\r\\n            case 'DominantSpeakerEndpointChangeEvent': {\\r\\n                // Endpoint ID from the Videobridge.\\r\\n                const dominantSpeakerEndpoint = obj.dominantSpeakerEndpoint;\\r\\n\\r\\n                logger.info(\\r\\n                    'Channel new dominant speaker event: ',\\r\\n                    dominantSpeakerEndpoint);\\r\\n                emitter.emit(\\r\\n                    RTCEvents.DOMINANT_SPEAKER_CHANGED,\\r\\n                    dominantSpeakerEndpoint);\\r\\n                break;\\r\\n            }\\r\\n            case 'EndpointConnectivityStatusChangeEvent': {\\r\\n                const endpoint = obj.endpoint;\\r\\n                const isActive = obj.active === 'true';\\r\\n\\r\\n                logger.info(\\r\\n                    `Endpoint connection status changed: ${endpoint} active ? ${\\r\\n                        isActive}`);\\r\\n                emitter.emit(RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\\r\\n                    endpoint, isActive);\\r\\n\\r\\n                break;\\r\\n            }\\r\\n            case 'EndpointMessage': {\\r\\n                emitter.emit(\\r\\n                    RTCEvents.ENDPOINT_MESSAGE_RECEIVED, obj.from,\\r\\n                    obj.msgPayload);\\r\\n\\r\\n                break;\\r\\n            }\\r\\n            case 'LastNEndpointsChangeEvent': {\\r\\n                // The new/latest list of last-n endpoint IDs.\\r\\n                const lastNEndpoints = obj.lastNEndpoints;\\r\\n\\r\\n                logger.info('Channel new last-n event: ',\\r\\n                    lastNEndpoints, obj);\\r\\n                emitter.emit(RTCEvents.LASTN_ENDPOINT_CHANGED,\\r\\n                    lastNEndpoints, obj);\\r\\n\\r\\n                break;\\r\\n            }\\r\\n            case 'SelectedUpdateEvent': {\\r\\n                const isSelected = obj.isSelected;\\r\\n\\r\\n                logger.info(`SelectedUpdateEvent isSelected? ${isSelected}`);\\r\\n                emitter.emit(RTCEvents.IS_SELECTED_CHANGED, isSelected);\\r\\n                break;\\r\\n            }\\r\\n            default: {\\r\\n                logger.debug('Channel JSON-formatted message: ', obj);\\r\\n\\r\\n                // The received message appears to be appropriately formatted\\r\\n                // (i.e. is a JSON object which assigns a value to the\\r\\n                // mandatory property colibriClass) so don't just swallow it,\\r\\n                // expose it to public consumption.\\r\\n                emitter.emit(`rtc.datachannel.${colibriClass}`, obj);\\r\\n            }\\r\\n            }\\r\\n        };\\r\\n\\r\\n        channel.onclose = event => {\\r\\n            logger.info(`Channel closed by ${this._closedFromClient ? 'client' : 'server'}`);\\r\\n\\r\\n            if (this._mode === 'websocket') {\\r\\n                if (!this._closedFromClient) {\\r\\n                    logger.error(`Channel closed: ${event.code} ${event.reason}`);\\r\\n                    this._retryWebSocketConnection(event);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            // Remove the channel.\\r\\n            this._channel = null;\\r\\n        };\\r\\n\\r\\n        // Store the channel.\\r\\n        this._channel = channel;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends passed object via the channel.\\r\\n     * @param {object} jsonObject The object that will be sent.\\r\\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\\r\\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\\r\\n     * or from WebSocket#send or Error with \\\"No opened channel\\\" message.\\r\\n     */\\r\\n    _send(jsonObject) {\\r\\n        const channel = this._channel;\\r\\n\\r\\n        if (!this.isOpen()) {\\r\\n            logger.error('Bridge Channel send: no opened channel.');\\r\\n            throw new Error('No opened channel');\\r\\n        }\\r\\n\\r\\n        channel.send(JSON.stringify(jsonObject));\\r\\n    }\\r\\n}\\r\\n\",\"/* global __filename, RTCSessionDescription */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport transform from 'sdp-transform';\\r\\n\\r\\nimport * as GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\r\\nimport JitsiRemoteTrack from './JitsiRemoteTrack';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport LocalSdpMunger from './LocalSdpMunger';\\r\\nimport RTC from './RTC';\\r\\nimport RTCUtils from './RTCUtils';\\r\\nimport browser from '../browser';\\r\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\r\\nimport RtxModifier from '../xmpp/RtxModifier';\\r\\n\\r\\n// FIXME SDP tools should end up in some kind of util module\\r\\nimport SDP from '../xmpp/SDP';\\r\\nimport SdpConsistency from '../xmpp/SdpConsistency';\\r\\nimport { SdpTransformWrap } from '../xmpp/SdpTransformUtil';\\r\\nimport SDPUtil from '../xmpp/SDPUtil';\\r\\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\nconst SIMULCAST_LAYERS = 3;\\r\\nconst SIM_LAYER_1_RID = '1';\\r\\nconst SIM_LAYER_2_RID = '2';\\r\\nconst SIM_LAYER_3_RID = '3';\\r\\nconst SIM_LAYER_RIDS = [ SIM_LAYER_1_RID, SIM_LAYER_2_RID, SIM_LAYER_3_RID ];\\r\\n\\r\\n/* eslint-disable max-params */\\r\\n\\r\\n/**\\r\\n * Creates new instance of 'TraceablePeerConnection'.\\r\\n *\\r\\n * @param {RTC} rtc the instance of <tt>RTC</tt> service\\r\\n * @param {number} id the peer connection id assigned by the parent RTC module.\\r\\n * @param {SignalingLayer} signalingLayer the signaling layer instance\\r\\n * @param {object} iceConfig WebRTC 'PeerConnection' ICE config\\r\\n * @param {object} constraints WebRTC 'PeerConnection' constraints\\r\\n * @param {boolean} isP2P indicates whether or not the new instance will be used\\r\\n * in a peer to peer connection\\r\\n * @param {object} options <tt>TracablePeerConnection</tt> config options.\\r\\n * @param {boolean} options.disableSimulcast if set to 'true' will disable\\r\\n * the simulcast.\\r\\n * @param {boolean} options.disableRtx if set to 'true' will disable the RTX\\r\\n * @param {boolean} options.enableFirefoxSimulcast if set to 'true' will enable\\r\\n * experimental simulcast support on Firefox.\\r\\n * @param {boolean} options.disableH264 If set to 'true' H264 will be\\r\\n *      disabled by removing it from the SDP.\\r\\n * @param {boolean} options.preferH264 if set to 'true' H264 will be preferred\\r\\n * over other video codecs.\\r\\n * @param {boolean} options.enableLayerSuspension if set to 'true', we will\\r\\n * cap the video send bitrate when we are told we have not been selected by\\r\\n * any endpoints (and therefore the non-thumbnail streams are not in use).\\r\\n * @param {boolean} options.startSilent If set to 'true' no audio will be sent or received.\\r\\n *\\r\\n * FIXME: initially the purpose of TraceablePeerConnection was to be able to\\r\\n * debug the peer connection. Since many other responsibilities have been added\\r\\n * it would make sense to extract a separate class from it and come up with\\r\\n * a more suitable name.\\r\\n *\\r\\n * @constructor\\r\\n */\\r\\nexport default function TraceablePeerConnection(\\r\\n        rtc,\\r\\n        id,\\r\\n        signalingLayer,\\r\\n        iceConfig,\\r\\n        constraints,\\r\\n        isP2P,\\r\\n        options) {\\r\\n\\r\\n    /**\\r\\n     * Indicates whether or not this peer connection instance is actively\\r\\n     * sending/receiving audio media. When set to <tt>false</tt> the SDP audio\\r\\n     * media direction will be adjusted to 'inactive' in order to suspend\\r\\n     * the transmission.\\r\\n     * @type {boolean}\\r\\n     * @private\\r\\n     */\\r\\n    this.audioTransferActive = !(options.startSilent === true);\\r\\n\\r\\n    /**\\r\\n     * Indicates whether or not this peer connection instance is actively\\r\\n     * sending/receiving video media. When set to <tt>false</tt> the SDP video\\r\\n     * media direction will be adjusted to 'inactive' in order to suspend\\r\\n     * the transmission.\\r\\n     * @type {boolean}\\r\\n     * @private\\r\\n     */\\r\\n    this.videoTransferActive = true;\\r\\n\\r\\n    /**\\r\\n     * The parent instance of RTC service which created this\\r\\n     * <tt>TracablePeerConnection</tt>.\\r\\n     * @type {RTC}\\r\\n     */\\r\\n    this.rtc = rtc;\\r\\n\\r\\n    /**\\r\\n     * The peer connection identifier assigned by the RTC module.\\r\\n     * @type {number}\\r\\n     */\\r\\n    this.id = id;\\r\\n\\r\\n    /**\\r\\n     * Indicates whether or not this instance is used in a peer to peer\\r\\n     * connection.\\r\\n     * @type {boolean}\\r\\n     */\\r\\n    this.isP2P = isP2P;\\r\\n\\r\\n    // FIXME: We should support multiple streams per jid.\\r\\n    /**\\r\\n     * The map holds remote tracks associated with this peer connection.\\r\\n     * It maps user's JID to media type and remote track\\r\\n     * (one track per media type per user's JID).\\r\\n     * @type {Map<string, Map<MediaType, JitsiRemoteTrack>>}\\r\\n     */\\r\\n    this.remoteTracks = new Map();\\r\\n\\r\\n    /**\\r\\n     * A map which stores local tracks mapped by {@link JitsiLocalTrack.rtcId}\\r\\n     * @type {Map<number, JitsiLocalTrack>}\\r\\n     */\\r\\n    this.localTracks = new Map();\\r\\n\\r\\n    /**\\r\\n     * Keeps tracks of the WebRTC <tt>MediaStream</tt>s that have been added to\\r\\n     * the underlying WebRTC PeerConnection.\\r\\n     * @type {Array}\\r\\n     * @private\\r\\n     */\\r\\n    this._addedStreams = [];\\r\\n\\r\\n    /**\\r\\n     * @typedef {Object} TPCGroupInfo\\r\\n     * @property {string} semantics the SSRC groups semantics\\r\\n     * @property {Array<number>} ssrcs group's SSRCs in order where the first\\r\\n     * one is group's primary SSRC, the second one is secondary (RTX) and so\\r\\n     * on...\\r\\n     */\\r\\n    /**\\r\\n     * @typedef {Object} TPCSSRCInfo\\r\\n     * @property {Array<number>} ssrcs an array which holds all track's SSRCs\\r\\n     * @property {Array<TPCGroupInfo>} groups an array stores all track's SSRC\\r\\n     * groups\\r\\n     */\\r\\n    /**\\r\\n     * Holds the info about local track's SSRCs mapped per their\\r\\n     * {@link JitsiLocalTrack.rtcId}\\r\\n     * @type {Map<number, TPCSSRCInfo>}\\r\\n     */\\r\\n    this.localSSRCs = new Map();\\r\\n\\r\\n    /**\\r\\n     * The local ICE username fragment for this session.\\r\\n     */\\r\\n    this.localUfrag = null;\\r\\n\\r\\n    /**\\r\\n     * The remote ICE username fragment for this session.\\r\\n     */\\r\\n    this.remoteUfrag = null;\\r\\n\\r\\n    /**\\r\\n     * The signaling layer which operates this peer connection.\\r\\n     * @type {SignalingLayer}\\r\\n     */\\r\\n    this.signalingLayer = signalingLayer;\\r\\n\\r\\n    // SignalingLayer listeners\\r\\n    this._peerVideoTypeChanged = this._peerVideoTypeChanged.bind(this);\\r\\n    this.signalingLayer.on(\\r\\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\\r\\n        this._peerVideoTypeChanged);\\r\\n\\r\\n    this._peerMutedChanged = this._peerMutedChanged.bind(this);\\r\\n    this.signalingLayer.on(\\r\\n        SignalingEvents.PEER_MUTED_CHANGED,\\r\\n        this._peerMutedChanged);\\r\\n    this.options = options;\\r\\n\\r\\n    this.peerconnection\\r\\n        = new RTCUtils.RTCPeerConnectionType(iceConfig, constraints);\\r\\n    this.updateLog = [];\\r\\n    this.stats = {};\\r\\n    this.statsinterval = null;\\r\\n\\r\\n    /**\\r\\n     * @type {number} The max number of stats to keep in this.stats. Limit to\\r\\n     * 300 values, i.e. 5 minutes; set to 0 to disable\\r\\n     */\\r\\n    this.maxstats = options.maxstats;\\r\\n    const Interop = require('@jitsi/sdp-interop').Interop;\\r\\n\\r\\n    this.interop = new Interop();\\r\\n    const Simulcast = require('@jitsi/sdp-simulcast');\\r\\n\\r\\n    this.simulcast = new Simulcast({ numOfLayers: SIMULCAST_LAYERS,\\r\\n        explodeRemoteSimulcast: false });\\r\\n    this.sdpConsistency = new SdpConsistency(this.toString());\\r\\n\\r\\n    /**\\r\\n     * Munges local SDP provided to the Jingle Session in order to prevent from\\r\\n     * sending SSRC updates on attach/detach and mute/unmute (for video).\\r\\n     * @type {LocalSdpMunger}\\r\\n     */\\r\\n    this.localSdpMunger = new LocalSdpMunger(this);\\r\\n\\r\\n    /**\\r\\n     * TracablePeerConnection uses RTC's eventEmitter\\r\\n     * @type {EventEmitter}\\r\\n     */\\r\\n    this.eventEmitter = rtc.eventEmitter;\\r\\n    this.rtxModifier = new RtxModifier();\\r\\n\\r\\n    // override as desired\\r\\n    this.trace = (what, info) => {\\r\\n        logger.debug(what, info);\\r\\n\\r\\n        this.updateLog.push({\\r\\n            time: new Date(),\\r\\n            type: what,\\r\\n            value: info || ''\\r\\n        });\\r\\n    };\\r\\n    this.onicecandidate = null;\\r\\n    this.peerconnection.onicecandidate = event => {\\r\\n        this.trace(\\r\\n            'onicecandidate',\\r\\n            JSON.stringify(event.candidate, null, ' '));\\r\\n\\r\\n        if (this.onicecandidate !== null) {\\r\\n            this.onicecandidate(event);\\r\\n        }\\r\\n    };\\r\\n    this.peerconnection.onaddstream\\r\\n        = event => this._remoteStreamAdded(event.stream);\\r\\n    this.peerconnection.onremovestream\\r\\n        = event => this._remoteStreamRemoved(event.stream);\\r\\n    this.onsignalingstatechange = null;\\r\\n    this.peerconnection.onsignalingstatechange = event => {\\r\\n        this.trace('onsignalingstatechange', this.signalingState);\\r\\n        if (this.onsignalingstatechange !== null) {\\r\\n            this.onsignalingstatechange(event);\\r\\n        }\\r\\n    };\\r\\n    this.oniceconnectionstatechange = null;\\r\\n    this.peerconnection.oniceconnectionstatechange = event => {\\r\\n        this.trace('oniceconnectionstatechange', this.iceConnectionState);\\r\\n        if (this.oniceconnectionstatechange !== null) {\\r\\n            this.oniceconnectionstatechange(event);\\r\\n        }\\r\\n    };\\r\\n    this.onnegotiationneeded = null;\\r\\n    this.peerconnection.onnegotiationneeded = event => {\\r\\n        this.trace('onnegotiationneeded');\\r\\n        if (this.onnegotiationneeded !== null) {\\r\\n            this.onnegotiationneeded(event);\\r\\n        }\\r\\n    };\\r\\n    this.ondatachannel = null;\\r\\n    this.peerconnection.ondatachannel = event => {\\r\\n        this.trace('ondatachannel');\\r\\n        if (this.ondatachannel !== null) {\\r\\n            this.ondatachannel(event);\\r\\n        }\\r\\n    };\\r\\n\\r\\n    if (this.maxstats) {\\r\\n        this.statsinterval = window.setInterval(() => {\\r\\n            this.getStats(stats => {\\r\\n                if (stats.result\\r\\n                    && typeof stats.result === 'function') {\\r\\n                    const results = stats.result();\\r\\n\\r\\n                    for (let i = 0; i < results.length; ++i) {\\r\\n                        const res = results[i];\\r\\n\\r\\n                        res.names().forEach(name => {\\r\\n                            this._processStat(res, name, res.stat(name));\\r\\n                        });\\r\\n                    }\\r\\n                } else {\\r\\n                    stats.forEach(r => this._processStat(r, '', r));\\r\\n                }\\r\\n            }, () => {\\r\\n\\r\\n                // empty error callback\\r\\n            });\\r\\n        }, 1000);\\r\\n    }\\r\\n\\r\\n    logger.info(`Create new ${this}`);\\r\\n}\\r\\n\\r\\n/* eslint-enable max-params */\\r\\n\\r\\n/**\\r\\n * Process stat and adds it to the array of stats we store.\\r\\n * @param report the current stats report.\\r\\n * @param name the name of the report, if available\\r\\n * @param statValue the value to add.\\r\\n * @private\\r\\n */\\r\\nTraceablePeerConnection.prototype._processStat\\r\\n    = function(report, name, statValue) {\\r\\n        const id = `${report.id}-${name}`;\\r\\n        let s = this.stats[id];\\r\\n        const now = new Date();\\r\\n\\r\\n        if (!s) {\\r\\n            this.stats[id] = s = {\\r\\n                startTime: now,\\r\\n                endTime: now,\\r\\n                values: [],\\r\\n                times: []\\r\\n            };\\r\\n        }\\r\\n        s.values.push(statValue);\\r\\n        s.times.push(now.getTime());\\r\\n        if (s.values.length > this.maxstats) {\\r\\n            s.values.shift();\\r\\n            s.times.shift();\\r\\n        }\\r\\n        s.endTime = now;\\r\\n    };\\r\\n\\r\\n/**\\r\\n * Returns a string representation of a SessionDescription object.\\r\\n */\\r\\nconst dumpSDP = function(description) {\\r\\n    if (typeof description === 'undefined' || description === null) {\\r\\n        return '';\\r\\n    }\\r\\n\\r\\n    return `type: ${description.type}\\\\r\\\\n${description.sdp}`;\\r\\n};\\r\\n\\r\\n\\r\\n/**\\r\\n * Forwards the {@link peerconnection.iceConnectionState} state except that it\\r\\n * will convert \\\"completed\\\" into \\\"connected\\\" where both mean that the ICE has\\r\\n * succeeded and is up and running. We never see \\\"completed\\\" state for\\r\\n * the JVB connection, but it started appearing for the P2P one. This method\\r\\n * allows to adapt old logic to this new situation.\\r\\n * @return {string}\\r\\n */\\r\\nTraceablePeerConnection.prototype.getConnectionState = function() {\\r\\n    const state = this.peerconnection.iceConnectionState;\\r\\n\\r\\n    if (state === 'completed') {\\r\\n        return 'connected';\\r\\n    }\\r\\n\\r\\n    return state;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Obtains the media direction for given {@link MediaType}. The method takes\\r\\n * into account whether or not there are any local tracks for media and\\r\\n * the {@link audioTransferActive} and {@link videoTransferActive} flags.\\r\\n * @param {MediaType} mediaType\\r\\n * @return {string} one of the SDP direction constants ('sendrecv, 'recvonly'\\r\\n * etc.) which should be used when setting local description on the peer\\r\\n * connection.\\r\\n * @private\\r\\n */\\r\\nTraceablePeerConnection.prototype._getDesiredMediaDirection = function(\\r\\n        mediaType) {\\r\\n    let mediaTransferActive = true;\\r\\n\\r\\n    if (mediaType === MediaType.AUDIO) {\\r\\n        mediaTransferActive = this.audioTransferActive;\\r\\n    } else if (mediaType === MediaType.VIDEO) {\\r\\n        mediaTransferActive = this.videoTransferActive;\\r\\n    }\\r\\n    if (mediaTransferActive) {\\r\\n        return this.hasAnyTracksOfType(mediaType) ? 'sendrecv' : 'recvonly';\\r\\n    }\\r\\n\\r\\n    return 'inactive';\\r\\n};\\r\\n\\r\\n/**\\r\\n * Tells whether or not this TPC instance is using Simulcast.\\r\\n * @return {boolean} <tt>true</tt> if simulcast is enabled and active or\\r\\n * <tt>false</tt> if it's turned off.\\r\\n */\\r\\nTraceablePeerConnection.prototype.isSimulcastOn = function() {\\r\\n    return !this.options.disableSimulcast\\r\\n        && browser.supportsSimulcast()\\r\\n\\r\\n        // Firefox has been added as supporting simulcast, but it is\\r\\n        // experimental so we only want to do it for firefox if the config\\r\\n        // option is set.  Unfortunately, browser::supportsSimulcast()\\r\\n        // doesn't have a reference to the config options, so we have\\r\\n        // to do it here\\r\\n        && (!browser.isFirefox()\\r\\n            || this.options.enableFirefoxSimulcast);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Handles {@link SignalingEvents.PEER_VIDEO_TYPE_CHANGED}\\r\\n * @param {string} endpointId the video owner's ID (MUC nickname)\\r\\n * @param {VideoType} videoType the new value\\r\\n * @private\\r\\n */\\r\\nTraceablePeerConnection.prototype._peerVideoTypeChanged = function(\\r\\n        endpointId,\\r\\n        videoType) {\\r\\n    // Check if endpointId has a value to avoid action on random track\\r\\n    if (!endpointId) {\\r\\n        logger.error(`No endpointID on peerVideoTypeChanged ${this}`);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n    const videoTrack = this.getRemoteTracks(endpointId, MediaType.VIDEO);\\r\\n\\r\\n    if (videoTrack.length) {\\r\\n        // NOTE 1 track per media type is assumed\\r\\n        videoTrack[0]._setVideoType(videoType);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Handles remote track mute / unmute events.\\r\\n * @param {string} endpointId the track owner's identifier (MUC nickname)\\r\\n * @param {MediaType} mediaType \\\"audio\\\" or \\\"video\\\"\\r\\n * @param {boolean} isMuted the new mute state\\r\\n * @private\\r\\n */\\r\\nTraceablePeerConnection.prototype._peerMutedChanged = function(\\r\\n        endpointId,\\r\\n        mediaType,\\r\\n        isMuted) {\\r\\n    // Check if endpointId is a value to avoid doing action on all remote tracks\\r\\n    if (!endpointId) {\\r\\n        logger.error('On peerMuteChanged - no endpoint ID');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n    const track = this.getRemoteTracks(endpointId, mediaType);\\r\\n\\r\\n    if (track.length) {\\r\\n        // NOTE 1 track per media type is assumed\\r\\n        track[0].setMute(isMuted);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Obtains local tracks for given {@link MediaType}. If the <tt>mediaType</tt>\\r\\n * argument is omitted the list of all local tracks will be returned.\\r\\n * @param {MediaType} [mediaType]\\r\\n * @return {Array<JitsiLocalTrack>}\\r\\n */\\r\\nTraceablePeerConnection.prototype.getLocalTracks = function(mediaType) {\\r\\n    let tracks = Array.from(this.localTracks.values());\\r\\n\\r\\n    if (mediaType !== undefined) {\\r\\n        tracks = tracks.filter(track => track.getType() === mediaType);\\r\\n    }\\r\\n\\r\\n    return tracks;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Checks whether or not this {@link TraceablePeerConnection} instance contains\\r\\n * any local tracks for given <tt>mediaType</tt>.\\r\\n * @param {MediaType} mediaType\\r\\n * @return {boolean}\\r\\n */\\r\\nTraceablePeerConnection.prototype.hasAnyTracksOfType = function(mediaType) {\\r\\n    if (!mediaType) {\\r\\n        throw new Error('\\\"mediaType\\\" is required');\\r\\n    }\\r\\n\\r\\n    return this.getLocalTracks(mediaType).length > 0;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Obtains all remote tracks currently known to this PeerConnection instance.\\r\\n * @param {string} [endpointId] the track owner's identifier (MUC nickname)\\r\\n * @param {MediaType} [mediaType] the remote tracks will be filtered\\r\\n * by their media type if this argument is specified.\\r\\n * @return {Array<JitsiRemoteTrack>}\\r\\n */\\r\\nTraceablePeerConnection.prototype.getRemoteTracks = function(\\r\\n        endpointId,\\r\\n        mediaType) {\\r\\n    const remoteTracks = [];\\r\\n    const endpoints\\r\\n        = endpointId ? [ endpointId ] : this.remoteTracks.keys();\\r\\n\\r\\n    for (const endpoint of endpoints) {\\r\\n        const endpointTrackMap = this.remoteTracks.get(endpoint);\\r\\n\\r\\n        if (!endpointTrackMap) {\\r\\n\\r\\n            // Otherwise an empty Map() would have to be allocated above\\r\\n            // eslint-disable-next-line no-continue\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        for (const trackMediaType of endpointTrackMap.keys()) {\\r\\n            // per media type filtering\\r\\n            if (!mediaType || mediaType === trackMediaType) {\\r\\n                const mediaTrack = endpointTrackMap.get(trackMediaType);\\r\\n\\r\\n                if (mediaTrack) {\\r\\n                    remoteTracks.push(mediaTrack);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return remoteTracks;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Tries to find {@link JitsiTrack} for given SSRC number. It will search both\\r\\n * local and remote tracks bound to this instance.\\r\\n * @param {number} ssrc\\r\\n * @return {JitsiTrack|null}\\r\\n */\\r\\nTraceablePeerConnection.prototype.getTrackBySSRC = function(ssrc) {\\r\\n    if (typeof ssrc !== 'number') {\\r\\n        throw new Error(`SSRC ${ssrc} is not a number`);\\r\\n    }\\r\\n    for (const localTrack of this.localTracks.values()) {\\r\\n        if (this.getLocalSSRC(localTrack) === ssrc) {\\r\\n            return localTrack;\\r\\n        }\\r\\n    }\\r\\n    for (const remoteTrack of this.getRemoteTracks()) {\\r\\n        if (remoteTrack.getSSRC() === ssrc) {\\r\\n            return remoteTrack;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Tries to find SSRC number for given {@link JitsiTrack} id. It will search\\r\\n * both local and remote tracks bound to this instance.\\r\\n * @param {string} id\\r\\n * @return {number|null}\\r\\n */\\r\\nTraceablePeerConnection.prototype.getSsrcByTrackId = function(id) {\\r\\n\\r\\n    const findTrackById = track => track.getTrack().id === id;\\r\\n    const localTrack = this.getLocalTracks().find(findTrackById);\\r\\n\\r\\n    if (localTrack) {\\r\\n        return this.getLocalSSRC(localTrack);\\r\\n    }\\r\\n\\r\\n    const remoteTrack = this.getRemoteTracks().find(findTrackById);\\r\\n\\r\\n    if (remoteTrack) {\\r\\n        return remoteTrack.getSSRC();\\r\\n    }\\r\\n\\r\\n    return null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Called when new remote MediaStream is added to the PeerConnection.\\r\\n * @param {MediaStream} stream the WebRTC MediaStream for remote participant\\r\\n */\\r\\nTraceablePeerConnection.prototype._remoteStreamAdded = function(stream) {\\r\\n    const streamId = RTC.getStreamID(stream);\\r\\n\\r\\n    if (!RTC.isUserStreamById(streamId)) {\\r\\n        logger.info(\\r\\n            `${this} ignored remote 'stream added' event for non-user stream`\\r\\n             + `id: ${streamId}`);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // Bind 'addtrack'/'removetrack' event handlers\\r\\n    if (browser.isChromiumBased() || browser.isEdge()) {\\r\\n        stream.onaddtrack = event => {\\r\\n            this._remoteTrackAdded(stream, event.track);\\r\\n        };\\r\\n        stream.onremovetrack = event => {\\r\\n            this._remoteTrackRemoved(stream, event.track);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    // Call remoteTrackAdded for each track in the stream\\r\\n    const streamAudioTracks = stream.getAudioTracks();\\r\\n\\r\\n    for (const audioTrack of streamAudioTracks) {\\r\\n        this._remoteTrackAdded(stream, audioTrack);\\r\\n    }\\r\\n    const streamVideoTracks = stream.getVideoTracks();\\r\\n\\r\\n    for (const videoTrack of streamVideoTracks) {\\r\\n        this._remoteTrackAdded(stream, videoTrack);\\r\\n    }\\r\\n};\\r\\n\\r\\n\\r\\n/**\\r\\n * Called on \\\"track added\\\" and \\\"stream added\\\" PeerConnection events (because we\\r\\n * handle streams on per track basis). Finds the owner and the SSRC for\\r\\n * the track and passes that to ChatRoom for further processing.\\r\\n * @param {MediaStream} stream the WebRTC MediaStream instance which is\\r\\n * the parent of the track\\r\\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack added for remote\\r\\n * participant\\r\\n */\\r\\nTraceablePeerConnection.prototype._remoteTrackAdded = function(stream, track) {\\r\\n    const streamId = RTC.getStreamID(stream);\\r\\n    const mediaType = track.kind;\\r\\n\\r\\n    logger.info(`${this} remote track added:`, streamId, mediaType);\\r\\n\\r\\n    // look up an associated JID for a stream id\\r\\n    if (!mediaType) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(\\r\\n            new Error(\\r\\n                `MediaType undefined for remote track, stream id: ${streamId}`\\r\\n            ));\\r\\n\\r\\n        // Abort\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const remoteSDP = new SDP(this.remoteDescription.sdp);\\r\\n    const mediaLines\\r\\n        = remoteSDP.media.filter(mls => mls.startsWith(`m=${mediaType}`));\\r\\n\\r\\n    if (!mediaLines.length) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(\\r\\n            new Error(\\r\\n                `No media lines for type ${\\r\\n                    mediaType} found in remote SDP for remote track: ${\\r\\n                    streamId}`));\\r\\n\\r\\n        // Abort\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    let ssrcLines = SDPUtil.findLines(mediaLines[0], 'a=ssrc:');\\r\\n\\r\\n    ssrcLines\\r\\n        = ssrcLines.filter(line => line.indexOf(`msid:${streamId}`) !== -1);\\r\\n    if (!ssrcLines.length) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(\\r\\n            new Error(\\r\\n                `No SSRC lines for streamId ${\\r\\n                    streamId} for remote track, media type: ${mediaType}`));\\r\\n\\r\\n        // Abort\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // FIXME the length of ssrcLines[0] not verified, but it will fail\\r\\n    // with global error handler anyway\\r\\n    const ssrcStr = ssrcLines[0].substring(7).split(' ')[0];\\r\\n    const trackSsrc = Number(ssrcStr);\\r\\n    const ownerEndpointId = this.signalingLayer.getSSRCOwner(trackSsrc);\\r\\n\\r\\n    if (isNaN(trackSsrc) || trackSsrc < 0) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(\\r\\n            new Error(\\r\\n                `Invalid SSRC: ${ssrcStr} for remote track, msid: ${\\r\\n                    streamId} media type: ${mediaType}`));\\r\\n\\r\\n        // Abort\\r\\n        return;\\r\\n    } else if (!ownerEndpointId) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(\\r\\n            new Error(\\r\\n                `No SSRC owner known for: ${\\r\\n                    trackSsrc} for remote track, msid: ${\\r\\n                    streamId} media type: ${mediaType}`));\\r\\n\\r\\n        // Abort\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    logger.log(`${this} associated ssrc`, ownerEndpointId, trackSsrc);\\r\\n\\r\\n    const peerMediaInfo\\r\\n        = this.signalingLayer.getPeerMediaInfo(ownerEndpointId, mediaType);\\r\\n\\r\\n    if (!peerMediaInfo) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(\\r\\n            new Error(\\r\\n                `${this}: no peer media info available for ${\\r\\n                    ownerEndpointId}`));\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const muted = peerMediaInfo.muted;\\r\\n    const videoType = peerMediaInfo.videoType; // can be undefined\\r\\n\\r\\n    this._createRemoteTrack(\\r\\n        ownerEndpointId, stream, track, mediaType, videoType, trackSsrc, muted);\\r\\n};\\r\\n\\r\\n// FIXME cleanup params\\r\\n/* eslint-disable max-params */\\r\\n\\r\\n/**\\r\\n * Initializes a new JitsiRemoteTrack instance with the data provided by\\r\\n * the signaling layer and SDP.\\r\\n *\\r\\n * @param {string} ownerEndpointId the owner's endpoint ID (MUC nickname)\\r\\n * @param {MediaStream} stream the WebRTC stream instance\\r\\n * @param {MediaStreamTrack} track the WebRTC track instance\\r\\n * @param {MediaType} mediaType the track's type of the media\\r\\n * @param {VideoType} [videoType] the track's type of the video (if applicable)\\r\\n * @param {number} ssrc the track's main SSRC number\\r\\n * @param {boolean} muted the initial muted status\\r\\n */\\r\\nTraceablePeerConnection.prototype._createRemoteTrack = function(\\r\\n        ownerEndpointId,\\r\\n        stream,\\r\\n        track,\\r\\n        mediaType,\\r\\n        videoType,\\r\\n        ssrc,\\r\\n        muted) {\\r\\n    let remoteTracksMap = this.remoteTracks.get(ownerEndpointId);\\r\\n\\r\\n    if (!remoteTracksMap) {\\r\\n        remoteTracksMap = new Map();\\r\\n        this.remoteTracks.set(ownerEndpointId, remoteTracksMap);\\r\\n    }\\r\\n\\r\\n    const existingTrack = remoteTracksMap.get(mediaType);\\r\\n\\r\\n    if (existingTrack && existingTrack.getTrack() === track) {\\r\\n        // Ignore duplicated event which can originate either from\\r\\n        // 'onStreamAdded' or 'onTrackAdded'.\\r\\n        logger.info(\\r\\n            `${this} ignored duplicated remote track added event for: `\\r\\n                + `${ownerEndpointId}, ${mediaType}`);\\r\\n\\r\\n        return;\\r\\n    } else if (existingTrack) {\\r\\n        logger.error(\\r\\n            `${this} overwriting remote track for`\\r\\n                + `${ownerEndpointId} ${mediaType}`);\\r\\n    }\\r\\n\\r\\n    const remoteTrack\\r\\n        = new JitsiRemoteTrack(\\r\\n                this.rtc,\\r\\n                this.rtc.conference,\\r\\n                ownerEndpointId,\\r\\n                stream,\\r\\n                track,\\r\\n                mediaType,\\r\\n                videoType,\\r\\n                ssrc,\\r\\n                muted,\\r\\n                this.isP2P);\\r\\n\\r\\n    remoteTracksMap.set(mediaType, remoteTrack);\\r\\n\\r\\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, remoteTrack);\\r\\n};\\r\\n\\r\\n/* eslint-enable max-params */\\r\\n\\r\\n/**\\r\\n * Handles remote stream removal.\\r\\n * @param stream the WebRTC MediaStream object which is being removed from the\\r\\n * PeerConnection\\r\\n */\\r\\nTraceablePeerConnection.prototype._remoteStreamRemoved = function(stream) {\\r\\n    if (!RTC.isUserStream(stream)) {\\r\\n        const id = RTC.getStreamID(stream);\\r\\n\\r\\n        logger.info(\\r\\n            `Ignored remote 'stream removed' event for non-user stream ${id}`);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // Call remoteTrackRemoved for each track in the stream\\r\\n    const streamVideoTracks = stream.getVideoTracks();\\r\\n\\r\\n    for (const videoTrack of streamVideoTracks) {\\r\\n        this._remoteTrackRemoved(stream, videoTrack);\\r\\n    }\\r\\n    const streamAudioTracks = stream.getAudioTracks();\\r\\n\\r\\n    for (const audioTrack of streamAudioTracks) {\\r\\n        this._remoteTrackRemoved(stream, audioTrack);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Handles remote media track removal.\\r\\n * @param {MediaStream} stream WebRTC MediaStream instance which is the parent\\r\\n * of the track.\\r\\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack which has been\\r\\n * removed from the PeerConnection.\\r\\n */\\r\\nTraceablePeerConnection.prototype._remoteTrackRemoved = function(\\r\\n        stream,\\r\\n        track) {\\r\\n    const streamId = RTC.getStreamID(stream);\\r\\n    const trackId = track && RTC.getTrackID(track);\\r\\n\\r\\n    logger.info(`${this} - remote track removed: ${streamId}, ${trackId}`);\\r\\n\\r\\n    if (!streamId) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(\\r\\n            new Error(`${this} remote track removal failed - no stream ID`));\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    if (!trackId) {\\r\\n        GlobalOnErrorHandler.callErrorHandler(\\r\\n            new Error(`${this} remote track removal failed - no track ID`));\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    if (!this._removeRemoteTrackById(streamId, trackId)) {\\r\\n        // NOTE this warning is always printed when user leaves the room,\\r\\n        // because we remove remote tracks manually on MUC member left event,\\r\\n        // before the SSRCs are removed by Jicofo. In most cases it is fine to\\r\\n        // ignore this warning, but still it's better to keep it printed for\\r\\n        // debugging purposes.\\r\\n        //\\r\\n        // We could change the behaviour to emit track removed only from here,\\r\\n        // but the order of the events will change and consuming apps could\\r\\n        // behave unexpectedly (the \\\"user left\\\" event would come before \\\"track\\r\\n        // removed\\\" events).\\r\\n        logger.warn(\\r\\n            `${this} Removed track not found for msid: ${streamId},\\r\\n             track id: ${trackId}`);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Finds remote track by it's stream and track ids.\\r\\n * @param {string} streamId the media stream id as defined by the WebRTC\\r\\n * @param {string} trackId the media track id as defined by the WebRTC\\r\\n * @return {JitsiRemoteTrack|undefined} the track's instance or\\r\\n * <tt>undefined</tt> if not found.\\r\\n * @private\\r\\n */\\r\\nTraceablePeerConnection.prototype._getRemoteTrackById = function(\\r\\n        streamId,\\r\\n        trackId) {\\r\\n    // .find will break the loop once the first match is found\\r\\n    for (const endpointTrackMap of this.remoteTracks.values()) {\\r\\n        for (const mediaTrack of endpointTrackMap.values()) {\\r\\n            // FIXME verify and try to use ===\\r\\n            /* eslint-disable eqeqeq */\\r\\n            if (mediaTrack.getStreamId() == streamId\\r\\n                && mediaTrack.getTrackId() == trackId) {\\r\\n                return mediaTrack;\\r\\n            }\\r\\n\\r\\n            /* eslint-enable eqeqeq */\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return undefined;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes all JitsiRemoteTracks associated with given MUC nickname\\r\\n * (resource part of the JID). Returns array of removed tracks.\\r\\n *\\r\\n * @param {string} owner - The resource part of the MUC JID.\\r\\n * @returns {JitsiRemoteTrack[]}\\r\\n */\\r\\nTraceablePeerConnection.prototype.removeRemoteTracks = function(owner) {\\r\\n    const removedTracks = [];\\r\\n    const remoteTracksMap = this.remoteTracks.get(owner);\\r\\n\\r\\n    if (remoteTracksMap) {\\r\\n        const removedAudioTrack = remoteTracksMap.get(MediaType.AUDIO);\\r\\n        const removedVideoTrack = remoteTracksMap.get(MediaType.VIDEO);\\r\\n\\r\\n        removedAudioTrack && removedTracks.push(removedAudioTrack);\\r\\n        removedVideoTrack && removedTracks.push(removedVideoTrack);\\r\\n\\r\\n        this.remoteTracks.delete(owner);\\r\\n    }\\r\\n\\r\\n    logger.debug(\\r\\n        `${this} removed remote tracks for ${owner} count: ${\\r\\n            removedTracks.length}`);\\r\\n\\r\\n    return removedTracks;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes and disposes given <tt>JitsiRemoteTrack</tt> instance. Emits\\r\\n * {@link RTCEvents.REMOTE_TRACK_REMOVED}.\\r\\n * @param {JitsiRemoteTrack} toBeRemoved\\r\\n */\\r\\nTraceablePeerConnection.prototype._removeRemoteTrack = function(toBeRemoved) {\\r\\n    toBeRemoved.dispose();\\r\\n    const participantId = toBeRemoved.getParticipantId();\\r\\n    const remoteTracksMap = this.remoteTracks.get(participantId);\\r\\n\\r\\n    if (!remoteTracksMap) {\\r\\n        logger.error(\\r\\n            `removeRemoteTrack: no remote tracks map for ${participantId}`);\\r\\n    } else if (!remoteTracksMap.delete(toBeRemoved.getType())) {\\r\\n        logger.error(\\r\\n            `Failed to remove ${toBeRemoved} - type mapping messed up ?`);\\r\\n    }\\r\\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, toBeRemoved);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes and disposes <tt>JitsiRemoteTrack</tt> identified by given stream and\\r\\n * track ids.\\r\\n *\\r\\n * @param {string} streamId the media stream id as defined by the WebRTC\\r\\n * @param {string} trackId the media track id as defined by the WebRTC\\r\\n * @returns {JitsiRemoteTrack|undefined} the track which has been removed or\\r\\n * <tt>undefined</tt> if no track matching given stream and track ids was\\r\\n * found.\\r\\n */\\r\\nTraceablePeerConnection.prototype._removeRemoteTrackById = function(\\r\\n        streamId,\\r\\n        trackId) {\\r\\n    const toBeRemoved = this._getRemoteTrackById(streamId, trackId);\\r\\n\\r\\n    if (toBeRemoved) {\\r\\n        this._removeRemoteTrack(toBeRemoved);\\r\\n    }\\r\\n\\r\\n    return toBeRemoved;\\r\\n};\\r\\n\\r\\n/**\\r\\n * @typedef {Object} SSRCGroupInfo\\r\\n * @property {Array<number>} ssrcs group's SSRCs\\r\\n * @property {string} semantics\\r\\n */\\r\\n/**\\r\\n * @typedef {Object} TrackSSRCInfo\\r\\n * @property {Array<number>} ssrcs track's SSRCs\\r\\n * @property {Array<SSRCGroupInfo>} groups track's SSRC groups\\r\\n */\\r\\n/**\\r\\n * Returns map with keys msid and <tt>TrackSSRCInfo</tt> values.\\r\\n * @param {Object} desc the WebRTC SDP instance.\\r\\n * @return {Map<string,TrackSSRCInfo>}\\r\\n */\\r\\nfunction extractSSRCMap(desc) {\\r\\n    /**\\r\\n     * Track SSRC infos mapped by stream ID (msid)\\r\\n     * @type {Map<string,TrackSSRCInfo>}\\r\\n     */\\r\\n    const ssrcMap = new Map();\\r\\n\\r\\n    /**\\r\\n     * Groups mapped by primary SSRC number\\r\\n     * @type {Map<number,Array<SSRCGroupInfo>>}\\r\\n     */\\r\\n    const groupsMap = new Map();\\r\\n\\r\\n    if (typeof desc !== 'object' || desc === null\\r\\n        || typeof desc.sdp !== 'string') {\\r\\n        logger.warn('An empty description was passed as an argument.');\\r\\n\\r\\n        return ssrcMap;\\r\\n    }\\r\\n\\r\\n    const session = transform.parse(desc.sdp);\\r\\n\\r\\n    if (!Array.isArray(session.media)) {\\r\\n        return ssrcMap;\\r\\n    }\\r\\n\\r\\n    for (const mLine of session.media) {\\r\\n        if (!Array.isArray(mLine.ssrcs)) {\\r\\n            continue; // eslint-disable-line no-continue\\r\\n        }\\r\\n\\r\\n        if (Array.isArray(mLine.ssrcGroups)) {\\r\\n            for (const group of mLine.ssrcGroups) {\\r\\n                if (typeof group.semantics !== 'undefined'\\r\\n                    && typeof group.ssrcs !== 'undefined') {\\r\\n                    // Parse SSRCs and store as numbers\\r\\n                    const groupSSRCs\\r\\n                        = group.ssrcs.split(' ').map(\\r\\n                            ssrcStr => parseInt(ssrcStr, 10));\\r\\n                    const primarySSRC = groupSSRCs[0];\\r\\n\\r\\n                    // Note that group.semantics is already present\\r\\n\\r\\n                    group.ssrcs = groupSSRCs;\\r\\n\\r\\n                    // eslint-disable-next-line max-depth\\r\\n                    if (!groupsMap.has(primarySSRC)) {\\r\\n                        groupsMap.set(primarySSRC, []);\\r\\n                    }\\r\\n                    groupsMap.get(primarySSRC).push(group);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        for (const ssrc of mLine.ssrcs) {\\r\\n            if (ssrc.attribute !== 'msid') {\\r\\n                continue; // eslint-disable-line no-continue\\r\\n            }\\r\\n\\r\\n            const msid = ssrc.value;\\r\\n            let ssrcInfo = ssrcMap.get(msid);\\r\\n\\r\\n            if (!ssrcInfo) {\\r\\n                ssrcInfo = {\\r\\n                    ssrcs: [],\\r\\n                    groups: [],\\r\\n                    msid\\r\\n                };\\r\\n                ssrcMap.set(msid, ssrcInfo);\\r\\n            }\\r\\n\\r\\n            const ssrcNumber = ssrc.id;\\r\\n\\r\\n            ssrcInfo.ssrcs.push(ssrcNumber);\\r\\n\\r\\n            if (groupsMap.has(ssrcNumber)) {\\r\\n                const ssrcGroups = groupsMap.get(ssrcNumber);\\r\\n\\r\\n                for (const group of ssrcGroups) {\\r\\n                    ssrcInfo.groups.push(group);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return ssrcMap;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Takes a SessionDescription object and returns a \\\"normalized\\\" version.\\r\\n * Currently it takes care of ordering the a=ssrc lines and denoting receive\\r\\n * only SSRCs.\\r\\n */\\r\\nconst normalizePlanB = function(desc) {\\r\\n    if (typeof desc !== 'object' || desc === null\\r\\n        || typeof desc.sdp !== 'string') {\\r\\n        logger.warn('An empty description was passed as an argument.');\\r\\n\\r\\n        return desc;\\r\\n    }\\r\\n\\r\\n    // eslint-disable-next-line no-shadow\\r\\n    const transform = require('sdp-transform');\\r\\n    const session = transform.parse(desc.sdp);\\r\\n\\r\\n    if (typeof session !== 'undefined'\\r\\n            && typeof session.media !== 'undefined'\\r\\n            && Array.isArray(session.media)) {\\r\\n        session.media.forEach(mLine => {\\r\\n\\r\\n            // Chrome appears to be picky about the order in which a=ssrc lines\\r\\n            // are listed in an m-line when rtx is enabled (and thus there are\\r\\n            // a=ssrc-group lines with FID semantics). Specifically if we have\\r\\n            // \\\"a=ssrc-group:FID S1 S2\\\" and the \\\"a=ssrc:S2\\\" lines appear before\\r\\n            // the \\\"a=ssrc:S1\\\" lines, SRD fails.\\r\\n            // So, put SSRC which appear as the first SSRC in an FID ssrc-group\\r\\n            // first.\\r\\n            const firstSsrcs = [];\\r\\n            const newSsrcLines = [];\\r\\n\\r\\n            if (typeof mLine.ssrcGroups !== 'undefined'\\r\\n                && Array.isArray(mLine.ssrcGroups)) {\\r\\n                mLine.ssrcGroups.forEach(group => {\\r\\n                    if (typeof group.semantics !== 'undefined'\\r\\n                        && group.semantics === 'FID') {\\r\\n                        if (typeof group.ssrcs !== 'undefined') {\\r\\n                            firstSsrcs.push(Number(group.ssrcs.split(' ')[0]));\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n\\r\\n            if (Array.isArray(mLine.ssrcs)) {\\r\\n                let i;\\r\\n\\r\\n                for (i = 0; i < mLine.ssrcs.length; i++) {\\r\\n                    if (typeof mLine.ssrcs[i] === 'object'\\r\\n                        && typeof mLine.ssrcs[i].id !== 'undefined'\\r\\n                        && firstSsrcs.indexOf(mLine.ssrcs[i].id) >= 0) {\\r\\n                        newSsrcLines.push(mLine.ssrcs[i]);\\r\\n                        delete mLine.ssrcs[i];\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                for (i = 0; i < mLine.ssrcs.length; i++) {\\r\\n                    if (typeof mLine.ssrcs[i] !== 'undefined') {\\r\\n                        newSsrcLines.push(mLine.ssrcs[i]);\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                mLine.ssrcs = replaceDefaultUnifiedPlanMsid(newSsrcLines);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    const resStr = transform.write(session);\\r\\n\\r\\n\\r\\n    return new RTCSessionDescription({\\r\\n        type: desc.type,\\r\\n        sdp: resStr\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Unified plan differentiates a remote track not associated with a stream using\\r\\n * the msid \\\"-\\\", which can incorrectly trigger an onaddstream event in plan-b.\\r\\n * For jitsi, these tracks are actually receive-only ssrcs. To prevent\\r\\n * onaddstream from firing, remove the ssrcs with msid \\\"-\\\" except the cname\\r\\n * line. Normally the ssrcs are not used by the client, as the bridge controls\\r\\n * media flow, but keep one reference to the ssrc for the p2p case.\\r\\n *\\r\\n * @param {Array<Object>} ssrcLines - The ssrc lines from a remote description.\\r\\n * @private\\r\\n * @returns {Array<Object>} ssrcLines with removed lines referencing msid \\\"-\\\".\\r\\n */\\r\\nfunction replaceDefaultUnifiedPlanMsid(ssrcLines = []) {\\r\\n    if (!browser.isChrome() || !browser.isVersionGreaterThan(70)) {\\r\\n        return ssrcLines;\\r\\n    }\\r\\n\\r\\n    let filteredLines = [ ...ssrcLines ];\\r\\n\\r\\n    const problematicSsrcIds = ssrcLines.filter(ssrcLine =>\\r\\n        ssrcLine.attribute === 'mslabel' && ssrcLine.value === '-')\\r\\n        .map(ssrcLine => ssrcLine.id);\\r\\n\\r\\n    problematicSsrcIds.forEach(ssrcId => {\\r\\n        // Find the cname which is to be modified and left in.\\r\\n        const cnameLine = filteredLines.find(line =>\\r\\n            line.id === ssrcId && line.attribute === 'cname');\\r\\n\\r\\n        cnameLine.value = `recvonly-${ssrcId}`;\\r\\n\\r\\n        // Remove all of lines for the ssrc.\\r\\n        filteredLines\\r\\n            = filteredLines.filter(line => line.id !== ssrcId);\\r\\n\\r\\n        // But re-add the cname line so there is a reference kept to the ssrc\\r\\n        // in the SDP.\\r\\n        filteredLines.push(cnameLine);\\r\\n    });\\r\\n\\r\\n    return filteredLines;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Makes sure that both audio and video directions are configured as 'sendrecv'.\\r\\n * @param {Object} localDescription the SDP object as defined by WebRTC.\\r\\n * @param {object} options <tt>TracablePeerConnection</tt> config options.\\r\\n */\\r\\nconst enforceSendRecv = function(localDescription, options) {\\r\\n    if (!localDescription) {\\r\\n        throw new Error('No local description passed in.');\\r\\n    }\\r\\n\\r\\n    const transformer = new SdpTransformWrap(localDescription.sdp);\\r\\n    const audioMedia = transformer.selectMedia('audio');\\r\\n    let changed = false;\\r\\n\\r\\n    if (audioMedia && audioMedia.direction !== 'sendrecv') {\\r\\n        if (options.startSilent) {\\r\\n            audioMedia.direction = 'inactive';\\r\\n        } else {\\r\\n            audioMedia.direction = 'sendrecv';\\r\\n        }\\r\\n\\r\\n        changed = true;\\r\\n    }\\r\\n\\r\\n    const videoMedia = transformer.selectMedia('video');\\r\\n\\r\\n    if (videoMedia && videoMedia.direction !== 'sendrecv') {\\r\\n        videoMedia.direction = 'sendrecv';\\r\\n        changed = true;\\r\\n    }\\r\\n\\r\\n    if (changed) {\\r\\n        return new RTCSessionDescription({\\r\\n            type: localDescription.type,\\r\\n            sdp: transformer.toRawSDP()\\r\\n        });\\r\\n    }\\r\\n\\r\\n    return localDescription;\\r\\n};\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param {JitsiLocalTrack} localTrack\\r\\n */\\r\\nTraceablePeerConnection.prototype.getLocalSSRC = function(localTrack) {\\r\\n    const ssrcInfo = this._getSSRC(localTrack.rtcId);\\r\\n\\r\\n    return ssrcInfo && ssrcInfo.ssrcs[0];\\r\\n};\\r\\n\\r\\n/**\\r\\n * When doing unified plan simulcast, we'll have a set of ssrcs with the\\r\\n * same msid but no ssrc-group, since unified plan signals the simulcast\\r\\n * group via the a=simulcast line.  Unfortunately, Jicofo will complain\\r\\n * if it sees ssrcs with matching msids but no ssrc-group, so we'll inject\\r\\n * an ssrc-group line to make Jicofo happy.\\r\\n * NOTE: unlike plan B simulcast, the ssrcs in this inject ssrc-group will\\r\\n * NOT necessarily be in order of quality (low to high) because:\\r\\n * a) when translating between unified plan and plan b the order of the ssrcs\\r\\n * is not preserved and\\r\\n * b) it isn't guaranteed that firefox will give them to us in order to begin\\r\\n * with\\r\\n * @param desc A session description object (with 'type' and 'sdp' fields)\\r\\n * @return A session description object with its sdp field modified to\\r\\n * contain an inject ssrc-group for simulcast\\r\\n */\\r\\nTraceablePeerConnection.prototype._injectSsrcGroupForUnifiedSimulcast\\r\\n    = function(desc) {\\r\\n        const sdp = transform.parse(desc.sdp);\\r\\n        const video = sdp.media.find(mline => mline.type === 'video');\\r\\n\\r\\n        if (video.simulcast_03) {\\r\\n            const ssrcs = [];\\r\\n\\r\\n            video.ssrcs.forEach(ssrc => {\\r\\n                if (ssrc.attribute === 'msid') {\\r\\n                    ssrcs.push(ssrc.id);\\r\\n                }\\r\\n            });\\r\\n            video.ssrcGroups = video.ssrcGroups || [];\\r\\n            if (video.ssrcGroups.find(group => group.semantics === 'SIM')) {\\r\\n                // Group already exists, no need to do anything\\r\\n                return desc;\\r\\n            }\\r\\n            video.ssrcGroups.push({\\r\\n                semantics: 'SIM',\\r\\n                ssrcs: ssrcs.join(' ')\\r\\n            });\\r\\n        }\\r\\n\\r\\n        return new RTCSessionDescription({\\r\\n            type: desc.type,\\r\\n            sdp: transform.write(sdp)\\r\\n        });\\r\\n    };\\r\\n\\r\\n/* eslint-disable-next-line vars-on-top */\\r\\nconst getters = {\\r\\n    signalingState() {\\r\\n        return this.peerconnection.signalingState;\\r\\n    },\\r\\n    iceConnectionState() {\\r\\n        return this.peerconnection.iceConnectionState;\\r\\n    },\\r\\n    localDescription() {\\r\\n        let desc = this.peerconnection.localDescription;\\r\\n\\r\\n        if (!desc) {\\r\\n            logger.debug('getLocalDescription no localDescription found');\\r\\n\\r\\n            return {};\\r\\n        }\\r\\n\\r\\n        this.trace('getLocalDescription::preTransform', dumpSDP(desc));\\r\\n\\r\\n        // if we're running on FF, transform to Plan B first.\\r\\n        if (browser.usesUnifiedPlan()) {\\r\\n            desc = this.interop.toPlanB(desc);\\r\\n            this.trace('getLocalDescription::postTransform (Plan B)',\\r\\n                dumpSDP(desc));\\r\\n\\r\\n            desc = this._injectSsrcGroupForUnifiedSimulcast(desc);\\r\\n            this.trace('getLocalDescription::postTransform (inject ssrc group)',\\r\\n                dumpSDP(desc));\\r\\n        }\\r\\n\\r\\n        if (browser.doesVideoMuteByStreamRemove()) {\\r\\n            desc = this.localSdpMunger.maybeAddMutedLocalVideoTracksToSDP(desc);\\r\\n            logger.debug(\\r\\n                'getLocalDescription::postTransform (munge local SDP)', desc);\\r\\n        }\\r\\n\\r\\n        // What comes out of this getter will be signalled over Jingle to\\r\\n        // the other peer, so we need to make sure the media direction is\\r\\n        // 'sendrecv' because we won't change the direction later and don't want\\r\\n        // the other peer to think we can't send or receive.\\r\\n        //\\r\\n        // Note that the description we set in chrome does have the accurate\\r\\n        // direction (e.g. 'recvonly'), since that is technically what is\\r\\n        // happening (check setLocalDescription impl).\\r\\n        desc = enforceSendRecv(desc, this.options);\\r\\n\\r\\n        // See the method's doc for more info about this transformation.\\r\\n        desc = this.localSdpMunger.transformStreamIdentifiers(desc);\\r\\n\\r\\n        return desc;\\r\\n    },\\r\\n    remoteDescription() {\\r\\n        let desc = this.peerconnection.remoteDescription;\\r\\n\\r\\n        this.trace('getRemoteDescription::preTransform', dumpSDP(desc));\\r\\n\\r\\n        // if we're running on FF, transform to Plan B first.\\r\\n        if (browser.usesUnifiedPlan()) {\\r\\n            desc = this.interop.toPlanB(desc);\\r\\n            this.trace(\\r\\n                'getRemoteDescription::postTransform (Plan B)', dumpSDP(desc));\\r\\n        }\\r\\n\\r\\n        return desc || {};\\r\\n    }\\r\\n};\\r\\n\\r\\nObject.keys(getters).forEach(prop => {\\r\\n    Object.defineProperty(\\r\\n        TraceablePeerConnection.prototype,\\r\\n        prop, {\\r\\n            get: getters[prop]\\r\\n        }\\r\\n    );\\r\\n});\\r\\n\\r\\nTraceablePeerConnection.prototype._getSSRC = function(rtcId) {\\r\\n    return this.localSSRCs.get(rtcId);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Add {@link JitsiLocalTrack} to this TPC.\\r\\n * @param {JitsiLocalTrack} track\\r\\n */\\r\\nTraceablePeerConnection.prototype.addTrack = function(track) {\\r\\n    const rtcId = track.rtcId;\\r\\n\\r\\n    logger.info(`add ${track} to: ${this}`);\\r\\n\\r\\n    if (this.localTracks.has(rtcId)) {\\r\\n        logger.error(`${track} is already in ${this}`);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    this.localTracks.set(rtcId, track);\\r\\n\\r\\n    const webrtcStream = track.getOriginalStream();\\r\\n\\r\\n    if (webrtcStream) {\\r\\n        this._addStream(webrtcStream);\\r\\n\\r\\n    // It's not ok for a track to not have a WebRTC stream if:\\r\\n    } else if (!browser.doesVideoMuteByStreamRemove()\\r\\n                || track.isAudioTrack()\\r\\n                || (track.isVideoTrack() && !track.isMuted())) {\\r\\n        logger.error(`${this} no WebRTC stream for: ${track}`);\\r\\n    }\\r\\n\\r\\n    // Muted video tracks do not have WebRTC stream\\r\\n    if (browser.doesVideoMuteByStreamRemove()\\r\\n            && track.isVideoTrack() && track.isMuted()) {\\r\\n        const ssrcInfo = this.generateNewStreamSSRCInfo(track);\\r\\n\\r\\n        this.sdpConsistency.setPrimarySsrc(ssrcInfo.ssrcs[0]);\\r\\n        const simGroup\\r\\n            = ssrcInfo.groups.find(groupInfo => groupInfo.semantics === 'SIM');\\r\\n\\r\\n        if (simGroup) {\\r\\n            this.simulcast.setSsrcCache(simGroup.ssrcs);\\r\\n        }\\r\\n        const fidGroups\\r\\n            = ssrcInfo.groups.filter(\\r\\n                groupInfo => groupInfo.semantics === 'FID');\\r\\n\\r\\n        if (fidGroups) {\\r\\n            const rtxSsrcMapping = new Map();\\r\\n\\r\\n            fidGroups.forEach(fidGroup => {\\r\\n                const primarySsrc = fidGroup.ssrcs[0];\\r\\n                const rtxSsrc = fidGroup.ssrcs[1];\\r\\n\\r\\n                rtxSsrcMapping.set(primarySsrc, rtxSsrc);\\r\\n            });\\r\\n            this.rtxModifier.setSsrcCache(rtxSsrcMapping);\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds local track as part of the unmute operation.\\r\\n * @param {JitsiLocalTrack} track the track to be added as part of the unmute\\r\\n * operation\\r\\n * @return {boolean} <tt>true</tt> if the state of underlying PC has changed and\\r\\n * the renegotiation is required or <tt>false</tt> otherwise.\\r\\n */\\r\\nTraceablePeerConnection.prototype.addTrackUnmute = function(track) {\\r\\n    if (!this._assertTrackBelongs('addTrackUnmute', track)) {\\r\\n        // Abort\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    logger.info(`Adding ${track} as unmute to ${this}`);\\r\\n    const webRtcStream = track.getOriginalStream();\\r\\n\\r\\n    if (!webRtcStream) {\\r\\n        logger.error(\\r\\n            `Unable to add ${track} as unmute to ${this} - no WebRTC stream`);\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n    this._addStream(webRtcStream);\\r\\n\\r\\n    return true;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds WebRTC media stream to the underlying PeerConnection\\r\\n * @param {MediaStream} mediaStream\\r\\n * @private\\r\\n */\\r\\nTraceablePeerConnection.prototype._addStream = function(mediaStream) {\\r\\n    this.peerconnection.addStream(mediaStream);\\r\\n    this._addedStreams.push(mediaStream);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes WebRTC media stream from the underlying PeerConection\\r\\n * @param {MediaStream} mediaStream\\r\\n */\\r\\nTraceablePeerConnection.prototype._removeStream = function(mediaStream) {\\r\\n    if (browser.supportsRtpSender()) {\\r\\n        this._handleSenderRemoveStream(mediaStream);\\r\\n    } else {\\r\\n        this.peerconnection.removeStream(mediaStream);\\r\\n    }\\r\\n    this._addedStreams\\r\\n        = this._addedStreams.filter(stream => stream !== mediaStream);\\r\\n};\\r\\n\\r\\n/**\\r\\n * This method when called will check if given <tt>localTrack</tt> belongs to\\r\\n * this TPC (that it has been previously added using {@link addTrack}). If the\\r\\n * track does not belong an error message will be logged.\\r\\n * @param {string} methodName the method name that will be logged in an error\\r\\n * message\\r\\n * @param {JitsiLocalTrack} localTrack\\r\\n * @return {boolean} <tt>true</tt> if given local track belongs to this TPC or\\r\\n * <tt>false</tt> otherwise.\\r\\n * @private\\r\\n */\\r\\nTraceablePeerConnection.prototype._assertTrackBelongs = function(\\r\\n        methodName,\\r\\n        localTrack) {\\r\\n    const doesBelong = this.localTracks.has(localTrack.rtcId);\\r\\n\\r\\n    if (!doesBelong) {\\r\\n        logger.error(\\r\\n            `${methodName}: ${localTrack} does not belong to ${this}`);\\r\\n    }\\r\\n\\r\\n    return doesBelong;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Tells if the given WebRTC <tt>MediaStream</tt> has been added to\\r\\n * the underlying WebRTC PeerConnection.\\r\\n * @param {MediaStream} mediaStream\\r\\n * @returns {boolean}\\r\\n */\\r\\nTraceablePeerConnection.prototype.isMediaStreamInPc = function(mediaStream) {\\r\\n    return this._addedStreams.indexOf(mediaStream) > -1;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Remove local track from this TPC.\\r\\n * @param {JitsiLocalTrack} localTrack the track to be removed from this TPC.\\r\\n *\\r\\n * FIXME It should probably remove a boolean just like {@link removeTrackMute}\\r\\n *       The same applies to addTrack.\\r\\n */\\r\\nTraceablePeerConnection.prototype.removeTrack = function(localTrack) {\\r\\n    const webRtcStream = localTrack.getOriginalStream();\\r\\n\\r\\n    this.trace(\\r\\n        'removeStream',\\r\\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : undefined);\\r\\n\\r\\n    if (!this._assertTrackBelongs('removeStream', localTrack)) {\\r\\n        // Abort - nothing to be done here\\r\\n        return;\\r\\n    }\\r\\n    this.localTracks.delete(localTrack.rtcId);\\r\\n    this.localSSRCs.delete(localTrack.rtcId);\\r\\n\\r\\n    if (webRtcStream) {\\r\\n        if (browser.supportsRtpSender()) {\\r\\n            this._handleSenderRemoveStream(webRtcStream);\\r\\n        } else {\\r\\n            this.peerconnection.removeStream(webRtcStream);\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the sender corresponding to the given MediaStream.\\r\\n *\\r\\n * @param {MediaStream} stream - The media stream used for the search.\\r\\n * @returns {RTPSender|undefined} - The found sender or undefined if no sender\\r\\n * was found.\\r\\n */\\r\\nTraceablePeerConnection.prototype.findSenderByStream = function(stream) {\\r\\n    const track = stream.getTracks()[0];\\r\\n\\r\\n    if (!track) {\\r\\n        logger.error('Cannot find sender: no tracks.');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // Find the right sender (for audio or video)\\r\\n    return this.peerconnection.getSenders().find(s => s.track === track);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> from the peer connection.\\r\\n * Either <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\\r\\n * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\\r\\n * <tt>oldTrack</tt>\\r\\n *\\r\\n * @param {JitsiLocalTrack|null} oldTrack - The current track in use to be\\r\\n * replaced\\r\\n * @param {JitsiLocalTrack|null} newTrack - The new track to use\\r\\n * @returns {Promise<boolean>} - If the promise resolves with true,\\r\\n * renegotiation will be needed. Otherwise no renegotiation is needed.\\r\\n */\\r\\nTraceablePeerConnection.prototype.replaceTrack = function(oldTrack, newTrack) {\\r\\n    if (browser.supportsRtpSender() && oldTrack && newTrack) {\\r\\n        // Add and than remove stream in FF leads to wrong local SDP. In order\\r\\n        // to workaround the issue we need to use sender.replaceTrack().\\r\\n        const sender = this.findSenderByStream(oldTrack.getOriginalStream());\\r\\n        const stream = newTrack.getOriginalStream();\\r\\n\\r\\n        if (sender && stream) {\\r\\n            const track = stream.getTracks()[0];\\r\\n\\r\\n            if (track) {\\r\\n                return sender.replaceTrack(track, stream).then(() => {\\r\\n                    // Since there is no need to do renegotiations we need to\\r\\n                    // fix all ssrc-msid mappings here.\\r\\n                    // NOTE: after sender.replaceTrack the sdp will remain the\\r\\n                    // same but the stream attach to the new JitsiLocalTrack\\r\\n                    // will have different msid. Luckily on FF we are not doing\\r\\n                    // all the transformations related to video mute.\\r\\n\\r\\n                    const ssrc = this.localSSRCs.get(oldTrack.rtcId);\\r\\n\\r\\n                    this.localTracks.delete(oldTrack.rtcId);\\r\\n                    this.localSSRCs.delete(oldTrack.rtcId);\\r\\n                    this._addedStreams\\r\\n                        = this._addedStreams.filter(s => s !== stream);\\r\\n\\r\\n                    this.localTracks.set(newTrack.rtcId, newTrack);\\r\\n\\r\\n                    // Override the msid of JitsiLocalTrack in order to be\\r\\n                    // consistent with the SDP values.\\r\\n                    newTrack.storedMSID = oldTrack.storedMSID;\\r\\n                    this._addedStreams.push(stream);\\r\\n\\r\\n                    this.localSSRCs.set(newTrack.rtcId, ssrc);\\r\\n                    this.eventEmitter.emit(\\r\\n                        RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\\r\\n                        newTrack,\\r\\n                        extractPrimarySSRC(ssrc));\\r\\n\\r\\n                    return false;\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (oldTrack) {\\r\\n        this.removeTrack(oldTrack);\\r\\n    }\\r\\n    if (newTrack) {\\r\\n        this.addTrack(newTrack);\\r\\n    }\\r\\n\\r\\n    return Promise.resolve(true);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes local track as part of the mute operation.\\r\\n * @param {JitsiLocalTrack} localTrack the local track to be remove as part of\\r\\n * the mute operation.\\r\\n * @return {boolean} <tt>true</tt> if the underlying PeerConnection's state has\\r\\n * changed and the renegotiation is required or <tt>false</tt> otherwise.\\r\\n */\\r\\nTraceablePeerConnection.prototype.removeTrackMute = function(localTrack) {\\r\\n    const webRtcStream = localTrack.getOriginalStream();\\r\\n\\r\\n    this.trace(\\r\\n        'removeStreamMute',\\r\\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : null);\\r\\n\\r\\n    if (!this._assertTrackBelongs('removeStreamMute', localTrack)) {\\r\\n        // Abort - nothing to be done here\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    if (webRtcStream) {\\r\\n        logger.info(\\r\\n            `Removing ${localTrack} as mute from ${this}`);\\r\\n        this._removeStream(webRtcStream);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    logger.error(`removeStreamMute - no WebRTC stream for ${localTrack}`);\\r\\n\\r\\n    return false;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Remove stream handling for browsers supporting RTPSender\\r\\n * @param stream: webrtc media stream\\r\\n */\\r\\nTraceablePeerConnection.prototype._handleSenderRemoveStream = function(\\r\\n        stream) {\\r\\n    if (!stream) {\\r\\n        // There is nothing to be changed\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const sender = this.findSenderByStream(stream);\\r\\n\\r\\n    if (sender) {\\r\\n        this.peerconnection.removeTrack(sender);\\r\\n    } else {\\r\\n        logger.log('Cannot remove tracks: no RTPSender.');\\r\\n    }\\r\\n};\\r\\n\\r\\nTraceablePeerConnection.prototype.createDataChannel = function(label, opts) {\\r\\n    this.trace('createDataChannel', label, opts);\\r\\n\\r\\n    return this.peerconnection.createDataChannel(label, opts);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Ensures that the simulcast ssrc-group appears after any other ssrc-groups\\r\\n * in the SDP so that simulcast is properly activated.\\r\\n *\\r\\n * @param {Object} localSdp the WebRTC session description instance for\\r\\n * the local description.\\r\\n * @private\\r\\n */\\r\\nTraceablePeerConnection.prototype._ensureSimulcastGroupIsLast = function(\\r\\n        localSdp) {\\r\\n    let sdpStr = localSdp.sdp;\\r\\n\\r\\n    const videoStartIndex = sdpStr.indexOf('m=video');\\r\\n    const simStartIndex = sdpStr.indexOf('a=ssrc-group:SIM', videoStartIndex);\\r\\n    let otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\\r\\n\\r\\n    if (simStartIndex === -1\\r\\n        || otherStartIndex === -1\\r\\n        || otherStartIndex === simStartIndex) {\\r\\n        return localSdp;\\r\\n    }\\r\\n\\r\\n    const simEndIndex = sdpStr.indexOf('\\\\r\\\\n', simStartIndex);\\r\\n    const simStr = sdpStr.substring(simStartIndex, simEndIndex + 2);\\r\\n\\r\\n    sdpStr = sdpStr.replace(simStr, '');\\r\\n    otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\\r\\n    const otherEndIndex = sdpStr.indexOf('\\\\r\\\\n', otherStartIndex);\\r\\n    const sdpHead = sdpStr.slice(0, otherEndIndex);\\r\\n    const simStrTrimmed = simStr.trim();\\r\\n    const sdpTail = sdpStr.slice(otherEndIndex);\\r\\n\\r\\n    sdpStr = `${sdpHead}\\\\r\\\\n${simStrTrimmed}${sdpTail}`;\\r\\n\\r\\n    return new RTCSessionDescription({\\r\\n        type: localSdp.type,\\r\\n        sdp: sdpStr\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Will adjust audio and video media direction in the given SDP object to\\r\\n * reflect the current status of the {@link audioTransferActive} and\\r\\n * {@link videoTransferActive} flags.\\r\\n * @param {Object} localDescription the WebRTC session description instance for\\r\\n * the local description.\\r\\n * @private\\r\\n */\\r\\nTraceablePeerConnection.prototype._adjustLocalMediaDirection = function(\\r\\n        localDescription) {\\r\\n    const transformer = new SdpTransformWrap(localDescription.sdp);\\r\\n    let modifiedDirection = false;\\r\\n    const audioMedia = transformer.selectMedia('audio');\\r\\n\\r\\n    if (audioMedia) {\\r\\n        const desiredAudioDirection\\r\\n            = this._getDesiredMediaDirection(MediaType.AUDIO);\\r\\n\\r\\n        if (audioMedia.direction !== desiredAudioDirection) {\\r\\n            audioMedia.direction = desiredAudioDirection;\\r\\n            logger.info(\\r\\n                `Adjusted local audio direction to ${desiredAudioDirection}`);\\r\\n            modifiedDirection = true;\\r\\n        }\\r\\n    } else {\\r\\n        logger.warn('No \\\"audio\\\" media found int the local description');\\r\\n    }\\r\\n\\r\\n    const videoMedia = transformer.selectMedia('video');\\r\\n\\r\\n    if (videoMedia) {\\r\\n        const desiredVideoDirection\\r\\n            = this._getDesiredMediaDirection(MediaType.VIDEO);\\r\\n\\r\\n        if (videoMedia.direction !== desiredVideoDirection) {\\r\\n            videoMedia.direction = desiredVideoDirection;\\r\\n            logger.info(\\r\\n                `Adjusted local video direction to ${desiredVideoDirection}`);\\r\\n            modifiedDirection = true;\\r\\n        }\\r\\n    } else {\\r\\n        logger.warn('No \\\"video\\\" media found in the local description');\\r\\n    }\\r\\n\\r\\n    if (modifiedDirection) {\\r\\n        return new RTCSessionDescription({\\r\\n            type: localDescription.type,\\r\\n            sdp: transformer.toRawSDP()\\r\\n        });\\r\\n    }\\r\\n\\r\\n    return localDescription;\\r\\n};\\r\\n\\r\\nTraceablePeerConnection.prototype.setLocalDescription = function(description) {\\r\\n    let localSdp = description;\\r\\n\\r\\n    this.trace('setLocalDescription::preTransform', dumpSDP(localSdp));\\r\\n\\r\\n    if (this.options.disableH264 || this.options.preferH264) {\\r\\n        const parsedSdp = transform.parse(localSdp.sdp);\\r\\n        const videoMLine = parsedSdp.media.find(m => m.type === 'video');\\r\\n\\r\\n        if (this.options.disableH264) {\\r\\n            SDPUtil.stripVideoCodec(videoMLine, 'h264');\\r\\n        } else {\\r\\n            SDPUtil.preferVideoCodec(videoMLine, 'h264');\\r\\n        }\\r\\n\\r\\n        localSdp = new RTCSessionDescription({\\r\\n            type: localSdp.type,\\r\\n            sdp: transform.write(parsedSdp)\\r\\n        });\\r\\n\\r\\n        this.trace('setLocalDescription::postTransform (H264)',\\r\\n            dumpSDP(localSdp));\\r\\n    }\\r\\n\\r\\n    localSdp = this._adjustLocalMediaDirection(localSdp);\\r\\n\\r\\n    localSdp = this._ensureSimulcastGroupIsLast(localSdp);\\r\\n\\r\\n    // if we're using unified plan, transform to it first.\\r\\n    if (browser.usesUnifiedPlan()) {\\r\\n        localSdp = this.interop.toUnifiedPlan(localSdp);\\r\\n        this.trace(\\r\\n            'setLocalDescription::postTransform (Unified Plan)',\\r\\n            dumpSDP(localSdp));\\r\\n    }\\r\\n\\r\\n    return new Promise((resolve, reject) => {\\r\\n        this.peerconnection.setLocalDescription(localSdp)\\r\\n            .then(() => {\\r\\n                this.trace('setLocalDescriptionOnSuccess');\\r\\n                const localUfrag = SDPUtil.getUfrag(localSdp.sdp);\\r\\n\\r\\n                if (localUfrag !== this.localUfrag) {\\r\\n                    this.localUfrag = localUfrag;\\r\\n                    this.eventEmitter.emit(\\r\\n                        RTCEvents.LOCAL_UFRAG_CHANGED, this, localUfrag);\\r\\n                }\\r\\n                resolve();\\r\\n            }, err => {\\r\\n                this.trace('setLocalDescriptionOnFailure', err);\\r\\n                this.eventEmitter.emit(\\r\\n                    RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\\r\\n                    err, this);\\r\\n                reject(err);\\r\\n            });\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Enables/disables audio media transmission on this peer connection. When\\r\\n * disabled the SDP audio media direction in the local SDP will be adjusted to\\r\\n * 'inactive' which means that no data will be sent nor accepted, but\\r\\n * the connection should be kept alive.\\r\\n * @param {boolean} active <tt>true</tt> to enable audio media transmission or\\r\\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\\r\\n * no effect.\\r\\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\\r\\n * needs to be executed in order for the changes to take effect or\\r\\n * <tt>false</tt> if the given value was the same as the previous one.\\r\\n * @public\\r\\n */\\r\\nTraceablePeerConnection.prototype.setAudioTransferActive = function(active) {\\r\\n    logger.debug(`${this} audio transfer active: ${active}`);\\r\\n    const changed = this.audioTransferActive !== active;\\r\\n\\r\\n    this.audioTransferActive = active;\\r\\n\\r\\n    return changed;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Takes in a *unified plan* offer and inserts the appropriate\\r\\n * parameters for adding simulcast receive support.\\r\\n * @param {Object} desc - A session description object\\r\\n * @param {String} desc.type - the type (offer/answer)\\r\\n * @param {String} desc.sdp - the sdp content\\r\\n *\\r\\n * @return {Object} A session description (same format as above) object\\r\\n * with its sdp field modified to advertise simulcast receive support\\r\\n */\\r\\nTraceablePeerConnection.prototype._insertUnifiedPlanSimulcastReceive\\r\\n    = function(desc) {\\r\\n        const sdp = transform.parse(desc.sdp);\\r\\n        const video = sdp.media.find(mline => mline.type === 'video');\\r\\n\\r\\n        // In order of lowest to highest spatial quality\\r\\n        video.rids = [\\r\\n            {\\r\\n                id: SIM_LAYER_1_RID,\\r\\n                direction: 'recv'\\r\\n            },\\r\\n            {\\r\\n                id: SIM_LAYER_2_RID,\\r\\n                direction: 'recv'\\r\\n            },\\r\\n            {\\r\\n                id: SIM_LAYER_3_RID,\\r\\n                direction: 'recv'\\r\\n            }\\r\\n        ];\\r\\n        // eslint-disable-next-line camelcase\\r\\n        video.simulcast_03 = {\\r\\n            value: `recv rid=${SIM_LAYER_RIDS.join(';')}`\\r\\n        };\\r\\n\\r\\n        return new RTCSessionDescription({\\r\\n            type: desc.type,\\r\\n            sdp: transform.write(sdp)\\r\\n        });\\r\\n    };\\r\\n\\r\\nTraceablePeerConnection.prototype.setRemoteDescription = function(description) {\\r\\n    this.trace('setRemoteDescription::preTransform', dumpSDP(description));\\r\\n\\r\\n    // TODO the focus should squeze or explode the remote simulcast\\r\\n    // eslint-disable-next-line no-param-reassign\\r\\n    description = this.simulcast.mungeRemoteDescription(description);\\r\\n    this.trace(\\r\\n        'setRemoteDescription::postTransform (simulcast)',\\r\\n        dumpSDP(description));\\r\\n\\r\\n    if (this.options.preferH264) {\\r\\n        const parsedSdp = transform.parse(description.sdp);\\r\\n        const videoMLine = parsedSdp.media.find(m => m.type === 'video');\\r\\n\\r\\n        SDPUtil.preferVideoCodec(videoMLine, 'h264');\\r\\n\\r\\n        // eslint-disable-next-line no-param-reassign\\r\\n        description = new RTCSessionDescription({\\r\\n            type: description.type,\\r\\n            sdp: transform.write(parsedSdp)\\r\\n        });\\r\\n    }\\r\\n\\r\\n    // If the browser uses unified plan, transform to it first\\r\\n    if (browser.usesUnifiedPlan()) {\\r\\n        // eslint-disable-next-line no-param-reassign\\r\\n        description = new RTCSessionDescription({\\r\\n            type: description.type,\\r\\n            sdp: this.rtxModifier.stripRtx(description.sdp)\\r\\n        });\\r\\n\\r\\n        this.trace(\\r\\n            'setRemoteDescription::postTransform (stripRtx)',\\r\\n            dumpSDP(description));\\r\\n\\r\\n        // eslint-disable-next-line no-param-reassign\\r\\n        description = this.interop.toUnifiedPlan(description);\\r\\n        this.trace(\\r\\n            'setRemoteDescription::postTransform (Plan A)',\\r\\n            dumpSDP(description));\\r\\n\\r\\n        if (this.isSimulcastOn()) {\\r\\n            // eslint-disable-next-line no-param-reassign\\r\\n            description = this._insertUnifiedPlanSimulcastReceive(description);\\r\\n            this.trace(\\r\\n                'setRemoteDescription::postTransform (sim receive)',\\r\\n                dumpSDP(description));\\r\\n        }\\r\\n    } else {\\r\\n        // Plan B\\r\\n        // eslint-disable-next-line no-param-reassign\\r\\n        description = normalizePlanB(description);\\r\\n    }\\r\\n\\r\\n    // Safari WebRTC errors when no supported video codec is found in the offer.\\r\\n    // To prevent the error, inject H264 into the video mLine.\\r\\n    if (browser.isSafariWithWebrtc() && !browser.isSafariWithVP8()) {\\r\\n        logger.debug('Maybe injecting H264 into the remote description');\\r\\n\\r\\n        // eslint-disable-next-line no-param-reassign\\r\\n        description = this._injectH264IfNotPresent(description);\\r\\n    }\\r\\n\\r\\n    return new Promise((resolve, reject) => {\\r\\n        this.peerconnection.setRemoteDescription(description)\\r\\n            .then(() => {\\r\\n                this.trace('setRemoteDescriptionOnSuccess');\\r\\n                const remoteUfrag = SDPUtil.getUfrag(description.sdp);\\r\\n\\r\\n                if (remoteUfrag !== this.remoteUfrag) {\\r\\n                    this.remoteUfrag = remoteUfrag;\\r\\n                    this.eventEmitter.emit(\\r\\n                        RTCEvents.REMOTE_UFRAG_CHANGED, this, remoteUfrag);\\r\\n                }\\r\\n                resolve();\\r\\n            }, err => {\\r\\n                this.trace('setRemoteDescriptionOnFailure', err);\\r\\n                this.eventEmitter.emit(\\r\\n                    RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\\r\\n                    err,\\r\\n                    this);\\r\\n                reject(err);\\r\\n            });\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Inserts an H264 payload into the description if not already present. This is\\r\\n * need for Safari WebRTC, which errors when no supported video codec is found\\r\\n * in the offer. Related bug reports:\\r\\n * https://bugs.webkit.org/show_bug.cgi?id=173141\\r\\n * https://bugs.chromium.org/p/webrtc/issues/detail?id=4957\\r\\n *\\r\\n * @param {RTCSessionDescription} description - An RTCSessionDescription\\r\\n * to inject with an H264 payload.\\r\\n * @private\\r\\n * @returns {RTCSessionDescription}\\r\\n */\\r\\nTraceablePeerConnection.prototype._injectH264IfNotPresent = function(\\r\\n        description) {\\r\\n    const parsedSdp = transform.parse(description.sdp);\\r\\n    const videoMLine = parsedSdp.media.find(m => m.type === 'video');\\r\\n\\r\\n    if (!videoMLine) {\\r\\n        logger.debug('No videoMLine found, no need to inject H264.');\\r\\n\\r\\n        return description;\\r\\n    }\\r\\n\\r\\n    if (videoMLine.rtp.some(rtp => rtp.codec.toLowerCase() === 'h264')) {\\r\\n        logger.debug('H264 codec found in video mLine, no need to inject.');\\r\\n\\r\\n        return description;\\r\\n    }\\r\\n\\r\\n    const { fmtp, payloads, rtp } = videoMLine;\\r\\n    const payloadsArray = payloads.toString().split(' ');\\r\\n    let dummyPayloadType;\\r\\n\\r\\n    for (let i = 127; i >= 96; i--) {\\r\\n        if (!payloadsArray.includes(i)) {\\r\\n            dummyPayloadType = i;\\r\\n            payloadsArray.push(i);\\r\\n            videoMLine.payloads = payloadsArray.join(' ');\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (typeof dummyPayloadType === 'undefined') {\\r\\n        logger.error('Could not find valid payload type to inject.');\\r\\n\\r\\n        return description;\\r\\n    }\\r\\n\\r\\n    rtp.push({\\r\\n        codec: 'H264',\\r\\n        payload: dummyPayloadType,\\r\\n        rate: 90000\\r\\n    });\\r\\n\\r\\n    fmtp.push({\\r\\n        config: 'level-asymmetry-allowed=1;'\\r\\n            + 'packetization-mode=1;'\\r\\n            + 'profile-level-id=42e01f',\\r\\n        payload: dummyPayloadType\\r\\n    });\\r\\n\\r\\n    logger.debug(\\r\\n        `Injecting H264 payload type ${dummyPayloadType} into video mLine.`);\\r\\n\\r\\n    return new RTCSessionDescription({\\r\\n        type: description.type,\\r\\n        sdp: transform.write(parsedSdp)\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Enables/disables video media transmission on this peer connection. When\\r\\n * disabled the SDP video media direction in the local SDP will be adjusted to\\r\\n * 'inactive' which means that no data will be sent nor accepted, but\\r\\n * the connection should be kept alive.\\r\\n * @param {boolean} active <tt>true</tt> to enable video media transmission or\\r\\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\\r\\n * no effect.\\r\\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\\r\\n * needs to be executed in order for the changes to take effect or\\r\\n * <tt>false</tt> if the given value was the same as the previous one.\\r\\n * @public\\r\\n */\\r\\nTraceablePeerConnection.prototype.setVideoTransferActive = function(active) {\\r\\n    logger.debug(`${this} video transfer active: ${active}`);\\r\\n    const changed = this.videoTransferActive !== active;\\r\\n\\r\\n    this.videoTransferActive = active;\\r\\n\\r\\n    return changed;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Makes the underlying TraceablePeerConnection generate new SSRC for\\r\\n * the recvonly video stream.\\r\\n */\\r\\nTraceablePeerConnection.prototype.generateRecvonlySsrc = function() {\\r\\n    const newSSRC = SDPUtil.generateSsrc();\\r\\n\\r\\n    logger.info(`${this} generated new recvonly SSRC: ${newSSRC}`);\\r\\n    this.sdpConsistency.setPrimarySsrc(newSSRC);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Makes the underlying TraceablePeerConnection forget the current primary video\\r\\n * SSRC.\\r\\n */\\r\\nTraceablePeerConnection.prototype.clearRecvonlySsrc = function() {\\r\\n    logger.info('Clearing primary video SSRC!');\\r\\n    this.sdpConsistency.clearVideoSsrcCache();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Closes underlying WebRTC PeerConnection instance and removes all remote\\r\\n * tracks by emitting {@link RTCEvents.REMOTE_TRACK_REMOVED} for each one of\\r\\n * them.\\r\\n */\\r\\nTraceablePeerConnection.prototype.close = function() {\\r\\n    this.trace('stop');\\r\\n\\r\\n    // Off SignalingEvents\\r\\n    this.signalingLayer.off(\\r\\n        SignalingEvents.PEER_MUTED_CHANGED, this._peerMutedChanged);\\r\\n    this.signalingLayer.off(\\r\\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED, this._peerVideoTypeChanged);\\r\\n\\r\\n    for (const peerTracks of this.remoteTracks.values()) {\\r\\n        for (const remoteTrack of peerTracks.values()) {\\r\\n            this._removeRemoteTrack(remoteTrack);\\r\\n        }\\r\\n    }\\r\\n    this.remoteTracks.clear();\\r\\n\\r\\n    this._addedStreams = [];\\r\\n\\r\\n    if (!this.rtc._removePeerConnection(this)) {\\r\\n        logger.error('RTC._removePeerConnection returned false');\\r\\n    }\\r\\n    if (this.statsinterval !== null) {\\r\\n        window.clearInterval(this.statsinterval);\\r\\n        this.statsinterval = null;\\r\\n    }\\r\\n    logger.info(`Closing ${this}...`);\\r\\n    this.peerconnection.close();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Modifies the values of the setup attributes (defined by\\r\\n * {@link http://tools.ietf.org/html/rfc4145#section-4}) of a specific SDP\\r\\n * answer in order to overcome a delay of 1 second in the connection\\r\\n * establishment between some devices and Videobridge.\\r\\n *\\r\\n * @param {SDP} offer - the SDP offer to which the specified SDP answer is\\r\\n * being prepared to respond\\r\\n * @param {SDP} answer - the SDP to modify\\r\\n * @private\\r\\n */\\r\\nconst _fixAnswerRFC4145Setup = function(offer, answer) {\\r\\n    if (!(browser.isChromiumBased() || browser.isReactNative())) {\\r\\n        // It looks like Firefox doesn't agree with the fix (at least in its\\r\\n        // current implementation) because it effectively remains active even\\r\\n        // after we tell it to become passive. Apart from Firefox which I tested\\r\\n        // after the fix was deployed, I tested Chrome only. In order to prevent\\r\\n        // issues with other browsers, limit the fix to known devices for the\\r\\n        // time being.\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // XXX Videobridge is the (SDP) offerer and WebRTC (e.g. Chrome) is the\\r\\n    // answerer (as orchestrated by Jicofo). In accord with\\r\\n    // http://tools.ietf.org/html/rfc5245#section-5.2 and because both peers\\r\\n    // are ICE FULL agents, Videobridge will take on the controlling role and\\r\\n    // WebRTC will take on the controlled role. In accord with\\r\\n    // https://tools.ietf.org/html/rfc5763#section-5, Videobridge will use the\\r\\n    // setup attribute value of setup:actpass and WebRTC will be allowed to\\r\\n    // choose either the setup attribute value of setup:active or\\r\\n    // setup:passive. Chrome will by default choose setup:active because it is\\r\\n    // RECOMMENDED by the respective RFC since setup:passive adds additional\\r\\n    // latency. The case of setup:active allows WebRTC to send a DTLS\\r\\n    // ClientHello as soon as an ICE connectivity check of its succeeds.\\r\\n    // Unfortunately, Videobridge will be unable to respond immediately because\\r\\n    // may not have WebRTC's answer or may have not completed the ICE\\r\\n    // connectivity establishment. Even more unfortunate is that in the\\r\\n    // described scenario Chrome's DTLS implementation will insist on\\r\\n    // retransmitting its ClientHello after a second (the time is in accord\\r\\n    // with the respective RFC) and will thus cause the whole connection\\r\\n    // establishment to exceed at least 1 second. To work around Chrome's\\r\\n    // idiosyncracy, don't allow it to send a ClientHello i.e. change its\\r\\n    // default choice of setup:active to setup:passive.\\r\\n    if (offer && answer\\r\\n            && offer.media && answer.media\\r\\n            && offer.media.length === answer.media.length) {\\r\\n        answer.media.forEach((a, i) => {\\r\\n            if (SDPUtil.findLine(\\r\\n                    offer.media[i],\\r\\n                    'a=setup:actpass',\\r\\n                    offer.session)) {\\r\\n                answer.media[i]\\r\\n                    = a.replace(/a=setup:active/g, 'a=setup:passive');\\r\\n            }\\r\\n        });\\r\\n        answer.raw = answer.session + answer.media.join('');\\r\\n    }\\r\\n};\\r\\n\\r\\nTraceablePeerConnection.prototype.createAnswer = function(constraints) {\\r\\n    if (browser.isFirefox() && this.isSimulcastOn()) {\\r\\n        const videoSender\\r\\n            = this.peerconnection.getSenders().find(sender =>\\r\\n                sender.track !== null && sender.track.kind === 'video');\\r\\n        const simParams = {\\r\\n            encodings: [\\r\\n                {\\r\\n                    rid: SIM_LAYER_1_RID,\\r\\n                    scaleResolutionDownBy: 4\\r\\n                },\\r\\n                {\\r\\n                    rid: SIM_LAYER_2_RID,\\r\\n                    scaleResolutionDownBy: 2\\r\\n                },\\r\\n                {\\r\\n                    rid: SIM_LAYER_3_RID\\r\\n                }\\r\\n            ]\\r\\n        };\\r\\n\\r\\n        videoSender.setParameters(simParams);\\r\\n    }\\r\\n\\r\\n    return this._createOfferOrAnswer(false /* answer */, constraints);\\r\\n};\\r\\n\\r\\nTraceablePeerConnection.prototype.createOffer = function(constraints) {\\r\\n    return this._createOfferOrAnswer(true /* offer */, constraints);\\r\\n};\\r\\n\\r\\nTraceablePeerConnection.prototype._createOfferOrAnswer = function(\\r\\n        isOffer,\\r\\n        constraints) {\\r\\n    const logName = isOffer ? 'Offer' : 'Answer';\\r\\n\\r\\n    this.trace(`create${logName}`, JSON.stringify(constraints, null, ' '));\\r\\n\\r\\n    const handleSuccess = (resultSdp, resolveFn, rejectFn) => {\\r\\n        try {\\r\\n            this.trace(\\r\\n                `create${logName}OnSuccess::preTransform`, dumpSDP(resultSdp));\\r\\n\\r\\n            // if we're using unified plan, transform to Plan B.\\r\\n            if (browser.usesUnifiedPlan()) {\\r\\n                // eslint-disable-next-line no-param-reassign\\r\\n                resultSdp = this.interop.toPlanB(resultSdp);\\r\\n                this.trace(\\r\\n                    `create${logName}OnSuccess::postTransform (Plan B)`,\\r\\n                    dumpSDP(resultSdp));\\r\\n                if (this.isSimulcastOn()) {\\r\\n                    // eslint-disable-next-line no-param-reassign\\r\\n                    resultSdp\\r\\n                        = this._injectSsrcGroupForUnifiedSimulcast(resultSdp);\\r\\n                    this.trace(\\r\\n                        `create${logName}OnSuccess::postTransform`\\r\\n                        + '(inject ssrc group)', dumpSDP(resultSdp));\\r\\n                }\\r\\n            }\\r\\n\\r\\n            /**\\r\\n             * We don't keep ssrcs consitent for Firefox because rewriting\\r\\n             *  the ssrcs between createAnswer and setLocalDescription breaks\\r\\n             *  the caching in sdp-interop (sdp-interop must know about all\\r\\n             *  ssrcs, and it updates its cache in toPlanB so if we rewrite them\\r\\n             *  after that, when we try and go back to unified plan it will\\r\\n             *  complain about unmapped ssrcs)\\r\\n             */\\r\\n            if (!browser.usesUnifiedPlan()) {\\r\\n                // If there are no local video tracks, then a \\\"recvonly\\\"\\r\\n                // SSRC needs to be generated\\r\\n                if (!this.hasAnyTracksOfType(MediaType.VIDEO)\\r\\n                    && !this.sdpConsistency.hasPrimarySsrcCached()) {\\r\\n                    this.generateRecvonlySsrc();\\r\\n                }\\r\\n\\r\\n                // eslint-disable-next-line no-param-reassign\\r\\n                resultSdp = new RTCSessionDescription({\\r\\n                    type: resultSdp.type,\\r\\n                    sdp: this.sdpConsistency.makeVideoPrimarySsrcsConsistent(\\r\\n                        resultSdp.sdp)\\r\\n                });\\r\\n\\r\\n                this.trace(\\r\\n                    `create${logName}OnSuccess::postTransform `\\r\\n                         + '(make primary audio/video ssrcs consistent)',\\r\\n                    dumpSDP(resultSdp));\\r\\n            }\\r\\n\\r\\n            // Add simulcast streams if simulcast is enabled\\r\\n            if (this.isSimulcastOn()) {\\r\\n                // eslint-disable-next-line no-param-reassign\\r\\n                resultSdp = this.simulcast.mungeLocalDescription(resultSdp);\\r\\n                this.trace(\\r\\n                    `create${logName}`\\r\\n                        + 'OnSuccess::postTransform (simulcast)',\\r\\n                    dumpSDP(resultSdp));\\r\\n            }\\r\\n\\r\\n            if (!this.options.disableRtx && browser.supportsRtx()) {\\r\\n                // eslint-disable-next-line no-param-reassign\\r\\n                resultSdp = new RTCSessionDescription({\\r\\n                    type: resultSdp.type,\\r\\n                    sdp: this.rtxModifier.modifyRtxSsrcs(resultSdp.sdp)\\r\\n                });\\r\\n\\r\\n                this.trace(\\r\\n                    `create${logName}`\\r\\n                         + 'OnSuccess::postTransform (rtx modifier)',\\r\\n                    dumpSDP(resultSdp));\\r\\n            }\\r\\n\\r\\n            // Fix the setup attribute (see _fixAnswerRFC4145Setup for\\r\\n            //  details)\\r\\n            if (!isOffer) {\\r\\n                const remoteDescription\\r\\n                    = new SDP(this.remoteDescription.sdp);\\r\\n                const localDescription = new SDP(resultSdp.sdp);\\r\\n\\r\\n                _fixAnswerRFC4145Setup(remoteDescription, localDescription);\\r\\n\\r\\n                // eslint-disable-next-line no-param-reassign\\r\\n                resultSdp = new RTCSessionDescription({\\r\\n                    type: resultSdp.type,\\r\\n                    sdp: localDescription.raw\\r\\n                });\\r\\n            }\\r\\n\\r\\n            const ssrcMap = extractSSRCMap(resultSdp);\\r\\n\\r\\n            logger.debug('Got local SSRCs MAP: ', ssrcMap);\\r\\n            this._processLocalSSRCsMap(ssrcMap);\\r\\n\\r\\n            resolveFn(resultSdp);\\r\\n        } catch (e) {\\r\\n            this.trace(`create${logName}OnError`, e);\\r\\n            this.trace(`create${logName}OnError`, dumpSDP(resultSdp));\\r\\n            logger.error(`create${logName}OnError`, e, dumpSDP(resultSdp));\\r\\n\\r\\n            rejectFn(e);\\r\\n        }\\r\\n    };\\r\\n\\r\\n    const handleFailure = (err, rejectFn) => {\\r\\n        this.trace(`create${logName}OnFailure`, err);\\r\\n        const eventType\\r\\n            = isOffer\\r\\n                ? RTCEvents.CREATE_OFFER_FAILED\\r\\n                : RTCEvents.CREATE_ANSWER_FAILED;\\r\\n\\r\\n        this.eventEmitter.emit(eventType, err, this);\\r\\n\\r\\n        rejectFn(err);\\r\\n    };\\r\\n\\r\\n    return new Promise((resolve, reject) => {\\r\\n        let oaPromise;\\r\\n\\r\\n        if (isOffer) {\\r\\n            oaPromise = this.peerconnection.createOffer(constraints);\\r\\n        } else {\\r\\n            oaPromise = this.peerconnection.createAnswer(constraints);\\r\\n        }\\r\\n\\r\\n        oaPromise\\r\\n            .then(\\r\\n                sdp => handleSuccess(sdp, resolve, reject),\\r\\n                error => handleFailure(error, reject));\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Extract primary SSRC from given {@link TrackSSRCInfo} object.\\r\\n * @param {TrackSSRCInfo} ssrcObj\\r\\n * @return {number|null} the primary SSRC or <tt>null</tt>\\r\\n */\\r\\nfunction extractPrimarySSRC(ssrcObj) {\\r\\n    if (ssrcObj && ssrcObj.groups && ssrcObj.groups.length) {\\r\\n        return ssrcObj.groups[0].ssrcs[0];\\r\\n    } else if (ssrcObj && ssrcObj.ssrcs && ssrcObj.ssrcs.length) {\\r\\n        return ssrcObj.ssrcs[0];\\r\\n    }\\r\\n\\r\\n    return null;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Goes over the SSRC map extracted from the latest local description and tries\\r\\n * to match them with the local tracks (by MSID). Will update the values\\r\\n * currently stored in the {@link TraceablePeerConnection.localSSRCs} map.\\r\\n * @param {Map<string,TrackSSRCInfo>} ssrcMap\\r\\n * @private\\r\\n */\\r\\nTraceablePeerConnection.prototype._processLocalSSRCsMap = function(ssrcMap) {\\r\\n    for (const track of this.localTracks.values()) {\\r\\n        const trackMSID = track.storedMSID;\\r\\n\\r\\n        if (ssrcMap.has(trackMSID)) {\\r\\n            const newSSRC = ssrcMap.get(trackMSID);\\r\\n\\r\\n            if (!newSSRC) {\\r\\n                logger.error(`No SSRC found for: ${trackMSID} in ${this}`);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n            const oldSSRC = this.localSSRCs.get(track.rtcId);\\r\\n            const newSSRCNum = extractPrimarySSRC(newSSRC);\\r\\n            const oldSSRCNum = extractPrimarySSRC(oldSSRC);\\r\\n\\r\\n            // eslint-disable-next-line no-negated-condition\\r\\n            if (newSSRCNum !== oldSSRCNum) {\\r\\n                if (oldSSRCNum === null) {\\r\\n                    logger.info(\\r\\n                        `Storing new local SSRC for ${track} in ${this}`,\\r\\n                        newSSRC);\\r\\n                } else {\\r\\n                    logger.error(\\r\\n                        `Overwriting SSRC for ${track} ${trackMSID} in ${this\\r\\n                        } with: `, newSSRC);\\r\\n                }\\r\\n                this.localSSRCs.set(track.rtcId, newSSRC);\\r\\n\\r\\n                this.eventEmitter.emit(\\r\\n                    RTCEvents.LOCAL_TRACK_SSRC_UPDATED, track, newSSRCNum);\\r\\n            } else {\\r\\n                logger.debug(\\r\\n                    `The local SSRC(${newSSRCNum}) for ${track} ${trackMSID}`\\r\\n                     + `is still up to date in ${this}`);\\r\\n            }\\r\\n        } else if (!track.isVideoTrack() && !track.isMuted()) {\\r\\n            // It is normal to find no SSRCs for a muted video track in\\r\\n            // the local SDP as the recv-only SSRC is no longer munged in.\\r\\n            // So log the warning only if it's not a muted video track.\\r\\n            logger.warn(`No SSRCs found in the local SDP for ${track} MSID: ${trackMSID} in ${this}`);\\r\\n        }\\r\\n    }\\r\\n};\\r\\n\\r\\nTraceablePeerConnection.prototype.addIceCandidate = function(candidate) {\\r\\n    this.trace('addIceCandidate', JSON.stringify({\\r\\n        candidate: candidate.candidate,\\r\\n        sdpMid: candidate.sdpMid,\\r\\n        sdpMLineIndex: candidate.sdpMLineIndex,\\r\\n        usernameFragment: candidate.usernameFragment\\r\\n    }, null, ' '));\\r\\n\\r\\n    return this.peerconnection.addIceCandidate(candidate);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Obtains call-related stats from the peer connection.\\r\\n *\\r\\n * @param {Function} callback - The function to invoke after successfully\\r\\n * obtaining stats.\\r\\n * @param {Function} errback - The function to invoke after failing to obtain\\r\\n * stats.\\r\\n * @returns {void}\\r\\n */\\r\\nTraceablePeerConnection.prototype.getStats = function(callback, errback) {\\r\\n    // TODO (brian): After moving all browsers to adapter, check if adapter is\\r\\n    // accounting for different getStats apis, making the browser-checking-if\\r\\n    // unnecessary.\\r\\n    if (browser.isSafariWithWebrtc() || browser.isFirefox()\\r\\n            || browser.isReactNative()) {\\r\\n        // uses the new Promise based getStats\\r\\n        this.peerconnection.getStats()\\r\\n            .then(callback)\\r\\n            .catch(errback || (() => {\\r\\n\\r\\n                // Making sure that getStats won't fail if error callback is\\r\\n                // not passed.\\r\\n            }));\\r\\n    } else {\\r\\n        this.peerconnection.getStats(callback);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Generates and stores new SSRC info object for given local track.\\r\\n * The method should be called only for a video track being added to this TPC\\r\\n * in the muted state (given that the current browser uses this strategy).\\r\\n * @param {JitsiLocalTrack} track\\r\\n * @return {TPCSSRCInfo}\\r\\n */\\r\\nTraceablePeerConnection.prototype.generateNewStreamSSRCInfo = function(track) {\\r\\n    const rtcId = track.rtcId;\\r\\n    let ssrcInfo = this._getSSRC(rtcId);\\r\\n\\r\\n    if (ssrcInfo) {\\r\\n        logger.error(`Will overwrite local SSRCs for track ID: ${rtcId}`);\\r\\n    }\\r\\n    if (this.isSimulcastOn()) {\\r\\n        ssrcInfo = {\\r\\n            ssrcs: [],\\r\\n            groups: []\\r\\n        };\\r\\n        for (let i = 0; i < SIMULCAST_LAYERS; i++) {\\r\\n            ssrcInfo.ssrcs.push(SDPUtil.generateSsrc());\\r\\n        }\\r\\n        ssrcInfo.groups.push({\\r\\n            ssrcs: ssrcInfo.ssrcs.slice(),\\r\\n            semantics: 'SIM'\\r\\n        });\\r\\n    } else {\\r\\n        ssrcInfo = {\\r\\n            ssrcs: [ SDPUtil.generateSsrc() ],\\r\\n            groups: []\\r\\n        };\\r\\n    }\\r\\n    if (!this.options.disableRtx && browser.supportsRtx()) {\\r\\n        // Specifically use a for loop here because we'll\\r\\n        //  be adding to the list we're iterating over, so we\\r\\n        //  only want to iterate through the items originally\\r\\n        //  on the list\\r\\n        const currNumSsrcs = ssrcInfo.ssrcs.length;\\r\\n\\r\\n        for (let i = 0; i < currNumSsrcs; ++i) {\\r\\n            const primarySsrc = ssrcInfo.ssrcs[i];\\r\\n            const rtxSsrc = SDPUtil.generateSsrc();\\r\\n\\r\\n            ssrcInfo.ssrcs.push(rtxSsrc);\\r\\n            ssrcInfo.groups.push({\\r\\n                ssrcs: [ primarySsrc, rtxSsrc ],\\r\\n                semantics: 'FID'\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n    ssrcInfo.msid = track.storedMSID;\\r\\n    this.localSSRCs.set(rtcId, ssrcInfo);\\r\\n\\r\\n    return ssrcInfo;\\r\\n};\\r\\n\\r\\nconst handleLayerSuspension = function(peerConnection, isSelected) {\\r\\n    if (!peerConnection.getSenders) {\\r\\n        logger.debug('Browser doesn\\\\'t support RTPSender');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const videoSender = peerConnection.getSenders()\\r\\n        .find(sender => sender.track.kind === 'video');\\r\\n\\r\\n    if (!videoSender) {\\r\\n        logger.warn('handleLayerSuspension unable to find video sender');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n    if (!videoSender.getParameters) {\\r\\n        logger.debug('Browser doesn\\\\'t support RTPSender parameters');\\r\\n\\r\\n        return;\\r\\n    }\\r\\n    const parameters = videoSender.getParameters();\\r\\n\\r\\n    if (isSelected) {\\r\\n        logger.debug('Currently selected, enabling all sim layers');\\r\\n\\r\\n        // Make sure all encodings are enabled\\r\\n        parameters.encodings.forEach(e => {\\r\\n            e.active = true;\\r\\n        });\\r\\n    } else {\\r\\n        logger.debug('Not currently selected, disabling upper layers');\\r\\n\\r\\n        // Turn off the upper simulcast layers\\r\\n        [ 1, 2 ].forEach(simIndex => {\\r\\n            if (parameters.encodings[simIndex]) {\\r\\n                parameters.encodings[simIndex].active = false;\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    videoSender.setParameters(parameters);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Set whether or not the endpoint is 'selected' by other endpoints, meaning\\r\\n * it appears on their main stage\\r\\n */\\r\\nTraceablePeerConnection.prototype.setIsSelected = function(isSelected) {\\r\\n    if (this.options.enableLayerSuspension) {\\r\\n        logger.debug('Layer suspension enabled,'\\r\\n            + `currently selected? ${isSelected}`);\\r\\n        handleLayerSuspension(this.peerconnection, isSelected);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates a text representation of this <tt>TraceablePeerConnection</tt>\\r\\n * instance.\\r\\n * @return {string}\\r\\n */\\r\\nTraceablePeerConnection.prototype.toString = function() {\\r\\n    return `TPC[${this.id},p2p:${this.isP2P}]`;\\r\\n};\\r\\n\",\"import { createTtfmEvent } from '../../service/statistics/AnalyticsEvents';\\r\\nimport JitsiTrack from './JitsiTrack';\\r\\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\\r\\nimport Statistics from '../statistics/statistics';\\r\\n\\r\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\r\\nconst RTCEvents = require('../../service/RTC/RTCEvents');\\r\\n\\r\\nlet ttfmTrackerAudioAttached = false;\\r\\nlet ttfmTrackerVideoAttached = false;\\r\\n\\r\\n/**\\r\\n * List of container events that we are going to process. _onContainerEventHandler will be added as listener to the\\r\\n * container for every event in the list.\\r\\n */\\r\\nconst containerEvents = [\\r\\n    'abort', 'canplay', 'canplaythrough', 'emptied', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart',\\r\\n    'pause', 'play', 'playing', 'ratechange', 'stalled', 'suspend', 'waiting'\\r\\n];\\r\\n\\r\\n/* eslint-disable max-params */\\r\\n\\r\\n/**\\r\\n * Represents a single media track (either audio or video).\\r\\n */\\r\\nexport default class JitsiRemoteTrack extends JitsiTrack {\\r\\n    /**\\r\\n     * Creates new JitsiRemoteTrack instance.\\r\\n     * @param {RTC} rtc the RTC service instance.\\r\\n     * @param {JitsiConference} conference the conference to which this track\\r\\n     *        belongs to\\r\\n     * @param {string} ownerEndpointId the endpoint ID of the track owner\\r\\n     * @param {MediaStream} stream WebRTC MediaStream, parent of the track\\r\\n     * @param {MediaStreamTrack} track underlying WebRTC MediaStreamTrack for\\r\\n     *        the new JitsiRemoteTrack\\r\\n     * @param {MediaType} mediaType the type of the media\\r\\n     * @param {VideoType} videoType the type of the video if applicable\\r\\n     * @param {number} ssrc the SSRC number of the Media Stream\\r\\n     * @param {boolean} muted the initial muted state\\r\\n     * @param {boolean} isP2P indicates whether or not this track belongs to a\\r\\n     * P2P session\\r\\n     * @throws {TypeError} if <tt>ssrc</tt> is not a number.\\r\\n     * @constructor\\r\\n     */\\r\\n    constructor(\\r\\n            rtc,\\r\\n            conference,\\r\\n            ownerEndpointId,\\r\\n            stream,\\r\\n            track,\\r\\n            mediaType,\\r\\n            videoType,\\r\\n            ssrc,\\r\\n            muted,\\r\\n            isP2P) {\\r\\n        super(\\r\\n            conference,\\r\\n            stream,\\r\\n            track,\\r\\n            () => {\\r\\n                // Nothing to do if the track is inactive.\\r\\n            },\\r\\n            mediaType,\\r\\n            videoType);\\r\\n        this.rtc = rtc;\\r\\n\\r\\n        // Prevent from mixing up type of SSRC which should be a number\\r\\n        if (typeof ssrc !== 'number') {\\r\\n            throw new TypeError(`SSRC ${ssrc} is not a number`);\\r\\n        }\\r\\n        this.ssrc = ssrc;\\r\\n        this.ownerEndpointId = ownerEndpointId;\\r\\n        this.muted = muted;\\r\\n        this.isP2P = isP2P;\\r\\n\\r\\n        logger.debug(`New remote track added: ${this}`);\\r\\n\\r\\n        // we want to mark whether the track has been ever muted\\r\\n        // to detect ttfm events for startmuted conferences, as it can\\r\\n        // significantly increase ttfm values\\r\\n        this.hasBeenMuted = muted;\\r\\n\\r\\n        // Bind 'onmute' and 'onunmute' event handlers\\r\\n        if (this.rtc && this.track) {\\r\\n            this._bindTrackHandlers();\\r\\n        }\\r\\n        this._containerHandlers = {};\\r\\n        containerEvents.forEach(event => {\\r\\n            this._containerHandlers[event] = this._containerEventHandler.bind(this, event);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n    /**\\r\\n     * Attaches the track handlers.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _bindTrackHandlers() {\\r\\n        this.track.addEventListener('mute', () => this._onTrackMute());\\r\\n        this.track.addEventListener('unmute', () => this._onTrackUnmute());\\r\\n        this.track.addEventListener('ended', () => {\\r\\n            logger.debug(`\\\"onended\\\" event(${Date.now()}): ${this}`);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked when the track is muted. Emits an event notifying\\r\\n     * listeners of the mute event.\\r\\n     *\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onTrackMute() {\\r\\n        logger.debug(`\\\"onmute\\\" event(${Date.now()}): ${this}`);\\r\\n\\r\\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_MUTE, this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked when the track is unmuted. Emits an event notifying\\r\\n     * listeners of the mute event.\\r\\n     *\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onTrackUnmute() {\\r\\n        logger.debug(`\\\"onunmute\\\" event(${Date.now()}): ${this}`);\\r\\n\\r\\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_UNMUTE, this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets current muted status and fires an events for the change.\\r\\n     * @param value the muted status.\\r\\n     */\\r\\n    setMute(value) {\\r\\n        if (this.muted === value) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (value) {\\r\\n            this.hasBeenMuted = true;\\r\\n        }\\r\\n\\r\\n        // we can have a fake video stream\\r\\n        if (this.stream) {\\r\\n            this.stream.muted = value;\\r\\n        }\\r\\n\\r\\n        this.muted = value;\\r\\n        this.emit(JitsiTrackEvents.TRACK_MUTE_CHANGED, this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the current muted status of the track.\\r\\n     * @returns {boolean|*|JitsiRemoteTrack.muted} <tt>true</tt> if the track is\\r\\n     * muted and <tt>false</tt> otherwise.\\r\\n     */\\r\\n    isMuted() {\\r\\n        return this.muted;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the participant id which owns the track.\\r\\n     *\\r\\n     * @returns {string} the id of the participants. It corresponds to the\\r\\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\\r\\n     */\\r\\n    getParticipantId() {\\r\\n        return this.ownerEndpointId;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Return false;\\r\\n     */\\r\\n    isLocal() {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the synchronization source identifier (SSRC) of this remote\\r\\n     * track.\\r\\n     *\\r\\n     * @returns {number} the SSRC of this remote track.\\r\\n     */\\r\\n    getSSRC() {\\r\\n        return this.ssrc;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Changes the video type of the track.\\r\\n     *\\r\\n     * @param {string} type - The new video type(\\\"camera\\\", \\\"desktop\\\").\\r\\n     */\\r\\n    _setVideoType(type) {\\r\\n        if (this.videoType === type) {\\r\\n            return;\\r\\n        }\\r\\n        this.videoType = type;\\r\\n        this.emit(JitsiTrackEvents.TRACK_VIDEOTYPE_CHANGED, type);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles track play events.\\r\\n     */\\r\\n    _playCallback() {\\r\\n        const type = this.isVideoTrack() ? 'video' : 'audio';\\r\\n\\r\\n        const now = window.performance.now();\\r\\n\\r\\n        console.log(`(TIME) Render ${type}:\\\\t`, now);\\r\\n        this.conference.getConnectionTimes()[`${type}.render`] = now;\\r\\n\\r\\n        // The conference can be started without calling GUM\\r\\n        // FIXME if there would be a module for connection times this kind\\r\\n        // of logic (gumDuration or ttfm) should end up there\\r\\n        const gumStart = window.connectionTimes['obtainPermissions.start'];\\r\\n        const gumEnd = window.connectionTimes['obtainPermissions.end'];\\r\\n        const gumDuration\\r\\n            = !isNaN(gumEnd) && !isNaN(gumStart) ? gumEnd - gumStart : 0;\\r\\n\\r\\n        // Subtract the muc.joined-to-session-initiate duration because jicofo\\r\\n        // waits until there are 2 participants to start Jingle sessions.\\r\\n        const ttfm = now\\r\\n            - (this.conference.getConnectionTimes()['session.initiate']\\r\\n                - this.conference.getConnectionTimes()['muc.joined'])\\r\\n            - gumDuration;\\r\\n\\r\\n        this.conference.getConnectionTimes()[`${type}.ttfm`] = ttfm;\\r\\n        console.log(`(TIME) TTFM ${type}:\\\\t`, ttfm);\\r\\n\\r\\n        Statistics.sendAnalytics(createTtfmEvent(\\r\\n            {\\r\\n                'media_type': type,\\r\\n                muted: this.hasBeenMuted,\\r\\n                value: ttfm\\r\\n            }));\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Attach time to first media tracker only if there is conference and only\\r\\n     * for the first element.\\r\\n     * @param container the HTML container which can be 'video' or 'audio'\\r\\n     * element.\\r\\n     * @private\\r\\n     */\\r\\n    _attachTTFMTracker(container) {\\r\\n        if ((ttfmTrackerAudioAttached && this.isAudioTrack())\\r\\n            || (ttfmTrackerVideoAttached && this.isVideoTrack())) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.isAudioTrack()) {\\r\\n            ttfmTrackerAudioAttached = true;\\r\\n        }\\r\\n        if (this.isVideoTrack()) {\\r\\n            ttfmTrackerVideoAttached = true;\\r\\n        }\\r\\n\\r\\n        container.addEventListener('canplay', this._playCallback.bind(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Called when the track has been attached to a new container.\\r\\n     *\\r\\n     * @param {HTMLElement} container the HTML container which can be 'video' or\\r\\n     * 'audio' element.\\r\\n     * @private\\r\\n     */\\r\\n    _onTrackAttach(container) {\\r\\n        logger.debug(`Track has been attached to a container: ${this}`);\\r\\n\\r\\n        containerEvents.forEach(event => {\\r\\n            container.addEventListener(event, this._containerHandlers[event]);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Called when the track has been detached from a container.\\r\\n     *\\r\\n     * @param {HTMLElement} container the HTML container which can be 'video' or\\r\\n     * 'audio' element.\\r\\n     * @private\\r\\n     */\\r\\n    _onTrackDetach(container) {\\r\\n        logger.debug(`Track has been detached from a container: ${this}`);\\r\\n\\r\\n        containerEvents.forEach(event => {\\r\\n            container.removeEventListener(event, this._containerHandlers[event]);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * An event handler for events triggered by the attached container.\\r\\n     *\\r\\n     * @param {string} type - The type of the event.\\r\\n     */\\r\\n    _containerEventHandler(type) {\\r\\n        logger.debug(`${type} handler was called for a container with attached ${this}`);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns a string with a description of the current status of the track.\\r\\n     *\\r\\n     * @returns {string}\\r\\n     */\\r\\n    _getStatus() {\\r\\n        const { enabled, muted, readyState } = this.track;\\r\\n\\r\\n        return `readyState: ${readyState}, muted: ${muted}, enabled: ${enabled}`;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a text representation of this remote track instance.\\r\\n     * @return {string}\\r\\n     */\\r\\n    toString() {\\r\\n        return `RemoteTrack[userID: ${this.getParticipantId()}, type: ${this.getType()}, ssrc: ${\\r\\n            this.getSSRC()}, p2p: ${this.isP2P}, status: ${this._getStatus()}]`;\\r\\n    }\\r\\n}\\r\\n\",\"/* global __filename */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport { SdpTransformWrap } from '../xmpp/SdpTransformUtil';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Fakes local SDP exposed to {@link JingleSessionPC} through the local\\r\\n * description getter. Modifies the SDP, so that it will contain muted local\\r\\n * video tracks description, even though their underlying {MediaStreamTrack}s\\r\\n * are no longer in the WebRTC peerconnection. That prevents from SSRC updates\\r\\n * being sent to Jicofo/remote peer and prevents sRD/sLD cycle on the remote\\r\\n * side.\\r\\n */\\r\\nexport default class LocalSdpMunger {\\r\\n\\r\\n    /**\\r\\n     * Creates new <tt>LocalSdpMunger</tt> instance.\\r\\n     *\\r\\n     * @param {TraceablePeerConnection} tpc\\r\\n     */\\r\\n    constructor(tpc) {\\r\\n        this.tpc = tpc;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Makes sure that muted local video tracks associated with the parent\\r\\n     * {@link TraceablePeerConnection} are described in the local SDP. It's done\\r\\n     * in order to prevent from sending 'source-remove'/'source-add' Jingle\\r\\n     * notifications when local video track is muted (<tt>MediaStream</tt> is\\r\\n     * removed from the peerconnection).\\r\\n     *\\r\\n     * NOTE 1 video track is assumed\\r\\n     *\\r\\n     * @param {SdpTransformWrap} transformer the transformer instance which will\\r\\n     * be used to process the SDP.\\r\\n     * @return {boolean} <tt>true</tt> if there were any modifications to\\r\\n     * the SDP wrapped by <tt>transformer</tt>.\\r\\n     * @private\\r\\n     */\\r\\n    _addMutedLocalVideoTracksToSDP(transformer) {\\r\\n        // Go over each video tracks and check if the SDP has to be changed\\r\\n        const localVideos = this.tpc.getLocalTracks(MediaType.VIDEO);\\r\\n\\r\\n        if (!localVideos.length) {\\r\\n            return false;\\r\\n        } else if (localVideos.length !== 1) {\\r\\n            logger.error(\\r\\n                `${this.tpc} there is more than 1 video track ! `\\r\\n                    + 'Strange things may happen !', localVideos);\\r\\n        }\\r\\n\\r\\n        const videoMLine = transformer.selectMedia('video');\\r\\n\\r\\n        if (!videoMLine) {\\r\\n            logger.debug(\\r\\n                `${this.tpc} unable to hack local video track SDP`\\r\\n                    + '- no \\\"video\\\" media');\\r\\n\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        let modified = false;\\r\\n\\r\\n        for (const videoTrack of localVideos) {\\r\\n            const muted = videoTrack.isMuted();\\r\\n            const mediaStream = videoTrack.getOriginalStream();\\r\\n\\r\\n            // During the mute/unmute operation there are periods of time when\\r\\n            // the track's underlying MediaStream is not added yet to\\r\\n            // the PeerConnection. The SDP needs to be munged in such case.\\r\\n            const isInPeerConnection\\r\\n                = mediaStream && this.tpc.isMediaStreamInPc(mediaStream);\\r\\n            const shouldFakeSdp = muted || !isInPeerConnection;\\r\\n\\r\\n            logger.debug(\\r\\n                `${this.tpc} ${videoTrack} muted: ${\\r\\n                    muted}, is in PeerConnection: ${\\r\\n                    isInPeerConnection} => should fake sdp ? : ${\\r\\n                    shouldFakeSdp}`);\\r\\n\\r\\n            if (!shouldFakeSdp) {\\r\\n                continue; // eslint-disable-line no-continue\\r\\n            }\\r\\n\\r\\n            // Inject removed SSRCs\\r\\n            const requiredSSRCs\\r\\n                = this.tpc.isSimulcastOn()\\r\\n                    ? this.tpc.simulcast.ssrcCache\\r\\n                    : [ this.tpc.sdpConsistency.cachedPrimarySsrc ];\\r\\n\\r\\n            if (!requiredSSRCs.length) {\\r\\n                logger.error(\\r\\n                    `No SSRCs stored for: ${videoTrack} in ${this.tpc}`);\\r\\n\\r\\n                continue; // eslint-disable-line no-continue\\r\\n            }\\r\\n\\r\\n            modified = true;\\r\\n\\r\\n            // We need to fake sendrecv.\\r\\n            // NOTE the SDP produced here goes only to Jicofo and is never set\\r\\n            // as localDescription. That's why\\r\\n            // TraceablePeerConnection.mediaTransferActive is ignored here.\\r\\n            videoMLine.direction = 'sendrecv';\\r\\n\\r\\n            // Check if the recvonly has MSID\\r\\n            const primarySSRC = requiredSSRCs[0];\\r\\n\\r\\n            // FIXME The cname could come from the stream, but may turn out to\\r\\n            // be too complex. It is fine to come up with any value, as long as\\r\\n            // we only care about the actual SSRC values when deciding whether\\r\\n            // or not an update should be sent.\\r\\n            const primaryCname = `injected-${primarySSRC}`;\\r\\n\\r\\n            for (const ssrcNum of requiredSSRCs) {\\r\\n                // Remove old attributes\\r\\n                videoMLine.removeSSRC(ssrcNum);\\r\\n\\r\\n                // Inject\\r\\n                logger.debug(\\r\\n                    `${this.tpc} injecting video SSRC: ${ssrcNum} for ${\\r\\n                        videoTrack}`);\\r\\n                videoMLine.addSSRCAttribute({\\r\\n                    id: ssrcNum,\\r\\n                    attribute: 'cname',\\r\\n                    value: primaryCname\\r\\n                });\\r\\n                videoMLine.addSSRCAttribute({\\r\\n                    id: ssrcNum,\\r\\n                    attribute: 'msid',\\r\\n                    value: videoTrack.storedMSID\\r\\n                });\\r\\n            }\\r\\n            if (requiredSSRCs.length > 1) {\\r\\n                const group = {\\r\\n                    ssrcs: requiredSSRCs.join(' '),\\r\\n                    semantics: 'SIM'\\r\\n                };\\r\\n\\r\\n                if (!videoMLine.findGroup(group.semantics, group.ssrcs)) {\\r\\n                    // Inject the group\\r\\n                    logger.debug(\\r\\n                        `${this.tpc} injecting SIM group for ${videoTrack}`,\\r\\n                        group);\\r\\n                    videoMLine.addSSRCGroup(group);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            // Insert RTX\\r\\n            // FIXME in P2P RTX is used by Chrome regardless of config option\\r\\n            // status. Because of that 'source-remove'/'source-add'\\r\\n            // notifications are still sent to remove/add RTX SSRC and FID group\\r\\n            if (!this.tpc.options.disableRtx) {\\r\\n                this.tpc.rtxModifier.modifyRtxSsrcs2(videoMLine);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return modified;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Modifies 'cname', 'msid', 'label' and 'mslabel' by appending\\r\\n     * the id of {@link LocalSdpMunger#tpc} at the end, preceding by a dash\\r\\n     * sign.\\r\\n     *\\r\\n     * @param {MLineWrap} mediaSection - The media part (audio or video) of the\\r\\n     * session description which will be modified in place.\\r\\n     * @returns {void}\\r\\n     * @private\\r\\n     */\\r\\n    _transformMediaIdentifiers(mediaSection) {\\r\\n        const pcId = this.tpc.id;\\r\\n\\r\\n        for (const ssrcLine of mediaSection.ssrcs) {\\r\\n            switch (ssrcLine.attribute) {\\r\\n            case 'cname':\\r\\n            case 'label':\\r\\n            case 'mslabel':\\r\\n                ssrcLine.value = ssrcLine.value && `${ssrcLine.value}-${pcId}`;\\r\\n                break;\\r\\n            case 'msid': {\\r\\n                if (ssrcLine.value) {\\r\\n                    const streamAndTrackIDs = ssrcLine.value.split(' ');\\r\\n\\r\\n                    if (streamAndTrackIDs.length === 2) {\\r\\n                        const streamId = streamAndTrackIDs[0];\\r\\n                        const trackId = streamAndTrackIDs[1];\\r\\n\\r\\n                        ssrcLine.value\\r\\n                            = `${streamId}-${pcId} ${trackId}-${pcId}`;\\r\\n                    } else {\\r\\n                        logger.warn(\\r\\n                            'Unable to munge local MSID'\\r\\n                                + `- weird format detected: ${ssrcLine.value}`);\\r\\n                    }\\r\\n                }\\r\\n                break;\\r\\n            }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Maybe modifies local description to fake local video tracks SDP when\\r\\n     * those are muted.\\r\\n     *\\r\\n     * @param {object} desc the WebRTC SDP object instance for the local\\r\\n     * description.\\r\\n     * @returns {RTCSessionDescription}\\r\\n     */\\r\\n    maybeAddMutedLocalVideoTracksToSDP(desc) {\\r\\n        if (!desc) {\\r\\n            throw new Error('No local description passed in.');\\r\\n        }\\r\\n\\r\\n        const transformer = new SdpTransformWrap(desc.sdp);\\r\\n\\r\\n        if (this._addMutedLocalVideoTracksToSDP(transformer)) {\\r\\n            return new RTCSessionDescription({\\r\\n                type: desc.type,\\r\\n                sdp: transformer.toRawSDP()\\r\\n            });\\r\\n        }\\r\\n\\r\\n        return desc;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This transformation will make sure that stream identifiers are unique\\r\\n     * across all of the local PeerConnections even if the same stream is used\\r\\n     * by multiple instances at the same time.\\r\\n     * Each PeerConnection assigns different SSRCs to the same local\\r\\n     * MediaStream, but the MSID remains the same as it's used to identify\\r\\n     * the stream by the WebRTC backend. The transformation will append\\r\\n     * {@link TraceablePeerConnection#id} at the end of each stream's identifier\\r\\n     * (\\\"cname\\\", \\\"msid\\\", \\\"label\\\" and \\\"mslabel\\\").\\r\\n     *\\r\\n     * @param {RTCSessionDescription} sessionDesc - The local session\\r\\n     * description (this instance remains unchanged).\\r\\n     * @return {RTCSessionDescription} - Transformed local session description\\r\\n     * (a modified copy of the one given as the input).\\r\\n     */\\r\\n    transformStreamIdentifiers(sessionDesc) {\\r\\n        // FIXME similar check is probably duplicated in all other transformers\\r\\n        if (!sessionDesc || !sessionDesc.sdp || !sessionDesc.type) {\\r\\n            return sessionDesc;\\r\\n        }\\r\\n\\r\\n        const transformer = new SdpTransformWrap(sessionDesc.sdp);\\r\\n        const audioMLine = transformer.selectMedia('audio');\\r\\n\\r\\n        if (audioMLine) {\\r\\n            this._transformMediaIdentifiers(audioMLine);\\r\\n        }\\r\\n\\r\\n        const videoMLine = transformer.selectMedia('video');\\r\\n\\r\\n        if (videoMLine) {\\r\\n            this._transformMediaIdentifiers(videoMLine);\\r\\n        }\\r\\n\\r\\n        return new RTCSessionDescription({\\r\\n            type: sessionDesc.type,\\r\\n            sdp: transformer.toRawSDP()\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"/* global __filename */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport { parseSecondarySSRC, SdpTransformWrap } from './SdpTransformUtil';\\r\\nimport SDPUtil from './SDPUtil';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Begin helper functions\\r\\n */\\r\\n/**\\r\\n * Updates or inserts the appropriate rtx information for primarySsrc with\\r\\n *  the given rtxSsrc.  If no rtx ssrc for primarySsrc currently exists, it will\\r\\n *  add the appropriate ssrc and ssrc group lines.  If primarySsrc already has\\r\\n *  an rtx ssrc, the appropriate ssrc and group lines will be updated\\r\\n * @param {MLineWrap} mLine\\r\\n * @param {object} primarySsrcInfo the info (ssrc, msid & cname) for the\\r\\n *  primary ssrc\\r\\n * @param {number} rtxSsrc the rtx ssrc to associate with the primary ssrc\\r\\n */\\r\\nfunction updateAssociatedRtxStream(mLine, primarySsrcInfo, rtxSsrc) {\\r\\n    logger.debug(\\r\\n        `Updating mline to associate ${rtxSsrc}`\\r\\n        + `rtx ssrc with primary stream, ${primarySsrcInfo.id}`);\\r\\n    const primarySsrc = primarySsrcInfo.id;\\r\\n    const primarySsrcMsid = primarySsrcInfo.msid;\\r\\n    const primarySsrcCname = primarySsrcInfo.cname;\\r\\n\\r\\n    const previousRtxSSRC = mLine.getRtxSSRC(primarySsrc);\\r\\n\\r\\n    if (previousRtxSSRC === rtxSsrc) {\\r\\n        logger.debug(`${rtxSsrc} was already associated with ${primarySsrc}`);\\r\\n\\r\\n        return;\\r\\n    }\\r\\n    if (previousRtxSSRC) {\\r\\n        logger.debug(\\r\\n            `${primarySsrc} was previously associated with rtx`\\r\\n            + `${previousRtxSSRC}, removing all references to it`);\\r\\n\\r\\n        // Stream already had an rtx ssrc that is different than the one given,\\r\\n        //  remove all trace of the old one\\r\\n        mLine.removeSSRC(previousRtxSSRC);\\r\\n\\r\\n        logger.debug(`groups before filtering for ${previousRtxSSRC}`);\\r\\n        logger.debug(mLine.dumpSSRCGroups());\\r\\n\\r\\n        mLine.removeGroupsWithSSRC(previousRtxSSRC);\\r\\n    }\\r\\n    mLine.addSSRCAttribute({\\r\\n        id: rtxSsrc,\\r\\n        attribute: 'cname',\\r\\n        value: primarySsrcCname\\r\\n    });\\r\\n    mLine.addSSRCAttribute({\\r\\n        id: rtxSsrc,\\r\\n        attribute: 'msid',\\r\\n        value: primarySsrcMsid\\r\\n    });\\r\\n    mLine.addSSRCGroup({\\r\\n        semantics: 'FID',\\r\\n        ssrcs: `${primarySsrc} ${rtxSsrc}`\\r\\n    });\\r\\n}\\r\\n\\r\\n/**\\r\\n * End helper functions\\r\\n */\\r\\n\\r\\n/**\\r\\n * Adds any missing RTX streams for video streams\\r\\n *  and makes sure that they remain consistent\\r\\n */\\r\\nexport default class RtxModifier {\\r\\n    /**\\r\\n     * Constructor\\r\\n     */\\r\\n    constructor() {\\r\\n        /**\\r\\n         * Map of video ssrc to corresponding RTX\\r\\n         *  ssrc\\r\\n         */\\r\\n        this.correspondingRtxSsrcs = new Map();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Clear the cached map of primary video ssrcs to\\r\\n     *  their corresponding rtx ssrcs so that they will\\r\\n     *  not be used for the next call to modifyRtxSsrcs\\r\\n     */\\r\\n    clearSsrcCache() {\\r\\n        this.correspondingRtxSsrcs.clear();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Explicitly set the primary video ssrc -> rtx ssrc\\r\\n     *  mapping to be used in modifyRtxSsrcs\\r\\n     * @param {Map} ssrcMapping a mapping of primary video\\r\\n     *  ssrcs to their corresponding rtx ssrcs\\r\\n     */\\r\\n    setSsrcCache(ssrcMapping) {\\r\\n        logger.debug('Setting ssrc cache to ', ssrcMapping);\\r\\n        this.correspondingRtxSsrcs = ssrcMapping;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds RTX ssrcs for any video ssrcs that don't\\r\\n     *  already have them.  If the video ssrc has been\\r\\n     *  seen before, and already had an RTX ssrc generated,\\r\\n     *  the same RTX ssrc will be used again.\\r\\n     * @param {string} sdpStr sdp in raw string format\\r\\n     */\\r\\n    modifyRtxSsrcs(sdpStr) {\\r\\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\\r\\n        const videoMLine = sdpTransformer.selectMedia('video');\\r\\n\\r\\n        if (!videoMLine) {\\r\\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\\r\\n\\r\\n            return sdpStr;\\r\\n        }\\r\\n\\r\\n        return this.modifyRtxSsrcs2(videoMLine)\\r\\n            ? sdpTransformer.toRawSDP() : sdpStr;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Does the same thing as {@link modifyRtxSsrcs}, but takes the\\r\\n     *  {@link MLineWrap} instance wrapping video media as an argument.\\r\\n     * @param {MLineWrap} videoMLine\\r\\n     * @return {boolean} <tt>true</tt> if the SDP wrapped by\\r\\n     *  {@link SdpTransformWrap} has been modified or <tt>false</tt> otherwise.\\r\\n     */\\r\\n    modifyRtxSsrcs2(videoMLine) {\\r\\n        if (videoMLine.direction === 'recvonly') {\\r\\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\\r\\n\\r\\n            return false;\\r\\n        }\\r\\n        if (videoMLine.getSSRCCount() < 1) {\\r\\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\\r\\n\\r\\n            return false;\\r\\n        }\\r\\n        logger.debug('Current ssrc mapping: ', this.correspondingRtxSsrcs);\\r\\n        const primaryVideoSsrcs = videoMLine.getPrimaryVideoSSRCs();\\r\\n\\r\\n        logger.debug('Parsed primary video ssrcs ', primaryVideoSsrcs,\\r\\n            ' making sure all have rtx streams');\\r\\n        for (const ssrc of primaryVideoSsrcs) {\\r\\n            const msid = videoMLine.getSSRCAttrValue(ssrc, 'msid');\\r\\n            const cname = videoMLine.getSSRCAttrValue(ssrc, 'cname');\\r\\n            let correspondingRtxSsrc = this.correspondingRtxSsrcs.get(ssrc);\\r\\n\\r\\n            if (correspondingRtxSsrc) {\\r\\n                logger.debug(\\r\\n                    'Already have an associated rtx ssrc for'\\r\\n                    + `video ssrc ${ssrc}: ${correspondingRtxSsrc}`);\\r\\n            } else {\\r\\n                logger.debug(\\r\\n                    `No previously associated rtx ssrc for video ssrc ${ssrc}`);\\r\\n\\r\\n                // If there's one in the sdp already for it, we'll just set\\r\\n                //  that as the corresponding one\\r\\n                const previousAssociatedRtxStream = videoMLine.getRtxSSRC(ssrc);\\r\\n\\r\\n                if (previousAssociatedRtxStream) {\\r\\n                    logger.debug(\\r\\n                        `Rtx stream ${previousAssociatedRtxStream} `\\r\\n                        + 'already existed in the sdp as an rtx stream for '\\r\\n                        + `${ssrc}`);\\r\\n                    correspondingRtxSsrc = previousAssociatedRtxStream;\\r\\n                } else {\\r\\n                    correspondingRtxSsrc = SDPUtil.generateSsrc();\\r\\n                    logger.debug(`Generated rtx ssrc ${correspondingRtxSsrc} `\\r\\n                                 + `for ssrc ${ssrc}`);\\r\\n                }\\r\\n                logger.debug(`Caching rtx ssrc ${correspondingRtxSsrc} `\\r\\n                             + `for video ssrc ${ssrc}`);\\r\\n                this.correspondingRtxSsrcs.set(ssrc, correspondingRtxSsrc);\\r\\n            }\\r\\n            updateAssociatedRtxStream(\\r\\n                videoMLine,\\r\\n                {\\r\\n                    id: ssrc,\\r\\n                    cname,\\r\\n                    msid\\r\\n                },\\r\\n                correspondingRtxSsrc);\\r\\n        }\\r\\n\\r\\n        // FIXME we're not looking into much details whether the SDP has been\\r\\n        // modified or not once the precondition requirements are met.\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Strip all rtx streams from the given sdp\\r\\n     * @param {string} sdpStr sdp in raw string format\\r\\n     * @returns {string} sdp string with all rtx streams stripped\\r\\n     */\\r\\n    stripRtx(sdpStr) {\\r\\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\\r\\n        const videoMLine = sdpTransformer.selectMedia('video');\\r\\n\\r\\n        if (!videoMLine) {\\r\\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\\r\\n\\r\\n            return sdpStr;\\r\\n        }\\r\\n        if (videoMLine.direction === 'recvonly') {\\r\\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\\r\\n\\r\\n            return sdpStr;\\r\\n        }\\r\\n        if (videoMLine.getSSRCCount() < 1) {\\r\\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\\r\\n\\r\\n            return sdpStr;\\r\\n        }\\r\\n        if (!videoMLine.containsAnySSRCGroups()) {\\r\\n            logger.debug('RtxModifier doing nothing, '\\r\\n              + 'no video ssrcGroups present');\\r\\n\\r\\n            return sdpStr;\\r\\n        }\\r\\n        const fidGroups = videoMLine.findGroups('FID');\\r\\n\\r\\n        // Remove the fid groups from the mline\\r\\n\\r\\n        videoMLine.removeGroupsBySemantics('FID');\\r\\n\\r\\n        // Get the rtx ssrcs and remove them from the mline\\r\\n        for (const fidGroup of fidGroups) {\\r\\n            const rtxSsrc = parseSecondarySSRC(fidGroup);\\r\\n\\r\\n            videoMLine.removeSSRC(rtxSsrc);\\r\\n        }\\r\\n\\r\\n        return sdpTransformer.toRawSDP();\\r\\n    }\\r\\n}\\r\\n\",\"/* global __filename */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport {\\r\\n    parsePrimarySSRC,\\r\\n    parseSecondarySSRC,\\r\\n    SdpTransformWrap\\r\\n} from './SdpTransformUtil';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Handles the work of keeping video ssrcs consistent across multiple\\r\\n * o/a cycles, making it such that all stream operations can be\\r\\n * kept local and do not need to be signaled.\\r\\n * NOTE: This only keeps the 'primary' video ssrc consistent: meaning\\r\\n * the primary video stream\\r\\n */\\r\\nexport default class SdpConsistency {\\r\\n    /**\\r\\n     * Constructor\\r\\n     * @param {string} logPrefix the log prefix appended to every logged\\r\\n     * message, currently used to distinguish for which\\r\\n     * <tt>TraceablePeerConnection</tt> the instance works.\\r\\n     */\\r\\n    constructor(logPrefix) {\\r\\n        this.clearVideoSsrcCache();\\r\\n        this.logPrefix = logPrefix;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Clear the cached video primary and primary rtx ssrcs so that\\r\\n     *  they will not be used for the next call to\\r\\n     *  makeVideoPrimarySsrcsConsistent\\r\\n     */\\r\\n    clearVideoSsrcCache() {\\r\\n        this.cachedPrimarySsrc = null;\\r\\n        this.injectRecvOnly = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Explicitly set the primary ssrc to be used in\\r\\n     *  makeVideoPrimarySsrcsConsistent\\r\\n     * @param {number} primarySsrc the primarySsrc to be used\\r\\n     *  in future calls to makeVideoPrimarySsrcsConsistent\\r\\n     * @throws Error if <tt>primarySsrc</tt> is not a number\\r\\n     */\\r\\n    setPrimarySsrc(primarySsrc) {\\r\\n        if (typeof primarySsrc !== 'number') {\\r\\n            throw new Error('Primary SSRC must be a number!');\\r\\n        }\\r\\n        this.cachedPrimarySsrc = primarySsrc;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether or not there is a primary video SSRC cached already.\\r\\n     * @return {boolean}\\r\\n     */\\r\\n    hasPrimarySsrcCached() {\\r\\n        return Boolean(this.cachedPrimarySsrc);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Given an sdp string, either:\\r\\n     *  1) record the primary video and primary rtx ssrcs to be\\r\\n     *   used in future calls to makeVideoPrimarySsrcsConsistent or\\r\\n     *  2) change the primary and primary rtx ssrcs in the given sdp\\r\\n     *   to match the ones previously cached\\r\\n     * @param {string} sdpStr the sdp string to (potentially)\\r\\n     *  change to make the video ssrcs consistent\\r\\n     * @returns {string} a (potentially) modified sdp string\\r\\n     *  with ssrcs consistent with this class' cache\\r\\n     */\\r\\n    makeVideoPrimarySsrcsConsistent(sdpStr) {\\r\\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\\r\\n        const videoMLine = sdpTransformer.selectMedia('video');\\r\\n\\r\\n        if (!videoMLine) {\\r\\n            logger.debug(\\r\\n                `${this.logPrefix} no 'video' media found in the sdp: `\\r\\n                    + `${sdpStr}`);\\r\\n\\r\\n            return sdpStr;\\r\\n        }\\r\\n\\r\\n        if (videoMLine.direction === 'recvonly') {\\r\\n            // If the mline is recvonly, we'll add the primary\\r\\n            //  ssrc as a recvonly ssrc\\r\\n            if (this.cachedPrimarySsrc && this.injectRecvOnly) {\\r\\n                videoMLine.addSSRCAttribute({\\r\\n                    id: this.cachedPrimarySsrc,\\r\\n                    attribute: 'cname',\\r\\n                    value: `recvonly-${this.cachedPrimarySsrc}`\\r\\n                });\\r\\n            } else {\\r\\n                logger.info(\\r\\n                    `${this.logPrefix} no SSRC found for the recvonly video`\\r\\n                        + 'stream!');\\r\\n            }\\r\\n        } else {\\r\\n            const newPrimarySsrc = videoMLine.getPrimaryVideoSsrc();\\r\\n\\r\\n            if (!newPrimarySsrc) {\\r\\n                logger.info(\\r\\n                    `${this.logPrefix} sdp-consistency couldn't`\\r\\n                        + ' parse new primary ssrc');\\r\\n\\r\\n                return sdpStr;\\r\\n            }\\r\\n            if (this.cachedPrimarySsrc) {\\r\\n                logger.info(\\r\\n                    `${this.logPrefix} sdp-consistency replacing new ssrc`\\r\\n                        + `${newPrimarySsrc} with cached `\\r\\n                        + `${this.cachedPrimarySsrc}`);\\r\\n                videoMLine.replaceSSRC(newPrimarySsrc, this.cachedPrimarySsrc);\\r\\n                for (const group of videoMLine.ssrcGroups) {\\r\\n                    if (group.semantics === 'FID') {\\r\\n                        const primarySsrc = parsePrimarySSRC(group);\\r\\n                        const rtxSsrc = parseSecondarySSRC(group);\\r\\n\\r\\n                        // eslint-disable-next-line max-depth\\r\\n                        if (primarySsrc === newPrimarySsrc) {\\r\\n                            group.ssrcs\\r\\n                                = `${this.cachedPrimarySsrc} ${rtxSsrc}`;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            } else {\\r\\n                this.cachedPrimarySsrc = newPrimarySsrc;\\r\\n                logger.info(\\r\\n                    `${this.logPrefix} sdp-consistency caching primary ssrc`\\r\\n                        + `${this.cachedPrimarySsrc}`);\\r\\n            }\\r\\n\\r\\n            this.injectRecvOnly = true;\\r\\n        }\\r\\n\\r\\n        return sdpTransformer.toRawSDP();\\r\\n    }\\r\\n}\\r\\n\",\"import * as JitsiConferenceEvents from '../JitsiConferenceEvents';\\r\\n\\r\\n/**\\r\\n * The value which we use to say, every sound over this threshold\\r\\n * is talking on the mic.\\r\\n * @type {number}\\r\\n */\\r\\nconst SPEECH_DETECT_THRESHOLD = 0.6;\\r\\n\\r\\n/**\\r\\n * Detect user trying to speek while is locally muted and fires an event.\\r\\n */\\r\\nexport default class TalkMutedDetection {\\r\\n    /**\\r\\n     * Creates TalkMutedDetection\\r\\n     * @param conference the JitsiConference instance that created us.\\r\\n     * @param callback the callback to call when detected that the local user is\\r\\n     * talking while her microphone is muted.\\r\\n     * @constructor\\r\\n     */\\r\\n    constructor(conference, callback) {\\r\\n        /**\\r\\n         * The callback to call when detected that the local user is talking\\r\\n         * while her microphone is muted.\\r\\n         *\\r\\n         * @private\\r\\n         */\\r\\n        this._callback = callback;\\r\\n\\r\\n        /**\\r\\n         * The indicator which determines whether <tt>callback</tt> has been\\r\\n         * invoked for the current local audio track of <tt>conference</tt> so\\r\\n         * that it is invoked once only.\\r\\n         *\\r\\n         * @private\\r\\n         */\\r\\n        this._eventFired = false;\\r\\n\\r\\n        // XXX I went back and forth on the subject of where to put the access\\r\\n        // to statistics. On the one had, (1) statistics is likely intended to\\r\\n        // be private to conference and (2) there is a desire to keep the\\r\\n        // dependencies of modules to the minimum (i.e. not have\\r\\n        // TalkMutedDetection depend on statistics). On the other hand, (1)\\r\\n        // statistics is technically not private because\\r\\n        // JitsiConferenceEventManager accesses it and (2) TalkMutedDetection\\r\\n        // works exactly because it knows that there are no audio levels for\\r\\n        // JitsiLocalTrack but there are audio levels for the local participant\\r\\n        // through statistics.\\r\\n        conference.statistics.addAudioLevelListener(\\r\\n            this._audioLevel.bind(this));\\r\\n\\r\\n        conference.on(\\r\\n            JitsiConferenceEvents.TRACK_MUTE_CHANGED,\\r\\n            this._trackMuteChanged.bind(this));\\r\\n        conference.on(\\r\\n            JitsiConferenceEvents.TRACK_ADDED,\\r\\n            this._trackAdded.bind(this));\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n    /**\\r\\n     * Receives audio level events for all send and receive streams.\\r\\n     *\\r\\n     * @param {TraceablePeerConnection} pc - WebRTC PeerConnection object of the\\r\\n     * @param {number} ssrc - The synchronization source identifier (SSRC) of\\r\\n     * the endpoint/participant/stream being reported.\\r\\n     * @param {number} audioLevel - The audio level of <tt>ssrc</tt>.\\r\\n     * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> represents a\\r\\n     * local/send stream or <tt>false</tt> for a remote/receive stream.\\r\\n     */\\r\\n    _audioLevel(tpc, ssrc, audioLevel, isLocal) {\\r\\n        // We are interested in the local audio stream only and if event is not\\r\\n        // sent yet.\\r\\n        if (!isLocal || !this.audioTrack || this._eventFired) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.audioTrack.isMuted()\\r\\n            && audioLevel > SPEECH_DETECT_THRESHOLD) {\\r\\n            this._eventFired = true;\\r\\n            this._callback();\\r\\n        }\\r\\n    }\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Determines whether a specific {@link JitsiTrack} represents a local audio\\r\\n     * track.\\r\\n     *\\r\\n     * @param {JitsiTrack} track - The <tt>JitsiTrack</tt> to be checked whether\\r\\n     * it represents a local audio track.\\r\\n     * @private\\r\\n     * @return {boolean} - <tt>true</tt> if the specified <tt>track</tt>\\r\\n     * represents a local audio track; otherwise, <tt>false</tt>.\\r\\n     */\\r\\n    _isLocalAudioTrack(track) {\\r\\n        return track.isAudioTrack() && track.isLocal();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies this <tt>TalkMutedDetection</tt> that a {@link JitsiTrack} was\\r\\n     * added to the associated {@link JitsiConference}. Looks for the local\\r\\n     * audio track only.\\r\\n     *\\r\\n     * @param {JitsiTrack} track - The added <tt>JitsiTrack</tt>.\\r\\n     * @private\\r\\n     */\\r\\n    _trackAdded(track) {\\r\\n        if (this._isLocalAudioTrack(track)) {\\r\\n            this.audioTrack = track;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies this <tt>TalkMutedDetection</tt> that the mute state of a\\r\\n     * {@link JitsiTrack} has changed. Looks for the local audio track only.\\r\\n     *\\r\\n     * @param {JitsiTrack} track - The <tt>JitsiTrack</tt> whose mute state has\\r\\n     * changed.\\r\\n     * @private\\r\\n     */\\r\\n    _trackMuteChanged(track) {\\r\\n        if (this._isLocalAudioTrack(track) && track.isMuted()) {\\r\\n            this._eventFired = false;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"import * as ConnectionQualityEvents\\r\\n    from '../../service/connectivity/ConnectionQualityEvents';\\r\\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\n\\r\\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\\r\\nconst VideoType = require('../../service/RTC/VideoType');\\r\\nconst Resolutions = require('../../service/RTC/Resolutions');\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * The value to use for the \\\"type\\\" field for messages sent by ConnectionQuality\\r\\n * over the data channel.\\r\\n */\\r\\nconst STATS_MESSAGE_TYPE = 'stats';\\r\\n\\r\\n/**\\r\\n * See media/engine/simulcast.ss from webrtc.org\\r\\n */\\r\\nconst kSimulcastFormats = [\\r\\n    { width: 1920,\\r\\n        height: 1080,\\r\\n        layers: 3,\\r\\n        max: 5000,\\r\\n        target: 4000,\\r\\n        min: 800 },\\r\\n    { width: 1280,\\r\\n        height: 720,\\r\\n        layers: 3,\\r\\n        max: 2500,\\r\\n        target: 2500,\\r\\n        min: 600 },\\r\\n    { width: 960,\\r\\n        height: 540,\\r\\n        layers: 3,\\r\\n        max: 900,\\r\\n        target: 900,\\r\\n        min: 450 },\\r\\n    { width: 640,\\r\\n        height: 360,\\r\\n        layers: 2,\\r\\n        max: 700,\\r\\n        target: 500,\\r\\n        min: 150 },\\r\\n    { width: 480,\\r\\n        height: 270,\\r\\n        layers: 2,\\r\\n        max: 450,\\r\\n        target: 350,\\r\\n        min: 150 },\\r\\n    { width: 320,\\r\\n        height: 180,\\r\\n        layers: 1,\\r\\n        max: 200,\\r\\n        target: 150,\\r\\n        min: 30 }\\r\\n];\\r\\n\\r\\n/**\\r\\n * The maximum bitrate to use as a measurement against the participant's current\\r\\n * bitrate. This cap helps in the cases where the participant's bitrate is high\\r\\n * but not enough to fulfill high targets, such as with 1080p.\\r\\n */\\r\\nconst MAX_TARGET_BITRATE = 2500;\\r\\n\\r\\n/**\\r\\n * The initial bitrate for video in kbps.\\r\\n */\\r\\nlet startBitrate = 800;\\r\\n\\r\\n\\r\\n/**\\r\\n * The current cap (in kbps) put on the video stream (or null if there isn't\\r\\n * a cap).  If there is a cap, we'll take it into account when calculating\\r\\n * the current quality.\\r\\n */\\r\\nlet videoBitrateCap = null;\\r\\n\\r\\n/**\\r\\n * Gets the expected bitrate (in kbps) in perfect network conditions.\\r\\n * @param simulcast {boolean} whether simulcast is enabled or not.\\r\\n * @param resolution {Resolution} the resolution.\\r\\n * @param millisSinceStart {number} the number of milliseconds since sending\\r\\n * video started.\\r\\n */\\r\\nfunction getTarget(simulcast, resolution, millisSinceStart) {\\r\\n    // Completely ignore the bitrate in the first 5 seconds, as the first\\r\\n    // event seems to fire very early and the value is suspicious and causes\\r\\n    // false positives.\\r\\n    if (millisSinceStart < 15000) {\\r\\n        return 1;\\r\\n    }\\r\\n\\r\\n    let target = 0;\\r\\n    let height = Math.min(resolution.height, resolution.width);\\r\\n\\r\\n    if (simulcast) {\\r\\n        // Find the first format with height no bigger than ours.\\r\\n        let simulcastFormat = kSimulcastFormats.find(f => f.height <= height);\\r\\n\\r\\n        if (simulcastFormat) {\\r\\n            // Sum the target fields from all simulcast layers for the given\\r\\n            // resolution (e.g. 720p + 360p + 180p).\\r\\n            for (height = simulcastFormat.height; height >= 180; height /= 2) {\\r\\n                const targetHeight = height;\\r\\n\\r\\n                simulcastFormat\\r\\n                    = kSimulcastFormats.find(f => f.height === targetHeight);\\r\\n                if (simulcastFormat) {\\r\\n                    target += simulcastFormat.target;\\r\\n                } else {\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    } else {\\r\\n        // See GetMaxDefaultVideoBitrateKbps in\\r\\n        // media/engine/webrtcvideoengine2.cc from webrtc.org\\r\\n        const pixels = resolution.width * resolution.height;\\r\\n\\r\\n        if (pixels <= 320 * 240) {\\r\\n            target = 600;\\r\\n        } else if (pixels <= 640 * 480) {\\r\\n            target = 1700;\\r\\n        } else if (pixels <= 960 * 540) {\\r\\n            target = 2000;\\r\\n        } else {\\r\\n            target = 2500;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Allow for an additional 1 second for ramp up -- delay any initial drop\\r\\n    // of connection quality by 1 second.\\r\\n    return Math.min(target, rampUp(Math.max(0, millisSinceStart - 1000)));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Gets the bitrate to which GCC would have ramped up in perfect network\\r\\n * conditions after millisSinceStart milliseconds.\\r\\n * @param millisSinceStart {number} the number of milliseconds since sending\\r\\n * video was enabled.\\r\\n */\\r\\nfunction rampUp(millisSinceStart) {\\r\\n    if (millisSinceStart > 60000) {\\r\\n        return Number.MAX_SAFE_INTEGER;\\r\\n    }\\r\\n\\r\\n    // According to GCC the send side bandwidth estimation grows with at most\\r\\n    // 8% per second.\\r\\n    // https://tools.ietf.org/html/draft-ietf-rmcat-gcc-02#section-5.5\\r\\n    return startBitrate * Math.pow(1.08, millisSinceStart / 1000);\\r\\n}\\r\\n\\r\\n/**\\r\\n * A class which monitors the local statistics coming from the RTC modules, and\\r\\n * calculates a \\\"connection quality\\\" value, in percent, for the media\\r\\n * connection. A value of 100% indicates a very good network connection, and a\\r\\n * value of 0% indicates a poor connection.\\r\\n */\\r\\nexport default class ConnectionQuality {\\r\\n    /**\\r\\n     *\\r\\n     * @param conference\\r\\n     * @param eventEmitter\\r\\n     * @param options\\r\\n     */\\r\\n    constructor(conference, eventEmitter, options) {\\r\\n        this.eventEmitter = eventEmitter;\\r\\n\\r\\n        /**\\r\\n         * The owning JitsiConference.\\r\\n         */\\r\\n        this._conference = conference;\\r\\n\\r\\n        /**\\r\\n         * Holds statistics about the local connection quality.\\r\\n         */\\r\\n        this._localStats = {\\r\\n            connectionQuality: 100,\\r\\n            jvbRTT: undefined\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * The time this._localStats.connectionQuality was last updated.\\r\\n         */\\r\\n        this._lastConnectionQualityUpdate = -1;\\r\\n\\r\\n        /**\\r\\n         * Maps a participant ID to an object holding connection quality\\r\\n         * statistics received from this participant.\\r\\n         */\\r\\n        this._remoteStats = {};\\r\\n\\r\\n        /**\\r\\n         * The time that the ICE state last changed to CONNECTED. We use this\\r\\n         * to calculate how much time we as a sender have had to ramp-up.\\r\\n         */\\r\\n        this._timeIceConnected = -1;\\r\\n\\r\\n        /**\\r\\n         * The time that local video was unmuted. We use this to calculate how\\r\\n         * much time we as a sender have had to ramp-up.\\r\\n         */\\r\\n        this._timeVideoUnmuted = -1;\\r\\n\\r\\n        /**\\r\\n         * The time at which a video bitrate cap was last removed.  We use\\r\\n         * this to calculate how much time we, as a sender, have had to\\r\\n         * ramp-up\\r\\n         */\\r\\n        this._timeLastBwCapRemoved = -1;\\r\\n\\r\\n        // We assume a global startBitrate value for the sake of simplicity.\\r\\n        if (options.config.startBitrate && options.config.startBitrate > 0) {\\r\\n            startBitrate = options.config.startBitrate;\\r\\n        }\\r\\n\\r\\n        // TODO: consider ignoring these events and letting the user of\\r\\n        // lib-jitsi-meet handle these separately.\\r\\n        conference.on(\\r\\n            ConferenceEvents.CONNECTION_INTERRUPTED,\\r\\n            () => {\\r\\n                this._updateLocalConnectionQuality(0);\\r\\n                this.eventEmitter.emit(\\r\\n                    ConnectionQualityEvents.LOCAL_STATS_UPDATED,\\r\\n                    this._localStats);\\r\\n                this._broadcastLocalStats();\\r\\n            });\\r\\n\\r\\n        conference.room.addListener(\\r\\n            XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\\r\\n            (jingleSession, newState) => {\\r\\n                if (!jingleSession.isP2P && newState === 'connected') {\\r\\n                    this._timeIceConnected = window.performance.now();\\r\\n                }\\r\\n            });\\r\\n\\r\\n        // Listen to DataChannel message from other participants in the\\r\\n        // conference, and update the _remoteStats field accordingly.\\r\\n        conference.on(\\r\\n            ConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\\r\\n            (participant, payload) => {\\r\\n                if (payload.type === STATS_MESSAGE_TYPE) {\\r\\n                    this._updateRemoteStats(\\r\\n                        participant.getId(), payload.values);\\r\\n                }\\r\\n            });\\r\\n\\r\\n        // Listen to local statistics events originating from the RTC module\\r\\n        // and update the _localStats field.\\r\\n        // Oh, and by the way, the resolutions of all remote participants are\\r\\n        // also piggy-backed in these \\\"local\\\" statistics. It's obvious, really,\\r\\n        // if one carefully reads the *code* (but not the docs) in\\r\\n        // UI/VideoLayout/VideoLayout.js#updateLocalConnectionStats in\\r\\n        // jitsi-meet\\r\\n        // TODO: We should keep track of the remote resolution in _remoteStats,\\r\\n        // and notify about changes via separate events.\\r\\n        conference.statistics.addConnectionStatsListener(\\r\\n            this._updateLocalStats.bind(this));\\r\\n\\r\\n        // Save the last time we were unmuted.\\r\\n        conference.on(\\r\\n            ConferenceEvents.TRACK_MUTE_CHANGED,\\r\\n            track => {\\r\\n                if (track.isVideoTrack()) {\\r\\n                    if (track.isMuted()) {\\r\\n                        this._timeVideoUnmuted = -1;\\r\\n                    } else {\\r\\n                        this._maybeUpdateUnmuteTime();\\r\\n                    }\\r\\n                }\\r\\n            });\\r\\n        conference.on(\\r\\n            ConferenceEvents.TRACK_ADDED,\\r\\n            track => {\\r\\n                if (track.isVideoTrack() && !track.isMuted()) {\\r\\n                    this._maybeUpdateUnmuteTime();\\r\\n                }\\r\\n            });\\r\\n\\r\\n        conference.on(\\r\\n            ConferenceEvents.SERVER_REGION_CHANGED,\\r\\n            serverRegion => {\\r\\n                this._localStats.serverRegion = serverRegion;\\r\\n            });\\r\\n\\r\\n        conference.on(\\r\\n            ConferenceEvents.PROPERTIES_CHANGED,\\r\\n            properties => {\\r\\n                this._localStats.bridgeCount\\r\\n                    = Number((properties || {})['bridge-count']);\\r\\n            }\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets _timeVideoUnmuted if it was previously unset. If it was already set,\\r\\n     * doesn't change it.\\r\\n     */\\r\\n    _maybeUpdateUnmuteTime() {\\r\\n        if (this._timeVideoUnmuted < 0) {\\r\\n            this._timeVideoUnmuted = window.performance.now();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Calculates a new \\\"connection quality\\\" value.\\r\\n     * @param videoType {VideoType} the type of the video source (camera or\\r\\n     * a screen capture).\\r\\n     * @param isMuted {boolean} whether the local video is muted.\\r\\n     * @param resolutionName {Resolution} the input resolution used by the\\r\\n     * camera.\\r\\n     * @returns {*} the newly calculated connection quality.\\r\\n     */\\r\\n    _calculateConnectionQuality(videoType, isMuted, resolutionName) {\\r\\n\\r\\n        // resolutionName is an index into Resolutions (where \\\"720\\\" is\\r\\n        // \\\"1280x720\\\" and \\\"960\\\" is \\\"960x720\\\" ...).\\r\\n        const resolution = Resolutions[resolutionName];\\r\\n\\r\\n        let quality = 100;\\r\\n        let packetLoss;\\r\\n\\r\\n        // TODO: take into account packet loss for received streams\\r\\n\\r\\n        if (this._localStats.packetLoss) {\\r\\n            packetLoss = this._localStats.packetLoss.upload;\\r\\n\\r\\n            // Ugly Hack Alert (UHA):\\r\\n            // The packet loss for the upload direction is calculated based on\\r\\n            // incoming RTCP Receiver Reports. Since we don't have RTCP\\r\\n            // termination for audio, these reports come from the actual\\r\\n            // receivers in the conference and therefore the reported packet\\r\\n            // loss includes loss from the bridge to the receiver.\\r\\n            // When we are sending video this effect is small, because the\\r\\n            // number of video packets is much larger than the number of audio\\r\\n            // packets (and our calculation is based on the total number of\\r\\n            // received and lost packets).\\r\\n            // When video is muted, however, the effect might be significant,\\r\\n            // but we don't know what it is. We do know that it is positive, so\\r\\n            // as a temporary solution, until RTCP termination is implemented\\r\\n            // for the audio streams, we relax the packet loss checks here.\\r\\n            if (isMuted) {\\r\\n                packetLoss *= 0.5;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (isMuted || !resolution || videoType === VideoType.DESKTOP\\r\\n            || this._timeIceConnected < 0\\r\\n            || this._timeVideoUnmuted < 0) {\\r\\n\\r\\n            // Calculate a value based on packet loss only.\\r\\n            if (packetLoss === undefined) {\\r\\n                logger.error('Cannot calculate connection quality, unknown '\\r\\n                    + 'packet loss.');\\r\\n                quality = 100;\\r\\n            } else if (packetLoss <= 2) {\\r\\n                quality = 100; // Full 5 bars.\\r\\n            } else if (packetLoss <= 4) {\\r\\n                quality = 70; // 4 bars\\r\\n            } else if (packetLoss <= 6) {\\r\\n                quality = 50; // 3 bars\\r\\n            } else if (packetLoss <= 8) {\\r\\n                quality = 30; // 2 bars\\r\\n            } else if (packetLoss <= 12) {\\r\\n                quality = 10; // 1 bars\\r\\n            } else {\\r\\n                quality = 0; // Still 1 bar, but slower climb-up.\\r\\n            }\\r\\n        } else {\\r\\n            // Calculate a value based on the sending bitrate.\\r\\n\\r\\n            // Figure out if simulcast is in use\\r\\n            const activeTPC = this._conference.getActivePeerConnection();\\r\\n            const isSimulcastOn\\r\\n                = Boolean(activeTPC && activeTPC.isSimulcastOn());\\r\\n\\r\\n            const newVideoBitrateCap\\r\\n                = activeTPC && activeTPC.bandwidthLimiter\\r\\n                && activeTPC.bandwidthLimiter.getBandwidthLimit('video');\\r\\n\\r\\n            // If we had a cap set but there isn't one now, then it has\\r\\n            // just been 'lifted', so we should treat this like a new\\r\\n            // ramp up.\\r\\n            if (!newVideoBitrateCap && videoBitrateCap) {\\r\\n                this._timeLastBwCapRemoved = window.performance.now();\\r\\n\\r\\n                // Set the start bitrate to whatever we were just capped to\\r\\n                startBitrate = videoBitrateCap;\\r\\n            }\\r\\n            videoBitrateCap = newVideoBitrateCap;\\r\\n\\r\\n            // time since sending of video was enabled.\\r\\n            const millisSinceStart = window.performance.now()\\r\\n                - Math.max(this._timeVideoUnmuted,\\r\\n                    this._timeIceConnected,\\r\\n                    this._timeLastBwCapRemoved);\\r\\n\\r\\n            // expected sending bitrate in perfect conditions\\r\\n            let target\\r\\n                = getTarget(isSimulcastOn, resolution, millisSinceStart);\\r\\n\\r\\n            target = Math.min(0.9 * target, MAX_TARGET_BITRATE);\\r\\n\\r\\n            if (videoBitrateCap) {\\r\\n                target = Math.min(target, videoBitrateCap);\\r\\n            }\\r\\n\\r\\n            quality = 100 * this._localStats.bitrate.upload / target;\\r\\n\\r\\n            // Whatever the bitrate, drop early if there is significant loss\\r\\n            if (packetLoss && packetLoss >= 10) {\\r\\n                quality = Math.min(quality, 30);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // Make sure that the quality doesn't climb quickly\\r\\n        if (this._lastConnectionQualityUpdate > 0) {\\r\\n            const maxIncreasePerSecond = 2;\\r\\n            const prevConnectionQuality = this._localStats.connectionQuality;\\r\\n            const diffSeconds\\r\\n                = (window.performance.now() - this._lastConnectionQualityUpdate)\\r\\n                    / 1000;\\r\\n\\r\\n            quality\\r\\n                = Math.min(\\r\\n                    quality,\\r\\n                    prevConnectionQuality\\r\\n                        + (diffSeconds * maxIncreasePerSecond));\\r\\n        }\\r\\n\\r\\n        return Math.min(100, quality);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates the localConnectionQuality value\\r\\n     * @param values {number} the new value. Should be in [0, 100].\\r\\n     */\\r\\n    _updateLocalConnectionQuality(value) {\\r\\n        this._localStats.connectionQuality = value;\\r\\n        this._lastConnectionQualityUpdate = window.performance.now();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Broadcasts the local statistics to all other participants in the\\r\\n     * conference.\\r\\n     */\\r\\n    _broadcastLocalStats() {\\r\\n        // Send only the data that remote participants care about.\\r\\n        const data = {\\r\\n            bitrate: this._localStats.bitrate,\\r\\n            packetLoss: this._localStats.packetLoss,\\r\\n            connectionQuality: this._localStats.connectionQuality,\\r\\n            jvbRTT: this._localStats.jvbRTT,\\r\\n            serverRegion: this._localStats.serverRegion,\\r\\n            avgAudioLevels: this._localStats.localAvgAudioLevels\\r\\n        };\\r\\n\\r\\n        try {\\r\\n            this._conference.broadcastEndpointMessage({\\r\\n                type: STATS_MESSAGE_TYPE,\\r\\n                values: data });\\r\\n        } catch (e) {\\r\\n            // We often hit this in the beginning of a call, before the data\\r\\n            // channel is ready. It is not a big problem, because we will\\r\\n            // send the statistics again after a few seconds, and the error is\\r\\n            // already logged elsewhere. So just ignore it.\\r\\n\\r\\n            // let errorMsg = \\\"Failed to broadcast local stats\\\";\\r\\n            // logger.error(errorMsg, e);\\r\\n            // GlobalOnErrorHandler.callErrorHandler(\\r\\n            //    new Error(errorMsg + \\\": \\\" + e));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates the local statistics\\r\\n     * @param {TraceablePeerConnection} tpc the peerconnection which emitted\\r\\n     * the stats\\r\\n     * @param data new statistics\\r\\n     */\\r\\n    _updateLocalStats(tpc, data) {\\r\\n        // Update jvbRTT\\r\\n        if (!tpc.isP2P) {\\r\\n            const jvbRTT\\r\\n                = data.transport\\r\\n                    && data.transport.length && data.transport[0].rtt;\\r\\n\\r\\n            this._localStats.jvbRTT = jvbRTT ? jvbRTT : undefined;\\r\\n        }\\r\\n\\r\\n        // Do not continue with processing of other stats if they do not\\r\\n        // originate from the active peerconnection\\r\\n        if (tpc !== this._conference.getActivePeerConnection()) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        let key;\\r\\n        const updateLocalConnectionQuality\\r\\n            = !this._conference.isConnectionInterrupted();\\r\\n        const localVideoTrack\\r\\n            = this._conference.getLocalVideoTrack();\\r\\n        const videoType\\r\\n            = localVideoTrack ? localVideoTrack.videoType : undefined;\\r\\n        const isMuted = localVideoTrack ? localVideoTrack.isMuted() : true;\\r\\n        const resolution = localVideoTrack ? localVideoTrack.resolution : null;\\r\\n\\r\\n        if (!isMuted) {\\r\\n            this._maybeUpdateUnmuteTime();\\r\\n        }\\r\\n\\r\\n        // Copy the fields already in 'data'.\\r\\n        for (key in data) {\\r\\n            if (data.hasOwnProperty(key)) {\\r\\n                this._localStats[key] = data[key];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // And re-calculate the connectionQuality field.\\r\\n        if (updateLocalConnectionQuality) {\\r\\n            this._updateLocalConnectionQuality(\\r\\n                this._calculateConnectionQuality(\\r\\n                    videoType,\\r\\n                    isMuted,\\r\\n                    resolution));\\r\\n        }\\r\\n\\r\\n        this.eventEmitter.emit(\\r\\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\\r\\n            this._localStats);\\r\\n        this._broadcastLocalStats();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates remote statistics\\r\\n     * @param id the id of the remote participant\\r\\n     * @param data the statistics received\\r\\n     */\\r\\n    _updateRemoteStats(id, data) {\\r\\n        // Use only the fields we need\\r\\n        this._remoteStats[id] = {\\r\\n            bitrate: data.bitrate,\\r\\n            packetLoss: data.packetLoss,\\r\\n            connectionQuality: data.connectionQuality,\\r\\n            jvbRTT: data.jvbRTT,\\r\\n            serverRegion: data.serverRegion,\\r\\n            avgAudioLevels: data.avgAudioLevels\\r\\n        };\\r\\n\\r\\n        this.eventEmitter.emit(\\r\\n            ConnectionQualityEvents.REMOTE_STATS_UPDATED,\\r\\n            id,\\r\\n            this._remoteStats[id]);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the local statistics.\\r\\n     * Exported only for use in jitsi-meet-torture.\\r\\n     */\\r\\n    getStats() {\\r\\n        return this._localStats;\\r\\n    }\\r\\n}\\r\\n\",\"/* global __filename */\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * A delayed ICE failed notification which is triggered only if the ICE\\r\\n * connection does not recover soon after or before the XMPP connection is\\r\\n * restored (if it was ever broken). If ICE fails while the XMPP connection is\\r\\n * not broken then the notifications will be sent after 2 seconds delay. This\\r\\n * extra delay is not intentional just a side effect of the code.\\r\\n * NOTE that this delayed task can only be used if PING is supported by the XMPP\\r\\n * server.\\r\\n */\\r\\nexport default class IceFailedNotification {\\r\\n    /**\\r\\n     * Creates new {@code DelayedIceFailed} task.\\r\\n     * @param {JitsiConference} conference\\r\\n     */\\r\\n    constructor(conference) {\\r\\n        this._conference = conference;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Starts the task.\\r\\n     * @param {JingleSessionPC} session - the JVB Jingle session.\\r\\n     */\\r\\n    start(session) {\\r\\n        // The 65 seconds are greater than the default Prosody's BOSH\\r\\n        // timeout of 60. This gives some time for the XMPP connection\\r\\n        // to recover.\\r\\n        this._conference.xmpp.ping(65000).then(\\r\\n            () => {\\r\\n                if (this._canceled) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                if (this._conference.isJvbConnectionInterrupted) {\\r\\n                    this._iceFailedTimeout = window.setTimeout(() => {\\r\\n                        logger.info(\\r\\n                            'Sending ICE failed'\\r\\n                            + ' - the connection has not recovered');\\r\\n                        this._iceFailedTimeout = undefined;\\r\\n                        session.sendIceFailedNotification();\\r\\n                    }, 2000);\\r\\n                } else {\\r\\n                    logger.info(\\r\\n                        'ICE connection restored - not sending ICE failed');\\r\\n                }\\r\\n            },\\r\\n            error => {\\r\\n                logger.error(\\r\\n                    'PING error/timeout - not sending ICE failed', error);\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Cancels the task.\\r\\n     */\\r\\n    cancel() {\\r\\n        this._canceled = true;\\r\\n        if (this._iceFailedTimeout) {\\r\\n            window.clearTimeout(this._iceFailedTimeout);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"/* global __filename */\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport { createE2eRttEvent } from '../../service/statistics/AnalyticsEvents';\\r\\nimport * as E2ePingEvents\\r\\n    from '../../service/e2eping/E2ePingEvents';\\r\\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\\r\\nimport Statistics from '../statistics/statistics';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * The 'type' of a message which designates an e2e ping request.\\r\\n * @type {string}\\r\\n */\\r\\nconst E2E_PING_REQUEST = 'e2e-ping-request';\\r\\n\\r\\n/**\\r\\n * The 'type' of a message which designates an e2e ping response.\\r\\n * @type {string}\\r\\n */\\r\\nconst E2E_PING_RESPONSE = 'e2e-ping-response';\\r\\n\\r\\n/**\\r\\n * Saves e2e ping related state for a single JitsiParticipant.\\r\\n */\\r\\nclass ParticipantWrapper {\\r\\n    /**\\r\\n     * Creates a ParticipantWrapper\\r\\n     * @param {JitsiParticipant} participant - The remote participant that this\\r\\n     * object wraps.\\r\\n     * @param {E2ePing} e2eping\\r\\n     */\\r\\n    constructor(participant, e2eping) {\\r\\n        // The JitsiParticipant\\r\\n        this.participant = participant;\\r\\n\\r\\n        // The E2ePing\\r\\n        this.e2eping = e2eping;\\r\\n\\r\\n        // Caches the ID\\r\\n        this.id = participant.getId();\\r\\n\\r\\n        // Recently sent requests\\r\\n        this.requests = {};\\r\\n\\r\\n        // The ID of the last sent request. We just increment it for each new\\r\\n        // request. Start at 1 so we can consider only thruthy values valid.\\r\\n        this.lastRequestId = 1;\\r\\n\\r\\n        this.clearIntervals = this.clearIntervals.bind(this);\\r\\n        this.sendRequest = this.sendRequest.bind(this);\\r\\n        this.handleResponse = this.handleResponse.bind(this);\\r\\n        this.maybeSendAnalytics = this.maybeSendAnalytics.bind(this);\\r\\n        this.sendAnalytics = this.sendAnalytics.bind(this);\\r\\n\\r\\n        // If the data channel was already open (this is likely a participant\\r\\n        // joining an existing conference) send a request immediately.\\r\\n        if (e2eping.isDataChannelOpen) {\\r\\n            this.sendRequest();\\r\\n        }\\r\\n\\r\\n        this.pingInterval = window.setInterval(\\r\\n            this.sendRequest, e2eping.pingIntervalMs);\\r\\n        this.analyticsInterval = window.setTimeout(\\r\\n            this.maybeSendAnalytics, this.e2eping.analyticsIntervalMs);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Clears the interval which sends pings.\\r\\n     * @type {*}\\r\\n     */\\r\\n    clearIntervals() {\\r\\n        if (this.pingInterval) {\\r\\n            window.clearInterval(this.pingInterval);\\r\\n        }\\r\\n        if (this.analyticsInterval) {\\r\\n            window.clearInterval(this.analyticsInterval);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends the next ping request.\\r\\n     * @type {*}\\r\\n     */\\r\\n    sendRequest() {\\r\\n        const requestId = this.lastRequestId++;\\r\\n        const requestMessage = {\\r\\n            type: E2E_PING_REQUEST,\\r\\n            id: requestId\\r\\n        };\\r\\n\\r\\n        this.e2eping.sendMessage(requestMessage, this.id);\\r\\n        this.requests[requestId] = {\\r\\n            id: requestId,\\r\\n            timeSent: window.performance.now()\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles a response from this participant.\\r\\n     * @type {*}\\r\\n     */\\r\\n    handleResponse(response) {\\r\\n        const request = this.requests[response.id];\\r\\n\\r\\n        if (request) {\\r\\n            request.rtt = window.performance.now() - request.timeSent;\\r\\n            this.e2eping.eventEmitter.emit(\\r\\n                E2ePingEvents.E2E_RTT_CHANGED,\\r\\n                this.participant,\\r\\n                request.rtt);\\r\\n        }\\r\\n\\r\\n        this.maybeSendAnalytics();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Goes over the requests, clearing ones which we don't need anymore, and\\r\\n     * if it finds at least one request with a valid RTT in the last\\r\\n     * 'analyticsIntervalMs' then sends an analytics event.\\r\\n     * @type {*}\\r\\n     */\\r\\n    maybeSendAnalytics() {\\r\\n        const now = window.performance.now();\\r\\n\\r\\n        // The RTT we'll report is the minimum RTT measured in the last\\r\\n        // analyticsInterval\\r\\n        let rtt = Infinity;\\r\\n        let request, requestId;\\r\\n\\r\\n        // It's time to send analytics. Clean up all requests and find the\\r\\n        for (requestId in this.requests) {\\r\\n            if (this.requests.hasOwnProperty(requestId)) {\\r\\n                request = this.requests[requestId];\\r\\n\\r\\n                if (request.timeSent < now - this.e2eping.analyticsIntervalMs) {\\r\\n                    // An old request. We don't care about it anymore.\\r\\n                    delete this.requests[requestId];\\r\\n                } else if (request.rtt) {\\r\\n                    rtt = Math.min(rtt, request.rtt);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (rtt < Infinity) {\\r\\n            this.sendAnalytics(rtt);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends an analytics event for this participant with the given RTT.\\r\\n     * @type {*}\\r\\n     */\\r\\n    sendAnalytics(rtt) {\\r\\n        Statistics.sendAnalytics(createE2eRttEvent(\\r\\n            this.id,\\r\\n            this.participant.getProperty('region'),\\r\\n            rtt));\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Implements end-to-end ping (from one conference participant to another) via\\r\\n * the jitsi-videobridge channel (either WebRTC data channel or web socket).\\r\\n *\\r\\n * TODO: use a broadcast message instead of individual pings to each remote\\r\\n * participant.\\r\\n *\\r\\n * This class:\\r\\n * 1. Sends periodic ping requests to all other participants in the\\r\\n * conference.\\r\\n * 2. Responds to ping requests from other participants.\\r\\n * 3. Fires events with the end-to-end RTT to each participant whenever a\\r\\n * response is received.\\r\\n * 4. Fires analytics events with the end-to-end RTT periodically.\\r\\n */\\r\\nexport default class E2ePing {\\r\\n    /**\\r\\n     * @param {JitsiConference} conference - The conference.\\r\\n     * @param {Function} sendMessage - The function to use to send a message.\\r\\n     * @param {Object} options\\r\\n     */\\r\\n    constructor(conference, options, sendMessage) {\\r\\n        this.conference = conference;\\r\\n        this.eventEmitter = conference.eventEmitter;\\r\\n        this.sendMessage = sendMessage;\\r\\n\\r\\n        // The interval at which pings will be sent (<= 0 disables sending).\\r\\n        this.pingIntervalMs = 10000;\\r\\n\\r\\n        // The interval at which analytics events will be sent.\\r\\n        this.analyticsIntervalMs = 60000;\\r\\n\\r\\n        // Maps a participant ID to its ParticipantWrapper\\r\\n        this.participants = {};\\r\\n\\r\\n        // Whether the WebRTC channel has been opened or not.\\r\\n        this.isDataChannelOpen = false;\\r\\n\\r\\n        if (options && options.e2eping) {\\r\\n            if (typeof options.e2eping.pingInterval === 'number') {\\r\\n                this.pingIntervalMs = options.e2eping.pingInterval;\\r\\n            }\\r\\n            if (typeof options.e2eping.analyticsInterval === 'number') {\\r\\n                this.analyticsIntervalMs = options.e2eping.analyticsInterval;\\r\\n            }\\r\\n\\r\\n            // We want to report at most once a ping interval.\\r\\n            if (this.analyticsIntervalMs > 0 && this.analyticsIntervalMs\\r\\n                < this.pingIntervalMs) {\\r\\n                this.analyticsIntervalMs = this.pingIntervalMs;\\r\\n            }\\r\\n        }\\r\\n        logger.info(\\r\\n            `Initializing e2e ping; pingInterval=${\\r\\n                this.pingIntervalMs}, analyticsInterval=${\\r\\n                this.analyticsIntervalMs}.`);\\r\\n\\r\\n        this.participantJoined = this.participantJoined.bind(this);\\r\\n        conference.on(\\r\\n            JitsiConferenceEvents.USER_JOINED,\\r\\n            this.participantJoined);\\r\\n\\r\\n        this.participantLeft = this.participantLeft.bind(this);\\r\\n        conference.on(\\r\\n            JitsiConferenceEvents.USER_LEFT,\\r\\n            this.participantLeft);\\r\\n\\r\\n        this.messageReceived = this.messageReceived.bind(this);\\r\\n        conference.on(\\r\\n            JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\\r\\n            this.messageReceived);\\r\\n\\r\\n        this.dataChannelOpened = this.dataChannelOpened.bind(this);\\r\\n        conference.on(\\r\\n            JitsiConferenceEvents.DATA_CHANNEL_OPENED,\\r\\n            this.dataChannelOpened);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies this instance that the communications channel has been opened\\r\\n     * and it can now send messages via sendMessage.\\r\\n     */\\r\\n    dataChannelOpened() {\\r\\n        this.isDataChannelOpen = true;\\r\\n\\r\\n        // We don't want to wait the whole interval before sending the first\\r\\n        // request, but we can't send it immediately after the participant joins\\r\\n        // either, because our data channel might not have initialized.\\r\\n        // So once the data channel initializes, send requests to everyone.\\r\\n        // Wait an additional 200ms to give a chance to the remote side (if it\\r\\n        // also just connected as is the case for the first 2 participants in a\\r\\n        // conference) to open its data channel.\\r\\n        for (const id in this.participants) {\\r\\n            if (this.participants.hasOwnProperty(id)) {\\r\\n                const participantWrapper = this.participants[id];\\r\\n\\r\\n                window.setTimeout(participantWrapper.sendRequest, 200);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles a message that was received.\\r\\n     *\\r\\n     * @param participant - The message sender.\\r\\n     * @param payload - The payload of the message.\\r\\n     */\\r\\n    messageReceived(participant, payload) {\\r\\n        // Listen to E2E PING requests and responses from other participants\\r\\n        // in the conference.\\r\\n        if (payload.type === E2E_PING_REQUEST) {\\r\\n            this.handleRequest(participant.getId(), payload);\\r\\n        } else if (payload.type === E2E_PING_RESPONSE) {\\r\\n            this.handleResponse(participant.getId(), payload);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles a participant joining the conference. Starts to send ping\\r\\n     * requests to the participant.\\r\\n     *\\r\\n     * @param {String} id - The ID of the participant.\\r\\n     * @param {JitsiParticipant} participant - The participant that joined.\\r\\n     */\\r\\n    participantJoined(id, participant) {\\r\\n        if (this.pingIntervalMs <= 0) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.participants[id]) {\\r\\n            logger.info(\\r\\n                `Participant wrapper already exists for ${id}. Clearing.`);\\r\\n            this.participants[id].clearIntervals();\\r\\n            delete this.participants[id];\\r\\n        }\\r\\n\\r\\n        this.participants[id] = new ParticipantWrapper(participant, this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles a participant leaving the conference. Stops sending requests.\\r\\n     *\\r\\n     * @param {String} id - The ID of the participant.\\r\\n     */\\r\\n    participantLeft(id) {\\r\\n        if (this.pingIntervalMs <= 0) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.participants[id]) {\\r\\n            this.participants[id].clearIntervals();\\r\\n            delete this.participants[id];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles a ping request coming from another participant.\\r\\n     *\\r\\n     * @param {string} participantId - The ID of the participant who sent the\\r\\n     * request.\\r\\n     * @param {Object} request - The request.\\r\\n     */\\r\\n    handleRequest(participantId, request) {\\r\\n        // If it's a valid request, just send a response.\\r\\n        if (request && request.id) {\\r\\n            const response = {\\r\\n                type: E2E_PING_RESPONSE,\\r\\n                id: request.id\\r\\n            };\\r\\n\\r\\n            this.sendMessage(response, participantId);\\r\\n        } else {\\r\\n            logger.info(\\r\\n                `Received an invalid e2e ping request from ${participantId}.`);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles a ping response coming from another participant\\r\\n     * @param {string} participantId - The ID of the participant who sent the\\r\\n     * response.\\r\\n     * @param {Object} response - The response.\\r\\n     */\\r\\n    handleResponse(participantId, response) {\\r\\n        const participantWrapper = this.participants[participantId];\\r\\n\\r\\n        if (participantWrapper) {\\r\\n            participantWrapper.handleResponse(response);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stops this E2ePing (i.e. stop sending requests).\\r\\n     */\\r\\n    stop() {\\r\\n        logger.info('Stopping e2eping');\\r\\n\\r\\n        this.conference.off(\\r\\n            JitsiConferenceEvents.USER_JOINED,\\r\\n            this.participantJoined);\\r\\n        this.conference.off(\\r\\n            JitsiConferenceEvents.USER_LEFT,\\r\\n            this.participantLeft);\\r\\n        this.conference.off(\\r\\n            JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\\r\\n            this.messageReceived);\\r\\n        this.conference.off(\\r\\n            JitsiConferenceEvents.DATA_CHANNEL_OPENED,\\r\\n            this.dataChannelOpened);\\r\\n\\r\\n        for (const id in this.participants) {\\r\\n            if (this.participants.hasOwnProperty(id)) {\\r\\n                this.participants[id].clearIntervals();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this.participants = {};\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"/* global __filename */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Emits {@link JitsiConferenceEvents.JVB121_STATUS} events based on the current\\r\\n * P2P status and the conference participants count. See the event description\\r\\n * for more info.\\r\\n */\\r\\nexport default class Jvb121EventGenerator {\\r\\n    /**\\r\\n     * Creates new <tt>Jvb121EventGenerator</tt> for the given conference.\\r\\n     * @param {JitsiConference} conference\\r\\n     */\\r\\n    constructor(conference) {\\r\\n        this._conference = conference;\\r\\n\\r\\n        /**\\r\\n         * Indicates whether it's a one to one JVB conference (<tt>true</tt>)\\r\\n         * or a multiparty (<tt>false</tt>). Will be also <tt>false</tt> if\\r\\n         * the conference is currently in the P2P mode.\\r\\n         * @type {boolean}\\r\\n         * @private\\r\\n         */\\r\\n        this._jvb121 = true;\\r\\n\\r\\n        this._conference.addEventListener(\\r\\n            JitsiConferenceEvents.USER_JOINED, () => this.evaluateStatus());\\r\\n        this._conference.addEventListener(\\r\\n            JitsiConferenceEvents.USER_LEFT, () => this.evaluateStatus());\\r\\n        this._conference.addEventListener(\\r\\n            JitsiConferenceEvents.P2P_STATUS, () => this.evaluateStatus());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks whether the JVB121 value should be updated and a new event\\r\\n     * emitted.\\r\\n     */\\r\\n    evaluateStatus() {\\r\\n        const oldStatus = this._jvb121;\\r\\n        const newStatus\\r\\n            = !this._conference.isP2PActive()\\r\\n                && this._conference.getParticipantCount() <= 2;\\r\\n\\r\\n        if (oldStatus !== newStatus) {\\r\\n            this._jvb121 = newStatus;\\r\\n            logger.debug(`JVB121 status ${oldStatus} => ${newStatus}`);\\r\\n            this._conference.eventEmitter.emit(\\r\\n                JitsiConferenceEvents.JVB121_STATUS, oldStatus, newStatus);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\r\\n\\r\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\r\\n\\r\\nimport JibriSession from './JibriSession';\\r\\nimport recordingXMLUtils from './recordingXMLUtils';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * A class responsible for starting and stopping recording sessions and emitting\\r\\n * state updates for them.\\r\\n */\\r\\nclass RecordingManager {\\r\\n    /**\\r\\n     * Initialize {@code RecordingManager} with other objects that are necessary\\r\\n     * for starting a recording.\\r\\n     *\\r\\n     * @param {ChatRoom} chatRoom - The chat room to handle.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    constructor(chatRoom) {\\r\\n        /**\\r\\n         * All known recording sessions from the current conference.\\r\\n         */\\r\\n        this._sessions = {};\\r\\n\\r\\n        this._chatRoom = chatRoom;\\r\\n\\r\\n        this.onPresence = this.onPresence.bind(this);\\r\\n\\r\\n        this._chatRoom.eventEmitter.addListener(\\r\\n            XMPPEvents.PRESENCE_RECEIVED, this.onPresence);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Finds an existing recording session by session ID.\\r\\n     *\\r\\n     * @param {string} sessionID - The session ID associated with the recording.\\r\\n     * @returns {JibriSession|undefined}\\r\\n     */\\r\\n    getSession(sessionID) {\\r\\n        return this._sessions[sessionID];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback to invoke to parse through a presence update to find recording\\r\\n     * related updates (from Jibri participant doing the recording and the\\r\\n     * focus which controls recording).\\r\\n     *\\r\\n     * @param {Object} event - The presence data from the pubsub event.\\r\\n     * @param {Node} event.presence - An XMPP presence update.\\r\\n     * @param {boolean} event.fromHiddenDomain - Whether or not the update comes\\r\\n     * from a participant that is trusted but not visible, as would be the case\\r\\n     * with the Jibri recorder participant.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    onPresence({ fromHiddenDomain, presence }) {\\r\\n        if (recordingXMLUtils.isFromFocus(presence)) {\\r\\n            this._handleFocusPresence(presence);\\r\\n        } else if (fromHiddenDomain) {\\r\\n            this._handleJibriPresence(presence);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Start a recording session.\\r\\n     *\\r\\n     * @param {Object} options - Configuration for the recording.\\r\\n     * @param {string} [options.appData] - Data specific to the app/service that\\r\\n     * the result file will be uploaded.\\r\\n     * @param {string} [optional] options.broadcastId - The channel on which a\\r\\n     * live stream will occur.\\r\\n     * @param {string} options.mode - The mode in which recording should be\\r\\n     * started. Recognized values are \\\"file\\\" and \\\"stream\\\".\\r\\n     * @param {string} [optional] options.streamId - The stream key to be used\\r\\n     * for live stream broadcasting. Required for live streaming.\\r\\n     * @returns {Promise} A promise for starting a recording, which will pass\\r\\n     * back the session on success. The promise resolves after receiving an\\r\\n     * acknowledgment of the start request success or fail.\\r\\n     */\\r\\n    startRecording(options) {\\r\\n        const session = new JibriSession({\\r\\n            ...options,\\r\\n            connection: this._chatRoom.connection\\r\\n        });\\r\\n\\r\\n        return session.start({\\r\\n            appData: options.appData,\\r\\n            broadcastId: options.broadcastId,\\r\\n            focusMucJid: this._chatRoom.focusMucJid,\\r\\n            streamId: options.streamId\\r\\n        })\\r\\n            .then(() => {\\r\\n                // Only store the session and emit if the session has not been\\r\\n                // added already. This is a workaround for the session getting\\r\\n                // created due to a presence update to announce a \\\"pending\\\"\\r\\n                // recording being received before JibriSession#start finishes.\\r\\n                if (!this.getSession(session.getID())) {\\r\\n                    this._addSession(session);\\r\\n                    this._emitSessionUpdate(session);\\r\\n                }\\r\\n\\r\\n                return session;\\r\\n            })\\r\\n            .catch(error => {\\r\\n                this._emitSessionUpdate(session);\\r\\n\\r\\n                return Promise.reject(error);\\r\\n            });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stop a recording session.\\r\\n     *\\r\\n     * @param {string} sessionID - The ID associated with the recording session\\r\\n     * to be stopped.\\r\\n     * @returns {Promise} The promise resolves after receiving an\\r\\n     * acknowledgment of the stop request success or fail.\\r\\n     */\\r\\n    stopRecording(sessionID) {\\r\\n        const session = this.getSession(sessionID);\\r\\n\\r\\n        if (session) {\\r\\n            return session.stop({ focusMucJid: this._chatRoom.focusMucJid });\\r\\n        }\\r\\n\\r\\n        return Promise.reject(new Error('Could not find session'));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stores a reference to the passed in JibriSession.\\r\\n     *\\r\\n     * @param {string} session - The JibriSession instance to store.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _addSession(session) {\\r\\n        this._sessions[session.getID()] = session;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Create a new instance of a recording session and stores a reference to\\r\\n     * it.\\r\\n     *\\r\\n     * @param {string} sessionID - The session ID of the recording in progress.\\r\\n     * @param {string} status - The current status of the recording session.\\r\\n     * @param {string} mode - The recording mode of the session.\\r\\n     * @returns {JibriSession}\\r\\n     */\\r\\n    _createSession(sessionID, status, mode) {\\r\\n        const session = new JibriSession({\\r\\n            connection: this._chatRoom.connection,\\r\\n            focusMucJid: this._chatRoom.focusMucJid,\\r\\n            mode,\\r\\n            sessionID,\\r\\n            status\\r\\n        });\\r\\n\\r\\n        this._addSession(session);\\r\\n\\r\\n        return session;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Notifies listeners of an update to a recording session.\\r\\n     *\\r\\n     * @param {JibriSession} session - The session that has been updated.\\r\\n     */\\r\\n    _emitSessionUpdate(session) {\\r\\n        this._chatRoom.eventEmitter.emit(\\r\\n            XMPPEvents.RECORDER_STATE_CHANGED, session);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Parses presence to update an existing JibriSession or to create a new\\r\\n     * JibriSession.\\r\\n     *\\r\\n     * @param {Node} presence - An XMPP presence update.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _handleFocusPresence(presence) {\\r\\n        const jibriStatus = recordingXMLUtils.getFocusRecordingUpdate(presence);\\r\\n\\r\\n        if (!jibriStatus) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const { sessionID, status, error, recordingMode } = jibriStatus;\\r\\n\\r\\n        // We'll look for an existing session or create one (in case we're a\\r\\n        // participant joining a call with an existing recording going on).\\r\\n        let session = this.getSession(sessionID);\\r\\n\\r\\n        // Handle the case where a status update is received in presence but\\r\\n        // the local participant has joined while the JibriSession has already\\r\\n        // ended.\\r\\n        if (!session && status === 'off') {\\r\\n            logger.warn(\\r\\n                'Ignoring recording presence update',\\r\\n                'Received a new session with status off.');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // Jicofo sends updates via presence, and any extension in presence\\r\\n        // is sent until it is explicitly removed.  It's difficult for\\r\\n        // Jicofo to know when a presence has been sent once, so it won't\\r\\n        // remove jibri status extension.  This means we may receive the same\\r\\n        // status update more than once, so check for that here\\r\\n        if (session\\r\\n            && session.getStatus() === status\\r\\n            && session.getError() === error) {\\r\\n            logger.warn('Ignoring duplicate presence update: ',\\r\\n                JSON.stringify(jibriStatus));\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (!session) {\\r\\n            session = this._createSession(sessionID, status, recordingMode);\\r\\n        }\\r\\n\\r\\n        session.setStatus(status);\\r\\n\\r\\n        if (error) {\\r\\n            session.setError(error);\\r\\n        }\\r\\n\\r\\n        this._emitSessionUpdate(session);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles updates from the Jibri which can broadcast a YouTube URL that\\r\\n     * needs to be updated in a JibriSession.\\r\\n     *\\r\\n     * @param {Node} presence - An XMPP presence update.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _handleJibriPresence(presence) {\\r\\n        const { liveStreamViewURL, mode, sessionID }\\r\\n            = recordingXMLUtils.getHiddenDomainUpdate(presence);\\r\\n\\r\\n        if (!sessionID) {\\r\\n            logger.warn(\\r\\n                'Ignoring potential jibri presence due to no session id.');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        let session = this.getSession(sessionID);\\r\\n\\r\\n        if (!session) {\\r\\n            session = this._createSession(sessionID, '', mode);\\r\\n        }\\r\\n\\r\\n        session.setLiveStreamViewURL(liveStreamViewURL);\\r\\n\\r\\n        this._emitSessionUpdate(session);\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default RecordingManager;\\r\\n\",\"import browser from '../browser';\\r\\nimport { createRttByRegionEvent }\\r\\n    from '../../service/statistics/AnalyticsEvents';\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport RTCUtils from '../RTC/RTCUtils';\\r\\nimport Statistics from '../statistics/statistics';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * The options to pass to createOffer (we need to offer to receive *something*\\r\\n * for the PC to gather candidates.\\r\\n */\\r\\nconst offerOptions = {\\r\\n    offerToReceiveAudio: 1,\\r\\n    offerToReceiveVideo: 0\\r\\n};\\r\\n\\r\\n\\r\\n/**\\r\\n * The interval at which the webrtc engine sends STUN keep alive requests.\\r\\n * @type {number}\\r\\n */\\r\\nconst stunKeepAliveIntervalMs = 10000;\\r\\n\\r\\n/**\\r\\n * Wraps a PeerConnection with one specific STUN server and measures the RTT\\r\\n * to the STUN server.\\r\\n */\\r\\nclass PCMonitor {\\r\\n    /* eslint-disable max-params */\\r\\n    /**\\r\\n     *\\r\\n     * @param {String} region - The region of the STUN server.\\r\\n     * @param {String} address - The address of the STUN server.\\r\\n     * @param {number} getStatsIntervalMs how often to call getStats.\\r\\n     * @param {number} delay the delay after which the PeerConnection will be\\r\\n     * started (that is, createOffer and setLocalDescription will be invoked).\\r\\n     *\\r\\n     */\\r\\n    constructor(region, address, getStatsIntervalMs, delay) {\\r\\n        /* eslint-disable max-params */\\r\\n        this.region = region;\\r\\n        this.getStatsIntervalMs = getStatsIntervalMs;\\r\\n        this.getStatsInterval = null;\\r\\n\\r\\n        // What we consider the current RTT. It is Math.min(this.rtts).\\r\\n        this.rtt = Infinity;\\r\\n\\r\\n        // The RTT measurements we've made from the latest getStats() calls.\\r\\n        this.rtts = [];\\r\\n\\r\\n        const iceServers = [ { 'url': `stun:${address}` } ];\\r\\n\\r\\n        this.pc = new RTCUtils.RTCPeerConnectionType(\\r\\n            {\\r\\n                'iceServers': iceServers\\r\\n            });\\r\\n\\r\\n        // Maps a key consisting of the IP address, port and priority of a\\r\\n        // candidate to some state related to it. If we have more than one\\r\\n        // network interface we will might multiple srflx candidates and this\\r\\n        // helps to distinguish between then.\\r\\n        this.candidates = {};\\r\\n\\r\\n        this.stopped = false;\\r\\n\\r\\n        this.start = this.start.bind(this);\\r\\n        this.stop = this.stop.bind(this);\\r\\n        this.startStatsInterval = this.startStatsInterval.bind(this);\\r\\n        this.handleCandidateRtt = this.handleCandidateRtt.bind(this);\\r\\n\\r\\n        window.setTimeout(this.start, delay);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Starts this PCMonitor. That is, invokes createOffer and\\r\\n     * setLocalDescription on the PeerConnection and starts an interval which\\r\\n     * calls getStats.\\r\\n     */\\r\\n    start() {\\r\\n        if (this.stopped) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.pc.createOffer(offerOptions).then(offer => {\\r\\n            this.pc.setLocalDescription(\\r\\n                offer,\\r\\n                () => {\\r\\n                    logger.info(\\r\\n                        `setLocalDescription success for ${this.region}`);\\r\\n                    this.startStatsInterval();\\r\\n                },\\r\\n                error => {\\r\\n                    logger.warn(\\r\\n                        `setLocalDescription failed for ${this.region}: ${\\r\\n                            error}`);\\r\\n                }\\r\\n            );\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Starts an interval which invokes getStats on the PeerConnection and\\r\\n     * measures the RTTs for the different candidates.\\r\\n     */\\r\\n    startStatsInterval() {\\r\\n        this.getStatsInterval = window.setInterval(\\r\\n            () => {\\r\\n                // Note that the data that we use to measure the RTT is only\\r\\n                // available in the legacy (callback based) getStats API.\\r\\n                this.pc.getStats(stats => {\\r\\n                    const results = stats.result();\\r\\n\\r\\n                    for (let i = 0; i < results.length; ++i) {\\r\\n                        const res = results[i];\\r\\n                        const rttTotal\\r\\n                            = Number(res.stat('stunKeepaliveRttTotal'));\\r\\n\\r\\n                        // We recognize the results that we care for (local\\r\\n                        // candidates of type srflx) by the existance of the\\r\\n                        // stunKeepaliveRttTotal stat.\\r\\n                        if (rttTotal > 0) {\\r\\n                            const candidateKey\\r\\n                                = `${res.stat('ipAddress')}_${\\r\\n                                    res.stat('portNumber')}_${\\r\\n                                    res.stat('priority')}`;\\r\\n\\r\\n                            this.handleCandidateRtt(\\r\\n                                candidateKey,\\r\\n                                rttTotal,\\r\\n                                Number(\\r\\n                                    res.stat('stunKeepaliveResponsesReceived')),\\r\\n                                Number(\\r\\n                                    res.stat('stunKeepaliveRequestsSent')));\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    // After we've measured the RTT for all candidates we,\\r\\n                    // update the state of the PC with the shortest one.\\r\\n                    let rtt = Infinity;\\r\\n\\r\\n                    for (const key in this.candidates) {\\r\\n                        if (this.candidates.hasOwnProperty(key)\\r\\n                            && this.candidates[key].rtt > 0) {\\r\\n                            rtt = Math.min(rtt, this.candidates[key].rtt);\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    // We keep the last 6 measured RTTs and choose the shortest\\r\\n                    // one to export to analytics. This is because we often see\\r\\n                    // failures get a real measurement which end up as Infinity.\\r\\n                    this.rtts.push(rtt);\\r\\n                    if (this.rtts.length > 6) {\\r\\n                        this.rtts = this.rtts.splice(1, 7);\\r\\n                    }\\r\\n                    this.rtt = Math.min(...this.rtts);\\r\\n                });\\r\\n            },\\r\\n            this.getStatsIntervalMs\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n    /**\\r\\n     * Updates the RTT for a candidate identified by \\\"key\\\" based on the values\\r\\n     * from getStats() and the previously saved state (i.e. old values).\\r\\n     *\\r\\n     * @param {String} key the ID for the candidate\\r\\n     * @param {number} rttTotal the value of the 'stunKeepaliveRttTotal' just\\r\\n     * measured.\\r\\n     * @param {number} responsesReceived the value of the\\r\\n     * 'stunKeepaliveResponsesReceived' stat just measured.\\r\\n     * @param {number} requestsSent the value of the 'stunKeepaliveRequestsSent'\\r\\n     * stat just measured.\\r\\n     */\\r\\n    handleCandidateRtt(key, rttTotal, responsesReceived, requestsSent) {\\r\\n        /* eslist-enable max-params */\\r\\n        if (!this.candidates[key]) {\\r\\n            this.candidates[key] = {\\r\\n                rttTotal: 0,\\r\\n                responsesReceived: 0,\\r\\n                requestsSent: 0,\\r\\n                rtt: NaN\\r\\n            };\\r\\n        }\\r\\n\\r\\n        const rttTotalDiff = rttTotal - this.candidates[key].rttTotal;\\r\\n        const responsesReceivedDiff\\r\\n            = responsesReceived - this.candidates[key].responsesReceived;\\r\\n\\r\\n        // We observe that when the difference between the number of requests\\r\\n        // and responses has grown (i.q. when the value below is positive), the\\r\\n        // the RTT measurements are incorrect (too low). For this reason we\\r\\n        // ignore these measurement (setting rtt=NaN), but update our state.\\r\\n        const requestsResponsesDiff\\r\\n            = (requestsSent - responsesReceived)\\r\\n            - (this.candidates[key].requestsSent\\r\\n                - this.candidates[key].responsesReceived);\\r\\n        let rtt = NaN;\\r\\n\\r\\n        if (responsesReceivedDiff > 0 && requestsResponsesDiff === 0) {\\r\\n            rtt = rttTotalDiff / responsesReceivedDiff;\\r\\n        }\\r\\n\\r\\n        this.candidates[key].rttTotal = rttTotal;\\r\\n        this.candidates[key].responsesReceived = responsesReceived;\\r\\n        this.candidates[key].requestsSent = requestsSent;\\r\\n        this.candidates[key].rtt = rtt;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * Stops this PCMonitor, clearing its intervals and stopping the\\r\\n     * PeerConnection.\\r\\n     */\\r\\n    stop() {\\r\\n        if (this.getStatsInterval) {\\r\\n            window.clearInterval(this.getStatsInterval);\\r\\n        }\\r\\n\\r\\n        this.pc.close();\\r\\n\\r\\n        this.stopped = true;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * A class which monitors the round-trip time (RTT) to a set of STUN servers.\\r\\n * The measured RTTs are sent as analytics events. It uses a separate\\r\\n * PeerConnection (represented as a PCMonitor) for each STUN server.\\r\\n */\\r\\nexport default class RttMonitor {\\r\\n    /**\\r\\n     * Initializes a new RttMonitor.\\r\\n     * @param {Object} config the object holding the configuration.\\r\\n     */\\r\\n    constructor(config) {\\r\\n        if (!config || !config.enabled\\r\\n            || !browser.supportsLocalCandidateRttStatistics()) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // Maps a region to the PCMonitor instance for that region.\\r\\n        this.pcMonitors = {};\\r\\n\\r\\n        this.startPCMonitors = this.startPCMonitors.bind(this);\\r\\n        this.sendAnalytics = this.sendAnalytics.bind(this);\\r\\n        this.stop = this.stop.bind(this);\\r\\n\\r\\n        this.analyticsInterval = null;\\r\\n        this.stopped = false;\\r\\n\\r\\n        const initialDelay = config.initialDelay || 60000;\\r\\n\\r\\n\\r\\n        logger.info(\\r\\n            `Starting RTT monitor with an initial delay of ${initialDelay}`);\\r\\n\\r\\n\\r\\n        window.setTimeout(\\r\\n            () => this.startPCMonitors(config),\\r\\n            initialDelay);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Starts the PCMonitors according to the configuration.\\r\\n     */\\r\\n    startPCMonitors(config) {\\r\\n        if (!config.stunServers) {\\r\\n            logger.warn('No stun servers configured.');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.stopped) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const getStatsIntervalMs\\r\\n            = config.getStatsInterval || stunKeepAliveIntervalMs;\\r\\n        const analyticsIntervalMs\\r\\n            = config.analyticsInterval || getStatsIntervalMs;\\r\\n        const count = Object.keys(config.stunServers).length;\\r\\n        const offset = getStatsIntervalMs / count;\\r\\n\\r\\n        // We delay the initialization of each PC so that they are uniformly\\r\\n        // distributed across the getStatsIntervalMs.\\r\\n        let i = 0;\\r\\n\\r\\n        for (const region in config.stunServers) {\\r\\n            if (config.stunServers.hasOwnProperty(region)) {\\r\\n                const address = config.stunServers[region];\\r\\n\\r\\n                this.pcMonitors[region]\\r\\n                    = new PCMonitor(\\r\\n                        region,\\r\\n                        address,\\r\\n                        getStatsIntervalMs,\\r\\n                        offset * i);\\r\\n                i++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        window.setTimeout(\\r\\n            () => {\\r\\n                if (!this.stopped) {\\r\\n                    this.analyticsInterval\\r\\n                        = window.setInterval(\\r\\n                        this.sendAnalytics, analyticsIntervalMs);\\r\\n                }\\r\\n            },\\r\\n            1000);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends an analytics event with the measured RTT to each region/STUN\\r\\n     * server.\\r\\n     */\\r\\n    sendAnalytics() {\\r\\n        const rtts = {};\\r\\n\\r\\n        for (const region in this.pcMonitors) {\\r\\n            if (this.pcMonitors.hasOwnProperty(region)) {\\r\\n                const rtt = this.pcMonitors[region].rtt;\\r\\n\\r\\n                if (!isNaN(rtt) && rtt !== Infinity) {\\r\\n                    rtts[region.replace('-', '_')] = rtt;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (rtts) {\\r\\n            Statistics.sendAnalytics(createRttByRegionEvent(rtts));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stops this RttMonitor, clearing all intervals and closing all\\r\\n     * PeerConnections.\\r\\n     */\\r\\n    stop() {\\r\\n        logger.info('Stopping RttMonitor.');\\r\\n        this.stopped = true;\\r\\n        for (const region in this.pcMonitors) {\\r\\n            if (this.pcMonitors.hasOwnProperty(region)) {\\r\\n                this.pcMonitors[region].stop();\\r\\n            }\\r\\n        }\\r\\n        this.pcMonitors = {};\\r\\n\\r\\n        if (this.analyticsInterval) {\\r\\n            window.clearInterval(this.analyticsInterval);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"/* global __filename */\\r\\n\\r\\nimport { createRtpStatsEvent } from '../../service/statistics/AnalyticsEvents';\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport * as ConnectionQualityEvents\\r\\n    from '../../service/connectivity/ConnectionQualityEvents';\\r\\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport browser from '../browser';\\r\\nimport Statistics from './statistics';\\r\\nimport * as VideoType from '../../service/RTC/VideoType';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * This will calculate an average for one, named stat and submit it to\\r\\n * the analytics module when requested. It automatically counts the samples.\\r\\n */\\r\\nclass AverageStatReport {\\r\\n    /**\\r\\n     * Creates new <tt>AverageStatReport</tt> for given name.\\r\\n     * @param {string} name that's the name of the event that will be reported\\r\\n     * to the analytics module.\\r\\n     */\\r\\n    constructor(name) {\\r\\n        this.name = name;\\r\\n        this.count = 0;\\r\\n        this.sum = 0;\\r\\n        this.samples = [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds the next value that will be included in the average when\\r\\n     * {@link calculate} is called.\\r\\n     * @param {number} nextValue\\r\\n     */\\r\\n    addNext(nextValue) {\\r\\n        if (typeof nextValue !== 'number') {\\r\\n            logger.error(\\r\\n                `${this.name} - invalid value for idx: ${this.count}`,\\r\\n                nextValue);\\r\\n        } else if (!isNaN(nextValue)) {\\r\\n            this.sum += nextValue;\\r\\n            this.samples.push(nextValue);\\r\\n            this.count += 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Calculates an average for the samples collected using {@link addNext}.\\r\\n     * @return {number|NaN} an average of all collected samples or <tt>NaN</tt>\\r\\n     * if no samples were collected.\\r\\n     */\\r\\n    calculate() {\\r\\n        return this.sum / this.count;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Appends the report to the analytics \\\"data\\\" object. The object will be\\r\\n     * set under <tt>prefix</tt> + {@link this.name} key.\\r\\n     * @param {Object} report the analytics \\\"data\\\" object\\r\\n     */\\r\\n    appendReport(report) {\\r\\n        report[`${this.name}_avg`] = this.calculate();\\r\\n        report[`${this.name}_samples`] = JSON.stringify(this.samples);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Clears all memory of any samples collected, so that new average can be\\r\\n     * calculated using this instance.\\r\\n     */\\r\\n    reset() {\\r\\n        this.samples = [];\\r\\n        this.sum = 0;\\r\\n        this.count = 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Class gathers the stats that are calculated and reported for a\\r\\n * {@link TraceablePeerConnection} even if it's not currently active. For\\r\\n * example we want to monitor RTT for the JVB connection while in P2P mode.\\r\\n */\\r\\nclass ConnectionAvgStats {\\r\\n    /**\\r\\n     * Creates new <tt>ConnectionAvgStats</tt>\\r\\n     * @param {AvgRTPStatsReporter} avgRtpStatsReporter\\r\\n     * @param {boolean} isP2P\\r\\n     * @param {number} n the number of samples, before arithmetic mean is to be\\r\\n     * calculated and values submitted to the analytics module.\\r\\n     */\\r\\n    constructor(avgRtpStatsReporter, isP2P, n) {\\r\\n        /**\\r\\n         * Is this instance for JVB or P2P connection ?\\r\\n         * @type {boolean}\\r\\n         */\\r\\n        this.isP2P = isP2P;\\r\\n\\r\\n        /**\\r\\n         * How many samples are to be included in arithmetic mean calculation.\\r\\n         * @type {number}\\r\\n         * @private\\r\\n         */\\r\\n        this._n = n;\\r\\n\\r\\n        /**\\r\\n         * The current sample index. Starts from 0 and goes up to {@link _n})\\r\\n         * when analytics report will be submitted.\\r\\n         * @type {number}\\r\\n         * @private\\r\\n         */\\r\\n        this._sampleIdx = 0;\\r\\n\\r\\n        /**\\r\\n         * Average round trip time reported by the ICE candidate pair.\\r\\n         * @type {AverageStatReport}\\r\\n         */\\r\\n        this._avgRTT = new AverageStatReport('rtt');\\r\\n\\r\\n        /**\\r\\n         * Map stores average RTT to the JVB reported by remote participants.\\r\\n         * Mapped per participant id {@link JitsiParticipant.getId}.\\r\\n         *\\r\\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\\r\\n         * <tt>false</tt>.\\r\\n         *\\r\\n         * @type {Map<string,AverageStatReport>}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgRemoteRTTMap = new Map();\\r\\n\\r\\n        /**\\r\\n         * The conference for which stats will be collected and reported.\\r\\n         * @type {JitsiConference}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgRtpStatsReporter = avgRtpStatsReporter;\\r\\n\\r\\n        /**\\r\\n         * The latest average E2E RTT for the JVB connection only.\\r\\n         *\\r\\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\\r\\n         * <tt>false</tt>.\\r\\n         *\\r\\n         * @type {number}\\r\\n         */\\r\\n        this._avgEnd2EndRTT = undefined;\\r\\n\\r\\n        this._onConnectionStats = (tpc, stats) => {\\r\\n            if (this.isP2P === tpc.isP2P) {\\r\\n                this._calculateAvgStats(stats);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        const conference = avgRtpStatsReporter._conference;\\r\\n\\r\\n        conference.statistics.addConnectionStatsListener(\\r\\n            this._onConnectionStats);\\r\\n\\r\\n        if (!this.isP2P) {\\r\\n            this._onUserLeft = id => this._avgRemoteRTTMap.delete(id);\\r\\n            conference.on(ConferenceEvents.USER_LEFT, this._onUserLeft);\\r\\n\\r\\n            this._onRemoteStatsUpdated\\r\\n                = (id, data) => this._processRemoteStats(id, data);\\r\\n            conference.on(\\r\\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\\r\\n                this._onRemoteStatsUpdated);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Processes next batch of stats.\\r\\n     * @param {go figure} data\\r\\n     * @private\\r\\n     */\\r\\n    _calculateAvgStats(data) {\\r\\n        if (!data) {\\r\\n            logger.error('No stats');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (browser.supportsRTTStatistics()) {\\r\\n            if (data.transport && data.transport.length) {\\r\\n                this._avgRTT.addNext(data.transport[0].rtt);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this._sampleIdx += 1;\\r\\n\\r\\n        if (this._sampleIdx >= this._n) {\\r\\n            if (browser.supportsRTTStatistics()) {\\r\\n                const conference = this._avgRtpStatsReporter._conference;\\r\\n\\r\\n                const batchReport = {\\r\\n                    p2p: this.isP2P,\\r\\n                    'conference_size': conference.getParticipantCount()\\r\\n                };\\r\\n\\r\\n                if (data.transport && data.transport.length) {\\r\\n                    Object.assign(batchReport, {\\r\\n                        'local_candidate_type':\\r\\n                            data.transport[0].localCandidateType,\\r\\n                        'remote_candidate_type':\\r\\n                            data.transport[0].remoteCandidateType,\\r\\n                        'transport_type': data.transport[0].type\\r\\n                    });\\r\\n                }\\r\\n\\r\\n                this._avgRTT.appendReport(batchReport);\\r\\n\\r\\n                if (this.isP2P) {\\r\\n                    // Report RTT diff only for P2P.\\r\\n                    const jvbEnd2EndRTT = this\\r\\n                        ._avgRtpStatsReporter.jvbStatsMonitor._avgEnd2EndRTT;\\r\\n\\r\\n                    if (!isNaN(jvbEnd2EndRTT)) {\\r\\n                        // eslint-disable-next-line dot-notation\\r\\n                        batchReport['rtt_diff']\\r\\n                            = this._avgRTT.calculate() - jvbEnd2EndRTT;\\r\\n                    }\\r\\n                } else {\\r\\n                    // Report end to end RTT only for JVB.\\r\\n                    const avgRemoteRTT = this._calculateAvgRemoteRTT();\\r\\n                    const avgLocalRTT = this._avgRTT.calculate();\\r\\n\\r\\n                    this._avgEnd2EndRTT = avgLocalRTT + avgRemoteRTT;\\r\\n\\r\\n                    if (!isNaN(avgLocalRTT) && !isNaN(avgRemoteRTT)) {\\r\\n                        // eslint-disable-next-line dot-notation\\r\\n                        batchReport['end2end_rtt_avg'] = this._avgEnd2EndRTT;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                Statistics.sendAnalytics(createRtpStatsEvent(batchReport));\\r\\n            }\\r\\n\\r\\n            this._resetAvgStats();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Calculates arithmetic mean of all RTTs towards the JVB reported by\\r\\n     * participants.\\r\\n     * @return {number|NaN} NaN if not available (not enough data)\\r\\n     * @private\\r\\n     */\\r\\n    _calculateAvgRemoteRTT() {\\r\\n        let count = 0, sum = 0;\\r\\n\\r\\n        // FIXME should we ignore RTT for participant\\r\\n        // who \\\"is having connectivity issues\\\" ?\\r\\n        for (const remoteAvg of this._avgRemoteRTTMap.values()) {\\r\\n            const avg = remoteAvg.calculate();\\r\\n\\r\\n            if (!isNaN(avg)) {\\r\\n                sum += avg;\\r\\n                count += 1;\\r\\n                remoteAvg.reset();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return sum / count;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Processes {@link ConnectionQualityEvents.REMOTE_STATS_UPDATED} to analyse\\r\\n     * RTT towards the JVB reported by each participant.\\r\\n     * @param {string} id {@link JitsiParticipant.getId}\\r\\n     * @param {go figure in ConnectionQuality.js} data\\r\\n     * @private\\r\\n     */\\r\\n    _processRemoteStats(id, data) {\\r\\n        const validData = typeof data.jvbRTT === 'number';\\r\\n        let rttAvg = this._avgRemoteRTTMap.get(id);\\r\\n\\r\\n        if (!rttAvg && validData) {\\r\\n            rttAvg = new AverageStatReport(`${id}_stat_rtt`);\\r\\n            this._avgRemoteRTTMap.set(id, rttAvg);\\r\\n        }\\r\\n\\r\\n        if (validData) {\\r\\n            rttAvg.addNext(data.jvbRTT);\\r\\n        } else if (rttAvg) {\\r\\n            this._avgRemoteRTTMap.delete(id);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reset cache of all averages and {@link _sampleIdx}.\\r\\n     * @private\\r\\n     */\\r\\n    _resetAvgStats() {\\r\\n        this._avgRTT.reset();\\r\\n        if (this._avgRemoteRTTMap) {\\r\\n            this._avgRemoteRTTMap.clear();\\r\\n        }\\r\\n        this._sampleIdx = 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     */\\r\\n    dispose() {\\r\\n\\r\\n        const conference = this._avgRtpStatsReporter._conference;\\r\\n\\r\\n        conference.statistics.removeConnectionStatsListener(\\r\\n            this._onConnectionStats);\\r\\n        if (!this.isP2P) {\\r\\n            conference.off(\\r\\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\\r\\n                this._onRemoteStatsUpdated);\\r\\n            conference.off(\\r\\n                ConferenceEvents.USER_LEFT,\\r\\n                this._onUserLeft);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Reports average RTP statistics values (arithmetic mean) to the analytics\\r\\n * module for things like bit rate, bandwidth, packet loss etc. It keeps track\\r\\n * of the P2P vs JVB conference modes and submits the values under different\\r\\n * namespaces (the events for P2P mode have 'p2p.' prefix). Every switch between\\r\\n * P2P mode resets the data collected so far and averages are calculated from\\r\\n * scratch.\\r\\n */\\r\\nexport default class AvgRTPStatsReporter {\\r\\n    /**\\r\\n     * Creates new instance of <tt>AvgRTPStatsReporter</tt>\\r\\n     * @param {JitsiConference} conference\\r\\n     * @param {number} n the number of samples, before arithmetic mean is to be\\r\\n     * calculated and values submitted to the analytics module.\\r\\n     */\\r\\n    constructor(conference, n) {\\r\\n        /**\\r\\n         * How many {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED} samples\\r\\n         * are to be included in arithmetic mean calculation.\\r\\n         * @type {number}\\r\\n         * @private\\r\\n         */\\r\\n        this._n = n;\\r\\n\\r\\n        if (n > 0) {\\r\\n            logger.info(`Avg RTP stats will be calculated every ${n} samples`);\\r\\n        } else {\\r\\n            logger.info('Avg RTP stats reports are disabled.');\\r\\n\\r\\n            // Do not initialize\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        /**\\r\\n         * The current sample index. Starts from 0 and goes up to {@link _n})\\r\\n         * when analytics report will be submitted.\\r\\n         * @type {number}\\r\\n         * @private\\r\\n         */\\r\\n        this._sampleIdx = 0;\\r\\n\\r\\n        /**\\r\\n         * The conference for which stats will be collected and reported.\\r\\n         * @type {JitsiConference}\\r\\n         * @private\\r\\n         */\\r\\n        this._conference = conference;\\r\\n\\r\\n        /**\\r\\n         * Average audio upload bitrate\\r\\n         * XXX What are the units?\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgAudioBitrateUp\\r\\n            = new AverageStatReport('bitrate_audio_upload');\\r\\n\\r\\n        /**\\r\\n         * Average audio download bitrate\\r\\n         * XXX What are the units?\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgAudioBitrateDown\\r\\n            = new AverageStatReport('bitrate_audio_download');\\r\\n\\r\\n        /**\\r\\n         * Average video upload bitrate\\r\\n         * XXX What are the units?\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgVideoBitrateUp\\r\\n            = new AverageStatReport('bitrate_video_upload');\\r\\n\\r\\n        /**\\r\\n         * Average video download bitrate\\r\\n         * XXX What are the units?\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgVideoBitrateDown\\r\\n            = new AverageStatReport('bitrate_video_download');\\r\\n\\r\\n        /**\\r\\n         * Average upload bandwidth\\r\\n         * XXX What are the units?\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgBandwidthUp\\r\\n            = new AverageStatReport('bandwidth_upload');\\r\\n\\r\\n        /**\\r\\n         * Average download bandwidth\\r\\n         * XXX What are the units?\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgBandwidthDown\\r\\n            = new AverageStatReport('bandwidth_download');\\r\\n\\r\\n        /**\\r\\n         * Average total packet loss\\r\\n         * XXX What are the units?\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgPacketLossTotal\\r\\n            = new AverageStatReport('packet_loss_total');\\r\\n\\r\\n        /**\\r\\n         * Average upload packet loss\\r\\n         * XXX What are the units?\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgPacketLossUp\\r\\n            = new AverageStatReport('packet_loss_upload');\\r\\n\\r\\n        /**\\r\\n         * Average download packet loss\\r\\n         * XXX What are the units?\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgPacketLossDown\\r\\n            = new AverageStatReport('packet_loss_download');\\r\\n\\r\\n        /**\\r\\n         * Average FPS for remote videos\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgRemoteFPS = new AverageStatReport('framerate_remote');\\r\\n\\r\\n        /**\\r\\n         * Average FPS for remote screen streaming videos (reported only if not\\r\\n         * a <tt>NaN</tt>).\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgRemoteScreenFPS\\r\\n            = new AverageStatReport('framerate_screen_remote');\\r\\n\\r\\n        /**\\r\\n         * Average FPS for local video (camera)\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgLocalFPS = new AverageStatReport('framerate_local');\\r\\n\\r\\n        /**\\r\\n         * Average FPS for local screen streaming video (reported only if not\\r\\n         * a <tt>NaN</tt>).\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgLocalScreenFPS\\r\\n            = new AverageStatReport('framerate_screen_local');\\r\\n\\r\\n        /**\\r\\n         * Average pixels for remote screen streaming videos (reported only if\\r\\n         * not a <tt>NaN</tt>).\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgRemoteCameraPixels\\r\\n            = new AverageStatReport('pixels_remote');\\r\\n\\r\\n        /**\\r\\n         * Average pixels for remote screen streaming videos (reported only if\\r\\n         * not a <tt>NaN</tt>).\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgRemoteScreenPixels\\r\\n            = new AverageStatReport('pixels_screen_remote');\\r\\n\\r\\n        /**\\r\\n         * Average pixels for local video (camera)\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgLocalCameraPixels\\r\\n            = new AverageStatReport('pixels_local');\\r\\n\\r\\n        /**\\r\\n         * Average pixels for local screen streaming video (reported only if not\\r\\n         * a <tt>NaN</tt>).\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgLocalScreenPixels\\r\\n            = new AverageStatReport('pixels_screen_local');\\r\\n\\r\\n        /**\\r\\n         * Average connection quality as defined by\\r\\n         * the {@link ConnectionQuality} module.\\r\\n         * @type {AverageStatReport}\\r\\n         * @private\\r\\n         */\\r\\n        this._avgCQ = new AverageStatReport('connection_quality');\\r\\n\\r\\n        this._onLocalStatsUpdated = data => this._calculateAvgStats(data);\\r\\n        conference.on(\\r\\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\\r\\n            this._onLocalStatsUpdated);\\r\\n\\r\\n        this._onP2PStatusChanged = () => {\\r\\n            logger.debug('Resetting average stats calculation');\\r\\n            this._resetAvgStats();\\r\\n            this.jvbStatsMonitor._resetAvgStats();\\r\\n            this.p2pStatsMonitor._resetAvgStats();\\r\\n        };\\r\\n        conference.on(\\r\\n            ConferenceEvents.P2P_STATUS,\\r\\n            this._onP2PStatusChanged);\\r\\n\\r\\n        this._onJvb121StatusChanged = (oldStatus, newStatus) => {\\r\\n            // We want to reset only on the transition from false => true,\\r\\n            // because otherwise those stats are resetted on JVB <=> P2P\\r\\n            // transition.\\r\\n            if (newStatus === true) {\\r\\n                logger.info('Resetting JVB avg RTP stats');\\r\\n                this._resetAvgJvbStats();\\r\\n            }\\r\\n        };\\r\\n        conference.on(\\r\\n            ConferenceEvents.JVB121_STATUS,\\r\\n            this._onJvb121StatusChanged);\\r\\n\\r\\n        this.jvbStatsMonitor\\r\\n            = new ConnectionAvgStats(this, false /* JVB */, n);\\r\\n\\r\\n        this.p2pStatsMonitor\\r\\n            = new ConnectionAvgStats(this, true /* P2P */, n);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Processes next batch of stats reported on\\r\\n     * {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED}.\\r\\n     * @param {go figure} data\\r\\n     * @private\\r\\n     */\\r\\n    _calculateAvgStats(data) {\\r\\n\\r\\n        if (!data) {\\r\\n            logger.error('No stats');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const isP2P = this._conference.isP2PActive();\\r\\n        const confSize = this._conference.getParticipantCount();\\r\\n\\r\\n        if (!isP2P && confSize < 2) {\\r\\n\\r\\n            // There's no point in collecting stats for a JVB conference of 1.\\r\\n            // That happens for short period of time after everyone leaves\\r\\n            // the room, until Jicofo terminates the session.\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        /* Uncomment to figure out stats structure\\r\\n        for (const key in data) {\\r\\n            if (data.hasOwnProperty(key)) {\\r\\n                logger.info(`local stat ${key}: `, data[key]);\\r\\n            }\\r\\n        } */\\r\\n\\r\\n        const bitrate = data.bitrate;\\r\\n        const bandwidth = data.bandwidth;\\r\\n        const packetLoss = data.packetLoss;\\r\\n        const frameRate = data.framerate;\\r\\n        const resolution = data.resolution;\\r\\n\\r\\n        if (!bitrate) {\\r\\n            logger.error('No \\\"bitrate\\\"');\\r\\n\\r\\n            return;\\r\\n        } else if (!bandwidth) {\\r\\n            logger.error('No \\\"bandwidth\\\"');\\r\\n\\r\\n            return;\\r\\n        } else if (!packetLoss) {\\r\\n            logger.error('No \\\"packetloss\\\"');\\r\\n\\r\\n            return;\\r\\n        } else if (!frameRate) {\\r\\n            logger.error('No \\\"framerate\\\"');\\r\\n\\r\\n            return;\\r\\n        } else if (!resolution) {\\r\\n            logger.error('No resolution');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._avgAudioBitrateUp.addNext(bitrate.audio.upload);\\r\\n        this._avgAudioBitrateDown.addNext(bitrate.audio.download);\\r\\n\\r\\n        this._avgVideoBitrateUp.addNext(bitrate.video.upload);\\r\\n        this._avgVideoBitrateDown.addNext(bitrate.video.download);\\r\\n\\r\\n        if (browser.supportsBandwidthStatistics()) {\\r\\n            this._avgBandwidthUp.addNext(bandwidth.upload);\\r\\n            this._avgBandwidthDown.addNext(bandwidth.download);\\r\\n        }\\r\\n\\r\\n        this._avgPacketLossUp.addNext(packetLoss.upload);\\r\\n        this._avgPacketLossDown.addNext(packetLoss.download);\\r\\n        this._avgPacketLossTotal.addNext(packetLoss.total);\\r\\n\\r\\n        this._avgCQ.addNext(data.connectionQuality);\\r\\n\\r\\n        if (frameRate) {\\r\\n            this._avgRemoteFPS.addNext(\\r\\n                this._calculateAvgVideoFps(\\r\\n                    frameRate, false /* remote */, VideoType.CAMERA));\\r\\n            this._avgRemoteScreenFPS.addNext(\\r\\n                this._calculateAvgVideoFps(\\r\\n                    frameRate, false /* remote */, VideoType.DESKTOP));\\r\\n\\r\\n            this._avgLocalFPS.addNext(\\r\\n                this._calculateAvgVideoFps(\\r\\n                    frameRate, true /* local */, VideoType.CAMERA));\\r\\n            this._avgLocalScreenFPS.addNext(\\r\\n                this._calculateAvgVideoFps(\\r\\n                    frameRate, true /* local */, VideoType.DESKTOP));\\r\\n        }\\r\\n\\r\\n        if (resolution) {\\r\\n            this._avgRemoteCameraPixels.addNext(\\r\\n                this._calculateAvgVideoPixels(\\r\\n                    resolution, false /* remote */, VideoType.CAMERA));\\r\\n\\r\\n            this._avgRemoteScreenPixels.addNext(\\r\\n                this._calculateAvgVideoPixels(\\r\\n                    resolution, false /* remote */, VideoType.DESKTOP));\\r\\n\\r\\n            this._avgLocalCameraPixels.addNext(\\r\\n                this._calculateAvgVideoPixels(\\r\\n                    resolution, true /* local */, VideoType.CAMERA));\\r\\n\\r\\n            this._avgLocalScreenPixels.addNext(\\r\\n                this._calculateAvgVideoPixels(\\r\\n                    resolution, true /* local */, VideoType.DESKTOP));\\r\\n        }\\r\\n\\r\\n        this._sampleIdx += 1;\\r\\n\\r\\n        if (this._sampleIdx >= this._n) {\\r\\n\\r\\n            const batchReport = {\\r\\n                p2p: isP2P,\\r\\n                'conference_size': confSize\\r\\n            };\\r\\n\\r\\n            if (data.transport && data.transport.length) {\\r\\n                Object.assign(batchReport, {\\r\\n                    'local_candidate_type':\\r\\n                        data.transport[0].localCandidateType,\\r\\n                    'remote_candidate_type':\\r\\n                        data.transport[0].remoteCandidateType,\\r\\n                    'transport_type': data.transport[0].type\\r\\n                });\\r\\n            }\\r\\n\\r\\n            this._avgAudioBitrateUp.appendReport(batchReport);\\r\\n            this._avgAudioBitrateDown.appendReport(batchReport);\\r\\n\\r\\n            this._avgVideoBitrateUp.appendReport(batchReport);\\r\\n            this._avgVideoBitrateDown.appendReport(batchReport);\\r\\n\\r\\n            if (browser.supportsBandwidthStatistics()) {\\r\\n                this._avgBandwidthUp.appendReport(batchReport);\\r\\n                this._avgBandwidthDown.appendReport(batchReport);\\r\\n            }\\r\\n            this._avgPacketLossUp.appendReport(batchReport);\\r\\n            this._avgPacketLossDown.appendReport(batchReport);\\r\\n            this._avgPacketLossTotal.appendReport(batchReport);\\r\\n\\r\\n            this._avgRemoteFPS.appendReport(batchReport);\\r\\n            if (!isNaN(this._avgRemoteScreenFPS.calculate())) {\\r\\n                this._avgRemoteScreenFPS.appendReport(batchReport);\\r\\n            }\\r\\n            this._avgLocalFPS.appendReport(batchReport);\\r\\n            if (!isNaN(this._avgLocalScreenFPS.calculate())) {\\r\\n                this._avgLocalScreenFPS.appendReport(batchReport);\\r\\n            }\\r\\n\\r\\n            this._avgRemoteCameraPixels.appendReport(batchReport);\\r\\n            if (!isNaN(this._avgRemoteScreenPixels.calculate())) {\\r\\n                this._avgRemoteScreenPixels.appendReport(batchReport);\\r\\n            }\\r\\n            this._avgLocalCameraPixels.appendReport(batchReport);\\r\\n            if (!isNaN(this._avgLocalScreenPixels.calculate())) {\\r\\n                this._avgLocalScreenPixels.appendReport(batchReport);\\r\\n            }\\r\\n\\r\\n            this._avgCQ.appendReport(batchReport);\\r\\n\\r\\n            Statistics.sendAnalytics(createRtpStatsEvent(batchReport));\\r\\n\\r\\n            this._resetAvgStats();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Calculates average number of pixels for the report\\r\\n     *\\r\\n     * @param {map} peerResolutions a map of peer resolutions\\r\\n     * @param {boolean} isLocal if the average is to be calculated for the local\\r\\n     * video or <tt>false</tt> if for remote videos.\\r\\n     * @param {VideoType} videoType\\r\\n     * @return {number|NaN} average number of pixels or <tt>NaN</tt> if there\\r\\n     * are no samples.\\r\\n     * @private\\r\\n     */\\r\\n    _calculateAvgVideoPixels(peerResolutions, isLocal, videoType) {\\r\\n        let peerPixelsSum = 0;\\r\\n        let peerCount = 0;\\r\\n        const myID = this._conference.myUserId();\\r\\n\\r\\n        for (const peerID of Object.keys(peerResolutions)) {\\r\\n            if (isLocal ? peerID === myID : peerID !== myID) {\\r\\n                const participant\\r\\n                    = isLocal\\r\\n                        ? null\\r\\n                        : this._conference.getParticipantById(peerID);\\r\\n                const videosResolution = peerResolutions[peerID];\\r\\n\\r\\n                // Do not continue without participant for non local peerID\\r\\n                if ((isLocal || participant) && videosResolution) {\\r\\n                    const peerAvgPixels = this._calculatePeerAvgVideoPixels(\\r\\n                        videosResolution, participant, videoType);\\r\\n\\r\\n                    if (!isNaN(peerAvgPixels)) {\\r\\n                        peerPixelsSum += peerAvgPixels;\\r\\n                        peerCount += 1;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return peerPixelsSum / peerCount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Calculate average pixels for either remote or local participant\\r\\n     * @param {object} videos maps resolution per video SSRC\\r\\n     * @param {JitsiParticipant|null} participant remote participant or\\r\\n     * <tt>null</tt> for local video pixels calculation.\\r\\n     * @param {VideoType} videoType the type of the video for which an average\\r\\n     * will be calculated.\\r\\n     * @return {number|NaN} average video pixels of all participant's videos or\\r\\n     * <tt>NaN</tt> if currently not available\\r\\n     * @private\\r\\n     */\\r\\n    _calculatePeerAvgVideoPixels(videos, participant, videoType) {\\r\\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\\r\\n        let videoTracks = null;\\r\\n\\r\\n        // NOTE that this method is supposed to be called for the stats\\r\\n        // received from the current peerconnection.\\r\\n        const tpc = this._conference.getActivePeerConnection();\\r\\n\\r\\n        if (participant) {\\r\\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\\r\\n            if (videoTracks) {\\r\\n                ssrcs\\r\\n                    = ssrcs.filter(\\r\\n                        ssrc => videoTracks.find(\\r\\n                            track =>\\r\\n                                !track.isMuted()\\r\\n                                    && track.getSSRC() === ssrc\\r\\n                                    && track.videoType === videoType));\\r\\n            }\\r\\n        } else {\\r\\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\\r\\n            ssrcs\\r\\n                = ssrcs.filter(\\r\\n                    ssrc => videoTracks.find(\\r\\n                        track =>\\r\\n                            !track.isMuted()\\r\\n                                && tpc.getLocalSSRC(track) === ssrc\\r\\n                                && track.videoType === videoType));\\r\\n        }\\r\\n\\r\\n        let peerPixelsSum = 0;\\r\\n        let peerSsrcCount = 0;\\r\\n\\r\\n        for (const ssrc of ssrcs) {\\r\\n            const peerSsrcPixels\\r\\n                = Number(videos[ssrc].height) * Number(videos[ssrc].width);\\r\\n\\r\\n            // FPS is reported as 0 for users with no video\\r\\n            if (!isNaN(peerSsrcPixels) && peerSsrcPixels > 0) {\\r\\n                peerPixelsSum += peerSsrcPixels;\\r\\n                peerSsrcCount += 1;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return peerPixelsSum / peerSsrcCount;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * Calculates average FPS for the report\\r\\n     * @param {go figure} frameRate\\r\\n     * @param {boolean} isLocal if the average is to be calculated for the local\\r\\n     * video or <tt>false</tt> if for remote videos.\\r\\n     * @param {VideoType} videoType\\r\\n     * @return {number|NaN} average FPS or <tt>NaN</tt> if there are no samples.\\r\\n     * @private\\r\\n     */\\r\\n    _calculateAvgVideoFps(frameRate, isLocal, videoType) {\\r\\n        let peerFpsSum = 0;\\r\\n        let peerCount = 0;\\r\\n        const myID = this._conference.myUserId();\\r\\n\\r\\n        for (const peerID of Object.keys(frameRate)) {\\r\\n            if (isLocal ? peerID === myID : peerID !== myID) {\\r\\n                const participant\\r\\n                    = isLocal\\r\\n                        ? null : this._conference.getParticipantById(peerID);\\r\\n                const videosFps = frameRate[peerID];\\r\\n\\r\\n                // Do not continue without participant for non local peerID\\r\\n                if ((isLocal || participant) && videosFps) {\\r\\n                    const peerAvgFPS\\r\\n                        = this._calculatePeerAvgVideoFps(\\r\\n                            videosFps, participant, videoType);\\r\\n\\r\\n                    if (!isNaN(peerAvgFPS)) {\\r\\n                        peerFpsSum += peerAvgFPS;\\r\\n                        peerCount += 1;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return peerFpsSum / peerCount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Calculate average FPS for either remote or local participant\\r\\n     * @param {object} videos maps FPS per video SSRC\\r\\n     * @param {JitsiParticipant|null} participant remote participant or\\r\\n     * <tt>null</tt> for local FPS calculation.\\r\\n     * @param {VideoType} videoType the type of the video for which an average\\r\\n     * will be calculated.\\r\\n     * @return {number|NaN} average FPS of all participant's videos or\\r\\n     * <tt>NaN</tt> if currently not available\\r\\n     * @private\\r\\n     */\\r\\n    _calculatePeerAvgVideoFps(videos, participant, videoType) {\\r\\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\\r\\n        let videoTracks = null;\\r\\n\\r\\n        // NOTE that this method is supposed to be called for the stats\\r\\n        // received from the current peerconnection.\\r\\n        const tpc = this._conference.getActivePeerConnection();\\r\\n\\r\\n        if (participant) {\\r\\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\\r\\n            if (videoTracks) {\\r\\n                ssrcs\\r\\n                    = ssrcs.filter(\\r\\n                        ssrc => videoTracks.find(\\r\\n                            track => !track.isMuted()\\r\\n                                && track.getSSRC() === ssrc\\r\\n                                && track.videoType === videoType));\\r\\n            }\\r\\n        } else {\\r\\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\\r\\n            ssrcs\\r\\n                = ssrcs.filter(\\r\\n                    ssrc => videoTracks.find(\\r\\n                        track => !track.isMuted()\\r\\n                            && tpc.getLocalSSRC(track) === ssrc\\r\\n                            && track.videoType === videoType));\\r\\n        }\\r\\n\\r\\n        let peerFpsSum = 0;\\r\\n        let peerSsrcCount = 0;\\r\\n\\r\\n        for (const ssrc of ssrcs) {\\r\\n            const peerSsrcFps = Number(videos[ssrc]);\\r\\n\\r\\n            // FPS is reported as 0 for users with no video\\r\\n            if (!isNaN(peerSsrcFps) && peerSsrcFps > 0) {\\r\\n                peerFpsSum += peerSsrcFps;\\r\\n                peerSsrcCount += 1;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return peerFpsSum / peerSsrcCount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Resets the stats related to JVB connection. Must not be called when in\\r\\n     * P2P mode, because then the {@link AverageStatReport} instances are\\r\\n     * tracking P2P stats. Note that this should never happen unless something\\r\\n     * is wrong with the P2P and JVB121 events.\\r\\n     * @private\\r\\n     */\\r\\n    _resetAvgJvbStats() {\\r\\n        this._resetAvgStats();\\r\\n        this.jvbStatsMonitor._resetAvgStats();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reset cache of all averages and {@link _sampleIdx}.\\r\\n     * @private\\r\\n     */\\r\\n    _resetAvgStats() {\\r\\n        this._avgAudioBitrateUp.reset();\\r\\n        this._avgAudioBitrateDown.reset();\\r\\n\\r\\n        this._avgVideoBitrateUp.reset();\\r\\n        this._avgVideoBitrateDown.reset();\\r\\n\\r\\n        this._avgBandwidthUp.reset();\\r\\n        this._avgBandwidthDown.reset();\\r\\n\\r\\n        this._avgPacketLossUp.reset();\\r\\n        this._avgPacketLossDown.reset();\\r\\n        this._avgPacketLossTotal.reset();\\r\\n\\r\\n        this._avgRemoteFPS.reset();\\r\\n        this._avgRemoteScreenFPS.reset();\\r\\n        this._avgLocalFPS.reset();\\r\\n        this._avgLocalScreenFPS.reset();\\r\\n\\r\\n        this._avgRemoteCameraPixels.reset();\\r\\n        this._avgRemoteScreenPixels.reset();\\r\\n        this._avgLocalCameraPixels.reset();\\r\\n        this._avgLocalScreenPixels.reset();\\r\\n\\r\\n        this._avgCQ.reset();\\r\\n\\r\\n        this._sampleIdx = 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Unregisters all event listeners and stops working.\\r\\n     */\\r\\n    dispose() {\\r\\n        this._conference.off(\\r\\n            ConferenceEvents.P2P_STATUS,\\r\\n            this._onP2PStatusChanged);\\r\\n        this._conference.off(\\r\\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\\r\\n            this._onLocalStatsUpdated);\\r\\n        this._conference.off(\\r\\n            ConferenceEvents.JVB121_STATUS,\\r\\n            this._onJvb121StatusChanged);\\r\\n        this.jvbStatsMonitor.dispose();\\r\\n        this.p2pStatsMonitor.dispose();\\r\\n    }\\r\\n}\\r\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\r\\n\\r\\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\\r\\nimport * as ConnectionQualityEvents from '../../service/connectivity/ConnectionQualityEvents';\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport { createAudioOutputProblemEvent } from '../../service/statistics/AnalyticsEvents';\\r\\n\\r\\nimport Statistics from './statistics';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Number of local samples that will be used for comparison before and after the remote sample is received.\\r\\n */\\r\\nconst NUMBER_OF_LOCAL_SAMPLES = 2;\\r\\n\\r\\n/**\\r\\n * Collects the average audio levels per participant from the local stats and the stats received by every remote\\r\\n * participant and compares them to detect potential audio problem for a participant.\\r\\n */\\r\\nexport default class AudioOutputProblemDetector {\\r\\n\\r\\n    /**\\r\\n     * Creates new <tt>AudioOutputProblemDetector</tt> instance.\\r\\n     *\\r\\n     * @param {JitsiCofnerence} conference - The conference instance to be monitored.\\r\\n     */\\r\\n    constructor(conference) {\\r\\n        this._conference = conference;\\r\\n        this._localAudioLevelCache = {};\\r\\n        this._reportedParticipants = [];\\r\\n        this._audioProblemCandidates = {};\\r\\n        this._numberOfRemoteAudioLevelsReceived = {};\\r\\n        this._onLocalAudioLevelsReport = this._onLocalAudioLevelsReport.bind(this);\\r\\n        this._onRemoteAudioLevelReceived = this._onRemoteAudioLevelReceived.bind(this);\\r\\n        this._clearUserData = this._clearUserData.bind(this);\\r\\n        this._conference.on(ConnectionQualityEvents.REMOTE_STATS_UPDATED, this._onRemoteAudioLevelReceived);\\r\\n        this._conference.statistics.addConnectionStatsListener(this._onLocalAudioLevelsReport);\\r\\n        this._conference.on(ConferenceEvents.USER_LEFT, this._clearUserData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A listener for audio level data received by a remote participant.\\r\\n     *\\r\\n     * @param {string} userID - The user id of the participant that sent the data.\\r\\n     * @param {number} audioLevel - The average audio level value.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onRemoteAudioLevelReceived(userID, { avgAudioLevels }) {\\r\\n        const numberOfReports = (this._numberOfRemoteAudioLevelsReceived[userID] + 1) || 0;\\r\\n\\r\\n        this._numberOfRemoteAudioLevelsReceived[userID] = numberOfReports;\\r\\n\\r\\n        if (this._reportedParticipants.indexOf(userID) !== -1 || (userID in this._audioProblemCandidates)\\r\\n                || avgAudioLevels <= 0 || numberOfReports < 3) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const participant = this._conference.getParticipantById(userID);\\r\\n\\r\\n        if (participant) {\\r\\n            const tracks = participant.getTracksByMediaType(MediaType.AUDIO);\\r\\n\\r\\n            if (tracks.length > 0 && participant.isAudioMuted()) {\\r\\n                // We don't need to report an error if everything seems fine with the participant and its tracks but\\r\\n                // the participant is audio muted. Since those are average audio levels we potentially can receive non\\r\\n                // zero values for muted track.\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        const localAudioLevels = this._localAudioLevelCache[userID];\\r\\n\\r\\n        if (!Array.isArray(localAudioLevels) || localAudioLevels.every(audioLevel => audioLevel === 0)) {\\r\\n            this._audioProblemCandidates[userID] = {\\r\\n                remoteAudioLevels: avgAudioLevels,\\r\\n                localAudioLevels: []\\r\\n            };\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A listener for audio level data retrieved by the local stats.\\r\\n     *\\r\\n     * @param {TraceablePeerConnection} tpc - The <tt>TraceablePeerConnection</tt> instance used to gather the data.\\r\\n     * @param {Object} avgAudioLevels - The average audio levels per participant.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onLocalAudioLevelsReport(tpc, { avgAudioLevels }) {\\r\\n        if (tpc !== this._conference.getActivePeerConnection()) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        Object.keys(avgAudioLevels).forEach(userID => {\\r\\n            if (this._reportedParticipants.indexOf(userID) !== -1) {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            const localAudioLevels = this._localAudioLevelCache[userID];\\r\\n\\r\\n            if (!Array.isArray(localAudioLevels)) {\\r\\n                this._localAudioLevelCache[userID] = [ ];\\r\\n            } else if (localAudioLevels.length >= NUMBER_OF_LOCAL_SAMPLES) {\\r\\n                localAudioLevels.shift();\\r\\n            }\\r\\n\\r\\n            this._localAudioLevelCache[userID].push(avgAudioLevels[userID]);\\r\\n        });\\r\\n\\r\\n\\r\\n        Object.keys(this._audioProblemCandidates).forEach(userID => {\\r\\n            const { localAudioLevels, remoteAudioLevels } = this._audioProblemCandidates[userID];\\r\\n\\r\\n            localAudioLevels.push(avgAudioLevels[userID]);\\r\\n\\r\\n            if (localAudioLevels.length === NUMBER_OF_LOCAL_SAMPLES) {\\r\\n                if (localAudioLevels.every(audioLevel => typeof audioLevel === 'undefined' || audioLevel === 0)) {\\r\\n                    const localAudioLevelsString = JSON.stringify(localAudioLevels);\\r\\n\\r\\n                    Statistics.sendAnalytics(\\r\\n                        createAudioOutputProblemEvent(userID, localAudioLevelsString, remoteAudioLevels));\\r\\n                    logger.warn(`A potential problem is detected with the audio output for participant ${\\r\\n                        userID}, local audio levels: ${localAudioLevelsString}, remote audio levels: ${\\r\\n                        remoteAudioLevels}`);\\r\\n                    this._reportedParticipants.push(userID);\\r\\n                    this._clearUserData(userID);\\r\\n                }\\r\\n\\r\\n                delete this._audioProblemCandidates[userID];\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Clears the data stored for a participant.\\r\\n     *\\r\\n     * @param {string} userID - The id of the participant.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _clearUserData(userID) {\\r\\n        delete this._localAudioLevelCache[userID];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Disposes the allocated resources.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    dispose() {\\r\\n        this._conference.off(ConnectionQualityEvents.REMOTE_STATS_UPDATED, this._onRemoteAudioLevelReceived);\\r\\n        this._conference.off(ConferenceEvents.USER_LEFT, this._clearUserData);\\r\\n        this._conference.statistics.removeConnectionStatsListener(this._onLocalAudioLevelsReport);\\r\\n        this._localAudioLevelCache = undefined;\\r\\n        this._audioProblemCandidates = undefined;\\r\\n        this._reportedParticipants = undefined;\\r\\n        this._numberOfRemoteAudioLevelsReceived = undefined;\\r\\n        this._conference = undefined;\\r\\n    }\\r\\n}\\r\\n\",\"import * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\\r\\nimport SpeakerStats from './SpeakerStats';\\r\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\r\\n\\r\\n/**\\r\\n * A collection for tracking speaker stats. Attaches listeners\\r\\n * to the conference to automatically update on tracked events.\\r\\n */\\r\\nexport default class SpeakerStatsCollector {\\r\\n    /**\\r\\n     * Initializes a new SpeakerStatsCollector instance.\\r\\n     *\\r\\n     * @constructor\\r\\n     * @param {JitsiConference} conference - The conference to track.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    constructor(conference) {\\r\\n        this.stats = {\\r\\n            users: {\\r\\n\\r\\n                // userId: SpeakerStats\\r\\n            },\\r\\n            dominantSpeakerId: null\\r\\n        };\\r\\n\\r\\n        const userId = conference.myUserId();\\r\\n\\r\\n        this.stats.users[userId] = new SpeakerStats(userId, null, true);\\r\\n\\r\\n        conference.addEventListener(\\r\\n            JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED,\\r\\n            this._onDominantSpeaker.bind(this));\\r\\n        conference.addEventListener(\\r\\n            JitsiConferenceEvents.USER_JOINED,\\r\\n            this._onUserJoin.bind(this));\\r\\n        conference.addEventListener(\\r\\n            JitsiConferenceEvents.USER_LEFT,\\r\\n            this._onUserLeave.bind(this));\\r\\n        conference.addEventListener(\\r\\n            JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\\r\\n            this._onDisplayNameChange.bind(this));\\r\\n        if (conference.xmpp) {\\r\\n            conference.xmpp.addListener(\\r\\n                XMPPEvents.SPEAKER_STATS_RECEIVED,\\r\\n                this._updateStats.bind(this));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reacts to dominant speaker change events by changing its speaker stats\\r\\n     * models to reflect the current dominant speaker.\\r\\n     *\\r\\n     * @param {string} dominantSpeakerId - The user id of the new\\r\\n     * dominant speaker.\\r\\n     * @returns {void}\\r\\n     * @private\\r\\n     */\\r\\n    _onDominantSpeaker(dominantSpeakerId) {\\r\\n        const oldDominantSpeaker\\r\\n            = this.stats.users[this.stats.dominantSpeakerId];\\r\\n        const newDominantSpeaker = this.stats.users[dominantSpeakerId];\\r\\n\\r\\n        oldDominantSpeaker && oldDominantSpeaker.setDominantSpeaker(false);\\r\\n        newDominantSpeaker && newDominantSpeaker.setDominantSpeaker(true);\\r\\n        this.stats.dominantSpeakerId = dominantSpeakerId;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reacts to user join events by creating a new SpeakerStats model.\\r\\n     *\\r\\n     * @param {string} userId - The user id of the new user.\\r\\n     * @param {JitsiParticipant} - The JitsiParticipant model for the new user.\\r\\n     * @returns {void}\\r\\n     * @private\\r\\n     */\\r\\n    _onUserJoin(userId, participant) {\\r\\n        let savedUser = this.stats.users[userId];\\r\\n\\r\\n        if (!savedUser) {\\r\\n            savedUser = this.stats.users[userId]\\r\\n                = new SpeakerStats(userId, participant.getDisplayName());\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reacts to user leave events by updating the associated user's\\r\\n     * SpeakerStats model.\\r\\n     *\\r\\n     * @param {string} userId - The user id of the user that left.\\r\\n     * @returns {void}\\r\\n     * @private\\r\\n     */\\r\\n    _onUserLeave(userId) {\\r\\n        const savedUser = this.stats.users[userId];\\r\\n\\r\\n        if (savedUser) {\\r\\n            savedUser.markAsHasLeft();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reacts to user name change events by updating the last known name\\r\\n     * tracked in the associated SpeakerStats model.\\r\\n     *\\r\\n     * @param {string} userId - The user id of the user that left.\\r\\n     * @returns {void}\\r\\n     * @private\\r\\n     */\\r\\n    _onDisplayNameChange(userId, newName) {\\r\\n        const savedUser = this.stats.users[userId];\\r\\n\\r\\n        if (savedUser) {\\r\\n            savedUser.setDisplayName(newName);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Return a copy of the tracked SpeakerStats models.\\r\\n     *\\r\\n     * @returns {Object} The keys are the user ids and the values are the\\r\\n     * associated user's SpeakerStats model.\\r\\n     * @private\\r\\n     */\\r\\n    getStats() {\\r\\n        return this.stats.users;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates of the current stats is requested, passing the new values.\\r\\n     *\\r\\n     * @param {Object} newStats - The new values used to update current one.\\r\\n     * @private\\r\\n     */\\r\\n    _updateStats(newStats) {\\r\\n        for (const userId in newStats) { // eslint-disable-line guard-for-in\\r\\n            let speakerStatsToUpdate;\\r\\n\\r\\n            if (this.stats.users[userId]) {\\r\\n                speakerStatsToUpdate = this.stats.users[userId];\\r\\n\\r\\n                if (!speakerStatsToUpdate.getDisplayName()) {\\r\\n                    speakerStatsToUpdate\\r\\n                        .setDisplayName(newStats[userId].displayName);\\r\\n                }\\r\\n            } else {\\r\\n                speakerStatsToUpdate = new SpeakerStats(\\r\\n                    userId, newStats[userId].displayName);\\r\\n                this.stats.users[userId] = speakerStatsToUpdate;\\r\\n                speakerStatsToUpdate.markAsHasLeft();\\r\\n            }\\r\\n\\r\\n            speakerStatsToUpdate.totalDominantSpeakerTime\\r\\n                = newStats[userId].totalDominantSpeakerTime;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"const AudioRecorder = require('./audioRecorder');\\r\\nconst SphinxService = require(\\r\\n    './transcriptionServices/SphinxTranscriptionService');\\r\\n\\r\\nconst BEFORE_STATE = 'before';\\r\\nconst RECORDING_STATE = 'recording';\\r\\nconst TRANSCRIBING_STATE = 'transcribing';\\r\\nconst FINISHED_STATE = 'finished';\\r\\n\\r\\n// the amount of characters each line in the transcription will have\\r\\nconst MAXIMUM_SENTENCE_LENGTH = 80;\\r\\n\\r\\n/**\\r\\n * This is the main object for handing the Transcription. It interacts with\\r\\n * the audioRecorder to record every person in a conference and sends the\\r\\n * recorder audio to a transcriptionService. The returned speech-to-text result\\r\\n * will be merged to create a transcript\\r\\n * @param {AudioRecorder} audioRecorder An audioRecorder recording a conference\\r\\n */\\r\\nfunction Transcriber() {\\r\\n    // the object which can record all audio in the conference\\r\\n    this.audioRecorder = new AudioRecorder();\\r\\n\\r\\n    // this object can send the recorder audio to a speech-to-text service\\r\\n    this.transcriptionService = new SphinxService();\\r\\n\\r\\n    // holds a counter to keep track if merging can start\\r\\n    this.counter = null;\\r\\n\\r\\n    // holds the date when transcription started which makes it possible\\r\\n    // to calculate the offset between recordings\\r\\n    this.startTime = null;\\r\\n\\r\\n    // will hold the transcription once it is completed\\r\\n    this.transcription = null;\\r\\n\\r\\n    // this will be a method which will be called once the transcription is done\\r\\n    // with the transcription as parameter\\r\\n    this.callback = null;\\r\\n\\r\\n    // stores all the retrieved speech-to-text results to merge together\\r\\n    // this value will store an Array<Word> object\\r\\n    this.results = [];\\r\\n\\r\\n    // Stores the current state of the transcription process\\r\\n    this.state = BEFORE_STATE;\\r\\n\\r\\n    // Used in the updateTranscription method to add a new line when the\\r\\n    // sentence becomes to long\\r\\n    this.lineLength = 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Method to start the transcription process. It will tell the audioRecorder\\r\\n * to start storing all audio streams and record the start time for merging\\r\\n * purposes\\r\\n */\\r\\nTranscriber.prototype.start = function start() {\\r\\n    if (this.state !== BEFORE_STATE) {\\r\\n        throw new Error(\\r\\n            `The transcription can only start when it's in the \\\"${\\r\\n                BEFORE_STATE}\\\" state. It's currently in the \\\"${\\r\\n                this.state}\\\" state`);\\r\\n    }\\r\\n    this.state = RECORDING_STATE;\\r\\n    this.audioRecorder.start();\\r\\n    this.startTime = new Date();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Method to stop the transcription process. It will tell the audioRecorder to\\r\\n * stop, and get all the recorded audio to send it to the transcription service\\r\\n\\r\\n * @param callback a callback which will receive the transcription\\r\\n */\\r\\nTranscriber.prototype.stop = function stop(callback) {\\r\\n    if (this.state !== RECORDING_STATE) {\\r\\n        throw new Error(\\r\\n            `The transcription can only stop when it's in the \\\"${\\r\\n                RECORDING_STATE}\\\" state. It's currently in the \\\"${\\r\\n                this.state}\\\" state`);\\r\\n    }\\r\\n\\r\\n    // stop the recording\\r\\n    console.log('stopping recording and sending audio files');\\r\\n    this.audioRecorder.stop();\\r\\n\\r\\n    // and send all recorded audio the the transcription service\\r\\n    const callBack = blobCallBack.bind(null, this);\\r\\n\\r\\n    this.audioRecorder.getRecordingResults().forEach(recordingResult => {\\r\\n        this.transcriptionService.send(recordingResult, callBack);\\r\\n        this.counter++;\\r\\n    });\\r\\n\\r\\n    // set the state to \\\"transcribing\\\" so that maybeMerge() functions correctly\\r\\n    this.state = TRANSCRIBING_STATE;\\r\\n\\r\\n    // and store the callback for later\\r\\n    this.callback = callback;\\r\\n};\\r\\n\\r\\n/**\\r\\n * This method gets the answer from the transcription service, calculates the\\r\\n * offset and adds is to every Word object. It will also start the merging\\r\\n * when every send request has been received\\r\\n *\\r\\n * note: Make sure to bind this as a Transcription object\\r\\n * @param {Transcriber} transcriber the transcriber instance\\r\\n * @param {RecordingResult} answer a RecordingResult object with a defined\\r\\n * WordArray\\r\\n */\\r\\nfunction blobCallBack(transcriber, answer) {\\r\\n    console.log(\\r\\n        'retrieved an answer from the transcription service. The answer has an'\\r\\n            + ` array of length: ${answer.wordArray.length}`);\\r\\n\\r\\n    // first add the offset between the start of the transcription and\\r\\n    // the start of the recording to all start and end times\\r\\n    if (answer.wordArray.length > 0) {\\r\\n        let offset = answer.startTime.getUTCMilliseconds()\\r\\n            - transcriber.startTime.getUTCMilliseconds();\\r\\n\\r\\n        // transcriber time will always be earlier\\r\\n\\r\\n        if (offset < 0) {\\r\\n            offset = 0; // presume 0 if it somehow not earlier\\r\\n        }\\r\\n\\r\\n        let array = '[';\\r\\n\\r\\n        answer.wordArray.forEach(wordObject => {\\r\\n            wordObject.begin += offset;\\r\\n            wordObject.end += offset;\\r\\n            array += `${wordObject.word},`;\\r\\n        });\\r\\n        array += ']';\\r\\n        console.log(array);\\r\\n\\r\\n        // give a name value to the Array object so that the merging can access\\r\\n        // the name value without having to use the whole recordingResult object\\r\\n        // in the algorithm\\r\\n        answer.wordArray.name = answer.name;\\r\\n    }\\r\\n\\r\\n    // then store the array and decrease the counter\\r\\n    transcriber.results.push(answer.wordArray);\\r\\n    transcriber.counter--;\\r\\n    console.log(`current counter: ${transcriber.counter}`);\\r\\n\\r\\n    // and check if all results have been received.\\r\\n    transcriber.maybeMerge();\\r\\n}\\r\\n\\r\\n/**\\r\\n * this method will check if the counter is zero. If it is, it will call\\r\\n * the merging method\\r\\n */\\r\\nTranscriber.prototype.maybeMerge = function() {\\r\\n    if (this.state === TRANSCRIBING_STATE && this.counter === 0) {\\r\\n        // make sure to include the events in the result arrays before\\r\\n        // merging starts\\r\\n        this.merge();\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * This method will merge all speech-to-text arrays together in one\\r\\n * readable transcription string\\r\\n */\\r\\nTranscriber.prototype.merge = function() {\\r\\n    console.log(\\r\\n        `starting merge process!\\\\n The length of the array: ${\\r\\n            this.results.length}`);\\r\\n    this.transcription = '';\\r\\n\\r\\n    // the merging algorithm will look over all Word objects who are at pos 0 in\\r\\n    // every array. It will then select the one closest in time to the\\r\\n    // previously placed word, while removing the selected word from its array\\r\\n    // note: words can be skipped the skipped word's begin and end time somehow\\r\\n    // end up between the closest word start and end time\\r\\n    const arrays = this.results;\\r\\n\\r\\n    // arrays of Word objects\\r\\n    const potentialWords = []; // array of the first Word objects\\r\\n    // check if any arrays are already empty and remove them\\r\\n\\r\\n    hasPopulatedArrays(arrays);\\r\\n\\r\\n    // populate all the potential Words for a first time\\r\\n    arrays.forEach(array => pushWordToSortedArray(potentialWords, array));\\r\\n\\r\\n    // keep adding words to transcription until all arrays are exhausted\\r\\n    while (hasPopulatedArrays(arrays)) {\\r\\n        // first select the lowest array;\\r\\n        let lowestWordArray = arrays[0];\\r\\n\\r\\n        arrays.forEach(wordArray => {\\r\\n            if (wordArray[0].begin < lowestWordArray[0].begin) {\\r\\n                lowestWordArray = wordArray;\\r\\n            }\\r\\n        });\\r\\n\\r\\n        // put the word in the transcription\\r\\n        let wordToAdd = lowestWordArray.shift();\\r\\n\\r\\n        this.updateTranscription(wordToAdd, lowestWordArray.name);\\r\\n\\r\\n        // keep going until a word in another array has a smaller time\\r\\n        // or the array is empty\\r\\n        while (lowestWordArray.length > 0) {\\r\\n            let foundSmaller = false;\\r\\n            const wordToCompare = lowestWordArray[0].begin;\\r\\n\\r\\n            arrays.forEach(wordArray => {\\r\\n                if (wordArray[0].begin < wordToCompare) {\\r\\n                    foundSmaller = true;\\r\\n                }\\r\\n            });\\r\\n\\r\\n            // add next word if no smaller time has been found\\r\\n            if (foundSmaller) {\\r\\n                break;\\r\\n            }\\r\\n\\r\\n            wordToAdd = lowestWordArray.shift();\\r\\n            this.updateTranscription(wordToAdd, null);\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // set the state to finished and do the necessary left-over tasks\\r\\n    this.state = FINISHED_STATE;\\r\\n    if (this.callback) {\\r\\n        this.callback(this.transcription);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Appends a word object to the transcription. It will make a new line with a\\r\\n * name if a name is specified\\r\\n * @param {Word} word the Word object holding the word to append\\r\\n * @param {String|null} name the name of a new speaker. Null if not applicable\\r\\n */\\r\\nTranscriber.prototype.updateTranscription = function(word, name) {\\r\\n    if (name !== undefined && name !== null) {\\r\\n        this.transcription += `\\\\n${name}:`;\\r\\n        this.lineLength = name.length + 1; // +1 for the semi-colon\\r\\n    }\\r\\n    if (this.lineLength + word.word.length > MAXIMUM_SENTENCE_LENGTH) {\\r\\n        this.transcription += '\\\\n    ';\\r\\n        this.lineLength = 4; // because of the 4 spaces after the new line\\r\\n    }\\r\\n    this.transcription += ` ${word.word}`;\\r\\n    this.lineLength += word.word.length + 1; // +1 for the space\\r\\n};\\r\\n\\r\\n/**\\r\\n * Check if the given 2 dimensional array has any non-zero Word-arrays in them.\\r\\n * All zero-element arrays inside will be removed\\r\\n * If any non-zero-element arrays are found, the method will return true.\\r\\n * otherwise it will return false\\r\\n * @param {Array<Array>} twoDimensionalArray the array to check\\r\\n * @returns {boolean} true if any non-zero arrays inside, otherwise false\\r\\n */\\r\\nfunction hasPopulatedArrays(twoDimensionalArray) {\\r\\n    for (let i = 0; i < twoDimensionalArray.length; i++) {\\r\\n        if (twoDimensionalArray[i].length === 0) {\\r\\n            twoDimensionalArray.splice(i, 1);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return twoDimensionalArray.length > 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Push a word to the right location in a sorted array. The array is sorted\\r\\n * from lowest to highest start time. Every word is stored in an object which\\r\\n * includes the name of the person saying the word.\\r\\n *\\r\\n * @param {Array<Word>} array the sorted array to push to\\r\\n * @param {Word} word the word to push into the array\\r\\n */\\r\\nfunction pushWordToSortedArray(array, word) {\\r\\n    if (array.length === 0) {\\r\\n        array.push(word);\\r\\n    } else {\\r\\n        if (array[array.length - 1].begin <= word.begin) {\\r\\n            array.push(word);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < array.length; i++) {\\r\\n            if (word.begin < array[i].begin) {\\r\\n                array.splice(i, 0, word);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        array.push(word); // fail safe\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Gives the transcriber a JitsiTrack holding an audioStream to transcribe.\\r\\n * The JitsiTrack is given to the audioRecorder. If it doesn't hold an\\r\\n * audiostream, it will not be added by the audioRecorder\\r\\n * @param {JitsiTrack} track the track to give to the audioRecorder\\r\\n */\\r\\nTranscriber.prototype.addTrack = function(track) {\\r\\n    this.audioRecorder.addTrack(track);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Remove the given track from the auioRecorder\\r\\n * @param track\\r\\n */\\r\\nTranscriber.prototype.removeTrack = function(track) {\\r\\n    this.audioRecorder.removeTrack(track);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Will return the created transcription if it's avialable or throw an error\\r\\n * when it's not done yet\\r\\n * @returns {String} the transcription as a String\\r\\n */\\r\\nTranscriber.prototype.getTranscription = function() {\\r\\n    if (this.state !== FINISHED_STATE) {\\r\\n        throw new Error(\\r\\n            `The transcription can only be retrieved when it's in the \\\"${\\r\\n                FINISHED_STATE}\\\" state. It's currently in the \\\"${\\r\\n                this.state}\\\" state`);\\r\\n    }\\r\\n\\r\\n    return this.transcription;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the current state of the transcription process\\r\\n */\\r\\nTranscriber.prototype.getState = function() {\\r\\n    return this.state;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Resets the state to the \\\"before\\\" state, such that it's again possible to\\r\\n * call the start method\\r\\n */\\r\\nTranscriber.prototype.reset = function() {\\r\\n    this.state = BEFORE_STATE;\\r\\n    this.counter = null;\\r\\n    this.transcription = null;\\r\\n    this.startTime = null;\\r\\n    this.callback = null;\\r\\n    this.results = [];\\r\\n    this.lineLength = 0;\\r\\n};\\r\\n\\r\\nmodule.exports = Transcriber;\\r\\n\",\"import Statistics from '../statistics/statistics';\\r\\n\\r\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Creates new instance of <tt>ComponentsVersions</tt> which will be discovering\\r\\n * the versions of conferencing system components in given\\r\\n * <tt>JitsiConference</tt>.\\r\\n * @param conference <tt>JitsiConference</tt> instance which will be used to\\r\\n *        listen for focus presence updates.\\r\\n * @constructor\\r\\n */\\r\\nexport default function ComponentsVersions(conference) {\\r\\n\\r\\n    this.versions = {};\\r\\n\\r\\n    this.conference = conference;\\r\\n    this.conference.addCommandListener(\\r\\n        'versions', this.processVersions.bind(this));\\r\\n}\\r\\n\\r\\nComponentsVersions.prototype.processVersions\\r\\n    = function(versions, mucResource, mucJid) {\\r\\n        if (!this.conference._isFocus(mucJid)) {\\r\\n            logger.warn(\\r\\n                `Received versions not from the focus user: ${versions}`,\\r\\n                mucJid);\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const log = [];\\r\\n\\r\\n        versions.children.forEach(component => {\\r\\n\\r\\n            const name = component.attributes.name;\\r\\n            const version = component.value;\\r\\n\\r\\n            if (this.versions[name] !== version) {\\r\\n                this.versions[name] = version;\\r\\n                logger.info(`Got ${name} version: ${version}`);\\r\\n\\r\\n                log.push({\\r\\n                    id: 'component_version',\\r\\n                    component: name,\\r\\n                    version\\r\\n                });\\r\\n            }\\r\\n        });\\r\\n\\r\\n        // logs versions to stats\\r\\n        if (log.length > 0) {\\r\\n            Statistics.sendLog(JSON.stringify(log));\\r\\n        }\\r\\n    };\\r\\n\\r\\n/**\\r\\n * Obtains the version of conferencing system component.\\r\\n * @param componentName the name of the component for which we want to obtain\\r\\n *        the version.\\r\\n * @returns {String} which describes the version of the component identified by\\r\\n *          given <tt>componentName</tt> or <tt>undefined</tt> if not found.\\r\\n */\\r\\nComponentsVersions.prototype.getComponentVersion = function(componentName) {\\r\\n    return this.versions[componentName];\\r\\n};\\r\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\nimport JitsiVideoSIPGWSession from './JitsiVideoSIPGWSession';\\r\\nimport * as Constants from './VideoSIPGWConstants';\\r\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\r\\n\\r\\n/**\\r\\n * Main video SIP GW handler. Stores references of all created sessions.\\r\\n */\\r\\nexport default class VideoSIPGW {\\r\\n\\r\\n    /**\\r\\n     * Creates new handler.\\r\\n     *\\r\\n     * @param {ChatRoom} chatRoom - Tha chat room to handle.\\r\\n     */\\r\\n    constructor(chatRoom) {\\r\\n        this.chatRoom = chatRoom;\\r\\n        this.eventEmitter = chatRoom.eventEmitter;\\r\\n        logger.debug('creating VideoSIPGW');\\r\\n        this.sessions = {};\\r\\n\\r\\n        this.sessionStateChangeListener = this.sessionStateChanged.bind(this);\\r\\n\\r\\n        // VideoSIPGW, JitsiConference and ChatRoom are not reusable and no\\r\\n        // more than one VideoSIPGW can be created per JitsiConference,\\r\\n        // so we don't bother to cleanup\\r\\n        chatRoom.addPresenceListener('jibri-sip-call-state',\\r\\n            this.handleJibriSIPState.bind(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles presence nodes with name: jibri-sip-call-state.\\r\\n     *\\r\\n     * @param {Object} node the presence node Object to handle.\\r\\n     * Object representing part of the presence received over xmpp.\\r\\n     */\\r\\n    handleJibriSIPState(node) {\\r\\n        const attributes = node.attributes;\\r\\n\\r\\n        if (!attributes) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        logger.debug('Handle video sip gw state : ', attributes);\\r\\n\\r\\n        const newState = attributes.state;\\r\\n\\r\\n        if (newState === this.state) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        switch (newState) {\\r\\n        case Constants.STATE_ON:\\r\\n        case Constants.STATE_OFF:\\r\\n        case Constants.STATE_PENDING:\\r\\n        case Constants.STATE_RETRYING:\\r\\n        case Constants.STATE_FAILED: {\\r\\n            const address = attributes.sipaddress;\\r\\n\\r\\n            if (!address) {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            // find the corresponding session and set its state\\r\\n            const session = this.sessions[address];\\r\\n\\r\\n            if (session) {\\r\\n                session.setState(newState, attributes.failure_reason);\\r\\n            } else {\\r\\n                logger.warn('Video SIP GW session not found:', address);\\r\\n            }\\r\\n        }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates new session and stores its reference if it does not exist or\\r\\n     * returns an error otherwise.\\r\\n     *\\r\\n     * @param {string} sipAddress - The sip address to use.\\r\\n     * @param {string} displayName - The display name to use.\\r\\n     * @returns {JitsiVideoSIPGWSession|Error}\\r\\n     */\\r\\n    createVideoSIPGWSession(sipAddress, displayName) {\\r\\n        if (this.sessions[sipAddress]) {\\r\\n            logger.warn('There was already a Video SIP GW session for address',\\r\\n                sipAddress);\\r\\n\\r\\n            return new Error(Constants.ERROR_SESSION_EXISTS);\\r\\n        }\\r\\n\\r\\n        const session = new JitsiVideoSIPGWSession(\\r\\n            sipAddress, displayName, this.chatRoom);\\r\\n\\r\\n        session.addStateListener(this.sessionStateChangeListener);\\r\\n\\r\\n        this.sessions[sipAddress] = session;\\r\\n\\r\\n        return session;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Listener for session state changed. When a session goes to off or failed\\r\\n     * we delete its reference.\\r\\n     *\\r\\n     * @param {options} event - { address, oldState, newState, displayName }\\r\\n     */\\r\\n    sessionStateChanged(event) {\\r\\n        const address = event.address;\\r\\n\\r\\n        if (event.newState === Constants.STATE_OFF\\r\\n            || event.newState === Constants.STATE_FAILED) {\\r\\n            const session = this.sessions[address];\\r\\n\\r\\n            if (!session) {\\r\\n                logger.error('Missing Video SIP GW session with address:',\\r\\n                    address);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            session.removeStateListener(this.sessionStateChangeListener);\\r\\n            delete this.sessions[address];\\r\\n        }\\r\\n\\r\\n        this.eventEmitter.emit(\\r\\n            XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\\r\\n            event);\\r\\n    }\\r\\n}\\r\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\r\\nimport { $iq } from 'strophe.js';\\r\\n\\r\\nimport Listenable from '../util/Listenable';\\r\\n\\r\\nimport * as VideoSIPGWConstants from './VideoSIPGWConstants';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * The event name for current sip video session state changed.\\r\\n * @type {string} event name for sip video session state changed.\\r\\n */\\r\\nconst STATE_CHANGED = 'STATE_CHANGED';\\r\\n\\r\\n/**\\r\\n * Jitsi video SIP GW session. Holding its state and able to start/stop it.\\r\\n * When session is in OFF or FAILED stated it cannot be used anymore.\\r\\n */\\r\\nexport default class JitsiVideoSIPGWSession extends Listenable {\\r\\n\\r\\n    /**\\r\\n     * Creates new session with the desired sip address and display name.\\r\\n     *\\r\\n     * @param {string} sipAddress - The sip address to use when\\r\\n     * starting the session.\\r\\n     * @param {string} displayName - The display name to use for\\r\\n     * that participant.\\r\\n     * @param {ChatRoom} chatRoom - The chat room this session is bound to.\\r\\n     */\\r\\n    constructor(sipAddress, displayName, chatRoom) {\\r\\n        super();\\r\\n\\r\\n        this.sipAddress = sipAddress;\\r\\n        this.displayName = displayName;\\r\\n        this.chatRoom = chatRoom;\\r\\n\\r\\n        /*\\r\\n         * The initial state is undefined. Initial state cannot be STATE_OFF,\\r\\n         * the session enters this state when it was in STATE_ON and was stopped\\r\\n         * and such session cannot be used anymore.\\r\\n         *\\r\\n         * @type {VideoSIPGWConstants|undefined}\\r\\n         */\\r\\n        this.state = undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Stops the current session.\\r\\n     */\\r\\n    stop() {\\r\\n        if (this.state === VideoSIPGWConstants.STATE_OFF\\r\\n            || this.state === VideoSIPGWConstants.STATE_FAILED) {\\r\\n            logger.warn('Video SIP GW session already stopped or failed!');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._sendJibriIQ('stop');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Starts a new session. Sends an iq to the focus.\\r\\n     */\\r\\n    start() {\\r\\n        // if state is off, this session was active for some reason\\r\\n        // and we should create new one, rather than reusing it\\r\\n        if (this.state === VideoSIPGWConstants.STATE_ON\\r\\n            || this.state === VideoSIPGWConstants.STATE_OFF\\r\\n            || this.state === VideoSIPGWConstants.STATE_PENDING\\r\\n            || this.state === VideoSIPGWConstants.STATE_RETRYING) {\\r\\n            logger.warn('Video SIP GW session already started!');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._sendJibriIQ('start');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Changes the state of this session.\\r\\n     *\\r\\n     * @param {string} newState - The new {VideoSIPGWConstants} state to set.\\r\\n     * @param {string} [optional] failureReason - The reason why a failure state\\r\\n     * was entered.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    setState(newState, failureReason) {\\r\\n        if (newState === this.state) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const oldState = this.state;\\r\\n\\r\\n        this.state = newState;\\r\\n        this.eventEmitter.emit(STATE_CHANGED,\\r\\n            {\\r\\n                address: this.sipAddress,\\r\\n                failureReason,\\r\\n                oldState,\\r\\n                newState: this.state,\\r\\n                displayName: this.displayName\\r\\n            }\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Subscribes the passed listener to the event for state change of this\\r\\n     * session.\\r\\n     *\\r\\n     * @param {Function} listener - The function that will receive the event.\\r\\n     */\\r\\n    addStateListener(listener) {\\r\\n        this.addListener(STATE_CHANGED, listener);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Unsubscribes the passed handler.\\r\\n     *\\r\\n     * @param {Function} listener - The function to be removed.\\r\\n     */\\r\\n    removeStateListener(listener) {\\r\\n        this.removeListener(STATE_CHANGED, listener);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sends a jibri command using an iq.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} action - The action to send ('start' or 'stop').\\r\\n     */\\r\\n    _sendJibriIQ(action) {\\r\\n        const attributes = {\\r\\n            'xmlns': 'http://jitsi.org/protocol/jibri',\\r\\n            'action': action,\\r\\n            sipaddress: this.sipAddress\\r\\n        };\\r\\n\\r\\n        attributes.displayname = this.displayName;\\r\\n\\r\\n        const iq = $iq({\\r\\n            to: this.chatRoom.focusMucJid,\\r\\n            type: 'set' })\\r\\n            .c('jibri', attributes)\\r\\n            .up();\\r\\n\\r\\n        logger.debug(`${action} video SIP GW session`, iq.nodeTree);\\r\\n        this.chatRoom.connection.sendIQ(\\r\\n            iq,\\r\\n            () => {}, // eslint-disable-line no-empty-function\\r\\n            error => {\\r\\n                logger.error(\\r\\n                    `Failed to ${action} video SIP GW session, error: `, error);\\r\\n                this.setState(VideoSIPGWConstants.STATE_FAILED);\\r\\n            });\\r\\n    }\\r\\n}\\r\\n\",\"export default {\\r\\n    error: {\\r\\n        BUSY: 'busy',\\r\\n        ERROR: 'error',\\r\\n        RESOURCE_CONSTRAINT: 'resource-constraint',\\r\\n        SERVICE_UNAVAILABLE: 'service-unavailable'\\r\\n    },\\r\\n    mode: {\\r\\n        FILE: 'file',\\r\\n        STREAM: 'stream'\\r\\n    },\\r\\n    status: {\\r\\n        OFF: 'off',\\r\\n        ON: 'on',\\r\\n        PENDING: 'pending'\\r\\n    }\\r\\n};\\r\\n\",\"/* globals $ */\\r\\n\\r\\nimport { getLogger } from 'jitsi-meet-logger';\\r\\nimport { $iq } from 'strophe.js';\\r\\n\\r\\nimport * as MediaType from '../../service/RTC/MediaType';\\r\\nimport VideoType from '../../service/RTC/VideoType';\\r\\nimport RTC from '../RTC/RTC';\\r\\n\\r\\nimport ProxyConnectionPC from './ProxyConnectionPC';\\r\\nimport { ACTIONS } from './constants';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * Instantiates a new ProxyConnectionPC and ensures only one exists at a given\\r\\n * time. Currently it assumes ProxyConnectionPC is used only for screensharing\\r\\n * and assumes IQs to be used for communication.\\r\\n */\\r\\nexport default class ProxyConnectionService {\\r\\n    /**\\r\\n     * Initializes a new {@code ProxyConnectionService} instance.\\r\\n     *\\r\\n     * @param {Object} options - Values to initialize the instance with.\\r\\n     * @param {boolean} [options.convertVideoToDesktop] - Whether or not proxied\\r\\n     * video should be returned as a desktop stream. Defaults to false.\\r\\n     * @param {Object} [options.iceConfig] - The {@code RTCConfiguration} to use\\r\\n     * for the peer connection.\\r\\n     * @param {JitsiConnection} [options.jitsiConnection] - The\\r\\n     * {@code JitsiConnection} which will be used to fetch TURN credentials for\\r\\n     * the P2P connection.\\r\\n     * @param {Function} options.onRemoteStream - Callback to invoke when a\\r\\n     * remote video stream has been received and converted to a\\r\\n     * {@code JitsiLocakTrack}. The {@code JitsiLocakTrack} will be passed in.\\r\\n     * @param {Function} options.onSendMessage - Callback to invoke when a\\r\\n     * message has to be sent (signaled) out. The arguments passed in are the\\r\\n     * jid to send the message to and the message\\r\\n     */\\r\\n    constructor(options = {}) {\\r\\n        const {\\r\\n            jitsiConnection,\\r\\n            ...otherOptions\\r\\n        } = options;\\r\\n\\r\\n        /**\\r\\n         * Holds a reference to the collection of all callbacks.\\r\\n         *\\r\\n         * @type {Object}\\r\\n         */\\r\\n        this._options = {\\r\\n            iceConfig: jitsiConnection\\r\\n                && jitsiConnection.xmpp.connection.jingle.p2pIceConfig,\\r\\n            ...otherOptions\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * The active instance of {@code ProxyConnectionService}.\\r\\n         *\\r\\n         * @type {ProxyConnectionPC|null}\\r\\n         */\\r\\n        this._peerConnection = null;\\r\\n\\r\\n        // Bind event handlers so they are only bound once for every instance.\\r\\n        this._onFatalError = this._onFatalError.bind(this);\\r\\n        this._onSendMessage = this._onSendMessage.bind(this);\\r\\n        this._onRemoteStream = this._onRemoteStream.bind(this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Parses a message object regarding a proxy connection to create a new\\r\\n     * proxy connection or update and existing connection.\\r\\n     *\\r\\n     * @param {Object} message - A message object regarding establishing or\\r\\n     * updating a proxy connection.\\r\\n     * @param {Object} message.data - An object containing additional message\\r\\n     * details.\\r\\n     * @param {string} message.data.iq - The stringified iq which explains how\\r\\n     * and what to update regarding the proxy connection.\\r\\n     * @param {string} message.from - The message sender's full jid. Used for\\r\\n     * sending replies.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    processMessage(message) {\\r\\n        const peerJid = message.from;\\r\\n\\r\\n        if (!peerJid) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // If a proxy connection has already been established and messages come\\r\\n        // from another peer jid then those messages should be replied to with\\r\\n        // a rejection.\\r\\n        if (this._peerConnection\\r\\n            && this._peerConnection.getPeerJid() !== peerJid) {\\r\\n            this._onFatalError(\\r\\n                peerJid,\\r\\n                ACTIONS.CONNECTION_ERROR,\\r\\n                'rejected'\\r\\n            );\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const iq = this._convertStringToXML(message.data.iq);\\r\\n        const $jingle = iq && iq.find('jingle');\\r\\n        const action = $jingle && $jingle.attr('action');\\r\\n\\r\\n        if (action === ACTIONS.INITIATE) {\\r\\n            this._peerConnection = this._createPeerConnection(peerJid, {\\r\\n                isInitiator: false,\\r\\n                receiveVideo: true\\r\\n            });\\r\\n        }\\r\\n\\r\\n        // Truthy check for peer connection added to protect against possibly\\r\\n        // receiving actions before an ACTIONS.INITIATE.\\r\\n        if (this._peerConnection) {\\r\\n            this._peerConnection.processMessage($jingle);\\r\\n        }\\r\\n\\r\\n        // Take additional steps to ensure the peer connection is cleaned up\\r\\n        // if it is to be closed.\\r\\n        if (action === ACTIONS.CONNECTION_ERROR\\r\\n            || action === ACTIONS.UNAVAILABLE\\r\\n            || action === ACTIONS.TERMINATE) {\\r\\n            this._selfCloseConnection();\\r\\n        }\\r\\n\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Instantiates and initiates a proxy peer connection.\\r\\n     *\\r\\n     * @param {string} peerJid - The jid of the remote client that should\\r\\n     * receive messages.\\r\\n     * @param {Array<JitsiLocalTrack>} localTracks - Initial media tracks to\\r\\n     * send through to the peer.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    start(peerJid, localTracks = []) {\\r\\n        this._peerConnection = this._createPeerConnection(peerJid, {\\r\\n            isInitiator: true,\\r\\n            receiveVideo: false\\r\\n        });\\r\\n\\r\\n        this._peerConnection.start(localTracks);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Terminates any active proxy peer connection.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    stop() {\\r\\n        if (this._peerConnection) {\\r\\n            this._peerConnection.stop();\\r\\n        }\\r\\n\\r\\n        this._peerConnection = null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Transforms a stringified xML into a XML wrapped in jQuery.\\r\\n     *\\r\\n     * @param {string} xml - The XML in string form.\\r\\n     * @private\\r\\n     * @returns {Object|null} A jQuery version of the xml. Null will be returned\\r\\n     * if an error is encountered during transformation.\\r\\n     */\\r\\n    _convertStringToXML(xml) {\\r\\n        try {\\r\\n            const xmlDom = new DOMParser().parseFromString(xml, 'text/xml');\\r\\n\\r\\n            return $(xmlDom);\\r\\n        } catch (e) {\\r\\n            logger.error('Attempted to convert incorrectly formatted xml');\\r\\n\\r\\n            return null;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Helper for creating an instance of {@code ProxyConnectionPC}.\\r\\n     *\\r\\n     * @param {string} peerJid - The jid of the remote peer with which the\\r\\n     * {@code ProxyConnectionPC} will be established with.\\r\\n     * @param {Object} options - Additional defaults to instantiate the\\r\\n     * {@code ProxyConnectionPC} with. See the constructor of ProxyConnectionPC\\r\\n     * for more details.\\r\\n     * @private\\r\\n     * @returns {ProxyConnectionPC}\\r\\n     */\\r\\n    _createPeerConnection(peerJid, options = {}) {\\r\\n        if (!peerJid) {\\r\\n            throw new Error('Cannot create ProxyConnectionPC without a peer.');\\r\\n        }\\r\\n\\r\\n        const pcOptions = {\\r\\n            iceConfig: this._options.iceConfig,\\r\\n            onError: this._onFatalError,\\r\\n            onRemoteStream: this._onRemoteStream,\\r\\n            onSendMessage: this._onSendMessage,\\r\\n            peerJid,\\r\\n            ...options\\r\\n        };\\r\\n\\r\\n        return new ProxyConnectionPC(pcOptions);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked when an error occurs that should cause\\r\\n     * {@code ProxyConnectionPC} to be closed if the peer is currently\\r\\n     * connected. Sends an error message/reply back to the peer.\\r\\n     *\\r\\n     * @param {string} peerJid - The peer jid with which the connection was\\r\\n     * attempted or started, and to which an iq with error details should be\\r\\n     * sent.\\r\\n     * @param {string} errorType - The constant indicating the type of the error\\r\\n     * that occured.\\r\\n     * @param {string} details - Optional additional data about the error.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onFatalError(peerJid, errorType, details = '') {\\r\\n        logger.error(\\r\\n            'Received a proxy connection error', peerJid, errorType, details);\\r\\n\\r\\n        const iq = $iq({\\r\\n            to: peerJid,\\r\\n            type: 'set'\\r\\n        })\\r\\n            .c('jingle', {\\r\\n                xmlns: 'urn:xmpp:jingle:1',\\r\\n                action: errorType\\r\\n            })\\r\\n            .c('details')\\r\\n            .t(details)\\r\\n            .up();\\r\\n\\r\\n        this._onSendMessage(peerJid, iq);\\r\\n\\r\\n        if (this._peerConnection\\r\\n            && this._peerConnection.getPeerJid() === peerJid) {\\r\\n            this._selfCloseConnection();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked when the remote peer of the {@code ProxyConnectionPC}\\r\\n     * has offered a media stream. The stream is converted into a\\r\\n     * {@code JitsiLocalTrack} for local usage if the {@code onRemoteStream}\\r\\n     * callback is defined.\\r\\n     *\\r\\n     * @param {JitsiRemoteTrack} jitsiRemoteTrack - The {@code JitsiRemoteTrack}\\r\\n     * for the peer's media stream.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onRemoteStream(jitsiRemoteTrack) {\\r\\n        if (!this._options.onRemoteStream) {\\r\\n            logger.error('Remote track received without callback.');\\r\\n            jitsiRemoteTrack.dispose();\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const isVideo = jitsiRemoteTrack.isVideoTrack();\\r\\n        let videoType;\\r\\n\\r\\n        if (isVideo) {\\r\\n            videoType = this._options.convertVideoToDesktop\\r\\n                ? VideoType.DESKTOP : VideoType.CAMERA;\\r\\n        }\\r\\n\\r\\n        // Grab the webrtc media stream and pipe it through the same processing\\r\\n        // that would occur for a locally obtained media stream.\\r\\n        const mediaStream = jitsiRemoteTrack.getOriginalStream();\\r\\n        const jitsiLocalTracks = RTC.newCreateLocalTracks(\\r\\n            [\\r\\n                {\\r\\n                    deviceId:\\r\\n                        `proxy:${this._peerConnection.getPeerJid()}`,\\r\\n                    mediaType: isVideo ? MediaType.VIDEO : MediaType.AUDIO,\\r\\n                    sourceType: 'proxy',\\r\\n                    stream: mediaStream,\\r\\n                    track: mediaStream.getVideoTracks()[0],\\r\\n                    videoType\\r\\n                }\\r\\n            ]);\\r\\n\\r\\n        this._options.onRemoteStream(jitsiLocalTracks[0]);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Formats and forwards a message an iq to be sent to a peer jid.\\r\\n     *\\r\\n     * @param {string} peerJid - The jid the iq should be sent to.\\r\\n     * @param {Object} iq - The iq which would be sent to the peer jid.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onSendMessage(peerJid, iq) {\\r\\n        if (!this._options.onSendMessage) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        try {\\r\\n            const stringifiedIq\\r\\n                = new XMLSerializer().serializeToString(iq.nodeTree || iq);\\r\\n\\r\\n            this._options.onSendMessage(peerJid, { iq: stringifiedIq });\\r\\n        } catch (e) {\\r\\n            logger.error('Attempted to send an incorrectly formatted iq.');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Invoked when preemptively closing the {@code ProxyConnectionPC}.\\r\\n     *\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _selfCloseConnection() {\\r\\n        this.stop();\\r\\n\\r\\n        this._options.onConnectionClosed\\r\\n            && this._options.onConnectionClosed();\\r\\n    }\\r\\n}\\r\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\r\\n\\r\\nimport RTC from '../RTC/RTC';\\r\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\r\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\r\\n\\r\\nimport JingleSessionPC from '../xmpp/JingleSessionPC';\\r\\nimport { DEFAULT_STUN_SERVERS } from '../xmpp/xmpp';\\r\\n\\r\\nimport { ACTIONS } from './constants';\\r\\n\\r\\nconst logger = getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * An adapter around {@code JingleSessionPC} so its logic can be re-used without\\r\\n * an XMPP connection. It is being re-used for consistency with the rest of the\\r\\n * codebase and to leverage existing peer connection event handling. Also\\r\\n * this class provides a facade to hide most of the API for\\r\\n * {@code JingleSessionPC}.\\r\\n */\\r\\nexport default class ProxyConnectionPC {\\r\\n    /**\\r\\n     * Initializes a new {@code ProxyConnectionPC} instance.\\r\\n     *\\r\\n     * @param {Object} options - Values to initialize the instance with.\\r\\n     * @param {Object} [options.iceConfig] - The {@code RTCConfiguration} to use\\r\\n     * for the peer connection.\\r\\n     * @param {boolean} [options.isInitiator] - If true, the local client should\\r\\n     * send offers. If false, the local client should send answers. Defaults to\\r\\n     * false.\\r\\n     * @param {Function} options.onRemoteStream - Callback to invoke when a\\r\\n     * remote media stream has been received through the peer connection.\\r\\n     * @param {string} options.peerJid - The jid of the remote client with which\\r\\n     * the peer connection is being establish and which should receive direct\\r\\n     * messages regarding peer connection updates.\\r\\n     * @param {boolean} [options.receiveVideo] - Whether or not the peer\\r\\n     * connection should accept incoming video streams. Defaults to false.\\r\\n     * @param {Function} options.onSendMessage - Callback to invoke when a\\r\\n     * message has to be sent (signaled) out.\\r\\n     */\\r\\n    constructor(options = {}) {\\r\\n        this._options = {\\r\\n            iceConfig: {},\\r\\n            isInitiator: false,\\r\\n            receiveAudio: false,\\r\\n            receiveVideo: false,\\r\\n            ...options\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * Instances of {@code JitsiTrack} associated with this instance of\\r\\n         * {@code ProxyConnectionPC}.\\r\\n         *\\r\\n         * @type {Array<JitsiTrack>}\\r\\n         */\\r\\n        this._tracks = [];\\r\\n\\r\\n        /**\\r\\n         * The active instance of {@code JingleSessionPC}.\\r\\n         *\\r\\n         * @type {JingleSessionPC|null}\\r\\n         */\\r\\n        this._peerConnection = null;\\r\\n\\r\\n        // Bind event handlers so they are only bound once for every instance.\\r\\n        this._onError = this._onError.bind(this);\\r\\n        this._onRemoteStream = this._onRemoteStream.bind(this);\\r\\n        this._onSendMessage = this._onSendMessage.bind(this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the jid of the remote peer with which this peer connection should\\r\\n     * be established with.\\r\\n     *\\r\\n     * @returns {string}\\r\\n     */\\r\\n    getPeerJid() {\\r\\n        return this._options.peerJid;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates the peer connection based on the passed in jingle.\\r\\n     *\\r\\n     * @param {Object} $jingle - An XML jingle element, wrapped in query,\\r\\n     * describing how the peer connection should be updated.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    processMessage($jingle) {\\r\\n        switch ($jingle.attr('action')) {\\r\\n        case ACTIONS.ACCEPT:\\r\\n            this._onSessionAccept($jingle);\\r\\n            break;\\r\\n\\r\\n        case ACTIONS.INITIATE:\\r\\n            this._onSessionInitiate($jingle);\\r\\n            break;\\r\\n\\r\\n        case ACTIONS.TERMINATE:\\r\\n            this._onSessionTerminate($jingle);\\r\\n            break;\\r\\n\\r\\n        case ACTIONS.TRANSPORT_INFO:\\r\\n            this._onTransportInfo($jingle);\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Instantiates a peer connection and starts the offer/answer cycle to\\r\\n     * establish a connection with a remote peer.\\r\\n     *\\r\\n     * @param {Array<JitsiLocalTrack>} localTracks - Initial local tracks to add\\r\\n     * to add to the peer connection.\\r\\n     * @returns {void}\\r\\n     */\\r\\n    start(localTracks = []) {\\r\\n        if (this._peerConnection) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._tracks = this._tracks.concat(localTracks);\\r\\n\\r\\n        this._peerConnection = this._createPeerConnection();\\r\\n\\r\\n        this._peerConnection.invite(localTracks);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Begins the process of disconnecting from a remote peer and cleaning up\\r\\n     * the peer connection.\\r\\n     *\\r\\n     * @returns {void}\\r\\n     */\\r\\n    stop() {\\r\\n        if (this._peerConnection) {\\r\\n            this._peerConnection.terminate();\\r\\n        }\\r\\n\\r\\n        this._onSessionTerminate();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Instantiates a new {@code JingleSessionPC} by stubbing out the various\\r\\n     * dependencies of {@code JingleSessionPC}.\\r\\n     *\\r\\n     * @private\\r\\n     * @returns {JingleSessionPC}\\r\\n     */\\r\\n    _createPeerConnection() {\\r\\n        /**\\r\\n         * {@code JingleSessionPC} takes in the entire jitsi-meet config.js\\r\\n         * object, which may not be accessible from the caller.\\r\\n         *\\r\\n         * @type {Object}\\r\\n         */\\r\\n        const configStub = {};\\r\\n\\r\\n        /**\\r\\n         * {@code JingleSessionPC} assumes an XMPP/Strophe connection object is\\r\\n         * passed through, which also has the jingle plugin initialized on it.\\r\\n         * This connection object is used to signal out peer connection updates\\r\\n         * via iqs, and those updates need to be piped back out to the remote\\r\\n         * peer.\\r\\n         *\\r\\n         * @type {Object}\\r\\n         */\\r\\n        const connectionStub = {\\r\\n            jingle: {\\r\\n                terminate: () => { /** no-op */ }\\r\\n            },\\r\\n            sendIQ: this._onSendMessage\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * {@code JingleSessionPC} can take in a custom ice configuration,\\r\\n         * depending on the peer connection type, peer-to-peer or other.\\r\\n         * However, {@code ProxyConnectionPC} always assume a peer-to-peer\\r\\n         * connection so the ice configuration is hard-coded with defaults.\\r\\n         *\\r\\n         * @type {Object}\\r\\n         */\\r\\n        const iceConfigStub = {\\r\\n            iceServers: DEFAULT_STUN_SERVERS,\\r\\n            ...this._options.iceConfig\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * {@code JingleSessionPC} expects an instance of\\r\\n         * {@code JitsiConference}, which has an event emitter that is used\\r\\n         * to signal various connection updates that the local client should\\r\\n         * act upon. The conference instance is not a dependency of a proxy\\r\\n         * connection, but the emitted events can be relevant to the proxy\\r\\n         * connection so the event emitter is stubbed.\\r\\n         *\\r\\n         * @param {string} event - The constant for the event type.\\r\\n         * @type {Function}\\r\\n         * @returns {void}\\r\\n         */\\r\\n        const emitter = event => {\\r\\n            switch (event) {\\r\\n            case XMPPEvents.CONNECTION_ICE_FAILED:\\r\\n            case XMPPEvents.CONNECTION_FAILED:\\r\\n                this._onError(ACTIONS.CONNECTION_ERROR, event);\\r\\n                break;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * {@code JingleSessionPC} expects an instance of\\r\\n         * {@code JitsiConference} to be passed in. {@code ProxyConnectionPC}\\r\\n         * is instantiated outside of the {@code JitsiConference}, so it must be\\r\\n         * stubbed to prevent errors.\\r\\n         *\\r\\n         * @type {Object}\\r\\n         */\\r\\n        const roomStub = {\\r\\n            addPresenceListener: () => { /** no-op */ },\\r\\n            connectionTimes: [],\\r\\n            eventEmitter: { emit: emitter },\\r\\n            getMediaPresenceInfo: () => {\\r\\n                // Errors occur if this function does not return an object\\r\\n\\r\\n                return {};\\r\\n            },\\r\\n            removePresenceListener: () => { /** no-op */ }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * Create an instance of {@code RTC} as it is required for peer\\r\\n         * connection creation by {@code JingleSessionPC}. An existing instance\\r\\n         * of {@code RTC} from elsewhere should not be re-used because it is\\r\\n         * a stateful grouping of utilities.\\r\\n         */\\r\\n        this._rtc = new RTC(this, {});\\r\\n\\r\\n        /**\\r\\n         * Add the remote track listener here as {@code JingleSessionPC} has\\r\\n         * {@code TraceablePeerConnection} which uses {@code RTC}'s event\\r\\n         * emitter.\\r\\n         */\\r\\n        this._rtc.addListener(\\r\\n            RTCEvents.REMOTE_TRACK_ADDED,\\r\\n            this._onRemoteStream\\r\\n        );\\r\\n\\r\\n        const peerConnection = new JingleSessionPC(\\r\\n            undefined, // sid\\r\\n            undefined, // localJid\\r\\n            this._options.peerJid, // remoteJid\\r\\n            connectionStub, // connection\\r\\n            {\\r\\n                offerToReceiveAudio: this._options.receiveAudio,\\r\\n                offerToReceiveVideo: this._options.receiveVideo\\r\\n            }, // mediaConstraints\\r\\n            iceConfigStub, // iceConfig\\r\\n            true, // isP2P\\r\\n            this._options.isInitiator // isInitiator\\r\\n        );\\r\\n\\r\\n        /**\\r\\n         * An additional initialize call is necessary to properly set instance\\r\\n         * variable for calling.\\r\\n         */\\r\\n        peerConnection.initialize(roomStub, this._rtc, configStub);\\r\\n\\r\\n        return peerConnection;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Invoked when a connection related issue has been encountered.\\r\\n     *\\r\\n     * @param {string} errorType - The constant indicating the type of the error\\r\\n     * that occured.\\r\\n     * @param {string} details - Optional additional data about the error.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onError(errorType, details = '') {\\r\\n        this._options.onError(this._options.peerJid, errorType, details);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked when the peer connection has received a remote media\\r\\n     * stream.\\r\\n     *\\r\\n     * @param {JitsiRemoteTrack} jitsiRemoteTrack - The remote media stream\\r\\n     * wrapped in {@code JitsiRemoteTrack}.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onRemoteStream(jitsiRemoteTrack) {\\r\\n        this._tracks.push(jitsiRemoteTrack);\\r\\n\\r\\n        this._options.onRemoteStream(jitsiRemoteTrack);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked when {@code JingleSessionPC} needs to signal a message\\r\\n     * out to the remote peer.\\r\\n     *\\r\\n     * @param {XML} iq - The message to signal out.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onSendMessage(iq) {\\r\\n        this._options.onSendMessage(this._options.peerJid, iq);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked in response to an agreement to start a proxy connection.\\r\\n     * The passed in jingle element should contain an SDP answer to a previously\\r\\n     * sent SDP offer.\\r\\n     *\\r\\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onSessionAccept($jingle) {\\r\\n        if (!this._peerConnection) {\\r\\n            logger.error('Received an answer when no peer connection exists.');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._peerConnection.setAnswer($jingle);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked in response to a request to start a proxy connection.\\r\\n     * The passed in jingle element should contain an SDP offer.\\r\\n     *\\r\\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onSessionInitiate($jingle) {\\r\\n        if (this._peerConnection) {\\r\\n            logger.error('Received an offer when an offer was already sent.');\\r\\n\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._peerConnection = this._createPeerConnection();\\r\\n\\r\\n        this._peerConnection.acceptOffer(\\r\\n            $jingle,\\r\\n            () => { /** no-op */ },\\r\\n            () => this._onError(\\r\\n                this._options.peerJid,\\r\\n                ACTIONS.CONNECTION_ERROR,\\r\\n                'session initiate error'\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked in response to a request to disconnect an active proxy\\r\\n     * connection. Cleans up tracks and the peer connection.\\r\\n     *\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onSessionTerminate() {\\r\\n        this._tracks.forEach(track => track.dispose());\\r\\n        this._tracks = [];\\r\\n\\r\\n        if (this._peerConnection) {\\r\\n            this._peerConnection.onTerminated();\\r\\n        }\\r\\n\\r\\n        if (this._rtc) {\\r\\n            this._rtc.removeListener(\\r\\n                RTCEvents.REMOTE_TRACK_ADDED,\\r\\n                this._onRemoteStream\\r\\n            );\\r\\n\\r\\n            this._rtc.destroy();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Callback invoked in response to ICE candidates from the remote peer.\\r\\n     * The passed in jingle element should contain an ICE candidate.\\r\\n     *\\r\\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\\r\\n     * @private\\r\\n     * @returns {void}\\r\\n     */\\r\\n    _onTransportInfo($jingle) {\\r\\n        this._peerConnection.addIceCandidates($jingle);\\r\\n    }\\r\\n}\\r\\n\",\"// For legacy purposes, preserve the UMD of the public API of the Jitsi Meet\\r\\n// library (a.k.a. JitsiMeetJS).\\r\\nmodule.exports = require('./JitsiMeetJS').default;\\r\\n\",\"/* global __filename */\\r\\n\\r\\nimport { createGetUserMediaEvent } from './service/statistics/AnalyticsEvents';\\r\\nimport AuthUtil from './modules/util/AuthUtil';\\r\\nimport * as ConnectionQualityEvents\\r\\n    from './service/connectivity/ConnectionQualityEvents';\\r\\nimport * as E2ePingEvents from './service/e2eping/E2ePingEvents';\\r\\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\\r\\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\\r\\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\\r\\nimport JitsiConnection from './JitsiConnection';\\r\\nimport * as JitsiConnectionErrors from './JitsiConnectionErrors';\\r\\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\\r\\nimport JitsiMediaDevices from './JitsiMediaDevices';\\r\\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\\r\\nimport JitsiTrackError from './JitsiTrackError';\\r\\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\\r\\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\\r\\nimport * as JitsiTranscriptionStatus from './JitsiTranscriptionStatus';\\r\\nimport LocalStatsCollector from './modules/statistics/LocalStatsCollector';\\r\\nimport Logger from 'jitsi-meet-logger';\\r\\nimport * as MediaType from './service/RTC/MediaType';\\r\\nimport Resolutions from './service/RTC/Resolutions';\\r\\nimport { ParticipantConnectionStatus }\\r\\n    from './modules/connectivity/ParticipantConnectionStatus';\\r\\nimport RTC from './modules/RTC/RTC';\\r\\nimport browser from './modules/browser';\\r\\nimport ScriptUtil from './modules/util/ScriptUtil';\\r\\nimport recordingConstants from './modules/recording/recordingConstants';\\r\\nimport ProxyConnectionService\\r\\n    from './modules/proxyconnection/ProxyConnectionService';\\r\\nimport Statistics from './modules/statistics/statistics';\\r\\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\\r\\n\\r\\nconst logger = Logger.getLogger(__filename);\\r\\n\\r\\n/**\\r\\n * The amount of time to wait until firing\\r\\n * {@link JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN} event.\\r\\n */\\r\\nconst USER_MEDIA_PERMISSION_PROMPT_TIMEOUT = 1000;\\r\\n\\r\\n/**\\r\\n * Gets the next lowest desirable resolution to try for a camera. If the given\\r\\n * resolution is already the lowest acceptable resolution, returns {@code null}.\\r\\n *\\r\\n * @param resolution the current resolution\\r\\n * @return the next lowest resolution from the given one, or {@code null} if it\\r\\n * is already the lowest acceptable resolution.\\r\\n */\\r\\nfunction getLowerResolution(resolution) {\\r\\n    if (!Resolutions[resolution]) {\\r\\n        return null;\\r\\n    }\\r\\n    const order = Resolutions[resolution].order;\\r\\n    let res = null;\\r\\n    let resName = null;\\r\\n\\r\\n    Object.keys(Resolutions).forEach(r => {\\r\\n        const value = Resolutions[r];\\r\\n\\r\\n        if (!res || (res.order < value.order && value.order < order)) {\\r\\n            resName = r;\\r\\n            res = value;\\r\\n        }\\r\\n    });\\r\\n\\r\\n    if (resName === resolution) {\\r\\n        resName = null;\\r\\n    }\\r\\n\\r\\n    return resName;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Extracts from an 'options' objects with a specific format (TODO what IS the\\r\\n * format?) the attributes which are to be logged in analytics events.\\r\\n *\\r\\n * @param options gum options (???)\\r\\n * @returns {*} the attributes to attach to analytics events.\\r\\n */\\r\\nfunction getAnalyticsAttributesFromOptions(options) {\\r\\n    const attributes = {\\r\\n        'audio_requested':\\r\\n            options.devices.includes('audio'),\\r\\n        'video_requested':\\r\\n            options.devices.includes('video'),\\r\\n        'screen_sharing_requested':\\r\\n            options.devices.includes('desktop')\\r\\n    };\\r\\n\\r\\n    if (attributes.video_requested) {\\r\\n        attributes.resolution = options.resolution;\\r\\n    }\\r\\n\\r\\n    return attributes;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Tries to deal with the following problem: {@code JitsiMeetJS} is not only\\r\\n * this module, it's also a global (i.e. attached to {@code window}) namespace\\r\\n * for all globals of the projects in the Jitsi Meet family. If lib-jitsi-meet\\r\\n * is loaded through an HTML {@code script} tag, {@code JitsiMeetJS} will\\r\\n * automatically be attached to {@code window} by webpack. Unfortunately,\\r\\n * webpack's source code does not check whether the global variable has already\\r\\n * been assigned and overwrites it. Which is OK for the module\\r\\n * {@code JitsiMeetJS} but is not OK for the namespace {@code JitsiMeetJS}\\r\\n * because it may already contain the values of other projects in the Jitsi Meet\\r\\n * family. The solution offered here works around webpack by merging all\\r\\n * existing values of the namespace {@code JitsiMeetJS} into the module\\r\\n * {@code JitsiMeetJS}.\\r\\n *\\r\\n * @param {Object} module - The module {@code JitsiMeetJS} (which will be\\r\\n * exported and may be attached to {@code window} by webpack later on).\\r\\n * @private\\r\\n * @returns {Object} - A {@code JitsiMeetJS} module which contains all existing\\r\\n * value of the namespace {@code JitsiMeetJS} (if any).\\r\\n */\\r\\nfunction _mergeNamespaceAndModule(module) {\\r\\n    return (\\r\\n        typeof window.JitsiMeetJS === 'object'\\r\\n            ? Object.assign({}, window.JitsiMeetJS, module)\\r\\n            : module);\\r\\n}\\r\\n\\r\\n/**\\r\\n * The public API of the Jitsi Meet library (a.k.a. {@code JitsiMeetJS}).\\r\\n */\\r\\nexport default _mergeNamespaceAndModule({\\r\\n\\r\\n    version: '{#COMMIT_HASH#}',\\r\\n\\r\\n    JitsiConnection,\\r\\n\\r\\n    /**\\r\\n     * {@code ProxyConnectionService} is used to connect a remote peer to a\\r\\n     * local Jitsi participant without going through a Jitsi conference. It is\\r\\n     * currently used for room integration development, specifically wireless\\r\\n     * screensharing. Its API is experimental and will likely change; usage of\\r\\n     * it is advised against.\\r\\n     */\\r\\n    ProxyConnectionService,\\r\\n\\r\\n    constants: {\\r\\n        participantConnectionStatus: ParticipantConnectionStatus,\\r\\n        recording: recordingConstants,\\r\\n        sipVideoGW: VideoSIPGWConstants,\\r\\n        transcriptionStatus: JitsiTranscriptionStatus\\r\\n    },\\r\\n    events: {\\r\\n        conference: JitsiConferenceEvents,\\r\\n        connection: JitsiConnectionEvents,\\r\\n        track: JitsiTrackEvents,\\r\\n        mediaDevices: JitsiMediaDevicesEvents,\\r\\n        connectionQuality: ConnectionQualityEvents,\\r\\n        e2eping: E2ePingEvents\\r\\n    },\\r\\n    errors: {\\r\\n        conference: JitsiConferenceErrors,\\r\\n        connection: JitsiConnectionErrors,\\r\\n        track: JitsiTrackErrors\\r\\n    },\\r\\n    errorTypes: {\\r\\n        JitsiTrackError\\r\\n    },\\r\\n    logLevels: Logger.levels,\\r\\n    mediaDevices: JitsiMediaDevices,\\r\\n    analytics: Statistics.analytics,\\r\\n    init(options = {}) {\\r\\n        Statistics.init(options);\\r\\n\\r\\n        // Initialize global window.connectionTimes\\r\\n        // FIXME do not use 'window'\\r\\n        if (!window.connectionTimes) {\\r\\n            window.connectionTimes = {};\\r\\n        }\\r\\n\\r\\n        if (options.enableAnalyticsLogging !== true) {\\r\\n            logger.warn('Analytics disabled, disposing.');\\r\\n            this.analytics.dispose();\\r\\n        }\\r\\n\\r\\n        if (options.enableWindowOnErrorHandler) {\\r\\n            GlobalOnErrorHandler.addHandler(\\r\\n                this.getGlobalOnErrorHandler.bind(this));\\r\\n        }\\r\\n\\r\\n        // Log deployment-specific information, if available. Defined outside\\r\\n        // the application by individual deployments\\r\\n        const aprops = options.deploymentInfo;\\r\\n\\r\\n        if (aprops && Object.keys(aprops).length > 0) {\\r\\n            const logObject = {};\\r\\n\\r\\n            for (const attr in aprops) {\\r\\n                if (aprops.hasOwnProperty(attr)) {\\r\\n                    logObject[attr] = aprops[attr];\\r\\n                }\\r\\n            }\\r\\n\\r\\n            logObject.id = 'deployment_info';\\r\\n            Statistics.sendLog(JSON.stringify(logObject));\\r\\n        }\\r\\n\\r\\n        if (this.version) {\\r\\n            const logObject = {\\r\\n                id: 'component_version',\\r\\n                component: 'lib-jitsi-meet',\\r\\n                version: this.version\\r\\n            };\\r\\n\\r\\n            Statistics.sendLog(JSON.stringify(logObject));\\r\\n        }\\r\\n\\r\\n        return RTC.init(options);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Returns whether the desktop sharing is enabled or not.\\r\\n     *\\r\\n     * @returns {boolean}\\r\\n     */\\r\\n    isDesktopSharingEnabled() {\\r\\n        return RTC.isDesktopSharingEnabled();\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Returns whether the current execution environment supports WebRTC (for\\r\\n     * use within this library).\\r\\n     *\\r\\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\\r\\n     * execution environment (for use within this library); {@code false},\\r\\n     * otherwise.\\r\\n     */\\r\\n    isWebRtcSupported() {\\r\\n        return RTC.isWebRtcSupported();\\r\\n    },\\r\\n\\r\\n    setLogLevel(level) {\\r\\n        Logger.setLogLevel(level);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Sets the log level to the <tt>Logger</tt> instance with given id.\\r\\n     *\\r\\n     * @param {Logger.levels} level the logging level to be set\\r\\n     * @param {string} id the logger id to which new logging level will be set.\\r\\n     * Usually it's the name of the JavaScript source file including the path\\r\\n     * ex. \\\"modules/xmpp/ChatRoom.js\\\"\\r\\n     */\\r\\n    setLogLevelById(level, id) {\\r\\n        Logger.setLogLevelById(level, id);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Registers new global logger transport to the library logging framework.\\r\\n     *\\r\\n     * @param globalTransport\\r\\n     * @see Logger.addGlobalTransport\\r\\n     */\\r\\n    addGlobalLogTransport(globalTransport) {\\r\\n        Logger.addGlobalTransport(globalTransport);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Removes global logging transport from the library logging framework.\\r\\n     *\\r\\n     * @param globalTransport\\r\\n     * @see Logger.removeGlobalTransport\\r\\n     */\\r\\n    removeGlobalLogTransport(globalTransport) {\\r\\n        Logger.removeGlobalTransport(globalTransport);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n    * Sets global options which will be used by all loggers. Changing these\\r\\n    * works even after other loggers are created.\\r\\n    *\\r\\n    * @param options\\r\\n    * @see Logger.setGlobalOptions\\r\\n    */\\r\\n    setGlobalLogOptions(options) {\\r\\n        Logger.setGlobalOptions(options);\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Creates the media tracks and returns them trough the callback.\\r\\n     *\\r\\n     * @param options Object with properties / settings specifying the tracks\\r\\n     * which should be created. should be created or some additional\\r\\n     * configurations about resolution for example.\\r\\n     * @param {Array} options.effects optional effects array for the track\\r\\n     * @param {Array} options.devices the devices that will be requested\\r\\n     * @param {string} options.resolution resolution constraints\\r\\n     * @param {string} options.cameraDeviceId\\r\\n     * @param {string} options.micDeviceId\\r\\n     * @param {object} options.desktopSharingExtensionExternalInstallation -\\r\\n     * enables external installation process for desktop sharing extension if\\r\\n     * the inline installation is not posible. The following properties should\\r\\n     * be provided:\\r\\n     * @param {intiger} interval - the interval (in ms) for\\r\\n     * checking whether the desktop sharing extension is installed or not\\r\\n     * @param {Function} checkAgain - returns boolean. While checkAgain()==true\\r\\n     * createLocalTracks will wait and check on every \\\"interval\\\" ms for the\\r\\n     * extension. If the desktop extension is not install and checkAgain()==true\\r\\n     * createLocalTracks will finish with rejected Promise.\\r\\n     * @param {Function} listener - The listener will be called to notify the\\r\\n     * user of lib-jitsi-meet that createLocalTracks is starting external\\r\\n     * extension installation process.\\r\\n     * NOTE: If the inline installation process is not possible and external\\r\\n     * installation is enabled the listener property will be called to notify\\r\\n     * the start of external installation process. After that createLocalTracks\\r\\n     * will start to check for the extension on every interval ms until the\\r\\n     * plugin is installed or until checkAgain return false. If the extension\\r\\n     * is found createLocalTracks will try to get the desktop sharing track and\\r\\n     * will finish the execution. If checkAgain returns false, createLocalTracks\\r\\n     * will finish the execution with rejected Promise.\\r\\n     *\\r\\n     * @param {boolean} (firePermissionPromptIsShownEvent) - if event\\r\\n     * JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN should be fired\\r\\n     * @param originalOptions - internal use only, to be able to store the\\r\\n     * originally requested options.\\r\\n     * @returns {Promise.<{Array.<JitsiTrack>}, JitsiConferenceError>} A promise\\r\\n     * that returns an array of created JitsiTracks if resolved, or a\\r\\n     * JitsiConferenceError if rejected.\\r\\n     */\\r\\n    createLocalTracks(\\r\\n            options = {}, firePermissionPromptIsShownEvent, originalOptions) {\\r\\n        let promiseFulfilled = false;\\r\\n\\r\\n        if (firePermissionPromptIsShownEvent === true) {\\r\\n            window.setTimeout(() => {\\r\\n                if (!promiseFulfilled) {\\r\\n                    JitsiMediaDevices.emitEvent(\\r\\n                        JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN,\\r\\n                        browser.getName());\\r\\n                }\\r\\n            }, USER_MEDIA_PERMISSION_PROMPT_TIMEOUT);\\r\\n        }\\r\\n\\r\\n        if (!window.connectionTimes) {\\r\\n            window.connectionTimes = {};\\r\\n        }\\r\\n        window.connectionTimes['obtainPermissions.start']\\r\\n            = window.performance.now();\\r\\n\\r\\n        return RTC.obtainAudioAndVideoPermissions(options)\\r\\n            .then(tracks => {\\r\\n                promiseFulfilled = true;\\r\\n\\r\\n                window.connectionTimes['obtainPermissions.end']\\r\\n                    = window.performance.now();\\r\\n\\r\\n                Statistics.sendAnalytics(\\r\\n                    createGetUserMediaEvent(\\r\\n                        'success',\\r\\n                        getAnalyticsAttributesFromOptions(options)));\\r\\n\\r\\n                if (!RTC.options.disableAudioLevels) {\\r\\n                    for (let i = 0; i < tracks.length; i++) {\\r\\n                        const track = tracks[i];\\r\\n                        const mStream = track.getOriginalStream();\\r\\n\\r\\n                        if (track.getType() === MediaType.AUDIO) {\\r\\n                            Statistics.startLocalStats(mStream,\\r\\n                                track.setAudioLevel.bind(track));\\r\\n                            track.addEventListener(\\r\\n                                JitsiTrackEvents.LOCAL_TRACK_STOPPED,\\r\\n                                () => {\\r\\n                                    Statistics.stopLocalStats(mStream);\\r\\n                                });\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                // set real device ids\\r\\n                const currentlyAvailableMediaDevices\\r\\n                    = RTC.getCurrentlyAvailableMediaDevices();\\r\\n\\r\\n                if (currentlyAvailableMediaDevices) {\\r\\n                    for (let i = 0; i < tracks.length; i++) {\\r\\n                        const track = tracks[i];\\r\\n\\r\\n                        track._setRealDeviceIdFromDeviceList(\\r\\n                            currentlyAvailableMediaDevices);\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                return tracks;\\r\\n            })\\r\\n            .catch(error => {\\r\\n                promiseFulfilled = true;\\r\\n\\r\\n                if (error.name === JitsiTrackErrors.UNSUPPORTED_RESOLUTION\\r\\n                    && !browser.usesNewGumFlow()) {\\r\\n                    const oldResolution = options.resolution || '720';\\r\\n                    const newResolution = getLowerResolution(oldResolution);\\r\\n\\r\\n                    if (newResolution !== null) {\\r\\n                        options.resolution = newResolution;\\r\\n\\r\\n                        logger.debug(\\r\\n                            'Retry createLocalTracks with resolution',\\r\\n                            newResolution);\\r\\n\\r\\n                        Statistics.sendAnalytics(createGetUserMediaEvent(\\r\\n                            'warning',\\r\\n                            {\\r\\n                                'old_resolution': oldResolution,\\r\\n                                'new_resolution': newResolution,\\r\\n                                reason: 'unsupported resolution'\\r\\n                            }));\\r\\n\\r\\n                        return this.createLocalTracks(\\r\\n                            options,\\r\\n                            undefined,\\r\\n                            originalOptions || Object.assign({}, options));\\r\\n                    }\\r\\n\\r\\n                    // We tried everything. If there is a mandatory device id,\\r\\n                    // remove it and let gum find a device to use.\\r\\n                    if (originalOptions\\r\\n                        && error.gum.constraints\\r\\n                        && error.gum.constraints.video\\r\\n                        && error.gum.constraints.video.mandatory\\r\\n                        && error.gum.constraints.video.mandatory.sourceId) {\\r\\n                        originalOptions.cameraDeviceId = undefined;\\r\\n\\r\\n                        return this.createLocalTracks(originalOptions);\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (error.name\\r\\n                        === JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED) {\\r\\n                    // User cancelled action is not really an error, so only\\r\\n                    // log it as an event to avoid having conference classified\\r\\n                    // as partially failed\\r\\n                    const logObject = {\\r\\n                        id: 'chrome_extension_user_canceled',\\r\\n                        message: error.message\\r\\n                    };\\r\\n\\r\\n                    Statistics.sendLog(JSON.stringify(logObject));\\r\\n\\r\\n                    Statistics.sendAnalytics(\\r\\n                        createGetUserMediaEvent(\\r\\n                            'warning',\\r\\n                            {\\r\\n                                reason: 'extension install user canceled'\\r\\n                            }));\\r\\n                } else if (error.name === JitsiTrackErrors.NOT_FOUND) {\\r\\n                    // logs not found devices with just application log to cs\\r\\n                    const logObject = {\\r\\n                        id: 'usermedia_missing_device',\\r\\n                        status: error.gum.devices\\r\\n                    };\\r\\n\\r\\n                    Statistics.sendLog(JSON.stringify(logObject));\\r\\n\\r\\n                    const attributes\\r\\n                        = getAnalyticsAttributesFromOptions(options);\\r\\n\\r\\n                    attributes.reason = 'device not found';\\r\\n                    attributes.devices = error.gum.devices.join('.');\\r\\n                    Statistics.sendAnalytics(\\r\\n                        createGetUserMediaEvent('error', attributes));\\r\\n                } else {\\r\\n                    // Report gUM failed to the stats\\r\\n                    Statistics.sendGetUserMediaFailed(error);\\r\\n\\r\\n                    const attributes\\r\\n                        = getAnalyticsAttributesFromOptions(options);\\r\\n\\r\\n                    attributes.reason = error.name;\\r\\n                    Statistics.sendAnalytics(\\r\\n                        createGetUserMediaEvent('error', attributes));\\r\\n                }\\r\\n\\r\\n                window.connectionTimes['obtainPermissions.end']\\r\\n                    = window.performance.now();\\r\\n\\r\\n                return Promise.reject(error);\\r\\n            });\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Checks if its possible to enumerate available cameras/microphones.\\r\\n     *\\r\\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\\r\\n     * the WebRTC stack is ready, either with true if the device listing is\\r\\n     * available available or with false otherwise.\\r\\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceListAvailable instead\\r\\n     */\\r\\n    isDeviceListAvailable() {\\r\\n        logger.warn('This method is deprecated, use '\\r\\n            + 'JitsiMeetJS.mediaDevices.isDeviceListAvailable instead');\\r\\n\\r\\n        return this.mediaDevices.isDeviceListAvailable();\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Returns true if changing the input (camera / microphone) or output\\r\\n     * (audio) device is supported and false if not.\\r\\n     *\\r\\n     * @param {string} [deviceType] - type of device to change. Default is\\r\\n     * {@code undefined} or 'input', 'output' - for audio output device change.\\r\\n     * @returns {boolean} {@code true} if available; {@code false}, otherwise.\\r\\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead\\r\\n     */\\r\\n    isDeviceChangeAvailable(deviceType) {\\r\\n        logger.warn('This method is deprecated, use '\\r\\n            + 'JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead');\\r\\n\\r\\n        return this.mediaDevices.isDeviceChangeAvailable(deviceType);\\r\\n    },\\r\\n\\r\\n\\r\\n    /**\\r\\n     * Checks if the current environment supports having multiple audio\\r\\n     * input devices in use simultaneously.\\r\\n     *\\r\\n     * @returns {boolean} True if multiple audio input devices can be used.\\r\\n     */\\r\\n    isMultipleAudioInputSupported() {\\r\\n        return this.mediaDevices.isMultipleAudioInputSupported();\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Checks if local tracks can collect stats and collection is enabled.\\r\\n     *\\r\\n     * @param {boolean} True if stats are being collected for local tracks.\\r\\n     */\\r\\n    isCollectingLocalStats() {\\r\\n        return Statistics.audioLevelsEnabled\\r\\n            && LocalStatsCollector.isLocalStatsSupported();\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     * Executes callback with list of media devices connected.\\r\\n     *\\r\\n     * @param {function} callback\\r\\n     * @deprecated use JitsiMeetJS.mediaDevices.enumerateDevices instead\\r\\n     */\\r\\n    enumerateDevices(callback) {\\r\\n        logger.warn('This method is deprecated, use '\\r\\n            + 'JitsiMeetJS.mediaDevices.enumerateDevices instead');\\r\\n        this.mediaDevices.enumerateDevices(callback);\\r\\n    },\\r\\n\\r\\n    /* eslint-disable max-params */\\r\\n\\r\\n    /**\\r\\n     * @returns function that can be used to be attached to window.onerror and\\r\\n     * if options.enableWindowOnErrorHandler is enabled returns\\r\\n     * the function used by the lib.\\r\\n     * (function(message, source, lineno, colno, error)).\\r\\n     */\\r\\n    getGlobalOnErrorHandler(message, source, lineno, colno, error) {\\r\\n        logger.error(\\r\\n            `UnhandledError: ${message}`,\\r\\n            `Script: ${source}`,\\r\\n            `Line: ${lineno}`,\\r\\n            `Column: ${colno}`,\\r\\n            'StackTrace: ', error);\\r\\n        Statistics.reportGlobalError(error);\\r\\n    },\\r\\n\\r\\n    /* eslint-enable max-params */\\r\\n\\r\\n    /**\\r\\n     * Represents a hub/namespace for utility functionality which may be of\\r\\n     * interest to lib-jitsi-meet clients.\\r\\n     */\\r\\n    util: {\\r\\n        AuthUtil,\\r\\n        ScriptUtil,\\r\\n        browser\\r\\n    }\\r\\n});\\r\\n\",\"/* Copyright @ 2016-present 8x8, Inc.\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *     http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar Logger = require('./Logger.js');\\r\\n\\r\\n/**\\r\\n * Creates new <tt>LogCollector</tt>. Class implements <tt>LoggerTransport</tt>\\r\\n * and thus can be added as global transport in order to capture all the logs.\\r\\n *\\r\\n * It captures subsequent log lines created whenever <tt>Logger</tt> logs\\r\\n * a message and stores them in a queue in order to batch log entries. There are\\r\\n * time and size limit constraints which determine how often batch entries are\\r\\n * stored. Whenever one of these limits is exceeded the <tt>LogCollector</tt>\\r\\n * will use the <tt>logStorage</tt> object given as an argument to save\\r\\n * the batch log entry.\\r\\n *\\r\\n * @param {Object} logStorage an object which allows to store the logs collected\\r\\n * @param {function(string|object[])} logStorage.storeLogs a method called when\\r\\n * this <tt>LogCollector</tt> requests log entry storage. The method's argument\\r\\n * is an array which can contain <tt>string</tt>s and <tt>object</tt>s. If given\\r\\n * item is an object it means that it's an aggregated message. That is a message\\r\\n * which is the same as the previous one and it's representation has\\r\\n * the following format:\\r\\n * {\\r\\n *   {string} text: 'the text of some duplicated message'\\r\\n *   {number} count: 3 // how many times the message appeared in a row\\r\\n * }\\r\\n * If a message \\\"B\\\" after an aggregated message \\\"A\\\" is different, then it breaks\\r\\n * the sequence of \\\"A\\\". Which means that even if the next message \\\"C\\\" is\\r\\n * the same as \\\"A\\\" it will start a new aggregated message \\\"C\\\".\\r\\n * @param {function()} logStorage.isReady a method which should return\\r\\n * a <tt>boolean</tt> to tell the collector that it's ready to store. During the\\r\\n * time storage is not ready log batches will be cached and stored on the next\\r\\n * occasion (flush or interval timeout).\\r\\n *\\r\\n * @param {Object} options the <tt>LogCollector</tt> configuration options.\\r\\n * @param {number} options.maxEntryLength the size limit for a single log entry\\r\\n * to be stored. The <tt>LogCollector</tt> will push the entry as soon as it\\r\\n * reaches or exceeds this limit given that <tt>logStorage.isReady</tt>\\r\\n * returns <tt>true</tt>. Otherwise the log entry will be cached until the log\\r\\n * storage becomes ready. Note that the \\\"is ready\\\" condition is checked every\\r\\n * <tt>options.storeInterval</tt> milliseconds.\\r\\n * @param {number} options.storeInterval how often the logs should be stored in\\r\\n * case <tt>maxEntryLength</tt> was not exceeded.\\r\\n * @param {boolean} options.stringifyObjects indicates whether or not object\\r\\n * arguments should be \\\"stringified\\\" with <tt>JSON.stringify</tt> when a log\\r\\n * message is composed. Note that objects logged on the error log level are\\r\\n * always stringified.\\r\\n *\\r\\n * @constructor\\r\\n */\\r\\nfunction LogCollector(logStorage, options) {\\r\\n    this.logStorage = logStorage;\\r\\n    this.stringifyObjects\\r\\n        = options && options.stringifyObjects\\r\\n            ? options.stringifyObjects : false;\\r\\n    this.storeInterval\\r\\n        = options && options.storeInterval\\r\\n            ? options.storeInterval: 30000;\\r\\n    this.maxEntryLength\\r\\n        = options && options.maxEntryLength\\r\\n            ? options.maxEntryLength : 10000;\\r\\n    // Bind the log method for each level to the corresponding method name\\r\\n    // in order to implement \\\"global log transport\\\" object.\\r\\n    Object.keys(Logger.levels).forEach(\\r\\n    function (logLevel) {\\r\\n        var methodName = Logger.levels[logLevel];\\r\\n        this[methodName] = function (logLevel) {\\r\\n            this._log.apply(this, arguments);\\r\\n        }.bind(this, logLevel);\\r\\n    }.bind(this));\\r\\n    /**\\r\\n     * The ID of store logs interval if one is currently scheduled or\\r\\n     * <tt>null</tt> otherwise.\\r\\n     * @type {number|null}\\r\\n     */\\r\\n    this.storeLogsIntervalID = null;\\r\\n    /**\\r\\n     * The log messages that are to be batched into log entry when\\r\\n     * {@link LogCollector._flush} method is called.\\r\\n     * @type {string[]}\\r\\n     */\\r\\n    this.queue = [];\\r\\n    /**\\r\\n     * The total length of all messages currently stored in the {@link queue}.\\r\\n     * @type {number}\\r\\n     */\\r\\n    this.totalLen = 0;\\r\\n    /**\\r\\n     * An array used to temporarily store log batches, before the storage gets\\r\\n     * ready.\\r\\n     * @type {string[]}\\r\\n     */\\r\\n    this.outputCache = [];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Method called inside of {@link formatLogMessage} in order to covert an\\r\\n * <tt>Object</tt> argument to string. The conversion will happen when either\\r\\n * 'stringifyObjects' option is enabled or on the {@link Logger.levels.ERROR}\\r\\n * log level. The default implementation uses <tt>JSON.stringify</tt> and\\r\\n * returns \\\"[object with circular refs?]\\\" instead of an object if it fails.\\r\\n *\\r\\n * @param {object} someObject the <tt>object</tt> to be stringified.\\r\\n *\\r\\n * @return {string} the result of <tt>JSON.stringify</tt> or\\r\\n * \\\"[object with circular refs?]\\\" if any error occurs during \\\"stringification\\\".\\r\\n *\\r\\n * @protected\\r\\n */\\r\\nLogCollector.prototype.stringify = function (someObject) {\\r\\n    try {\\r\\n        return JSON.stringify(someObject);\\r\\n    } catch (error) {\\r\\n        return \\\"[object with circular refs?]\\\";\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Formats log entry for the given logging level and arguments passed to the\\r\\n * <tt>Logger</tt>'s log method. The first argument is log level and the next\\r\\n * arguments have to be captured using JS built-in 'arguments' variable.\\r\\n *\\r\\n * @param {Logger.levels} logLevel provides the logging level of the message to\\r\\n * be logged.\\r\\n *\\r\\n * @return {string|null} a non-empty string representation of the log entry\\r\\n * crafted from the log arguments. If the return value is <tt>null</tt> then\\r\\n * the message wil be discarded by this <tt>LogCollector</tt>.\\r\\n *\\r\\n * @protected\\r\\n */\\r\\nLogCollector.prototype.formatLogMessage\\r\\n= function (logLevel/*, arg1, arg2, arg3... */) {\\r\\n    var msg = '';\\r\\n    for (var i = 1, len = arguments.length; i < len; i++) {\\r\\n        var arg = arguments[i];\\r\\n        // objects logged on error level are always converted to JSON\\r\\n        if ((this.stringifyObjects || logLevel === Logger.levels.ERROR)\\r\\n            && typeof arg === 'object') {\\r\\n            arg = this.stringify(arg);\\r\\n        }\\r\\n        msg += arg;\\r\\n        if (i != len - 1) {\\r\\n            msg += ' ';\\r\\n        }\\r\\n    }\\r\\n    return msg.length ? msg : null;\\r\\n};\\r\\n\\r\\n/**\\r\\n * The log method bound to each of the logging levels in order to implement\\r\\n * \\\"global log transport\\\" object.\\r\\n *\\r\\n * @private\\r\\n */\\r\\nLogCollector.prototype._log = function() {\\r\\n\\r\\n    // var logLevel = arguments[0]; first argument is the log level\\r\\n    var msg = this.formatLogMessage.apply(this, arguments);\\r\\n    if (msg) {\\r\\n        // The same as the previous message aggregation logic\\r\\n        var prevMessage\\r\\n            = this.queue.length ? this.queue[this.queue.length -1] : undefined;\\r\\n        // NOTE that typeof undefined is 'undefined'\\r\\n        var prevMessageText\\r\\n            = typeof prevMessage === 'object' ? prevMessage.text : prevMessage;\\r\\n        // Is it the same as the previous one ?\\r\\n        if (prevMessageText == msg) {\\r\\n            if (typeof prevMessage === 'object') {\\r\\n                prevMessage.count += 1;\\r\\n            } else {\\r\\n                this.queue[this.queue.length-1] = {\\r\\n                    text: msg,\\r\\n                    count: 2\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            this.queue.push(msg);\\r\\n            this.totalLen += msg.length;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (this.totalLen >= this.maxEntryLength) {\\r\\n        this._flush(true /* force */, true /* reschedule */);\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Starts periodical \\\"store logs\\\" task which will be triggered at the interval\\r\\n * specified in the constructor options.\\r\\n */\\r\\nLogCollector.prototype.start = function () {\\r\\n    this._reschedulePublishInterval();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Reschedules the periodical \\\"store logs\\\" task which will store the next batch\\r\\n * log entry in the storage.\\r\\n * @private\\r\\n */\\r\\nLogCollector.prototype._reschedulePublishInterval = function () {\\r\\n    if (this.storeLogsIntervalID) {\\r\\n        window.clearTimeout(this.storeLogsIntervalID);\\r\\n        this.storeLogsIntervalID = null;\\r\\n    }\\r\\n    // It's actually a timeout, because it is rescheduled on every flush\\r\\n    this.storeLogsIntervalID\\r\\n        = window.setTimeout(\\r\\n            this._flush.bind(\\r\\n                this, false /* do not force */, true /* reschedule */),\\r\\n            this.storeInterval);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Call this method to flush the log entry buffer and store it in the log\\r\\n * storage immediately (given that the storage is ready).\\r\\n */\\r\\nLogCollector.prototype.flush = function() {\\r\\n    this._flush(\\r\\n        false /* do not force, as it will not be stored anyway */,\\r\\n        true /* reschedule next update */ )\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stores the next batch log entry in the log storage.\\r\\n * @param {boolean} force enforce current logs batch to be stored or cached if\\r\\n * there is anything to be logged, but the storage is not ready yet. One of\\r\\n * legitimate reasons to force is when the logs length exceeds size limit which\\r\\n * could result in truncation.\\r\\n * @param {boolean} reschedule <tt>true</tt> if the next periodic task should be\\r\\n * scheduled after the log entry is stored. <tt>false</tt> will end the periodic\\r\\n * task cycle.\\r\\n * @private\\r\\n */\\r\\nLogCollector.prototype._flush = function(force, reschedule) {\\r\\n    // Publish only if there's anything to be logged\\r\\n    if (this.totalLen > 0 && (this.logStorage.isReady() || force)) {\\r\\n        //FIXME avoid truncating\\r\\n        // right now we don't care if the message size is \\\"slightly\\\" exceeded\\r\\n        if (this.logStorage.isReady()) {\\r\\n            // Sends all cached logs\\r\\n            if (this.outputCache.length) {\\r\\n                this.outputCache.forEach(\\r\\n                    function (cachedQueue) {\\r\\n                        this.logStorage.storeLogs(cachedQueue);\\r\\n                    }.bind(this)\\r\\n                );\\r\\n                // Clear the cache\\r\\n                this.outputCache = [];\\r\\n            }\\r\\n            // Send current batch\\r\\n            this.logStorage.storeLogs(this.queue);\\r\\n        } else {\\r\\n            this.outputCache.push(this.queue);\\r\\n        }\\r\\n\\r\\n        this.queue = [];\\r\\n        this.totalLen = 0;\\r\\n    }\\r\\n\\r\\n    if (reschedule) {\\r\\n        this._reschedulePublishInterval();\\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Stops the periodical \\\"store logs\\\" task and immediately stores any pending\\r\\n * log entries as a batch.\\r\\n */\\r\\nLogCollector.prototype.stop = function() {\\r\\n    // Flush and stop publishing logs\\r\\n    this._flush(false /* do not force */, false /* do not reschedule */);\\r\\n};\\r\\n\\r\\nmodule.exports = LogCollector;\\r\\n\",\"module.exports = function() {\\r\\n\\tthrow new Error(\\\"define cannot be used indirect\\\");\\r\\n};\\r\\n\",\"/* globals __webpack_amd_options__ */\\r\\nmodule.exports = __webpack_amd_options__;\\r\\n\",\"/*!\\n * currentExecutingScript\\n * Get the currently executing script, regardless of its source/trigger/synchronicity. Similar to HTML5's `document.currentScript` but arguably much more useful!\\n * Copyright (c) 2015 James M. Greene\\n * Licensed MIT\\n * https://github.com/JamesMGreene/currentExecutingScript\\n * v0.1.3\\n */\\n(function(root, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    // AMD. Register as an anonymous module.\\n    define([], factory);\\n  } else if (typeof exports === \\\"object\\\") {\\n    // CommonJS-like environments that support `module.exports`,\\n    // like Node.js. Does not work with strict CommonJS!\\n    module.exports = factory();\\n  } else {\\n    // Browser globals (`root` is `window`)\\n    root.currentExecutingScript = factory();\\n  }\\n}(\\n  // Current context/scope\\n  this || window,\\n\\n  // Factory function to return the export\\n  function() {\\n\\nvar scriptReadyRegex = /^(interactive|loaded|complete)$/;\\n\\n// This page's URL (minus query string and fragment identifer hash, if any)\\nvar fullPageUrl = !!window.location ? window.location.href : null;\\nvar pageUrl = fullPageUrl ? fullPageUrl.replace(/#.*$/, \\\"\\\").replace(/\\\\?.*$/, \\\"\\\") || null : null;\\n\\n// Live NodeList collection\\nvar scripts = document.getElementsByTagName(\\\"script\\\");\\n\\n// Check if the browser supports the `readyState` property on `script` elements\\nvar supportsScriptReadyState = \\\"readyState\\\" in (scripts[0] || document.createElement(\\\"script\\\"));\\n\\n// Lousy browser detection for [not] Opera\\nvar isNotOpera = !window.opera || window.opera.toString() !== \\\"[object Opera]\\\";\\n\\n// Detect if `document.currentScript` is supported\\nvar hasNativeCurrentScriptAccessor = \\\"currentScript\\\" in document;\\n\\nvar originalStackDepthConfig;\\n// Detect if the V8 Error Stack Trace API is supported\\nif (\\\"stackTraceLimit\\\" in Error && Error.stackTraceLimit !== Infinity) {\\n  originalStackDepthConfig = Error.stackTraceLimit;\\n  Error.stackTraceLimit = Infinity;\\n}\\n\\n\\n// In some browsers (e.g. Chrome), you can get the current stack from an Error\\n// object instance without needing to throw it. Avoiding an unnecessary\\n// use of `throw` saves time and performance.\\nvar hasStackBeforeThrowing = false,\\n    hasStackAfterThrowing = false;\\n(function() {\\n  try {\\n    var err = new Error();\\n    hasStackBeforeThrowing = typeof err.stack === \\\"string\\\" && !!err.stack;\\n    throw err;\\n  }\\n  catch (thrownErr) {\\n    hasStackAfterThrowing = typeof thrownErr.stack === \\\"string\\\" && !!thrownErr.stack;\\n  }\\n})();\\n\\n\\n// Normalize whitespace within a string\\nfunction normalizeWhitespace(str) {\\n  return str ? str.replace(/^\\\\s+$|\\\\s+$/g, \\\"\\\").replace(/\\\\s\\\\s+/g, \\\" \\\") : \\\"\\\";\\n}\\n\\n// Get script object based on the `src` URL\\nfunction getScriptFromUrl(url, eligibleScripts) {\\n  var i,\\n      script = null;\\n\\n  eligibleScripts = eligibleScripts || scripts;\\n\\n  if (typeof url === \\\"string\\\" && url) {\\n    for (i = eligibleScripts.length; i--; ) {\\n      if (eligibleScripts[i].src === url) {\\n        // NOTE: Could check if the same script URL is used by more than one `script` element\\n        // here... but let's not. That would yield less useful results in \\\"loose\\\" detection. ;)\\n        script = eligibleScripts[i];\\n        break;\\n      }\\n    }\\n  }\\n  return script;\\n}\\n\\n// Get script object based on the caller function's source code body (text)\\nfunction getInlineScriptFromCallerSource(callerFnSource, eligibleScripts) {\\n  var i, inlineScriptText,\\n      script = null,\\n      callerSourceText = normalizeWhitespace(callerFnSource);\\n\\n  eligibleScripts = eligibleScripts || scripts;\\n\\n  if (callerFnSource && callerSourceText) {\\n    for (i = eligibleScripts.length; i--; ) {\\n      // Only look at inline scripts\\n      if (!eligibleScripts[i].hasAttribute(\\\"src\\\")) {\\n        inlineScriptText = normalizeWhitespace(eligibleScripts[i].text);\\n        if (inlineScriptText.indexOf(callerSourceText) !== -1) {\\n          // If more than one match is found, don't return any\\n          if (script) {\\n            script = null;\\n            break;\\n          }\\n          script = eligibleScripts[i];\\n        }\\n      }\\n    }\\n  }\\n\\n  return script;\\n}\\n\\n// If there is only a single inline script on the page, return it; otherwise `null`\\nfunction getSoleInlineScript(eligibleScripts) {\\n  var i, len,\\n      script = null;\\n  eligibleScripts = eligibleScripts || scripts;\\n  for (i = 0, len = eligibleScripts.length; i < len; i++) {\\n    if (!eligibleScripts[i].hasAttribute(\\\"src\\\")) {\\n      if (script) {\\n        script = null;\\n        break;\\n      }\\n      script = eligibleScripts[i];\\n    }\\n  }\\n  return script;\\n}\\n\\n// Get the currently executing script URL from an Error stack trace\\nfunction getScriptUrlFromStack(stack, skipStackDepth) {\\n  var matches, remainingStack,\\n      url = null,\\n      ignoreMessage = typeof skipStackDepth === \\\"number\\\";\\n  skipStackDepth = ignoreMessage ? Math.round(skipStackDepth) : 0;\\n  if (typeof stack === \\\"string\\\" && stack) {\\n    if (ignoreMessage) {\\n      matches = stack.match(/(data:text\\\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\\\/\\\\/[\\\\/]?.+?\\\\/[^:\\\\)]*?)(?::\\\\d+)(?::\\\\d+)?/);\\n    }\\n    else {\\n      matches = stack.match(/^(?:|[^:@]*@|.+\\\\)@(?=data:text\\\\/javascript|blob|http[s]?|file)|.+?\\\\s+(?: at |@)(?:[^:\\\\(]+ )*[\\\\(]?)(data:text\\\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\\\/\\\\/[\\\\/]?.+?\\\\/[^:\\\\)]*?)(?::\\\\d+)(?::\\\\d+)?/);\\n\\n      if (!(matches && matches[1])) {\\n        matches = stack.match(/\\\\)@(data:text\\\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\\\/\\\\/[\\\\/]?.+?\\\\/[^:\\\\)]*?)(?::\\\\d+)(?::\\\\d+)?/);\\n      }\\n    }\\n\\n    if (matches && matches[1]) {\\n      if (skipStackDepth > 0) {\\n        remainingStack = stack.slice(stack.indexOf(matches[0]) + matches[0].length);\\n        url = getScriptUrlFromStack(remainingStack, (skipStackDepth - 1));\\n      }\\n      else {\\n        url = matches[1];\\n      }\\n    }\\n\\n    // TODO: Handle more edge cases!\\n    // Fixes #1\\n    // See https://github.com/JamesMGreene/currentExecutingScript/issues/1\\n\\n    // ???\\n\\n  }\\n  return url;\\n}\\n\\n\\n// Get the farthest currently executing (i.e. yes, EXECUTING) `script` DOM\\n// element for the caller function, regardless of whether it is that `script`\\n// DOM element is currently being evaluated for the first time. The farthest\\n// currently executing `script` DOM element would typically be considered the\\n// originator of the current execution stack.\\nfunction _farthestExecutingScript() {\\n  /*jshint noarg:false */\\n\\n  // TODO: Implement!\\n  // Fixes #3\\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/3\\n  return null;\\n\\n/*\\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\\n  if (scripts.length === 0) {\\n    return null;\\n  }\\n\\n  // Guaranteed accurate in IE 6-10.\\n  // Not accurate/supported in any other browsers.\\n  if (isNotOpera && supportsScriptReadyState) {\\n    for (var i = scripts.length; i--; ) {\\n      if (scripts[i].readyState === \\\"interactive\\\") {\\n        return scripts[i];\\n      }\\n    }\\n  }\\n\\n  var stack,\\n      e = new Error();\\n  if (hasStackBeforeThrowing) {\\n    stack = e.stack;\\n  }\\n  if (!stack && hasStackAfterThrowing) {\\n    try {\\n      throw e;\\n    }\\n    catch (err) {\\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\\n      stack = err.stack;\\n    }\\n  }\\n  if (stack) {\\n    var url = getScriptUrlFromStack(stack, skipStackDepth);\\n    var script = getScriptFromUrl(url, scripts );\\n    if (!script && pageUrl && url === pageUrl) {\\n      // Try to find the correct inline script by searching through\\n      // inline scripts' text content for the caller function's source\\n      // code to be present. If the caller function's source code is\\n      // not available, see if there is only one inline script element\\n      // in the DOM and return that (even though it may be wrong)\\n\\n      // TODO: Implement!\\n      // Fixes #4 in part\\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\\n\\n      var callerFn = _farthestExecutingScript.caller || null,\\n          callerFnStack = [],\\n          callerFnSource = null;\\n\\n      while (callerFn) {\\n        callerFnStack.push(callerFn);\\n        callerFn = callerFn.caller || null;\\n      }\\n      callerFn = callerFnStack.slice(-1)[0];\\n      callerFnSource = callerFn ? (\\\"\\\" + callerFn) : null;\\n\\n\\n      if (callerFnSource) {\\n        script = getInlineScriptFromCallerSource(callerFnSource);\\n      }\\n      else {\\n        // NOTE: This is a loose assumption that could be inaccurate!\\n        //\\n        // Inaccuracies:\\n        //  - If the inline script that initiated the call was also removed from the DOM.\\n        //  - If the call was initiated by an element's inline event handler,\\n        //    e.g. `<a onclick=\\\"(function() { alert(currentExecutingScript()); }()\\\">click</a>`\\n        script = getSoleInlineScript();\\n      }\\n    }\\n    return script;\\n  }\\n\\n  // NOTE: This is a loose assumption that could be inaccurate!\\n  //\\n  // Inaccuracies:\\n  //  - If a script is created dynamically and appended to some position\\n  //    other than the very end of the document.\\n  //  - If multiple scripts are created dynamically and all appended to the\\n  //    same position within the document (and do not have their `async` attributes\\n  //    set to `false`, at least in browsers that support async script evaluation.\\n  //    other than the very end of the document.\\n  //  - If any scripts are added with the `async` attribute set to `true` in a browser\\n  //    that supports it.\\n  //  - May get confused by `script` elements within `svg` elements\\n  return scripts[scripts.length - 1] || null;\\n*/\\n}\\n\\n\\n// Get the originating currently executing (i.e. yes, EXECUTING) `script` DOM\\n// element or attribute node (e.g. `onclick`) for the caller function,\\n// regardless of whether it is that `script` DOM element is currently being\\n// evaluated for the first time. The originating currently executing `script`\\n// DOM element [or attribute node] is the originator of the current execution stack.\\nfunction _originatingExecutingScript() {\\n  // TODO: Implement!\\n  // Fixes #2\\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/2\\n  return null;\\n}\\n\\n// Get the nearest currently executing (i.e. yes, EXECUTING) `script` DOM\\n// element for the caller function, regardless of whether it is that `script`\\n// DOM element is currently being evaluated for the first time.\\nfunction _nearestExecutingScript() {\\n  /*jshint noarg:false */\\n\\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\\n  if (scripts.length === 0) {\\n    return null;\\n  }\\n\\n  var i, e, stack, url, script,\\n      eligibleScripts = [],\\n      skipStackDepth = _nearestExecutingScript.skipStackDepth || 1,\\n\\n      // TODO: Implement!\\n      // Fixes #4 in part\\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\\n      callerFnSource = null;  //(\\\"\\\" + (_nearestExecutingScript.caller || \\\"\\\")) || null;\\n\\n  // This part will only help in IE 6-10.\\n  for (i = 0; i < scripts.length; i++) {\\n    if (isNotOpera && supportsScriptReadyState) {\\n      if (scriptReadyRegex.test(scripts[i].readyState)) {\\n        eligibleScripts.push(scripts[i]);\\n      }\\n    }\\n    else {\\n      eligibleScripts.push(scripts[i]);\\n    }\\n  }\\n\\n  e = new Error();\\n  if (hasStackBeforeThrowing) {\\n    stack = e.stack;\\n  }\\n  if (!stack && hasStackAfterThrowing) {\\n    try {\\n      throw e;\\n    }\\n    catch (err) {\\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\\n      stack = err.stack;\\n    }\\n  }\\n\\n  if (stack) {\\n    url = getScriptUrlFromStack(stack, skipStackDepth);\\n    script = getScriptFromUrl(url, eligibleScripts);\\n\\n    if (!script && pageUrl && url === pageUrl) {\\n      // Try to find the correct inline script by searching through\\n      // inline scripts' text content for the caller function's source\\n      // code to be present.\\n      if (callerFnSource) {\\n        script = getInlineScriptFromCallerSource(callerFnSource, eligibleScripts);\\n      }\\n      // If the caller function's source code is not available, see if\\n      // there is only one inline script element in the DOM and return\\n      // that (even though it may be wrong)...\\n      else {\\n        // NOTE: This is a loose assumption that could be inaccurate!\\n        //\\n        // Inaccuracies:\\n        //  - If the inline script that initiated the call was also removed from the DOM.\\n        //  - If the call was initiated by an element's inline event handler,\\n        //    e.g. `<a onclick=\\\"(function() { alert(currentExecutingScript()); }()\\\">click</a>`\\n        script = getSoleInlineScript(eligibleScripts);\\n      }\\n    }\\n  }\\n\\n  //\\n  // Welcome to the Island of Inaccurate Assumptions!\\n  // NOTE: ALL of the following are loose assumptions that could be inaccurate!\\n  //\\n\\n  if (!script) {\\n    // Inaccuracies:\\n    //  - If the inline script that initiated the call was also removed from the DOM.\\n    //  - If the call was initiated by an element's inline event handler,\\n    //    e.g. `<a onclick=\\\"(function() { alert(currentExecutingScript()); }()\\\">click</a>`\\n    if (eligibleScripts.length === 1) {\\n      script = eligibleScripts[0];\\n    }\\n  }\\n\\n  if (!script) {\\n    // Inaccuracies:\\n    //  - If script currently being synchronously evaluated by the parser is the\\n    //    originator of this call stack but NOT the source script of the caller/invocation\\n    //    e.g.\\n    //    ```html\\n    //    <script id=\\\"a\\\">\\n    //    function getCurrentScriptCallerFn() {\\n    //      return currentExecutingScript.near();\\n    //    }\\n    //    </script>\\n    //    <script id=\\\"b\\\">\\n    //    // Should get `script[id=\\\"a\\\"]` but will get `script[id=\\\"b\\\"]` instead\\n    //    getCurrentScriptCallerFn();\\n    //    </script>\\n    if (hasNativeCurrentScriptAccessor) {\\n      script = document.currentScript;\\n    }\\n  }\\n\\n  if (!script) {\\n    // Inaccuracies:\\n    //  - If script currently being synchronously evaluated by the parser is the\\n    //    originator of this call stack but NOT the source script of the caller/invocation\\n    //    e.g.\\n    //    ```html\\n    //    <script id=\\\"a\\\">\\n    //    function getCurrentScriptCallerFn() {\\n    //      return currentExecutingScript.near();\\n    //    }\\n    //    </script>\\n    //    <script id=\\\"b\\\">\\n    //    // Should get `script[id=\\\"a\\\"]` but will get `script[id=\\\"b\\\"]` instead\\n    //    getCurrentScriptCallerFn();\\n    //    </script>\\n    if (isNotOpera && supportsScriptReadyState) {\\n      for (i = eligibleScripts.length; i--; ) {\\n        if (eligibleScripts[i].readyState === \\\"interactive\\\") {\\n          script = eligibleScripts[i];\\n          break;\\n        }\\n      }\\n    }\\n  }\\n\\n  if (!script) {\\n    // Inaccuracies:\\n    //  - If a script is created dynamically and appended to some position\\n    //    other than the very end of the document.\\n    //  - If multiple scripts are created dynamically and all appended to the\\n    //    same position within the document (and do not have their `async` attributes\\n    //    set to `false`, at least in browsers that support async script evaluation.\\n    //    other than the very end of the document.\\n    //  - If any scripts are added with the `async` attribute set to `true` in a browser\\n    //    that supports it.\\n    //  - May get confused by `script` elements within `svg` elements\\n    //  - If script currently being synchronously evaluated by the parser is the\\n    //    originator of this call stack but NOT the source script of the caller/invocation\\n    //    e.g.\\n    //    ```html\\n    //    <script id=\\\"a\\\">\\n    //    function getCurrentScriptCallerFn() {\\n    //      return currentExecutingScript.near();\\n    //    }\\n    //    </script>\\n    //    <script id=\\\"b\\\">\\n    //    // Should get `script[id=\\\"a\\\"]` but will get `script[id=\\\"b\\\"]` instead\\n    //    getCurrentScriptCallerFn();\\n    //    </script>\\n    //    ```\\n    script = eligibleScripts[eligibleScripts.length - 1] || null;\\n  }\\n\\n  return script;\\n}\\n\\n// Default stack depth to skip over when analyzing call stack frames\\n_nearestExecutingScript.skipStackDepth = 1;\\n\\n\\n\\n    //\\n    // Export the API\\n    //\\n    var currentExecutingScript    = _nearestExecutingScript;      // default\\n    currentExecutingScript.near   = _nearestExecutingScript;\\n    currentExecutingScript.far    = _farthestExecutingScript;\\n    currentExecutingScript.origin = _originatingExecutingScript;\\n\\n\\n    // Just return a value to define the module export.\\n    // This example returns an object, but the module\\n    // can return a function as the exported value.\\n    return currentExecutingScript;\\n  })\\n);\\n\",\"const Constants = {\\r\\n    LOCAL_JID: 'local'\\r\\n};\\r\\n\\r\\nmodule.exports = Constants;\\r\\n\",\"import { $iq, Strophe } from 'strophe.js';\\n\\nStrophe.addConnectionPlugin('disco',\\n{\\n    _connection: null,\\n    _identities : [],\\n    _features : [],\\n    _items : [],\\n    /** Function: init\\n     * Plugin init\\n     *\\n     * Parameters:\\n     *   (Strophe.Connection) conn - Strophe connection\\n     */\\n    init: function(conn)\\n    {\\n    this._connection = conn;\\n        this._identities = [];\\n        this._features   = [];\\n        this._items      = [];\\n        // disco info\\n        conn.addHandler(this._onDiscoInfo.bind(this), Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\\n        // disco items\\n        conn.addHandler(this._onDiscoItems.bind(this), Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\\n    },\\n    /** Function: addIdentity\\n     * See http://xmpp.org/registrar/disco-categories.html\\n     * Parameters:\\n     *   (String) category - category of identity (like client, automation, etc ...)\\n     *   (String) type - type of identity (like pc, web, bot , etc ...)\\n     *   (String) name - name of identity in natural language\\n     *   (String) lang - lang of name parameter\\n     *\\n     * Returns:\\n     *   Boolean\\n     */\\n    addIdentity: function(category, type, name, lang)\\n    {\\n        for (var i=0; i<this._identities.length; i++)\\n        {\\n            if (this._identities[i].category == category &&\\n                this._identities[i].type == type &&\\n                this._identities[i].name == name &&\\n                this._identities[i].lang == lang)\\n            {\\n                return false;\\n            }\\n        }\\n        this._identities.push({category: category, type: type, name: name, lang: lang});\\n        return true;\\n    },\\n    /** Function: addFeature\\n     *\\n     * Parameters:\\n     *   (String) var_name - feature name (like jabber:iq:version)\\n     *\\n     * Returns:\\n     *   boolean\\n     */\\n    addFeature: function(var_name)\\n    {\\n        for (var i=0; i<this._features.length; i++)\\n        {\\n             if (this._features[i] == var_name)\\n                 return false;\\n        }\\n        this._features.push(var_name);\\n        return true;\\n    },\\n    /** Function: removeFeature\\n     *\\n     * Parameters:\\n     *   (String) var_name - feature name (like jabber:iq:version)\\n     *\\n     * Returns:\\n     *   boolean\\n     */\\n    removeFeature: function(var_name)\\n    {\\n        for (var i=0; i<this._features.length; i++)\\n        {\\n             if (this._features[i] === var_name){\\n                 this._features.splice(i,1);\\n                 return true;\\n             }\\n        }\\n        return false;\\n    },\\n    /** Function: addItem\\n     *\\n     * Parameters:\\n     *   (String) jid\\n     *   (String) name\\n     *   (String) node\\n     *   (Function) call_back\\n     *\\n     * Returns:\\n     *   boolean\\n     */\\n    addItem: function(jid, name, node, call_back)\\n    {\\n        if (node && !call_back)\\n            return false;\\n        this._items.push({jid: jid, name: name, node: node, call_back: call_back});\\n        return true;\\n    },\\n    /** Function: info\\n     * Info query\\n     *\\n     * Parameters:\\n     *   (Function) call_back\\n     *   (String) jid\\n     *   (String) node\\n     */\\n    info: function(jid, node, success, error, timeout)\\n    {\\n        var attrs = {xmlns: Strophe.NS.DISCO_INFO};\\n        if (node)\\n            attrs.node = node;\\n\\n        var info = $iq({from:this._connection.jid,\\n                         to:jid, type:'get'}).c('query', attrs);\\n        this._connection.sendIQ(info, success, error, timeout);\\n    },\\n    /** Function: items\\n     * Items query\\n     *\\n     * Parameters:\\n     *   (Function) call_back\\n     *   (String) jid\\n     *   (String) node\\n     */\\n    items: function(jid, node, success, error, timeout)\\n    {\\n        var attrs = {xmlns: Strophe.NS.DISCO_ITEMS};\\n        if (node)\\n            attrs.node = node;\\n\\n        var items = $iq({from:this._connection.jid,\\n                         to:jid, type:'get'}).c('query', attrs);\\n        this._connection.sendIQ(items, success, error, timeout);\\n    },\\n\\n    /** PrivateFunction: _buildIQResult\\n     */\\n    _buildIQResult: function(stanza, query_attrs)\\n    {\\n        var id   =  stanza.getAttribute('id');\\n        var from = stanza.getAttribute('from');\\n        var iqresult = $iq({type: 'result', id: id});\\n\\n        if (from !== null) {\\n            iqresult.attrs({to: from});\\n        }\\n\\n        return iqresult.c('query', query_attrs);\\n    },\\n\\n    /** PrivateFunction: _onDiscoInfo\\n     * Called when receive info request\\n     */\\n    _onDiscoInfo: function(stanza)\\n    {\\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\\n        var attrs = {xmlns: Strophe.NS.DISCO_INFO};\\n        var i;\\n        if (node)\\n        {\\n            attrs.node = node;\\n        }\\n        var iqresult = this._buildIQResult(stanza, attrs);\\n        for (i=0; i<this._identities.length; i++)\\n        {\\n            attrs = {category: this._identities[i].category,\\n                         type    : this._identities[i].type};\\n            if (this._identities[i].name)\\n                attrs.name = this._identities[i].name;\\n            if (this._identities[i].lang)\\n                attrs['xml:lang'] = this._identities[i].lang;\\n            iqresult.c('identity', attrs).up();\\n        }\\n        for (i=0; i<this._features.length; i++)\\n        {\\n            iqresult.c('feature', {'var':this._features[i]}).up();\\n        }\\n        this._connection.send(iqresult.tree());\\n        return true;\\n    },\\n    /** PrivateFunction: _onDiscoItems\\n     * Called when receive items request\\n     */\\n    _onDiscoItems: function(stanza)\\n    {\\n        var query_attrs = {xmlns: Strophe.NS.DISCO_ITEMS};\\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\\n        var items, i;\\n        if (node)\\n        {\\n            query_attrs.node = node;\\n            items = [];\\n            for (i = 0; i < this._items.length; i++)\\n            {\\n                if (this._items[i].node == node)\\n                {\\n                    items = this._items[i].call_back(stanza);\\n                    break;\\n                }\\n            }\\n        }\\n        else\\n        {\\n            items = this._items;\\n        }\\n        var iqresult = this._buildIQResult(stanza, query_attrs);\\n        for (i = 0; i < items.length; i++)\\n        {\\n            var attrs = {jid:  items[i].jid};\\n            if (items[i].name)\\n                attrs.name = items[i].name;\\n            if (items[i].node)\\n                attrs.node = items[i].node;\\n            iqresult.c('item', attrs).up();\\n        }\\n        this._connection.send(iqresult.tree());\\n        return true;\\n    }\\n});\\n\",\"var scope = (typeof global !== \\\"undefined\\\" && global) ||\\n            (typeof self !== \\\"undefined\\\" && self) ||\\n            window;\\nvar apply = Function.prototype.apply;\\n\\n// DOM APIs, for completeness\\n\\nexports.setTimeout = function() {\\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\\n};\\nexports.setInterval = function() {\\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\\n};\\nexports.clearTimeout =\\nexports.clearInterval = function(timeout) {\\n  if (timeout) {\\n    timeout.close();\\n  }\\n};\\n\\nfunction Timeout(id, clearFn) {\\n  this._id = id;\\n  this._clearFn = clearFn;\\n}\\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\\nTimeout.prototype.close = function() {\\n  this._clearFn.call(scope, this._id);\\n};\\n\\n// Does not start the time, just sets up the members needed.\\nexports.enroll = function(item, msecs) {\\n  clearTimeout(item._idleTimeoutId);\\n  item._idleTimeout = msecs;\\n};\\n\\nexports.unenroll = function(item) {\\n  clearTimeout(item._idleTimeoutId);\\n  item._idleTimeout = -1;\\n};\\n\\nexports._unrefActive = exports.active = function(item) {\\n  clearTimeout(item._idleTimeoutId);\\n\\n  var msecs = item._idleTimeout;\\n  if (msecs >= 0) {\\n    item._idleTimeoutId = setTimeout(function onTimeout() {\\n      if (item._onTimeout)\\n        item._onTimeout();\\n    }, msecs);\\n  }\\n};\\n\\n// setimmediate attaches itself to the global object\\nrequire(\\\"setimmediate\\\");\\n// On some exotic environments, it's not clear which object `setimmediate` was\\n// able to install onto.  Search each possibility in the same order as the\\n// `setimmediate` library.\\nexports.setImmediate = (typeof self !== \\\"undefined\\\" && self.setImmediate) ||\\n                       (typeof global !== \\\"undefined\\\" && global.setImmediate) ||\\n                       (this && this.setImmediate);\\nexports.clearImmediate = (typeof self !== \\\"undefined\\\" && self.clearImmediate) ||\\n                         (typeof global !== \\\"undefined\\\" && global.clearImmediate) ||\\n                         (this && this.clearImmediate);\\n\",\"(function (global, undefined) {\\n    \\\"use strict\\\";\\n\\n    if (global.setImmediate) {\\n        return;\\n    }\\n\\n    var nextHandle = 1; // Spec says greater than zero\\n    var tasksByHandle = {};\\n    var currentlyRunningATask = false;\\n    var doc = global.document;\\n    var registerImmediate;\\n\\n    function setImmediate(callback) {\\n      // Callback can either be a function or a string\\n      if (typeof callback !== \\\"function\\\") {\\n        callback = new Function(\\\"\\\" + callback);\\n      }\\n      // Copy function arguments\\n      var args = new Array(arguments.length - 1);\\n      for (var i = 0; i < args.length; i++) {\\n          args[i] = arguments[i + 1];\\n      }\\n      // Store and register the task\\n      var task = { callback: callback, args: args };\\n      tasksByHandle[nextHandle] = task;\\n      registerImmediate(nextHandle);\\n      return nextHandle++;\\n    }\\n\\n    function clearImmediate(handle) {\\n        delete tasksByHandle[handle];\\n    }\\n\\n    function run(task) {\\n        var callback = task.callback;\\n        var args = task.args;\\n        switch (args.length) {\\n        case 0:\\n            callback();\\n            break;\\n        case 1:\\n            callback(args[0]);\\n            break;\\n        case 2:\\n            callback(args[0], args[1]);\\n            break;\\n        case 3:\\n            callback(args[0], args[1], args[2]);\\n            break;\\n        default:\\n            callback.apply(undefined, args);\\n            break;\\n        }\\n    }\\n\\n    function runIfPresent(handle) {\\n        // From the spec: \\\"Wait until any invocations of this algorithm started before this one have completed.\\\"\\n        // So if we're currently running a task, we'll need to delay this invocation.\\n        if (currentlyRunningATask) {\\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\\n            // \\\"too much recursion\\\" error.\\n            setTimeout(runIfPresent, 0, handle);\\n        } else {\\n            var task = tasksByHandle[handle];\\n            if (task) {\\n                currentlyRunningATask = true;\\n                try {\\n                    run(task);\\n                } finally {\\n                    clearImmediate(handle);\\n                    currentlyRunningATask = false;\\n                }\\n            }\\n        }\\n    }\\n\\n    function installNextTickImplementation() {\\n        registerImmediate = function(handle) {\\n            process.nextTick(function () { runIfPresent(handle); });\\n        };\\n    }\\n\\n    function canUsePostMessage() {\\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\\n        if (global.postMessage && !global.importScripts) {\\n            var postMessageIsAsynchronous = true;\\n            var oldOnMessage = global.onmessage;\\n            global.onmessage = function() {\\n                postMessageIsAsynchronous = false;\\n            };\\n            global.postMessage(\\\"\\\", \\\"*\\\");\\n            global.onmessage = oldOnMessage;\\n            return postMessageIsAsynchronous;\\n        }\\n    }\\n\\n    function installPostMessageImplementation() {\\n        // Installs an event handler on `global` for the `message` event: see\\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\\n\\n        var messagePrefix = \\\"setImmediate$\\\" + Math.random() + \\\"$\\\";\\n        var onGlobalMessage = function(event) {\\n            if (event.source === global &&\\n                typeof event.data === \\\"string\\\" &&\\n                event.data.indexOf(messagePrefix) === 0) {\\n                runIfPresent(+event.data.slice(messagePrefix.length));\\n            }\\n        };\\n\\n        if (global.addEventListener) {\\n            global.addEventListener(\\\"message\\\", onGlobalMessage, false);\\n        } else {\\n            global.attachEvent(\\\"onmessage\\\", onGlobalMessage);\\n        }\\n\\n        registerImmediate = function(handle) {\\n            global.postMessage(messagePrefix + handle, \\\"*\\\");\\n        };\\n    }\\n\\n    function installMessageChannelImplementation() {\\n        var channel = new MessageChannel();\\n        channel.port1.onmessage = function(event) {\\n            var handle = event.data;\\n            runIfPresent(handle);\\n        };\\n\\n        registerImmediate = function(handle) {\\n            channel.port2.postMessage(handle);\\n        };\\n    }\\n\\n    function installReadyStateChangeImplementation() {\\n        var html = doc.documentElement;\\n        registerImmediate = function(handle) {\\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\\n            var script = doc.createElement(\\\"script\\\");\\n            script.onreadystatechange = function () {\\n                runIfPresent(handle);\\n                script.onreadystatechange = null;\\n                html.removeChild(script);\\n                script = null;\\n            };\\n            html.appendChild(script);\\n        };\\n    }\\n\\n    function installSetTimeoutImplementation() {\\n        registerImmediate = function(handle) {\\n            setTimeout(runIfPresent, 0, handle);\\n        };\\n    }\\n\\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\\n\\n    // Don't get fooled by e.g. browserify environments.\\n    if ({}.toString.call(global.process) === \\\"[object process]\\\") {\\n        // For Node.js before 0.9\\n        installNextTickImplementation();\\n\\n    } else if (canUsePostMessage()) {\\n        // For non-IE10 modern browsers\\n        installPostMessageImplementation();\\n\\n    } else if (global.MessageChannel) {\\n        // For web workers, where supported\\n        installMessageChannelImplementation();\\n\\n    } else if (doc && \\\"onreadystatechange\\\" in doc.createElement(\\\"script\\\")) {\\n        // For IE 6–8\\n        installReadyStateChangeImplementation();\\n\\n    } else {\\n        // For older browsers\\n        installSetTimeoutImplementation();\\n    }\\n\\n    attachTo.setImmediate = setImmediate;\\n    attachTo.clearImmediate = clearImmediate;\\n}(typeof self === \\\"undefined\\\" ? typeof global === \\\"undefined\\\" ? this : global : self));\\n\",\"/*\\r\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n /* eslint-env node */\\r\\n\\r\\n'use strict';\\r\\n\\r\\nvar adapterFactory = require('./adapter_factory.js');\\r\\nmodule.exports = adapterFactory({window: global.window});\\r\\n\",\"/*\\r\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n /* eslint-env node */\\r\\n\\r\\n'use strict';\\r\\n\\r\\nvar utils = require('./utils');\\r\\n// Shimming starts here.\\r\\nmodule.exports = function(dependencies, opts) {\\r\\n  var window = dependencies && dependencies.window;\\r\\n\\r\\n  var options = {\\r\\n    shimChrome: true,\\r\\n    shimFirefox: true,\\r\\n    shimEdge: true,\\r\\n    shimSafari: true,\\r\\n  };\\r\\n\\r\\n  for (var key in opts) {\\r\\n    if (hasOwnProperty.call(opts, key)) {\\r\\n      options[key] = opts[key];\\r\\n    }\\r\\n  }\\r\\n\\r\\n  // Utils.\\r\\n  var logging = utils.log;\\r\\n  var browserDetails = utils.detectBrowser(window);\\r\\n\\r\\n  // Export to the adapter global object visible in the browser.\\r\\n  var adapter = {\\r\\n    browserDetails: browserDetails,\\r\\n    extractVersion: utils.extractVersion,\\r\\n    disableLog: utils.disableLog,\\r\\n    disableWarnings: utils.disableWarnings\\r\\n  };\\r\\n\\r\\n  // Uncomment the line below if you want logging to occur, including logging\\r\\n  // for the switch statement below. Can also be turned on in the browser via\\r\\n  // adapter.disableLog(false), but then logging from the switch statement below\\r\\n  // will not appear.\\r\\n  // require('./utils').disableLog(false);\\r\\n\\r\\n  // Browser shims.\\r\\n  var chromeShim = require('./chrome/chrome_shim') || null;\\r\\n  var edgeShim = require('./edge/edge_shim') || null;\\r\\n  var firefoxShim = require('./firefox/firefox_shim') || null;\\r\\n  var safariShim = require('./safari/safari_shim') || null;\\r\\n  var commonShim = require('./common_shim') || null;\\r\\n\\r\\n  // Shim browser if found.\\r\\n  switch (browserDetails.browser) {\\r\\n    case 'chrome':\\r\\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\\r\\n          !options.shimChrome) {\\r\\n        logging('Chrome shim is not included in this adapter release.');\\r\\n        return adapter;\\r\\n      }\\r\\n      logging('adapter.js shimming chrome.');\\r\\n      // Export to the adapter global object visible in the browser.\\r\\n      adapter.browserShim = chromeShim;\\r\\n      commonShim.shimCreateObjectURL(window);\\r\\n\\r\\n      chromeShim.shimGetUserMedia(window);\\r\\n      chromeShim.shimMediaStream(window);\\r\\n      chromeShim.shimSourceObject(window);\\r\\n      chromeShim.shimPeerConnection(window);\\r\\n      chromeShim.shimOnTrack(window);\\r\\n      chromeShim.shimAddTrackRemoveTrack(window);\\r\\n      chromeShim.shimGetSendersWithDtmf(window);\\r\\n\\r\\n      commonShim.shimRTCIceCandidate(window);\\r\\n      break;\\r\\n    case 'firefox':\\r\\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\\r\\n          !options.shimFirefox) {\\r\\n        logging('Firefox shim is not included in this adapter release.');\\r\\n        return adapter;\\r\\n      }\\r\\n      logging('adapter.js shimming firefox.');\\r\\n      // Export to the adapter global object visible in the browser.\\r\\n      adapter.browserShim = firefoxShim;\\r\\n      commonShim.shimCreateObjectURL(window);\\r\\n\\r\\n      firefoxShim.shimGetUserMedia(window);\\r\\n      firefoxShim.shimSourceObject(window);\\r\\n      firefoxShim.shimPeerConnection(window);\\r\\n      firefoxShim.shimOnTrack(window);\\r\\n\\r\\n      commonShim.shimRTCIceCandidate(window);\\r\\n      break;\\r\\n    case 'edge':\\r\\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\\r\\n        logging('MS edge shim is not included in this adapter release.');\\r\\n        return adapter;\\r\\n      }\\r\\n      logging('adapter.js shimming edge.');\\r\\n      // Export to the adapter global object visible in the browser.\\r\\n      adapter.browserShim = edgeShim;\\r\\n      commonShim.shimCreateObjectURL(window);\\r\\n\\r\\n      edgeShim.shimGetUserMedia(window);\\r\\n      edgeShim.shimPeerConnection(window);\\r\\n      edgeShim.shimReplaceTrack(window);\\r\\n\\r\\n      // the edge shim implements the full RTCIceCandidate object.\\r\\n      break;\\r\\n    case 'safari':\\r\\n      if (!safariShim || !options.shimSafari) {\\r\\n        logging('Safari shim is not included in this adapter release.');\\r\\n        return adapter;\\r\\n      }\\r\\n      logging('adapter.js shimming safari.');\\r\\n      // Export to the adapter global object visible in the browser.\\r\\n      adapter.browserShim = safariShim;\\r\\n      commonShim.shimCreateObjectURL(window);\\r\\n\\r\\n      safariShim.shimRTCIceServerUrls(window);\\r\\n      safariShim.shimCallbacksAPI(window);\\r\\n      safariShim.shimLocalStreamsAPI(window);\\r\\n      safariShim.shimRemoteStreamsAPI(window);\\r\\n      safariShim.shimTrackEventTransceiver(window);\\r\\n      safariShim.shimGetUserMedia(window);\\r\\n      safariShim.shimCreateOfferLegacy(window);\\r\\n\\r\\n      commonShim.shimRTCIceCandidate(window);\\r\\n      break;\\r\\n    default:\\r\\n      logging('Unsupported browser!');\\r\\n      break;\\r\\n  }\\r\\n\\r\\n  return adapter;\\r\\n};\\r\\n\",\"\\r\\n/*\\r\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n /* eslint-env node */\\r\\n'use strict';\\r\\nvar utils = require('../utils.js');\\r\\nvar logging = utils.log;\\r\\n\\r\\nvar chromeShim = {\\r\\n  shimMediaStream: function(window) {\\r\\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\\r\\n  },\\r\\n\\r\\n  shimOnTrack: function(window) {\\r\\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\\r\\n        window.RTCPeerConnection.prototype)) {\\r\\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\\r\\n        get: function() {\\r\\n          return this._ontrack;\\r\\n        },\\r\\n        set: function(f) {\\r\\n          if (this._ontrack) {\\r\\n            this.removeEventListener('track', this._ontrack);\\r\\n          }\\r\\n          this.addEventListener('track', this._ontrack = f);\\r\\n        }\\r\\n      });\\r\\n      var origSetRemoteDescription =\\r\\n          window.RTCPeerConnection.prototype.setRemoteDescription;\\r\\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\\r\\n        var pc = this;\\r\\n        if (!pc._ontrackpoly) {\\r\\n          pc._ontrackpoly = function(e) {\\r\\n            // onaddstream does not fire when a track is added to an existing\\r\\n            // stream. But stream.onaddtrack is implemented so we use that.\\r\\n            e.stream.addEventListener('addtrack', function(te) {\\r\\n              var receiver;\\r\\n              if (window.RTCPeerConnection.prototype.getReceivers) {\\r\\n                receiver = pc.getReceivers().find(function(r) {\\r\\n                  return r.track && r.track.id === te.track.id;\\r\\n                });\\r\\n              } else {\\r\\n                receiver = {track: te.track};\\r\\n              }\\r\\n\\r\\n              var event = new Event('track');\\r\\n              event.track = te.track;\\r\\n              event.receiver = receiver;\\r\\n              event.transceiver = {receiver: receiver};\\r\\n              event.streams = [e.stream];\\r\\n              pc.dispatchEvent(event);\\r\\n            });\\r\\n            e.stream.getTracks().forEach(function(track) {\\r\\n              var receiver;\\r\\n              if (window.RTCPeerConnection.prototype.getReceivers) {\\r\\n                receiver = pc.getReceivers().find(function(r) {\\r\\n                  return r.track && r.track.id === track.id;\\r\\n                });\\r\\n              } else {\\r\\n                receiver = {track: track};\\r\\n              }\\r\\n              var event = new Event('track');\\r\\n              event.track = track;\\r\\n              event.receiver = receiver;\\r\\n              event.transceiver = {receiver: receiver};\\r\\n              event.streams = [e.stream];\\r\\n              pc.dispatchEvent(event);\\r\\n            });\\r\\n          };\\r\\n          pc.addEventListener('addstream', pc._ontrackpoly);\\r\\n        }\\r\\n        return origSetRemoteDescription.apply(pc, arguments);\\r\\n      };\\r\\n    }\\r\\n  },\\r\\n\\r\\n  shimGetSendersWithDtmf: function(window) {\\r\\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\\r\\n    if (typeof window === 'object' && window.RTCPeerConnection &&\\r\\n        !('getSenders' in window.RTCPeerConnection.prototype) &&\\r\\n        'createDTMFSender' in window.RTCPeerConnection.prototype) {\\r\\n      var shimSenderWithDtmf = function(pc, track) {\\r\\n        return {\\r\\n          track: track,\\r\\n          get dtmf() {\\r\\n            if (this._dtmf === undefined) {\\r\\n              if (track.kind === 'audio') {\\r\\n                this._dtmf = pc.createDTMFSender(track);\\r\\n              } else {\\r\\n                this._dtmf = null;\\r\\n              }\\r\\n            }\\r\\n            return this._dtmf;\\r\\n          },\\r\\n          _pc: pc\\r\\n        };\\r\\n      };\\r\\n\\r\\n      // augment addTrack when getSenders is not available.\\r\\n      if (!window.RTCPeerConnection.prototype.getSenders) {\\r\\n        window.RTCPeerConnection.prototype.getSenders = function() {\\r\\n          this._senders = this._senders || [];\\r\\n          return this._senders.slice(); // return a copy of the internal state.\\r\\n        };\\r\\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\\r\\n        window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\\r\\n          var pc = this;\\r\\n          var sender = origAddTrack.apply(pc, arguments);\\r\\n          if (!sender) {\\r\\n            sender = shimSenderWithDtmf(pc, track);\\r\\n            pc._senders.push(sender);\\r\\n          }\\r\\n          return sender;\\r\\n        };\\r\\n\\r\\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\\r\\n        window.RTCPeerConnection.prototype.removeTrack = function(sender) {\\r\\n          var pc = this;\\r\\n          origRemoveTrack.apply(pc, arguments);\\r\\n          var idx = pc._senders.indexOf(sender);\\r\\n          if (idx !== -1) {\\r\\n            pc._senders.splice(idx, 1);\\r\\n          }\\r\\n        };\\r\\n      }\\r\\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\\r\\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\\r\\n        var pc = this;\\r\\n        pc._senders = pc._senders || [];\\r\\n        origAddStream.apply(pc, [stream]);\\r\\n        stream.getTracks().forEach(function(track) {\\r\\n          pc._senders.push(shimSenderWithDtmf(pc, track));\\r\\n        });\\r\\n      };\\r\\n\\r\\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\\r\\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\\r\\n        var pc = this;\\r\\n        pc._senders = pc._senders || [];\\r\\n        origRemoveStream.apply(pc, [stream]);\\r\\n\\r\\n        stream.getTracks().forEach(function(track) {\\r\\n          var sender = pc._senders.find(function(s) {\\r\\n            return s.track === track;\\r\\n          });\\r\\n          if (sender) {\\r\\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\\r\\n          }\\r\\n        });\\r\\n      };\\r\\n    } else if (typeof window === 'object' && window.RTCPeerConnection &&\\r\\n               'getSenders' in window.RTCPeerConnection.prototype &&\\r\\n               'createDTMFSender' in window.RTCPeerConnection.prototype &&\\r\\n               window.RTCRtpSender &&\\r\\n               !('dtmf' in window.RTCRtpSender.prototype)) {\\r\\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\\r\\n      window.RTCPeerConnection.prototype.getSenders = function() {\\r\\n        var pc = this;\\r\\n        var senders = origGetSenders.apply(pc, []);\\r\\n        senders.forEach(function(sender) {\\r\\n          sender._pc = pc;\\r\\n        });\\r\\n        return senders;\\r\\n      };\\r\\n\\r\\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\\r\\n        get: function() {\\r\\n          if (this._dtmf === undefined) {\\r\\n            if (this.track.kind === 'audio') {\\r\\n              this._dtmf = this._pc.createDTMFSender(this.track);\\r\\n            } else {\\r\\n              this._dtmf = null;\\r\\n            }\\r\\n          }\\r\\n          return this._dtmf;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n  },\\r\\n\\r\\n  shimSourceObject: function(window) {\\r\\n    var URL = window && window.URL;\\r\\n\\r\\n    if (typeof window === 'object') {\\r\\n      if (window.HTMLMediaElement &&\\r\\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\\r\\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\\r\\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\\r\\n          get: function() {\\r\\n            return this._srcObject;\\r\\n          },\\r\\n          set: function(stream) {\\r\\n            var self = this;\\r\\n            // Use _srcObject as a private property for this shim\\r\\n            this._srcObject = stream;\\r\\n            if (this.src) {\\r\\n              URL.revokeObjectURL(this.src);\\r\\n            }\\r\\n\\r\\n            if (!stream) {\\r\\n              this.src = '';\\r\\n              return undefined;\\r\\n            }\\r\\n            this.src = URL.createObjectURL(stream);\\r\\n            // We need to recreate the blob url when a track is added or\\r\\n            // removed. Doing it manually since we want to avoid a recursion.\\r\\n            stream.addEventListener('addtrack', function() {\\r\\n              if (self.src) {\\r\\n                URL.revokeObjectURL(self.src);\\r\\n              }\\r\\n              self.src = URL.createObjectURL(stream);\\r\\n            });\\r\\n            stream.addEventListener('removetrack', function() {\\r\\n              if (self.src) {\\r\\n                URL.revokeObjectURL(self.src);\\r\\n              }\\r\\n              self.src = URL.createObjectURL(stream);\\r\\n            });\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  },\\r\\n\\r\\n  shimAddTrackRemoveTrack: function(window) {\\r\\n    var browserDetails = utils.detectBrowser(window);\\r\\n    // shim addTrack and removeTrack.\\r\\n    if (window.RTCPeerConnection.prototype.addTrack &&\\r\\n        browserDetails.version >= 63) {\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    // also shim pc.getLocalStreams when addTrack is shimmed\\r\\n    // to return the original streams.\\r\\n    var origGetLocalStreams = window.RTCPeerConnection.prototype\\r\\n        .getLocalStreams;\\r\\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\\r\\n      var self = this;\\r\\n      var nativeStreams = origGetLocalStreams.apply(this);\\r\\n      self._reverseStreams = self._reverseStreams || {};\\r\\n      return nativeStreams.map(function(stream) {\\r\\n        return self._reverseStreams[stream.id];\\r\\n      });\\r\\n    };\\r\\n\\r\\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\\r\\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\\r\\n      var pc = this;\\r\\n      pc._streams = pc._streams || {};\\r\\n      pc._reverseStreams = pc._reverseStreams || {};\\r\\n\\r\\n      stream.getTracks().forEach(function(track) {\\r\\n        var alreadyExists = pc.getSenders().find(function(s) {\\r\\n          return s.track === track;\\r\\n        });\\r\\n        if (alreadyExists) {\\r\\n          throw new DOMException('Track already exists.',\\r\\n              'InvalidAccessError');\\r\\n        }\\r\\n      });\\r\\n      // Add identity mapping for consistency with addTrack.\\r\\n      // Unless this is being used with a stream from addTrack.\\r\\n      if (!pc._reverseStreams[stream.id]) {\\r\\n        var newStream = new window.MediaStream(stream.getTracks());\\r\\n        pc._streams[stream.id] = newStream;\\r\\n        pc._reverseStreams[newStream.id] = stream;\\r\\n        stream = newStream;\\r\\n      }\\r\\n      origAddStream.apply(pc, [stream]);\\r\\n    };\\r\\n\\r\\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\\r\\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\\r\\n      var pc = this;\\r\\n      pc._streams = pc._streams || {};\\r\\n      pc._reverseStreams = pc._reverseStreams || {};\\r\\n\\r\\n      origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\\r\\n      delete pc._reverseStreams[(pc._streams[stream.id] ?\\r\\n          pc._streams[stream.id].id : stream.id)];\\r\\n      delete pc._streams[stream.id];\\r\\n    };\\r\\n\\r\\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\\r\\n      var pc = this;\\r\\n      if (pc.signalingState === 'closed') {\\r\\n        throw new DOMException(\\r\\n          'The RTCPeerConnection\\\\'s signalingState is \\\\'closed\\\\'.',\\r\\n          'InvalidStateError');\\r\\n      }\\r\\n      var streams = [].slice.call(arguments, 1);\\r\\n      if (streams.length !== 1 ||\\r\\n          !streams[0].getTracks().find(function(t) {\\r\\n            return t === track;\\r\\n          })) {\\r\\n        // this is not fully correct but all we can manage without\\r\\n        // [[associated MediaStreams]] internal slot.\\r\\n        throw new DOMException(\\r\\n          'The adapter.js addTrack polyfill only supports a single ' +\\r\\n          ' stream which is associated with the specified track.',\\r\\n          'NotSupportedError');\\r\\n      }\\r\\n\\r\\n      var alreadyExists = pc.getSenders().find(function(s) {\\r\\n        return s.track === track;\\r\\n      });\\r\\n      if (alreadyExists) {\\r\\n        throw new DOMException('Track already exists.',\\r\\n            'InvalidAccessError');\\r\\n      }\\r\\n\\r\\n      pc._streams = pc._streams || {};\\r\\n      pc._reverseStreams = pc._reverseStreams || {};\\r\\n      var oldStream = pc._streams[stream.id];\\r\\n      if (oldStream) {\\r\\n        // this is using odd Chrome behaviour, use with caution:\\r\\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\\r\\n        // Note: we rely on the high-level addTrack/dtmf shim to\\r\\n        // create the sender with a dtmf sender.\\r\\n        oldStream.addTrack(track);\\r\\n\\r\\n        // Trigger ONN async.\\r\\n        Promise.resolve().then(function() {\\r\\n          pc.dispatchEvent(new Event('negotiationneeded'));\\r\\n        });\\r\\n      } else {\\r\\n        var newStream = new window.MediaStream([track]);\\r\\n        pc._streams[stream.id] = newStream;\\r\\n        pc._reverseStreams[newStream.id] = stream;\\r\\n        pc.addStream(newStream);\\r\\n      }\\r\\n      return pc.getSenders().find(function(s) {\\r\\n        return s.track === track;\\r\\n      });\\r\\n    };\\r\\n\\r\\n    // replace the internal stream id with the external one and\\r\\n    // vice versa.\\r\\n    function replaceInternalStreamId(pc, description) {\\r\\n      var sdp = description.sdp;\\r\\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\\r\\n        var externalStream = pc._reverseStreams[internalId];\\r\\n        var internalStream = pc._streams[externalStream.id];\\r\\n        sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\\r\\n            externalStream.id);\\r\\n      });\\r\\n      return new RTCSessionDescription({\\r\\n        type: description.type,\\r\\n        sdp: sdp\\r\\n      });\\r\\n    }\\r\\n    function replaceExternalStreamId(pc, description) {\\r\\n      var sdp = description.sdp;\\r\\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\\r\\n        var externalStream = pc._reverseStreams[internalId];\\r\\n        var internalStream = pc._streams[externalStream.id];\\r\\n        sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\\r\\n            internalStream.id);\\r\\n      });\\r\\n      return new RTCSessionDescription({\\r\\n        type: description.type,\\r\\n        sdp: sdp\\r\\n      });\\r\\n    }\\r\\n    ['createOffer', 'createAnswer'].forEach(function(method) {\\r\\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\\r\\n      window.RTCPeerConnection.prototype[method] = function() {\\r\\n        var pc = this;\\r\\n        var args = arguments;\\r\\n        var isLegacyCall = arguments.length &&\\r\\n            typeof arguments[0] === 'function';\\r\\n        if (isLegacyCall) {\\r\\n          return nativeMethod.apply(pc, [\\r\\n            function(description) {\\r\\n              var desc = replaceInternalStreamId(pc, description);\\r\\n              args[0].apply(null, [desc]);\\r\\n            },\\r\\n            function(err) {\\r\\n              if (args[1]) {\\r\\n                args[1].apply(null, err);\\r\\n              }\\r\\n            }, arguments[2]\\r\\n          ]);\\r\\n        }\\r\\n        return nativeMethod.apply(pc, arguments)\\r\\n        .then(function(description) {\\r\\n          return replaceInternalStreamId(pc, description);\\r\\n        });\\r\\n      };\\r\\n    });\\r\\n\\r\\n    var origSetLocalDescription =\\r\\n        window.RTCPeerConnection.prototype.setLocalDescription;\\r\\n    window.RTCPeerConnection.prototype.setLocalDescription = function() {\\r\\n      var pc = this;\\r\\n      if (!arguments.length || !arguments[0].type) {\\r\\n        return origSetLocalDescription.apply(pc, arguments);\\r\\n      }\\r\\n      arguments[0] = replaceExternalStreamId(pc, arguments[0]);\\r\\n      return origSetLocalDescription.apply(pc, arguments);\\r\\n    };\\r\\n\\r\\n    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\\r\\n\\r\\n    var origLocalDescription = Object.getOwnPropertyDescriptor(\\r\\n        window.RTCPeerConnection.prototype, 'localDescription');\\r\\n    Object.defineProperty(window.RTCPeerConnection.prototype,\\r\\n        'localDescription', {\\r\\n          get: function() {\\r\\n            var pc = this;\\r\\n            var description = origLocalDescription.get.apply(this);\\r\\n            if (description.type === '') {\\r\\n              return description;\\r\\n            }\\r\\n            return replaceInternalStreamId(pc, description);\\r\\n          }\\r\\n        });\\r\\n\\r\\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\\r\\n      var pc = this;\\r\\n      if (pc.signalingState === 'closed') {\\r\\n        throw new DOMException(\\r\\n          'The RTCPeerConnection\\\\'s signalingState is \\\\'closed\\\\'.',\\r\\n          'InvalidStateError');\\r\\n      }\\r\\n      // We can not yet check for sender instanceof RTCRtpSender\\r\\n      // since we shim RTPSender. So we check if sender._pc is set.\\r\\n      if (!sender._pc) {\\r\\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\\r\\n            'does not implement interface RTCRtpSender.', 'TypeError');\\r\\n      }\\r\\n      var isLocal = sender._pc === pc;\\r\\n      if (!isLocal) {\\r\\n        throw new DOMException('Sender was not created by this connection.',\\r\\n            'InvalidAccessError');\\r\\n      }\\r\\n\\r\\n      // Search for the native stream the senders track belongs to.\\r\\n      pc._streams = pc._streams || {};\\r\\n      var stream;\\r\\n      Object.keys(pc._streams).forEach(function(streamid) {\\r\\n        var hasTrack = pc._streams[streamid].getTracks().find(function(track) {\\r\\n          return sender.track === track;\\r\\n        });\\r\\n        if (hasTrack) {\\r\\n          stream = pc._streams[streamid];\\r\\n        }\\r\\n      });\\r\\n\\r\\n      if (stream) {\\r\\n        if (stream.getTracks().length === 1) {\\r\\n          // if this is the last track of the stream, remove the stream. This\\r\\n          // takes care of any shimmed _senders.\\r\\n          pc.removeStream(pc._reverseStreams[stream.id]);\\r\\n        } else {\\r\\n          // relying on the same odd chrome behaviour as above.\\r\\n          stream.removeTrack(sender.track);\\r\\n        }\\r\\n        pc.dispatchEvent(new Event('negotiationneeded'));\\r\\n      }\\r\\n    };\\r\\n  },\\r\\n\\r\\n  shimPeerConnection: function(window) {\\r\\n    var browserDetails = utils.detectBrowser(window);\\r\\n\\r\\n    // The RTCPeerConnection object.\\r\\n    if (!window.RTCPeerConnection) {\\r\\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\\r\\n        // Translate iceTransportPolicy to iceTransports,\\r\\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\\r\\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\\r\\n        logging('PeerConnection');\\r\\n        if (pcConfig && pcConfig.iceTransportPolicy) {\\r\\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\\r\\n        }\\r\\n\\r\\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\\r\\n      };\\r\\n      window.RTCPeerConnection.prototype =\\r\\n          window.webkitRTCPeerConnection.prototype;\\r\\n      // wrap static methods. Currently just generateCertificate.\\r\\n      if (window.webkitRTCPeerConnection.generateCertificate) {\\r\\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\\r\\n          get: function() {\\r\\n            return window.webkitRTCPeerConnection.generateCertificate;\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n    } else {\\r\\n      // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\\r\\n      var OrigPeerConnection = window.RTCPeerConnection;\\r\\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\\r\\n        if (pcConfig && pcConfig.iceServers) {\\r\\n          var newIceServers = [];\\r\\n          for (var i = 0; i < pcConfig.iceServers.length; i++) {\\r\\n            var server = pcConfig.iceServers[i];\\r\\n            if (!server.hasOwnProperty('urls') &&\\r\\n                server.hasOwnProperty('url')) {\\r\\n              utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\\r\\n              server = JSON.parse(JSON.stringify(server));\\r\\n              server.urls = server.url;\\r\\n              newIceServers.push(server);\\r\\n            } else {\\r\\n              newIceServers.push(pcConfig.iceServers[i]);\\r\\n            }\\r\\n          }\\r\\n          pcConfig.iceServers = newIceServers;\\r\\n        }\\r\\n        return new OrigPeerConnection(pcConfig, pcConstraints);\\r\\n      };\\r\\n      window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\\r\\n      // wrap static methods. Currently just generateCertificate.\\r\\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\\r\\n        get: function() {\\r\\n          return OrigPeerConnection.generateCertificate;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n\\r\\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\\r\\n    window.RTCPeerConnection.prototype.getStats = function(selector,\\r\\n        successCallback, errorCallback) {\\r\\n      var self = this;\\r\\n      var args = arguments;\\r\\n\\r\\n      // If selector is a function then we are in the old style stats so just\\r\\n      // pass back the original getStats format to avoid breaking old users.\\r\\n      if (arguments.length > 0 && typeof selector === 'function') {\\r\\n        return origGetStats.apply(this, arguments);\\r\\n      }\\r\\n\\r\\n      // When spec-style getStats is supported, return those when called with\\r\\n      // either no arguments or the selector argument is null.\\r\\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\\r\\n          typeof arguments[0] !== 'function')) {\\r\\n        return origGetStats.apply(this, []);\\r\\n      }\\r\\n\\r\\n      var fixChromeStats_ = function(response) {\\r\\n        var standardReport = {};\\r\\n        var reports = response.result();\\r\\n        reports.forEach(function(report) {\\r\\n          var standardStats = {\\r\\n            id: report.id,\\r\\n            timestamp: report.timestamp,\\r\\n            type: {\\r\\n              localcandidate: 'local-candidate',\\r\\n              remotecandidate: 'remote-candidate'\\r\\n            }[report.type] || report.type\\r\\n          };\\r\\n          report.names().forEach(function(name) {\\r\\n            standardStats[name] = report.stat(name);\\r\\n          });\\r\\n          standardReport[standardStats.id] = standardStats;\\r\\n        });\\r\\n\\r\\n        return standardReport;\\r\\n      };\\r\\n\\r\\n      // shim getStats with maplike support\\r\\n      var makeMapStats = function(stats) {\\r\\n        return new Map(Object.keys(stats).map(function(key) {\\r\\n          return [key, stats[key]];\\r\\n        }));\\r\\n      };\\r\\n\\r\\n      if (arguments.length >= 2) {\\r\\n        var successCallbackWrapper_ = function(response) {\\r\\n          args[1](makeMapStats(fixChromeStats_(response)));\\r\\n        };\\r\\n\\r\\n        return origGetStats.apply(this, [successCallbackWrapper_,\\r\\n          arguments[0]]);\\r\\n      }\\r\\n\\r\\n      // promise-support\\r\\n      return new Promise(function(resolve, reject) {\\r\\n        origGetStats.apply(self, [\\r\\n          function(response) {\\r\\n            resolve(makeMapStats(fixChromeStats_(response)));\\r\\n          }, reject]);\\r\\n      }).then(successCallback, errorCallback);\\r\\n    };\\r\\n\\r\\n    // add promise support -- natively available in Chrome 51\\r\\n    if (browserDetails.version < 51) {\\r\\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\\r\\n          .forEach(function(method) {\\r\\n            var nativeMethod = window.RTCPeerConnection.prototype[method];\\r\\n            window.RTCPeerConnection.prototype[method] = function() {\\r\\n              var args = arguments;\\r\\n              var self = this;\\r\\n              var promise = new Promise(function(resolve, reject) {\\r\\n                nativeMethod.apply(self, [args[0], resolve, reject]);\\r\\n              });\\r\\n              if (args.length < 2) {\\r\\n                return promise;\\r\\n              }\\r\\n              return promise.then(function() {\\r\\n                args[1].apply(null, []);\\r\\n              },\\r\\n              function(err) {\\r\\n                if (args.length >= 3) {\\r\\n                  args[2].apply(null, [err]);\\r\\n                }\\r\\n              });\\r\\n            };\\r\\n          });\\r\\n    }\\r\\n\\r\\n    // promise support for createOffer and createAnswer. Available (without\\r\\n    // bugs) since M52: crbug/619289\\r\\n    if (browserDetails.version < 52) {\\r\\n      ['createOffer', 'createAnswer'].forEach(function(method) {\\r\\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\\r\\n        window.RTCPeerConnection.prototype[method] = function() {\\r\\n          var self = this;\\r\\n          if (arguments.length < 1 || (arguments.length === 1 &&\\r\\n              typeof arguments[0] === 'object')) {\\r\\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\\r\\n            return new Promise(function(resolve, reject) {\\r\\n              nativeMethod.apply(self, [resolve, reject, opts]);\\r\\n            });\\r\\n          }\\r\\n          return nativeMethod.apply(this, arguments);\\r\\n        };\\r\\n      });\\r\\n    }\\r\\n\\r\\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\\r\\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\\r\\n        .forEach(function(method) {\\r\\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\\r\\n          window.RTCPeerConnection.prototype[method] = function() {\\r\\n            arguments[0] = new ((method === 'addIceCandidate') ?\\r\\n                window.RTCIceCandidate :\\r\\n                window.RTCSessionDescription)(arguments[0]);\\r\\n            return nativeMethod.apply(this, arguments);\\r\\n          };\\r\\n        });\\r\\n\\r\\n    // support for addIceCandidate(null or undefined)\\r\\n    var nativeAddIceCandidate =\\r\\n        window.RTCPeerConnection.prototype.addIceCandidate;\\r\\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\\r\\n      if (!arguments[0]) {\\r\\n        if (arguments[1]) {\\r\\n          arguments[1].apply(null);\\r\\n        }\\r\\n        return Promise.resolve();\\r\\n      }\\r\\n      return nativeAddIceCandidate.apply(this, arguments);\\r\\n    };\\r\\n  }\\r\\n};\\r\\n\\r\\n\\r\\n// Expose public methods.\\r\\nmodule.exports = {\\r\\n  shimMediaStream: chromeShim.shimMediaStream,\\r\\n  shimOnTrack: chromeShim.shimOnTrack,\\r\\n  shimAddTrackRemoveTrack: chromeShim.shimAddTrackRemoveTrack,\\r\\n  shimGetSendersWithDtmf: chromeShim.shimGetSendersWithDtmf,\\r\\n  shimSourceObject: chromeShim.shimSourceObject,\\r\\n  shimPeerConnection: chromeShim.shimPeerConnection,\\r\\n  shimGetUserMedia: require('./getusermedia')\\r\\n};\\r\\n\",\"/*\\r\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n /* eslint-env node */\\r\\n'use strict';\\r\\nvar utils = require('../utils.js');\\r\\nvar logging = utils.log;\\r\\n\\r\\n// Expose public methods.\\r\\nmodule.exports = function(window) {\\r\\n  var browserDetails = utils.detectBrowser(window);\\r\\n  var navigator = window && window.navigator;\\r\\n\\r\\n  var constraintsToChrome_ = function(c) {\\r\\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\\r\\n      return c;\\r\\n    }\\r\\n    var cc = {};\\r\\n    Object.keys(c).forEach(function(key) {\\r\\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\\r\\n        return;\\r\\n      }\\r\\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\\r\\n      if (r.exact !== undefined && typeof r.exact === 'number') {\\r\\n        r.min = r.max = r.exact;\\r\\n      }\\r\\n      var oldname_ = function(prefix, name) {\\r\\n        if (prefix) {\\r\\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\\r\\n        }\\r\\n        return (name === 'deviceId') ? 'sourceId' : name;\\r\\n      };\\r\\n      if (r.ideal !== undefined) {\\r\\n        cc.optional = cc.optional || [];\\r\\n        var oc = {};\\r\\n        if (typeof r.ideal === 'number') {\\r\\n          oc[oldname_('min', key)] = r.ideal;\\r\\n          cc.optional.push(oc);\\r\\n          oc = {};\\r\\n          oc[oldname_('max', key)] = r.ideal;\\r\\n          cc.optional.push(oc);\\r\\n        } else {\\r\\n          oc[oldname_('', key)] = r.ideal;\\r\\n          cc.optional.push(oc);\\r\\n        }\\r\\n      }\\r\\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\\r\\n        cc.mandatory = cc.mandatory || {};\\r\\n        cc.mandatory[oldname_('', key)] = r.exact;\\r\\n      } else {\\r\\n        ['min', 'max'].forEach(function(mix) {\\r\\n          if (r[mix] !== undefined) {\\r\\n            cc.mandatory = cc.mandatory || {};\\r\\n            cc.mandatory[oldname_(mix, key)] = r[mix];\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n    });\\r\\n    if (c.advanced) {\\r\\n      cc.optional = (cc.optional || []).concat(c.advanced);\\r\\n    }\\r\\n    return cc;\\r\\n  };\\r\\n\\r\\n  var shimConstraints_ = function(constraints, func) {\\r\\n    if (browserDetails.version >= 61) {\\r\\n      return func(constraints);\\r\\n    }\\r\\n    constraints = JSON.parse(JSON.stringify(constraints));\\r\\n    if (constraints && typeof constraints.audio === 'object') {\\r\\n      var remap = function(obj, a, b) {\\r\\n        if (a in obj && !(b in obj)) {\\r\\n          obj[b] = obj[a];\\r\\n          delete obj[a];\\r\\n        }\\r\\n      };\\r\\n      constraints = JSON.parse(JSON.stringify(constraints));\\r\\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\\r\\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\\r\\n      constraints.audio = constraintsToChrome_(constraints.audio);\\r\\n    }\\r\\n    if (constraints && typeof constraints.video === 'object') {\\r\\n      // Shim facingMode for mobile & surface pro.\\r\\n      var face = constraints.video.facingMode;\\r\\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\\r\\n      var getSupportedFacingModeLies = browserDetails.version < 66;\\r\\n\\r\\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\\r\\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\\r\\n          !(navigator.mediaDevices.getSupportedConstraints &&\\r\\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\\r\\n            !getSupportedFacingModeLies)) {\\r\\n        delete constraints.video.facingMode;\\r\\n        var matches;\\r\\n        if (face.exact === 'environment' || face.ideal === 'environment') {\\r\\n          matches = ['back', 'rear'];\\r\\n        } else if (face.exact === 'user' || face.ideal === 'user') {\\r\\n          matches = ['front'];\\r\\n        }\\r\\n        if (matches) {\\r\\n          // Look for matches in label, or use last cam for back (typical).\\r\\n          return navigator.mediaDevices.enumerateDevices()\\r\\n          .then(function(devices) {\\r\\n            devices = devices.filter(function(d) {\\r\\n              return d.kind === 'videoinput';\\r\\n            });\\r\\n            var dev = devices.find(function(d) {\\r\\n              return matches.some(function(match) {\\r\\n                return d.label.toLowerCase().indexOf(match) !== -1;\\r\\n              });\\r\\n            });\\r\\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\\r\\n              dev = devices[devices.length - 1]; // more likely the back cam\\r\\n            }\\r\\n            if (dev) {\\r\\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\\r\\n                                                        {ideal: dev.deviceId};\\r\\n            }\\r\\n            constraints.video = constraintsToChrome_(constraints.video);\\r\\n            logging('chrome: ' + JSON.stringify(constraints));\\r\\n            return func(constraints);\\r\\n          });\\r\\n        }\\r\\n      }\\r\\n      constraints.video = constraintsToChrome_(constraints.video);\\r\\n    }\\r\\n    logging('chrome: ' + JSON.stringify(constraints));\\r\\n    return func(constraints);\\r\\n  };\\r\\n\\r\\n  var shimError_ = function(e) {\\r\\n    return {\\r\\n      name: {\\r\\n        PermissionDeniedError: 'NotAllowedError',\\r\\n        InvalidStateError: 'NotReadableError',\\r\\n        DevicesNotFoundError: 'NotFoundError',\\r\\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\\r\\n        TrackStartError: 'NotReadableError',\\r\\n        MediaDeviceFailedDueToShutdown: 'NotReadableError',\\r\\n        MediaDeviceKillSwitchOn: 'NotReadableError'\\r\\n      }[e.name] || e.name,\\r\\n      message: e.message,\\r\\n      constraint: e.constraintName,\\r\\n      toString: function() {\\r\\n        return this.name + (this.message && ': ') + this.message;\\r\\n      }\\r\\n    };\\r\\n  };\\r\\n\\r\\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\\r\\n    shimConstraints_(constraints, function(c) {\\r\\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\\r\\n        if (onError) {\\r\\n          onError(shimError_(e));\\r\\n        }\\r\\n      });\\r\\n    });\\r\\n  };\\r\\n\\r\\n  navigator.getUserMedia = getUserMedia_;\\r\\n\\r\\n  // Returns the result of getUserMedia as a Promise.\\r\\n  var getUserMediaPromise_ = function(constraints) {\\r\\n    return new Promise(function(resolve, reject) {\\r\\n      navigator.getUserMedia(constraints, resolve, reject);\\r\\n    });\\r\\n  };\\r\\n\\r\\n  if (!navigator.mediaDevices) {\\r\\n    navigator.mediaDevices = {\\r\\n      getUserMedia: getUserMediaPromise_,\\r\\n      enumerateDevices: function() {\\r\\n        return new Promise(function(resolve) {\\r\\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\\r\\n          return window.MediaStreamTrack.getSources(function(devices) {\\r\\n            resolve(devices.map(function(device) {\\r\\n              return {label: device.label,\\r\\n                kind: kinds[device.kind],\\r\\n                deviceId: device.id,\\r\\n                groupId: ''};\\r\\n            }));\\r\\n          });\\r\\n        });\\r\\n      },\\r\\n      getSupportedConstraints: function() {\\r\\n        return {\\r\\n          deviceId: true, echoCancellation: true, facingMode: true,\\r\\n          frameRate: true, height: true, width: true\\r\\n        };\\r\\n      }\\r\\n    };\\r\\n  }\\r\\n\\r\\n  // A shim for getUserMedia method on the mediaDevices object.\\r\\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\\r\\n  if (!navigator.mediaDevices.getUserMedia) {\\r\\n    navigator.mediaDevices.getUserMedia = function(constraints) {\\r\\n      return getUserMediaPromise_(constraints);\\r\\n    };\\r\\n  } else {\\r\\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\\r\\n    // function which returns a Promise, it does not accept spec-style\\r\\n    // constraints.\\r\\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\\r\\n        bind(navigator.mediaDevices);\\r\\n    navigator.mediaDevices.getUserMedia = function(cs) {\\r\\n      return shimConstraints_(cs, function(c) {\\r\\n        return origGetUserMedia(c).then(function(stream) {\\r\\n          if (c.audio && !stream.getAudioTracks().length ||\\r\\n              c.video && !stream.getVideoTracks().length) {\\r\\n            stream.getTracks().forEach(function(track) {\\r\\n              track.stop();\\r\\n            });\\r\\n            throw new DOMException('', 'NotFoundError');\\r\\n          }\\r\\n          return stream;\\r\\n        }, function(e) {\\r\\n          return Promise.reject(shimError_(e));\\r\\n        });\\r\\n      });\\r\\n    };\\r\\n  }\\r\\n\\r\\n  // Dummy devicechange event methods.\\r\\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\\r\\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\\r\\n    navigator.mediaDevices.addEventListener = function() {\\r\\n      logging('Dummy mediaDevices.addEventListener called.');\\r\\n    };\\r\\n  }\\r\\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\\r\\n    navigator.mediaDevices.removeEventListener = function() {\\r\\n      logging('Dummy mediaDevices.removeEventListener called.');\\r\\n    };\\r\\n  }\\r\\n};\\r\\n\",\"/*\\r\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n /* eslint-env node */\\r\\n'use strict';\\r\\n\\r\\nvar utils = require('../utils');\\r\\nvar shimRTCPeerConnection = require('rtcpeerconnection-shim');\\r\\n\\r\\nmodule.exports = {\\r\\n  shimGetUserMedia: require('./getusermedia'),\\r\\n  shimPeerConnection: function(window) {\\r\\n    var browserDetails = utils.detectBrowser(window);\\r\\n\\r\\n    if (window.RTCIceGatherer) {\\r\\n      // ORTC defines an RTCIceCandidate object but no constructor.\\r\\n      // Not implemented in Edge.\\r\\n      if (!window.RTCIceCandidate) {\\r\\n        window.RTCIceCandidate = function(args) {\\r\\n          return args;\\r\\n        };\\r\\n      }\\r\\n      // ORTC does not have a session description object but\\r\\n      // other browsers (i.e. Chrome) that will support both PC and ORTC\\r\\n      // in the future might have this defined already.\\r\\n      if (!window.RTCSessionDescription) {\\r\\n        window.RTCSessionDescription = function(args) {\\r\\n          return args;\\r\\n        };\\r\\n      }\\r\\n      // this adds an additional event listener to MediaStrackTrack that signals\\r\\n      // when a tracks enabled property was changed. Workaround for a bug in\\r\\n      // addStream, see below. No longer required in 15025+\\r\\n      if (browserDetails.version < 15025) {\\r\\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\\r\\n            window.MediaStreamTrack.prototype, 'enabled');\\r\\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\\r\\n          set: function(value) {\\r\\n            origMSTEnabled.set.call(this, value);\\r\\n            var ev = new Event('enabled');\\r\\n            ev.enabled = value;\\r\\n            this.dispatchEvent(ev);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n\\r\\n    // ORTC defines the DTMF sender a bit different.\\r\\n    // https://github.com/w3c/ortc/issues/714\\r\\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\\r\\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\\r\\n        get: function() {\\r\\n          if (this._dtmf === undefined) {\\r\\n            if (this.track.kind === 'audio') {\\r\\n              this._dtmf = new window.RTCDtmfSender(this);\\r\\n            } else if (this.track.kind === 'video') {\\r\\n              this._dtmf = null;\\r\\n            }\\r\\n          }\\r\\n          return this._dtmf;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n\\r\\n    window.RTCPeerConnection =\\r\\n        shimRTCPeerConnection(window, browserDetails.version);\\r\\n  },\\r\\n  shimReplaceTrack: function(window) {\\r\\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\\r\\n    if (window.RTCRtpSender &&\\r\\n        !('replaceTrack' in window.RTCRtpSender.prototype)) {\\r\\n      window.RTCRtpSender.prototype.replaceTrack =\\r\\n          window.RTCRtpSender.prototype.setTrack;\\r\\n    }\\r\\n  }\\r\\n};\\r\\n\",\"/*\\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n'use strict';\\n\\nvar SDPUtils = require('sdp');\\n\\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\\n\\n  // Map ICE parameters (ufrag, pwd) to SDP.\\n  sdp += SDPUtils.writeIceParameters(\\n      transceiver.iceGatherer.getLocalParameters());\\n\\n  // Map DTLS parameters to SDP.\\n  sdp += SDPUtils.writeDtlsParameters(\\n      transceiver.dtlsTransport.getLocalParameters(),\\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\\n\\n  sdp += 'a=mid:' + transceiver.mid + '\\\\r\\\\n';\\n\\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\\n    sdp += 'a=sendrecv\\\\r\\\\n';\\n  } else if (transceiver.rtpSender) {\\n    sdp += 'a=sendonly\\\\r\\\\n';\\n  } else if (transceiver.rtpReceiver) {\\n    sdp += 'a=recvonly\\\\r\\\\n';\\n  } else {\\n    sdp += 'a=inactive\\\\r\\\\n';\\n  }\\n\\n  if (transceiver.rtpSender) {\\n    // spec.\\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\\n        transceiver.rtpSender.track.id + '\\\\r\\\\n';\\n    sdp += 'a=' + msid;\\n\\n    // for Chrome.\\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\\n        ' ' + msid;\\n    if (transceiver.sendEncodingParameters[0].rtx) {\\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\\n          ' ' + msid;\\n      sdp += 'a=ssrc-group:FID ' +\\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\\n          '\\\\r\\\\n';\\n    }\\n  }\\n  // FIXME: this should be written by writeRtpDescription.\\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\\n      ' cname:' + SDPUtils.localCName + '\\\\r\\\\n';\\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\\n        ' cname:' + SDPUtils.localCName + '\\\\r\\\\n';\\n  }\\n  return sdp;\\n}\\n\\n// Edge does not like\\n// 1) stun: filtered after 14393 unless ?transport=udp is present\\n// 2) turn: that does not have all of turn:host:port?transport=udp\\n// 3) turn: with ipv6 addresses\\n// 4) turn: occurring muliple times\\nfunction filterIceServers(iceServers, edgeVersion) {\\n  var hasTurn = false;\\n  iceServers = JSON.parse(JSON.stringify(iceServers));\\n  return iceServers.filter(function(server) {\\n    if (server && (server.urls || server.url)) {\\n      var urls = server.urls || server.url;\\n      if (server.url && !server.urls) {\\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\\n      }\\n      var isString = typeof urls === 'string';\\n      if (isString) {\\n        urls = [urls];\\n      }\\n      urls = urls.filter(function(url) {\\n        var validTurn = url.indexOf('turn:') === 0 &&\\n            url.indexOf('transport=udp') !== -1 &&\\n            url.indexOf('turn:[') === -1 &&\\n            !hasTurn;\\n\\n        if (validTurn) {\\n          hasTurn = true;\\n          return true;\\n        }\\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\\n            url.indexOf('?transport=udp') === -1;\\n      });\\n\\n      delete server.url;\\n      server.urls = isString ? urls[0] : urls;\\n      return !!urls.length;\\n    }\\n  });\\n}\\n\\n// Determines the intersection of local and remote capabilities.\\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\\n  var commonCapabilities = {\\n    codecs: [],\\n    headerExtensions: [],\\n    fecMechanisms: []\\n  };\\n\\n  var findCodecByPayloadType = function(pt, codecs) {\\n    pt = parseInt(pt, 10);\\n    for (var i = 0; i < codecs.length; i++) {\\n      if (codecs[i].payloadType === pt ||\\n          codecs[i].preferredPayloadType === pt) {\\n        return codecs[i];\\n      }\\n    }\\n  };\\n\\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\\n    return lCodec && rCodec &&\\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\\n  };\\n\\n  localCapabilities.codecs.forEach(function(lCodec) {\\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\\n      var rCodec = remoteCapabilities.codecs[i];\\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\\n          lCodec.clockRate === rCodec.clockRate) {\\n        if (lCodec.name.toLowerCase() === 'rtx' &&\\n            lCodec.parameters && rCodec.parameters.apt) {\\n          // for RTX we need to find the local rtx that has a apt\\n          // which points to the same local codec as the remote one.\\n          if (!rtxCapabilityMatches(lCodec, rCodec,\\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\\n            continue;\\n          }\\n        }\\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\\n        // number of channels is the highest common number of channels\\n        rCodec.numChannels = Math.min(lCodec.numChannels,\\n            rCodec.numChannels);\\n        // push rCodec so we reply with offerer payload type\\n        commonCapabilities.codecs.push(rCodec);\\n\\n        // determine common feedback mechanisms\\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\\n              return true;\\n            }\\n          }\\n          return false;\\n        });\\n        // FIXME: also need to determine .parameters\\n        //  see https://github.com/openpeer/ortc/issues/569\\n        break;\\n      }\\n    }\\n  });\\n\\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\\n         i++) {\\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\\n        break;\\n      }\\n    }\\n  });\\n\\n  // FIXME: fecMechanisms\\n  return commonCapabilities;\\n}\\n\\n// is action=setLocalDescription with type allowed in signalingState\\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\\n  return {\\n    offer: {\\n      setLocalDescription: ['stable', 'have-local-offer'],\\n      setRemoteDescription: ['stable', 'have-remote-offer']\\n    },\\n    answer: {\\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\\n    }\\n  }[type][action].indexOf(signalingState) !== -1;\\n}\\n\\nfunction maybeAddCandidate(iceTransport, candidate) {\\n  // Edge's internal representation adds some fields therefore\\n  // not all fieldѕ are taken into account.\\n  var alreadyAdded = iceTransport.getRemoteCandidates()\\n      .find(function(remoteCandidate) {\\n        return candidate.foundation === remoteCandidate.foundation &&\\n            candidate.ip === remoteCandidate.ip &&\\n            candidate.port === remoteCandidate.port &&\\n            candidate.priority === remoteCandidate.priority &&\\n            candidate.protocol === remoteCandidate.protocol &&\\n            candidate.type === remoteCandidate.type;\\n      });\\n  if (!alreadyAdded) {\\n    iceTransport.addRemoteCandidate(candidate);\\n  }\\n  return !alreadyAdded;\\n}\\n\\n\\nfunction makeError(name, description) {\\n  var e = new Error(description);\\n  e.name = name;\\n  return e;\\n}\\n\\nmodule.exports = function(window, edgeVersion) {\\n  // https://w3c.github.io/mediacapture-main/#mediastream\\n  // Helper function to add the track to the stream and\\n  // dispatch the event ourselves.\\n  function addTrackToStreamAndFireEvent(track, stream) {\\n    stream.addTrack(track);\\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\\n        {track: track}));\\n  }\\n\\n  function removeTrackFromStreamAndFireEvent(track, stream) {\\n    stream.removeTrack(track);\\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\\n        {track: track}));\\n  }\\n\\n  function fireAddTrack(pc, track, receiver, streams) {\\n    var trackEvent = new Event('track');\\n    trackEvent.track = track;\\n    trackEvent.receiver = receiver;\\n    trackEvent.transceiver = {receiver: receiver};\\n    trackEvent.streams = streams;\\n    window.setTimeout(function() {\\n      pc._dispatchEvent('track', trackEvent);\\n    });\\n  }\\n\\n  var RTCPeerConnection = function(config) {\\n    var pc = this;\\n\\n    var _eventTarget = document.createDocumentFragment();\\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\\n        .forEach(function(method) {\\n          pc[method] = _eventTarget[method].bind(_eventTarget);\\n        });\\n\\n    this.canTrickleIceCandidates = null;\\n\\n    this.needNegotiation = false;\\n\\n    this.localStreams = [];\\n    this.remoteStreams = [];\\n\\n    this.localDescription = null;\\n    this.remoteDescription = null;\\n\\n    this.signalingState = 'stable';\\n    this.iceConnectionState = 'new';\\n    this.iceGatheringState = 'new';\\n\\n    config = JSON.parse(JSON.stringify(config || {}));\\n\\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\\n    if (config.rtcpMuxPolicy === 'negotiate') {\\n      throw(makeError('NotSupportedError',\\n          'rtcpMuxPolicy \\\\'negotiate\\\\' is not supported'));\\n    } else if (!config.rtcpMuxPolicy) {\\n      config.rtcpMuxPolicy = 'require';\\n    }\\n\\n    switch (config.iceTransportPolicy) {\\n      case 'all':\\n      case 'relay':\\n        break;\\n      default:\\n        config.iceTransportPolicy = 'all';\\n        break;\\n    }\\n\\n    switch (config.bundlePolicy) {\\n      case 'balanced':\\n      case 'max-compat':\\n      case 'max-bundle':\\n        break;\\n      default:\\n        config.bundlePolicy = 'balanced';\\n        break;\\n    }\\n\\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\\n\\n    this._iceGatherers = [];\\n    if (config.iceCandidatePoolSize) {\\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\\n        this._iceGatherers.push(new window.RTCIceGatherer({\\n          iceServers: config.iceServers,\\n          gatherPolicy: config.iceTransportPolicy\\n        }));\\n      }\\n    } else {\\n      config.iceCandidatePoolSize = 0;\\n    }\\n\\n    this._config = config;\\n\\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\\n    // everything that is needed to describe a SDP m-line.\\n    this.transceivers = [];\\n\\n    this._sdpSessionId = SDPUtils.generateSessionId();\\n    this._sdpSessionVersion = 0;\\n\\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\\n\\n    this._isClosed = false;\\n  };\\n\\n  // set up event handlers on prototype\\n  RTCPeerConnection.prototype.onicecandidate = null;\\n  RTCPeerConnection.prototype.onaddstream = null;\\n  RTCPeerConnection.prototype.ontrack = null;\\n  RTCPeerConnection.prototype.onremovestream = null;\\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\\n  RTCPeerConnection.prototype.ondatachannel = null;\\n\\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\\n    if (this._isClosed) {\\n      return;\\n    }\\n    this.dispatchEvent(event);\\n    if (typeof this['on' + name] === 'function') {\\n      this['on' + name](event);\\n    }\\n  };\\n\\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\\n    var event = new Event('icegatheringstatechange');\\n    this._dispatchEvent('icegatheringstatechange', event);\\n  };\\n\\n  RTCPeerConnection.prototype.getConfiguration = function() {\\n    return this._config;\\n  };\\n\\n  RTCPeerConnection.prototype.getLocalStreams = function() {\\n    return this.localStreams;\\n  };\\n\\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\\n    return this.remoteStreams;\\n  };\\n\\n  // internal helper to create a transceiver object.\\n  // (whih is not yet the same as the WebRTC 1.0 transceiver)\\n  RTCPeerConnection.prototype._createTransceiver = function(kind) {\\n    var hasBundleTransport = this.transceivers.length > 0;\\n    var transceiver = {\\n      track: null,\\n      iceGatherer: null,\\n      iceTransport: null,\\n      dtlsTransport: null,\\n      localCapabilities: null,\\n      remoteCapabilities: null,\\n      rtpSender: null,\\n      rtpReceiver: null,\\n      kind: kind,\\n      mid: null,\\n      sendEncodingParameters: null,\\n      recvEncodingParameters: null,\\n      stream: null,\\n      associatedRemoteMediaStreams: [],\\n      wantReceive: true\\n    };\\n    if (this.usingBundle && hasBundleTransport) {\\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\\n    } else {\\n      var transports = this._createIceAndDtlsTransports();\\n      transceiver.iceTransport = transports.iceTransport;\\n      transceiver.dtlsTransport = transports.dtlsTransport;\\n    }\\n    this.transceivers.push(transceiver);\\n    return transceiver;\\n  };\\n\\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\\n    if (this._isClosed) {\\n      throw makeError('InvalidStateError',\\n          'Attempted to call addTrack on a closed peerconnection.');\\n    }\\n\\n    var alreadyExists = this.transceivers.find(function(s) {\\n      return s.track === track;\\n    });\\n\\n    if (alreadyExists) {\\n      throw makeError('InvalidAccessError', 'Track already exists.');\\n    }\\n\\n    var transceiver;\\n    for (var i = 0; i < this.transceivers.length; i++) {\\n      if (!this.transceivers[i].track &&\\n          this.transceivers[i].kind === track.kind) {\\n        transceiver = this.transceivers[i];\\n      }\\n    }\\n    if (!transceiver) {\\n      transceiver = this._createTransceiver(track.kind);\\n    }\\n\\n    this._maybeFireNegotiationNeeded();\\n\\n    if (this.localStreams.indexOf(stream) === -1) {\\n      this.localStreams.push(stream);\\n    }\\n\\n    transceiver.track = track;\\n    transceiver.stream = stream;\\n    transceiver.rtpSender = new window.RTCRtpSender(track,\\n        transceiver.dtlsTransport);\\n    return transceiver.rtpSender;\\n  };\\n\\n  RTCPeerConnection.prototype.addStream = function(stream) {\\n    var pc = this;\\n    if (edgeVersion >= 15025) {\\n      stream.getTracks().forEach(function(track) {\\n        pc.addTrack(track, stream);\\n      });\\n    } else {\\n      // Clone is necessary for local demos mostly, attaching directly\\n      // to two different senders does not work (build 10547).\\n      // Fixed in 15025 (or earlier)\\n      var clonedStream = stream.clone();\\n      stream.getTracks().forEach(function(track, idx) {\\n        var clonedTrack = clonedStream.getTracks()[idx];\\n        track.addEventListener('enabled', function(event) {\\n          clonedTrack.enabled = event.enabled;\\n        });\\n      });\\n      clonedStream.getTracks().forEach(function(track) {\\n        pc.addTrack(track, clonedStream);\\n      });\\n    }\\n  };\\n\\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\\n    if (this._isClosed) {\\n      throw makeError('InvalidStateError',\\n          'Attempted to call removeTrack on a closed peerconnection.');\\n    }\\n\\n    if (!(sender instanceof window.RTCRtpSender)) {\\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\\n          'does not implement interface RTCRtpSender.');\\n    }\\n\\n    var transceiver = this.transceivers.find(function(t) {\\n      return t.rtpSender === sender;\\n    });\\n\\n    if (!transceiver) {\\n      throw makeError('InvalidAccessError',\\n          'Sender was not created by this connection.');\\n    }\\n    var stream = transceiver.stream;\\n\\n    transceiver.rtpSender.stop();\\n    transceiver.rtpSender = null;\\n    transceiver.track = null;\\n    transceiver.stream = null;\\n\\n    // remove the stream from the set of local streams\\n    var localStreams = this.transceivers.map(function(t) {\\n      return t.stream;\\n    });\\n    if (localStreams.indexOf(stream) === -1 &&\\n        this.localStreams.indexOf(stream) > -1) {\\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\\n    }\\n\\n    this._maybeFireNegotiationNeeded();\\n  };\\n\\n  RTCPeerConnection.prototype.removeStream = function(stream) {\\n    var pc = this;\\n    stream.getTracks().forEach(function(track) {\\n      var sender = pc.getSenders().find(function(s) {\\n        return s.track === track;\\n      });\\n      if (sender) {\\n        pc.removeTrack(sender);\\n      }\\n    });\\n  };\\n\\n  RTCPeerConnection.prototype.getSenders = function() {\\n    return this.transceivers.filter(function(transceiver) {\\n      return !!transceiver.rtpSender;\\n    })\\n    .map(function(transceiver) {\\n      return transceiver.rtpSender;\\n    });\\n  };\\n\\n  RTCPeerConnection.prototype.getReceivers = function() {\\n    return this.transceivers.filter(function(transceiver) {\\n      return !!transceiver.rtpReceiver;\\n    })\\n    .map(function(transceiver) {\\n      return transceiver.rtpReceiver;\\n    });\\n  };\\n\\n\\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\\n      usingBundle) {\\n    var pc = this;\\n    if (usingBundle && sdpMLineIndex > 0) {\\n      return this.transceivers[0].iceGatherer;\\n    } else if (this._iceGatherers.length) {\\n      return this._iceGatherers.shift();\\n    }\\n    var iceGatherer = new window.RTCIceGatherer({\\n      iceServers: this._config.iceServers,\\n      gatherPolicy: this._config.iceTransportPolicy\\n    });\\n    Object.defineProperty(iceGatherer, 'state',\\n        {value: 'new', writable: true}\\n    );\\n\\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\\n      // polyfill since RTCIceGatherer.state is not implemented in\\n      // Edge 10547 yet.\\n      iceGatherer.state = end ? 'completed' : 'gathering';\\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\\n      }\\n    };\\n    iceGatherer.addEventListener('localcandidate',\\n      this.transceivers[sdpMLineIndex].bufferCandidates);\\n    return iceGatherer;\\n  };\\n\\n  // start gathering from an RTCIceGatherer.\\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\\n    var pc = this;\\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\\n    if (iceGatherer.onlocalcandidate) {\\n      return;\\n    }\\n    var bufferedCandidateEvents =\\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\\n    iceGatherer.removeEventListener('localcandidate',\\n      this.transceivers[sdpMLineIndex].bufferCandidates);\\n    iceGatherer.onlocalcandidate = function(evt) {\\n      if (pc.usingBundle && sdpMLineIndex > 0) {\\n        // if we know that we use bundle we can drop candidates with\\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\\n        // confused since we dispose the extra ice gatherer.\\n        return;\\n      }\\n      var event = new Event('icecandidate');\\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\\n\\n      var cand = evt.candidate;\\n      // Edge emits an empty object for RTCIceCandidateComplete‥\\n      var end = !cand || Object.keys(cand).length === 0;\\n      if (end) {\\n        // polyfill since RTCIceGatherer.state is not implemented in\\n        // Edge 10547 yet.\\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\\n          iceGatherer.state = 'completed';\\n        }\\n      } else {\\n        if (iceGatherer.state === 'new') {\\n          iceGatherer.state = 'gathering';\\n        }\\n        // RTCIceCandidate doesn't have a component, needs to be added\\n        cand.component = 1;\\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\\n        event.candidate = Object.assign(event.candidate,\\n            SDPUtils.parseCandidate(serializedCandidate));\\n        event.candidate.candidate = serializedCandidate;\\n      }\\n\\n      // update local description.\\n      var sections = SDPUtils.splitSections(pc.localDescription.sdp);\\n      if (!end) {\\n        sections[event.candidate.sdpMLineIndex + 1] +=\\n            'a=' + event.candidate.candidate + '\\\\r\\\\n';\\n      } else {\\n        sections[event.candidate.sdpMLineIndex + 1] +=\\n            'a=end-of-candidates\\\\r\\\\n';\\n      }\\n      pc.localDescription.sdp = sections.join('');\\n      var complete = pc.transceivers.every(function(transceiver) {\\n        return transceiver.iceGatherer &&\\n            transceiver.iceGatherer.state === 'completed';\\n      });\\n\\n      if (pc.iceGatheringState !== 'gathering') {\\n        pc.iceGatheringState = 'gathering';\\n        pc._emitGatheringStateChange();\\n      }\\n\\n      // Emit candidate. Also emit null candidate when all gatherers are\\n      // complete.\\n      if (!end) {\\n        pc._dispatchEvent('icecandidate', event);\\n      }\\n      if (complete) {\\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\\n        pc.iceGatheringState = 'complete';\\n        pc._emitGatheringStateChange();\\n      }\\n    };\\n\\n    // emit already gathered candidates.\\n    window.setTimeout(function() {\\n      bufferedCandidateEvents.forEach(function(e) {\\n        iceGatherer.onlocalcandidate(e);\\n      });\\n    }, 0);\\n  };\\n\\n  // Create ICE transport and DTLS transport.\\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\\n    var pc = this;\\n    var iceTransport = new window.RTCIceTransport(null);\\n    iceTransport.onicestatechange = function() {\\n      pc._updateConnectionState();\\n    };\\n\\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\\n    dtlsTransport.ondtlsstatechange = function() {\\n      pc._updateConnectionState();\\n    };\\n    dtlsTransport.onerror = function() {\\n      // onerror does not set state to failed by itself.\\n      Object.defineProperty(dtlsTransport, 'state',\\n          {value: 'failed', writable: true});\\n      pc._updateConnectionState();\\n    };\\n\\n    return {\\n      iceTransport: iceTransport,\\n      dtlsTransport: dtlsTransport\\n    };\\n  };\\n\\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\\n  // Without triggering the callbacks.\\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\\n      sdpMLineIndex) {\\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\\n    if (iceGatherer) {\\n      delete iceGatherer.onlocalcandidate;\\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\\n    }\\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\\n    if (iceTransport) {\\n      delete iceTransport.onicestatechange;\\n      delete this.transceivers[sdpMLineIndex].iceTransport;\\n    }\\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\\n    if (dtlsTransport) {\\n      delete dtlsTransport.ondtlsstatechange;\\n      delete dtlsTransport.onerror;\\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\\n    }\\n  };\\n\\n  // Start the RTP Sender and Receiver for a transceiver.\\n  RTCPeerConnection.prototype._transceive = function(transceiver,\\n      send, recv) {\\n    var params = getCommonCapabilities(transceiver.localCapabilities,\\n        transceiver.remoteCapabilities);\\n    if (send && transceiver.rtpSender) {\\n      params.encodings = transceiver.sendEncodingParameters;\\n      params.rtcp = {\\n        cname: SDPUtils.localCName,\\n        compound: transceiver.rtcpParameters.compound\\n      };\\n      if (transceiver.recvEncodingParameters.length) {\\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\\n      }\\n      transceiver.rtpSender.send(params);\\n    }\\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\\n      // remove RTX field in Edge 14942\\n      if (transceiver.kind === 'video'\\n          && transceiver.recvEncodingParameters\\n          && edgeVersion < 15019) {\\n        transceiver.recvEncodingParameters.forEach(function(p) {\\n          delete p.rtx;\\n        });\\n      }\\n      if (transceiver.recvEncodingParameters.length) {\\n        params.encodings = transceiver.recvEncodingParameters;\\n      }\\n      params.rtcp = {\\n        compound: transceiver.rtcpParameters.compound\\n      };\\n      if (transceiver.rtcpParameters.cname) {\\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\\n      }\\n      if (transceiver.sendEncodingParameters.length) {\\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\\n      }\\n      transceiver.rtpReceiver.receive(params);\\n    }\\n  };\\n\\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\\n    var pc = this;\\n\\n    // Note: pranswer is not supported.\\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\\n      return Promise.reject(makeError('TypeError',\\n          'Unsupported type \\\"' + description.type + '\\\"'));\\n    }\\n\\n    if (!isActionAllowedInSignalingState('setLocalDescription',\\n        description.type, pc.signalingState) || pc._isClosed) {\\n      return Promise.reject(makeError('InvalidStateError',\\n          'Can not set local ' + description.type +\\n          ' in state ' + pc.signalingState));\\n    }\\n\\n    var sections;\\n    var sessionpart;\\n    if (description.type === 'offer') {\\n      // VERY limited support for SDP munging. Limited to:\\n      // * changing the order of codecs\\n      sections = SDPUtils.splitSections(description.sdp);\\n      sessionpart = sections.shift();\\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\\n      });\\n\\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\\n        pc._gather(transceiver.mid, sdpMLineIndex);\\n      });\\n    } else if (description.type === 'answer') {\\n      sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\\n      sessionpart = sections.shift();\\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\\n          'a=ice-lite').length > 0;\\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\\n        var transceiver = pc.transceivers[sdpMLineIndex];\\n        var iceGatherer = transceiver.iceGatherer;\\n        var iceTransport = transceiver.iceTransport;\\n        var dtlsTransport = transceiver.dtlsTransport;\\n        var localCapabilities = transceiver.localCapabilities;\\n        var remoteCapabilities = transceiver.remoteCapabilities;\\n\\n        // treat bundle-only as not-rejected.\\n        var rejected = SDPUtils.isRejected(mediaSection) &&\\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\\n\\n        if (!rejected && !transceiver.isDatachannel) {\\n          var remoteIceParameters = SDPUtils.getIceParameters(\\n              mediaSection, sessionpart);\\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\\n              mediaSection, sessionpart);\\n          if (isIceLite) {\\n            remoteDtlsParameters.role = 'server';\\n          }\\n\\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\\n            pc._gather(transceiver.mid, sdpMLineIndex);\\n            if (iceTransport.state === 'new') {\\n              iceTransport.start(iceGatherer, remoteIceParameters,\\n                  isIceLite ? 'controlling' : 'controlled');\\n            }\\n            if (dtlsTransport.state === 'new') {\\n              dtlsTransport.start(remoteDtlsParameters);\\n            }\\n          }\\n\\n          // Calculate intersection of capabilities.\\n          var params = getCommonCapabilities(localCapabilities,\\n              remoteCapabilities);\\n\\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\\n          // transceiver has already been started in setRemoteDescription.\\n          pc._transceive(transceiver,\\n              params.codecs.length > 0,\\n              false);\\n        }\\n      });\\n    }\\n\\n    pc.localDescription = {\\n      type: description.type,\\n      sdp: description.sdp\\n    };\\n    if (description.type === 'offer') {\\n      pc._updateSignalingState('have-local-offer');\\n    } else {\\n      pc._updateSignalingState('stable');\\n    }\\n\\n    return Promise.resolve();\\n  };\\n\\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\\n    var pc = this;\\n\\n    // Note: pranswer is not supported.\\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\\n      return Promise.reject(makeError('TypeError',\\n          'Unsupported type \\\"' + description.type + '\\\"'));\\n    }\\n\\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\\n        description.type, pc.signalingState) || pc._isClosed) {\\n      return Promise.reject(makeError('InvalidStateError',\\n          'Can not set remote ' + description.type +\\n          ' in state ' + pc.signalingState));\\n    }\\n\\n    var streams = {};\\n    pc.remoteStreams.forEach(function(stream) {\\n      streams[stream.id] = stream;\\n    });\\n    var receiverList = [];\\n    var sections = SDPUtils.splitSections(description.sdp);\\n    var sessionpart = sections.shift();\\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\\n        'a=ice-lite').length > 0;\\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\\n        'a=group:BUNDLE ').length > 0;\\n    pc.usingBundle = usingBundle;\\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\\n        'a=ice-options:')[0];\\n    if (iceOptions) {\\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\\n          .indexOf('trickle') >= 0;\\n    } else {\\n      pc.canTrickleIceCandidates = false;\\n    }\\n\\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\\n      var lines = SDPUtils.splitLines(mediaSection);\\n      var kind = SDPUtils.getKind(mediaSection);\\n      // treat bundle-only as not-rejected.\\n      var rejected = SDPUtils.isRejected(mediaSection) &&\\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\\n      var protocol = lines[0].substr(2).split(' ')[2];\\n\\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\\n\\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\\n\\n      // Reject datachannels which are not implemented yet.\\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\\n        pc.transceivers[sdpMLineIndex] = {\\n          mid: mid,\\n          isDatachannel: true\\n        };\\n        return;\\n      }\\n\\n      var transceiver;\\n      var iceGatherer;\\n      var iceTransport;\\n      var dtlsTransport;\\n      var rtpReceiver;\\n      var sendEncodingParameters;\\n      var recvEncodingParameters;\\n      var localCapabilities;\\n\\n      var track;\\n      // FIXME: ensure the mediaSection has rtcp-mux set.\\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\\n      var remoteIceParameters;\\n      var remoteDtlsParameters;\\n      if (!rejected) {\\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\\n            sessionpart);\\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\\n            sessionpart);\\n        remoteDtlsParameters.role = 'client';\\n      }\\n      recvEncodingParameters =\\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\\n\\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\\n\\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\\n          'a=end-of-candidates', sessionpart).length > 0;\\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\\n          .map(function(cand) {\\n            return SDPUtils.parseCandidate(cand);\\n          })\\n          .filter(function(cand) {\\n            return cand.component === 1;\\n          });\\n\\n      // Check if we can use BUNDLE and dispose transports.\\n      if ((description.type === 'offer' || description.type === 'answer') &&\\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\\n          pc.transceivers[sdpMLineIndex]) {\\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\\n        pc.transceivers[sdpMLineIndex].iceGatherer =\\n            pc.transceivers[0].iceGatherer;\\n        pc.transceivers[sdpMLineIndex].iceTransport =\\n            pc.transceivers[0].iceTransport;\\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\\n            pc.transceivers[0].dtlsTransport;\\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\\n              pc.transceivers[0].dtlsTransport);\\n        }\\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\\n              pc.transceivers[0].dtlsTransport);\\n        }\\n      }\\n      if (description.type === 'offer' && !rejected) {\\n        transceiver = pc.transceivers[sdpMLineIndex] ||\\n            pc._createTransceiver(kind);\\n        transceiver.mid = mid;\\n\\n        if (!transceiver.iceGatherer) {\\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\\n              usingBundle);\\n        }\\n\\n        if (cands.length && transceiver.iceTransport.state === 'new') {\\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\\n            transceiver.iceTransport.setRemoteCandidates(cands);\\n          } else {\\n            cands.forEach(function(candidate) {\\n              maybeAddCandidate(transceiver.iceTransport, candidate);\\n            });\\n          }\\n        }\\n\\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\\n\\n        // filter RTX until additional stuff needed for RTX is implemented\\n        // in adapter.js\\n        if (edgeVersion < 15019) {\\n          localCapabilities.codecs = localCapabilities.codecs.filter(\\n              function(codec) {\\n                return codec.name !== 'rtx';\\n              });\\n        }\\n\\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\\n        }];\\n\\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\\n        var isNewTrack = false;\\n        if (direction === 'sendrecv' || direction === 'sendonly') {\\n          isNewTrack = !transceiver.rtpReceiver;\\n          rtpReceiver = transceiver.rtpReceiver ||\\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\\n\\n          if (isNewTrack) {\\n            var stream;\\n            track = rtpReceiver.track;\\n            // FIXME: does not work with Plan B.\\n            if (remoteMsid && remoteMsid.stream === '-') {\\n              // no-op. a stream id of '-' means: no associated stream.\\n            } else if (remoteMsid) {\\n              if (!streams[remoteMsid.stream]) {\\n                streams[remoteMsid.stream] = new window.MediaStream();\\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\\n                  get: function() {\\n                    return remoteMsid.stream;\\n                  }\\n                });\\n              }\\n              Object.defineProperty(track, 'id', {\\n                get: function() {\\n                  return remoteMsid.track;\\n                }\\n              });\\n              stream = streams[remoteMsid.stream];\\n            } else {\\n              if (!streams.default) {\\n                streams.default = new window.MediaStream();\\n              }\\n              stream = streams.default;\\n            }\\n            if (stream) {\\n              addTrackToStreamAndFireEvent(track, stream);\\n              transceiver.associatedRemoteMediaStreams.push(stream);\\n            }\\n            receiverList.push([track, rtpReceiver, stream]);\\n          }\\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\\n            var nativeTrack = s.getTracks().find(function(t) {\\n              return t.id === transceiver.rtpReceiver.track.id;\\n            });\\n            if (nativeTrack) {\\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\\n            }\\n          });\\n          transceiver.associatedRemoteMediaStreams = [];\\n        }\\n\\n        transceiver.localCapabilities = localCapabilities;\\n        transceiver.remoteCapabilities = remoteCapabilities;\\n        transceiver.rtpReceiver = rtpReceiver;\\n        transceiver.rtcpParameters = rtcpParameters;\\n        transceiver.sendEncodingParameters = sendEncodingParameters;\\n        transceiver.recvEncodingParameters = recvEncodingParameters;\\n\\n        // Start the RTCRtpReceiver now. The RTPSender is started in\\n        // setLocalDescription.\\n        pc._transceive(pc.transceivers[sdpMLineIndex],\\n            false,\\n            isNewTrack);\\n      } else if (description.type === 'answer' && !rejected) {\\n        transceiver = pc.transceivers[sdpMLineIndex];\\n        iceGatherer = transceiver.iceGatherer;\\n        iceTransport = transceiver.iceTransport;\\n        dtlsTransport = transceiver.dtlsTransport;\\n        rtpReceiver = transceiver.rtpReceiver;\\n        sendEncodingParameters = transceiver.sendEncodingParameters;\\n        localCapabilities = transceiver.localCapabilities;\\n\\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\\n            recvEncodingParameters;\\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\\n            remoteCapabilities;\\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\\n\\n        if (cands.length && iceTransport.state === 'new') {\\n          if ((isIceLite || isComplete) &&\\n              (!usingBundle || sdpMLineIndex === 0)) {\\n            iceTransport.setRemoteCandidates(cands);\\n          } else {\\n            cands.forEach(function(candidate) {\\n              maybeAddCandidate(transceiver.iceTransport, candidate);\\n            });\\n          }\\n        }\\n\\n        if (!usingBundle || sdpMLineIndex === 0) {\\n          if (iceTransport.state === 'new') {\\n            iceTransport.start(iceGatherer, remoteIceParameters,\\n                'controlling');\\n          }\\n          if (dtlsTransport.state === 'new') {\\n            dtlsTransport.start(remoteDtlsParameters);\\n          }\\n        }\\n\\n        pc._transceive(transceiver,\\n            direction === 'sendrecv' || direction === 'recvonly',\\n            direction === 'sendrecv' || direction === 'sendonly');\\n\\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\\n        if (rtpReceiver &&\\n            (direction === 'sendrecv' || direction === 'sendonly')) {\\n          track = rtpReceiver.track;\\n          if (remoteMsid) {\\n            if (!streams[remoteMsid.stream]) {\\n              streams[remoteMsid.stream] = new window.MediaStream();\\n            }\\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\\n          } else {\\n            if (!streams.default) {\\n              streams.default = new window.MediaStream();\\n            }\\n            addTrackToStreamAndFireEvent(track, streams.default);\\n            receiverList.push([track, rtpReceiver, streams.default]);\\n          }\\n        } else {\\n          // FIXME: actually the receiver should be created later.\\n          delete transceiver.rtpReceiver;\\n        }\\n      }\\n    });\\n\\n    if (pc._dtlsRole === undefined) {\\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\\n    }\\n\\n    pc.remoteDescription = {\\n      type: description.type,\\n      sdp: description.sdp\\n    };\\n    if (description.type === 'offer') {\\n      pc._updateSignalingState('have-remote-offer');\\n    } else {\\n      pc._updateSignalingState('stable');\\n    }\\n    Object.keys(streams).forEach(function(sid) {\\n      var stream = streams[sid];\\n      if (stream.getTracks().length) {\\n        if (pc.remoteStreams.indexOf(stream) === -1) {\\n          pc.remoteStreams.push(stream);\\n          var event = new Event('addstream');\\n          event.stream = stream;\\n          window.setTimeout(function() {\\n            pc._dispatchEvent('addstream', event);\\n          });\\n        }\\n\\n        receiverList.forEach(function(item) {\\n          var track = item[0];\\n          var receiver = item[1];\\n          if (stream.id !== item[2].id) {\\n            return;\\n          }\\n          fireAddTrack(pc, track, receiver, [stream]);\\n        });\\n      }\\n    });\\n    receiverList.forEach(function(item) {\\n      if (item[2]) {\\n        return;\\n      }\\n      fireAddTrack(pc, item[0], item[1], []);\\n    });\\n\\n    // check whether addIceCandidate({}) was called within four seconds after\\n    // setRemoteDescription.\\n    window.setTimeout(function() {\\n      if (!(pc && pc.transceivers)) {\\n        return;\\n      }\\n      pc.transceivers.forEach(function(transceiver) {\\n        if (transceiver.iceTransport &&\\n            transceiver.iceTransport.state === 'new' &&\\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\\n              'an end-of-candidates notification');\\n          transceiver.iceTransport.addRemoteCandidate({});\\n        }\\n      });\\n    }, 4000);\\n\\n    return Promise.resolve();\\n  };\\n\\n  RTCPeerConnection.prototype.close = function() {\\n    this.transceivers.forEach(function(transceiver) {\\n      /* not yet\\n      if (transceiver.iceGatherer) {\\n        transceiver.iceGatherer.close();\\n      }\\n      */\\n      if (transceiver.iceTransport) {\\n        transceiver.iceTransport.stop();\\n      }\\n      if (transceiver.dtlsTransport) {\\n        transceiver.dtlsTransport.stop();\\n      }\\n      if (transceiver.rtpSender) {\\n        transceiver.rtpSender.stop();\\n      }\\n      if (transceiver.rtpReceiver) {\\n        transceiver.rtpReceiver.stop();\\n      }\\n    });\\n    // FIXME: clean up tracks, local streams, remote streams, etc\\n    this._isClosed = true;\\n    this._updateSignalingState('closed');\\n  };\\n\\n  // Update the signaling state.\\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\\n    this.signalingState = newState;\\n    var event = new Event('signalingstatechange');\\n    this._dispatchEvent('signalingstatechange', event);\\n  };\\n\\n  // Determine whether to fire the negotiationneeded event.\\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\\n    var pc = this;\\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\\n      return;\\n    }\\n    this.needNegotiation = true;\\n    window.setTimeout(function() {\\n      if (pc.needNegotiation) {\\n        pc.needNegotiation = false;\\n        var event = new Event('negotiationneeded');\\n        pc._dispatchEvent('negotiationneeded', event);\\n      }\\n    }, 0);\\n  };\\n\\n  // Update the connection state.\\n  RTCPeerConnection.prototype._updateConnectionState = function() {\\n    var newState;\\n    var states = {\\n      'new': 0,\\n      closed: 0,\\n      connecting: 0,\\n      checking: 0,\\n      connected: 0,\\n      completed: 0,\\n      disconnected: 0,\\n      failed: 0\\n    };\\n    this.transceivers.forEach(function(transceiver) {\\n      states[transceiver.iceTransport.state]++;\\n      states[transceiver.dtlsTransport.state]++;\\n    });\\n    // ICETransport.completed and connected are the same for this purpose.\\n    states.connected += states.completed;\\n\\n    newState = 'new';\\n    if (states.failed > 0) {\\n      newState = 'failed';\\n    } else if (states.connecting > 0 || states.checking > 0) {\\n      newState = 'connecting';\\n    } else if (states.disconnected > 0) {\\n      newState = 'disconnected';\\n    } else if (states.new > 0) {\\n      newState = 'new';\\n    } else if (states.connected > 0 || states.completed > 0) {\\n      newState = 'connected';\\n    }\\n\\n    if (newState !== this.iceConnectionState) {\\n      this.iceConnectionState = newState;\\n      var event = new Event('iceconnectionstatechange');\\n      this._dispatchEvent('iceconnectionstatechange', event);\\n    }\\n  };\\n\\n  RTCPeerConnection.prototype.createOffer = function() {\\n    var pc = this;\\n\\n    if (pc._isClosed) {\\n      return Promise.reject(makeError('InvalidStateError',\\n          'Can not call createOffer after close'));\\n    }\\n\\n    var numAudioTracks = pc.transceivers.filter(function(t) {\\n      return t.kind === 'audio';\\n    }).length;\\n    var numVideoTracks = pc.transceivers.filter(function(t) {\\n      return t.kind === 'video';\\n    }).length;\\n\\n    // Determine number of audio and video tracks we need to send/recv.\\n    var offerOptions = arguments[0];\\n    if (offerOptions) {\\n      // Reject Chrome legacy constraints.\\n      if (offerOptions.mandatory || offerOptions.optional) {\\n        throw new TypeError(\\n            'Legacy mandatory/optional constraints not supported.');\\n      }\\n      if (offerOptions.offerToReceiveAudio !== undefined) {\\n        if (offerOptions.offerToReceiveAudio === true) {\\n          numAudioTracks = 1;\\n        } else if (offerOptions.offerToReceiveAudio === false) {\\n          numAudioTracks = 0;\\n        } else {\\n          numAudioTracks = offerOptions.offerToReceiveAudio;\\n        }\\n      }\\n      if (offerOptions.offerToReceiveVideo !== undefined) {\\n        if (offerOptions.offerToReceiveVideo === true) {\\n          numVideoTracks = 1;\\n        } else if (offerOptions.offerToReceiveVideo === false) {\\n          numVideoTracks = 0;\\n        } else {\\n          numVideoTracks = offerOptions.offerToReceiveVideo;\\n        }\\n      }\\n    }\\n\\n    pc.transceivers.forEach(function(transceiver) {\\n      if (transceiver.kind === 'audio') {\\n        numAudioTracks--;\\n        if (numAudioTracks < 0) {\\n          transceiver.wantReceive = false;\\n        }\\n      } else if (transceiver.kind === 'video') {\\n        numVideoTracks--;\\n        if (numVideoTracks < 0) {\\n          transceiver.wantReceive = false;\\n        }\\n      }\\n    });\\n\\n    // Create M-lines for recvonly streams.\\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\\n      if (numAudioTracks > 0) {\\n        pc._createTransceiver('audio');\\n        numAudioTracks--;\\n      }\\n      if (numVideoTracks > 0) {\\n        pc._createTransceiver('video');\\n        numVideoTracks--;\\n      }\\n    }\\n\\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\\n        pc._sdpSessionVersion++);\\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\\n      // For each track, create an ice gatherer, ice transport,\\n      // dtls transport, potentially rtpsender and rtpreceiver.\\n      var track = transceiver.track;\\n      var kind = transceiver.kind;\\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\\n      transceiver.mid = mid;\\n\\n      if (!transceiver.iceGatherer) {\\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\\n            pc.usingBundle);\\n      }\\n\\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\\n      // filter RTX until additional stuff needed for RTX is implemented\\n      // in adapter.js\\n      if (edgeVersion < 15019) {\\n        localCapabilities.codecs = localCapabilities.codecs.filter(\\n            function(codec) {\\n              return codec.name !== 'rtx';\\n            });\\n      }\\n      localCapabilities.codecs.forEach(function(codec) {\\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\\n        // by adding level-asymmetry-allowed=1\\n        if (codec.name === 'H264' &&\\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\\n          codec.parameters['level-asymmetry-allowed'] = '1';\\n        }\\n      });\\n\\n      // generate an ssrc now, to be used later in rtpSender.send\\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\\n      }];\\n      if (track) {\\n        // add RTX\\n        if (edgeVersion >= 15019 && kind === 'video' &&\\n            !sendEncodingParameters[0].rtx) {\\n          sendEncodingParameters[0].rtx = {\\n            ssrc: sendEncodingParameters[0].ssrc + 1\\n          };\\n        }\\n      }\\n\\n      if (transceiver.wantReceive) {\\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\\n            transceiver.dtlsTransport, kind);\\n      }\\n\\n      transceiver.localCapabilities = localCapabilities;\\n      transceiver.sendEncodingParameters = sendEncodingParameters;\\n    });\\n\\n    // always offer BUNDLE and dispose on return if not supported.\\n    if (pc._config.bundlePolicy !== 'max-compat') {\\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\\n        return t.mid;\\n      }).join(' ') + '\\\\r\\\\n';\\n    }\\n    sdp += 'a=ice-options:trickle\\\\r\\\\n';\\n\\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\\n          'offer', transceiver.stream, pc._dtlsRole);\\n      sdp += 'a=rtcp-rsize\\\\r\\\\n';\\n\\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\\n          cand.component = 1;\\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\\\r\\\\n';\\n        });\\n\\n        if (transceiver.iceGatherer.state === 'completed') {\\n          sdp += 'a=end-of-candidates\\\\r\\\\n';\\n        }\\n      }\\n    });\\n\\n    var desc = new window.RTCSessionDescription({\\n      type: 'offer',\\n      sdp: sdp\\n    });\\n    return Promise.resolve(desc);\\n  };\\n\\n  RTCPeerConnection.prototype.createAnswer = function() {\\n    var pc = this;\\n\\n    if (pc._isClosed) {\\n      return Promise.reject(makeError('InvalidStateError',\\n          'Can not call createAnswer after close'));\\n    }\\n\\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\\n        pc._sdpSessionVersion++);\\n    if (pc.usingBundle) {\\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\\n        return t.mid;\\n      }).join(' ') + '\\\\r\\\\n';\\n    }\\n    var mediaSectionsInOffer = SDPUtils.splitSections(\\n        pc.remoteDescription.sdp).length - 1;\\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\\n        return;\\n      }\\n      if (transceiver.isDatachannel) {\\n        sdp += 'm=application 0 DTLS/SCTP 5000\\\\r\\\\n' +\\n            'c=IN IP4 0.0.0.0\\\\r\\\\n' +\\n            'a=mid:' + transceiver.mid + '\\\\r\\\\n';\\n        return;\\n      }\\n\\n      // FIXME: look at direction.\\n      if (transceiver.stream) {\\n        var localTrack;\\n        if (transceiver.kind === 'audio') {\\n          localTrack = transceiver.stream.getAudioTracks()[0];\\n        } else if (transceiver.kind === 'video') {\\n          localTrack = transceiver.stream.getVideoTracks()[0];\\n        }\\n        if (localTrack) {\\n          // add RTX\\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\\n              !transceiver.sendEncodingParameters[0].rtx) {\\n            transceiver.sendEncodingParameters[0].rtx = {\\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\\n            };\\n          }\\n        }\\n      }\\n\\n      // Calculate intersection of capabilities.\\n      var commonCapabilities = getCommonCapabilities(\\n          transceiver.localCapabilities,\\n          transceiver.remoteCapabilities);\\n\\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\\n        return c.name.toLowerCase() === 'rtx';\\n      }).length;\\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\\n        delete transceiver.sendEncodingParameters[0].rtx;\\n      }\\n\\n      sdp += writeMediaSection(transceiver, commonCapabilities,\\n          'answer', transceiver.stream, pc._dtlsRole);\\n      if (transceiver.rtcpParameters &&\\n          transceiver.rtcpParameters.reducedSize) {\\n        sdp += 'a=rtcp-rsize\\\\r\\\\n';\\n      }\\n    });\\n\\n    var desc = new window.RTCSessionDescription({\\n      type: 'answer',\\n      sdp: sdp\\n    });\\n    return Promise.resolve(desc);\\n  };\\n\\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\\n    var pc = this;\\n    var sections;\\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\\n        candidate.sdpMid)) {\\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\\n    }\\n\\n    // TODO: needs to go into ops queue.\\n    return new Promise(function(resolve, reject) {\\n      if (!pc.remoteDescription) {\\n        return reject(makeError('InvalidStateError',\\n            'Can not add ICE candidate without a remote description'));\\n      } else if (!candidate || candidate.candidate === '') {\\n        for (var j = 0; j < pc.transceivers.length; j++) {\\n          if (pc.transceivers[j].isDatachannel) {\\n            continue;\\n          }\\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\\n          sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\\n          sections[j + 1] += 'a=end-of-candidates\\\\r\\\\n';\\n          pc.remoteDescription.sdp = sections.join('');\\n          if (pc.usingBundle) {\\n            break;\\n          }\\n        }\\n      } else {\\n        var sdpMLineIndex = candidate.sdpMLineIndex;\\n        if (candidate.sdpMid) {\\n          for (var i = 0; i < pc.transceivers.length; i++) {\\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\\n              sdpMLineIndex = i;\\n              break;\\n            }\\n          }\\n        }\\n        var transceiver = pc.transceivers[sdpMLineIndex];\\n        if (transceiver) {\\n          if (transceiver.isDatachannel) {\\n            return resolve();\\n          }\\n          var cand = Object.keys(candidate.candidate).length > 0 ?\\n              SDPUtils.parseCandidate(candidate.candidate) : {};\\n          // Ignore Chrome's invalid candidates since Edge does not like them.\\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\\n            return resolve();\\n          }\\n          // Ignore RTCP candidates, we assume RTCP-MUX.\\n          if (cand.component && cand.component !== 1) {\\n            return resolve();\\n          }\\n          // when using bundle, avoid adding candidates to the wrong\\n          // ice transport. And avoid adding candidates added in the SDP.\\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\\n              return reject(makeError('OperationError',\\n                  'Can not add ICE candidate'));\\n            }\\n          }\\n\\n          // update the remoteDescription.\\n          var candidateString = candidate.candidate.trim();\\n          if (candidateString.indexOf('a=') === 0) {\\n            candidateString = candidateString.substr(2);\\n          }\\n          sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\\n          sections[sdpMLineIndex + 1] += 'a=' +\\n              (cand.type ? candidateString : 'end-of-candidates')\\n              + '\\\\r\\\\n';\\n          pc.remoteDescription.sdp = sections.join('');\\n        } else {\\n          return reject(makeError('OperationError',\\n              'Can not add ICE candidate'));\\n        }\\n      }\\n      resolve();\\n    });\\n  };\\n\\n  RTCPeerConnection.prototype.getStats = function() {\\n    var promises = [];\\n    this.transceivers.forEach(function(transceiver) {\\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\\n          'dtlsTransport'].forEach(function(method) {\\n            if (transceiver[method]) {\\n              promises.push(transceiver[method].getStats());\\n            }\\n          });\\n    });\\n    var fixStatsType = function(stat) {\\n      return {\\n        inboundrtp: 'inbound-rtp',\\n        outboundrtp: 'outbound-rtp',\\n        candidatepair: 'candidate-pair',\\n        localcandidate: 'local-candidate',\\n        remotecandidate: 'remote-candidate'\\n      }[stat.type] || stat.type;\\n    };\\n    return new Promise(function(resolve) {\\n      // shim getStats with maplike support\\n      var results = new Map();\\n      Promise.all(promises).then(function(res) {\\n        res.forEach(function(result) {\\n          Object.keys(result).forEach(function(id) {\\n            result[id].type = fixStatsType(result[id]);\\n            results.set(id, result[id]);\\n          });\\n        });\\n        resolve(results);\\n      });\\n    });\\n  };\\n\\n  // legacy callback shims. Should be moved to adapter.js some days.\\n  var methods = ['createOffer', 'createAnswer'];\\n  methods.forEach(function(method) {\\n    var nativeMethod = RTCPeerConnection.prototype[method];\\n    RTCPeerConnection.prototype[method] = function() {\\n      var args = arguments;\\n      if (typeof args[0] === 'function' ||\\n          typeof args[1] === 'function') { // legacy\\n        return nativeMethod.apply(this, [arguments[2]])\\n        .then(function(description) {\\n          if (typeof args[0] === 'function') {\\n            args[0].apply(null, [description]);\\n          }\\n        }, function(error) {\\n          if (typeof args[1] === 'function') {\\n            args[1].apply(null, [error]);\\n          }\\n        });\\n      }\\n      return nativeMethod.apply(this, arguments);\\n    };\\n  });\\n\\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\\n  methods.forEach(function(method) {\\n    var nativeMethod = RTCPeerConnection.prototype[method];\\n    RTCPeerConnection.prototype[method] = function() {\\n      var args = arguments;\\n      if (typeof args[1] === 'function' ||\\n          typeof args[2] === 'function') { // legacy\\n        return nativeMethod.apply(this, arguments)\\n        .then(function() {\\n          if (typeof args[1] === 'function') {\\n            args[1].apply(null);\\n          }\\n        }, function(error) {\\n          if (typeof args[2] === 'function') {\\n            args[2].apply(null, [error]);\\n          }\\n        });\\n      }\\n      return nativeMethod.apply(this, arguments);\\n    };\\n  });\\n\\n  // getStats is special. It doesn't have a spec legacy method yet we support\\n  // getStats(something, cb) without error callbacks.\\n  ['getStats'].forEach(function(method) {\\n    var nativeMethod = RTCPeerConnection.prototype[method];\\n    RTCPeerConnection.prototype[method] = function() {\\n      var args = arguments;\\n      if (typeof args[1] === 'function') {\\n        return nativeMethod.apply(this, arguments)\\n        .then(function() {\\n          if (typeof args[1] === 'function') {\\n            args[1].apply(null);\\n          }\\n        });\\n      }\\n      return nativeMethod.apply(this, arguments);\\n    };\\n  });\\n\\n  return RTCPeerConnection;\\n};\\n\",\"/*\\r\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n /* eslint-env node */\\r\\n'use strict';\\r\\n\\r\\n// Expose public methods.\\r\\nmodule.exports = function(window) {\\r\\n  var navigator = window && window.navigator;\\r\\n\\r\\n  var shimError_ = function(e) {\\r\\n    return {\\r\\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\\r\\n      message: e.message,\\r\\n      constraint: e.constraint,\\r\\n      toString: function() {\\r\\n        return this.name;\\r\\n      }\\r\\n    };\\r\\n  };\\r\\n\\r\\n  // getUserMedia error shim.\\r\\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\\r\\n      bind(navigator.mediaDevices);\\r\\n  navigator.mediaDevices.getUserMedia = function(c) {\\r\\n    return origGetUserMedia(c).catch(function(e) {\\r\\n      return Promise.reject(shimError_(e));\\r\\n    });\\r\\n  };\\r\\n};\\r\\n\",\"/*\\r\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n /* eslint-env node */\\r\\n'use strict';\\r\\n\\r\\nvar utils = require('../utils');\\r\\n\\r\\nvar firefoxShim = {\\r\\n  shimOnTrack: function(window) {\\r\\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\\r\\n        window.RTCPeerConnection.prototype)) {\\r\\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\\r\\n        get: function() {\\r\\n          return this._ontrack;\\r\\n        },\\r\\n        set: function(f) {\\r\\n          if (this._ontrack) {\\r\\n            this.removeEventListener('track', this._ontrack);\\r\\n            this.removeEventListener('addstream', this._ontrackpoly);\\r\\n          }\\r\\n          this.addEventListener('track', this._ontrack = f);\\r\\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\\r\\n            e.stream.getTracks().forEach(function(track) {\\r\\n              var event = new Event('track');\\r\\n              event.track = track;\\r\\n              event.receiver = {track: track};\\r\\n              event.transceiver = {receiver: event.receiver};\\r\\n              event.streams = [e.stream];\\r\\n              this.dispatchEvent(event);\\r\\n            }.bind(this));\\r\\n          }.bind(this));\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n    if (typeof window === 'object' && window.RTCTrackEvent &&\\r\\n        ('receiver' in window.RTCTrackEvent.prototype) &&\\r\\n        !('transceiver' in window.RTCTrackEvent.prototype)) {\\r\\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\\r\\n        get: function() {\\r\\n          return {receiver: this.receiver};\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n  },\\r\\n\\r\\n  shimSourceObject: function(window) {\\r\\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\\r\\n    if (typeof window === 'object') {\\r\\n      if (window.HTMLMediaElement &&\\r\\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\\r\\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\\r\\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\\r\\n          get: function() {\\r\\n            return this.mozSrcObject;\\r\\n          },\\r\\n          set: function(stream) {\\r\\n            this.mozSrcObject = stream;\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  },\\r\\n\\r\\n  shimPeerConnection: function(window) {\\r\\n    var browserDetails = utils.detectBrowser(window);\\r\\n\\r\\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\\r\\n        window.mozRTCPeerConnection)) {\\r\\n      return; // probably media.peerconnection.enabled=false in about:config\\r\\n    }\\r\\n    // The RTCPeerConnection object.\\r\\n    if (!window.RTCPeerConnection) {\\r\\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\\r\\n        if (browserDetails.version < 38) {\\r\\n          // .urls is not supported in FF < 38.\\r\\n          // create RTCIceServers with a single url.\\r\\n          if (pcConfig && pcConfig.iceServers) {\\r\\n            var newIceServers = [];\\r\\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\\r\\n              var server = pcConfig.iceServers[i];\\r\\n              if (server.hasOwnProperty('urls')) {\\r\\n                for (var j = 0; j < server.urls.length; j++) {\\r\\n                  var newServer = {\\r\\n                    url: server.urls[j]\\r\\n                  };\\r\\n                  if (server.urls[j].indexOf('turn') === 0) {\\r\\n                    newServer.username = server.username;\\r\\n                    newServer.credential = server.credential;\\r\\n                  }\\r\\n                  newIceServers.push(newServer);\\r\\n                }\\r\\n              } else {\\r\\n                newIceServers.push(pcConfig.iceServers[i]);\\r\\n              }\\r\\n            }\\r\\n            pcConfig.iceServers = newIceServers;\\r\\n          }\\r\\n        }\\r\\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\\r\\n      };\\r\\n      window.RTCPeerConnection.prototype =\\r\\n          window.mozRTCPeerConnection.prototype;\\r\\n\\r\\n      // wrap static methods. Currently just generateCertificate.\\r\\n      if (window.mozRTCPeerConnection.generateCertificate) {\\r\\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\\r\\n          get: function() {\\r\\n            return window.mozRTCPeerConnection.generateCertificate;\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n\\r\\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\\r\\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\\r\\n    }\\r\\n\\r\\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\\r\\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\\r\\n        .forEach(function(method) {\\r\\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\\r\\n          window.RTCPeerConnection.prototype[method] = function() {\\r\\n            arguments[0] = new ((method === 'addIceCandidate') ?\\r\\n                window.RTCIceCandidate :\\r\\n                window.RTCSessionDescription)(arguments[0]);\\r\\n            return nativeMethod.apply(this, arguments);\\r\\n          };\\r\\n        });\\r\\n\\r\\n    // support for addIceCandidate(null or undefined)\\r\\n    var nativeAddIceCandidate =\\r\\n        window.RTCPeerConnection.prototype.addIceCandidate;\\r\\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\\r\\n      if (!arguments[0]) {\\r\\n        if (arguments[1]) {\\r\\n          arguments[1].apply(null);\\r\\n        }\\r\\n        return Promise.resolve();\\r\\n      }\\r\\n      return nativeAddIceCandidate.apply(this, arguments);\\r\\n    };\\r\\n\\r\\n    // shim getStats with maplike support\\r\\n    var makeMapStats = function(stats) {\\r\\n      var map = new Map();\\r\\n      Object.keys(stats).forEach(function(key) {\\r\\n        map.set(key, stats[key]);\\r\\n        map[key] = stats[key];\\r\\n      });\\r\\n      return map;\\r\\n    };\\r\\n\\r\\n    var modernStatsTypes = {\\r\\n      inboundrtp: 'inbound-rtp',\\r\\n      outboundrtp: 'outbound-rtp',\\r\\n      candidatepair: 'candidate-pair',\\r\\n      localcandidate: 'local-candidate',\\r\\n      remotecandidate: 'remote-candidate'\\r\\n    };\\r\\n\\r\\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\\r\\n    window.RTCPeerConnection.prototype.getStats = function(\\r\\n      selector,\\r\\n      onSucc,\\r\\n      onErr\\r\\n    ) {\\r\\n      return nativeGetStats.apply(this, [selector || null])\\r\\n        .then(function(stats) {\\r\\n          if (browserDetails.version < 48) {\\r\\n            stats = makeMapStats(stats);\\r\\n          }\\r\\n          if (browserDetails.version < 53 && !onSucc) {\\r\\n            // Shim only promise getStats with spec-hyphens in type names\\r\\n            // Leave callback version alone; misc old uses of forEach before Map\\r\\n            try {\\r\\n              stats.forEach(function(stat) {\\r\\n                stat.type = modernStatsTypes[stat.type] || stat.type;\\r\\n              });\\r\\n            } catch (e) {\\r\\n              if (e.name !== 'TypeError') {\\r\\n                throw e;\\r\\n              }\\r\\n              // Avoid TypeError: \\\"type\\\" is read-only, in old versions. 34-43ish\\r\\n              stats.forEach(function(stat, i) {\\r\\n                stats.set(i, Object.assign({}, stat, {\\r\\n                  type: modernStatsTypes[stat.type] || stat.type\\r\\n                }));\\r\\n              });\\r\\n            }\\r\\n          }\\r\\n          return stats;\\r\\n        })\\r\\n        .then(onSucc, onErr);\\r\\n    };\\r\\n  }\\r\\n};\\r\\n\\r\\n// Expose public methods.\\r\\nmodule.exports = {\\r\\n  shimOnTrack: firefoxShim.shimOnTrack,\\r\\n  shimSourceObject: firefoxShim.shimSourceObject,\\r\\n  shimPeerConnection: firefoxShim.shimPeerConnection,\\r\\n  shimGetUserMedia: require('./getusermedia')\\r\\n};\\r\\n\",\"/*\\r\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n /* eslint-env node */\\r\\n'use strict';\\r\\n\\r\\nvar utils = require('../utils');\\r\\nvar logging = utils.log;\\r\\n\\r\\n// Expose public methods.\\r\\nmodule.exports = function(window) {\\r\\n  var browserDetails = utils.detectBrowser(window);\\r\\n  var navigator = window && window.navigator;\\r\\n  var MediaStreamTrack = window && window.MediaStreamTrack;\\r\\n\\r\\n  var shimError_ = function(e) {\\r\\n    return {\\r\\n      name: {\\r\\n        InternalError: 'NotReadableError',\\r\\n        NotSupportedError: 'TypeError',\\r\\n        PermissionDeniedError: 'NotAllowedError',\\r\\n        SecurityError: 'NotAllowedError'\\r\\n      }[e.name] || e.name,\\r\\n      message: {\\r\\n        'The operation is insecure.': 'The request is not allowed by the ' +\\r\\n        'user agent or the platform in the current context.'\\r\\n      }[e.message] || e.message,\\r\\n      constraint: e.constraint,\\r\\n      toString: function() {\\r\\n        return this.name + (this.message && ': ') + this.message;\\r\\n      }\\r\\n    };\\r\\n  };\\r\\n\\r\\n  // getUserMedia constraints shim.\\r\\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\\r\\n    var constraintsToFF37_ = function(c) {\\r\\n      if (typeof c !== 'object' || c.require) {\\r\\n        return c;\\r\\n      }\\r\\n      var require = [];\\r\\n      Object.keys(c).forEach(function(key) {\\r\\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\\r\\n          return;\\r\\n        }\\r\\n        var r = c[key] = (typeof c[key] === 'object') ?\\r\\n            c[key] : {ideal: c[key]};\\r\\n        if (r.min !== undefined ||\\r\\n            r.max !== undefined || r.exact !== undefined) {\\r\\n          require.push(key);\\r\\n        }\\r\\n        if (r.exact !== undefined) {\\r\\n          if (typeof r.exact === 'number') {\\r\\n            r. min = r.max = r.exact;\\r\\n          } else {\\r\\n            c[key] = r.exact;\\r\\n          }\\r\\n          delete r.exact;\\r\\n        }\\r\\n        if (r.ideal !== undefined) {\\r\\n          c.advanced = c.advanced || [];\\r\\n          var oc = {};\\r\\n          if (typeof r.ideal === 'number') {\\r\\n            oc[key] = {min: r.ideal, max: r.ideal};\\r\\n          } else {\\r\\n            oc[key] = r.ideal;\\r\\n          }\\r\\n          c.advanced.push(oc);\\r\\n          delete r.ideal;\\r\\n          if (!Object.keys(r).length) {\\r\\n            delete c[key];\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n      if (require.length) {\\r\\n        c.require = require;\\r\\n      }\\r\\n      return c;\\r\\n    };\\r\\n    constraints = JSON.parse(JSON.stringify(constraints));\\r\\n    if (browserDetails.version < 38) {\\r\\n      logging('spec: ' + JSON.stringify(constraints));\\r\\n      if (constraints.audio) {\\r\\n        constraints.audio = constraintsToFF37_(constraints.audio);\\r\\n      }\\r\\n      if (constraints.video) {\\r\\n        constraints.video = constraintsToFF37_(constraints.video);\\r\\n      }\\r\\n      logging('ff37: ' + JSON.stringify(constraints));\\r\\n    }\\r\\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\\r\\n      onError(shimError_(e));\\r\\n    });\\r\\n  };\\r\\n\\r\\n  // Returns the result of getUserMedia as a Promise.\\r\\n  var getUserMediaPromise_ = function(constraints) {\\r\\n    return new Promise(function(resolve, reject) {\\r\\n      getUserMedia_(constraints, resolve, reject);\\r\\n    });\\r\\n  };\\r\\n\\r\\n  // Shim for mediaDevices on older versions.\\r\\n  if (!navigator.mediaDevices) {\\r\\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\\r\\n      addEventListener: function() { },\\r\\n      removeEventListener: function() { }\\r\\n    };\\r\\n  }\\r\\n  navigator.mediaDevices.enumerateDevices =\\r\\n      navigator.mediaDevices.enumerateDevices || function() {\\r\\n        return new Promise(function(resolve) {\\r\\n          var infos = [\\r\\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\\r\\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\\r\\n          ];\\r\\n          resolve(infos);\\r\\n        });\\r\\n      };\\r\\n\\r\\n  if (browserDetails.version < 41) {\\r\\n    // Work around http://bugzil.la/1169665\\r\\n    var orgEnumerateDevices =\\r\\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\\r\\n    navigator.mediaDevices.enumerateDevices = function() {\\r\\n      return orgEnumerateDevices().then(undefined, function(e) {\\r\\n        if (e.name === 'NotFoundError') {\\r\\n          return [];\\r\\n        }\\r\\n        throw e;\\r\\n      });\\r\\n    };\\r\\n  }\\r\\n  if (browserDetails.version < 49) {\\r\\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\\r\\n        bind(navigator.mediaDevices);\\r\\n    navigator.mediaDevices.getUserMedia = function(c) {\\r\\n      return origGetUserMedia(c).then(function(stream) {\\r\\n        // Work around https://bugzil.la/802326\\r\\n        if (c.audio && !stream.getAudioTracks().length ||\\r\\n            c.video && !stream.getVideoTracks().length) {\\r\\n          stream.getTracks().forEach(function(track) {\\r\\n            track.stop();\\r\\n          });\\r\\n          throw new DOMException('The object can not be found here.',\\r\\n                                 'NotFoundError');\\r\\n        }\\r\\n        return stream;\\r\\n      }, function(e) {\\r\\n        return Promise.reject(shimError_(e));\\r\\n      });\\r\\n    };\\r\\n  }\\r\\n  if (!(browserDetails.version > 55 &&\\r\\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\\r\\n    var remap = function(obj, a, b) {\\r\\n      if (a in obj && !(b in obj)) {\\r\\n        obj[b] = obj[a];\\r\\n        delete obj[a];\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\\r\\n        bind(navigator.mediaDevices);\\r\\n    navigator.mediaDevices.getUserMedia = function(c) {\\r\\n      if (typeof c === 'object' && typeof c.audio === 'object') {\\r\\n        c = JSON.parse(JSON.stringify(c));\\r\\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\\r\\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\\r\\n      }\\r\\n      return nativeGetUserMedia(c);\\r\\n    };\\r\\n\\r\\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\\r\\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\\r\\n      MediaStreamTrack.prototype.getSettings = function() {\\r\\n        var obj = nativeGetSettings.apply(this, arguments);\\r\\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\\r\\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\\r\\n        return obj;\\r\\n      };\\r\\n    }\\r\\n\\r\\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\\r\\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\\r\\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\\r\\n        if (this.kind === 'audio' && typeof c === 'object') {\\r\\n          c = JSON.parse(JSON.stringify(c));\\r\\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\\r\\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\\r\\n        }\\r\\n        return nativeApplyConstraints.apply(this, [c]);\\r\\n      };\\r\\n    }\\r\\n  }\\r\\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\\r\\n    if (browserDetails.version < 44) {\\r\\n      return getUserMedia_(constraints, onSuccess, onError);\\r\\n    }\\r\\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\\r\\n    utils.deprecated('navigator.getUserMedia',\\r\\n        'navigator.mediaDevices.getUserMedia');\\r\\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\\r\\n  };\\r\\n};\\r\\n\",\"/*\\r\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n'use strict';\\r\\nvar utils = require('../utils');\\r\\n\\r\\nvar safariShim = {\\r\\n  // TODO: DrAlex, should be here, double check against LayoutTests\\r\\n\\r\\n  // TODO: once the back-end for the mac port is done, add.\\r\\n  // TODO: check for webkitGTK+\\r\\n  // shimPeerConnection: function() { },\\r\\n\\r\\n  shimLocalStreamsAPI: function(window) {\\r\\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\\r\\n      return;\\r\\n    }\\r\\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\\r\\n      window.RTCPeerConnection.prototype.getLocalStreams = function() {\\r\\n        if (!this._localStreams) {\\r\\n          this._localStreams = [];\\r\\n        }\\r\\n        return this._localStreams;\\r\\n      };\\r\\n    }\\r\\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\\r\\n      window.RTCPeerConnection.prototype.getStreamById = function(id) {\\r\\n        var result = null;\\r\\n        if (this._localStreams) {\\r\\n          this._localStreams.forEach(function(stream) {\\r\\n            if (stream.id === id) {\\r\\n              result = stream;\\r\\n            }\\r\\n          });\\r\\n        }\\r\\n        if (this._remoteStreams) {\\r\\n          this._remoteStreams.forEach(function(stream) {\\r\\n            if (stream.id === id) {\\r\\n              result = stream;\\r\\n            }\\r\\n          });\\r\\n        }\\r\\n        return result;\\r\\n      };\\r\\n    }\\r\\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\\r\\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\\r\\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\\r\\n        if (!this._localStreams) {\\r\\n          this._localStreams = [];\\r\\n        }\\r\\n        if (this._localStreams.indexOf(stream) === -1) {\\r\\n          this._localStreams.push(stream);\\r\\n        }\\r\\n        var self = this;\\r\\n        stream.getTracks().forEach(function(track) {\\r\\n          _addTrack.call(self, track, stream);\\r\\n        });\\r\\n      };\\r\\n\\r\\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\\r\\n        if (stream) {\\r\\n          if (!this._localStreams) {\\r\\n            this._localStreams = [stream];\\r\\n          } else if (this._localStreams.indexOf(stream) === -1) {\\r\\n            this._localStreams.push(stream);\\r\\n          }\\r\\n        }\\r\\n        _addTrack.call(this, track, stream);\\r\\n      };\\r\\n    }\\r\\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\\r\\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\\r\\n        if (!this._localStreams) {\\r\\n          this._localStreams = [];\\r\\n        }\\r\\n        var index = this._localStreams.indexOf(stream);\\r\\n        if (index === -1) {\\r\\n          return;\\r\\n        }\\r\\n        this._localStreams.splice(index, 1);\\r\\n        var self = this;\\r\\n        var tracks = stream.getTracks();\\r\\n        this.getSenders().forEach(function(sender) {\\r\\n          if (tracks.indexOf(sender.track) !== -1) {\\r\\n            self.removeTrack(sender);\\r\\n          }\\r\\n        });\\r\\n      };\\r\\n    }\\r\\n  },\\r\\n  shimRemoteStreamsAPI: function(window) {\\r\\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\\r\\n      return;\\r\\n    }\\r\\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\\r\\n      window.RTCPeerConnection.prototype.getRemoteStreams = function() {\\r\\n        return this._remoteStreams ? this._remoteStreams : [];\\r\\n      };\\r\\n    }\\r\\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\\r\\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\\r\\n        get: function() {\\r\\n          return this._onaddstream;\\r\\n        },\\r\\n        set: function(f) {\\r\\n          if (this._onaddstream) {\\r\\n            this.removeEventListener('addstream', this._onaddstream);\\r\\n            this.removeEventListener('track', this._onaddstreampoly);\\r\\n          }\\r\\n          this.addEventListener('addstream', this._onaddstream = f);\\r\\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\\r\\n            var stream = e.streams[0];\\r\\n            if (!this._remoteStreams) {\\r\\n              this._remoteStreams = [];\\r\\n            }\\r\\n            if (this._remoteStreams.indexOf(stream) >= 0) {\\r\\n              return;\\r\\n            }\\r\\n            this._remoteStreams.push(stream);\\r\\n            var event = new Event('addstream');\\r\\n            event.stream = e.streams[0];\\r\\n            this.dispatchEvent(event);\\r\\n          }.bind(this));\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n  },\\r\\n  shimCallbacksAPI: function(window) {\\r\\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\\r\\n      return;\\r\\n    }\\r\\n    var prototype = window.RTCPeerConnection.prototype;\\r\\n    var createOffer = prototype.createOffer;\\r\\n    var createAnswer = prototype.createAnswer;\\r\\n    var setLocalDescription = prototype.setLocalDescription;\\r\\n    var setRemoteDescription = prototype.setRemoteDescription;\\r\\n    var addIceCandidate = prototype.addIceCandidate;\\r\\n\\r\\n    prototype.createOffer = function(successCallback, failureCallback) {\\r\\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\\r\\n      var promise = createOffer.apply(this, [options]);\\r\\n      if (!failureCallback) {\\r\\n        return promise;\\r\\n      }\\r\\n      promise.then(successCallback, failureCallback);\\r\\n      return Promise.resolve();\\r\\n    };\\r\\n\\r\\n    prototype.createAnswer = function(successCallback, failureCallback) {\\r\\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\\r\\n      var promise = createAnswer.apply(this, [options]);\\r\\n      if (!failureCallback) {\\r\\n        return promise;\\r\\n      }\\r\\n      promise.then(successCallback, failureCallback);\\r\\n      return Promise.resolve();\\r\\n    };\\r\\n\\r\\n    var withCallback = function(description, successCallback, failureCallback) {\\r\\n      var promise = setLocalDescription.apply(this, [description]);\\r\\n      if (!failureCallback) {\\r\\n        return promise;\\r\\n      }\\r\\n      promise.then(successCallback, failureCallback);\\r\\n      return Promise.resolve();\\r\\n    };\\r\\n    prototype.setLocalDescription = withCallback;\\r\\n\\r\\n    withCallback = function(description, successCallback, failureCallback) {\\r\\n      var promise = setRemoteDescription.apply(this, [description]);\\r\\n      if (!failureCallback) {\\r\\n        return promise;\\r\\n      }\\r\\n      promise.then(successCallback, failureCallback);\\r\\n      return Promise.resolve();\\r\\n    };\\r\\n    prototype.setRemoteDescription = withCallback;\\r\\n\\r\\n    withCallback = function(candidate, successCallback, failureCallback) {\\r\\n      var promise = addIceCandidate.apply(this, [candidate]);\\r\\n      if (!failureCallback) {\\r\\n        return promise;\\r\\n      }\\r\\n      promise.then(successCallback, failureCallback);\\r\\n      return Promise.resolve();\\r\\n    };\\r\\n    prototype.addIceCandidate = withCallback;\\r\\n  },\\r\\n  shimGetUserMedia: function(window) {\\r\\n    var navigator = window && window.navigator;\\r\\n\\r\\n    if (!navigator.getUserMedia) {\\r\\n      if (navigator.webkitGetUserMedia) {\\r\\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\\r\\n      } else if (navigator.mediaDevices &&\\r\\n          navigator.mediaDevices.getUserMedia) {\\r\\n        navigator.getUserMedia = function(constraints, cb, errcb) {\\r\\n          navigator.mediaDevices.getUserMedia(constraints)\\r\\n          .then(cb, errcb);\\r\\n        }.bind(navigator);\\r\\n      }\\r\\n    }\\r\\n  },\\r\\n  shimRTCIceServerUrls: function(window) {\\r\\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\\r\\n    var OrigPeerConnection = window.RTCPeerConnection;\\r\\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\\r\\n      if (pcConfig && pcConfig.iceServers) {\\r\\n        var newIceServers = [];\\r\\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\\r\\n          var server = pcConfig.iceServers[i];\\r\\n          if (!server.hasOwnProperty('urls') &&\\r\\n              server.hasOwnProperty('url')) {\\r\\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\\r\\n            server = JSON.parse(JSON.stringify(server));\\r\\n            server.urls = server.url;\\r\\n            delete server.url;\\r\\n            newIceServers.push(server);\\r\\n          } else {\\r\\n            newIceServers.push(pcConfig.iceServers[i]);\\r\\n          }\\r\\n        }\\r\\n        pcConfig.iceServers = newIceServers;\\r\\n      }\\r\\n      return new OrigPeerConnection(pcConfig, pcConstraints);\\r\\n    };\\r\\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\\r\\n    // wrap static methods. Currently just generateCertificate.\\r\\n    if ('generateCertificate' in window.RTCPeerConnection) {\\r\\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\\r\\n        get: function() {\\r\\n          return OrigPeerConnection.generateCertificate;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n  },\\r\\n  shimTrackEventTransceiver: function(window) {\\r\\n    // Add event.transceiver member over deprecated event.receiver\\r\\n    if (typeof window === 'object' && window.RTCPeerConnection &&\\r\\n        ('receiver' in window.RTCTrackEvent.prototype) &&\\r\\n        // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\\r\\n        // defined for some reason even when window.RTCTransceiver is not.\\r\\n        !window.RTCTransceiver) {\\r\\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\\r\\n        get: function() {\\r\\n          return {receiver: this.receiver};\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n  },\\r\\n\\r\\n  shimCreateOfferLegacy: function(window) {\\r\\n    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\\r\\n    window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\\r\\n      var pc = this;\\r\\n      if (offerOptions) {\\r\\n        var audioTransceiver = pc.getTransceivers().find(function(transceiver) {\\r\\n          return transceiver.sender.track &&\\r\\n              transceiver.sender.track.kind === 'audio';\\r\\n        });\\r\\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\\r\\n          if (audioTransceiver.direction === 'sendrecv') {\\r\\n            audioTransceiver.setDirection('sendonly');\\r\\n          } else if (audioTransceiver.direction === 'recvonly') {\\r\\n            audioTransceiver.setDirection('inactive');\\r\\n          }\\r\\n        } else if (offerOptions.offerToReceiveAudio === true &&\\r\\n            !audioTransceiver) {\\r\\n          pc.addTransceiver('audio');\\r\\n        }\\r\\n\\r\\n        var videoTransceiver = pc.getTransceivers().find(function(transceiver) {\\r\\n          return transceiver.sender.track &&\\r\\n              transceiver.sender.track.kind === 'video';\\r\\n        });\\r\\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\\r\\n          if (videoTransceiver.direction === 'sendrecv') {\\r\\n            videoTransceiver.setDirection('sendonly');\\r\\n          } else if (videoTransceiver.direction === 'recvonly') {\\r\\n            videoTransceiver.setDirection('inactive');\\r\\n          }\\r\\n        } else if (offerOptions.offerToReceiveVideo === true &&\\r\\n            !videoTransceiver) {\\r\\n          pc.addTransceiver('video');\\r\\n        }\\r\\n      }\\r\\n      return origCreateOffer.apply(pc, arguments);\\r\\n    };\\r\\n  }\\r\\n};\\r\\n\\r\\n// Expose public methods.\\r\\nmodule.exports = {\\r\\n  shimCallbacksAPI: safariShim.shimCallbacksAPI,\\r\\n  shimLocalStreamsAPI: safariShim.shimLocalStreamsAPI,\\r\\n  shimRemoteStreamsAPI: safariShim.shimRemoteStreamsAPI,\\r\\n  shimGetUserMedia: safariShim.shimGetUserMedia,\\r\\n  shimRTCIceServerUrls: safariShim.shimRTCIceServerUrls,\\r\\n  shimTrackEventTransceiver: safariShim.shimTrackEventTransceiver,\\r\\n  shimCreateOfferLegacy: safariShim.shimCreateOfferLegacy\\r\\n  // TODO\\r\\n  // shimPeerConnection: safariShim.shimPeerConnection\\r\\n};\\r\\n\",\"/*\\r\\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\\r\\n *\\r\\n *  Use of this source code is governed by a BSD-style license\\r\\n *  that can be found in the LICENSE file in the root of the source\\r\\n *  tree.\\r\\n */\\r\\n /* eslint-env node */\\r\\n'use strict';\\r\\n\\r\\nvar SDPUtils = require('sdp');\\r\\nvar utils = require('./utils');\\r\\n\\r\\n// Wraps the peerconnection event eventNameToWrap in a function\\r\\n// which returns the modified event object.\\r\\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\\r\\n  if (!window.RTCPeerConnection) {\\r\\n    return;\\r\\n  }\\r\\n  var proto = window.RTCPeerConnection.prototype;\\r\\n  var nativeAddEventListener = proto.addEventListener;\\r\\n  proto.addEventListener = function(nativeEventName, cb) {\\r\\n    if (nativeEventName !== eventNameToWrap) {\\r\\n      return nativeAddEventListener.apply(this, arguments);\\r\\n    }\\r\\n    var wrappedCallback = function(e) {\\r\\n      cb(wrapper(e));\\r\\n    };\\r\\n    this._eventMap = this._eventMap || {};\\r\\n    this._eventMap[cb] = wrappedCallback;\\r\\n    return nativeAddEventListener.apply(this, [nativeEventName,\\r\\n      wrappedCallback]);\\r\\n  };\\r\\n\\r\\n  var nativeRemoveEventListener = proto.removeEventListener;\\r\\n  proto.removeEventListener = function(nativeEventName, cb) {\\r\\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\\r\\n        || !this._eventMap[cb]) {\\r\\n      return nativeRemoveEventListener.apply(this, arguments);\\r\\n    }\\r\\n    var unwrappedCb = this._eventMap[cb];\\r\\n    delete this._eventMap[cb];\\r\\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\\r\\n      unwrappedCb]);\\r\\n  };\\r\\n\\r\\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\\r\\n    get: function() {\\r\\n      return this['_on' + eventNameToWrap];\\r\\n    },\\r\\n    set: function(cb) {\\r\\n      if (this['_on' + eventNameToWrap]) {\\r\\n        this.removeEventListener(eventNameToWrap,\\r\\n            this['_on' + eventNameToWrap]);\\r\\n        delete this['_on' + eventNameToWrap];\\r\\n      }\\r\\n      if (cb) {\\r\\n        this.addEventListener(eventNameToWrap,\\r\\n            this['_on' + eventNameToWrap] = cb);\\r\\n      }\\r\\n    }\\r\\n  });\\r\\n}\\r\\n\\r\\nmodule.exports = {\\r\\n  shimRTCIceCandidate: function(window) {\\r\\n    // foundation is arbitrarily chosen as an indicator for full support for\\r\\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\\r\\n    if (window.RTCIceCandidate && 'foundation' in\\r\\n        window.RTCIceCandidate.prototype) {\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    var NativeRTCIceCandidate = window.RTCIceCandidate;\\r\\n    window.RTCIceCandidate = function(args) {\\r\\n      // Remove the a= which shouldn't be part of the candidate string.\\r\\n      if (typeof args === 'object' && args.candidate &&\\r\\n          args.candidate.indexOf('a=') === 0) {\\r\\n        args = JSON.parse(JSON.stringify(args));\\r\\n        args.candidate = args.candidate.substr(2);\\r\\n      }\\r\\n\\r\\n      // Augment the native candidate with the parsed fields.\\r\\n      var nativeCandidate = new NativeRTCIceCandidate(args);\\r\\n      var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\\r\\n      var augmentedCandidate = Object.assign(nativeCandidate,\\r\\n          parsedCandidate);\\r\\n\\r\\n      // Add a serializer that does not serialize the extra attributes.\\r\\n      augmentedCandidate.toJSON = function() {\\r\\n        return {\\r\\n          candidate: augmentedCandidate.candidate,\\r\\n          sdpMid: augmentedCandidate.sdpMid,\\r\\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\\r\\n          usernameFragment: augmentedCandidate.usernameFragment,\\r\\n        };\\r\\n      };\\r\\n      return augmentedCandidate;\\r\\n    };\\r\\n\\r\\n    // Hook up the augmented candidate in onicecandidate and\\r\\n    // addEventListener('icecandidate', ...)\\r\\n    wrapPeerConnectionEvent(window, 'icecandidate', function(e) {\\r\\n      if (e.candidate) {\\r\\n        Object.defineProperty(e, 'candidate', {\\r\\n          value: new window.RTCIceCandidate(e.candidate),\\r\\n          writable: 'false'\\r\\n        });\\r\\n      }\\r\\n      return e;\\r\\n    });\\r\\n  },\\r\\n\\r\\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\\r\\n\\r\\n  shimCreateObjectURL: function(window) {\\r\\n    var URL = window && window.URL;\\r\\n\\r\\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\\r\\n          'srcObject' in window.HTMLMediaElement.prototype &&\\r\\n        URL.createObjectURL && URL.revokeObjectURL)) {\\r\\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\\r\\n      return undefined;\\r\\n    }\\r\\n\\r\\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\\r\\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\\r\\n    var streams = new Map(), newId = 0;\\r\\n\\r\\n    URL.createObjectURL = function(stream) {\\r\\n      if ('getTracks' in stream) {\\r\\n        var url = 'polyblob:' + (++newId);\\r\\n        streams.set(url, stream);\\r\\n        utils.deprecated('URL.createObjectURL(stream)',\\r\\n            'elem.srcObject = stream');\\r\\n        return url;\\r\\n      }\\r\\n      return nativeCreateObjectURL(stream);\\r\\n    };\\r\\n    URL.revokeObjectURL = function(url) {\\r\\n      nativeRevokeObjectURL(url);\\r\\n      streams.delete(url);\\r\\n    };\\r\\n\\r\\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\\r\\n                                              'src');\\r\\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\\r\\n      get: function() {\\r\\n        return dsc.get.apply(this);\\r\\n      },\\r\\n      set: function(url) {\\r\\n        this.srcObject = streams.get(url) || null;\\r\\n        return dsc.set.apply(this, [url]);\\r\\n      }\\r\\n    });\\r\\n\\r\\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\\r\\n    window.HTMLMediaElement.prototype.setAttribute = function() {\\r\\n      if (arguments.length === 2 &&\\r\\n          ('' + arguments[0]).toLowerCase() === 'src') {\\r\\n        this.srcObject = streams.get(arguments[1]) || null;\\r\\n      }\\r\\n      return nativeSetAttribute.apply(this, arguments);\\r\\n    };\\r\\n  }\\r\\n};\\r\\n\",\"var toIntIfInt = function (v) {\\n  return String(Number(v)) === v ? Number(v) : v;\\n};\\n\\nvar attachProperties = function (match, location, names, rawName) {\\n  if (rawName && !names) {\\n    location[rawName] = toIntIfInt(match[1]);\\n  }\\n  else {\\n    for (var i = 0; i < names.length; i += 1) {\\n      if (match[i+1] != null) {\\n        location[names[i]] = toIntIfInt(match[i+1]);\\n      }\\n    }\\n  }\\n};\\n\\nvar parseReg = function (obj, location, content) {\\n  var needsBlank = obj.name && obj.names;\\n  if (obj.push && !location[obj.push]) {\\n    location[obj.push] = [];\\n  }\\n  else if (needsBlank && !location[obj.name]) {\\n    location[obj.name] = {};\\n  }\\n  var keyLocation = obj.push ?\\n    {} :  // blank object that will be pushed\\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\\n\\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\\n\\n  if (obj.push) {\\n    location[obj.push].push(keyLocation);\\n  }\\n};\\n\\nvar grammar = require('./grammar');\\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\\n\\nexports.parse = function (sdp) {\\n  var session = {}\\n    , media = []\\n    , location = session; // points at where properties go under (one of the above)\\n\\n  // parse lines we understand\\n  sdp.split(/(\\\\r\\\\n|\\\\r|\\\\n)/).filter(validLine).forEach(function (l) {\\n    var type = l[0];\\n    var content = l.slice(2);\\n    if (type === 'm') {\\n      media.push({rtp: [], fmtp: []});\\n      location = media[media.length-1]; // point at latest media line\\n    }\\n\\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\\n      var obj = grammar[type][j];\\n      if (obj.reg.test(content)) {\\n        return parseReg(obj, location, content);\\n      }\\n    }\\n  });\\n\\n  session.media = media; // link it up\\n  return session;\\n};\\n\\nvar paramReducer = function (acc, expr) {\\n  var s = expr.split(/=(.+)/, 2);\\n  if (s.length === 2) {\\n    acc[s[0]] = toIntIfInt(s[1]);\\n  }\\n  return acc;\\n};\\n\\nexports.parseParams = function (str) {\\n  return str.split(/\\\\;\\\\s?/).reduce(paramReducer, {});\\n};\\n\\n// For backward compatibility - alias will be removed in 3.0.0\\nexports.parseFmtpConfig = exports.parseParams;\\n\\nexports.parsePayloads = function (str) {\\n  return str.split(' ').map(Number);\\n};\\n\\nexports.parseRemoteCandidates = function (str) {\\n  var candidates = [];\\n  var parts = str.split(' ').map(toIntIfInt);\\n  for (var i = 0; i < parts.length; i += 3) {\\n    candidates.push({\\n      component: parts[i],\\n      ip: parts[i + 1],\\n      port: parts[i + 2]\\n    });\\n  }\\n  return candidates;\\n};\\n\\nexports.parseImageAttributes = function (str) {\\n  return str.split(' ').map(function (item) {\\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\\n  });\\n};\\n\\nexports.parseSimulcastStreamList = function (str) {\\n  return str.split(';').map(function (stream) {\\n    return stream.split(',').map(function (format) {\\n      var scid, paused = false;\\n\\n      if (format[0] !== '~') {\\n        scid = toIntIfInt(format);\\n      } else {\\n        scid = toIntIfInt(format.substring(1, format.length));\\n        paused = true;\\n      }\\n\\n      return {\\n        scid: scid,\\n        paused: paused\\n      };\\n    });\\n  });\\n};\\n\",\"var grammar = require('./grammar');\\n\\n// customized util.format - discards excess arguments and can void middle ones\\nvar formatRegExp = /%[sdv%]/g;\\nvar format = function (formatStr) {\\n  var i = 1;\\n  var args = arguments;\\n  var len = args.length;\\n  return formatStr.replace(formatRegExp, function (x) {\\n    if (i >= len) {\\n      return x; // missing argument\\n    }\\n    var arg = args[i];\\n    i += 1;\\n    switch (x) {\\n    case '%%':\\n      return '%';\\n    case '%s':\\n      return String(arg);\\n    case '%d':\\n      return Number(arg);\\n    case '%v':\\n      return '';\\n    }\\n  });\\n  // NB: we discard excess arguments - they are typically undefined from makeLine\\n};\\n\\nvar makeLine = function (type, obj, location) {\\n  var str = obj.format instanceof Function ?\\n    (obj.format(obj.push ? location : location[obj.name])) :\\n    obj.format;\\n\\n  var args = [type + '=' + str];\\n  if (obj.names) {\\n    for (var i = 0; i < obj.names.length; i += 1) {\\n      var n = obj.names[i];\\n      if (obj.name) {\\n        args.push(location[obj.name][n]);\\n      }\\n      else { // for mLine and push attributes\\n        args.push(location[obj.names[i]]);\\n      }\\n    }\\n  }\\n  else {\\n    args.push(location[obj.name]);\\n  }\\n  return format.apply(null, args);\\n};\\n\\n// RFC specified order\\n// TODO: extend this with all the rest\\nvar defaultOuterOrder = [\\n  'v', 'o', 's', 'i',\\n  'u', 'e', 'p', 'c',\\n  'b', 't', 'r', 'z', 'a'\\n];\\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\\n\\n\\nmodule.exports = function (session, opts) {\\n  opts = opts || {};\\n  // ensure certain properties exist\\n  if (session.version == null) {\\n    session.version = 0; // 'v=0' must be there (only defined version atm)\\n  }\\n  if (session.name == null) {\\n    session.name = ' '; // 's= ' must be there if no meaningful name set\\n  }\\n  session.media.forEach(function (mLine) {\\n    if (mLine.payloads == null) {\\n      mLine.payloads = '';\\n    }\\n  });\\n\\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\\n  var sdp = [];\\n\\n  // loop through outerOrder for matching properties on session\\n  outerOrder.forEach(function (type) {\\n    grammar[type].forEach(function (obj) {\\n      if (obj.name in session && session[obj.name] != null) {\\n        sdp.push(makeLine(type, obj, session));\\n      }\\n      else if (obj.push in session && session[obj.push] != null) {\\n        session[obj.push].forEach(function (el) {\\n          sdp.push(makeLine(type, obj, el));\\n        });\\n      }\\n    });\\n  });\\n\\n  // then for each media line, follow the innerOrder\\n  session.media.forEach(function (mLine) {\\n    sdp.push(makeLine('m', grammar.m[0], mLine));\\n\\n    innerOrder.forEach(function (type) {\\n      grammar[type].forEach(function (obj) {\\n        if (obj.name in mLine && mLine[obj.name] != null) {\\n          sdp.push(makeLine(type, obj, mLine));\\n        }\\n        else if (obj.push in mLine && mLine[obj.push] != null) {\\n          mLine[obj.push].forEach(function (el) {\\n            sdp.push(makeLine(type, obj, el));\\n          });\\n        }\\n      });\\n    });\\n  });\\n\\n  return sdp.join('\\\\r\\\\n') + '\\\\r\\\\n';\\n};\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nexports.Interop = require('./interop');\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/* global RTCSessionDescription */\\n/* global RTCIceCandidate */\\n/* jshint -W097 */\\n\\\"use strict\\\";\\n\\nvar transform = require('./transform');\\nvar arrayEquals = require('./array-equals');\\n\\n/**\\n * Unified Plan mids may be parsed as integers\\n */\\nfunction midToString(line) {\\n    if (typeof line.mid === 'number') {\\n        line.mid = line.mid.toString();\\n    }\\n}\\n\\n\\nfunction Interop() {\\n\\n    /**\\n     * This map holds the most recent Unified Plan offer/answer SDP that was\\n     * converted to Plan B, with the SDP type ('offer' or 'answer') as keys and\\n     * the SDP string as values.\\n     *\\n     * @type {{}}\\n     */\\n    this.cache = {\\n        mlB2UMap : {},\\n        mlU2BMap : {}\\n    };\\n}\\n\\nmodule.exports = Interop;\\n\\n/**\\n * Changes the candidate args to match with the related Unified Plan\\n */\\nInterop.prototype.candidateToUnifiedPlan = function(candidate) {\\n    var cand = new RTCIceCandidate(candidate);\\n\\n    cand.sdpMLineIndex = this.cache.mlB2UMap[cand.sdpMLineIndex];\\n    /* TODO: change sdpMid to (audio|video)-SSRC */\\n\\n    return cand;\\n};\\n\\n/**\\n * Changes the candidate args to match with the related Plan B\\n */\\nInterop.prototype.candidateToPlanB = function(candidate) {\\n    var cand = new RTCIceCandidate(candidate);\\n\\n    if (cand.sdpMid.indexOf('audio') === 0) {\\n      cand.sdpMid = 'audio';\\n    } else if (cand.sdpMid.indexOf('video') === 0) {\\n      cand.sdpMid = 'video';\\n    } else {\\n      throw new Error('candidate with ' + cand.sdpMid + ' not allowed');\\n    }\\n\\n    cand.sdpMLineIndex = this.cache.mlU2BMap[cand.sdpMLineIndex];\\n\\n    return cand;\\n};\\n\\n/**\\n * Returns the index of the first m-line with the given media type and with a\\n * direction which allows sending, in the last Unified Plan description with\\n * type \\\"answer\\\" converted to Plan B. Returns {null} if there is no saved\\n * answer, or if none of its m-lines with the given type allow sending.\\n * @param type the media type (\\\"audio\\\" or \\\"video\\\").\\n * @returns {*}\\n */\\nInterop.prototype.getFirstSendingIndexFromAnswer = function(type) {\\n    if (!this.cache.answer) {\\n        return null;\\n    }\\n\\n    var session = transform.parse(this.cache.answer);\\n    if (session && session.media && Array.isArray(session.media)){\\n        for (var i = 0; i < session.media.length; i++) {\\n            if (session.media[i].type == type &&\\n                (!session.media[i].direction /* default to sendrecv */ ||\\n                    session.media[i].direction === 'sendrecv' ||\\n                    session.media[i].direction === 'sendonly')){\\n                return i;\\n            }\\n        }\\n    }\\n\\n    return null;\\n};\\n\\n/**\\n * This method transforms a Unified Plan SDP to an equivalent Plan B SDP. A\\n * PeerConnection wrapper transforms the SDP to Plan B before passing it to the\\n * application.\\n *\\n * @param desc\\n * @returns {*}\\n */\\nInterop.prototype.toPlanB = function(desc) {\\n    var self = this;\\n    //#region Preliminary input validation.\\n\\n    if (typeof desc !== 'object' || desc === null ||\\n        typeof desc.sdp !== 'string') {\\n        console.warn('An empty description was passed as an argument.');\\n        return desc;\\n    }\\n\\n    // Objectify the SDP for easier manipulation.\\n    var session = transform.parse(desc.sdp);\\n\\n    // If the SDP contains no media, there's nothing to transform.\\n    if (typeof session.media === 'undefined' ||\\n        !Array.isArray(session.media) || session.media.length === 0) {\\n        console.warn('The description has no media.');\\n        return desc;\\n    }\\n\\n    // Try some heuristics to \\\"make sure\\\" this is a Unified Plan SDP. Plan B\\n    // SDP has a video, an audio and a data \\\"channel\\\" at most.\\n    if (session.media.length <= 3 && session.media.every(function(m) {\\n            return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\\n        })) {\\n        console.warn('This description does not look like Unified Plan.');\\n        return desc;\\n    }\\n\\n    //#endregion\\n\\n    // HACK https://bugzilla.mozilla.org/show_bug.cgi?id=1113443\\n    var sdp = desc.sdp;\\n    var rewrite = false;\\n    for (var i = 0; i < session.media.length; i++) {\\n        var uLine = session.media[i];\\n        uLine.rtp.forEach(function(rtp) {\\n            if (rtp.codec === 'NULL')\\n            {\\n                rewrite = true;\\n                var offer = transform.parse(self.cache.offer);\\n                rtp.codec = offer.media[i].rtp[0].codec;\\n            }\\n        });\\n    }\\n    if (rewrite) {\\n        sdp = transform.write(session);\\n    }\\n\\n    // Unified Plan SDP is our \\\"precious\\\". Cache it for later use in the Plan B\\n    // -> Unified Plan transformation.\\n    this.cache[desc.type] = sdp;\\n\\n    //#region Convert from Unified Plan to Plan B.\\n\\n    // We rebuild the session.media array.\\n    var media = session.media;\\n    session.media = [];\\n\\n    // Associative array that maps channel types to channel objects for fast\\n    // access to channel objects by their type, e.g. type2bl['audio']->channel\\n    // obj.\\n    var type2bl = {};\\n\\n    // Used to build the group:BUNDLE value after the channels construction\\n    // loop.\\n    var types = [];\\n\\n    // Used to aggregate the directions of the m-lines.\\n    var directionResult = {};\\n\\n    media.forEach(function(uLine) {\\n        midToString(uLine);\\n        // rtcp-mux is required in the Plan B SDP.\\n        if ((typeof uLine.rtcpMux !== 'string' ||\\n            uLine.rtcpMux !== 'rtcp-mux') &&\\n            uLine.direction !== 'inactive' && uLine.type !== 'application') {\\n            throw new Error('Cannot convert to Plan B because m-lines ' +\\n                'without the rtcp-mux attribute were found.');\\n        }\\n\\n        // If we don't have a channel for this uLine.type OR the selected is\\n        // inactive, then select this uLine as the channel basis.\\n        if (typeof type2bl[uLine.type] === 'undefined' ||\\n            type2bl[uLine.type].direction === 'inactive') {\\n            type2bl[uLine.type] = uLine;\\n        }\\n    });\\n\\n    // Implode the Unified Plan m-lines/tracks into Plan B channels.\\n    media.forEach(function(uLine) {\\n        var type = uLine.type;\\n\\n        if (type === 'application') {\\n            uLine.mid = \\\"data\\\";\\n            session.media.push(uLine);\\n            types.push(uLine.mid);\\n            return;\\n        }\\n\\n        // Add sources to the channel and handle a=msid.\\n        if (typeof uLine.sources === 'object') {\\n            Object.keys(uLine.sources).forEach(function(ssrc) {\\n                if (typeof type2bl[type].sources !== 'object')\\n                    type2bl[type].sources = {};\\n\\n                // Assign the sources to the channel.\\n                type2bl[type].sources[ssrc] = uLine.sources[ssrc];\\n\\n                if (typeof uLine.msid !== 'undefined') {\\n                    // In Plan B the msid is an SSRC attribute. Also, we don't\\n                    // care about the obsolete label and mslabel attributes.\\n                    //\\n                    // Note that it is not guaranteed that the uLine will\\n                    // have an msid. recvonly channels in particular don't have\\n                    // one.\\n                    type2bl[type].sources[ssrc].msid = uLine.msid;\\n                }\\n                // NOTE ssrcs in ssrc groups will share msids, as\\n                // draft-uberti-rtcweb-plan-00 mandates.\\n            });\\n        }\\n\\n        // Add ssrc groups to the channel.\\n        if (typeof uLine.ssrcGroups !== 'undefined' &&\\n                Array.isArray(uLine.ssrcGroups)) {\\n\\n            // Create the ssrcGroups array, if it's not defined.\\n            if (typeof type2bl[type].ssrcGroups === 'undefined' ||\\n                    !Array.isArray(type2bl[type].ssrcGroups)) {\\n                type2bl[type].ssrcGroups = [];\\n            }\\n\\n            // Different ssrc may belong to the same group\\n            if (!arrayEquals.apply(type2bl[type].ssrcGroups,\\n                                   [uLine.ssrcGroups])) {\\n                type2bl[type].ssrcGroups\\n                    = type2bl[type].ssrcGroups.concat(uLine.ssrcGroups);\\n            }\\n        }\\n\\n        var direction = uLine.direction;\\n\\n        directionResult[type]\\n            = (directionResult[type] || 0 /* inactive */)\\n                | directionMasks[direction || 'inactive'];\\n\\n        if (type2bl[type] === uLine) {\\n            // Plan B mids are in ['audio', 'video', 'data']\\n            uLine.mid = type;\\n\\n            // Plan B doesn't support/need the bundle-only attribute.\\n            delete uLine.bundleOnly;\\n\\n            // In Plan B the msid is an SSRC attribute.\\n            delete uLine.msid;\\n\\n            if (direction !== 'inactive') {\\n              // Used to build the group:BUNDLE value after this loop.\\n              types.push(type);\\n            }\\n\\n            // Add the channel to the new media array.\\n            session.media.push(uLine);\\n        }\\n    });\\n\\n    // We regenerate the BUNDLE group with the new mids.\\n    session.groups.some(function(group) {\\n        if (group.type === 'BUNDLE') {\\n            group.mids = types.join(' ');\\n            return true;\\n        }\\n    });\\n\\n    // msid semantic\\n    session.msidSemantic = {\\n        semantic: 'WMS',\\n        token: '*'\\n    };\\n\\n    var resStr = transform.write(session);\\n\\n    return new RTCSessionDescription({\\n        type: desc.type,\\n        sdp: resStr\\n    });\\n\\n    //#endregion\\n};\\n\\n/**\\n * This method transforms a Plan B SDP to an equivalent Unified Plan SDP. A\\n * PeerConnection wrapper transforms the SDP to Unified Plan before passing it\\n * to FF.\\n *\\n * @param desc\\n * @returns {*}\\n */\\nInterop.prototype.toUnifiedPlan = function(desc) {\\n    var self = this;\\n    //#region Preliminary input validation.\\n\\n    if (typeof desc !== 'object' || desc === null ||\\n        typeof desc.sdp !== 'string') {\\n        console.warn('An empty description was passed as an argument.');\\n        return desc;\\n    }\\n\\n    var session = transform.parse(desc.sdp);\\n\\n    // If the SDP contains no media, there's nothing to transform.\\n    if (typeof session.media === 'undefined' ||\\n        !Array.isArray(session.media) || session.media.length === 0) {\\n        console.warn('The description has no media.');\\n        return desc;\\n    }\\n\\n    // Try some heuristics to \\\"make sure\\\" this is a Plan B SDP. Plan B SDP has\\n    // a video, an audio and a data \\\"channel\\\" at most.\\n    if (session.media.length > 3 || !session.media.every(function(m) {\\n            return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\\n        })) {\\n        console.warn('This description does not look like Plan B.');\\n        return desc;\\n    }\\n\\n    // Make sure this Plan B SDP can be converted to a Unified Plan SDP.\\n    var mids = [];\\n    session.media.forEach(function(m) {\\n        mids.push(m.mid);\\n    });\\n\\n    var hasBundle = false;\\n    if (typeof session.groups !== 'undefined' &&\\n        Array.isArray(session.groups)) {\\n        hasBundle = session.groups.every(function(g) {\\n            return g.type !== 'BUNDLE' ||\\n                arrayEquals.apply(g.mids.sort(), [mids.sort()]);\\n        });\\n    }\\n\\n    if (!hasBundle) {\\n        throw new Error(\\\"Cannot convert to Unified Plan because m-lines that\\\" +\\n            \\\" are not bundled were found.\\\");\\n    }\\n\\n    //#endregion\\n\\n\\n    //#region Convert from Plan B to Unified Plan.\\n\\n    // Unfortunately, a Plan B offer/answer doesn't have enough information to\\n    // rebuild an equivalent Unified Plan offer/answer.\\n    //\\n    // For example, if this is a local answer (in Unified Plan style) that we\\n    // convert to Plan B prior to handing it over to the application (the\\n    // PeerConnection wrapper called us, for instance, after a successful\\n    // createAnswer), we want to remember the m-line at which we've seen the\\n    // (local) SSRC. That's because when the application wants to do call the\\n    // SLD method, forcing us to do the inverse transformation (from Plan B to\\n    // Unified Plan), we need to know to which m-line to assign the (local)\\n    // SSRC. We also need to know all the other m-lines that the original\\n    // answer had and include them in the transformed answer as well.\\n    //\\n    // Another example is if this is a remote offer that we convert to Plan B\\n    // prior to giving it to the application, we want to remember the mid at\\n    // which we've seen the (remote) SSRC.\\n    //\\n    // In the iteration that follows, we use the cached Unified Plan (if it\\n    // exists) to assign mids to ssrcs.\\n\\n    var cached;\\n    if (typeof this.cache[desc.type] !== 'undefined') {\\n        cached = transform.parse(this.cache[desc.type]);\\n    }\\n\\n    var recvonlySsrcs = {\\n        audio: {},\\n        video: {}\\n    };\\n\\n    // A helper map that sends mids to m-line objects. We use it later to\\n    // rebuild the Unified Plan style session.media array.\\n    var mid2ul = {};\\n    var bIdx = 0;\\n    var uIdx = 0;\\n\\n    session.media.forEach(function(bLine) {\\n\\n        if ((typeof bLine.rtcpMux !== 'string' ||\\n            bLine.rtcpMux !== 'rtcp-mux') &&\\n            bLine.direction !== 'inactive' && bLine.type !== 'application') {\\n            throw new Error(\\\"Cannot convert to Unified Plan because m-lines \\\" +\\n                \\\"without the rtcp-mux attribute were found.\\\");\\n        }\\n\\n        if (bLine.type === 'application') {\\n            var uLineData = null;\\n            if (cached && cached.media) {\\n                uLineData = cached.media.find(function(uLine) {\\n                    return uLine.type === 'application';\\n                });\\n            }\\n            if (uLineData) {\\n                mid2ul[uLineData.mid] = uLineData;\\n            } else {\\n                mid2ul[bLine.mid] = bLine;\\n            }\\n            return;\\n        }\\n\\n        // With rtcp-mux and bundle all the channels should have the same ICE\\n        // stuff.\\n        var sources = bLine.sources;\\n        var ssrcGroups = bLine.ssrcGroups;\\n        var candidates = bLine.candidates;\\n        var iceUfrag = bLine.iceUfrag;\\n        var icePwd = bLine.icePwd;\\n        var fingerprint = bLine.fingerprint;\\n        var port = bLine.port;\\n\\n        // We'll use the \\\"bLine\\\" object as a prototype for each new \\\"mLine\\\"\\n        // that we create, but first we need to clean it up a bit.\\n        delete bLine.sources;\\n        delete bLine.ssrcGroups;\\n        delete bLine.candidates;\\n        delete bLine.iceUfrag;\\n        delete bLine.icePwd;\\n        delete bLine.fingerprint;\\n        delete bLine.port;\\n        delete bLine.mid;\\n\\n        // inverted ssrc group map\\n        var ssrc2group = {};\\n        if (typeof ssrcGroups !== 'undefined' && Array.isArray(ssrcGroups)) {\\n            ssrcGroups.forEach(function (ssrcGroup) {\\n\\n                // TODO(gp) find out how to receive simulcast with FF. For the\\n                // time being, hide it.\\n                if (ssrcGroup.semantics === 'SIM') {\\n                    return;\\n                }\\n\\n                // XXX This might brake if an SSRC is in more than one group\\n                // for some reason.\\n                if (typeof ssrcGroup.ssrcs !== 'undefined' &&\\n                    Array.isArray(ssrcGroup.ssrcs)) {\\n                    ssrcGroup.ssrcs.forEach(function (ssrc) {\\n                        if (typeof ssrc2group[ssrc] === 'undefined') {\\n                            ssrc2group[ssrc] = [];\\n                        }\\n\\n                        ssrc2group[ssrc].push(ssrcGroup);\\n                    });\\n                }\\n            });\\n        }\\n\\n        // ssrc to m-line index.\\n        var ssrc2ml = {};\\n\\n        if (typeof sources === 'object') {\\n\\n            // Explode the Plan B channel sources with one m-line per source.\\n            Object.keys(sources).forEach(function(ssrc) {\\n\\n                // The (unified) m-line for this SSRC. We either create it from\\n                // scratch or, if it's a grouped SSRC, we re-use a related\\n                // mline. In other words, if the source is grouped with another\\n                // source, put the two together in the same m-line.\\n                var uLine;\\n\\n                // We assume here that we are the answerer in the O/A, so any\\n                // offers which we translate come from the remote side, while\\n                // answers are local. So the check below is to make that we\\n                // handle receive-only SSRCs in a special way only if they come\\n                // from the remote side.\\n                if (desc.type==='offer') {\\n                    // We want to detect SSRCs which are used by a remote peer\\n                    // in an m-line with direction=recvonly (i.e. they are\\n                    // being used for RTCP only).\\n                    // This information would have gotten lost if the remote\\n                    // peer used Unified Plan and their local description was\\n                    // translated to Plan B. So we use the lack of an MSID\\n                    // attribute to deduce a \\\"receive only\\\" SSRC.\\n                    if (!sources[ssrc].msid) {\\n                        recvonlySsrcs[bLine.type][ssrc] = sources[ssrc];\\n                        // Receive-only SSRCs must not create new m-lines. We\\n                        // will assign them to an existing m-line later.\\n                        return;\\n                    }\\n                }\\n\\n                if (typeof ssrc2group[ssrc] !== 'undefined' &&\\n                    Array.isArray(ssrc2group[ssrc])) {\\n                    ssrc2group[ssrc].some(function (ssrcGroup) {\\n                        // ssrcGroup.ssrcs *is* an Array, no need to check\\n                        // again here.\\n                        return ssrcGroup.ssrcs.some(function (related) {\\n                            if (typeof ssrc2ml[related] === 'object') {\\n                                uLine = ssrc2ml[related];\\n                                return true;\\n                            }\\n                        });\\n                    });\\n                }\\n\\n                if (typeof uLine === 'object') {\\n                    // the m-line already exists. Just add the source.\\n                    uLine.sources[ssrc] = sources[ssrc];\\n                    delete sources[ssrc].msid;\\n                } else {\\n                    // Use the \\\"bLine\\\" as a prototype for the \\\"uLine\\\".\\n                    uLine = Object.create(bLine);\\n                    ssrc2ml[ssrc] = uLine;\\n\\n                    if (typeof sources[ssrc].msid !== 'undefined') {\\n                        // Assign the msid of the source to the m-line. Note\\n                        // that it is not guaranteed that the source will have\\n                        // msid. In particular \\\"recvonly\\\" sources don't have an\\n                        // msid. Note that \\\"recvonly\\\" is a term only defined\\n                        // for m-lines.\\n                        uLine.msid = sources[ssrc].msid;\\n                        delete sources[ssrc].msid;\\n                    }\\n\\n                    // We assign one SSRC per media line.\\n                    uLine.sources = {};\\n                    uLine.sources[ssrc] = sources[ssrc];\\n                    uLine.ssrcGroups = ssrc2group[ssrc];\\n\\n                    // Use the cached Unified Plan SDP (if it exists) to assign\\n                    // SSRCs to mids.\\n                    if (typeof cached !== 'undefined' &&\\n                        typeof cached.media !== 'undefined' &&\\n                        Array.isArray(cached.media)) {\\n\\n                        cached.media.forEach(function (m) {\\n                            if (typeof m.sources === 'object') {\\n                                Object.keys(m.sources).forEach(function (s) {\\n                                    if (s === ssrc) {\\n                                        uLine.mid = m.mid;\\n                                    }\\n                                });\\n                            }\\n                        });\\n                    }\\n\\n                    midToString(uLine);\\n\\n                    if (typeof uLine.mid === 'undefined') {\\n\\n                        // If this is an SSRC that we see for the first time\\n                        // assign it a new mid. This is typically the case when\\n                        // this method is called to transform a remote\\n                        // description for the first time or when there is a\\n                        // new SSRC in the remote description because a new\\n                        // peer has joined the conference. Local SSRCs should\\n                        // have already been added to the map in the toPlanB\\n                        // method.\\n                        //\\n                        // Because FF generates answers in Unified Plan style,\\n                        // we MUST already have a cached answer with all the\\n                        // local SSRCs mapped to some m-line/mid.\\n\\n                        if (desc.type === 'answer') {\\n                            throw new Error(\\\"An unmapped SSRC was found.\\\");\\n                        }\\n\\n                        uLine.mid = [bLine.type, '-', ssrc].join('');\\n                    }\\n\\n                    // Include the candidates in the 1st media line.\\n                    uLine.candidates = candidates;\\n                    uLine.iceUfrag = iceUfrag;\\n                    uLine.icePwd = icePwd;\\n                    uLine.fingerprint = fingerprint;\\n                    uLine.port = port;\\n\\n                    mid2ul[uLine.mid] = uLine;\\n\\n                    self.cache.mlU2BMap[uIdx] = bIdx;\\n                    if (typeof self.cache.mlB2UMap[bIdx] === 'undefined') {\\n                      self.cache.mlB2UMap[bIdx] = uIdx;\\n                    }\\n                    uIdx++;\\n                }\\n            });\\n        }\\n\\n        bIdx++;\\n    });\\n\\n    // Rebuild the media array in the right order and add the missing mLines\\n    // (missing from the Plan B SDP).\\n    session.media = [];\\n    mids = []; // reuse\\n\\n    if (desc.type === 'answer') {\\n\\n        // The media lines in the answer must match the media lines in the\\n        // offer. The order is important too. Here we assume that Firefox is\\n        // the answerer, so we merely have to use the reconstructed (unified)\\n        // answer to update the cached (unified) answer accordingly.\\n        //\\n        // In the general case, one would have to use the cached (unified)\\n        // offer to find the m-lines that are missing from the reconstructed\\n        // answer, potentially grabbing them from the cached (unified) answer.\\n        // One has to be careful with this approach because inactive m-lines do\\n        // not always have an mid, making it tricky (impossible?) to find where\\n        // exactly and which m-lines are missing from the reconstructed answer.\\n\\n        for (var i = 0; i < cached.media.length; i++) {\\n            var uLine = cached.media[i];\\n            midToString(uLine);\\n\\n            if (typeof mid2ul[uLine.mid] === 'undefined') {\\n\\n                // The mid isn't in the reconstructed (unified) answer.\\n                // This is either a (unified) m-line containing a remote\\n                // track only, or a (unified) m-line containing a remote\\n                // track and a local track that has been removed.\\n                // In either case, it MUST exist in the cached\\n                // (unified) answer.\\n                //\\n                // In case this is a removed local track, clean-up\\n                // the (unified) m-line and make sure it's 'recvonly' or\\n                // 'inactive'.\\n\\n                delete uLine.msid;\\n                delete uLine.sources;\\n                delete uLine.ssrcGroups;\\n                if (!uLine.direction\\n                    || uLine.direction === 'sendrecv')\\n                    uLine.direction = 'recvonly';\\n                else if (uLine.direction === 'sendonly')\\n                    uLine.direction = 'inactive';\\n            } else {\\n                // This is an (unified) m-line/channel that contains a local\\n                // track (sendrecv or sendonly channel) or it's a unified\\n                // recvonly m-line/channel. In either case, since we're\\n                // going from PlanB -> Unified Plan this m-line MUST\\n                // exist in the cached answer.\\n            }\\n\\n            session.media.push(uLine);\\n            if (typeof uLine.mid === 'string') {\\n                // inactive lines don't/may not have an mid.\\n                mids.push(uLine.mid);\\n            }\\n        }\\n    } else {\\n\\n        // SDP offer/answer (and the JSEP spec) forbids removing an m-section\\n        // under any circumstances. If we are no longer interested in sending a\\n        // track, we just remove the msid and ssrc attributes and set it to\\n        // either a=recvonly (as the reofferer, we must use recvonly if the\\n        // other side was previously sending on the m-section, but we can also\\n        // leave the possibility open if it wasn't previously in use), or\\n        // a=inactive.\\n\\n        if (typeof cached !== 'undefined' &&\\n            typeof cached.media !== 'undefined' &&\\n            Array.isArray(cached.media)) {\\n            cached.media.forEach(function(uLine) {\\n                midToString(uLine);\\n                mids.push(uLine.mid);\\n                if (typeof mid2ul[uLine.mid] !== 'undefined') {\\n                    session.media.push(mid2ul[uLine.mid]);\\n                } else {\\n                    delete uLine.msid;\\n                    delete uLine.sources;\\n                    delete uLine.ssrcGroups;\\n                    if (!uLine.direction\\n                        || uLine.direction === 'sendrecv')\\n                        uLine.direction = 'recvonly';\\n                    if (!uLine.direction\\n                        || uLine.direction === 'sendonly')\\n                        uLine.direction = 'inactive';\\n                    session.media.push(uLine);\\n                }\\n            });\\n        }\\n\\n        // Add all the remaining (new) m-lines of the transformed SDP.\\n        Object.keys(mid2ul).forEach(function(mid) {\\n            if (mids.indexOf(mid) === -1) {\\n                mids.push(mid);\\n                if (mid2ul[mid].direction === 'recvonly') {\\n                    // This is a remote recvonly channel. Add its SSRC to the\\n                    // appropriate sendrecv or sendonly channel.\\n                    // TODO(gp) what if we don't have sendrecv/sendonly\\n                    // channel?\\n\\n                    session.media.some(function (uLine) {\\n                        if ((uLine.direction === 'sendrecv' ||\\n                            uLine.direction === 'sendonly') &&\\n                            uLine.type === mid2ul[mid].type) {\\n\\n                            // mid2ul[mid] shouldn't have any ssrc-groups\\n                            Object.keys(mid2ul[mid].sources).forEach(\\n                                function (ssrc) {\\n                                uLine.sources[ssrc] =\\n                                    mid2ul[mid].sources[ssrc];\\n                            });\\n\\n                            return true;\\n                        }\\n                    });\\n                } else {\\n                    session.media.push(mid2ul[mid]);\\n                }\\n            }\\n        });\\n    }\\n\\n    // After we have constructed the Plan Unified m-lines we can figure out\\n    // where (in which m-line) to place the 'recvonly SSRCs'.\\n    // Note: we assume here that we are the answerer in the O/A, so any offers\\n    // which we translate come from the remote side, while answers are local\\n    // (and so our last local description is cached as an 'answer').\\n    [\\\"audio\\\", \\\"video\\\"].forEach(function (type) {\\n        if (!session || !session.media || !Array.isArray(session.media))\\n            return;\\n\\n        var idx = null;\\n        if (Object.keys(recvonlySsrcs[type]).length > 0) {\\n            idx = self.getFirstSendingIndexFromAnswer(type);\\n            if (idx === null){\\n                // If this is the first offer we receive, we don't have a\\n                // cached answer. Assume that we will be sending media using\\n                // the first m-line for each media type.\\n\\n                for (var i = 0; i < session.media.length; i++) {\\n                    if (session.media[i].type === type) {\\n                        idx = i;\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n\\n        if (idx && session.media.length > idx) {\\n            var mLine = session.media[idx];\\n            Object.keys(recvonlySsrcs[type]).forEach(function(ssrc) {\\n                if (mLine.sources && mLine.sources[ssrc]) {\\n                    console.warn(\\\"Replacing an existing SSRC.\\\");\\n                }\\n                if (!mLine.sources) {\\n                    mLine.sources = {};\\n                }\\n\\n                mLine.sources[ssrc] = recvonlySsrcs[type][ssrc];\\n            });\\n        }\\n    });\\n\\n    // We regenerate the BUNDLE group (since we regenerated the mids)\\n    session.groups.some(function(group) {\\n        if (group.type === 'BUNDLE') {\\n            group.mids = mids.join(' ');\\n            return true;\\n        }\\n    });\\n\\n    // msid semantic\\n    session.msidSemantic = {\\n        semantic: 'WMS',\\n        token: '*'\\n    };\\n\\n    var resStr = transform.write(session);\\n\\n    // Cache the transformed SDP (Unified Plan) for later re-use in this\\n    // function.\\n    this.cache[desc.type] = resStr;\\n\\n    return new RTCSessionDescription({\\n        type: desc.type,\\n        sdp: resStr\\n    });\\n\\n    //#endregion\\n};\\n\\n/**\\n * Maps the direction strings to their binary representation. The binary\\n * representation of the directions will contain only 2 bits. The least\\n * significant bit will indicate the receiving direction and the other bit will\\n * indicate the sending direction.\\n *\\n * @type {Map<string, number>}\\n */\\nvar directionMasks = {\\n    'inactive': 0, // 00\\n    'recvonly': 1, // 01\\n    'sendonly': 2, // 10\\n    'sendrecv': 3  // 11\\n};\\n\\n/**\\n * Parses a number into direction string.\\n *\\n * @param {number} direction - The number to be parsed.\\n * @returns {string} - The parsed direction string.\\n */\\nfunction parseDirection(direction) { // eslint-disable-line no-unused-vars\\n    // Filter all other bits except the 2 less significant.\\n    var directionMask = direction & 3;\\n\\n    switch (directionMask) {\\n    case 0:\\n        return 'inactive';\\n    case 1:\\n        return 'recvonly';\\n    case 2:\\n        return 'sendonly';\\n    case 3:\\n        return 'sendrecv';\\n    }\\n}\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nvar transform = require('sdp-transform');\\n\\nexports.write = function(session, opts) {\\n\\n  if (typeof session !== 'undefined' &&\\n      typeof session.media !== 'undefined' &&\\n      Array.isArray(session.media)) {\\n\\n    session.media.forEach(function (mLine) {\\n      // expand sources to ssrcs\\n      if (typeof mLine.sources !== 'undefined' &&\\n        Object.keys(mLine.sources).length !== 0) {\\n          mLine.ssrcs = [];\\n          Object.keys(mLine.sources).forEach(function (ssrc) {\\n            var source = mLine.sources[ssrc];\\n            Object.keys(source).forEach(function (attribute) {\\n              mLine.ssrcs.push({\\n                id: ssrc,\\n                attribute: attribute,\\n                value: source[attribute]\\n              });\\n            });\\n          });\\n          delete mLine.sources;\\n        }\\n\\n      // join ssrcs in ssrc groups\\n      if (typeof mLine.ssrcGroups !== 'undefined' &&\\n        Array.isArray(mLine.ssrcGroups)) {\\n          mLine.ssrcGroups.forEach(function (ssrcGroup) {\\n            if (typeof ssrcGroup.ssrcs !== 'undefined' &&\\n                Array.isArray(ssrcGroup.ssrcs)) {\\n              ssrcGroup.ssrcs = ssrcGroup.ssrcs.join(' ');\\n            }\\n          });\\n        }\\n    });\\n  }\\n\\n  // join group mids\\n  if (typeof session !== 'undefined' &&\\n      typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\\n\\n    session.groups.forEach(function (g) {\\n      if (typeof g.mids !== 'undefined' && Array.isArray(g.mids)) {\\n        g.mids = g.mids.join(' ');\\n      }\\n    });\\n  }\\n\\n  return transform.write(session, opts);\\n};\\n\\nexports.parse = function(sdp) {\\n  var session = transform.parse(sdp);\\n\\n  if (typeof session !== 'undefined' && typeof session.media !== 'undefined' &&\\n      Array.isArray(session.media)) {\\n\\n    session.media.forEach(function (mLine) {\\n      // group sources attributes by ssrc\\n      if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\\n        mLine.sources = {};\\n        mLine.ssrcs.forEach(function (ssrc) {\\n          if (!mLine.sources[ssrc.id])\\n          mLine.sources[ssrc.id] = {};\\n        mLine.sources[ssrc.id][ssrc.attribute] = ssrc.value;\\n        });\\n\\n        delete mLine.ssrcs;\\n      }\\n\\n      // split ssrcs in ssrc groups\\n      if (typeof mLine.ssrcGroups !== 'undefined' &&\\n        Array.isArray(mLine.ssrcGroups)) {\\n          mLine.ssrcGroups.forEach(function (ssrcGroup) {\\n            if (typeof ssrcGroup.ssrcs === 'string') {\\n              ssrcGroup.ssrcs = ssrcGroup.ssrcs.split(' ');\\n            }\\n          });\\n        }\\n    });\\n  }\\n  // split group mids\\n  if (typeof session !== 'undefined' &&\\n      typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\\n\\n    session.groups.forEach(function (g) {\\n      if (typeof g.mids === 'string') {\\n        g.mids = g.mids.split(' ');\\n      }\\n    });\\n  }\\n\\n  return session;\\n};\\n\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nmodule.exports = function arrayEquals(array) {\\n    // if the other array is a falsy value, return\\n    if (!array)\\n        return false;\\n\\n    // compare lengths - can save a lot of time\\n    if (this.length != array.length)\\n        return false;\\n\\n    for (var i = 0, l = this.length; i < l; i++) {\\n        // Check if we have nested arrays\\n        if (this[i] instanceof Array && array[i] instanceof Array) {\\n            // recurse into the nested arrays\\n            if (!arrayEquals.apply(this[i], [array[i]]))\\n                return false;\\n        } else if (this[i] != array[i]) {\\n            // Warning - two different object instances will never be equal:\\n            // {x:20} != {x:20}\\n            return false;\\n        }\\n    }\\n    return true;\\n};\\n\\n\",\"/* Copyright @ 2016 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nvar transform = require('sdp-transform');\\nvar transformUtils = require('./transform-utils');\\nvar parseSsrcs = transformUtils.parseSsrcs;\\nvar writeSsrcs = transformUtils.writeSsrcs;\\n\\n//region Constants\\n\\nvar DEFAULT_NUM_OF_LAYERS = 3;\\n\\n//endregion\\n\\nfunction getSsrcAttribute (mLine, ssrc, attributeName) {\\n    return mLine\\n        .ssrcs\\n        .filter(function(ssrcInfo) { return ssrcInfo.id === ssrc; })\\n        .filter(function(ssrcInfo) { return ssrcInfo.attribute === attributeName; })\\n        .map(function(ssrcInfo) { return ssrcInfo.value; })[0];\\n}\\n\\n//region Ctor\\n\\nfunction Simulcast(options) {\\n\\n    this.options = options ? options : {};\\n\\n    if (!this.options.numOfLayers) {\\n        this.options.numOfLayers = DEFAULT_NUM_OF_LAYERS;\\n    }\\n    console.log(\\\"SdpSimulcast: using \\\" + this.options.numOfLayers + \\\" layers\\\");\\n\\n    /**\\n     * An IN-ORDER list of the simulcast ssrcs\\n     * @type {list<number>}\\n     */\\n    this.ssrcCache = [];\\n}\\n\\n//endregion\\n\\n//region Stateless private utility functions\\n\\n/**\\n * Returns a random integer between min (included) and max (excluded)\\n * Using Math.round() gives a non-uniform distribution!\\n * @returns {number}\\n */\\nfunction generateSSRC() {\\n    var min = 0, max = 0xffffffff;\\n    return Math.floor(Math.random() * (max - min)) + min;\\n};\\n\\nfunction processVideo(session, action) {\\n    if (session == null || !Array.isArray(session.media)) {\\n        return;\\n    }\\n\\n    session.media.forEach(function (mLine) {\\n        if (mLine.type === 'video') {\\n            action(mLine);\\n        }\\n    });\\n};\\n\\nfunction validateDescription(desc)\\n{\\n    return desc && desc != null\\n        && desc.type && desc.type != ''\\n        && desc.sdp && desc.sdp != '';\\n}\\n\\nfunction explodeRemoteSimulcast(mLine) {\\n\\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\\n        return;\\n    }\\n\\n    var sources = parseSsrcs(mLine);\\n    var order = [];\\n\\n    // Find the SIM group and explode its sources.\\n    var j = mLine.ssrcGroups.length;\\n    while (j--) {\\n\\n        if (mLine.ssrcGroups[j].semantics !== 'SIM') {\\n            continue;\\n        }\\n\\n        var simulcastSsrcs = mLine.ssrcGroups[j].ssrcs.split(' ');\\n\\n        for (var i = 0; i < simulcastSsrcs.length; i++) {\\n\\n            var ssrc = simulcastSsrcs[i];\\n            order.push(ssrc);\\n\\n            var parts = sources[ssrc].msid.split(' ');\\n            sources[ssrc].msid = [parts[0], '/', i, ' ', parts[1], '/', i].join('');\\n            sources[ssrc].cname = [sources[ssrc].cname, '/', i].join('');\\n\\n            // Remove all the groups that this SSRC participates in.\\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\\n                if (relatedGroup.semantics === 'SIM') {\\n                    return;\\n                }\\n\\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\\n                    return;\\n                }\\n\\n                // Nuke all the related SSRCs.\\n                relatedSsrcs.forEach(function (relatedSSRC) {\\n                    sources[relatedSSRC].msid = sources[ssrc].msid;\\n                    sources[relatedSSRC].cname = sources[ssrc].cname;\\n                    if (relatedSSRC !== ssrc) {\\n                        order.push(relatedSSRC);\\n                    }\\n                });\\n\\n                // Schedule the related group for nuking.\\n            })\\n        }\\n\\n        mLine.ssrcs = writeSsrcs(sources, order);\\n        mLine.ssrcGroups.splice(j, 1);\\n    };\\n}\\n\\nfunction implodeRemoteSimulcast(mLine) {\\n\\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\\n        console.info('Halt: There are no SSRC groups in the remote ' +\\n                'description.');\\n        return;\\n    }\\n\\n    var sources = parseSsrcs(mLine);\\n\\n    // Find the SIM group and nuke it.\\n    mLine.ssrcGroups.forEach(function (simulcastGroup) {\\n        if (simulcastGroup.semantics !== 'SIM') {\\n            return;\\n        }\\n\\n        console.info(\\\"Imploding SIM group: \\\" + simulcastGroup.ssrcs);\\n        // Schedule the SIM group for nuking.\\n        simulcastGroup.nuke = true;\\n\\n        var simulcastSsrcs = simulcastGroup.ssrcs.split(' ');\\n\\n        // Nuke all the higher layer SSRCs.\\n        for (var i = 1; i < simulcastSsrcs.length; i++) {\\n\\n            var ssrc = simulcastSsrcs[i];\\n            delete sources[ssrc];\\n\\n            // Remove all the groups that this SSRC participates in.\\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\\n                if (relatedGroup.semantics === 'SIM') {\\n                    return;\\n                }\\n\\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\\n                    return;\\n                }\\n\\n                // Nuke all the related SSRCs.\\n                relatedSsrcs.forEach(function (relatedSSRC) {\\n                    delete sources[relatedSSRC];\\n                });\\n\\n                // Schedule the related group for nuking.\\n                relatedGroup.nuke = true;\\n            })\\n        }\\n\\n        return;\\n    });\\n\\n    mLine.ssrcs = writeSsrcs(sources);\\n\\n    // Nuke all the scheduled groups.\\n    var i = mLine.ssrcGroups.length;\\n    while (i--) {\\n        if (mLine.ssrcGroups[i].nuke) {\\n            mLine.ssrcGroups.splice(i, 1);\\n        }\\n    }\\n}\\n\\nfunction removeGoogConference(mLine) {\\n    if (!mLine || !Array.isArray(mLine.invalid)) {\\n        return;\\n    }\\n\\n    var i = mLine.invalid.length;\\n    while (i--) {\\n        if (mLine.invalid[i].value == 'x-google-flag:conference') {\\n            mLine.invalid.splice(i, 1);\\n        }\\n    }\\n}\\n\\nfunction assertGoogConference(mLine) {\\n    if (!mLine) {\\n        return;\\n    }\\n\\n    if (!Array.isArray(mLine.invalid)) {\\n        mLine.invalid = [];\\n    }\\n\\n    if (!mLine.invalid.some(\\n            function (i) { return i.value === 'x-google-flag:conference' })) {\\n        mLine.invalid.push({'value': 'x-google-flag:conference'});\\n    }\\n}\\n\\nSimulcast.prototype.clearSsrcCache = function() {\\n    this.ssrcCache = [];\\n}\\n\\n/**\\n * When we start as video muted, all of the video\\n *  ssrcs get generated so we can include them as part\\n *  of the original session-accept.  That means we\\n *  need this library to restore to those same ssrcs\\n *  the first time we unmute, so we need the ability to\\n *  force its cache\\n */\\nSimulcast.prototype.setSsrcCache = function(ssrcs) {\\n    this.ssrcCache = ssrcs;\\n}\\n\\n//endregion\\n\\n//region \\\"Private\\\" functions\\n\\n/**\\n * Given a video mLine, return a list of the video ssrcs\\n *  in simulcast layer order (returns a list of just\\n *  the primary ssrc if there are no simulcast layers)\\n */\\nSimulcast.prototype._parseSimLayers = function (mLine) {\\n    var simGroup = mLine.ssrcGroups &&\\n        mLine.ssrcGroups.find(function(group) { return group.semantics === \\\"SIM\\\"; });\\n    if (simGroup) {\\n        return simGroup.ssrcs\\n            .split(\\\" \\\")\\n            .map(function(ssrcStr) { return parseInt(ssrcStr) });\\n    } else {\\n        return [mLine.ssrcs[0].id];\\n    }\\n}\\n\\nSimulcast.prototype._buildNewToOldSsrcMap = function (newSsrcList, oldSsrcList) {\\n    var ssrcMap = {};\\n    for (var i = 0; i < newSsrcList.length; ++i) {\\n        var newSsrc = newSsrcList[i];\\n        var oldSsrc = oldSsrcList[i] || null;\\n        ssrcMap[newSsrc] = oldSsrc;\\n    }\\n    return ssrcMap;\\n}\\n\\nSimulcast.prototype._fillInSourceDataFromCache = function(mLine) {\\n    console.log(\\\"SdpSimulcast restoring from cache: \\\", this.ssrcCache);\\n    var newSimSsrcs = this._parseSimLayers(mLine);\\n    console.log(\\\"SdpSimulcast Parsed new sim ssrcs: \\\", newSimSsrcs);\\n    var newMsid = getSsrcAttribute(mLine, newSimSsrcs[0], \\\"msid\\\");\\n    var newCname = getSsrcAttribute(mLine, newSimSsrcs[0], \\\"cname\\\");\\n    var ssrcsToReplace = this._buildNewToOldSsrcMap(newSimSsrcs, this.ssrcCache);\\n    console.log(\\\"SdpSimulcast built replacement map: \\\", ssrcsToReplace);\\n    // New sdp might only have 1 layer, so not every cached ssrc will have a new one\\n    //  to replace directly\\n    var ssrcsToAdd = this.ssrcCache\\n        .filter(function(ssrc) { return Object.values(ssrcsToReplace).indexOf(ssrc) === -1; });\\n    console.log(\\\"SdpSimulcast built ssrcs to add: \\\", ssrcsToAdd);\\n\\n    // First do the replacements\\n    mLine.ssrcs.forEach(function(ssrc) {\\n        if (ssrcsToReplace[ssrc.id]) {\\n            ssrc.id = ssrcsToReplace[ssrc.id];\\n        }\\n    });\\n    // Now the adds\\n    ssrcsToAdd.forEach(function(ssrc) {\\n        mLine.ssrcs.push({\\n            id: ssrc,\\n            attribute: \\\"msid\\\",\\n            value: newMsid\\n        });\\n        mLine.ssrcs.push({\\n            id: ssrc,\\n            attribute: \\\"cname\\\",\\n            value: newCname\\n        });\\n    });\\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\\n    mLine.ssrcGroups.push({\\n        semantics: \\\"SIM\\\",\\n        ssrcs: this.ssrcCache.join(\\\" \\\")\\n    });\\n    return mLine;\\n}\\n\\nSimulcast.prototype._generateSourceData = function(mLine, primarySsrc) {\\n    var addAssociatedStream = function(mLine, ssrc) {\\n        mLine.ssrcs.push({\\n            id: ssrc,\\n            attribute: \\\"cname\\\",\\n            value: primarySsrcCname\\n        });\\n        mLine.ssrcs.push({\\n            id: ssrc,\\n            attribute: \\\"msid\\\",\\n            value: primarySsrcMsid\\n        });\\n    }\\n    var primarySsrcMsid = getSsrcAttribute(mLine, primarySsrc, \\\"msid\\\");\\n    var primarySsrcCname = getSsrcAttribute(mLine, primarySsrc, \\\"cname\\\");\\n\\n    // Generate sim layers\\n    var simSsrcs = [];\\n    for (var i = 0; i < this.options.numOfLayers - 1; ++i) {\\n        var simSsrc = generateSSRC();\\n        addAssociatedStream(mLine, simSsrc);\\n        simSsrcs.push(simSsrc);\\n    }\\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\\n    mLine.ssrcGroups.push({\\n        semantics: \\\"SIM\\\",\\n        ssrcs: primarySsrc + \\\" \\\" + simSsrcs.join(\\\" \\\")\\n    });\\n    return mLine;\\n}\\n\\n\\n\\n// Assumptions:\\n//  1) 'mLine' contains only a single primary video source\\n//   (i.e. it will not already have simulcast streams inserted)\\n//  2) 'mLine' MAY already contain an RTX stream for its video source\\n//  3) 'mLine' is in sendrecv or sendonly state\\n// Guarantees:\\n//  1) return mLine will contain 2 additional simulcast layers\\n//   generated\\n//  2) if the base video ssrc in mLine has been seen before,\\n//   then the same generated simulcast streams from before will\\n//   be used again\\n//  3) if rtx is enabled for the mLine, all generated simulcast\\n//   streams will have rtx streams generated as well\\n//  4) if rtx has been generated for a src before, we will generate\\n//   the same rtx stream again\\nSimulcast.prototype._restoreSimulcast = function(mLine) {\\n    // First, find the primary video source in the given\\n    // mLine and see if we've seen it before.\\n    var primarySsrc;\\n    var numSsrcs = mLine.ssrcs && mLine.ssrcs\\n        .map(function(ssrcInfo) { return ssrcInfo.id; })\\n        .filter(function(ssrc, index, array) {\\n            return array.indexOf(ssrc) === index;\\n        })\\n        .length || 0;\\n    var numGroups = (mLine.ssrcGroups && mLine.ssrcGroups.length) || 0;\\n\\n    if (numSsrcs === 0 || numSsrcs > 2) {\\n        // Unsupported scenario\\n        return mLine;\\n    }\\n    if (numSsrcs == 2 && numGroups === 0) {\\n        // Unsupported scenario\\n        return mLine;\\n    }\\n\\n    if (numSsrcs === 1) {\\n        primarySsrc = mLine.ssrcs[0].id;\\n    } else {\\n        // There must be an FID group, so parse\\n        //  that and pull the primary ssrc from there\\n        var fidGroup = mLine.ssrcGroups.filter(function(group) { return group.semantics === \\\"FID\\\"; })[0];\\n        if (fidGroup) {\\n            primarySsrc = parseInt(fidGroup.ssrcs.split(\\\" \\\")[0]);\\n        } else {\\n            // Unsupported scenario\\n            return mLine;\\n        }\\n    }\\n    console.log(\\\"SdpSimulcast: current ssrc cache: \\\", this.ssrcCache);\\n    console.log(\\\"SdpSimulcast: parsed primary ssrc \\\" + primarySsrc);\\n\\n    var seenPrimarySsrc = this.ssrcCache.indexOf(primarySsrc) !== -1;\\n\\n    if (seenPrimarySsrc) {\\n        console.log(\\\"SdpSimulcast: Have seen primary ssrc before, \\\" +\\n            \\\"filling in data from cache\\\");\\n        mLine = this._fillInSourceDataFromCache(mLine);\\n    } else {\\n        console.log(\\\"SdpSimulcast: Have not seen primary ssrc before, \\\" +\\n            \\\"generating source data\\\");\\n        mLine = this._generateSourceData(mLine, primarySsrc);\\n    }\\n    // Now update the cache to match whatever we've just put into this sdp\\n    this.ssrcCache = this._parseSimLayers(mLine);\\n    return mLine;\\n}\\n\\n//endregion\\n\\n//region \\\"Public\\\" functions\\n\\n/**\\n *\\n * @param desc\\n * @returns {RTCSessionDescription}\\n */\\nSimulcast.prototype.mungeRemoteDescription = function (desc) {\\n\\n    if (!validateDescription(desc)) {\\n        return desc;\\n    }\\n\\n    var session = transform.parse(desc.sdp);\\n\\n    var self = this;\\n    processVideo(session, function (mLine) {\\n\\n        // Handle simulcast reception.\\n        if (self.options.explodeRemoteSimulcast) {\\n            explodeRemoteSimulcast(mLine);\\n        } else {\\n            implodeRemoteSimulcast(mLine);\\n        }\\n\\n        // Make sure that we ALWAYS add the conference flag to the remote\\n        // description: That flag is deprecated but, as of this writing\\n        // (09/2019), it's still used in jitsi-meet to enable legacy simulcast\\n        // when screen-sharing (https://cs.chromium.org/chromium/src/third_party/webrtc/media/base/media_channel.h?rcl=f2773b54647633d5725fa25dea883f99dd1b400c&l=838).\\n        //\\n        // We've observed the following chain of events that almost always\\n        // results in connectivity issues at the receiver:\\n        //\\n        // 1. The user joins a call with startVideoMuted=true, so there's no\\n        //    jitsi track created.\\n        // 2. The user enables screen-sharing. At this point we do a\\n        //    renegotiation (which starts with an sRD); the ssrcCache is empty,\\n        //    so the conference flag is not added to the remote description SDP.\\n        // 3. The next step of the re-negotiation is to set the answer, so\\n        //    mungeLocalDescription is called, and because now we have a track\\n        //    due to the user enabling screen-sharing, it enables simulcast.\\n        // 4. sLD is called with simulcast ssrcs, but the sRD call of step 2\\n        //    didn't add the conference flag in the SDP, so the screen-sharing\\n        //    is without simulcast.\\n        // 5. Any subsequent re-negotiation (for example, due to a participant\\n        //    joining/leaving the call) will enable simulcast and this switch\\n        //    almost always results in a broken stream at the receiver.\\n\\n        assertGoogConference(mLine);\\n    });\\n\\n    return new RTCSessionDescription({\\n        type: desc.type,\\n        sdp: transform.write(session)\\n    });\\n};\\n\\n/**\\n *\\n * NOTE this method should be called only if simulcast is supported by\\n * the current browser, otherwise local SDP should not be munged.\\n * @param desc\\n * @returns {RTCSessionDescription}\\n */\\nSimulcast.prototype.mungeLocalDescription = function (desc) {\\n\\n    if (!validateDescription(desc)) {\\n        return desc;\\n    }\\n\\n    var session = transform.parse(desc.sdp);\\n\\n    var self = this;\\n    processVideo(session, function (mLine) {\\n        if (mLine.direction == 'recvonly' || mLine.direction == 'inactive')\\n        {\\n            return;\\n        }\\n        self._restoreSimulcast(mLine);\\n    });\\n\\n    return new RTCSessionDescription({\\n        type: desc.type,\\n        sdp: transform.write(session)\\n    });\\n};\\n\\n//endregion\\n\\nmodule.exports = Simulcast;\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/**\\n * FIXME\\n * @param sources FIXME\\n * @param order An array of SSRCs which will be used to order the entries in\\n * the returned array. Sources whose SSRC appears in 'order' will be added first,\\n * in the specified order, and all other sources will be added afterwards (in\\n * no specific order).\\n * @returns {Array} FIXME\\n */\\nexports.writeSsrcs = function(sources, order) {\\n  var ssrcs = [];\\n\\n  // expand sources to ssrcs\\n  if (typeof sources !== 'undefined' &&\\n      Object.keys(sources).length !== 0) {\\n\\n    if (!Array.isArray(order)) {\\n      order = []\\n    }\\n\\n    // Add the sources that appear in 'order' first.\\n    for (var i = 0; i < order.length; i++) {\\n      var ssrc = order[i];\\n      var source = sources[ssrc];\\n      Object.keys(source).forEach(function (attribute) {\\n        ssrcs.push({\\n          id: ssrc,\\n          attribute: attribute,\\n          value: source[attribute]\\n        });\\n      });\\n    }\\n\\n    // Now add the rest of the sources.\\n    Object.keys(sources).forEach(function (ssrc) {\\n      ssrc = parseInt(ssrc); // Object.keys() returns string\\n      if (order.indexOf(ssrc) >= 0) {\\n        // Already added.\\n        return;\\n      }\\n\\n      var source = sources[ssrc];\\n      Object.keys(source).forEach(function (attribute) {\\n        ssrcs.push({\\n          id: ssrc,\\n          attribute: attribute,\\n          value: source[attribute]\\n        });\\n      });\\n    });\\n  }\\n\\n  return ssrcs;\\n};\\n\\nexports.parseSsrcs = function (mLine) {\\n  var sources = {};\\n  // group sources attributes by ssrc.\\n  if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\\n    mLine.ssrcs.forEach(function (ssrc) {\\n      if (!sources[ssrc.id])\\n        sources[ssrc.id] = {};\\n      sources[ssrc.id][ssrc.attribute] = ssrc.value;\\n    });\\n  }\\n  return sources;\\n};\\n\\n\",\"/* eslint-disable max-params */\\r\\n\\r\\n/**\\r\\n * This object stores variables needed around the recording of an audio stream\\r\\n * and passing this recording along with additional information along to\\r\\n * different processes\\r\\n * @param blob the recording audio stream as a single blob\\r\\n * @param name the name of the person of the audio stream\\r\\n * @param startTime the time in UTC when recording of the audiostream started\\r\\n * @param wordArray the recorder audio stream transcribed as an array of Word\\r\\n *                  objects\\r\\n */\\r\\nconst RecordingResult = function(blob, name, startTime, wordArray) {\\r\\n    this.blob = blob;\\r\\n    this.name = name;\\r\\n    this.startTime = startTime;\\r\\n    this.wordArray = wordArray;\\r\\n};\\r\\n\\r\\n/* eslint-enable max-params */\\r\\n\\r\\nmodule.exports = RecordingResult;\\r\\n\",\"/* global config */\\r\\n\\r\\nconst TranscriptionService = require('./AbstractTranscriptionService');\\r\\nconst Word = require('../word');\\r\\nconst audioRecorder = require('./../audioRecorder');\\r\\n\\r\\n/**\\r\\n * Implements a TranscriptionService for a Sphinx4 http server\\r\\n */\\r\\nconst SphinxService = function() {\\r\\n    // set the correct url\\r\\n    this.url = getURL();\\r\\n};\\r\\n\\r\\n/**\\r\\n * Subclass of AbstractTranscriptionService\\r\\n */\\r\\nSphinxService.prototype = Object.create(TranscriptionService.prototype);\\r\\n\\r\\n/**\\r\\n * Set the right constructor\\r\\n */\\r\\nSphinxService.constructor = SphinxService;\\r\\n\\r\\n/**\\r\\n * Overrides the sendRequest method from AbstractTranscriptionService\\r\\n * it will send the audio stream the a Sphinx4 server to get the transcription\\r\\n *\\r\\n * @param audioFileBlob the recorder audio stream an a single Blob\\r\\n * @param callback the callback function retrieving the server response\\r\\n */\\r\\nSphinxService.prototype.sendRequest = function(audioFileBlob, callback) {\\r\\n    console.log(`sending an audio file  to ${this.url}`);\\r\\n    console.log(`the audio file being sent: ${audioFileBlob}`);\\r\\n    const request = new XMLHttpRequest();\\r\\n\\r\\n    request.onreadystatechange = function() {\\r\\n        if (request.readyState === XMLHttpRequest.DONE\\r\\n            && request.status === 200) {\\r\\n            callback(request.responseText);\\r\\n        } else if (request.readyState === XMLHttpRequest.DONE) {\\r\\n            throw new Error(\\r\\n                `unable to accept response from sphinx server. status: ${\\r\\n                    request.status}`);\\r\\n        }\\r\\n\\r\\n        // if not ready no point to throw an error\\r\\n    };\\r\\n    request.open('POST', this.url);\\r\\n    request.setRequestHeader('Content-Type',\\r\\n        audioRecorder.determineCorrectFileType());\\r\\n    request.send(audioFileBlob);\\r\\n    console.log(`send ${audioFileBlob}`);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Overrides the formatResponse method from AbstractTranscriptionService\\r\\n * It will parse the answer from the server in the expected format\\r\\n *\\r\\n * @param response the JSON body retrieved from the Sphinx4 server\\r\\n */\\r\\nSphinxService.prototype.formatResponse = function(response) {\\r\\n    const result = JSON.parse(response).objects;\\r\\n\\r\\n    // make sure to delete the session id object, which is always\\r\\n    // the first value in the JSON array\\r\\n\\r\\n    result.shift();\\r\\n    const array = [];\\r\\n\\r\\n    result.forEach(\\r\\n        word =>\\r\\n            word.filler\\r\\n                || array.push(new Word(word.word, word.start, word.end)));\\r\\n\\r\\n    return array;\\r\\n};\\r\\n\\r\\n/**\\r\\n * checks wether the reply is empty, or doesn't contain a correct JSON object\\r\\n * @param response the server response\\r\\n * @return {boolean} whether the response is valid\\r\\n */\\r\\nSphinxService.prototype.verify = function(response) {\\r\\n    console.log(`response from server:${response.toString()}`);\\r\\n\\r\\n    // test if server responded with a string object\\r\\n    if (typeof response !== 'string') {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    // test if the string can be parsed into valid JSON\\r\\n    let json;\\r\\n\\r\\n    try {\\r\\n        json = JSON.parse(response);\\r\\n    } catch (error) {\\r\\n        console.log(error);\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    // check if the JSON has a \\\"objects\\\" value\\r\\n    if (json.objects === undefined) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    // get the \\\"objects\\\" value and check for a session ID\\r\\n    const array = json.objects;\\r\\n\\r\\n    if (!(array[0] && array[0]['session-id'])) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    // everything seems to be in order\\r\\n    return true;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Gets the URL to the Sphinx4 server from the config file. If it's not there,\\r\\n * it will throw an error\\r\\n *\\r\\n * @returns {string} the URL to the sphinx4 server\\r\\n */\\r\\nfunction getURL() {\\r\\n    const message = 'config does not contain an url to a Sphinx4 https server';\\r\\n\\r\\n    if (config.sphinxURL === undefined) {\\r\\n        console.log(message);\\r\\n    } else {\\r\\n        const toReturn = config.sphinxURL;\\r\\n\\r\\n        if (toReturn.includes !== undefined && toReturn.includes('https://')) {\\r\\n            return toReturn;\\r\\n        }\\r\\n        console.log(message);\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\nmodule.exports = SphinxService;\\r\\n\",\"/**\\r\\n * Abstract class representing an interface to implement a speech-to-text\\r\\n * service on.\\r\\n */\\r\\nconst TranscriptionService = function() {\\r\\n    throw new Error('TranscriptionService is abstract and cannot be'\\r\\n        + 'created');\\r\\n};\\r\\n\\r\\n/**\\r\\n * This method can be used to send the recorder audio stream and\\r\\n * retrieve the answer from the transcription service from the callback\\r\\n *\\r\\n * @param {RecordingResult} recordingResult a recordingResult object which\\r\\n * includes the recorded audio stream as a blob\\r\\n * @param {Function} callback  which will retrieve the a RecordingResult with\\r\\n *        the answer as a WordArray\\r\\n */\\r\\nTranscriptionService.prototype.send = function send(recordingResult, callback) {\\r\\n    this.sendRequest(recordingResult.blob, response => {\\r\\n        if (this.verify(response)) {\\r\\n            recordingResult.wordArray = this.formatResponse(response);\\r\\n        } else {\\r\\n            console.log('the retrieved response from the server is not valid!');\\r\\n            recordingResult.wordArray = [];\\r\\n        }\\r\\n        callback(recordingResult);\\r\\n    });\\r\\n};\\r\\n\\r\\n/**\\r\\n * Abstract method which will rend the recorder audio stream to the implemented\\r\\n * transcription service and will retrieve an answer, which will be\\r\\n * called on the given callback method\\r\\n *\\r\\n * @param {Blob} audioBlob the recorded audio stream as a single Blob\\r\\n * @param {function} callback function which will retrieve the answer\\r\\n *                            from the service\\r\\n */\\r\\n// eslint-disable-next-line no-unused-vars\\r\\nTranscriptionService.prototype.sendRequest = function(audioBlob, callback) {\\r\\n    throw new Error('TranscriptionService.sendRequest is abstract');\\r\\n};\\r\\n\\r\\n/**\\r\\n * Abstract method which will parse the output from the implemented\\r\\n * transcription service to the expected format\\r\\n *\\r\\n * The transcriber class expect an array of word objects, where each word\\r\\n * object is one transcribed word by the service.\\r\\n *\\r\\n * The expected output of this method is an array of word objects, in\\r\\n * the correct order. That is, the first object in the array is the first word\\r\\n * being said, and the last word in the array is the last word being said\\r\\n *\\r\\n * @param response the answer from the speech-to-text server which needs to be\\r\\n *                 formatted\\r\\n * @return {Array<Word>} an array of Word objects\\r\\n */\\r\\n// eslint-disable-next-line no-unused-vars\\r\\nTranscriptionService.prototype.formatResponse = function(response) {\\r\\n    throw new Error('TranscriptionService.format is abstract');\\r\\n};\\r\\n\\r\\n/**\\r\\n * Abstract method which will verify that the response from the server is valid\\r\\n *\\r\\n * @param response the response from the server\\r\\n * @return {boolean} true if response is valid, false otherwise\\r\\n */\\r\\n// eslint-disable-next-line no-unused-vars\\r\\nTranscriptionService.prototype.verify = function(response) {\\r\\n    throw new Error('TranscriptionService.verify is abstract');\\r\\n};\\r\\n\\r\\nmodule.exports = TranscriptionService;\\r\\n\",\"/**\\r\\n * An object representing a transcribed word, with some additional information\\r\\n * @param word the word\\r\\n * @param begin the time the word was started being uttered\\r\\n * @param end the time the word stopped being uttered\\r\\n */\\r\\nconst Word = function(word, begin, end) {\\r\\n    this.word = word;\\r\\n    this.begin = begin;\\r\\n    this.end = end;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get the string representation of the word\\r\\n * @returns {*} the word as a string\\r\\n */\\r\\nWord.prototype.getWord = function() {\\r\\n    return this.word;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get the time the word started being uttered\\r\\n * @returns {*} the start time as an integer\\r\\n */\\r\\nWord.prototype.getBeginTime = function() {\\r\\n    return this.begin;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get the time the word stopped being uttered\\r\\n * @returns {*} the end time as an integer\\r\\n */\\r\\nWord.prototype.getEndTime = function() {\\r\\n    return this.end;\\r\\n};\\r\\n\\r\\nmodule.exports = Word;\\r\\n\"]}","code":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.JitsiMeetJS=t():e.JitsiMeetJS=t()}(window,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=119)}([function(e,t){e.exports={ADD_ICE_CANDIDATE_FAILED:\"xmpp.add_ice_candidate_failed\",AUDIO_MUTED_BY_FOCUS:\"xmpp.audio_muted_by_focus\",AUTHENTICATION_REQUIRED:\"xmpp.authentication_required\",BRIDGE_DOWN:\"xmpp.bridge_down\",CALL_ACCEPTED:\"xmpp.callaccepted.jingle\",CALL_INCOMING:\"xmpp.callincoming.jingle\",CALL_ENDED:\"xmpp.callended.jingle\",CHAT_ERROR_RECEIVED:\"xmpp.chat_error_received\",CONFERENCE_PROPERTIES_CHANGED:\"xmpp.conference_properties_changed\",CONNECTION_ESTABLISHED:\"xmpp.connection.connected\",CONNECTION_FAILED:\"xmpp.connection.failed\",CONNECTION_INTERRUPTED:\"xmpp.connection.interrupted\",CONNECTION_RESTORED:\"xmpp.connection.restored\",CONNECTION_ICE_FAILED:\"xmpp.connection.ice.failed\",CONNECTION_STATUS_CHANGED:\"xmpp.connection.status.changed\",DISPLAY_NAME_CHANGED:\"xmpp.display_name_changed\",EMUC_ROOM_ADDED:\"xmpp.emuc_room_added\",EMUC_ROOM_REMOVED:\"xmpp.emuc_room_removed\",ETHERPAD:\"xmpp.etherpad\",FOCUS_DISCONNECTED:\"xmpp.focus_disconnected\",FOCUS_LEFT:\"xmpp.focus_left\",GRACEFUL_SHUTDOWN:\"xmpp.graceful_shutdown\",ICE_RESTARTING:\"rtc.ice_restarting\",ICE_RESTART_SUCCESS:\"rtc.ice_restart_success\",KICKED:\"xmpp.kicked\",LOCAL_ROLE_CHANGED:\"xmpp.localrole_changed\",MESSAGE_RECEIVED:\"xmpp.message_received\",PRIVATE_MESSAGE_RECEIVED:\"xmpp.private_message_received\",MUC_MEMBER_BOT_TYPE_CHANGED:\"xmpp.muc_member_bot_type_changed\",MUC_DESTROYED:\"xmpp.muc_destroyed\",MUC_JOINED:\"xmpp.muc_joined\",MUC_MEMBER_JOINED:\"xmpp.muc_member_joined\",MUC_MEMBER_LEFT:\"xmpp.muc_member_left\",MUC_LEFT:\"xmpp.muc_left\",MUC_ROLE_CHANGED:\"xmpp.muc_role_changed\",MUC_LOCK_CHANGED:\"xmpp.muc_lock_changed\",PARTICIPANT_AUDIO_MUTED:\"xmpp.audio_muted\",PARTICIPANT_VIDEO_MUTED:\"xmpp.video_muted\",PARTICIPANT_VIDEO_TYPE_CHANGED:\"xmpp.video_type\",PARTCIPANT_FEATURES_CHANGED:\"xmpp.partcipant_features_changed\",PASSWORD_REQUIRED:\"xmpp.password_required\",PEERCONNECTION_READY:\"xmpp.peerconnection_ready\",PHONE_NUMBER_CHANGED:\"conference.phoneNumberChanged\",PRESENCE_RECEIVED:\"xmpp.presence_received\",PRESENCE_STATUS:\"xmpp.presence_status\",PROMPT_FOR_LOGIN:\"xmpp.prompt_for_login\",READY_TO_JOIN:\"xmpp.ready_to_join\",RECORDER_STATE_CHANGED:\"xmpp.recorderStateChanged\",REMOTE_STATS:\"xmpp.remote_stats\",RENEGOTIATION_FAILED:\"xmpp.renegotiation_failed\",RESERVATION_ERROR:\"xmpp.room_reservation_error\",ROOM_CONNECT_ERROR:\"xmpp.room_connect_error\",ROOM_CONNECT_NOT_ALLOWED_ERROR:\"xmpp.room_connect_error.not_allowed\",ROOM_JOIN_ERROR:\"xmpp.room_join_error\",ROOM_MAX_USERS_ERROR:\"xmpp.room_max_users_error\",SENDING_CHAT_MESSAGE:\"xmpp.sending_chat_message\",SENDING_PRIVATE_CHAT_MESSAGE:\"xmpp.sending_private_chat_message\",SESSION_ACCEPT_TIMEOUT:\"xmpp.session_accept_timeout\",SPEAKER_STATS_RECEIVED:\"xmpp.speaker_stats_received\",START_MUTED_FROM_FOCUS:\"xmpp.start_muted_from_focus\",SUBJECT_CHANGED:\"xmpp.subject_changed\",SUSPEND_DETECTED:\"xmpp.suspend_detected\",TRANSCRIPTION_STATUS_CHANGED:\"xmpp.transcription_status_changed\",TRANSPORT_INFO:\"xmpp.transportinfo.jingle\",VIDEO_SIP_GW_AVAILABILITY_CHANGED:\"xmpp.videoSIPGWAvailabilityChanged\",VIDEO_SIP_GW_SESSION_STATE_CHANGED:\"xmpp.videoSIPGWSessionStateChanged\",ICE_CONNECTION_STATE_CHANGED:\"xmpp.ice_connection_state_changed\",JSON_MESSAGE_RECEIVED:\"xmmp.json_message_received\"}},function(e,t,n){var r,i,o;function a(e){return(a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}i=[],void 0===(o=\"function\"==typeof(r=function(){\n/**\n   * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.\n   * Released under MIT license, http://github.com/requirejs/almond/LICENSE\n   */\nvar n,r,i,o,s;return function(e){var t,o,s,c,u={},l={},d={},p={},h=Object.prototype.hasOwnProperty,f=[].slice,m=/\\.js$/;function v(e,t){return h.call(e,t)}function y(e,t){var n,r,i,o,a,s,c,u,l,p,h,f=t&&t.split(\"/\"),v=d.map,y=v&&v[\"*\"]||{};if(e){for(a=(e=e.split(\"/\")).length-1,d.nodeIdCompat&&m.test(e[a])&&(e[a]=e[a].replace(m,\"\")),\".\"===e[0].charAt(0)&&f&&(e=f.slice(0,f.length-1).concat(e)),l=0;l<e.length;l++)if(\".\"===(h=e[l]))e.splice(l,1),l-=1;else if(\"..\"===h){if(0===l||1===l&&\"..\"===e[2]||\"..\"===e[l-1])continue;l>0&&(e.splice(l-1,2),l-=2)}e=e.join(\"/\")}if((f||y)&&v){for(l=(n=e.split(\"/\")).length;l>0;l-=1){if(r=n.slice(0,l).join(\"/\"),f)for(p=f.length;p>0;p-=1)if((i=v[f.slice(0,p).join(\"/\")])&&(i=i[r])){o=i,s=l;break}if(o)break;!c&&y&&y[r]&&(c=y[r],u=l)}!o&&c&&(o=c,s=u),o&&(n.splice(0,s,o),e=n.join(\"/\"))}return e}function g(t,n){return function(){var r=f.call(arguments,0);return\"string\"!=typeof r[0]&&1===r.length&&r.push(null),o.apply(e,r.concat([t,n]))}}function _(e){return function(t){u[e]=t}}function S(n){if(v(l,n)){var r=l[n];delete l[n],p[n]=!0,t.apply(e,r)}if(!v(u,n)&&!v(p,n))throw new Error(\"No \"+n);return u[n]}function b(e){var t,n=e?e.indexOf(\"!\"):-1;return n>-1&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function E(e){return e?b(e):[]}function T(e){return function(){return d&&d.config&&d.config[e]||{}}}s=function(e,t){var n,r,i=b(e),o=i[0],a=t[1];return e=i[1],o&&(n=S(o=y(o,a))),o?e=n&&n.normalize?n.normalize(e,(r=a,function(e){return y(e,r)})):y(e,a):(o=(i=b(e=y(e,a)))[0],e=i[1],o&&(n=S(o))),{f:o?o+\"!\"+e:e,n:e,pr:o,p:n}},c={require:function(e){return g(e)},exports:function(e){var t=u[e];return void 0!==t?t:u[e]={}},module:function(e){return{id:e,uri:\"\",exports:u[e],config:T(e)}}},t=function(t,n,r,i){var o,d,h,f,m,y,b,T=[],C=a(r);if(y=E(i=i||t),\"undefined\"===C||\"function\"===C){for(n=!n.length&&r.length?[\"require\",\"exports\",\"module\"]:n,m=0;m<n.length;m+=1)if(\"require\"===(d=(f=s(n[m],y)).f))T[m]=c.require(t);else if(\"exports\"===d)T[m]=c.exports(t),b=!0;else if(\"module\"===d)o=T[m]=c.module(t);else if(v(u,d)||v(l,d)||v(p,d))T[m]=S(d);else{if(!f.p)throw new Error(t+\" missing \"+d);f.p.load(f.n,g(i,!0),_(d),{}),T[m]=u[d]}h=r?r.apply(u[t],T):void 0,t&&(o&&o.exports!==e&&o.exports!==u[t]?u[t]=o.exports:h===e&&b||(u[t]=h))}else t&&(u[t]=r)},n=r=o=function(n,r,i,a,u){if(\"string\"==typeof n)return c[n]?c[n](r):S(s(n,E(r)).f);if(!n.splice){if((d=n).deps&&o(d.deps,d.callback),!r)return;r.splice?(n=r,r=i,i=null):n=e}return r=r||function(){},\"function\"==typeof i&&(i=a,a=u),a?t(e,n,r,i):setTimeout(function(){t(e,n,r,i)},4),o},o.config=function(e){return o(e)},n._defined=u,(i=function(e,t,n){if(\"string\"!=typeof e)throw new Error(\"See almond README: incorrect module build, no module name\");t.splice||(n=t,t=[]),v(u,e)||v(l,e)||(l[e]=[e,t,n])}).amd={jQuery:!0}}(),i(\"node_modules/almond/almond.js\",function(){}),o=this,s=function(e){Function.prototype.bind||(Function.prototype.bind=function(e){var t=this,n=Array.prototype.slice,r=Array.prototype.concat,i=n.call(arguments,1);return function(){return t.apply(e||this,r.call(i,n.call(arguments,0)))}}),Array.isArray||(Array.isArray=function(e){return\"[object Array]\"===Object.prototype.toString.call(e)}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){var t=this.length,n=Number(arguments[1])||0;for((n=n<0?Math.ceil(n):Math.floor(n))<0&&(n+=t);n<t;n++)if(n in this&&this[n]===e)return n;return-1}),Array.prototype.forEach||(Array.prototype.forEach=function(e,t){var n,r;if(null===this)throw new TypeError(\" this is null or not defined\");var i=Object(this),o=i.length>>>0;if(\"function\"!=typeof e)throw new TypeError(e+\" is not a function\");for(arguments.length>1&&(n=t),r=0;r<o;){var a;r in i&&(a=i[r],e.call(n,a,r,i)),r++}});var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";e.btoa||(e.btoa=function(e){var n,r,i,o,a,s,c,u=\"\",l=0;do{o=(n=e.charCodeAt(l++))>>2,a=(3&n)<<4|(r=e.charCodeAt(l++))>>4,s=(15&r)<<2|(i=e.charCodeAt(l++))>>6,c=63&i,isNaN(r)?(a=(3&n)<<4,s=c=64):isNaN(i)&&(c=64),u=u+t.charAt(o)+t.charAt(a)+t.charAt(s)+t.charAt(c)}while(l<e.length);return u}),e.atob||(e.atob=function(e){var n,r,i,o,a,s,c=\"\",u=0;e=e.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{n=t.indexOf(e.charAt(u++))<<2|(o=t.indexOf(e.charAt(u++)))>>4,r=(15&o)<<4|(a=t.indexOf(e.charAt(u++)))>>2,i=(3&a)<<6|(s=t.indexOf(e.charAt(u++))),c+=String.fromCharCode(n),64!==a&&(c+=String.fromCharCode(r)),64!==s&&(c+=String.fromCharCode(i))}while(u<e.length);return c})},\"function\"==typeof i&&i.amd?i(\"strophe-polyfill\",[],function(){return s(o)}):s(o),function(n,r){\"function\"==typeof i&&i.amd?i(\"strophe-sha1\",[],function(){return r()}):\"object\"===a(t)?e.exports=r():n.SHA1=r()}(this,function(){function e(e,r){e[r>>5]|=128<<24-r%32,e[15+(r+64>>9<<4)]=r;var a,s,c,u,l,d,p,h,f=new Array(80),m=1732584193,v=-271733879,y=-1732584194,g=271733878,_=-1009589776;for(a=0;a<e.length;a+=16){for(u=m,l=v,d=y,p=g,h=_,s=0;s<80;s++)f[s]=s<16?e[a+s]:o(f[s-3]^f[s-8]^f[s-14]^f[s-16],1),c=i(i(o(m,5),t(s,v,y,g)),i(i(_,f[s]),n(s))),_=g,g=y,y=o(v,30),v=m,m=c;m=i(m,u),v=i(v,l),y=i(y,d),g=i(g,p),_=i(_,h)}return[m,v,y,g,_]}function t(e,t,n,r){return e<20?t&n|~t&r:e<40?t^n^r:e<60?t&n|t&r|n&r:t^n^r}function n(e){return e<20?1518500249:e<40?1859775393:e<60?-1894007588:-899497514}function r(t,n){var r=a(t);r.length>16&&(r=e(r,8*t.length));for(var i=new Array(16),o=new Array(16),s=0;s<16;s++)i[s]=909522486^r[s],o[s]=1549556828^r[s];var c=e(i.concat(a(n)),512+8*n.length);return e(o.concat(c),672)}function i(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function o(e,t){return e<<t|e>>>32-t}function a(e){for(var t=[],n=0;n<8*e.length;n+=8)t[n>>5]|=(255&e.charCodeAt(n/8))<<24-n%32;return t}function s(e){for(var t=\"\",n=0;n<32*e.length;n+=8)t+=String.fromCharCode(e[n>>5]>>>24-n%32&255);return t}function c(e){for(var t,n,r=\"\",i=0;i<4*e.length;i+=3)for(t=(e[i>>2]>>8*(3-i%4)&255)<<16|(e[i+1>>2]>>8*(3-(i+1)%4)&255)<<8|e[i+2>>2]>>8*(3-(i+2)%4)&255,n=0;n<4;n++)8*i+6*n>32*e.length?r+=\"=\":r+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(t>>6*(3-n)&63);return r}return{b64_hmac_sha1:function(e,t){return c(r(e,t))},b64_sha1:function(t){return c(e(a(t),8*t.length))},binb2str:s,core_hmac_sha1:r,str_hmac_sha1:function(e,t){return s(r(e,t))},str_sha1:function(t){return s(e(a(t),8*t.length))}}}),function(n,r){\"function\"==typeof i&&i.amd?i(\"strophe-md5\",[],function(){return r()}):\"object\"===a(t)?e.exports=r():n.MD5=r()}(this,function(){var e=function(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n},t=function(e){for(var t=[],n=0;n<8*e.length;n+=8)t[n>>5]|=(255&e.charCodeAt(n/8))<<n%32;return t},n=function(t,n,r,i,o,a){return e((s=e(e(n,t),e(i,a)))<<(c=o)|s>>>32-c,r);var s,c},r=function(e,t,r,i,o,a,s){return n(t&r|~t&i,e,t,o,a,s)},i=function(e,t,r,i,o,a,s){return n(t&i|r&~i,e,t,o,a,s)},o=function(e,t,r,i,o,a,s){return n(t^r^i,e,t,o,a,s)},a=function(e,t,r,i,o,a,s){return n(r^(t|~i),e,t,o,a,s)},s=function(t,n){t[n>>5]|=128<<n%32,t[14+(n+64>>>9<<4)]=n;for(var s,c,u,l,d=1732584193,p=-271733879,h=-1732584194,f=271733878,m=0;m<t.length;m+=16)s=d,c=p,u=h,l=f,d=r(d,p,h,f,t[m+0],7,-680876936),f=r(f,d,p,h,t[m+1],12,-389564586),h=r(h,f,d,p,t[m+2],17,606105819),p=r(p,h,f,d,t[m+3],22,-1044525330),d=r(d,p,h,f,t[m+4],7,-176418897),f=r(f,d,p,h,t[m+5],12,1200080426),h=r(h,f,d,p,t[m+6],17,-1473231341),p=r(p,h,f,d,t[m+7],22,-45705983),d=r(d,p,h,f,t[m+8],7,1770035416),f=r(f,d,p,h,t[m+9],12,-1958414417),h=r(h,f,d,p,t[m+10],17,-42063),p=r(p,h,f,d,t[m+11],22,-1990404162),d=r(d,p,h,f,t[m+12],7,1804603682),f=r(f,d,p,h,t[m+13],12,-40341101),h=r(h,f,d,p,t[m+14],17,-1502002290),p=r(p,h,f,d,t[m+15],22,1236535329),d=i(d,p,h,f,t[m+1],5,-165796510),f=i(f,d,p,h,t[m+6],9,-1069501632),h=i(h,f,d,p,t[m+11],14,643717713),p=i(p,h,f,d,t[m+0],20,-373897302),d=i(d,p,h,f,t[m+5],5,-701558691),f=i(f,d,p,h,t[m+10],9,38016083),h=i(h,f,d,p,t[m+15],14,-660478335),p=i(p,h,f,d,t[m+4],20,-405537848),d=i(d,p,h,f,t[m+9],5,568446438),f=i(f,d,p,h,t[m+14],9,-1019803690),h=i(h,f,d,p,t[m+3],14,-187363961),p=i(p,h,f,d,t[m+8],20,1163531501),d=i(d,p,h,f,t[m+13],5,-1444681467),f=i(f,d,p,h,t[m+2],9,-51403784),h=i(h,f,d,p,t[m+7],14,1735328473),p=i(p,h,f,d,t[m+12],20,-1926607734),d=o(d,p,h,f,t[m+5],4,-378558),f=o(f,d,p,h,t[m+8],11,-2022574463),h=o(h,f,d,p,t[m+11],16,1839030562),p=o(p,h,f,d,t[m+14],23,-35309556),d=o(d,p,h,f,t[m+1],4,-1530992060),f=o(f,d,p,h,t[m+4],11,1272893353),h=o(h,f,d,p,t[m+7],16,-155497632),p=o(p,h,f,d,t[m+10],23,-1094730640),d=o(d,p,h,f,t[m+13],4,681279174),f=o(f,d,p,h,t[m+0],11,-358537222),h=o(h,f,d,p,t[m+3],16,-722521979),p=o(p,h,f,d,t[m+6],23,76029189),d=o(d,p,h,f,t[m+9],4,-640364487),f=o(f,d,p,h,t[m+12],11,-421815835),h=o(h,f,d,p,t[m+15],16,530742520),p=o(p,h,f,d,t[m+2],23,-995338651),d=a(d,p,h,f,t[m+0],6,-198630844),f=a(f,d,p,h,t[m+7],10,1126891415),h=a(h,f,d,p,t[m+14],15,-1416354905),p=a(p,h,f,d,t[m+5],21,-57434055),d=a(d,p,h,f,t[m+12],6,1700485571),f=a(f,d,p,h,t[m+3],10,-1894986606),h=a(h,f,d,p,t[m+10],15,-1051523),p=a(p,h,f,d,t[m+1],21,-2054922799),d=a(d,p,h,f,t[m+8],6,1873313359),f=a(f,d,p,h,t[m+15],10,-30611744),h=a(h,f,d,p,t[m+6],15,-1560198380),p=a(p,h,f,d,t[m+13],21,1309151649),d=a(d,p,h,f,t[m+4],6,-145523070),f=a(f,d,p,h,t[m+11],10,-1120210379),h=a(h,f,d,p,t[m+2],15,718787259),p=a(p,h,f,d,t[m+9],21,-343485551),d=e(d,s),p=e(p,c),h=e(h,u),f=e(f,l);return[d,p,h,f]};return{hexdigest:function(e){return function(e){for(var t=\"\",n=0;n<4*e.length;n++)t+=\"0123456789abcdef\".charAt(e[n>>2]>>n%4*8+4&15)+\"0123456789abcdef\".charAt(e[n>>2]>>n%4*8&15);return t}(s(t(e),8*e.length))},hash:function(e){return function(e){for(var t=\"\",n=0;n<32*e.length;n+=8)t+=String.fromCharCode(e[n>>5]>>>n%32&255);return t}(s(t(e),8*e.length))}}}),function(n,r){\"function\"==typeof i&&i.amd?i(\"strophe-utils\",[],function(){return r()}):\"object\"===a(t)?e.exports=r():n.stropheUtils=r()}(this,function(){return{utf16to8:function(e){var t,n,r=\"\",i=e.length;for(t=0;t<i;t++)(n=e.charCodeAt(t))>=0&&n<=127?r+=e.charAt(t):n>2047?(r+=String.fromCharCode(224|n>>12&15),r+=String.fromCharCode(128|n>>6&63),r+=String.fromCharCode(128|n>>0&63)):(r+=String.fromCharCode(192|n>>6&31),r+=String.fromCharCode(128|n>>0&63));return r},addCookies:function(e){var t,n,r,i,o,s,c;for(t in e||{})o=\"\",s=\"\",c=\"\",r=\"object\"===a(n=e[t]),i=escape(unescape(r?n.value:n)),r&&(o=n.expires?\";expires=\"+n.expires:\"\",s=n.domain?\";domain=\"+n.domain:\"\",c=n.path?\";path=\"+n.path:\"\"),document.cookie=t+\"=\"+i+o+s+c}}}),function(n,o){if(\"function\"==typeof i&&i.amd)i(\"strophe-core\",[\"strophe-sha1\",\"strophe-md5\",\"strophe-utils\"],function(){return o.apply(this,arguments)});else if(\"object\"===a(t))e.exports=o(r(\"./sha1\"),r(\"./md5\"),r(\"./utils\"));else{var s=o(n.SHA1,n.MD5,n.stropheUtils);n.Strophe=s.Strophe,n.$build=s.$build,n.$iq=s.$iq,n.$msg=s.$msg,n.$pres=s.$pres,n.SHA1=s.SHA1,n.MD5=s.MD5,n.b64_hmac_sha1=s.SHA1.b64_hmac_sha1,n.b64_sha1=s.SHA1.b64_sha1,n.str_hmac_sha1=s.SHA1.str_hmac_sha1,n.str_sha1=s.SHA1.str_sha1}}(this,function(e,t,n){var r;function i(e,t){return new r.Builder(e,t)}function o(e){return new r.Builder(\"iq\",e)}function s(e){return new r.Builder(\"presence\",e)}return(r={VERSION:\"1.2.16\",NS:{HTTPBIND:\"http://jabber.org/protocol/httpbind\",BOSH:\"urn:xmpp:xbosh\",CLIENT:\"jabber:client\",AUTH:\"jabber:iq:auth\",ROSTER:\"jabber:iq:roster\",PROFILE:\"jabber:iq:profile\",DISCO_INFO:\"http://jabber.org/protocol/disco#info\",DISCO_ITEMS:\"http://jabber.org/protocol/disco#items\",MUC:\"http://jabber.org/protocol/muc\",SASL:\"urn:ietf:params:xml:ns:xmpp-sasl\",STREAM:\"http://etherx.jabber.org/streams\",FRAMING:\"urn:ietf:params:xml:ns:xmpp-framing\",BIND:\"urn:ietf:params:xml:ns:xmpp-bind\",SESSION:\"urn:ietf:params:xml:ns:xmpp-session\",VERSION:\"jabber:iq:version\",STANZAS:\"urn:ietf:params:xml:ns:xmpp-stanzas\",XHTML_IM:\"http://jabber.org/protocol/xhtml-im\",XHTML:\"http://www.w3.org/1999/xhtml\"},XHTML:{tags:[\"a\",\"blockquote\",\"br\",\"cite\",\"em\",\"img\",\"li\",\"ol\",\"p\",\"span\",\"strong\",\"ul\",\"body\"],attributes:{a:[\"href\"],blockquote:[\"style\"],br:[],cite:[\"style\"],em:[],img:[\"src\",\"alt\",\"style\",\"height\",\"width\"],li:[\"style\"],ol:[\"style\"],p:[\"style\"],span:[\"style\"],strong:[],ul:[\"style\"],body:[]},css:[\"background-color\",\"color\",\"font-family\",\"font-size\",\"font-style\",\"font-weight\",\"margin-left\",\"margin-right\",\"text-align\",\"text-decoration\"],validTag:function(e){for(var t=0;t<r.XHTML.tags.length;t++)if(e===r.XHTML.tags[t])return!0;return!1},validAttribute:function(e,t){if(void 0!==r.XHTML.attributes[e]&&r.XHTML.attributes[e].length>0)for(var n=0;n<r.XHTML.attributes[e].length;n++)if(t===r.XHTML.attributes[e][n])return!0;return!1},validCSS:function(e){for(var t=0;t<r.XHTML.css.length;t++)if(e===r.XHTML.css[t])return!0;return!1}},Status:{ERROR:0,CONNECTING:1,CONNFAIL:2,AUTHENTICATING:3,AUTHFAIL:4,CONNECTED:5,DISCONNECTED:6,DISCONNECTING:7,ATTACHED:8,REDIRECT:9,CONNTIMEOUT:10},ErrorCondition:{BAD_FORMAT:\"bad-format\",CONFLICT:\"conflict\",MISSING_JID_NODE:\"x-strophe-bad-non-anon-jid\",NO_AUTH_MECH:\"no-auth-mech\",UNKNOWN_REASON:\"unknown\"},LogLevel:{DEBUG:0,INFO:1,WARN:2,ERROR:3,FATAL:4},ElementType:{NORMAL:1,TEXT:3,CDATA:4,FRAGMENT:11},TIMEOUT:1.1,SECONDARY_TIMEOUT:.1,addNamespace:function(e,t){r.NS[e]=t},forEachChild:function(e,t,n){var i,o;for(i=0;i<e.childNodes.length;i++)(o=e.childNodes[i]).nodeType!==r.ElementType.NORMAL||t&&!this.isTagEqual(o,t)||n(o)},isTagEqual:function(e,t){return e.tagName===t},_xmlGenerator:null,_makeGenerator:function(){var e;return void 0===document.implementation.createDocument||document.implementation.createDocument&&document.documentMode&&document.documentMode<10?(e=this._getIEXmlDom()).appendChild(e.createElement(\"strophe\")):e=document.implementation.createDocument(\"jabber:client\",\"strophe\",null),e},xmlGenerator:function(){return r._xmlGenerator||(r._xmlGenerator=r._makeGenerator()),r._xmlGenerator},_getIEXmlDom:function(){for(var e=null,t=[\"Msxml2.DOMDocument.6.0\",\"Msxml2.DOMDocument.5.0\",\"Msxml2.DOMDocument.4.0\",\"MSXML2.DOMDocument.3.0\",\"MSXML2.DOMDocument\",\"MSXML.DOMDocument\",\"Microsoft.XMLDOM\"],n=0;n<t.length&&null===e;n++)try{e=new ActiveXObject(t[n])}catch(t){e=null}return e},xmlElement:function(e){if(!e)return null;var t,n,i,o=r.xmlGenerator().createElement(e);for(t=1;t<arguments.length;t++){var s=arguments[t];if(s)if(\"string\"==typeof s||\"number\"==typeof s)o.appendChild(r.xmlTextNode(s));else if(\"object\"===a(s)&&\"function\"==typeof s.sort)for(n=0;n<s.length;n++){var c=s[n];\"object\"===a(c)&&\"function\"==typeof c.sort&&void 0!==c[1]&&null!==c[1]&&o.setAttribute(c[0],c[1])}else if(\"object\"===a(s))for(i in s)s.hasOwnProperty(i)&&void 0!==s[i]&&null!==s[i]&&o.setAttribute(i,s[i])}return o},xmlescape:function(e){return e=(e=(e=(e=(e=e.replace(/\\&/g,\"&amp;\")).replace(/</g,\"&lt;\")).replace(/>/g,\"&gt;\")).replace(/'/g,\"&apos;\")).replace(/\"/g,\"&quot;\")},xmlunescape:function(e){return e=(e=(e=(e=(e=e.replace(/\\&amp;/g,\"&\")).replace(/&lt;/g,\"<\")).replace(/&gt;/g,\">\")).replace(/&apos;/g,\"'\")).replace(/&quot;/g,'\"')},xmlTextNode:function(e){return r.xmlGenerator().createTextNode(e)},xmlHtmlNode:function(e){var t;return DOMParser?t=(new DOMParser).parseFromString(e,\"text/xml\"):((t=new ActiveXObject(\"Microsoft.XMLDOM\")).async=\"false\",t.loadXML(e)),t},getText:function(e){if(!e)return null;var t=\"\";0===e.childNodes.length&&e.nodeType===r.ElementType.TEXT&&(t+=e.nodeValue);for(var n=0;n<e.childNodes.length;n++)e.childNodes[n].nodeType===r.ElementType.TEXT&&(t+=e.childNodes[n].nodeValue);return r.xmlescape(t)},copyElement:function(e){var t,n;if(e.nodeType===r.ElementType.NORMAL){for(n=r.xmlElement(e.tagName),t=0;t<e.attributes.length;t++)n.setAttribute(e.attributes[t].nodeName,e.attributes[t].value);for(t=0;t<e.childNodes.length;t++)n.appendChild(r.copyElement(e.childNodes[t]))}else e.nodeType===r.ElementType.TEXT&&(n=r.xmlGenerator().createTextNode(e.nodeValue));return n},createHtml:function(e){var t,n,i,o,s,c,u,l,d,p,h;if(e.nodeType===r.ElementType.NORMAL)if(o=e.nodeName.toLowerCase(),r.XHTML.validTag(o))try{for(n=r.xmlElement(o),t=0;t<r.XHTML.attributes[o].length;t++)if(s=r.XHTML.attributes[o][t],null!=(c=e.getAttribute(s))&&\"\"!==c&&!1!==c&&0!==c)if(\"style\"===s&&\"object\"===a(c)&&void 0!==c.cssText&&(c=c.cssText),\"style\"===s){for(u=[],l=c.split(\";\"),i=0;i<l.length;i++)p=(d=l[i].split(\":\"))[0].replace(/^\\s*/,\"\").replace(/\\s*$/,\"\").toLowerCase(),r.XHTML.validCSS(p)&&(h=d[1].replace(/^\\s*/,\"\").replace(/\\s*$/,\"\"),u.push(p+\": \"+h));u.length>0&&(c=u.join(\"; \"),n.setAttribute(s,c))}else n.setAttribute(s,c);for(t=0;t<e.childNodes.length;t++)n.appendChild(r.createHtml(e.childNodes[t]))}catch(e){n=r.xmlTextNode(\"\")}else for(n=r.xmlGenerator().createDocumentFragment(),t=0;t<e.childNodes.length;t++)n.appendChild(r.createHtml(e.childNodes[t]));else if(e.nodeType===r.ElementType.FRAGMENT)for(n=r.xmlGenerator().createDocumentFragment(),t=0;t<e.childNodes.length;t++)n.appendChild(r.createHtml(e.childNodes[t]));else e.nodeType===r.ElementType.TEXT&&(n=r.xmlTextNode(e.nodeValue));return n},escapeNode:function(e){return\"string\"!=typeof e?e:e.replace(/^\\s+|\\s+$/g,\"\").replace(/\\\\/g,\"\\\\5c\").replace(/ /g,\"\\\\20\").replace(/\\\"/g,\"\\\\22\").replace(/\\&/g,\"\\\\26\").replace(/\\'/g,\"\\\\27\").replace(/\\//g,\"\\\\2f\").replace(/:/g,\"\\\\3a\").replace(/</g,\"\\\\3c\").replace(/>/g,\"\\\\3e\").replace(/@/g,\"\\\\40\")},unescapeNode:function(e){return\"string\"!=typeof e?e:e.replace(/\\\\20/g,\" \").replace(/\\\\22/g,'\"').replace(/\\\\26/g,\"&\").replace(/\\\\27/g,\"'\").replace(/\\\\2f/g,\"/\").replace(/\\\\3a/g,\":\").replace(/\\\\3c/g,\"<\").replace(/\\\\3e/g,\">\").replace(/\\\\40/g,\"@\").replace(/\\\\5c/g,\"\\\\\")},getNodeFromJid:function(e){return e.indexOf(\"@\")<0?null:e.split(\"@\")[0]},getDomainFromJid:function(e){var t=r.getBareJidFromJid(e);if(t.indexOf(\"@\")<0)return t;var n=t.split(\"@\");return n.splice(0,1),n.join(\"@\")},getResourceFromJid:function(e){var t=e.split(\"/\");return t.length<2?null:(t.splice(0,1),t.join(\"/\"))},getBareJidFromJid:function(e){return e?e.split(\"/\")[0]:null},_handleError:function(e){void 0!==e.stack&&r.fatal(e.stack),e.sourceURL?r.fatal(\"error: \"+this.handler+\" \"+e.sourceURL+\":\"+e.line+\" - \"+e.name+\": \"+e.message):e.fileName?r.fatal(\"error: \"+this.handler+\" \"+e.fileName+\":\"+e.lineNumber+\" - \"+e.name+\": \"+e.message):r.fatal(\"error: \"+e.message)},log:function(e,t){e===this.LogLevel.FATAL&&\"object\"===a(window.console)&&\"function\"==typeof window.console.error&&window.console.error(t)},debug:function(e){this.log(this.LogLevel.DEBUG,e)},info:function(e){this.log(this.LogLevel.INFO,e)},warn:function(e){this.log(this.LogLevel.WARN,e)},error:function(e){this.log(this.LogLevel.ERROR,e)},fatal:function(e){this.log(this.LogLevel.FATAL,e)},serialize:function(e){var t;if(!e)return null;\"function\"==typeof e.tree&&(e=e.tree());var n,i,o=e.nodeName;for(e.getAttribute(\"_realname\")&&(o=e.getAttribute(\"_realname\")),t=\"<\"+o,n=0;n<e.attributes.length;n++)\"_realname\"!==e.attributes[n].nodeName&&(t+=\" \"+e.attributes[n].nodeName+\"='\"+r.xmlescape(e.attributes[n].value)+\"'\");if(e.childNodes.length>0){for(t+=\">\",n=0;n<e.childNodes.length;n++)switch((i=e.childNodes[n]).nodeType){case r.ElementType.NORMAL:t+=r.serialize(i);break;case r.ElementType.TEXT:t+=r.xmlescape(i.nodeValue);break;case r.ElementType.CDATA:t+=\"<![CDATA[\"+i.nodeValue+\"]]>\"}t+=\"</\"+o+\">\"}else t+=\"/>\";return t},_requestId:0,_connectionPlugins:{},addConnectionPlugin:function(e,t){r._connectionPlugins[e]=t}}).Builder=function(e,t){\"presence\"!==e&&\"message\"!==e&&\"iq\"!==e||(t&&!t.xmlns?t.xmlns=r.NS.CLIENT:t||(t={xmlns:r.NS.CLIENT})),this.nodeTree=r.xmlElement(e,t),this.node=this.nodeTree},r.Builder.prototype={tree:function(){return this.nodeTree},toString:function(){return r.serialize(this.nodeTree)},up:function(){return this.node=this.node.parentNode,this},root:function(){return this.node=this.nodeTree,this},attrs:function(e){for(var t in e)e.hasOwnProperty(t)&&(void 0===e[t]?this.node.removeAttribute(t):this.node.setAttribute(t,e[t]));return this},c:function(e,t,n){var i=r.xmlElement(e,t,n);return this.node.appendChild(i),\"string\"!=typeof n&&\"number\"!=typeof n&&(this.node=i),this},cnode:function(e){var t,n=r.xmlGenerator();try{t=void 0!==n.importNode}catch(e){t=!1}var i=t?n.importNode(e,!0):r.copyElement(e);return this.node.appendChild(i),this.node=i,this},t:function(e){var t=r.xmlTextNode(e);return this.node.appendChild(t),this},h:function(e){var t=document.createElement(\"body\");t.innerHTML=e;for(var n=r.createHtml(t);n.childNodes.length>0;)this.node.appendChild(n.childNodes[0]);return this}},r.Handler=function(e,t,n,i,o,a,s){this.handler=e,this.ns=t,this.name=n,this.type=i,this.id=o,this.options=s||{matchBareFromJid:!1,ignoreNamespaceFragment:!1},this.options.matchBare&&(r.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.'),this.options.matchBareFromJid=this.options.matchBare,delete this.options.matchBare),this.options.matchBareFromJid?this.from=a?r.getBareJidFromJid(a):null:this.from=a,this.user=!0},r.Handler.prototype={getNamespace:function(e){var t=e.getAttribute(\"xmlns\");return t&&this.options.ignoreNamespaceFragment&&(t=t.split(\"#\")[0]),t},namespaceMatch:function(e){var t=!1;if(!this.ns)return!0;var n=this;return r.forEachChild(e,null,function(e){n.getNamespace(e)===n.ns&&(t=!0)}),t=t||this.getNamespace(e)===this.ns},isMatch:function(e){var t=e.getAttribute(\"from\");this.options.matchBareFromJid&&(t=r.getBareJidFromJid(t));var n=e.getAttribute(\"type\");return!(!this.namespaceMatch(e)||this.name&&!r.isTagEqual(e,this.name)||this.type&&(Array.isArray(this.type)?-1===this.type.indexOf(n):n!==this.type)||this.id&&e.getAttribute(\"id\")!==this.id||this.from&&t!==this.from)},run:function(e){var t=null;try{t=this.handler(e)}catch(e){throw r._handleError(e),e}return t},toString:function(){return\"{Handler: \"+this.handler+\"(\"+this.name+\",\"+this.id+\",\"+this.ns+\")}\"}},r.TimedHandler=function(e,t){this.period=e,this.handler=t,this.lastCalled=(new Date).getTime(),this.user=!0},r.TimedHandler.prototype={run:function(){return this.lastCalled=(new Date).getTime(),this.handler()},reset:function(){this.lastCalled=(new Date).getTime()},toString:function(){return\"{TimedHandler: \"+this.handler+\"(\"+this.period+\")}\"}},r.Connection=function(e,t){this.service=e,this.options=t||{};var i=this.options.protocol||\"\";for(var o in 0===e.indexOf(\"ws:\")||0===e.indexOf(\"wss:\")||0===i.indexOf(\"ws\")?this._proto=new r.Websocket(this):this._proto=new r.Bosh(this),this.jid=\"\",this.domain=null,this.features=null,this._sasl_data={},this.do_session=!1,this.do_bind=!1,this.timedHandlers=[],this.handlers=[],this.removeTimeds=[],this.removeHandlers=[],this.addTimeds=[],this.addHandlers=[],this.protocolErrorHandlers={HTTP:{},websocket:{}},this._idleTimeout=null,this._disconnectTimeout=null,this.authenticated=!1,this.connected=!1,this.disconnecting=!1,this.do_authentication=!0,this.paused=!1,this.restored=!1,this._data=[],this._uniqueId=0,this._sasl_success_handler=null,this._sasl_failure_handler=null,this._sasl_challenge_handler=null,this.maxRetries=5,this._idleTimeout=setTimeout(function(){this._onIdle()}.bind(this),100),n.addCookies(this.options.cookies),this.registerSASLMechanisms(this.options.mechanisms),r._connectionPlugins)if(r._connectionPlugins.hasOwnProperty(o)){var a=r._connectionPlugins[o],s=function(){};s.prototype=a,this[o]=new s,this[o].init(this)}},r.Connection.prototype={reset:function(){this._proto._reset(),this.do_session=!1,this.do_bind=!1,this.timedHandlers=[],this.handlers=[],this.removeTimeds=[],this.removeHandlers=[],this.addTimeds=[],this.addHandlers=[],this.authenticated=!1,this.connected=!1,this.disconnecting=!1,this.restored=!1,this._data=[],this._requests=[],this._uniqueId=0},pause:function(){this.paused=!0},resume:function(){this.paused=!1},getUniqueId:function(e){var t=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return(\"x\"===e?t:3&t|8).toString(16)});return\"string\"==typeof e||\"number\"==typeof e?t+\":\"+e:t+\"\"},addProtocolErrorHandler:function(e,t,n){this.protocolErrorHandlers[e][t]=n},connect:function(e,t,n,i,o,a,s){this.jid=e,this.authzid=r.getBareJidFromJid(this.jid),this.authcid=s||r.getNodeFromJid(this.jid),this.pass=t,this.servtype=\"xmpp\",this.connect_callback=n,this.disconnecting=!1,this.connected=!1,this.authenticated=!1,this.restored=!1,this.domain=r.getDomainFromJid(this.jid),this._changeConnectStatus(r.Status.CONNECTING,null),this._proto._connect(i,o,a)},attach:function(e,t,n,i,o,a,s){if(!(this._proto instanceof r.Bosh))throw{name:\"StropheSessionError\",message:'The \"attach\" method can only be used with a BOSH connection.'};this._proto._attach(e,t,n,i,o,a,s)},restore:function(e,t,n,r,i){if(!this._sessionCachingSupported())throw{name:\"StropheSessionError\",message:'The \"restore\" method can only be used with a BOSH connection.'};this._proto._restore(e,t,n,r,i)},_sessionCachingSupported:function(){if(this._proto instanceof r.Bosh){if(!JSON)return!1;try{sessionStorage.setItem(\"_strophe_\",\"_strophe_\"),sessionStorage.removeItem(\"_strophe_\")}catch(e){return!1}return!0}return!1},xmlInput:function(e){},xmlOutput:function(e){},rawInput:function(e){},rawOutput:function(e){},nextValidRid:function(e){},send:function(e){if(null!==e){if(\"function\"==typeof e.sort)for(var t=0;t<e.length;t++)this._queueData(e[t]);else\"function\"==typeof e.tree?this._queueData(e.tree()):this._queueData(e);this._proto._send()}},flush:function(){clearTimeout(this._idleTimeout),this._onIdle()},sendPresence:function(e,t,n,r){var i=null,o=this;\"function\"==typeof e.tree&&(e=e.tree());var a=e.getAttribute(\"id\");if(a||(a=this.getUniqueId(\"sendPresence\"),e.setAttribute(\"id\",a)),\"function\"==typeof t||\"function\"==typeof n){var s=this.addHandler(function(e){i&&o.deleteTimedHandler(i),\"error\"===e.getAttribute(\"type\")?n&&n(e):t&&t(e)},null,\"presence\",null,a);r&&(i=this.addTimedHandler(r,function(){return o.deleteHandler(s),n&&n(null),!1}))}return this.send(e),a},sendIQ:function(e,t,n,r){var i=null,o=this;\"function\"==typeof e.tree&&(e=e.tree());var a=e.getAttribute(\"id\");if(a||(a=this.getUniqueId(\"sendIQ\"),e.setAttribute(\"id\",a)),\"function\"==typeof t||\"function\"==typeof n){var s=this.addHandler(function(e){i&&o.deleteTimedHandler(i);var r=e.getAttribute(\"type\");if(\"result\"===r)t&&t(e);else{if(\"error\"!==r)throw{name:\"StropheError\",message:\"Got bad IQ type of \"+r};n&&n(e)}},null,\"iq\",[\"error\",\"result\"],a);r&&(i=this.addTimedHandler(r,function(){return o.deleteHandler(s),n&&n(null),!1}))}return this.send(e),a},_queueData:function(e){if(null===e||!e.tagName||!e.childNodes)throw{name:\"StropheError\",message:\"Cannot queue non-DOMElement.\"};this._data.push(e)},_sendRestart:function(){this._data.push(\"restart\"),this._proto._sendRestart(),this._idleTimeout=setTimeout(function(){this._onIdle()}.bind(this),100)},addTimedHandler:function(e,t){var n=new r.TimedHandler(e,t);return this.addTimeds.push(n),n},deleteTimedHandler:function(e){this.removeTimeds.push(e)},addHandler:function(e,t,n,i,o,a,s){var c=new r.Handler(e,t,n,i,o,a,s);return this.addHandlers.push(c),c},deleteHandler:function(e){this.removeHandlers.push(e);var t=this.addHandlers.indexOf(e);t>=0&&this.addHandlers.splice(t,1)},registerSASLMechanisms:function(e){this.mechanisms={},(e=e||[r.SASLAnonymous,r.SASLExternal,r.SASLMD5,r.SASLOAuthBearer,r.SASLXOAuth2,r.SASLPlain,r.SASLSHA1]).forEach(this.registerSASLMechanism.bind(this))},registerSASLMechanism:function(e){this.mechanisms[e.prototype.name]=e},disconnect:function(e){if(this._changeConnectStatus(r.Status.DISCONNECTING,e),r.info(\"Disconnect was called because: \"+e),this.connected){var t=!1;this.disconnecting=!0,this.authenticated&&(t=s({xmlns:r.NS.CLIENT,type:\"unavailable\"})),this._disconnectTimeout=this._addSysTimedHandler(3e3,this._onDisconnectTimeout.bind(this)),this._proto._disconnect(t)}else r.info(\"Disconnect was called before Strophe connected to the server\"),this._proto._abortAllRequests(),this._doDisconnect()},_changeConnectStatus:function(e,t,n){for(var i in r._connectionPlugins)if(r._connectionPlugins.hasOwnProperty(i)){var o=this[i];if(o.statusChanged)try{o.statusChanged(e,t)}catch(e){r.error(i+\" plugin caused an exception changing status: \"+e)}}if(this.connect_callback)try{this.connect_callback(e,t,n)}catch(e){r._handleError(e),r.error(\"User connection callback caused an exception: \"+e)}},_doDisconnect:function(e){\"number\"==typeof this._idleTimeout&&clearTimeout(this._idleTimeout),null!==this._disconnectTimeout&&(this.deleteTimedHandler(this._disconnectTimeout),this._disconnectTimeout=null),r.info(\"_doDisconnect was called\"),this._proto._doDisconnect(),this.authenticated=!1,this.disconnecting=!1,this.restored=!1,this.handlers=[],this.timedHandlers=[],this.removeTimeds=[],this.removeHandlers=[],this.addTimeds=[],this.addHandlers=[],this._changeConnectStatus(r.Status.DISCONNECTED,e),this.connected=!1},_dataRecv:function(e,t){r.info(\"_dataRecv called\");var n=this._proto._reqToData(e);if(null!==n){var i,o;for(this.xmlInput!==r.Connection.prototype.xmlInput&&(n.nodeName===this._proto.strip&&n.childNodes.length?this.xmlInput(n.childNodes[0]):this.xmlInput(n)),this.rawInput!==r.Connection.prototype.rawInput&&(t?this.rawInput(t):this.rawInput(r.serialize(n)));this.removeHandlers.length>0;)o=this.removeHandlers.pop(),(i=this.handlers.indexOf(o))>=0&&this.handlers.splice(i,1);for(;this.addHandlers.length>0;)this.handlers.push(this.addHandlers.pop());if(this.disconnecting&&this._proto._emptyQueue())this._doDisconnect();else{var a,s,c=n.getAttribute(\"type\");if(null!==c&&\"terminate\"===c){if(this.disconnecting)return;return a=n.getAttribute(\"condition\"),s=n.getElementsByTagName(\"conflict\"),null!==a?(\"remote-stream-error\"===a&&s.length>0&&(a=\"conflict\"),this._changeConnectStatus(r.Status.CONNFAIL,a)):this._changeConnectStatus(r.Status.CONNFAIL,r.ErrorCondition.UNKOWN_REASON),void this._doDisconnect(a)}var u=this;r.forEachChild(n,null,function(e){var t,n;for(n=u.handlers,u.handlers=[],t=0;t<n.length;t++){var i=n[t];try{!i.isMatch(e)||!u.authenticated&&i.user?u.handlers.push(i):i.run(e)&&u.handlers.push(i)}catch(e){r.warn(\"Removing Strophe handlers due to uncaught exception: \"+e.message)}}})}}},mechanisms:{},_connect_cb:function(e,t,n){var i;r.info(\"_connect_cb was called\"),this.connected=!0;try{i=this._proto._reqToData(e)}catch(e){if(\"badformat\"!==e)throw e;this._changeConnectStatus(r.Status.CONNFAIL,r.ErrorCondition.BAD_FORMAT),this._doDisconnect(r.ErrorCondition.BAD_FORMAT)}if(i&&(this.xmlInput!==r.Connection.prototype.xmlInput&&(i.nodeName===this._proto.strip&&i.childNodes.length?this.xmlInput(i.childNodes[0]):this.xmlInput(i)),this.rawInput!==r.Connection.prototype.rawInput&&(n?this.rawInput(n):this.rawInput(r.serialize(i))),this._proto._connect_cb(i)!==r.Status.CONNFAIL))if(i.getElementsByTagNameNS?i.getElementsByTagNameNS(r.NS.STREAM,\"features\").length>0:i.getElementsByTagName(\"stream:features\").length>0||i.getElementsByTagName(\"features\").length>0){var o,a,s=[],c=i.getElementsByTagName(\"mechanism\");if(c.length>0)for(o=0;o<c.length;o++)a=r.getText(c[o]),this.mechanisms[a]&&s.push(this.mechanisms[a]);0!==s.length||0!==i.getElementsByTagName(\"auth\").length?!1!==this.do_authentication&&this.authenticate(s):this._proto._no_auth_received(t)}else this._proto._no_auth_received(t)},sortMechanismsByPriority:function(e){var t,n,r,i;for(t=0;t<e.length-1;++t){for(r=t,n=t+1;n<e.length;++n)e[n].prototype.priority>e[r].prototype.priority&&(r=n);r!==t&&(i=e[t],e[t]=e[r],e[r]=i)}return e},_attemptSASLAuth:function(e){e=this.sortMechanismsByPriority(e||[]);var t=0,n=!1;for(t=0;t<e.length;++t)if(e[t].prototype.test(this)){this._sasl_success_handler=this._addSysHandler(this._sasl_success_cb.bind(this),null,\"success\",null,null),this._sasl_failure_handler=this._addSysHandler(this._sasl_failure_cb.bind(this),null,\"failure\",null,null),this._sasl_challenge_handler=this._addSysHandler(this._sasl_challenge_cb.bind(this),null,\"challenge\",null,null),this._sasl_mechanism=new e[t],this._sasl_mechanism.onStart(this);var o=i(\"auth\",{xmlns:r.NS.SASL,mechanism:this._sasl_mechanism.name});if(this._sasl_mechanism.isClientFirst){var a=this._sasl_mechanism.onChallenge(this,null);o.t(btoa(a))}this.send(o.tree()),n=!0;break}return n},_attemptLegacyAuth:function(){null===r.getNodeFromJid(this.jid)?(this._changeConnectStatus(r.Status.CONNFAIL,r.ErrorCondition.MISSING_JID_NODE),this.disconnect(r.ErrorCondition.MISSING_JID_NODE)):(this._changeConnectStatus(r.Status.AUTHENTICATING,null),this._addSysHandler(this._auth1_cb.bind(this),null,null,null,\"_auth_1\"),this.send(o({type:\"get\",to:this.domain,id:\"_auth_1\"}).c(\"query\",{xmlns:r.NS.AUTH}).c(\"username\",{}).t(r.getNodeFromJid(this.jid)).tree()))},authenticate:function(e){this._attemptSASLAuth(e)||this._attemptLegacyAuth()},_sasl_challenge_cb:function(e){var t=atob(r.getText(e)),n=this._sasl_mechanism.onChallenge(this,t),o=i(\"response\",{xmlns:r.NS.SASL});return\"\"!==n&&o.t(btoa(n)),this.send(o.tree()),!0},_auth1_cb:function(e){var t=o({type:\"set\",id:\"_auth_2\"}).c(\"query\",{xmlns:r.NS.AUTH}).c(\"username\",{}).t(r.getNodeFromJid(this.jid)).up().c(\"password\").t(this.pass);return r.getResourceFromJid(this.jid)||(this.jid=r.getBareJidFromJid(this.jid)+\"/strophe\"),t.up().c(\"resource\",{}).t(r.getResourceFromJid(this.jid)),this._addSysHandler(this._auth2_cb.bind(this),null,null,null,\"_auth_2\"),this.send(t.tree()),!1},_sasl_success_cb:function(e){if(this._sasl_data[\"server-signature\"]){var t,n=atob(r.getText(e)).match(/([a-z]+)=([^,]+)(,|$)/);if(\"v\"===n[1]&&(t=n[2]),t!==this._sasl_data[\"server-signature\"])return this.deleteHandler(this._sasl_failure_handler),this._sasl_failure_handler=null,this._sasl_challenge_handler&&(this.deleteHandler(this._sasl_challenge_handler),this._sasl_challenge_handler=null),this._sasl_data={},this._sasl_failure_cb(null)}r.info(\"SASL authentication succeeded.\"),this._sasl_mechanism&&this._sasl_mechanism.onSuccess(),this.deleteHandler(this._sasl_failure_handler),this._sasl_failure_handler=null,this._sasl_challenge_handler&&(this.deleteHandler(this._sasl_challenge_handler),this._sasl_challenge_handler=null);var i=[],o=function(e,t){for(;e.length;)this.deleteHandler(e.pop());return this._sasl_auth1_cb.bind(this)(t),!1};return i.push(this._addSysHandler(function(e){o.bind(this)(i,e)}.bind(this),null,\"stream:features\",null,null)),i.push(this._addSysHandler(function(e){o.bind(this)(i,e)}.bind(this),r.NS.STREAM,\"features\",null,null)),this._sendRestart(),!1},_sasl_auth1_cb:function(e){var t,n;for(this.features=e,t=0;t<e.childNodes.length;t++)\"bind\"===(n=e.childNodes[t]).nodeName&&(this.do_bind=!0),\"session\"===n.nodeName&&(this.do_session=!0);if(!this.do_bind)return this._changeConnectStatus(r.Status.AUTHFAIL,null),!1;this._addSysHandler(this._sasl_bind_cb.bind(this),null,null,null,\"_bind_auth_2\");var i=r.getResourceFromJid(this.jid);return i?this.send(o({type:\"set\",id:\"_bind_auth_2\"}).c(\"bind\",{xmlns:r.NS.BIND}).c(\"resource\",{}).t(i).tree()):this.send(o({type:\"set\",id:\"_bind_auth_2\"}).c(\"bind\",{xmlns:r.NS.BIND}).tree()),!1},_sasl_bind_cb:function(e){var t;if(\"error\"===e.getAttribute(\"type\"))return r.info(\"SASL binding failed.\"),e.getElementsByTagName(\"conflict\").length>0&&(t=r.ErrorCondition.CONFLICT),this._changeConnectStatus(r.Status.AUTHFAIL,t,e),!1;var n,i=e.getElementsByTagName(\"bind\");if(!(i.length>0))return r.info(\"SASL binding failed.\"),this._changeConnectStatus(r.Status.AUTHFAIL,null,e),!1;(n=i[0].getElementsByTagName(\"jid\")).length>0&&(this.jid=r.getText(n[0]),this.do_session?(this._addSysHandler(this._sasl_session_cb.bind(this),null,null,null,\"_session_auth_2\"),this.send(o({type:\"set\",id:\"_session_auth_2\"}).c(\"session\",{xmlns:r.NS.SESSION}).tree())):(this.authenticated=!0,this._changeConnectStatus(r.Status.CONNECTED,null)))},_sasl_session_cb:function(e){if(\"result\"===e.getAttribute(\"type\"))this.authenticated=!0,this._changeConnectStatus(r.Status.CONNECTED,null);else if(\"error\"===e.getAttribute(\"type\"))return r.info(\"Session creation failed.\"),this._changeConnectStatus(r.Status.AUTHFAIL,null,e),!1;return!1},_sasl_failure_cb:function(e){return this._sasl_success_handler&&(this.deleteHandler(this._sasl_success_handler),this._sasl_success_handler=null),this._sasl_challenge_handler&&(this.deleteHandler(this._sasl_challenge_handler),this._sasl_challenge_handler=null),this._sasl_mechanism&&this._sasl_mechanism.onFailure(),this._changeConnectStatus(r.Status.AUTHFAIL,null,e),!1},_auth2_cb:function(e){return\"result\"===e.getAttribute(\"type\")?(this.authenticated=!0,this._changeConnectStatus(r.Status.CONNECTED,null)):\"error\"===e.getAttribute(\"type\")&&(this._changeConnectStatus(r.Status.AUTHFAIL,null,e),this.disconnect(\"authentication failed\")),!1},_addSysTimedHandler:function(e,t){var n=new r.TimedHandler(e,t);return n.user=!1,this.addTimeds.push(n),n},_addSysHandler:function(e,t,n,i,o){var a=new r.Handler(e,t,n,i,o);return a.user=!1,this.addHandlers.push(a),a},_onDisconnectTimeout:function(){return r.info(\"_onDisconnectTimeout was called\"),this._changeConnectStatus(r.Status.CONNTIMEOUT,null),this._proto._onDisconnectTimeout(),this._doDisconnect(),!1},_onIdle:function(){for(var e,t,n;this.addTimeds.length>0;)this.timedHandlers.push(this.addTimeds.pop());for(;this.removeTimeds.length>0;)t=this.removeTimeds.pop(),(e=this.timedHandlers.indexOf(t))>=0&&this.timedHandlers.splice(e,1);var r=(new Date).getTime();for(n=[],e=0;e<this.timedHandlers.length;e++)t=this.timedHandlers[e],!this.authenticated&&t.user||(t.lastCalled+t.period-r<=0?t.run()&&n.push(t):n.push(t));this.timedHandlers=n,clearTimeout(this._idleTimeout),this._proto._onIdle(),this.connected&&(this._idleTimeout=setTimeout(function(){this._onIdle()}.bind(this),100))}},r.SASLMechanism=function(e,t,n){this.name=e,this.isClientFirst=t,this.priority=n},r.SASLMechanism.prototype={test:function(e){return!0},onStart:function(e){this._connection=e},onChallenge:function(e,t){throw new Error(\"You should implement challenge handling!\")},onFailure:function(){this._connection=null},onSuccess:function(){this._connection=null}},r.SASLAnonymous=function(){},r.SASLAnonymous.prototype=new r.SASLMechanism(\"ANONYMOUS\",!1,20),r.SASLAnonymous.prototype.test=function(e){return null===e.authcid},r.SASLPlain=function(){},r.SASLPlain.prototype=new r.SASLMechanism(\"PLAIN\",!0,50),r.SASLPlain.prototype.test=function(e){return null!==e.authcid},r.SASLPlain.prototype.onChallenge=function(e){var t=e.authzid;return t+=\"\\0\",t+=e.authcid,t+=\"\\0\",t+=e.pass,n.utf16to8(t)},r.SASLSHA1=function(){},r.SASLSHA1.prototype=new r.SASLMechanism(\"SCRAM-SHA-1\",!0,70),r.SASLSHA1.prototype.test=function(e){return null!==e.authcid},r.SASLSHA1.prototype.onChallenge=function(r,i,o){var a=o||t.hexdigest(1234567890*Math.random()),s=\"n=\"+n.utf16to8(r.authcid);return s+=\",r=\",s+=a,r._sasl_data.cnonce=a,r._sasl_data[\"client-first-message-bare\"]=s,s=\"n,,\"+s,this.onChallenge=function(t,r){for(var i,o,a,s,c,u,l,d,p,h,f,m,v=\"c=biws,\",y=t._sasl_data[\"client-first-message-bare\"]+\",\"+r+\",\",g=t._sasl_data.cnonce,_=/([a-z]+)=([^,]+)(,|$)/;r.match(_);){var S=r.match(_);switch(r=r.replace(S[0],\"\"),S[1]){case\"r\":i=S[2];break;case\"s\":o=S[2];break;case\"i\":a=S[2]}}if(i.substr(0,g.length)!==g)return t._sasl_data={},t._sasl_failure_cb();for(y+=v+=\"r=\"+i,o=atob(o),o+=\"\\0\\0\\0\u0001\",p=n.utf16to8(t.pass),s=u=e.core_hmac_sha1(p,o),l=1;l<a;l++){for(c=e.core_hmac_sha1(p,e.binb2str(u)),d=0;d<5;d++)s[d]^=c[d];u=c}for(s=e.binb2str(s),h=e.core_hmac_sha1(s,\"Client Key\"),f=e.str_hmac_sha1(s,\"Server Key\"),m=e.core_hmac_sha1(e.str_sha1(e.binb2str(h)),y),t._sasl_data[\"server-signature\"]=e.b64_hmac_sha1(f,y),d=0;d<5;d++)h[d]^=m[d];return v+=\",p=\"+btoa(e.binb2str(h))}.bind(this),s},r.SASLMD5=function(){},r.SASLMD5.prototype=new r.SASLMechanism(\"DIGEST-MD5\",!1,60),r.SASLMD5.prototype.test=function(e){return null!==e.authcid},r.SASLMD5.prototype._quote=function(e){return'\"'+e.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"')+'\"'},r.SASLMD5.prototype.onChallenge=function(e,r,i){for(var o,a=/([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/,s=i||t.hexdigest(\"\"+1234567890*Math.random()),c=\"\",u=null,l=\"\";r.match(a);)switch(o=r.match(a),r=r.replace(o[0],\"\"),o[2]=o[2].replace(/^\"(.+)\"$/,\"$1\"),o[1]){case\"realm\":c=o[2];break;case\"nonce\":l=o[2];break;case\"qop\":o[2];break;case\"host\":u=o[2]}var d=e.servtype+\"/\"+e.domain;null!==u&&(d=d+\"/\"+u);var p=n.utf16to8(e.authcid+\":\"+c+\":\"+this._connection.pass),h=t.hash(p)+\":\"+l+\":\"+s,f=\"AUTHENTICATE:\"+d,m=\"\";return m+=\"charset=utf-8,\",m+=\"username=\"+this._quote(n.utf16to8(e.authcid))+\",\",m+=\"realm=\"+this._quote(c)+\",\",m+=\"nonce=\"+this._quote(l)+\",\",m+=\"nc=00000001,\",m+=\"cnonce=\"+this._quote(s)+\",\",m+=\"digest-uri=\"+this._quote(d)+\",\",m+=\"response=\"+t.hexdigest(t.hexdigest(h)+\":\"+l+\":00000001:\"+s+\":auth:\"+t.hexdigest(f))+\",\",m+=\"qop=auth\",this.onChallenge=function(){return\"\"},m},r.SASLOAuthBearer=function(){},r.SASLOAuthBearer.prototype=new r.SASLMechanism(\"OAUTHBEARER\",!0,40),r.SASLOAuthBearer.prototype.test=function(e){return null!==e.pass},r.SASLOAuthBearer.prototype.onChallenge=function(e){var t=\"n,\";return null!==e.authcid&&(t=t+\"a=\"+e.authzid),t+=\",\",t+=\"\u0001\",t+=\"auth=Bearer \",t+=e.pass,t+=\"\u0001\",t+=\"\u0001\",n.utf16to8(t)},r.SASLExternal=function(){},r.SASLExternal.prototype=new r.SASLMechanism(\"EXTERNAL\",!0,10),r.SASLExternal.prototype.onChallenge=function(e){return e.authcid===e.authzid?\"\":e.authzid},r.SASLXOAuth2=function(){},r.SASLXOAuth2.prototype=new r.SASLMechanism(\"X-OAUTH2\",!0,30),r.SASLXOAuth2.prototype.test=function(e){return null!==e.pass},r.SASLXOAuth2.prototype.onChallenge=function(e){var t=\"\\0\";return null!==e.authcid&&(t+=e.authzid),t+=\"\\0\",t+=e.pass,n.utf16to8(t)},{Strophe:r,$build:i,$iq:o,$msg:function(e){return new r.Builder(\"message\",e)},$pres:s,SHA1:e,MD5:t,b64_hmac_sha1:e.b64_hmac_sha1,b64_sha1:e.b64_sha1,str_hmac_sha1:e.str_hmac_sha1,str_sha1:e.str_sha1}}),function(n,o){if(\"function\"==typeof i&&i.amd)i(\"strophe-bosh\",[\"strophe-core\"],function(e){return o(e.Strophe,e.$build)});else if(\"object\"===a(t)){var s=r(\"./core\");e.exports=o(s.Strophe,s.$build)}else o(Strophe,$build)}(0,function(e,t){return e.Request=function(t,n,r,i){this.id=++e._requestId,this.xmlData=t,this.data=e.serialize(t),this.origFunc=n,this.func=n,this.rid=r,this.date=NaN,this.sends=i||0,this.abort=!1,this.dead=null,this.age=function(){return this.date?(new Date-this.date)/1e3:0},this.timeDead=function(){return this.dead?(new Date-this.dead)/1e3:0},this.xhr=this._newXHR()},e.Request.prototype={getResponse:function(){var t=null;if(this.xhr.responseXML&&this.xhr.responseXML.documentElement){if(\"parsererror\"===(t=this.xhr.responseXML.documentElement).tagName)throw e.error(\"invalid response received\"),e.error(\"responseText: \"+this.xhr.responseText),e.error(\"responseXML: \"+e.serialize(this.xhr.responseXML)),\"parsererror\"}else if(this.xhr.responseText){if(e.debug(\"Got responseText but no responseXML; attempting to parse it with DOMParser...\"),!(t=(new DOMParser).parseFromString(this.xhr.responseText,\"application/xml\").documentElement))throw new Error(\"Parsing produced null node\");if(t.querySelector(\"parsererror\"))throw e.error(\"invalid response received: \"+t.querySelector(\"parsererror\").textContent),e.error(\"responseText: \"+this.xhr.responseText),\"badformat\"}return t},_newXHR:function(){var e=null;return window.XMLHttpRequest?(e=new XMLHttpRequest).overrideMimeType&&e.overrideMimeType(\"text/xml; charset=utf-8\"):window.ActiveXObject&&(e=new ActiveXObject(\"Microsoft.XMLHTTP\")),e.onreadystatechange=this.func.bind(null,this),e}},e.Bosh=function(e){this._conn=e,this.rid=Math.floor(4294967295*Math.random()),this.sid=null,this.hold=1,this.wait=60,this.window=5,this.errors=0,this.inactivity=null,this.lastResponseHeaders=null,this._requests=[]},e.Bosh.prototype={strip:null,_buildBody:function(){var n=t(\"body\",{rid:this.rid++,xmlns:e.NS.HTTPBIND});return null!==this.sid&&n.attrs({sid:this.sid}),this._conn.options.keepalive&&this._conn._sessionCachingSupported()&&this._cacheSession(),n},_reset:function(){this.rid=Math.floor(4294967295*Math.random()),this.sid=null,this.errors=0,this._conn._sessionCachingSupported()&&window.sessionStorage.removeItem(\"strophe-bosh-session\"),this._conn.nextValidRid(this.rid)},_connect:function(t,n,r){this.wait=t||this.wait,this.hold=n||this.hold,this.errors=0;var i=this._buildBody().attrs({to:this._conn.domain,\"xml:lang\":\"en\",wait:this.wait,hold:this.hold,content:\"text/xml; charset=utf-8\",ver:\"1.6\",\"xmpp:version\":\"1.0\",\"xmlns:xmpp\":e.NS.BOSH});r&&i.attrs({route:r});var o=this._conn._connect_cb;this._requests.push(new e.Request(i.tree(),this._onRequestStateChange.bind(this,o.bind(this._conn)),i.tree().getAttribute(\"rid\"))),this._throttledRequestHandler()},_attach:function(t,n,r,i,o,a,s){this._conn.jid=t,this.sid=n,this.rid=r,this._conn.connect_callback=i,this._conn.domain=e.getDomainFromJid(this._conn.jid),this._conn.authenticated=!0,this._conn.connected=!0,this.wait=o||this.wait,this.hold=a||this.hold,this.window=s||this.window,this._conn._changeConnectStatus(e.Status.ATTACHED,null)},_restore:function(t,n,r,i,o){var a=JSON.parse(window.sessionStorage.getItem(\"strophe-bosh-session\"));if(!(null!=a&&a.rid&&a.sid&&a.jid&&(null==t||e.getBareJidFromJid(a.jid)===e.getBareJidFromJid(t)||null===e.getNodeFromJid(t)&&e.getDomainFromJid(a.jid)===t)))throw{name:\"StropheSessionError\",message:\"_restore: no restoreable session.\"};this._conn.restored=!0,this._attach(a.jid,a.sid,a.rid,n,r,i,o)},_cacheSession:function(){this._conn.authenticated?this._conn.jid&&this.rid&&this.sid&&window.sessionStorage.setItem(\"strophe-bosh-session\",JSON.stringify({jid:this._conn.jid,rid:this.rid,sid:this.sid})):window.sessionStorage.removeItem(\"strophe-bosh-session\")},_connect_cb:function(t){var n,r,i=t.getAttribute(\"type\");if(null!==i&&\"terminate\"===i)return n=t.getAttribute(\"condition\"),e.error(\"BOSH-Connection failed: \"+n),r=t.getElementsByTagName(\"conflict\"),null!==n?(\"remote-stream-error\"===n&&r.length>0&&(n=\"conflict\"),this._conn._changeConnectStatus(e.Status.CONNFAIL,n)):this._conn._changeConnectStatus(e.Status.CONNFAIL,\"unknown\"),this._conn._doDisconnect(n),e.Status.CONNFAIL;this.sid||(this.sid=t.getAttribute(\"sid\"));var o=t.getAttribute(\"requests\");o&&(this.window=parseInt(o,10));var a=t.getAttribute(\"hold\");a&&(this.hold=parseInt(a,10));var s=t.getAttribute(\"wait\");s&&(this.wait=parseInt(s,10));var c=t.getAttribute(\"inactivity\");c&&(this.inactivity=parseInt(c,10))},_disconnect:function(e){this._sendTerminate(e)},_doDisconnect:function(){this.sid=null,this.rid=Math.floor(4294967295*Math.random()),this._conn._sessionCachingSupported()&&window.sessionStorage.removeItem(\"strophe-bosh-session\"),this._conn.nextValidRid(this.rid)},_emptyQueue:function(){return 0===this._requests.length},_callProtocolErrorHandlers:function(e){var t,n=this._getRequestStatus(e);(t=this._conn.protocolErrorHandlers.HTTP[n])&&t.call(this,n)},_hitError:function(t){this.errors++,e.warn(\"request errored, status: \"+t+\", number of errors: \"+this.errors),this.errors>4&&this._conn._onDisconnectTimeout()},_no_auth_received:function(t){e.warn(\"Server did not yet offer a supported authentication mechanism. Sending a blank poll request.\"),t=t?t.bind(this._conn):this._conn._connect_cb.bind(this._conn);var n=this._buildBody();this._requests.push(new e.Request(n.tree(),this._onRequestStateChange.bind(this,t),n.tree().getAttribute(\"rid\"))),this._throttledRequestHandler()},_onDisconnectTimeout:function(){this._abortAllRequests()},_abortAllRequests:function(){for(var e;this._requests.length>0;)(e=this._requests.pop()).abort=!0,e.xhr.abort(),e.xhr.onreadystatechange=function(){}},_onIdle:function(){var t=this._conn._data;if(this._conn.authenticated&&0===this._requests.length&&0===t.length&&!this._conn.disconnecting&&(e.info(\"no requests during idle cycle, sending blank request\"),t.push(null)),!this._conn.paused){if(this._requests.length<2&&t.length>0){for(var n=this._buildBody(),r=0;r<t.length;r++)null!==t[r]&&(\"restart\"===t[r]?n.attrs({to:this._conn.domain,\"xml:lang\":\"en\",\"xmpp:restart\":\"true\",\"xmlns:xmpp\":e.NS.BOSH}):n.cnode(t[r]).up());delete this._conn._data,this._conn._data=[],this._requests.push(new e.Request(n.tree(),this._onRequestStateChange.bind(this,this._conn._dataRecv.bind(this._conn)),n.tree().getAttribute(\"rid\"))),this._throttledRequestHandler()}if(this._requests.length>0){var i=this._requests[0].age();null!==this._requests[0].dead&&this._requests[0].timeDead()>Math.floor(e.SECONDARY_TIMEOUT*this.wait)&&this._throttledRequestHandler(),i>Math.floor(e.TIMEOUT*this.wait)&&(e.warn(\"Request \"+this._requests[0].id+\" timed out, over \"+Math.floor(e.TIMEOUT*this.wait)+\" seconds since last activity\"),this._throttledRequestHandler())}}},_getRequestStatus:function(t,n){var r;if(4===t.xhr.readyState)try{r=t.xhr.status}catch(t){e.error(\"Caught an error while retrieving a request's status, reqStatus: \"+r)}return void 0===r&&(r=\"number\"==typeof n?n:0),r},_onRequestStateChange:function(t,n){if(e.debug(\"request id \"+n.id+\".\"+n.sends+\" state changed to \"+n.xhr.readyState),n.abort)n.abort=!1;else if(4===n.xhr.readyState){var r=this._getRequestStatus(n);if(this.lastResponseHeaders=n.xhr.getAllResponseHeaders(),this.disconnecting&&r>=400)return this._hitError(r),void this._callProtocolErrorHandlers(n);var i=r>0&&r<500,o=n.sends>this._conn.maxRetries;if((i||o)&&(this._removeRequest(n),e.debug(\"request id \"+n.id+\" should now be removed\")),200===r){var a=this._requests[0]===n;(this._requests[1]===n||a&&this._requests.length>0&&this._requests[0].age()>Math.floor(e.SECONDARY_TIMEOUT*this.wait))&&this._restartRequest(0),this._conn.nextValidRid(Number(n.rid)+1),e.debug(\"request id \"+n.id+\".\"+n.sends+\" got 200\"),t(n),this.errors=0}else 0===r||r>=400&&r<600||r>=12e3?(e.error(\"request id \"+n.id+\".\"+n.sends+\" error \"+r+\" happened\"),this._hitError(r),this._callProtocolErrorHandlers(n),r>=400&&r<500&&(this._conn._changeConnectStatus(e.Status.DISCONNECTING,null),this._conn._doDisconnect())):e.error(\"request id \"+n.id+\".\"+n.sends+\" error \"+r+\" happened\");i||o?o&&!this._conn.connected&&this._conn._changeConnectStatus(e.Status.CONNFAIL,\"giving-up\"):this._throttledRequestHandler()}},_processRequest:function(t){var n=this,r=this._requests[t],i=this._getRequestStatus(r,-1);if(r.sends>this._conn.maxRetries)this._conn._onDisconnectTimeout();else{var o=r.age(),a=!isNaN(o)&&o>Math.floor(e.TIMEOUT*this.wait),s=null!==r.dead&&r.timeDead()>Math.floor(e.SECONDARY_TIMEOUT*this.wait),c=4===r.xhr.readyState&&(i<1||i>=500);if((a||s||c)&&(s&&e.error(\"Request \"+this._requests[t].id+\" timed out (secondary), restarting\"),r.abort=!0,r.xhr.abort(),r.xhr.onreadystatechange=function(){},this._requests[t]=new e.Request(r.xmlData,r.origFunc,r.rid,r.sends),r=this._requests[t]),0===r.xhr.readyState){e.debug(\"request id \"+r.id+\".\"+r.sends+\" posting\");try{var u=this._conn.options.contentType||\"text/xml; charset=utf-8\";r.xhr.open(\"POST\",this._conn.service,!this._conn.options.sync),void 0!==r.xhr.setRequestHeader&&r.xhr.setRequestHeader(\"Content-Type\",u),this._conn.options.withCredentials&&(r.xhr.withCredentials=!0)}catch(t){return e.error(\"XHR open failed: \"+t.toString()),this._conn.connected||this._conn._changeConnectStatus(e.Status.CONNFAIL,\"bad-service\"),void this._conn.disconnect()}var l=function(){if(r.date=new Date,n._conn.options.customHeaders){var e=n._conn.options.customHeaders;for(var t in e)e.hasOwnProperty(t)&&r.xhr.setRequestHeader(t,e[t])}r.xhr.send(r.data)};if(r.sends>1){var d=1e3*Math.min(Math.floor(e.TIMEOUT*this.wait),Math.pow(r.sends,3));setTimeout(function(){l()},d)}else l();r.sends++,this._conn.xmlOutput!==e.Connection.prototype.xmlOutput&&(r.xmlData.nodeName===this.strip&&r.xmlData.childNodes.length?this._conn.xmlOutput(r.xmlData.childNodes[0]):this._conn.xmlOutput(r.xmlData)),this._conn.rawOutput!==e.Connection.prototype.rawOutput&&this._conn.rawOutput(r.data)}else e.debug(\"_processRequest: \"+(0===t?\"first\":\"second\")+\" request has readyState of \"+r.xhr.readyState)}},_removeRequest:function(t){var n;for(e.debug(\"removing request\"),n=this._requests.length-1;n>=0;n--)t===this._requests[n]&&this._requests.splice(n,1);t.xhr.onreadystatechange=function(){},this._throttledRequestHandler()},_restartRequest:function(e){var t=this._requests[e];null===t.dead&&(t.dead=new Date),this._processRequest(e)},_reqToData:function(e){try{return e.getResponse()}catch(e){if(\"parsererror\"!==e)throw e;this._conn.disconnect(\"strophe-parsererror\")}},_sendTerminate:function(t){e.info(\"_sendTerminate was called\");var n=this._buildBody().attrs({type:\"terminate\"});t&&n.cnode(t.tree());var r=new e.Request(n.tree(),this._onRequestStateChange.bind(this,this._conn._dataRecv.bind(this._conn)),n.tree().getAttribute(\"rid\"));this._requests.push(r),this._throttledRequestHandler()},_send:function(){clearTimeout(this._conn._idleTimeout),this._throttledRequestHandler(),this._conn._idleTimeout=setTimeout(function(){this._onIdle()}.bind(this._conn),100)},_sendRestart:function(){this._throttledRequestHandler(),clearTimeout(this._conn._idleTimeout)},_throttledRequestHandler:function(){this._requests?e.debug(\"_throttledRequestHandler called with \"+this._requests.length+\" requests\"):e.debug(\"_throttledRequestHandler called with undefined requests\"),this._requests&&0!==this._requests.length&&(this._requests.length>0&&this._processRequest(0),this._requests.length>1&&Math.abs(this._requests[0].rid-this._requests[1].rid)<this.window&&this._processRequest(1))}},e}),function(n,o){if(\"function\"==typeof i&&i.amd)i(\"strophe-websocket\",[\"strophe-core\"],function(e){return o(e.Strophe,e.$build)});else if(\"object\"===a(t)){var s=r(\"./core\");e.exports=o(s.Strophe,s.$build)}else o(Strophe,$build)}(0,function(e,t){return e.Websocket=function(e){this._conn=e,this.strip=\"wrapper\";var t=e.service;if(0!==t.indexOf(\"ws:\")&&0!==t.indexOf(\"wss:\")){var n=\"\";\"ws\"===e.options.protocol&&\"https:\"!==window.location.protocol?n+=\"ws\":n+=\"wss\",n+=\"://\"+window.location.host,0!==t.indexOf(\"/\")?n+=window.location.pathname+t:n+=t,e.service=n}},e.Websocket.prototype={_buildStream:function(){return t(\"open\",{xmlns:e.NS.FRAMING,to:this._conn.domain,version:\"1.0\"})},_check_streamerror:function(t,n){var r;if(0===(r=t.getElementsByTagNameNS?t.getElementsByTagNameNS(e.NS.STREAM,\"error\"):t.getElementsByTagName(\"stream:error\")).length)return!1;for(var i=r[0],o=\"\",a=\"\",s=0;s<i.childNodes.length;s++){var c=i.childNodes[s];if(\"urn:ietf:params:xml:ns:xmpp-streams\"!==c.getAttribute(\"xmlns\"))break;\"text\"===c.nodeName?a=c.textContent:o=c.nodeName}var u=\"WebSocket stream error: \";return u+=o||\"unknown\",a&&(u+=\" - \"+a),e.error(u),this._conn._changeConnectStatus(n,o),this._conn._doDisconnect(),!0},_reset:function(){},_connect:function(){this._closeSocket(),this.socket=new WebSocket(this._conn.service,\"xmpp\"),this.socket.onopen=this._onOpen.bind(this),this.socket.onerror=this._onError.bind(this),this.socket.onclose=this._onClose.bind(this),this.socket.onmessage=this._connect_cb_wrapper.bind(this)},_connect_cb:function(t){if(this._check_streamerror(t,e.Status.CONNFAIL))return e.Status.CONNFAIL},_handleStreamStart:function(t){var n=!1,r=t.getAttribute(\"xmlns\");\"string\"!=typeof r?n=\"Missing xmlns in <open />\":r!==e.NS.FRAMING&&(n=\"Wrong xmlns in <open />: \"+r);var i=t.getAttribute(\"version\");return\"string\"!=typeof i?n=\"Missing version in <open />\":\"1.0\"!==i&&(n=\"Wrong version in <open />: \"+i),!n||(this._conn._changeConnectStatus(e.Status.CONNFAIL,n),this._conn._doDisconnect(),!1)},_connect_cb_wrapper:function(t){if(0===t.data.indexOf(\"<open \")||0===t.data.indexOf(\"<?xml\")){var n=t.data.replace(/^(<\\?.*?\\?>\\s*)*/,\"\");if(\"\"===n)return;var r=(new DOMParser).parseFromString(n,\"text/xml\").documentElement;this._conn.xmlInput(r),this._conn.rawInput(t.data),this._handleStreamStart(r)&&this._connect_cb(r)}else if(0===t.data.indexOf(\"<close \")){var i=(new DOMParser).parseFromString(t.data,\"text/xml\").documentElement;this._conn.xmlInput(i),this._conn.rawInput(t.data);var o=i.getAttribute(\"see-other-uri\");if(o){var a=this._conn.service;(a.indexOf(\"wss:\")>=0&&o.indexOf(\"wss:\")>=0||a.indexOf(\"ws:\")>=0)&&(this._conn._changeConnectStatus(e.Status.REDIRECT,\"Received see-other-uri, resetting connection\"),this._conn.reset(),this._conn.service=o,this._connect())}else this._conn._changeConnectStatus(e.Status.CONNFAIL,\"Received closing stream\"),this._conn._doDisconnect()}else{var s=this._streamWrap(t.data),c=(new DOMParser).parseFromString(s,\"text/xml\").documentElement;this.socket.onmessage=this._onMessage.bind(this),this._conn._connect_cb(c,null,t.data)}},_disconnect:function(n){if(this.socket&&this.socket.readyState!==WebSocket.CLOSED){n&&this._conn.send(n);var r=t(\"close\",{xmlns:e.NS.FRAMING});this._conn.xmlOutput(r.tree());var i=e.serialize(r);this._conn.rawOutput(i);try{this.socket.send(i)}catch(t){e.info(\"Couldn't send <close /> tag.\")}}this._conn._doDisconnect()},_doDisconnect:function(){e.info(\"WebSockets _doDisconnect was called\"),this._closeSocket()},_streamWrap:function(e){return\"<wrapper>\"+e+\"</wrapper>\"},_closeSocket:function(){if(this.socket)try{this.socket.onerror=null,this.socket.close()}catch(e){}this.socket=null},_emptyQueue:function(){return!0},_onClose:function(t){this._conn.connected&&!this._conn.disconnecting?(e.error(\"Websocket closed unexpectedly\"),this._conn._doDisconnect()):t&&1006===t.code&&!this._conn.connected&&this.socket?(e.error(\"Websocket closed unexcectedly\"),this._conn._changeConnectStatus(e.Status.CONNFAIL,\"The WebSocket connection could not be established or was disconnected.\"),this._conn._doDisconnect()):e.info(\"Websocket closed\")},_no_auth_received:function(t){e.error(\"Server did not offer a supported authentication mechanism\"),this._changeConnectStatus(e.Status.CONNFAIL,e.ErrorCondition.NO_AUTH_MECH),t&&t.call(this._conn),this._conn._doDisconnect()},_onDisconnectTimeout:function(){},_abortAllRequests:function(){},_onError:function(t){e.error(\"Websocket error \"+t),this._conn._changeConnectStatus(e.Status.CONNFAIL,\"The WebSocket connection could not be established or was disconnected.\"),this._disconnect()},_onIdle:function(){var t=this._conn._data;if(t.length>0&&!this._conn.paused){for(var n=0;n<t.length;n++){var r,i;null!==t[n]&&(r=\"restart\"===t[n]?this._buildStream().tree():t[n],i=e.serialize(r),this._conn.xmlOutput(r),this._conn.rawOutput(i),this.socket.send(i))}this._conn._data=[]}},_onMessage:function(t){var n,r,i='<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';if(t.data===i)return this._conn.rawInput(i),this._conn.xmlInput(t),void(this._conn.disconnecting||this._conn._doDisconnect());if(0===t.data.search(\"<open \")){if(n=(new DOMParser).parseFromString(t.data,\"text/xml\").documentElement,!this._handleStreamStart(n))return}else r=this._streamWrap(t.data),n=(new DOMParser).parseFromString(r,\"text/xml\").documentElement;return this._check_streamerror(n,e.Status.ERROR)?void 0:this._conn.disconnecting&&\"presence\"===n.firstChild.nodeName&&\"unavailable\"===n.firstChild.getAttribute(\"type\")?(this._conn.xmlInput(n),void this._conn.rawInput(e.serialize(n))):void this._conn._dataRecv(n,t.data)},_onOpen:function(){e.info(\"Websocket open\");var t=this._buildStream();this._conn.xmlOutput(t.tree());var n=e.serialize(t);this._conn.rawOutput(n),this.socket.send(n)},_reqToData:function(e){return e},_send:function(){this._conn.flush()},_sendRestart:function(){clearTimeout(this._conn._idleTimeout),this._conn._onIdle.bind(this._conn)()}},e}),function(n){if(\"function\"==typeof i&&i.amd)i(\"strophe\",[\"strophe-core\",\"strophe-bosh\",\"strophe-websocket\"],function(e){return e});else if(\"object\"===a(t)){var o=r(\"./core\");r(\"./bosh\"),r(\"./websocket\"),e.exports=o}}(),r([\"strophe-polyfill\"]),r(\"strophe\")})?r.apply(t,i):r)||(e.exports=o)},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"AUTH_STATUS_CHANGED\",function(){return r}),n.d(t,\"AVATAR_CHANGED\",function(){return i}),n.d(t,\"BEFORE_STATISTICS_DISPOSED\",function(){return o}),n.d(t,\"CONFERENCE_ERROR\",function(){return a}),n.d(t,\"CONFERENCE_FAILED\",function(){return s}),n.d(t,\"CONFERENCE_JOINED\",function(){return c}),n.d(t,\"CONFERENCE_LEFT\",function(){return u}),n.d(t,\"CONNECTION_ESTABLISHED\",function(){return l}),n.d(t,\"CONNECTION_INTERRUPTED\",function(){return d}),n.d(t,\"CONNECTION_RESTORED\",function(){return p}),n.d(t,\"DATA_CHANNEL_OPENED\",function(){return h}),n.d(t,\"DISPLAY_NAME_CHANGED\",function(){return f}),n.d(t,\"DOMINANT_SPEAKER_CHANGED\",function(){return m}),n.d(t,\"DTMF_SUPPORT_CHANGED\",function(){return v}),n.d(t,\"ENDPOINT_MESSAGE_RECEIVED\",function(){return y}),n.d(t,\"JVB121_STATUS\",function(){return g}),n.d(t,\"KICKED\",function(){return _}),n.d(t,\"PARTICIPANT_KICKED\",function(){return S}),n.d(t,\"LAST_N_ENDPOINTS_CHANGED\",function(){return b}),n.d(t,\"LOCK_STATE_CHANGED\",function(){return E}),n.d(t,\"SERVER_REGION_CHANGED\",function(){return T}),n.d(t,\"MESSAGE_RECEIVED\",function(){return C}),n.d(t,\"PRIVATE_MESSAGE_RECEIVED\",function(){return R}),n.d(t,\"PARTICIPANT_CONN_STATUS_CHANGED\",function(){return A}),n.d(t,\"PARTCIPANT_FEATURES_CHANGED\",function(){return w}),n.d(t,\"PARTICIPANT_PROPERTY_CHANGED\",function(){return k}),n.d(t,\"P2P_STATUS\",function(){return O}),n.d(t,\"PHONE_NUMBER_CHANGED\",function(){return I}),n.d(t,\"PROPERTIES_CHANGED\",function(){return P}),n.d(t,\"RECORDER_STATE_CHANGED\",function(){return D}),n.d(t,\"VIDEO_SIP_GW_AVAILABILITY_CHANGED\",function(){return N}),n.d(t,\"VIDEO_SIP_GW_SESSION_STATE_CHANGED\",function(){return L}),n.d(t,\"START_MUTED_POLICY_CHANGED\",function(){return M}),n.d(t,\"STARTED_MUTED\",function(){return x}),n.d(t,\"SUBJECT_CHANGED\",function(){return j}),n.d(t,\"SUSPEND_DETECTED\",function(){return F}),n.d(t,\"TALK_WHILE_MUTED\",function(){return U}),n.d(t,\"TRACK_ADDED\",function(){return H}),n.d(t,\"TRACK_AUDIO_LEVEL_CHANGED\",function(){return J}),n.d(t,\"TRACK_MUTE_CHANGED\",function(){return G}),n.d(t,\"TRACK_REMOVED\",function(){return B}),n.d(t,\"TRANSCRIPTION_STATUS_CHANGED\",function(){return V}),n.d(t,\"USER_JOINED\",function(){return q}),n.d(t,\"USER_LEFT\",function(){return K}),n.d(t,\"USER_ROLE_CHANGED\",function(){return W}),n.d(t,\"USER_STATUS_CHANGED\",function(){return z}),n.d(t,\"BOT_TYPE_CHANGED\",function(){return $});var r=\"conference.auth_status_changed\",i=\"conference.avatarChanged\",o=\"conference.beforeStatisticsDisposed\",a=\"conference.error\",s=\"conference.failed\",c=\"conference.joined\",u=\"conference.left\",l=\"conference.connectionEstablished\",d=\"conference.connectionInterrupted\",p=\"conference.connectionRestored\",h=\"conference.dataChannelOpened\",f=\"conference.displayNameChanged\",m=\"conference.dominantSpeaker\",v=\"conference.dtmfSupportChanged\",y=\"conference.endpoint_message_received\",g=\"conference.jvb121Status\",_=\"conference.kicked\",S=\"conference.participant_kicked\",b=\"conference.lastNEndpointsChanged\",E=\"conference.lock_state_changed\",T=\"conference.server_region_changed\",C=\"conference.messageReceived\",R=\"conference.privateMessageReceived\",A=\"conference.participant_conn_status_changed\",w=\"conference.partcipant_features_changed\",k=\"conference.participant_property_changed\",O=\"conference.p2pStatus\",I=\"conference.phoneNumberChanged\",P=\"conference.propertiesChanged\",D=\"conference.recorderStateChanged\",N=\"conference.videoSIPGWAvailabilityChanged\",L=\"conference.videoSIPGWSessionStateChanged\",M=\"conference.start_muted_policy_changed\",x=\"conference.started_muted\",j=\"conference.subjectChanged\",F=\"conference.suspendDetected\",U=\"conference.talk_while_muted\",H=\"conference.trackAdded\",J=\"conference.audioLevelsChanged\",G=\"conference.trackMuteChanged\",B=\"conference.trackRemoved\",V=\"conference.transcriptionStatusChanged\",q=\"conference.userJoined\",K=\"conference.userLeft\",W=\"conference.roleChanged\",z=\"conference.statusChanged\",$=\"conference.bot_type_changed\"},function(e,t,n){\"use strict\";var r=n(72);t.a=new r.a},function(e,t,n){var r=n(61),i=n(121),o={},a=[],s=r.levels.TRACE;e.exports={addGlobalTransport:function(e){r.addGlobalTransport(e)},removeGlobalTransport:function(e){r.removeGlobalTransport(e)},setGlobalOptions:function(e){r.setGlobalOptions(e)},getLogger:function(e,t,n){var i=new r(s,e,t,n);return e?(o[e]=o[e]||[],o[e].push(i)):a.push(i),i},setLogLevelById:function(e,t){for(var n=t?o[t]||[]:a,r=0;r<n.length;r++)n[r].setLevel(e)},setLogLevel:function(e){s=e;for(var t=0;t<a.length;t++)a[t].setLevel(e);for(var n in o){var r=o[n]||[];for(t=0;t<r.length;t++)r[t].setLevel(e)}},levels:r.levels,LogCollector:i}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return b});var r=n(29),i=n.n(r),o=n(8),a=n(71),s=n(32),c=n(50),u=n(75),l=n(3),d=n(25),p=n(51),h=n.n(p),f=n(15),m=n(23);function v(e){return(v=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var y,g=n(4).getLogger(e),_=!1;function S(e){if(!s.a.isBackendInitialized()){var t=d.a.callStatsUserName;s.a.initBackend({callStatsID:e.callStatsID,callStatsSecret:e.callStatsSecret,userName:e.swapUserNameAndAlias?e.callStatsAliasName:t,aliasName:e.swapUserNameAndAlias?t:e.callStatsAliasName,applicationName:e.applicationName,getWiFiStatsMethod:e.getWiFiStatsMethod,confID:e.confID})||g.error(\"CallStats Backend initialization failed bad\")}}function b(e,t){this.rtpStatsMap=new Map,this.eventEmitter=new i.a,this.xmpp=e,this.options=t||{},this.callStatsIntegrationEnabled=this.options.callStatsID&&this.options.callStatsSecret&&!0!==b.disableThirdPartyRequests,this.callStatsIntegrationEnabled&&(l.a.isReactNative()?S(this.options):function(e){_||(h.a.loadScript(e.customScriptUrl||\"https://api.callstats.io/static/callstats-ws.min.js\",!0,!0,void 0,function(){return S(e)}),_=!0)}(this.options),this.options.confID||g.warn('\"confID\" is not defined'),this.options.callStatsConfIDNamespace||g.warn('\"callStatsConfIDNamespace\" is not defined')),this.callsStatsInstances=new Map,b.instances.add(this)}b.init=function(e){b.audioLevelsEnabled=!e.disableAudioLevels,\"number\"==typeof e.audioLevelsInterval&&(b.audioLevelsInterval=e.audioLevelsInterval),b.disableThirdPartyRequests=e.disableThirdPartyRequests},b.audioLevelsEnabled=!1,b.audioLevelsInterval=200,b.disableThirdPartyRequests=!1,b.analytics=a.a,Object.defineProperty(b,\"instances\",{get:function(){return y||(y=new Set),y}}),b.prototype.startRemoteStats=function(e){this.stopRemoteStats(e);try{var t=new u.a(e,b.audioLevelsInterval,2e3,this.eventEmitter);t.start(b.audioLevelsEnabled),this.rtpStatsMap.set(e.id,t)}catch(e){g.error(\"Failed to start collecting remote statistics: \".concat(e))}},b.localStats=[],b.startLocalStats=function(e,t){if(b.audioLevelsEnabled){var n=new c.a(e,b.audioLevelsInterval,t);this.localStats.push(n),n.start()}},b.prototype.addAudioLevelListener=function(e){b.audioLevelsEnabled&&this.eventEmitter.on(m.a,e)},b.prototype.removeAudioLevelListener=function(e){b.audioLevelsEnabled&&this.eventEmitter.removeListener(m.a,e)},b.prototype.addBeforeDisposedListener=function(e){this.eventEmitter.on(m.b,e)},b.prototype.removeBeforeDisposedListener=function(e){this.eventEmitter.removeListener(m.b,e)},b.prototype.addConnectionStatsListener=function(e){this.eventEmitter.on(m.d,e)},b.prototype.removeConnectionStatsListener=function(e){this.eventEmitter.removeListener(m.d,e)},b.prototype.addByteSentStatsListener=function(e){this.eventEmitter.on(m.c,e)},b.prototype.removeByteSentStatsListener=function(e){this.eventEmitter.removeListener(m.c,e)},b.prototype.dispose=function(){try{this.callsStatsInstances.size||this.eventEmitter.emit(m.b);var e=!0,t=!1,n=void 0;try{for(var r,i=this.callsStatsInstances.values()[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var o=r.value;this.stopCallStats(o.tpc)}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}var a=!0,s=!1,c=void 0;try{for(var u,l=this.rtpStatsMap.keys()[Symbol.iterator]();!(a=(u=l.next()).done);a=!0){var d=u.value;this._stopRemoteStats(d)}}catch(e){s=!0,c=e}finally{try{a||null==l.return||l.return()}finally{if(s)throw c}}this.eventEmitter&&this.eventEmitter.removeAllListeners()}finally{b.instances.delete(this)}},b.stopLocalStats=function(e){if(b.audioLevelsEnabled)for(var t=0;t<b.localStats.length;t++)if(b.localStats[t].stream===e){b.localStats.splice(t,1)[0].stop();break}},b.prototype._stopRemoteStats=function(e){var t=this.rtpStatsMap.get(e);t&&(t.stop(),this.rtpStatsMap.delete(e))},b.prototype.stopRemoteStats=function(e){this._stopRemoteStats(e.id)},b.prototype.startCallStats=function(e,t){if(this.callStatsIntegrationEnabled)if(this.callsStatsInstances.has(e.id))g.error(\"CallStats instance for ${tpc} exists already\");else{g.info(\"Starting CallStats for \".concat(e,\"...\"));var n=new s.a(e,{confID:this._getCallStatsConfID(),remoteUserID:t});this.callsStatsInstances.set(e.id,n)}},b._getAllCallStatsInstances=function(){var e=new Set,t=!0,n=!1,r=void 0;try{for(var i,o=b.instances[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value,s=!0,c=!1,u=void 0;try{for(var l,d=a.callsStatsInstances.values()[Symbol.iterator]();!(s=(l=d.next()).done);s=!0){var p=l.value;e.add(p)}}catch(e){c=!0,u=e}finally{try{s||null==d.return||d.return()}finally{if(c)throw u}}}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}return e},b.prototype._getCallStatsConfID=function(){return this.options.callStatsConfIDNamespace?\"\".concat(this.options.callStatsConfIDNamespace,\"/\").concat(this.options.roomName):this.options.roomName},b.prototype.stopCallStats=function(e){var t=this.callsStatsInstances.get(e.id);t&&(1===this.callsStatsInstances.size&&this.eventEmitter.emit(m.b),this.callsStatsInstances.delete(e.id),t.sendTerminateEvent())},b.prototype.isCallstatsEnabled=function(){return this.callStatsIntegrationEnabled},b.prototype.sendConnectionResumeOrHoldEvent=function(e,t){var n=this.callsStatsInstances.get(e.id);n&&n.sendResumeOrHoldEvent(t)},b.prototype.sendIceConnectionFailedEvent=function(e){var t=this.callsStatsInstances.get(e.id);t&&t.sendIceConnectionFailedEvent()},b.prototype.sendMuteEvent=function(e,t,n){var r=e&&this.callsStatsInstances.get(e.id);s.a.sendMuteEvent(t,n,r)},b.prototype.sendScreenSharingEvent=function(e,t){var n=!0,r=!1,i=void 0;try{for(var o,a=this.callsStatsInstances.values()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){o.value.sendScreenSharingEvent(e,t)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}},b.prototype.sendDominantSpeakerEvent=function(e){var t=!0,n=!1,r=void 0;try{for(var i,o=this.callsStatsInstances.values()[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){i.value.sendDominantSpeakerEvent()}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}this.xmpp.sendDominantSpeakerEvent(e)},b.sendActiveDeviceListEvent=function(e){var t=b._getAllCallStatsInstances();if(t.size){var n=!0,r=!1,i=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var c=o.value;s.a.sendActiveDeviceListEvent(e,c)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}}else s.a.sendActiveDeviceListEvent(e,null)},b.prototype.associateStreamWithVideoTag=function(e,t,n,r,i,o){var a=this.callsStatsInstances.get(e.id);a&&a.associateStreamWithVideoTag(t,n,r,i,o)},b.sendGetUserMediaFailed=function(e){var t=e instanceof f.a?function(e){var t=new Error;return t.stack=e.stack,t.name=(e.name||\"Unknown error\")+(e.gum&&e.gum.error&&e.gum.error.name?\" - \".concat(e.gum.error.name):\"\"),t.constraintName=e.gum&&e.gum.constraints?JSON.stringify(e.gum.constraints):\"\",t.message=e.message,t}(e):e,n=b._getAllCallStatsInstances();if(n.size){var r=!0,i=!1,o=void 0;try{for(var a,c=n[Symbol.iterator]();!(r=(a=c.next()).done);r=!0){var u=a.value;s.a.sendGetUserMediaFailed(t,u)}}catch(e){i=!0,o=e}finally{try{r||null==c.return||c.return()}finally{if(i)throw o}}}else s.a.sendGetUserMediaFailed(t,null)},b.prototype.sendCreateOfferFailed=function(e,t){var n=this.callsStatsInstances.get(t.id);n&&n.sendCreateOfferFailed(e)},b.prototype.sendCreateAnswerFailed=function(e,t){var n=this.callsStatsInstances.get(t.id);n&&n.sendCreateAnswerFailed(e)},b.prototype.sendSetLocalDescFailed=function(e,t){var n=this.callsStatsInstances.get(t.id);n&&n.sendSetLocalDescFailed(e)},b.prototype.sendSetRemoteDescFailed=function(e,t){var n=this.callsStatsInstances.get(t.id);n&&n.sendSetRemoteDescFailed(e)},b.prototype.sendAddIceCandidateFailed=function(e,t){var n=this.callsStatsInstances.get(t.id);n&&n.sendAddIceCandidateFailed(e)},b.sendLog=function(e){var t=new Set,n=!0,r=!1,i=void 0;try{for(var o,a=b.instances[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var c=o.value;c.callsStatsInstances.size&&t.add(c.callsStatsInstances.values().next().value)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}if(t.size){var u=!0,l=!1,d=void 0;try{for(var p,h=t[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var f=p.value;s.a.sendApplicationLog(e,f)}}catch(e){l=!0,d=e}finally{try{u||null==h.return||h.return()}finally{if(l)throw d}}}else s.a.sendApplicationLog(e,null)},b.prototype.sendFeedback=function(e,t){return b.analytics.sendEvent(o.m,{rating:e,comment:t}),s.a.sendFeedback(this._getCallStatsConfID(),e,t)},b.LOCAL_JID=n(125).LOCAL_JID,b.reportGlobalError=function(e){e instanceof f.a&&e.gum?b.sendGetUserMediaFailed(e):b.sendLog(e)},b.sendAnalyticsAndLog=function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e?(t=\"object\"===v(e)?e:{name:e,properties:n},g.log(JSON.stringify(t)),this.analytics.sendEvent(e,n)):g.warn(\"No event or event name given.\")},b.sendAnalytics=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.analytics.sendEvent(e,t)}}).call(this,\"modules\\\\statistics\\\\statistics.js\")},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(33),o=n.n(i),a=n(3);function s(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}var c=Object(r.getLogger)(e),u={filterSpecialChars:function(e){return e?e.replace(/[\\\\\\/\\{,\\}\\+]/g,\"\"):e},iceparams:function(e,t){var n,r,i=null;return(r=u.findLine(e,\"a=ice-ufrag:\",t))&&(n=u.findLine(e,\"a=ice-pwd:\",t))&&(i={ufrag:u.parseICEUfrag(r),pwd:u.parseICEPwd(n)}),i},parseICEUfrag:function(e){return e.substring(12)},buildICEUfrag:function(e){return\"a=ice-ufrag:\".concat(e)},parseICEPwd:function(e){return e.substring(10)},buildICEPwd:function(e){return\"a=ice-pwd:\".concat(e)},parseMID:function(e){return e.substring(6)},parseMLine:function(e){var t={},n=e.substring(2).split(\" \");return t.media=n.shift(),t.port=n.shift(),t.proto=n.shift(),\"\"===n[n.length-1]&&n.pop(),t.fmt=n,t},buildMLine:function(e){return\"m=\".concat(e.media,\" \").concat(e.port,\" \").concat(e.proto,\" \").concat(e.fmt.join(\" \"))},parseRTPMap:function(e){var t={},n=e.substring(9).split(\" \");return t.id=n.shift(),n=n[0].split(\"/\"),t.name=n.shift(),t.clockrate=n.shift(),t.channels=n.length?n.shift():\"1\",t},parseSCTPMap:function(e){var t=e.substring(10).split(\" \");return[t[0],t[1],t.length>2?t[2]:null]},buildRTPMap:function(e){var t=\"a=rtpmap:\".concat(e.getAttribute(\"id\"),\" \").concat(e.getAttribute(\"name\"),\"/\").concat(e.getAttribute(\"clockrate\"));return e.getAttribute(\"channels\")&&\"1\"!==e.getAttribute(\"channels\")&&(t+=\"/\".concat(e.getAttribute(\"channels\"))),t},parseCrypto:function(e){var t={},n=e.substring(9).split(\" \");return t.tag=n.shift(),t[\"crypto-suite\"]=n.shift(),t[\"key-params\"]=n.shift(),n.length&&(t[\"session-params\"]=n.join(\" \")),t},parseFingerprint:function(e){var t={},n=e.substring(14).split(\" \");return t.hash=n.shift(),t.fingerprint=n.shift(),t},parseFmtp:function(e){var t=[],n=e.split(\" \");n.shift(),n=n.join(\" \").split(\";\");for(var r=0;r<n.length;r++){for(var i=n[r].split(\"=\")[0];i.length&&\" \"===i[0];)i=i.substring(1);var o=n[r].split(\"=\")[1];i&&o?t.push({name:i,value:o}):i&&t.push({name:\"\",value:i})}return t},parseICECandidate:function(e){var t={},n=e.split(\" \");t.foundation=n[0].substring(12),t.component=n[1],t.protocol=n[2].toLowerCase(),t.priority=n[3],t.ip=n[4],t.port=n[5],t.type=n[7],t.generation=0;for(var r=8;r<n.length;r+=2)switch(n[r]){case\"raddr\":t[\"rel-addr\"]=n[r+1];break;case\"rport\":t[\"rel-port\"]=n[r+1];break;case\"generation\":t.generation=n[r+1];break;case\"tcptype\":t.tcptype=n[r+1];break;default:c.log('parseICECandidate not translating \"'.concat(n[r],'\" = \"').concat(n[r+1],'\"'))}return t.network=\"1\",t.id=Math.random().toString(36).substr(2,10),t},buildICECandidate:function(e){var t=[\"a=candidate:\".concat(e.foundation),e.component,e.protocol,e.priority,e.ip,e.port,\"typ\",e.type].join(\" \");switch(t+=\" \",e.type){case\"srflx\":case\"prflx\":case\"relay\":e.hasOwnAttribute(\"rel-addr\")&&e.hasOwnAttribute(\"rel-port\")&&(t+=\"raddr\",t+=\" \",t+=e[\"rel-addr\"],t+=\" \",t+=\"rport\",t+=\" \",t+=e[\"rel-port\"],t+=\" \")}return e.hasOwnAttribute(\"tcptype\")&&(t+=\"tcptype\",t+=\" \",t+=e.tcptype,t+=\" \"),t+=\"generation\",t+=\" \",t+=e.hasOwnAttribute(\"generation\")?e.generation:\"0\"},parseSSRC:function(e){for(var t=new Map,n=e.split(\"\\r\\n\"),r=0;r<n.length;r++)if(\"a=ssrc:\"===n[r].substring(0,7)){var i=n[r].split(\"a=ssrc:\")[1].split(\" \")[0];t.get(i)||t.set(i,[]),t.get(i).push(n[r])}return t},parseRTCPFB:function(e){var t=e.substr(10).split(\" \"),n={};return n.pt=t.shift(),n.type=t.shift(),n.params=t,n},parseExtmap:function(e){var t=e.substr(9).split(\" \"),n={};return n.value=t.shift(),-1===n.value.indexOf(\"/\")?n.direction=\"both\":(n.direction=n.value.substr(n.value.indexOf(\"/\")+1),n.value=n.value.substr(0,n.value.indexOf(\"/\"))),n.uri=t.shift(),n.params=t,n},findLine:function(e,t,n){for(var r=e.split(\"\\r\\n\"),i=0;i<r.length;i++)if(r[i].substring(0,t.length)===t)return r[i];if(!n)return!1;r=n.split(\"\\r\\n\");for(var o=0;o<r.length;o++)if(r[o].substring(0,t.length)===t)return r[o];return!1},findLines:function(e,t,n){for(var r=e.split(\"\\r\\n\"),i=[],o=0;o<r.length;o++)r[o].substring(0,t.length)===t&&i.push(r[o]);if(i.length||!n)return i;r=n.split(\"\\r\\n\");for(var a=0;a<r.length;a++)r[a].substring(0,t.length)===t&&i.push(r[a]);return i},candidateToJingle:function(e){if(0===e.indexOf(\"candidate:\"))e=\"a=\".concat(e);else if(\"a=candidate:\"!==e.substring(0,12))return c.log(\"parseCandidate called with a line that is not a candidate line\"),c.log(e),null;\"\\r\\n\"===e.substring(e.length-2)&&(e=e.substring(0,e.length-2));var t={},n=e.split(\" \");if(\"typ\"!==n[6])return c.log(\"did not find typ in the right place\"),c.log(e),null;t.foundation=n[0].substring(12),t.component=n[1],t.protocol=n[2].toLowerCase(),t.priority=n[3],t.ip=n[4],t.port=n[5],t.type=n[7],t.generation=\"0\";for(var r=8;r<n.length;r+=2)switch(n[r]){case\"raddr\":t[\"rel-addr\"]=n[r+1];break;case\"rport\":t[\"rel-port\"]=n[r+1];break;case\"generation\":t.generation=n[r+1];break;case\"tcptype\":t.tcptype=n[r+1];break;default:c.log('not translating \"'.concat(n[r],'\" = \"').concat(n[r+1],'\"'))}return t.network=\"1\",t.id=Math.random().toString(36).substr(2,10),t},candidateFromJingle:function(e){var t=\"a=candidate:\";t+=e.getAttribute(\"foundation\"),t+=\" \",t+=e.getAttribute(\"component\"),t+=\" \";var n=e.getAttribute(\"protocol\");switch(a.a.isFirefox()&&\"ssltcp\"===n.toLowerCase()&&(n=\"tcp\"),t+=n,t+=\" \",t+=e.getAttribute(\"priority\"),t+=\" \",t+=e.getAttribute(\"ip\"),t+=\" \",t+=e.getAttribute(\"port\"),t+=\" \",t+=\"typ\",t+=\" \".concat(e.getAttribute(\"type\")),t+=\" \",e.getAttribute(\"type\")){case\"srflx\":case\"prflx\":case\"relay\":e.getAttribute(\"rel-addr\")&&e.getAttribute(\"rel-port\")&&(t+=\"raddr\",t+=\" \",t+=e.getAttribute(\"rel-addr\"),t+=\" \",t+=\"rport\",t+=\" \",t+=e.getAttribute(\"rel-port\"),t+=\" \")}return\"tcp\"===n.toLowerCase()&&(t+=\"tcptype\",t+=\" \",t+=e.getAttribute(\"tcptype\"),t+=\" \"),t+=\"generation\",t+=\" \",t+=e.getAttribute(\"generation\")||\"0\",\"\".concat(t,\"\\r\\n\")},parsePrimaryVideoSsrc:function(e){var t=e.ssrcs.map(function(e){return e.id}).filter(function(e,t,n){return n.indexOf(e)===t}).length,n=e.ssrcGroups&&e.ssrcGroups.length||0;if(!(t>1&&0===n)){var r=null;if(1===t)r=e.ssrcs[0].id;else if(2===t){var i=e.ssrcGroups.find(function(e){return\"FID\"===e.semantics});i&&(r=i.ssrcs.split(\" \")[0])}else if(t>=3){var o=e.ssrcGroups.find(function(e){return\"SIM\"===e.semantics});o&&(r=o.ssrcs.split(\" \")[0])}return r}},generateSsrc:function(){return o.a.randomInt(1,4294967295)},getSsrcAttribute:function(e,t,n){for(var r=0;r<e.ssrcs.length;++r){var i=e.ssrcs[r];if(i.id===t&&i.attribute===n)return i.value}},parseGroupSsrcs:function(e){return e.ssrcs.split(\" \").map(function(e){return parseInt(e,10)})},getMedia:function(e,t){return e.media.find(function(e){return e.type===t})},getUfrag:function(e){var t=e.split(\"\\n\").filter(function(e){return e.startsWith(\"a=ice-ufrag:\")});if(t.length>0)return t[0].substr(\"a=ice-ufrag:\".length)},preferVideoCodec:function(e,t){var n=null;if(e&&t){for(var r=0;r<e.rtp.length;++r){var i=e.rtp[r];if(i.codec&&i.codec.toLowerCase()===t.toLowerCase()){n=i.payload;break}}if(n){var o=e.payloads.toString().split(\" \").map(function(e){return parseInt(e,10)}),a=o.indexOf(n);o.splice(a,1),o.unshift(n),e.payloads=o.join(\" \")}}},stripVideoCodec:function(e,t){if(e&&t){var n=[],r=!0,i=!1,o=void 0;try{for(var a,c=e.rtp[Symbol.iterator]();!(r=(a=c.next()).done);r=!0){var u=a.value;u.codec&&u.codec.toLowerCase()===t.toLowerCase()&&n.push(u.payload)}}catch(e){i=!0,o=e}finally{try{r||null==c.return||c.return()}finally{if(i)throw o}}if(n.length>0){var l=n.map(function(e){return\"apt=\".concat(e)}),d=e.fmtp.filter(function(e){return-1!==l.indexOf(e.config)});n.push.apply(n,s(d.map(function(e){return e.payload})));var p=e.payloads.toString().split(\" \").map(Number).filter(function(e){return-1===n.indexOf(e)});0===p.length?(e.port=0,e.direction=\"inactive\",e.payloads=\"*\"):e.payloads=p.join(\" \"),e.rtp=e.rtp.filter(function(e){return-1!==p.indexOf(e.payload)}),e.fmtp=e.fmtp.filter(function(e){return-1!==p.indexOf(e.payload)}),e.rtcpFb&&(e.rtcpFb=e.rtcpFb.filter(function(e){return-1!==p.indexOf(e.payload)}))}}}};t.a=u}).call(this,\"modules\\\\xmpp\\\\SDPUtil.js\")},function(e,t){e.exports={CREATE_ANSWER_FAILED:\"rtc.create_answer_failed\",CREATE_OFFER_FAILED:\"rtc.create_offer_failed\",DATA_CHANNEL_OPEN:\"rtc.data_channel_open\",ENDPOINT_CONN_STATUS_CHANGED:\"rtc.endpoint_conn_status_changed\",DOMINANT_SPEAKER_CHANGED:\"rtc.dominant_speaker_changed\",LASTN_ENDPOINT_CHANGED:\"rtc.lastn_endpoint_changed\",GRANTED_PERMISSIONS:\"rtc.granted_permissions\",IS_SELECTED_CHANGED:\"rtc.is_selected_change\",LASTN_VALUE_CHANGED:\"rtc.lastn_value_changed\",LOCAL_TRACK_SSRC_UPDATED:\"rtc.local_track_ssrc_updated\",TRACK_ATTACHED:\"rtc.track_attached\",REMOTE_TRACK_ADDED:\"rtc.remote_track_added\",REMOTE_TRACK_MUTE:\"rtc.remote_track_mute\",REMOTE_TRACK_REMOVED:\"rtc.remote_track_removed\",REMOTE_TRACK_UNMUTE:\"rtc.remote_track_unmute\",SET_LOCAL_DESCRIPTION_FAILED:\"rtc.set_local_description_failed\",SET_REMOTE_DESCRIPTION_FAILED:\"rtc.set_remote_description_failed\",AUDIO_OUTPUT_DEVICE_CHANGED:\"rtc.audio_output_device_changed\",DEVICE_LIST_CHANGED:\"rtc.device_list_changed\",DEVICE_LIST_WILL_CHANGE:\"rtc.device_list_will_change\",DEVICE_LIST_AVAILABLE:\"rtc.device_list_available\",ENDPOINT_MESSAGE_RECEIVED:\"rtc.endpoint_message_received\",LOCAL_UFRAG_CHANGED:\"rtc.local_ufrag_changed\",REMOTE_UFRAG_CHANGED:\"rtc.remote_ufrag_changed\"}},function(e,t,n){\"use strict\";function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){i(e,t,n[t])})}return e}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,\"s\",function(){return o}),n.d(t,\"t\",function(){return a}),n.d(t,\"u\",function(){return s}),n.d(t,\"v\",function(){return c}),n.d(t,\"a\",function(){return u}),n.d(t,\"b\",function(){return l}),n.d(t,\"c\",function(){return d}),n.d(t,\"d\",function(){return p}),n.d(t,\"e\",function(){return h}),n.d(t,\"f\",function(){return f}),n.d(t,\"g\",function(){return m}),n.d(t,\"h\",function(){return v}),n.d(t,\"i\",function(){return y}),n.d(t,\"j\",function(){return g}),n.d(t,\"k\",function(){return _}),n.d(t,\"l\",function(){return S}),n.d(t,\"m\",function(){return b}),n.d(t,\"n\",function(){return E}),n.d(t,\"o\",function(){return T}),n.d(t,\"p\",function(){return C}),n.d(t,\"q\",function(){return R}),n.d(t,\"r\",function(){return A}),n.d(t,\"y\",function(){return w}),n.d(t,\"z\",function(){return k}),n.d(t,\"A\",function(){return O}),n.d(t,\"B\",function(){return I}),n.d(t,\"C\",function(){return P}),n.d(t,\"D\",function(){return D}),n.d(t,\"H\",function(){return N}),n.d(t,\"E\",function(){return L}),n.d(t,\"F\",function(){return M}),n.d(t,\"G\",function(){return x}),n.d(t,\"I\",function(){return j}),n.d(t,\"J\",function(){return F}),n.d(t,\"K\",function(){return U}),n.d(t,\"w\",function(){return H}),n.d(t,\"x\",function(){return J}),n.d(t,\"L\",function(){return G});var o=\"operational\",a=\"page\",s=\"track\",c=\"ui\",u=\"restart\",l=\"session-accept.timeout\",d=\"session-initiate.received\",p=\"session-initiate.timeout\",h=\"terminate\",f=\"transport-replace.received\",m=\"transport-replace.success\",v=\"established\",y=\"failed\",g=\"switch.to.jvb\",_=\"available.device\",S=\"connection.disconnected\",b=\"feedback\",E=\"ice.duration\",T=\"ice.establishment.duration.diff\",C=\"ice.state.changed\",R=\"track.no-bytes-sent\",A=\"track.unmuted\",w=function(){return{action:\"bridge.down\",actionSubject:\"bridge.down\",type:o}},k=function(e,t,n){return{type:o,action:\"connection.failed\",attributes:r({error_type:e,error_message:t},n)}},O=function(e,t){var n=\"connection.stage.reached\";return{action:n,actionSubject:e,attributes:t,source:n,type:o}},I=function(e,t,n){return{attributes:{participant_id:e,region:t,rtt:n},name:\"e2e_rtt\",type:o}},P=function(){return{action:\"focus.left\",actionSubject:\"focus.left\",type:o}},D=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{type:o,source:\"get.user.media\",action:e,attributes:t}},N=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{type:o,source:\"peer.conn.status\",action:\"duration\",attributes:e}},L=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{type:o,action:e,source:\"jingle\",attributes:t}},M=function(e,t){return{attributes:{media_type:e,value:t},action:\"track.no.data.from.source\",type:o}},x=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{type:o,action:e,source:\"p2p\",attributes:t}},j=function(){return{type:o,action:\"remotely.muted\"}},F=function(e){return{type:o,action:\"rtp.stats\",attributes:e}},U=function(e){return{type:o,action:\"rtt.by.region\",attributes:e}};function H(e,t,n){return{type:o,action:\"audio.output.problem\",attributes:{userID:e,localAudioLevels:t,remoteAudioLevels:n}}}var J=function(e,t){return{type:o,action:\"bridge-channel.error\",attributes:{code:e,reason:t}}},G=function(e){return O(\"ttfm\",e)}},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return r}),n.d(t,\"b\",function(){return i});var r=\"audio\",i=\"video\"},function(e,t,n){\"use strict\";(function(e){var r=n(8),i=n(39),o=n.n(i),a=n(29),s=n.n(a),c=n(4),u=n(11),l=n.n(u),d=n(15),p=n(24),h=n(9),f=n(30),m=n.n(f),v=n(3),y=n(7),g=n.n(y),_=n(40),S=n(6),b=n(5),E=n(14),T=n.n(E);function C(e){return(C=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function A(e,t){return!t||\"object\"!==C(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function O(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){I(e,t,n[t])})}return e}function I(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var P=Object(c.getLogger)(e);v.a.usesAdapter()&&n(129);var D,N,L=new s.a,M=[\"audio\",\"video\"],x={video:{aspectRatio:16/9,height:{ideal:720,max:720,min:240}}},j=5,F=\"default\",U=!1,H=!1,J=!1,G=!1,B=!1,V=!1,q=document.createElement(\"audio\"),K=void 0!==q.setSinkId;function W(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={audio:!1,video:!1},r=v.a.isFirefox()||v.a.isSafariWithVP8()||v.a.isEdge()||v.a.isReactNative();if(e.indexOf(\"video\")>=0){if(n.video={mandatory:{},optional:[]},t.cameraDeviceId)r&&(n.video.deviceId=t.cameraDeviceId),n.video.mandatory.sourceId=t.cameraDeviceId;else{var i=t.facingMode||o.a.USER;r&&(n.video.facingMode=i),n.video.optional.push({facingMode:i})}(t.minFps||t.maxFps||t.fps)&&((t.minFps||t.fps)&&(t.minFps=t.minFps||t.fps,n.video.mandatory.minFrameRate=t.minFps),t.maxFps&&(n.video.mandatory.maxFrameRate=t.maxFps)),function(e,t,n){m.a[n]&&(t&&(e.video.width={ideal:m.a[n].width},e.video.height={ideal:m.a[n].height}),e.video.mandatory.minWidth=m.a[n].width,e.video.mandatory.minHeight=m.a[n].height),e.video.mandatory.minWidth&&(e.video.mandatory.maxWidth=e.video.mandatory.minWidth),e.video.mandatory.minHeight&&(e.video.mandatory.maxHeight=e.video.mandatory.minHeight)}(n,r,t.resolution)}if(e.indexOf(\"audio\")>=0&&(v.a.isReactNative()?n.audio=!0:v.a.isFirefox()?t.micDeviceId?n.audio={mandatory:{},deviceId:t.micDeviceId,optional:[{sourceId:t.micDeviceId}]}:n.audio=!0:(n.audio={mandatory:{},optional:[]},t.micDeviceId&&(r&&(n.audio.deviceId=t.micDeviceId),n.audio.optional.push({sourceId:t.micDeviceId})),n.audio.optional.push({echoCancellation:!J&&!H},{googEchoCancellation:!J&&!H},{googAutoGainControl:!B&&!H},{googNoiseSuppression:!G&&!H},{googHighpassFilter:!V&&!H},{googNoiseSuppression2:!G&&!H},{googEchoCancellation2:!J&&!H},{googAutoGainControl2:!B&&!H}))),e.indexOf(\"screen\")>=0)if(v.a.isChrome())n.video={mandatory:z(O({},t,{source:\"screen\"})),optional:[]};else if(v.a.isFirefox())n.video={mozMediaSource:\"window\",mediaSource:\"window\",frameRate:t.frameRate||{min:j,max:j}};else{var a=\"'screen' WebRTC media source is supported only in Chrome and Firefox\";l.a.callErrorHandler(new Error(a)),P.error(a)}return e.indexOf(\"desktop\")>=0&&(n.video={mandatory:z(O({},t,{source:\"desktop\"})),optional:[]}),t.bandwidth&&(n.video||(n.video={mandatory:{},optional:[]}),n.video.optional.push({bandwidth:t.bandwidth})),v.a.isFirefox()&&t.firefox_fake_device&&(n.fake=!0),n}function z(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.desktopStream,n=e.frameRate,r=void 0===n?{min:j,max:j}:n,i=r.max,o=r.min,a={chromeMediaSource:e.source,maxWidth:window.screen.width,maxHeight:window.screen.height};return\"number\"==typeof o&&(a.minFrameRate=o),\"number\"==typeof i&&(a.maxFrameRate=i),void 0!==t&&(a.chromeMediaSourceId=t),a}function $(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={frameRate:j},n=e.desktopSharingFrameRate;return n&&n.max&&(t.frameRate=n.max),t}function X(e,t){var n=Boolean(t)&&t.getAudioTracks().length>0,r=Boolean(t)&&t.getVideoTracks().length>0,i={};-1!==e.indexOf(\"video\")&&(i.video=r),-1!==e.indexOf(\"audio\")&&(i.audio=n),L.emit(g.a.GRANTED_PERMISSIONS,i)}function Q(e){var t=e.filter(function(e){return\"audioinput\"===e.kind}).length,n=e.filter(function(e){return\"audiooutput\"===e.kind}).length,i=e.filter(function(e){return\"videoinput\"===e.kind}).length,o=e.filter(function(e){return\"videooutput\"===e.kind}).length;e.forEach(function(e){var a={audio_input_device_count:t,audio_output_device_count:n,video_input_device_count:i,video_output_device_count:o,device_id:e.deviceId,device_group_id:e.groupId,device_kind:e.kind,device_label:e.label};b.a.sendAnalytics(r.k,a)})}var Y=new(function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),A(this,w(t).call(this,L))}var n,r,i;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(t,p[\"a\"]),n=t,(r=[{key:\"init\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(\"boolean\"==typeof t.disableAEC&&(J=t.disableAEC,P.info(\"Disable AEC: \".concat(J))),\"boolean\"==typeof t.disableNS&&(G=t.disableNS,P.info(\"Disable NS: \".concat(G))),\"boolean\"==typeof t.disableAP&&(H=t.disableAP,P.info(\"Disable AP: \".concat(H))),\"boolean\"==typeof t.disableAGC&&(B=t.disableAGC,P.info(\"Disable AGC: \".concat(B))),\"boolean\"==typeof t.disableHPF&&(V=t.disableHPF,P.info(\"Disable HPF: \".concat(V))),D=void 0,window.clearInterval(N),N=void 0,this.enumerateDevices=function(){if(navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices)return function(e){navigator.mediaDevices.enumerateDevices().then(e,function(){return e([])})}}(),v.a.usesNewGumFlow())this.RTCPeerConnectionType=RTCPeerConnection,this.attachMediaStream=Z(function(e,t){e&&(e.srcObject=t)}),this.getStreamID=function(e){return e.id},this.getTrackID=function(e){return e.id};else{if(!v.a.isChromiumBased()&&!v.a.isReactNative()){var n=\"Endpoint does not appear to be WebRTC-capable\";throw P.error(n),new Error(n)}this.RTCPeerConnectionType=RTCPeerConnection,this.attachMediaStream=Z(function(e,t){return function(e,t){var n,r=\"srcObject\";r in e||(r=\"mozSrcObject\")in e||(r=null),r?e[r]=t:(t&&((n=t.jitsiObjectURL)||(t.jitsiObjectURL=n=URL.createObjectURL(t))),e.src=n||\"\")}(e,t),e}),this.getStreamID=function(e){var t=e.id;return\"number\"==typeof t?t:S.a.filterSpecialChars(t)},this.getTrackID=function(e){return e.id},MediaStream.prototype.getVideoTracks||(MediaStream.prototype.getVideoTracks=function(){return this.videoTracks}),MediaStream.prototype.getAudioTracks||(MediaStream.prototype.getAudioTracks=function(){return this.audioTracks})}this._initPCConstraints(t),_.a.init(t,this.getUserMediaWithConstraints.bind(this)),this.isDeviceListAvailable()&&this.enumerateDevices(function(t){D=t.splice(0),P.debug(\"Available devices: \",D),Q(D),L.emit(g.a.DEVICE_LIST_AVAILABLE,D);var n=function(){return e.enumerateDevices(function(e){var t;(function(e){return e.length!==D.length||e.map(t).sort().join(\"\")!==D.map(t).sort().join(\"\");function t(e){return JSON.stringify({kind:e.kind,deviceId:e.deviceId,groupId:e.groupId,label:e.label,facing:e.facing})}})(e)&&(D=(t=e).slice(0),P.info(\"list of media devices has changed:\",D),Q(D),L.emit(g.a.DEVICE_LIST_WILL_CHANGE,t),L.emit(g.a.DEVICE_LIST_CHANGED,t))})};v.a.supportsDeviceChangeEvent()?navigator.mediaDevices.addEventListener(\"devicechange\",n):N=window.setInterval(n,3e3)})}},{key:\"_initPCConstraints\",value:function(e){v.a.isFirefox()?this.pcConstraints={}:(v.a.isChromiumBased()||v.a.isReactNative())&&(this.pcConstraints={optional:[{googHighStartBitrate:0},{googPayloadPadding:!0},{googScreencastMinBitrate:100},{googCpuOveruseDetection:!0},{googCpuOveruseEncodeUsage:!0},{googCpuUnderuseThreshold:55},{googCpuOveruseThreshold:85}]},e.useIPv6&&this.pcConstraints.optional.push({googIPv6:!0}),this.p2pPcConstraints=JSON.parse(JSON.stringify(this.pcConstraints))),this.p2pPcConstraints=this.p2pPcConstraints||this.pcConstraints}},{key:\"getUserMediaWithConstraints\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=W(e,t);return P.info(\"Get media constraints\",n),new Promise(function(t,r){navigator.mediaDevices.getUserMedia(n).then(function(n){P.log(\"onUserMediaSuccess\"),X(e,n),t(n)}).catch(function(t){P.warn(\"Failed to get access to local media. \"+\" \".concat(t,\" \").concat(n,\" \")),X(e,void 0),r(new d.a(t,n,e))})})}},{key:\"_newGetUserMediaWithConstraints\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new Promise(function(n,r){navigator.mediaDevices.getUserMedia(t).then(function(t){P.log(\"onUserMediaSuccess\"),X(e,t),n(t)}).catch(function(n){P.warn(\"Failed to get access to local media. \"+\" \".concat(n,\" \").concat(t,\" \")),X(e,void 0),r(new d.a(n,t,e))})})}},{key:\"_newGetDesktopMedia\",value:function(e){var t=this;return _.a.isSupported()&&v.a.supportsVideo()?new Promise(function(n,r){_.a.obtainStream(t._parseDesktopSharingOptions(e),function(e){n(e)},function(e){r(e)})}):Promise.reject(new Error(\"Desktop sharing is not supported!\"))}},{key:\"obtainAudioAndVideoPermissions\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.devices=e.devices||M.concat(),e.resolution=e.resolution||720;var t=e.devices.includes(\"desktop\");return P.info(\"obtainAudioAndVideoPermissions\"),t&&!_.a.isSupported()?Promise.reject(new Error(\"Desktop sharing is not supported!\")):this._getAudioAndVideoStreams(e).then(function(t){return function(e,t){var n,r,i,o=[];if(e){var a=e.audioVideo;if(a){var s=a.getAudioTracks();if(s.length){n=new MediaStream;for(var c=0;c<s.length;c++)n.addTrack(s[c])}var u=a.getVideoTracks();if(u.length){i=new MediaStream;for(var l=0;l<u.length;l++)i.addTrack(u[l])}}else n=e.audio,i=e.video;r=e.desktop}if(r){var d=r,p=d.stream,f=d.sourceId,m=d.sourceType;o.push({stream:p,sourceId:f,sourceType:m,track:p.getVideoTracks()[0],mediaType:h.b,videoType:T.a.DESKTOP})}return n&&o.push({stream:n,track:n.getAudioTracks()[0],mediaType:h.a,videoType:null}),i&&o.push({stream:i,track:i.getVideoTracks()[0],mediaType:h.b,videoType:T.a.CAMERA,resolution:t}),o}(t,e.resolution)})}},{key:\"_getAudioAndVideoStreams\",value:function(e){var t=this,n=e.devices.includes(\"desktop\");return e.devices=e.devices.filter(function(e){return\"desktop\"!==e}),(e.devices.length?this.getUserMediaWithConstraints(e.devices,e):Promise.resolve(null)).then(function(n){var r=t._getMissingTracks(e.devices,n);return r.length?(t.stopMediaStream(n),t.getUserMediaWithConstraints(r,e).then(function(){return Promise.reject(new d.a({name:\"UnknownError\"},W(e.devices,e),r))})):n}).then(function(r){if(!n)return{audioVideo:r};if(e.desktopSharingSourceDevice)throw t.stopMediaStream(r),new Error(\"Using a camera as screenshare source isnot supported on this browser.\");return new Promise(function(n,i){_.a.obtainStream(t._parseDesktopSharingOptions(e),function(e){return n({audioVideo:r,desktop:e})},function(e){r&&t.stopMediaStream(r),i(e)})})})}},{key:\"_getMissingTracks\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0,n=[],r=e.includes(\"audio\"),i=t&&t.getAudioTracks().length>0;r&&!i&&n.push(\"audio\");var o=e.includes(\"video\"),a=t&&t.getVideoTracks().length>0;return o&&!a&&n.push(\"video\"),n}},{key:\"_parseDesktopSharingOptions\",value:function(e){return O({},e.desktopSharingExtensionExternalInstallation,{desktopSharingSources:e.desktopSharingSources,gumOptions:{frameRate:e.desktopSharingFrameRate},trackOptions:$(e)})}},{key:\"newObtainAudioAndVideoPermissions\",value:function(e){var t=this;P.info(\"Using the new gUM flow\");var n=[],r=function(){if(!(-1!==(e.devices||[]).indexOf(\"desktop\")))return Promise.resolve();var t=e.desktopSharingExtensionExternalInstallation,n=e.desktopSharingSourceDevice,r=e.desktopSharingSources,i=e.desktopSharingFrameRate;if(n){var o=D&&D.find(function(e){return\"videoinput\"===e.kind&&(e.deviceId===n||e.label===n)}),a=this._parseDesktopSharingOptions(e),s=a.gumOptions,c=a.trackOptions,u={video:O({},s,{deviceId:{exact:o&&o.deviceId||n}})};return this._newGetUserMediaWithConstraints([\"video\"],u).then(function(e){var t=e&&e.getTracks()[0];return(t&&t.applyConstraints?t.applyConstraints(c):Promise.resolve()).then(function(){return{sourceType:\"device\",stream:e}})})}return this._newGetDesktopMedia({desktopSharingExtensionExternalInstallation:t,desktopSharingSources:r,desktopSharingFrameRate:i})}.bind(this),i=function(){var t=(e.devices||[\"audio\",\"video\"]).filter(function(e){return\"audio\"===e||\"video\"===e&&v.a.supportsVideo()});if(!t.length)return Promise.resolve();var n=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=JSON.parse(JSON.stringify(t.constraints||x));if(e.indexOf(\"video\")>=0)if(n.video||(n.video={}),t.cameraDeviceId)n.video.deviceId=t.cameraDeviceId;else{var r=t.facingMode||o.a.USER;n.video.facingMode=r}else n.video=!1;return e.indexOf(\"audio\")>=0?(n.audio&&\"boolean\"!=typeof n.audio||(n.audio={}),n.audio.optional||(n.audio.optional=[]),n.audio.optional.push({sourceId:t.micDeviceId},{echoCancellation:!J&&!H},{googEchoCancellation:!J&&!H},{googAutoGainControl:!B&&!H},{googNoiseSuppression:!G&&!H},{googHighpassFilter:!V&&!H},{googNoiseSuppression2:!G&&!H},{googEchoCancellation2:!J&&!H},{googAutoGainControl2:!B&&!H})):n.audio=!1,e.indexOf(\"desktop\")>=0&&(n.video&&\"boolean\"!=typeof n.video||(n.video={}),n.video={mandatory:z(O({},t,{source:\"desktop\"}))}),n}(t,e);return P.info(\"Got media constraints: \",n),this._newGetUserMediaWithConstraints(t,n)}.bind(this);return r().then(function(e){if(e){var t=e.stream,r=e.sourceId,i=e.sourceType;n.push({stream:t,sourceId:r,sourceType:i,track:t.getVideoTracks()[0],videoType:T.a.DESKTOP})}}).then(i).then(function(t){if(t){var r=t.getAudioTracks();if(r.length){var i=new MediaStream(r);n.push({stream:i,track:i.getAudioTracks()[0],effects:e.effects})}var o=t.getVideoTracks();if(o.length){var a=new MediaStream(o);n.push({stream:a,track:a.getVideoTracks()[0],videoType:T.a.CAMERA,effects:e.effects})}}}).then(function(){return n}).catch(function(e){return n.forEach(function(e){var n=e.stream;t.stopMediaStream(n)}),Promise.reject(e)})}},{key:\"isDeviceListAvailable\",value:function(){return Boolean(navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices)}},{key:\"isDeviceChangeAvailable\",value:function(e){return\"output\"===e||\"audiooutput\"===e?K:v.a.isChromiumBased()||v.a.isFirefox()||v.a.isEdge()}},{key:\"stopMediaStream\",value:function(e){if(e){e.getTracks().forEach(function(e){e.stop&&e.stop()}),e.stop&&e.stop(),e.release&&e.release();var t=e.jitsiObjectURL;t&&(delete e.jitsiObjectURL,URL.revokeObjectURL(t))}}},{key:\"isDesktopSharingEnabled\",value:function(){return _.a.isSupported()}},{key:\"setAudioOutputDevice\",value:function(e){return this.isDeviceChangeAvailable(\"output\")?q.setSinkId(e).then(function(){F=e,U=!0,P.log(\"Audio output device set to \".concat(e)),L.emit(g.a.AUDIO_OUTPUT_DEVICE_CHANGED,e)}):Promise.reject(new Error(\"Audio output device change is not supported\"))}},{key:\"getAudioOutputDevice\",value:function(){return F}},{key:\"getCurrentlyAvailableMediaDevices\",value:function(){return D}},{key:\"getEventDataForActiveDevice\",value:function(e){var t=[],n={deviceId:e.deviceId,kind:e.kind,label:e.label,groupId:e.groupId};return t.push(n),{deviceList:t}}},{key:\"setSuspendVideo\",value:function(e,t){e.optional||(e.optional=[]),e.optional=e.optional.filter(function(e){return!e.hasOwnProperty(\"googSuspendBelowMinBitrate\")}),t&&e.optional.push({googSuspendBelowMinBitrate:\"true\"})}}])&&R(n.prototype,r),i&&R(n,i),t}());function Z(e){return function(t,n){var r=e.apply(Y,arguments);return n&&Y.isDeviceChangeAvailable(\"output\")&&n.getAudioTracks&&n.getAudioTracks().length&&U&&t.setSinkId(Y.getAudioOutputDevice()).catch(function(e){var n=new d.a(e,null,[\"audiooutput\"]);l.a.callUnhandledRejectionHandler({promise:this,reason:n}),P.warn(\"Failed to set audio output device for the element. Default audio output device will be used instead\",t,n)}),r}}t.a=Y}).call(this,\"modules\\\\RTC\\\\RTCUtils.js\")},function(e,t){var n=[],r=window.onerror;var i=window.onunhandledrejection;window.onerror=function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];n.forEach(function(e){return e.apply(void 0,t)}),r&&r.apply(void 0,t)},window.onunhandledrejection=function(e){n.forEach(function(t){return t(null,null,null,null,e.reason)}),i&&i(e)};var o={addHandler:function(e){n.push(e)},callErrorHandler:function(e){var t=window.onerror;t&&t(null,null,null,null,e)},callUnhandledRejectionHandler:function(e){var t=window.onunhandledrejection;t&&t(e)}};e.exports=o},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"CHROME_EXTENSION_GENERIC_ERROR\",function(){return r}),n.d(t,\"CHROME_EXTENSION_INSTALLATION_ERROR\",function(){return i}),n.d(t,\"CHROME_EXTENSION_USER_GESTURE_REQUIRED\",function(){return o}),n.d(t,\"CHROME_EXTENSION_USER_CANCELED\",function(){return a}),n.d(t,\"CONSTRAINT_FAILED\",function(){return s}),n.d(t,\"ELECTRON_DESKTOP_PICKER_ERROR\",function(){return c}),n.d(t,\"ELECTRON_DESKTOP_PICKER_NOT_FOUND\",function(){return u}),n.d(t,\"FIREFOX_EXTENSION_NEEDED\",function(){return l}),n.d(t,\"GENERAL\",function(){return d}),n.d(t,\"NOT_FOUND\",function(){return p}),n.d(t,\"PERMISSION_DENIED\",function(){return h}),n.d(t,\"TRACK_IS_DISPOSED\",function(){return f}),n.d(t,\"TRACK_NO_STREAM_FOUND\",function(){return m}),n.d(t,\"UNSUPPORTED_RESOLUTION\",function(){return v});var r=\"gum.chrome_extension_generic_error\",i=\"gum.chrome_extension_installation_error\",o=\"gum.chrome_extension_user_gesture_required\",a=\"gum.chrome_extension_user_canceled\",s=\"gum.constraint_failed\",c=\"gum.electron_desktop_picker_error\",u=\"gum.electron_desktop_picker_not_found\",l=\"gum.firefox_extension_needed\",d=\"gum.general\",p=\"gum.not_found\",h=\"gum.permission_denied\",f=\"track.track_is_disposed\",m=\"track.no_stream_found\",v=\"gum.unsupported_resolution\"},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return P});var r=n(4),i=n(96),o=n(11),a=n.n(o),s=n(2),c=n(58),u=n(24),l=n(54),d=n(9),p=n(3),h=n(7),f=n.n(h),m=n(10),v=n(5),y=n(97),g=n(14),_=n.n(g);function S(e){return(S=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function T(e,t){return(T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function C(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function R(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=Object(r.getLogger)(e),w=0,k=0;function O(e,t){var n=[],r=null;return e.forEach(function(e){e.mediaType===d.a?r=t.micDeviceId:e.videoType===_.a.CAMERA&&(r=t.cameraDeviceId),k=Object(l.a)(k);var i=new c.a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){R(e,t,n[t])})}return e}({},e,{deviceId:r,facingMode:t.facingMode,rtcId:k,effects:t.effects}));n.push(i)}),n}function I(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).map(function(e){var t=e.sourceId,n=e.sourceType,r=e.stream,i=e.track,o=e.videoType,a=e.effects,s=i.getSettings(),u=s.deviceId,d=s.facingMode;return k=Object(l.a)(k),new c.a({deviceId:u,facingMode:d,mediaType:i.kind,rtcId:k,sourceId:t,sourceType:n,stream:r,track:i,videoType:o||null,effects:a})})}var P=function(e){function t(e){var n,r,i,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),r=this,(n=!(i=E(t).call(this))||\"object\"!==S(i)&&\"function\"!=typeof i?C(r):i).conference=e,n.peerConnections=new Map,n.localTracks=[],n.options=o,n._channel=null,n._channelOpen=!1,n._lastN=-1,n._lastNEndpoints=null,n._maxFrameHeight=void 0,n._pinnedEndpoint=null,n._selectedEndpoints=[],n._lastNChangeListener=n._onLastNChanged.bind(C(C(n))),n._onDeviceListChanged=n._onDeviceListChanged.bind(C(C(n))),n._updateAudioOutputForAudioTracks=n._updateAudioOutputForAudioTracks.bind(C(C(n))),m.a.isDeviceChangeAvailable(\"output\")&&(m.a.addListener(f.a.AUDIO_OUTPUT_DEVICE_CHANGED,n._updateAudioOutputForAudioTracks),m.a.addListener(f.a.DEVICE_LIST_CHANGED,n._onDeviceListChanged)),n}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&T(e,t)}(t,u[\"a\"]),n=t,o=[{key:\"newCreateLocalTracks\",value:function(e){return I(e)}},{key:\"obtainAudioAndVideoPermissions\",value:function(e){var t=p.a.usesNewGumFlow();return(t?m.a.newObtainAudioAndVideoPermissions(e):m.a.obtainAudioAndVideoPermissions(e)).then(function(n){return t?I(n):O(n,e)})}},{key:\"addListener\",value:function(e,t){m.a.addListener(e,t)}},{key:\"removeListener\",value:function(e,t){m.a.removeListener(e,t)}},{key:\"init\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.options=e,m.a.init(this.options)}},{key:\"getPCConstraints\",value:function(e){var t=e?m.a.p2pPcConstraints:m.a.pcConstraints;return t?JSON.parse(JSON.stringify(t)):{}}},{key:\"attachMediaStream\",value:function(e,t){return m.a.attachMediaStream(e,t)}},{key:\"getStreamID\",value:function(e){return m.a.getStreamID(e)}},{key:\"getTrackID\",value:function(e){return m.a.getTrackID(e)}},{key:\"isDeviceListAvailable\",value:function(){return m.a.isDeviceListAvailable()}},{key:\"isDeviceChangeAvailable\",value:function(e){return m.a.isDeviceChangeAvailable(e)}},{key:\"isWebRtcSupported\",value:function(){return p.a.isSupported()}},{key:\"getAudioOutputDevice\",value:function(){return m.a.getAudioOutputDevice()}},{key:\"getCurrentlyAvailableMediaDevices\",value:function(){return m.a.getCurrentlyAvailableMediaDevices()}},{key:\"getEventDataForActiveDevice\",value:function(e){return m.a.getEventDataForActiveDevice(e)}},{key:\"setAudioOutputDevice\",value:function(e){return m.a.setAudioOutputDevice(e)}},{key:\"isUserStream\",value:function(e){return t.isUserStreamById(m.a.getStreamID(e))}},{key:\"isUserStreamById\",value:function(e){return e&&\"mixedmslabel\"!==e&&\"default\"!==e}},{key:\"enumerateDevices\",value:function(e){m.a.enumerateDevices(e)}},{key:\"stopMediaStream\",value:function(e){m.a.stopMediaStream(e)}},{key:\"isDesktopSharingEnabled\",value:function(){return m.a.isDesktopSharingEnabled()}}],(r=[{key:\"destroy\",value:function(){m.a.removeListener(f.a.AUDIO_OUTPUT_DEVICE_CHANGED,this._updateAudioOutputForAudioTracks),m.a.removeListener(f.a.DEVICE_LIST_CHANGED,this._onDeviceListChanged),this.removeListener(f.a.LASTN_ENDPOINT_CHANGED,this._lastNChangeListener),this._channelOpenListener&&this.removeListener(f.a.DATA_CHANNEL_OPEN,this._channelOpenListener)}},{key:\"initializeBridgeChannel\",value:function(e,t){var n=this;this._channel=new i.a(e,t,this.eventEmitter),this._channelOpenListener=function(){n._channelOpen=!0;try{n._channel.sendPinnedEndpointMessage(n._pinnedEndpoint),n._channel.sendSelectedEndpointsMessage(n._selectedEndpoints),void 0!==n._maxFrameHeight&&n._channel.sendReceiverVideoConstraintMessage(n._maxFrameHeight)}catch(e){a.a.callErrorHandler(e),A.error(\"Cannot send selected(\".concat(n._selectedEndpoint,\")\")+\"pinned(\".concat(n._pinnedEndpoint,\")\")+\"frameHeight(\".concat(n._maxFrameHeight,\") endpoint message\"),e)}n.removeListener(f.a.DATA_CHANNEL_OPEN,n._channelOpenListener),n._channelOpenListener=null,-1!==n._lastN&&n._channel.sendSetLastNMessage(n._lastN)},this.addListener(f.a.DATA_CHANNEL_OPEN,this._channelOpenListener),this.addListener(f.a.LASTN_ENDPOINT_CHANGED,this._lastNChangeListener)}},{key:\"_onDeviceListChanged\",value:function(){this._updateAudioOutputForAudioTracks(m.a.getAudioOutputDevice())}},{key:\"_onLastNChanged\",value:function(){var e,t,n=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=this._lastNEndpoints||[];this._lastNEndpoints=r,e=i.filter(function(e){return!n.isInLastN(e)}),t=r.filter(function(e){return-1===i.indexOf(e)}),this.conference.eventEmitter.emit(s.LAST_N_ENDPOINTS_CHANGED,e,t)}},{key:\"onCallEnded\",value:function(){this._channel&&(this._channel&&\"websocket\"===this._channel.mode&&this._channel.close(),this._channel=null,this._channelOpen=!1)}},{key:\"setReceiverVideoConstraint\",value:function(e){this._maxFrameHeight=e,this._channel&&this._channelOpen&&this._channel.sendReceiverVideoConstraintMessage(e)}},{key:\"selectEndpoints\",value:function(e){this._selectedEndpoints=e,this._channel&&this._channelOpen&&this._channel.sendSelectedEndpointsMessage(e)}},{key:\"pinEndpoint\",value:function(e){this._pinnedEndpoint=e,this._channel&&this._channelOpen&&this._channel.sendPinnedEndpointMessage(e)}},{key:\"createPeerConnection\",value:function(e,n,r,i){var o=t.getPCConstraints(r);void 0!==i.abtestSuspendVideo&&(m.a.setSuspendVideo(o,i.abtestSuspendVideo),v.a.analytics.addPermanentProperties({abtestSuspendVideo:i.abtestSuspendVideo})),p.a.supportsSdpSemantics()&&(n.sdpSemantics=\"plan-b\"),w=Object(l.a)(w);var a=new y.a(this,w,e,n,o,r,i);return this.peerConnections.set(a.id,a),a}},{key:\"_removePeerConnection\",value:function(e){var t=e.id;return!!this.peerConnections.has(t)&&(this.peerConnections.delete(t),!0)}},{key:\"addLocalTrack\",value:function(e){if(!e)throw new Error(\"track must not be null nor undefined\");this.localTracks.push(e),e.conference=this.conference}},{key:\"getLastN\",value:function(){return this._lastN}},{key:\"getLocalVideoTrack\",value:function(){var e=this.getLocalTracks(d.b);return e.length?e[0]:void 0}},{key:\"getLocalAudioTrack\",value:function(){var e=this.getLocalTracks(d.a);return e.length?e[0]:void 0}},{key:\"getLocalTracks\",value:function(e){var t=this.localTracks.slice();return void 0!==e&&(t=t.filter(function(t){return t.getType()===e})),t}},{key:\"getRemoteTracks\",value:function(e){var t=[],n=!0,r=!1,i=void 0;try{for(var o,a=this.peerConnections.values()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value.getRemoteTracks(void 0,e);s&&(t=t.concat(s))}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}return t}},{key:\"setAudioMute\",value:function(e){var t=[];return this.getLocalTracks(d.a).forEach(function(n){t.push(e?n.mute():n.unmute())}),Promise.all(t)}},{key:\"removeLocalTrack\",value:function(e){var t=this.localTracks.indexOf(e);-1!==t&&this.localTracks.splice(t,1)}},{key:\"removeRemoteTracks\",value:function(e){var t=[],n=!0,r=!1,i=void 0;try{for(var o,a=this.peerConnections.values()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value.removeRemoteTracks(e);t=t.concat(s)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}return A.debug(\"Removed remote tracks for \".concat(e)+\" count: \".concat(t.length)),t}},{key:\"closeBridgeChannel\",value:function(){this._channel&&(this._channel.close(),this._channelOpen=!1,this.removeListener(f.a.LASTN_ENDPOINT_CHANGED,this._lastNChangeListener))}},{key:\"setAudioLevel\",value:function(e,t,n,r){var i=e.getTrackBySSRC(t);i&&(i.isAudioTrack()?(i.isLocal()!==r&&A.error(\"\".concat(i,\" was expected to \").concat(r?\"be\":\"not be\",\" local\")),i.setAudioLevel(n,e)):A.warn(\"Received audio level for non-audio track: \".concat(t)))}},{key:\"sendChannelMessage\",value:function(e,t){if(!this._channel)throw new Error(\"Channel support is disabled!\");this._channel.sendMessage(e,t)}},{key:\"setLastN\",value:function(e){this._lastN!==e&&(this._lastN=e,this._channel&&this._channelOpen&&this._channel.sendSetLastNMessage(e),this.eventEmitter.emit(f.a.LASTN_VALUE_CHANGED,e))}},{key:\"isInLastN\",value:function(e){return!this._lastNEndpoints||this._lastNEndpoints.indexOf(e)>-1}},{key:\"_updateAudioOutputForAudioTracks\",value:function(e){var t=this.getRemoteTracks(d.a),n=!0,r=!1,i=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){o.value.setAudioOutput(e)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}}}])&&b(n.prototype,r),o&&b(n,o),t}()}).call(this,\"modules\\\\RTC\\\\RTC.js\")},function(e,t){e.exports={CAMERA:\"camera\",DESKTOP:\"desktop\"}},function(e,t,n){\"use strict\";var r=n(12);function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var o={};function a(e,t,n){if(\"object\"===i(e)&&void 0!==e.name)switch(this.gum={error:e,constraints:t,devices:n&&Array.isArray(n)?n.slice(0):void 0},e.name){case\"NotAllowedError\":case\"PermissionDeniedError\":case\"SecurityError\":this.name=r.PERMISSION_DENIED,this.message=o[this.name]+(this.gum.devices||[]).join(\", \");break;case\"DevicesNotFoundError\":case\"NotFoundError\":this.name=r.NOT_FOUND,this.message=o[this.name]+(this.gum.devices||[]).join(\", \");break;case\"ConstraintNotSatisfiedError\":case\"OverconstrainedError\":var a=e.constraintName||e.constraint;t&&t.video&&(!n||n.indexOf(\"video\")>-1)&&(\"minWidth\"===a||\"maxWidth\"===a||\"minHeight\"===a||\"maxHeight\"===a||\"width\"===a||\"height\"===a||\"deviceId\"===a)?(this.name=r.UNSUPPORTED_RESOLUTION,this.message=o[this.name]+function(e,t){if(t&&t.video&&t.video.mandatory)switch(e){case\"width\":return t.video.mandatory.minWidth;case\"height\":return t.video.mandatory.minHeight;default:return t.video.mandatory[e]||\"\"}return\"\"}(a,t)):(this.name=r.CONSTRAINT_FAILED,this.message=o[this.name]+e.constraintName);break;default:this.name=r.GENERAL,this.message=e.message||o[this.name]}else{if(\"string\"!=typeof e)throw new Error(\"Invalid arguments\");o[e]?(this.name=e,this.message=t||o[e]):this.message=e}this.stack=e.stack||(new Error).stack}o[r.UNSUPPORTED_RESOLUTION]=\"Video resolution is not supported: \",o[r.CHROME_EXTENSION_INSTALLATION_ERROR]=\"Failed to install Chrome extension\",o[r.CHROME_EXTENSION_USER_GESTURE_REQUIRED]=\"Failed to install Chrome extension - installations can only be initiated by a user gesture.\",o[r.CHROME_EXTENSION_USER_CANCELED]=\"User canceled Chrome's screen sharing prompt\",o[r.CHROME_EXTENSION_GENERIC_ERROR]=\"Unknown error from Chrome extension\",o[r.ELECTRON_DESKTOP_PICKER_ERROR]=\"Unkown error from desktop picker\",o[r.ELECTRON_DESKTOP_PICKER_NOT_FOUND]=\"Failed to detect desktop picker\",o[r.GENERAL]=\"Generic getUserMedia error\",o[r.PERMISSION_DENIED]=\"User denied permission to use device(s): \",o[r.NOT_FOUND]=\"Requested device(s) was/were not found: \",o[r.CONSTRAINT_FAILED]=\"Constraint could not be satisfied: \",o[r.TRACK_IS_DISPOSED]=\"Track has been already disposed\",o[r.TRACK_NO_STREAM_FOUND]=\"Track does not have an associated Media Stream\",a.prototype=Object.create(Error.prototype),a.prototype.constructor=a,t.a=a},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"LOCAL_TRACK_STOPPED\",function(){return r}),n.d(t,\"TRACK_AUDIO_LEVEL_CHANGED\",function(){return i}),n.d(t,\"TRACK_AUDIO_OUTPUT_CHANGED\",function(){return o}),n.d(t,\"TRACK_MUTE_CHANGED\",function(){return a}),n.d(t,\"TRACK_VIDEOTYPE_CHANGED\",function(){return s}),n.d(t,\"NO_DATA_FROM_SOURCE\",function(){return c});var r=\"track.stopped\",i=\"track.audioLevelsChanged\",o=\"track.audioOutputChanged\",a=\"track.trackMuteChanged\",s=\"track.videoTypeChanged\",c=\"track.no_data_from_source\"},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"AUTHENTICATION_REQUIRED\",function(){return r}),n.d(t,\"CHAT_ERROR\",function(){return i}),n.d(t,\"CONFERENCE_DESTROYED\",function(){return o}),n.d(t,\"CONFERENCE_MAX_USERS\",function(){return a}),n.d(t,\"CONNECTION_ERROR\",function(){return s}),n.d(t,\"NOT_ALLOWED_ERROR\",function(){return c}),n.d(t,\"FOCUS_DISCONNECTED\",function(){return u}),n.d(t,\"FOCUS_LEFT\",function(){return l}),n.d(t,\"GRACEFUL_SHUTDOWN\",function(){return d}),n.d(t,\"INCOMPATIBLE_SERVER_VERSIONS\",function(){return p}),n.d(t,\"OFFER_ANSWER_FAILED\",function(){return h}),n.d(t,\"PASSWORD_NOT_SUPPORTED\",function(){return f}),n.d(t,\"PASSWORD_REQUIRED\",function(){return m}),n.d(t,\"RESERVATION_ERROR\",function(){return v}),n.d(t,\"SETUP_FAILED\",function(){return y}),n.d(t,\"VIDEOBRIDGE_NOT_AVAILABLE\",function(){return g});var r=\"conference.authenticationRequired\",i=\"conference.chatError\",o=\"conference.destroyed\",a=\"conference.max_users\",s=\"conference.connectionError\",c=\"conference.connectionError.notAllowed\",u=\"conference.focusDisconnected\",l=\"conference.focusLeft\",d=\"conference.gracefulShutdown\",p=\"conference.incompatible_server_versions\",h=\"conference.offerAnswerFailed\",f=\"conference.passwordNotSupported\",m=\"conference.passwordRequired\",v=\"conference.reservationError\",y=\"conference.setup_failed\",g=\"conference.videobridgeNotAvailable\"},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return o});var r=n(6);function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function o(e){for(var t=e.split(\"\\r\\nm=\"),n=1,r=t.length;n<r;n++){var i=\"m=\".concat(t[n]);n!==r-1&&(i+=\"\\r\\n\"),t[n]=i}var o=\"\".concat(t.shift(),\"\\r\\n\");this.media=t,this.raw=o+t.join(\"\"),this.session=o}o.prototype.failICE=!1,o.prototype.removeTcpCandidates=!1,o.prototype.removeUdpCandidates=!1,o.prototype.getMediaSsrcMap=function(){for(var e,t=this,n={},i=function(i){e=r.a.findLines(t.media[i],\"a=ssrc:\");var o={mediaindex:i,mid:r.a.parseMID(r.a.findLine(t.media[i],\"a=mid:\")),ssrcs:{},ssrcGroups:[]};n[i]=o,e.forEach(function(e){var t=e.substring(7).split(\" \")[0];o.ssrcs[t]||(o.ssrcs[t]={ssrc:t,lines:[]}),o.ssrcs[t].lines.push(e)}),(e=r.a.findLines(t.media[i],\"a=ssrc-group:\")).forEach(function(e){var t=e.indexOf(\" \"),n=e.substr(0,t).substr(13),r=e.substr(14+n.length).split(\" \");r.length&&o.ssrcGroups.push({semantics:n,ssrcs:r})})},o=0;o<t.media.length;o++)i(o);return n},o.prototype.containsSSRC=function(e){var t=this.getMediaSsrcMap(),n=!1;return Object.keys(t).forEach(function(r){n||t[r].ssrcs[e]&&(n=!0)}),n},o.prototype.mangle=function(){var e,t,n,i,o,a;for(e=0;e<this.media.length;e++)if((n=this.media[e].split(\"\\r\\n\")).pop(),\"audio\"===(i=r.a.parseMLine(n.shift())).media){for(o=\"\",i.fmt.length=0,t=0;t<n.length;t++){if(\"a=rtpmap:\"===n[t].substr(0,9)){if(\"CN\"===(a=r.a.parseRTPMap(n[t])).name||\"ISAC\"===a.name)continue;i.fmt.push(a.id)}o+=\"\".concat(n[t],\"\\r\\n\")}this.media[e]=\"\".concat(r.a.buildMLine(i),\"\\r\\n\").concat(o)}this.raw=this.session+this.media.join(\"\")},o.prototype.removeSessionLines=function(e){var t=this,n=r.a.findLines(this.session,e);return n.forEach(function(e){t.session=t.session.replace(\"\".concat(e,\"\\r\\n\"),\"\")}),this.raw=this.session+this.media.join(\"\"),n},o.prototype.removeMediaLines=function(e,t){var n=this,i=r.a.findLines(this.media[e],t);return i.forEach(function(t){n.media[e]=n.media[e].replace(\"\".concat(t,\"\\r\\n\"),\"\")}),this.raw=this.session+this.media.join(\"\"),i},o.prototype.toJingle=function(e,t){var n,o,a,s,c,u,l,d;if((s=r.a.findLines(this.session,\"a=group:\")).length)for(n=0;n<s.length;n++){var p=(d=s[n].split(\" \")).shift().substr(8);for(e.c(\"group\",{xmlns:\"urn:xmpp:jingle:apps:grouping:0\",semantics:p}),o=0;o<d.length;o++)e.c(\"content\",{name:d[o]}).up();e.up()}for(n=0;n<this.media.length;n++)if(\"audio\"===(c=r.a.parseMLine(this.media[n].split(\"\\r\\n\")[0])).media||\"video\"===c.media||\"application\"===c.media){var h=r.a.findLine(this.media[n],\"a=ssrc:\");l=!!h&&h.substring(7).split(\" \")[0],e.c(\"content\",{creator:t,name:c.media});var f=r.a.findLine(this.media[n],\"a=mid:\");if(f){var m=r.a.parseMID(f);e.attrs({name:m})}if(r.a.findLine(this.media[n],\"a=rtpmap:\").length){for(e.c(\"description\",{xmlns:\"urn:xmpp:jingle:apps:rtp:1\",media:c.media}),l&&e.attrs({ssrc:l}),o=0;o<c.fmt.length;o++){u=r.a.findLine(this.media[n],\"a=rtpmap:\".concat(c.fmt[o])),e.c(\"payload-type\",r.a.parseRTPMap(u));var v=r.a.findLine(this.media[n],\"a=fmtp:\".concat(c.fmt[o]));if(v)for(d=r.a.parseFmtp(v),a=0;a<d.length;a++)e.c(\"parameter\",d[a]).up();this.rtcpFbToJingle(n,e,c.fmt[o]),e.up()}var y=r.a.findLines(this.media[n],\"a=crypto:\",this.session);if(y.length&&(e.c(\"encryption\",{required:1}),y.forEach(function(t){return e.c(\"crypto\",r.a.parseCrypto(t)).up()}),e.up()),l){var g=r.a.parseSSRC(this.media[n]),_=!0,S=!1,b=void 0;try{for(var E,T=g[Symbol.iterator]();!(_=(E=T.next()).done);_=!0){var C=i(E.value,2),R=C[0],A=C[1];e.c(\"source\",{ssrc:R,xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),A.forEach(function(t){var n=t.indexOf(\" \"),i=t.substr(n+1);if(e.c(\"parameter\"),-1===i.indexOf(\":\"))e.attrs({name:i});else{var o=i.split(\":\",2)[0];e.attrs({name:o});var a=i.split(\":\",2)[1];a=r.a.filterSpecialChars(a),e.attrs({value:a})}e.up()}),e.up()}}catch(e){S=!0,b=e}finally{try{_||null==T.return||T.return()}finally{if(S)throw b}}r.a.findLines(this.media[n],\"a=ssrc-group:\").forEach(function(t){var n=t.indexOf(\" \"),r=t.substr(0,n).substr(13),i=t.substr(14+r.length).split(\" \");i.length&&(e.c(\"ssrc-group\",{semantics:r,xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),i.forEach(function(t){return e.c(\"source\",{ssrc:t}).up()}),e.up())})}var w=r.a.findLines(this.media[n],\"a=rid\");if(w.length){var k=w.map(function(e){return e.split(\":\")[1]}).map(function(e){return e.split(\" \")[0]});k.forEach(function(t){e.c(\"source\",{rid:t,xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),e.up()}),r.a.findLine(this.media[n],\"a=simulcast\")&&(e.c(\"rid-group\",{semantics:\"SIM\",xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),k.forEach(function(t){e.c(\"source\",{rid:t}).up()}),e.up())}if(r.a.findLine(this.media[n],\"a=rtcp-mux\")&&e.c(\"rtcp-mux\").up(),this.rtcpFbToJingle(n,e,\"*\"),(s=r.a.findLines(this.media[n],\"a=extmap:\")).length)for(o=0;o<s.length;o++){if(d=r.a.parseExtmap(s[o]),e.c(\"rtp-hdrext\",{xmlns:\"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0\",uri:d.uri,id:d.value}),d.hasOwnProperty(\"direction\"))switch(d.direction){case\"sendonly\":e.attrs({senders:\"responder\"});break;case\"recvonly\":e.attrs({senders:\"initiator\"});break;case\"sendrecv\":e.attrs({senders:\"both\"});break;case\"inactive\":e.attrs({senders:\"none\"})}e.up()}e.up()}this.transportToJingle(n,e);var O=this.media[n];r.a.findLine(O,\"a=sendrecv\",this.session)?e.attrs({senders:\"both\"}):r.a.findLine(O,\"a=sendonly\",this.session)?e.attrs({senders:\"initiator\"}):r.a.findLine(O,\"a=recvonly\",this.session)?e.attrs({senders:\"responder\"}):r.a.findLine(O,\"a=inactive\",this.session)&&e.attrs({senders:\"none\"}),\"0\"===c.port&&e.attrs({senders:\"rejected\"}),e.up()}return e.up(),e},o.prototype.transportToJingle=function(e,t){var n,i=this;t.c(\"transport\");var o=r.a.findLine(this.media[e],\"a=sctpmap:\",i.session);if(o){var a=r.a.parseSCTPMap(o);t.c(\"sctpmap\",{xmlns:\"urn:xmpp:jingle:transports:dtls-sctp:1\",number:a[0],protocol:a[1]}),a.length>2&&t.attrs({streams:a[2]}),t.up()}if(r.a.findLines(this.media[e],\"a=fingerprint:\",this.session).forEach(function(o){(n=r.a.parseFingerprint(o)).xmlns=\"urn:xmpp:jingle:apps:dtls:0\",t.c(\"fingerprint\").t(n.fingerprint),delete n.fingerprint,(o=r.a.findLine(i.media[e],\"a=setup:\",i.session))&&(n.setup=o.substr(8)),t.attrs(n),t.up()}),n=r.a.iceparams(this.media[e],this.session)){n.xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\",t.attrs(n);var s=r.a.findLines(this.media[e],\"a=candidate:\",this.session);s.length&&s.forEach(function(e){var n=r.a.candidateToJingle(e);i.failICE&&(n.ip=\"1.1.1.1\");var o=n&&\"string\"==typeof n.protocol?n.protocol.toLowerCase():\"\";i.removeTcpCandidates&&(\"tcp\"===o||\"ssltcp\"===o)||i.removeUdpCandidates&&\"udp\"===o||t.c(\"candidate\",n).up()})}t.up()},o.prototype.rtcpFbToJingle=function(e,t,n){r.a.findLines(this.media[e],\"a=rtcp-fb:\".concat(n)).forEach(function(e){var n=r.a.parseRTCPFB(e);\"trr-int\"===n.type?(t.c(\"rtcp-fb-trr-int\",{xmlns:\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\",value:n.params[0]}),t.up()):(t.c(\"rtcp-fb\",{xmlns:\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\",type:n.type}),n.params.length>0&&t.attrs({subtype:n.params[0]}),t.up())})},o.prototype.rtcpFbFromJingle=function(e,t){var n=\"\",r=e.find('>rtcp-fb-trr-int[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]');return r.length&&(n+=\"a=rtcp-fb:* trr-int \",r.attr(\"value\")?n+=r.attr(\"value\"):n+=\"0\",n+=\"\\r\\n\"),(r=e.find('>rtcp-fb[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]')).each(function(){n+=\"a=rtcp-fb:\".concat(t,\" \").concat($(this).attr(\"type\")),$(this).attr(\"subtype\")&&(n+=\" \".concat($(this).attr(\"subtype\"))),n+=\"\\r\\n\"}),n},o.prototype.fromJingle=function(e){var t=this;this.raw=\"v=0\\r\\no=- 1923518516 2 IN IP4 0.0.0.0\\r\\ns=-\\r\\nt=0 0\\r\\n\";var n=$(e).find('>group[xmlns=\"urn:xmpp:jingle:apps:grouping:0\"]');n.length&&n.each(function(e,n){var r=$(n).find(\">content\").map(function(e,t){return t.getAttribute(\"name\")}).get();r.length>0&&(t.raw+=\"a=group:\".concat(n.getAttribute(\"semantics\")||n.getAttribute(\"type\"),\" \").concat(r.join(\" \"),\"\\r\\n\"))}),this.session=this.raw,e.find(\">content\").each(function(){var e=t.jingle2media($(this));t.media.push(e)}),this.raw=this.session+this.media.join(\"\")},o.prototype.jingle2media=function(e){var t=e.find(\"description\"),n=\"\",i=this,o=e.find('>transport>sctpmap[xmlns=\"urn:xmpp:jingle:transports:dtls-sctp:1\"]'),a={media:t.attr(\"media\"),port:\"1\"};if(\"rejected\"===e.attr(\"senders\")&&(a.port=\"0\"),e.find(\">transport>fingerprint\").length||t.find(\"encryption\").length?a.proto=o.length?\"DTLS/SCTP\":\"RTP/SAVPF\":a.proto=\"RTP/AVPF\",o.length){n+=\"m=application \".concat(a.port,\" DTLS/SCTP \").concat(o.attr(\"number\"),\"\\r\\n\"),n+=\"a=sctpmap:\".concat(o.attr(\"number\"),\" \").concat(o.attr(\"protocol\"));var s=o.attr(\"streams\");n+=s?\" \".concat(s,\"\\r\\n\"):\"\\r\\n\"}else a.fmt=t.find(\"payload-type\").map(function(){return this.getAttribute(\"id\")}).get(),n+=\"\".concat(r.a.buildMLine(a),\"\\r\\n\");switch(n+=\"c=IN IP4 0.0.0.0\\r\\n\",o.length||(n+=\"a=rtcp:1 IN IP4 0.0.0.0\\r\\n\"),(a=e.find('>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]')).length&&(a.attr(\"ufrag\")&&(n+=\"\".concat(r.a.buildICEUfrag(a.attr(\"ufrag\")),\"\\r\\n\")),a.attr(\"pwd\")&&(n+=\"\".concat(r.a.buildICEPwd(a.attr(\"pwd\")),\"\\r\\n\")),a.find(\">fingerprint\").each(function(){n+=\"a=fingerprint:\".concat(this.getAttribute(\"hash\")),n+=\" \".concat($(this).text()),n+=\"\\r\\n\",this.getAttribute(\"setup\")&&(n+=\"a=setup:\".concat(this.getAttribute(\"setup\"),\"\\r\\n\"))})),e.attr(\"senders\")){case\"initiator\":n+=\"a=sendonly\\r\\n\";break;case\"responder\":n+=\"a=recvonly\\r\\n\";break;case\"none\":n+=\"a=inactive\\r\\n\";break;case\"both\":n+=\"a=sendrecv\\r\\n\"}return n+=\"a=mid:\".concat(e.attr(\"name\"),\"\\r\\n\"),t.find(\"rtcp-mux\").length&&(n+=\"a=rtcp-mux\\r\\n\"),t.find(\"encryption\").length&&t.find(\"encryption>crypto\").each(function(){n+=\"a=crypto:\".concat(this.getAttribute(\"tag\")),n+=\" \".concat(this.getAttribute(\"crypto-suite\")),n+=\" \".concat(this.getAttribute(\"key-params\")),this.getAttribute(\"session-params\")&&(n+=\" \".concat(this.getAttribute(\"session-params\"))),n+=\"\\r\\n\"}),t.find(\"payload-type\").each(function(){n+=\"\".concat(r.a.buildRTPMap(this),\"\\r\\n\"),$(this).find(\">parameter\").length&&(n+=\"a=fmtp:\".concat(this.getAttribute(\"id\"),\" \"),n+=$(this).find(\"parameter\").map(function(){var e=this.getAttribute(\"name\");return(e?\"\".concat(e,\"=\"):\"\")+this.getAttribute(\"value\")}).get().join(\"; \"),n+=\"\\r\\n\"),n+=i.rtcpFbFromJingle($(this),this.getAttribute(\"id\"))}),n+=i.rtcpFbFromJingle(t,\"*\"),(a=t.find('>rtp-hdrext[xmlns=\"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0\"]')).each(function(){n+=\"a=extmap:\".concat(this.getAttribute(\"id\"),\" \").concat(this.getAttribute(\"uri\"),\"\\r\\n\")}),e.find('>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]>candidate').each(function(){var e=this.getAttribute(\"protocol\");e=\"string\"==typeof e?e.toLowerCase():\"\",i.removeTcpCandidates&&(\"tcp\"===e||\"ssltcp\"===e)||i.removeUdpCandidates&&\"udp\"===e||(i.failICE&&this.setAttribute(\"ip\",\"1.1.1.1\"),n+=r.a.candidateFromJingle(this))}),e.find('description>ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(){var e=this.getAttribute(\"semantics\"),t=$(this).find(\">source\").map(function(){return this.getAttribute(\"ssrc\")}).get();t.length&&(n+=\"a=ssrc-group:\".concat(e,\" \").concat(t.join(\" \"),\"\\r\\n\"))}),(a=e.find('description>source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')).each(function(){var e=this.getAttribute(\"ssrc\");$(this).find(\">parameter\").each(function(){var t=this.getAttribute(\"name\"),i=this.getAttribute(\"value\");i=r.a.filterSpecialChars(i),n+=\"a=ssrc:\".concat(e,\" \").concat(t),i&&i.length&&(n+=\":\".concat(i)),n+=\"\\r\\n\"})}),n}},function(e,t,n){\"use strict\";var r={};n.r(r),n.d(r,\"CHROME\",function(){return a}),n.d(r,\"OPERA\",function(){return s}),n.d(r,\"FIREFOX\",function(){return c}),n.d(r,\"INTERNET_EXPLORER\",function(){return u}),n.d(r,\"EDGE\",function(){return l}),n.d(r,\"SAFARI\",function(){return d}),n.d(r,\"NWJS\",function(){return p}),n.d(r,\"ELECTRON\",function(){return h}),n.d(r,\"REACT_NATIVE\",function(){return f}),n.d(r,\"UNKNOWN\",function(){return m});var i=n(46),o=n.n(i),a=\"chrome\",s=\"opera\",c=\"firefox\",u=\"iexplorer\",l=\"edge\",d=\"safari\",p=\"nwjs\",h=\"electron\",f=\"react-native\",m=\"unknown\";function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y={Chrome:a,Chromium:a,Opera:s,Firefox:c,\"Internet Explorer\":u,\"Microsoft Edge\":l,Safari:d};function g(){var e=navigator.userAgent;if(e.match(/Electron/)){var t=e.match(/Electron\\/([\\d.]+)/)[1];return{name:h,version:t}}}function _(){var e=navigator.userAgent;if(e.match(/JitsiMeetNW/)){var t=e.match(/JitsiMeetNW\\/([\\d.]+)/)[1];return{name:p,version:t}}}function S(){var e,t,n=navigator.userAgent.match(/\\b(react[ \\t_-]*native)(?:\\/(\\S+))?/i);if(n||\"ReactNative\"===navigator.product)return n&&n.length>2&&(t=n[1],e=n[2]),t||(t=\"react-native\"),e||(e=\"unknown\"),{name:f,version:e}}function b(){for(var e,t=[S,g,_],n=0;n<t.length;n++)if(e=t[n]())return e;var r=o.a.name,i=o.a.version;return r in y?{name:y[r],version:i}:(e=function(){var e=navigator.userAgent;if(Boolean(window.chrome)&&!e.match(/Edge/)&&e.match(/Chrome/)){var t=e.match(/Chrome\\/([\\d.]+)/)[1];return{name:a,version:t}}}())||{name:m,version:void 0}}var E,T,C,R=function(){function e(t){var n,r;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),void 0===t){var i=b();n=i.name,r=i.version}else t.name in y?(n=y[t.name],r=t.version):(n=m,r=void 0);this._name=n,this._version=r}var t,n,r;return t=e,(n=[{key:\"getName\",value:function(){return this._name}},{key:\"isChrome\",value:function(){return this._name===a}},{key:\"isOpera\",value:function(){return this._name===s}},{key:\"isFirefox\",value:function(){return this._name===c}},{key:\"isIExplorer\",value:function(){return this._name===u}},{key:\"isEdge\",value:function(){return this._name===l}},{key:\"isSafari\",value:function(){return this._name===d}},{key:\"isNWJS\",value:function(){return this._name===p}},{key:\"isElectron\",value:function(){return this._name===h}},{key:\"isReactNative\",value:function(){return this._name===f}},{key:\"getVersion\",value:function(){return this._version}},{key:\"compareVersion\",value:function(e){if(this._version)return o.a.compareVersions([String(e),this._version])}},{key:\"isVersionGreaterThan\",value:function(e){return-1===this.compareVersion(e)}},{key:\"isVersionLessThan\",value:function(e){return 1===this.compareVersion(e)}},{key:\"isVersionEqualTo\",value:function(e){return 0===this.compareVersion(e)}}])&&v(t.prototype,n),r&&v(t,r),e}();E=R,T=\"compareVersions\",C=o.a.compareVersions,T in E?Object.defineProperty(E,T,{value:C,enumerable:!0,configurable:!0,writable:!0}):E[T]=C;n(73);n.d(t,\"a\",function(){return R}),n.d(t,\"b\",function(){return r})},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"STATUS_AVAILABLE\",function(){return r}),n.d(t,\"STATUS_UNDEFINED\",function(){return i}),n.d(t,\"STATUS_BUSY\",function(){return o}),n.d(t,\"STATE_ON\",function(){return a}),n.d(t,\"STATE_OFF\",function(){return s}),n.d(t,\"STATE_PENDING\",function(){return c}),n.d(t,\"STATE_RETRYING\",function(){return u}),n.d(t,\"STATE_FAILED\",function(){return l}),n.d(t,\"ERROR_NO_CONNECTION\",function(){return d}),n.d(t,\"ERROR_SESSION_EXISTS\",function(){return p});var r=\"available\",i=\"undefined\",o=\"busy\",a=\"on\",s=\"off\",c=\"pending\",u=\"retrying\",l=\"failed\",d=\"error_no_connection\",p=\"error_session_already_exists\"},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"CONNECTION_DISCONNECTED\",function(){return r}),n.d(t,\"CONNECTION_ESTABLISHED\",function(){return i}),n.d(t,\"CONNECTION_FAILED\",function(){return o}),n.d(t,\"WRONG_STATE\",function(){return a});var r=\"connection.connectionDisconnected\",i=\"connection.connectionEstablished\",o=\"connection.connectionFailed\",a=\"connection.wrongState\"},function(e,t,n){var r=n(140),i=n(141);t.write=i,t.parse=r.parse,t.parseFmtpConfig=r.parseFmtpConfig,t.parseParams=r.parseParams,t.parsePayloads=r.parsePayloads,t.parseRemoteCandidates=r.parseRemoteCandidates,t.parseImageAttributes=r.parseImageAttributes,t.parseSimulcastStreamList=r.parseSimulcastStreamList},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return r}),n.d(t,\"b\",function(){return i}),n.d(t,\"c\",function(){return o}),n.d(t,\"d\",function(){return a});var r=\"statistics.audioLevel\",i=\"statistics.before_disposed\",o=\"statistics.byte_sent_stats\",a=\"statistics.connectionstats\"},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return a});var r=n(29),i=n.n(r);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new i.a;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.eventEmitter=t,this.addEventListener=this.on=this.addListener,this.removeEventListener=this.off=this.removeListener}var t,n,r;return t=e,(n=[{key:\"addListener\",value:function(e,t){this.eventEmitter.addListener(e,t)}},{key:\"removeListener\",value:function(e,t){this.eventEmitter.removeListener(e,t)}}])&&o(t.prototype,n),r&&o(t,r),e}()},function(e,t,n){\"use strict\";(function(e){var r,i,o=n(4),a=n(74),s=n.n(a),c=Object(o.getLogger)(e);function u(){var e;try{e=(window||this).localStorage}catch(e){c.error(e)}return e}function l(){return\"\".concat(Math.random().toString(16),\"000000000\").substr(2,8)}t.a={get callStatsUserName(){if(!r){var e=u();e&&(r=e.getItem(\"callStatsUserName\")),r||(t=s.a.generateUsername(),c.log(\"generated callstats uid\",t),r=t,e&&e.setItem(\"callStatsUserName\",r))}var t;return r},get machineId(){if(!i){var e=u();e&&(i=e.getItem(\"jitsiMeetId\")),i||(t=l()+l()+l()+l(),c.log(\"generated id\",t),i=t,e&&e.setItem(\"jitsiMeetId\",i))}var t;return i},get sessionId(){var e=u();return e?e.getItem(\"sessionId\"):void 0},set sessionId(e){var t=u();t&&(e?t.setItem(\"sessionId\",e):t.removeItem(\"sessionId\"))}}}).call(this,\"modules\\\\settings\\\\Settings.js\")},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"LOCAL_STATS_UPDATED\",function(){return r}),n.d(t,\"REMOTE_STATS_UPDATED\",function(){return i});var r=\"cq.local_stats_updated\",i=\"cq.remote_stats_updated\"},function(e,t,n){\"use strict\";n.d(t,\"b\",function(){return s}),n.d(t,\"c\",function(){return c}),n.d(t,\"a\",function(){return d});var r=n(22);function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e}function s(e){return parseInt(e.ssrcs.split(\" \")[0],10)}function c(e){return parseInt(e.ssrcs.split(\" \")[1],10)}function u(e){return e.ssrcs?e.ssrcs.map(function(e){return e.id}).filter(function(e,t,n){return n.indexOf(e)===t}).length:0}var l=function(){function e(t){if(i(this,e),!t)throw new Error(\"mLine is undefined\");this.mLine=t}return a(e,[{key:\"getSSRCAttrValue\",value:function(e,t){var n=this.ssrcs.find(function(n){return n.id===e&&n.attribute===t});return n&&n.value}},{key:\"removeSSRC\",value:function(e){this.mLine.ssrcs&&this.mLine.ssrcs.length&&(this.mLine.ssrcs=this.mLine.ssrcs.filter(function(t){return t.id!==e}))}},{key:\"addSSRCAttribute\",value:function(e){this.ssrcs.push(e)}},{key:\"findGroup\",value:function(e,t){return this.ssrcGroups.find(function(n){return n.semantics===e&&(!t||t===n.ssrcs)})}},{key:\"findGroups\",value:function(e){return this.ssrcGroups.filter(function(t){return t.semantics===e})}},{key:\"findGroupByPrimarySSRC\",value:function(e,t){return this.ssrcGroups.find(function(n){return n.semantics===e&&s(n)===t})}},{key:\"findSSRCByMSID\",value:function(e){return this.ssrcs.find(function(t){return\"msid\"===t.attribute&&(null===e||t.value===e)})}},{key:\"getSSRCCount\",value:function(){return u(this.mLine)}},{key:\"containsAnySSRCGroups\",value:function(){return void 0!==this.mLine.ssrcGroups}},{key:\"getPrimaryVideoSsrc\",value:function(){var e=this.mLine.type;if(\"video\"!==e)throw new Error(\"getPrimarySsrc doesn't work with '\".concat(e,\"'\"));if(1===u(this.mLine))return this.mLine.ssrcs[0].id;if(this.mLine.ssrcGroups){var t=this.findGroup(\"SIM\");if(t)return s(t);var n=this.findGroup(\"FID\");if(n)return s(n);var r=this.findGroup(\"FEC-FR\");if(r)return s(r)}}},{key:\"getRtxSSRC\",value:function(e){var t=this.findGroupByPrimarySSRC(\"FID\",e);return t&&c(t)}},{key:\"getSSRCs\",value:function(){return this.ssrcs.map(function(e){return e.id}).filter(function(e,t,n){return n.indexOf(e)===t})}},{key:\"getPrimaryVideoSSRCs\",value:function(){var e=this.mLine.type;if(\"video\"!==e)throw new Error(\"getPrimaryVideoSSRCs doesn't work with \".concat(e));var t=this.getSSRCs(),n=!0,r=!1,i=void 0;try{for(var o,a=this.ssrcGroups[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;if(\"FID\"===s.semantics||\"FEC-FR\"===s.semantics){var u=c(s);t.splice(t.indexOf(u),1)}}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}return t}},{key:\"dumpSSRCGroups\",value:function(){return JSON.stringify(this.mLine.ssrcGroups)}},{key:\"removeGroupsWithSSRC\",value:function(e){this.mLine.ssrcGroups&&(this.mLine.ssrcGroups=this.mLine.ssrcGroups.filter(function(t){return-1===t.ssrcs.indexOf(\"\".concat(e))}))}},{key:\"removeGroupsBySemantics\",value:function(e){this.mLine.ssrcGroups&&(this.mLine.ssrcGroups=this.mLine.ssrcGroups.filter(function(t){return t.semantics!==e}))}},{key:\"replaceSSRC\",value:function(e,t){this.mLine.ssrcs&&this.mLine.ssrcs.forEach(function(n){n.id===e&&(n.id=t)})}},{key:\"addSSRCGroup\",value:function(e){this.ssrcGroups.push(e)}},{key:\"ssrcs\",get:function(){return this.mLine.ssrcs||(this.mLine.ssrcs=[]),this.mLine.ssrcs},set:function(e){this.mLine.ssrcs=e}},{key:\"direction\",get:function(){return this.mLine.direction},set:function(e){this.mLine.direction=e}},{key:\"ssrcGroups\",get:function(){return this.mLine.ssrcGroups||(this.mLine.ssrcGroups=[]),this.mLine.ssrcGroups},set:function(e){this.mLine.ssrcGroups=e}}]),e}(),d=function(){function e(t){i(this,e),this.parsedSDP=r.parse(t)}return a(e,[{key:\"selectMedia\",value:function(e){var t=this.parsedSDP.media.find(function(t){return t.type===e});return t?new l(t):null}},{key:\"toRawSDP\",value:function(){return r.write(this.parsedSDP)}}]),e}()},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return r});var r={ACCEPT:\"session-accept\",CONNECTION_ERROR:\"connection-error-encountered\",INITIATE:\"session-initiate\",TERMINATE:\"session-terminate\",TRANSPORT_INFO:\"transport-info\",UNAVAILABLE:\"unavailable\"}},function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function i(e){return\"function\"==typeof e}function o(e){return\"object\"===n(e)&&null!==e}function a(e){return void 0===e}e.exports=r,r.EventEmitter=r,r.prototype._events=void 0,r.prototype._maxListeners=void 0,r.defaultMaxListeners=10,r.prototype.setMaxListeners=function(e){if(\"number\"!=typeof e||e<0||isNaN(e))throw TypeError(\"n must be a positive number\");return this._maxListeners=e,this},r.prototype.emit=function(e){var t,n,r,s,c,u;if(this._events||(this._events={}),\"error\"===e&&(!this._events.error||o(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var l=new Error('Uncaught, unspecified \"error\" event. ('+t+\")\");throw l.context=t,l}if(a(n=this._events[e]))return!1;if(i(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:s=Array.prototype.slice.call(arguments,1),n.apply(this,s)}else if(o(n))for(s=Array.prototype.slice.call(arguments,1),r=(u=n.slice()).length,c=0;c<r;c++)u[c].apply(this,s);return!0},r.prototype.addListener=function(e,t){var n;if(!i(t))throw TypeError(\"listener must be a function\");return this._events||(this._events={}),this._events.newListener&&this.emit(\"newListener\",e,i(t.listener)?t.listener:t),this._events[e]?o(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,o(this._events[e])&&!this._events[e].warned&&(n=a(this._maxListeners)?r.defaultMaxListeners:this._maxListeners)&&n>0&&this._events[e].length>n&&(this._events[e].warned=!0,console.error(\"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\",this._events[e].length),\"function\"==typeof console.trace&&console.trace()),this},r.prototype.on=r.prototype.addListener,r.prototype.once=function(e,t){if(!i(t))throw TypeError(\"listener must be a function\");var n=!1;function r(){this.removeListener(e,r),n||(n=!0,t.apply(this,arguments))}return r.listener=t,this.on(e,r),this},r.prototype.removeListener=function(e,t){var n,r,a,s;if(!i(t))throw TypeError(\"listener must be a function\");if(!this._events||!this._events[e])return this;if(a=(n=this._events[e]).length,r=-1,n===t||i(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit(\"removeListener\",e,t);else if(o(n)){for(s=a;s-- >0;)if(n[s]===t||n[s].listener&&n[s].listener===t){r=s;break}if(r<0)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(r,1),this._events.removeListener&&this.emit(\"removeListener\",e,t)}return this},r.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)\"removeListener\"!==t&&this.removeAllListeners(t);return this.removeAllListeners(\"removeListener\"),this._events={},this}if(i(n=this._events[e]))this.removeListener(e,n);else if(n)for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},r.prototype.listeners=function(e){return this._events&&this._events[e]?i(this._events[e])?[this._events[e]]:this._events[e].slice():[]},r.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(i(t))return 1;if(t)return t.length}return 0},r.listenerCount=function(e,t){return e.listenerCount(t)}},function(e,t){e.exports={1080:{width:1920,height:1080,order:8},fullhd:{width:1920,height:1080,order:8},720:{width:1280,height:720,order:7},hd:{width:1280,height:720,order:7},960:{width:960,height:720,order:6},540:{width:960,height:540,order:5},qhd:{width:960,height:540,order:5},360:{width:640,height:360,order:4},640:{width:640,height:480,order:3},vga:{width:640,height:480,order:3},180:{width:320,height:180,order:2},320:{width:320,height:240,order:1}}},function(e,t,n){\"use strict\";n.d(t,\"c\",function(){return r}),n.d(t,\"a\",function(){return i}),n.d(t,\"b\",function(){return o});var r=\"pending\",i=\"active\",o=\"ended\"},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return D});var r=n(3),i=n(11),o=n.n(i);function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return t&&a(e.prototype,t),n&&a(e,n),e}var c,u=n(4).getLogger(e),l=\"createOffer\",d=\"createAnswer\",p=\"setLocalDescription\",h=\"setRemoteDescription\",f=\"addIceCandidate\",m=\"getUserMedia\",v=\"iceConnectionFailure\",y=\"applicationLog\",g=\"fabricHold\",_=\"fabricResume\",S=\"audioMute\",b=\"audioUnmute\",E=\"videoPause\",T=\"videoResume\",C=\"screenShareStart\",R=\"screenShareStop\",A=\"dominantSpeaker\",w=\"activeDeviceList\",k=\"jitsi\",O=\"error\",I=\"event\",P=\"mstWithUserID\",D=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.confID=n.confID,this.tpc=t,this.peerconnection=t.peerconnection,this.remoteUserID=n.remoteUserID||k,this.hasFabric=!1,e.fabrics.add(this),e.backendInitialized&&(this._addNewFabric(),1===e.fabrics.size&&e._emptyReportQueue(this))}return s(e,null,[{key:\"_addNewFabricCallback\",value:function(t,n){e.backend&&\"success\"!==t&&u.error(\"Monitoring status: \".concat(t,\" msg: \").concat(n))}},{key:\"_initCallback\",value:function(t,n){if(u.log(\"CallStats Status: err=\".concat(t,\" msg=\").concat(n)),\"success\"===t){e.backendInitialized=!0;var r=!1,i=null,o=!0,a=!1,s=void 0;try{for(var c,l=e.fabrics.values()[Symbol.iterator]();!(o=(c=l.next()).done);o=!0){var d=c.value;d.hasFabric||(u.debug(\"addNewFabric - initCallback\"),d._addNewFabric()&&(r=!0,i||(i=d)))}}catch(e){a=!0,s=e}finally{try{o||null==l.return||l.return()}finally{if(a)throw s}}r&&e._emptyReportQueue(i)}}},{key:\"_emptyReportQueue\",value:function(t){var n=t.confID,r=t.peerconnection,i=!0,o=!1,a=void 0;try{for(var s,c=e.reportsQueue[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){var u=s.value;if(u.type===O){var l=u.data;e._reportError(t,l.type,l.error,l.pc||r)}else if(u.type===I){var d=u.data;e.backend.sendFabricEvent(u.pc||r,d.event,n,d.eventData)}else if(u.type===P){var p=u.data;e.backend.associateMstWithUserID(u.pc||r,p.callStatsId,n,p.ssrc,p.usageLabel,p.containerId)}}}catch(e){o=!0,a=e}finally{try{i||null==c.return||c.return()}finally{if(o)throw a}}e.reportsQueue.length=0}},{key:\"_reportError\",value:function(t,n,r,i){var o=r;o||(u.warn(\"No error is passed!\"),o=new Error(\"Unknown error\")),e.backendInitialized&&t?e.backend.reportError(i,t.confID,n,o):e.reportsQueue.push({type:O,data:{error:o,pc:i,type:n}})}},{key:\"_reportEvent\",value:function(t,n,r){var i=t&&t.peerconnection,o=t&&t.confID;e.backendInitialized&&t?e.backend.sendFabricEvent(i,n,o,r):e.reportsQueue.push({confID:o,pc:i,type:I,data:{event:n,eventData:r}})}},{key:\"_traceAndCatchBackendCalls\",value:function(e){for(var t=[\"associateMstWithUserID\",\"sendFabricEvent\",\"sendUserFeedback\"],n=function(){var n=t[i],r=e[n];e[n]=function(){try{for(var t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];return r.apply(e,n)}catch(e){o.a.callErrorHandler(e)}}},i=0;i<t.length;i++)n();for(var a=[\"associateMstWithUserID\",\"sendFabricEvent\",\"sendUserFeedback\"],s=function(){var t=a[c],n=e[t];e[t]=function(){for(var r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];u.debug(t,i),n.apply(e,i)}},c=0;c<a.length;c++)s();var l=e.reportError;e.reportError=function(t,n,i){for(var a=arguments.length,s=new Array(a>3?a-3:0),c=3;c<a;c++)s[c-3]=arguments[c];i===y?r.a.isReactNative()||console&&console.debug(\"reportError\",t,n,i):u.debug.apply(u,[\"reportError\",t,n,i].concat(s));try{l.call.apply(l,[e,t,n,i].concat(s))}catch(e){i===y?console&&console.error(\"reportError\",e):o.a.callErrorHandler(e)}}}},{key:\"initBackend\",value:function(t){if(e.backend)throw new Error(\"CallStats backend has been initialized already!\");try{var n,i=callstats;if(e.backend=new i,e._traceAndCatchBackendCalls(e.backend),e.userID={aliasName:t.aliasName,userName:t.userName},e.callStatsID=t.callStatsID,e.callStatsSecret=t.callStatsSecret,t.applicationName&&(n={applicationVersion:\"\".concat(t.applicationName,\" (\").concat(r.a.getName(),\")\")}),t.confID){var a=t.confID.match(/.*\\/(.*)\\/.*/);n.siteID=a&&a[1]||\"/\"}e.backend.initialize(e.callStatsID,e.callStatsSecret,e.userID,e._initCallback,void 0,n);var s=t.getWiFiStatsMethod;return s&&(e.backend.attachWifiStatsHandler(s),s().then(function(e){e&&u.info(\"Reported wifi addresses:\",JSON.parse(e).addresses)}).catch(function(){})),!0}catch(t){return o.a.callErrorHandler(t),e.backend=null,u.error(t),!1}}},{key:\"isBackendInitialized\",value:function(){return Boolean(e.backend)}},{key:\"sendActiveDeviceListEvent\",value:function(t,n){e._reportEvent(n,w,t)}},{key:\"sendApplicationLog\",value:function(t,n){try{e._reportError(n,y,t,n&&n.peerconnection)}catch(e){console&&\"function\"==typeof console.error&&console.error(\"sendApplicationLog failed\",e)}}},{key:\"sendFeedback\",value:function(t,n,r){return new Promise(function(i,o){if(e.backend)e.backend.sendUserFeedback(t,{userID:e.userID,overall:n,comment:r},function(e,t){\"success\"===e?i(t):o(t)});else{var a=\"Failed to submit feedback to CallStats - no backend\";u.error(a),o(a)}})}},{key:\"sendGetUserMediaFailed\",value:function(t,n){e._reportError(n,m,t,null)}},{key:\"sendMuteEvent\",value:function(t,n,r){var i;i=\"video\"===n?t?E:T:t?S:b,e._reportEvent(r,i)}},{key:\"fabrics\",get:function(){return c||(c=new Set),c}}]),s(e,[{key:\"_addNewFabric\",value:function(){u.info(\"addNewFabric\",this.remoteUserID);try{var t={remoteEndpointType:this.tpc.isP2P?e.backend.endpointType.peer:e.backend.endpointType.server},n=e.backend.addNewFabric(this.peerconnection,this.remoteUserID,e.backend.fabricUsage.multiplex,this.confID,t,e._addNewFabricCallback);this.hasFabric=!0;var r=\"success\"===n.status;return r||u.error(\"callstats fabric not initilized\",n.message),r}catch(e){return o.a.callErrorHandler(e),!1}}},{key:\"associateStreamWithVideoTag\",value:function(t,n,r,i,o){if(e.backend){var a=n?e.userID:r;e.backendInitialized?e.backend.associateMstWithUserID(this.peerconnection,a,this.confID,t,i,o):e.reportsQueue.push({type:P,pc:this.peerconnection,data:{callStatsId:a,containerId:o,ssrc:t,usageLabel:i}})}}},{key:\"sendDominantSpeakerEvent\",value:function(){e._reportEvent(this,A)}},{key:\"sendTerminateEvent\",value:function(){e.backendInitialized&&e.backend.sendFabricEvent(this.peerconnection,e.backend.fabricEvent.fabricTerminated,this.confID),e.fabrics.delete(this)}},{key:\"sendIceConnectionFailedEvent\",value:function(){e._reportError(this,v,null,this.peerconnection)}},{key:\"sendCreateOfferFailed\",value:function(t){e._reportError(this,l,t,this.peerconnection)}},{key:\"sendCreateAnswerFailed\",value:function(t){e._reportError(this,d,t,this.peerconnection)}},{key:\"sendResumeOrHoldEvent\",value:function(t){e._reportEvent(this,t?_:g)}},{key:\"sendScreenSharingEvent\",value:function(t,n){var r;n&&(r={ssrc:n}),e._reportEvent(this,t?C:R,r)}},{key:\"sendSetLocalDescFailed\",value:function(t){e._reportError(this,p,t,this.peerconnection)}},{key:\"sendSetRemoteDescFailed\",value:function(t){e._reportError(this,h,t,this.peerconnection)}},{key:\"sendAddIceCandidateFailed\",value:function(t){e._reportError(this,f,t,this.peerconnection)}}]),e}();D.backend=null,D.reportsQueue=[],D.backendInitialized=!1,D.callStatsID=null,D.callStatsSecret=null,D.userID=null}).call(this,\"modules\\\\statistics\\\\CallStats.js\")},function(e,t){var n=\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";function r(e,t){return Math.floor(Math.random()*(t-e+1))+e}function i(e){return e[r(0,e.length-1)]}var o={randomHexDigit:function(){return i(\"0123456789abcdef\")},randomHexString:function(e){for(var t=\"\";e--;)t+=this.randomHexDigit();return t},randomElement:i,randomAlphanumStr:function(e){for(var t=\"\",r=0;r<e;r+=1)t+=i(n);return t},randomInt:r};e.exports=o},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return d});var r=n(24);function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return!t||\"object\"!==i(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function l(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){return function e(){u(this,e)}}();return function(t){function n(){var e,t;u(this,n);for(var r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];return(t=a(this,(e=s(n)).call.apply(e,[this].concat(i)))).connection=null,t}var r,i,l;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(n,e),r=n,(i=[{key:\"init\",value:function(e){this.connection=e}}])&&o(r.prototype,i),l&&o(r,l),n}()}t.b=l();var d=l(r.a)},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return O}),n.d(t,\"b\",function(){return I}),n.d(t,\"c\",function(){return P});var r=n(4),i=n(1),o=(n(126),n(33)),a=n.n(o),s=n(36),c=n(21),u=n(3),l=n(78),d=n(81),p=n(88),h=n(89),f=n(90),m=n(91),v=n(92),y=n(24),g=n(93),_=n(11),S=n.n(_),b=n(0),E=n.n(b);function T(e){return(T=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e){return(R=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function A(e,t){return(A=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function w(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}var k=Object(r.getLogger)(e);var O=[{urls:\"stun:stun.l.google.com:19302\"},{urls:\"stun:stun1.l.google.com:19302\"},{urls:\"stun:stun2.l.google.com:19302\"}],I=\"type\",P=function(e){function t(e,n){var r,o,a;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),o=this,a=R(t).call(this),(r=!a||\"object\"!==T(a)&&\"function\"!=typeof a?w(o):a).connection=null,r.disconnectInProgress=!1,r.connectionTimes={},r.options=e,r.token=n,r.authenticatedUser=!1,r._initStrophePlugins(w(w(r))),r.connection=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"/http-bind\";e&&(t+=\"\".concat(-1===t.indexOf(\"?\")?\"?\":\"&\",\"token=\").concat(e));var n=new i.Strophe.Connection(t);return n.maxRetries=3,n}(n,e.bosh),r._lastSuccessTracker=new v.a,r._lastSuccessTracker.startTracking(r.connection),r.caps=new g.a(r.connection,r.options.clientNode),r.initFeaturesList(),$(window).on(\"beforeunload unload\",function(e){r.disconnect(e).catch(function(){})}),r}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&A(e,t)}(t,y[\"a\"]),n=t,(r=[{key:\"initFeaturesList\",value:function(){this.caps.addFeature(\"urn:xmpp:jingle:1\"),this.caps.addFeature(\"urn:xmpp:jingle:apps:rtp:1\"),this.caps.addFeature(\"urn:xmpp:jingle:transports:ice-udp:1\"),this.caps.addFeature(\"urn:xmpp:jingle:apps:dtls:0\"),this.caps.addFeature(\"urn:xmpp:jingle:transports:dtls-sctp:1\"),this.caps.addFeature(\"urn:xmpp:jingle:apps:rtp:audio\"),this.caps.addFeature(\"urn:xmpp:jingle:apps:rtp:video\"),!this.options.disableRtx&&u.a.supportsRtx()&&this.caps.addFeature(\"urn:ietf:rfc:4588\"),this.caps.addFeature(\"urn:ietf:rfc:5761\"),this.caps.addFeature(\"urn:ietf:rfc:5888\"),u.a.isChrome()&&!1!==this.options.enableLipSync&&(k.info(\"Lip-sync enabled !\"),this.caps.addFeature(\"http://jitsi.org/meet/lipsync\")),this.connection.rayo&&this.caps.addFeature(\"urn:xmpp:rayo:client:1\")}},{key:\"isPingSupported\",value:function(){return!1!==this._pingSupported}},{key:\"getConnection\",value:function(){return this.connection}},{key:\"connectionHandler\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0,r=arguments.length>2?arguments[2]:void 0,o=window.performance.now(),a=i.Strophe.getStatusString(n).toLowerCase();if(this.connectionTimes[a]=o,k.log(\"(TIME) Strophe \".concat(a).concat(r?\"[\".concat(r,\"]\"):\"\",\":\\t\"),o),this.eventEmitter.emit(E.a.CONNECTION_STATUS_CHANGED,t,n,r),n===i.Strophe.Status.CONNECTED||n===i.Strophe.Status.ATTACHED){(this.options.useStunTurn||this.options.p2p&&this.options.p2p.useStunTurn)&&this.connection.jingle.getStunAndTurnCredentials(),k.info(\"My Jabber ID: \".concat(this.connection.jid));var u=this.connection.domain;this.caps.getFeaturesAndIdentities(u).then(function(t){var n=t.features,r=t.identities;n.has(i.Strophe.NS.PING)?(e._pingSupported=!0,e.connection.ping.startInterval(u)):k.warn(\"Ping NOT supported by \".concat(u)),r.forEach(function(t){\"speakerstats\"===t.type&&(e.speakerStatsComponentAddress=t.name,e.connection.addHandler(e._onPrivateMessage.bind(e),null,\"message\",null,null))})}).catch(function(e){var t=\"Feature discovery error\";S.a.callErrorHandler(new Error(\"\".concat(t,\": \").concat(e))),k.error(t,e)}),t.password&&(this.authenticatedUser=!0),this.connection&&this.connection.connected&&i.Strophe.getResourceFromJid(this.connection.jid)&&this.eventEmitter.emit(c.CONNECTION_ESTABLISHED,i.Strophe.getResourceFromJid(this.connection.jid))}else if(n===i.Strophe.Status.CONNFAIL)\"x-strophe-bad-non-anon-jid\"===r?this.anonymousConnectionFailed=!0:this.connectionFailed=!0,this.lastErrorMsg=r,\"giving-up\"===r&&this.eventEmitter.emit(c.CONNECTION_FAILED,s.OTHER_ERROR,r);else if(n===i.Strophe.Status.DISCONNECTED){this.connection.ping.stopInterval();var l=this.disconnectInProgress,d=r||this.lastErrorMsg;if(this.disconnectInProgress=!1,this.anonymousConnectionFailed)this.eventEmitter.emit(c.CONNECTION_FAILED,s.PASSWORD_REQUIRED);else if(this.connectionFailed)this.eventEmitter.emit(c.CONNECTION_FAILED,s.OTHER_ERROR,d,void 0,this._getConnectionFailedReasonDetails());else if(l)this.eventEmitter.emit(c.CONNECTION_DISCONNECTED,d);else{k.error(\"XMPP connection dropped!\");var p=i.Strophe.getLastErrorStatus();p>=500&&p<600?this.eventEmitter.emit(c.CONNECTION_FAILED,s.SERVER_ERROR,d||\"server-error\",void 0,this._getConnectionFailedReasonDetails()):this.eventEmitter.emit(c.CONNECTION_FAILED,s.CONNECTION_DROPPED_ERROR,d||\"connection-dropped-error\",void 0,this._getConnectionFailedReasonDetails())}}else n===i.Strophe.Status.AUTHFAIL&&this.eventEmitter.emit(c.CONNECTION_FAILED,s.PASSWORD_REQUIRED,r,t)}},{key:\"_connect\",value:function(e,t){this.anonymousConnectionFailed=!1,this.connectionFailed=!1,this.lastErrorMsg=void 0,this.connection.connect(e,t,this.connectionHandler.bind(this,{jid:e,password:t}))}},{key:\"attach\",value:function(e){var t=this.connectionTimes.attaching=window.performance.now();k.log(\"(TIME) Strophe Attaching\\t:\".concat(t)),this.connection.attach(e.jid,e.sid,parseInt(e.rid,10)+1,this.connectionHandler.bind(this,{jid:e.jid,password:e.password}))}},{key:\"connect\",value:function(e,t){if(!e){var n=this.options.hosts,r=n.anonymousdomain,i=n.domain,o=r||i,a=window.location;if(r){var s=a&&a.search;(s&&-1!==s.indexOf(\"login=true\")||this.token)&&(o=i)}e=o||a&&a.hostname}return this._connect(e,t)}},{key:\"createRoom\",value:function(e,t,n){var r=\"\".concat(e,\"@\").concat(this.options.hosts.muc,\"/\"),i=n?n(this.connection.jid,this.authenticatedUser):a.a.randomHexString(8).toLowerCase();return k.info(\"JID \".concat(this.connection.jid,\" using MUC nickname \").concat(i)),r+=i,this.connection.emuc.createRoom(r,null,t)}},{key:\"getJid\",value:function(){return this.connection.jid}},{key:\"getJingleLog\",value:function(){var e=this.connection.jingle;return e?e.getLog():{}}},{key:\"getXmppLog\",value:function(){return(this.connection.logger||{}).log||null}},{key:\"dial\",value:function(){var e;(e=this.connection.rayo).dial.apply(e,arguments)}},{key:\"ping\",value:function(e){var t=this;return new Promise(function(n,r){t.isPingSupported()?t.connection.ping.ping(t.connection.domain,n,r,e):r(\"PING operation is not supported by the server\")})}},{key:\"getSessions\",value:function(){return this.connection.jingle.sessions}},{key:\"disconnect\",value:function(e){var t=this;return this.disconnectInProgress||!this.connection?(this.eventEmitter.emit(c.WRONG_STATE),Promise.reject(new Error(\"Wrong connection state!\"))):(this.disconnectInProgress=!0,new Promise(function(n){if(t.eventEmitter.on(E.a.CONNECTION_STATUS_CHANGED,function e(r,o){o===i.Strophe.Status.DISCONNECTED&&(n(),t.eventEmitter.removeListener(E.a.CONNECTION_STATUS_CHANGED,e))}),t.connection.flush(),null!=e){var r=e.type;\"beforeunload\"!==r&&\"unload\"!==r||(t.connection.options.sync=!0)}t.connection.disconnect(),!0!==t.connection.options.sync&&t.connection.flush()}))}},{key:\"_initStrophePlugins\",value:function(){var e={jvb:{iceServers:[]},p2p:{iceServers:[]}},t=this.options.p2p&&this.options.p2p.stunServers||O;Array.isArray(t)&&(k.info(\"P2P STUN servers: \",t),e.p2p.iceServers=t),this.options.p2p&&this.options.p2p.iceTransportPolicy&&(k.info(\"P2P ICE transport policy: \",this.options.p2p.iceTransportPolicy),e.p2p.iceTransportPolicy=this.options.p2p.iceTransportPolicy),Object(l.a)(this),Object(d.a)(this,this.eventEmitter,e),Object(p.a)(),Object(h.a)(this),Object(f.a)(),Object(m.a)()}},{key:\"_getConnectionFailedReasonDetails\",value:function(){var e={};if(this.options.deploymentInfo&&this.options.deploymentInfo.shard&&this.connection._proto&&this.connection._proto.lastResponseHeaders){var t=this.connection._proto.lastResponseHeaders.trim().split(/[\\r\\n]+/),n={};t.forEach(function(e){var t=e.split(\": \"),r=t.shift(),i=t.join(\": \");n[r]=i}),e.shard_changed=this.options.deploymentInfo.shard!==n[\"x-jitsi-shard\"]}return e.suspend_time=this.connection.ping.getPingSuspendTime(),e.time_since_last_success=this._lastSuccessTracker.getTimeSinceLastSuccess(),e}},{key:\"sendDominantSpeakerEvent\",value:function(e){if(this.speakerStatsComponentAddress&&e){var t=Object(i.$msg)({to:this.speakerStatsComponentAddress});t.c(\"speakerstats\",{xmlns:\"http://jitsi.org/jitmeet\",room:e}).up(),this.connection.send(t)}}},{key:\"tryParseJSONAndVerify\",value:function(e){try{var t=JSON.parse(e);if(t&&\"object\"===T(t)){var n=t[I];if(void 0!==n)return t;k.debug(\"parsing valid json but does not have correct structure\",\"topic: \",n)}}catch(e){return!1}return!1}},{key:\"_onPrivateMessage\",value:function(e){var t=e.getAttribute(\"from\");if(this.speakerStatsComponentAddress&&t===this.speakerStatsComponentAddress){var n=$(e).find(\">json-message\").text(),r=this.tryParseJSONAndVerify(n);return r&&\"speakerstats\"===r[I]&&r.users&&this.eventEmitter.emit(E.a.SPEAKER_STATS_RECEIVED,r.users),!0}}}])&&C(n.prototype,r),o&&C(n,o),t}()}).call(this,\"modules\\\\xmpp\\\\xmpp.js\")},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"CONNECTION_DROPPED_ERROR\",function(){return r}),n.d(t,\"OTHER_ERROR\",function(){return i}),n.d(t,\"PASSWORD_REQUIRED\",function(){return o}),n.d(t,\"SERVER_ERROR\",function(){return a});var r=\"connection.droppedError\",i=\"connection.otherError\",o=\"connection.passwordRequired\",a=\"connection.serverError\"},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return r}),n.d(t,\"b\",function(){return i});var r=\"signaling.peerMuted\",i=\"signaling.peerVideoType\"},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=!0,o=!0,a={disableLog:function(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+r(e)+\". Please use a boolean.\"):(i=e,e?\"adapter.js logging disabled\":\"adapter.js logging enabled\")},disableWarnings:function(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+r(e)+\". Please use a boolean.\"):(o=!e,\"adapter.js deprecation warnings \"+(e?\"disabled\":\"enabled\"))},log:function(){if(\"object\"===(\"undefined\"==typeof window?\"undefined\":r(window))){if(i)return;\"undefined\"!=typeof console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)}},deprecated:function(e,t){o&&console.warn(e+\" is deprecated, please use \"+t+\" instead.\")},extractVersion:function(e,t,n){var r=e.match(t);return r&&r.length>=n&&parseInt(r[n],10)},detectBrowser:function(e){var t=e&&e.navigator,n={browser:null,version:null};if(void 0===e||!e.navigator)return n.browser=\"Not a browser.\",n;if(t.mozGetUserMedia)n.browser=\"firefox\",n.version=this.extractVersion(t.userAgent,/Firefox\\/(\\d+)\\./,1);else if(t.webkitGetUserMedia)if(e.webkitRTCPeerConnection)n.browser=\"chrome\",n.version=this.extractVersion(t.userAgent,/Chrom(e|ium)\\/(\\d+)\\./,2);else{if(!t.userAgent.match(/Version\\/(\\d+).(\\d+)/))return n.browser=\"Unsupported webkit-based browser with GUM support but no WebRTC support.\",n;n.browser=\"safari\",n.version=this.extractVersion(t.userAgent,/AppleWebKit\\/(\\d+)\\./,1)}else if(t.mediaDevices&&t.userAgent.match(/Edge\\/(\\d+).(\\d+)$/))n.browser=\"edge\",n.version=this.extractVersion(t.userAgent,/Edge\\/(\\d+).(\\d+)$/,2);else{if(!t.mediaDevices||!t.userAgent.match(/AppleWebKit\\/(\\d+)\\./))return n.browser=\"Not a supported browser.\",n;n.browser=\"safari\",n.version=this.extractVersion(t.userAgent,/AppleWebKit\\/(\\d+)\\./,1)}return n}};e.exports={log:a.log,deprecated:a.deprecated,disableLog:a.disableLog,disableWarnings:a.disableWarnings,extractVersion:a.extractVersion,shimCreateObjectURL:a.shimCreateObjectURL,detectBrowser:a.detectBrowser.bind(a)}},function(e,t){e.exports={ENVIRONMENT:\"environment\",USER:\"user\"}},function(e,t,n){\"use strict\";(function(e){var r=n(15),i=n(12),o=n(3);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var s=n(4).getLogger(e),c=n(11),u=!1,l=!1,d=null,p={intChromeExtPromise:null,obtainStream:null,init:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{desktopSharingChromeDisabled:!1,desktopSharingChromeExtId:null,desktopSharingFirefoxDisabled:!1},t=arguments.length>1?arguments[1]:void 0;this.options=e,d=t,this.obtainStream=this._createObtainStreamMethod(e),this.obtainStream||s.info(\"Desktop sharing disabled\")},_createObtainStreamMethod:function(e){var t=this;return o.a.isNWJS()?function(e,t,n){window.JitsiMeetNW.obtainDesktopStream(t,function(e,t){var o;o=e&&\"InvalidStateError\"===e.name?new r.a(i.CHROME_EXTENSION_USER_CANCELED):new r.a(e,t,[\"desktop\"]),\"function\"==typeof n&&n(o)})}:o.a.isElectron()?this.obtainScreenOnElectron:o.a.isChrome()||o.a.isOpera()?o.a.supportsGetDisplayMedia()&&!e.desktopSharingChromeDisabled?this.obtainScreenFromGetDisplayMedia:e.desktopSharingChromeDisabled||!e.desktopSharingChromeExtId?null:(s.info(\"Using Chrome extension for desktop sharing\"),this.intChromeExtPromise=function(e){return function(e){0===$(\"link[rel=chrome-webstore-item]\").length&&$(\"head\").append('<link rel=\"chrome-webstore-item\">'),$(\"link[rel=chrome-webstore-item]\").attr(\"href\",h(e))}(e),new Promise(function(t){f(function(e,n){u=e,l=n,s.info(\"Chrome extension installed: \".concat(u,\" updateRequired: \").concat(l)),t()},e)})}(e).then(function(){t.intChromeExtPromise=null}),this.obtainScreenFromExtension):o.a.isFirefox()?e.desktopSharingFirefoxDisabled?null:o.a.supportsGetDisplayMedia()?this.obtainScreenFromGetDisplayMedia:this.obtainScreenOnFirefox:o.a.isEdge()&&o.a.supportsGetDisplayMedia()?this.obtainScreenFromGetDisplayMedia:(s.log(\"Screen sharing not supported by the current browser: \",o.a.getName()),null)},isSupported:function(){return null!==this.obtainStream},obtainScreenOnFirefox:function(e,t,n){!function(e,t,n){d([\"screen\"],e).then(function(e){return t({stream:e})},n)}(e.gumOptions,t,n)},obtainScreenOnElectron:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;if(window.JitsiMeetScreenObtainer&&window.JitsiMeetScreenObtainer.openDesktopPicker){var o=e.desktopSharingSources,a=e.gumOptions;window.JitsiMeetScreenObtainer.openDesktopPicker({desktopSharingSources:o||this.options.desktopSharingChromeSources},function(e,r){return m({response:{streamId:e,streamType:r},gumOptions:a},t,n)},function(e){return n(new r.a(i.ELECTRON_DESKTOP_PICKER_ERROR,e))})}else n(new r.a(i.ELECTRON_DESKTOP_PICKER_NOT_FOUND))},obtainScreenFromExtension:function(e,t,n){var o=this;if(null===this.intChromeExtPromise){var a=this.options,c=a.desktopSharingChromeExtId,d=a.desktopSharingChromeSources,p=e.gumOptions,h={desktopSharingChromeExtId:c,desktopSharingChromeSources:e.desktopSharingSources||d,gumOptions:p};u?function(e,t,n){var o=e.desktopSharingChromeSources,a=e.desktopSharingChromeExtId,c=e.gumOptions;chrome.runtime.sendMessage(a,{getStream:!0,sources:o},function(e){if(e)s.log(\"Response from extension: \",e),m({response:e,gumOptions:c},t,n);else{var o=chrome.runtime.lastError;n(o instanceof Error?o:new r.a(i.CHROME_EXTENSION_GENERIC_ERROR,o))}})}(h,t,n):(l&&alert(\"Jitsi Desktop Streamer requires update. Changes will take effect after next Chrome restart.\"),this.handleExternalInstall(e,t,n))}else this.intChromeExtPromise.then(function(){o.obtainScreenFromExtension(e,t,n)})},handleExternalInstall:function(e,t,n,r){var i=h(this.options);e.listener(\"waitingForExtension\",i),this.checkForChromeExtensionOnInterval(e,t,n,r)},checkForChromeExtensionOnInterval:function(e,t,n){var o=this;!1!==e.checkAgain()?function(e,t,n){if(0===n)return Promise.reject();return new Promise(function(r,i){var o=n,a=window.setInterval(function(){f(function(e){e?(window.clearInterval(a),r()):0===--o&&(i(),window.clearInterval(a))},e)},t)})}(this.options,e.interval,1).then(function(){u=!0,e.listener(\"extensionFound\"),o.obtainScreenFromExtension(e,t,n)}).catch(function(){o.checkForChromeExtensionOnInterval(e,t,n)}):n(new r.a(i.CHROME_EXTENSION_INSTALLATION_ERROR))},obtainScreenFromGetDisplayMedia:function(e,t,n){s.info(\"Using getDisplayMedia for screen sharing\"),(navigator.getDisplayMedia?navigator.getDisplayMedia.bind(navigator):navigator.mediaDevices.getDisplayMedia.bind(navigator.mediaDevices))({video:!0}).then(function(n){(n&&n.getTracks()&&n.getTracks().length>0?n.getTracks()[0].applyConstraints(e.trackOptions):Promise.resolve()).then(function(){return t({stream:n,sourceId:n.id})})}).catch(function(){return n(new r.a(i.CHROME_EXTENSION_USER_CANCELED))})}};function h(e){return\"https://chrome.google.com/webstore/detail/\".concat(e.desktopSharingChromeExtId)}function f(e,t){\"undefined\"!=typeof chrome&&chrome&&chrome.runtime?chrome.runtime.sendMessage(t.desktopSharingChromeExtId,{getVersion:!0},function(n){if(!n||!n.version)return s.warn(\"Extension not installed?: \",chrome.runtime.lastError),void e(!1,!1);var r=n.version;s.log(\"Extension version is: \".concat(r));var i=function(e,t){try{for(var n=e.split(\".\"),r=t.split(\".\"),i=Math.max(n.length,r.length),o=0;o<i;o++){var a=0,u=0;if(o<n.length&&(a=parseInt(n[o],10)),o<r.length&&(u=parseInt(r[o],10)),isNaN(a)||isNaN(u))return!0;if(a!==u)return a>u}return!1}catch(e){return c.callErrorHandler(e),s.error(\"Failed to parse extension version\",e),!0}}(t.desktopSharingChromeMinExtVersion,r);e(!i,i)}):e(!1,!1)}function m(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{response:{},gumOptions:{}},t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0,o=e.response||{},s=o.streamId,c=o.streamType,u=o.error;if(s){var l=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){a(e,t,n[t])})}return e}({desktopStream:s},e.gumOptions);d([\"desktop\"],l).then(function(e){return t({stream:e,sourceId:s,sourceType:c})},n)}else{if(\"\"===s)return void n(new r.a(i.CHROME_EXTENSION_USER_CANCELED));n(new r.a(i.CHROME_EXTENSION_GENERIC_ERROR,u))}}t.a=p}).call(this,\"modules\\\\RTC\\\\ScreenObtainer.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return _}),n.d(t,\"b\",function(){return S});var r=n(4),i=n(2),o=n(16),a=n(9),s=n(3),c=n(7),u=n.n(c),l=n(5),d=n(8);function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){h(e,t,n[t])})}return e}function h(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return t&&f(e.prototype,t),n&&f(e,n),e}var v=Object(r.getLogger)(e),y=500,g=1e4,_={ACTIVE:\"active\",INACTIVE:\"inactive\",INTERRUPTED:\"interrupted\",RESTORING:\"restoring\"},S=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.rtc=t,this.conference=n,this.trackTimers={},this.connStatusFromJvb={},this.outOfLastNTimeout=\"number\"==typeof r.outOfLastNTimeout?r.outOfLastNTimeout:y,this.rtcMuteTimeout=\"number\"==typeof r.rtcMuteTimeout?r.rtcMuteTimeout:g,this.rtcMutedTimestamp={},v.info(\"RtcMuteTimeout set to: \".concat(this.rtcMuteTimeout)),this.enteredLastNTimestamp=new Map,this.restoringTimers=new Map,this.connectionStatusMap=new Map}return m(e,null,[{key:\"_getNewStateForJvbMode\",value:function(e,t,n,r,i){return e?r?_.ACTIVE:s.a.supportsVideoMuteOnConnInterrupted()?i?t?n?_.INTERRUPTED:_.RESTORING:_.INACTIVE:_.ACTIVE:t?_.ACTIVE:_.INACTIVE:_.INTERRUPTED}},{key:\"_getNewStateForP2PMode\",value:function(e,t){return s.a.supportsVideoMuteOnConnInterrupted()?e||!t?_.ACTIVE:_.INTERRUPTED:_.ACTIVE}}]),m(e,[{key:\"_getVideoFrozenTimeout\",value:function(e){return this.rtc.isInLastN(e)?this.rtcMuteTimeout:this.outOfLastNTimeout}},{key:\"init\",value:function(){this._onEndpointConnStatusChanged=this.onEndpointConnStatusChanged.bind(this),this.rtc.addListener(u.a.ENDPOINT_CONN_STATUS_CHANGED,this._onEndpointConnStatusChanged),this._onP2PStatus=this.refreshConnectionStatusForAll.bind(this),this.conference.on(i.P2P_STATUS,this._onP2PStatus),this._onUserLeft=this.onUserLeft.bind(this),this.conference.on(i.USER_LEFT,this._onUserLeft),s.a.supportsVideoMuteOnConnInterrupted()&&(this._onTrackRtcMuted=this.onTrackRtcMuted.bind(this),this.rtc.addListener(u.a.REMOTE_TRACK_MUTE,this._onTrackRtcMuted),this._onTrackRtcUnmuted=this.onTrackRtcUnmuted.bind(this),this.rtc.addListener(u.a.REMOTE_TRACK_UNMUTE,this._onTrackRtcUnmuted),this._onRemoteTrackAdded=this.onRemoteTrackAdded.bind(this),this.conference.on(i.TRACK_ADDED,this._onRemoteTrackAdded),this._onRemoteTrackRemoved=this.onRemoteTrackRemoved.bind(this),this.conference.on(i.TRACK_REMOVED,this._onRemoteTrackRemoved),this._onSignallingMuteChanged=this.onSignallingMuteChanged.bind(this),this._onTrackVideoTypeChanged=this.onTrackVideoTypeChanged.bind(this)),this._onLastNChanged=this._onLastNChanged.bind(this),this.conference.on(i.LAST_N_ENDPOINTS_CHANGED,this._onLastNChanged),this._onLastNValueChanged=this.refreshConnectionStatusForAll.bind(this),this.rtc.on(u.a.LASTN_VALUE_CHANGED,this._onLastNValueChanged)}},{key:\"dispose\",value:function(){this.rtc.removeListener(u.a.ENDPOINT_CONN_STATUS_CHANGED,this._onEndpointConnStatusChanged),s.a.supportsVideoMuteOnConnInterrupted()&&(this.rtc.removeListener(u.a.REMOTE_TRACK_MUTE,this._onTrackRtcMuted),this.rtc.removeListener(u.a.REMOTE_TRACK_UNMUTE,this._onTrackRtcUnmuted),this.conference.off(i.TRACK_ADDED,this._onRemoteTrackAdded),this.conference.off(i.TRACK_REMOVED,this._onRemoteTrackRemoved)),this.conference.off(i.LAST_N_ENDPOINTS_CHANGED,this._onLastNChanged),this.rtc.removeListener(u.a.LASTN_VALUE_CHANGED,this._onLastNValueChanged),this.conference.off(i.P2P_STATUS,this._onP2PStatus),this.conference.off(i.USER_LEFT,this._onUserLeft);for(var e=Object.keys(this.trackTimers),t=0;t<e.length;t++){var n=e[t];this.clearTimeout(n),this.clearRtcMutedTimestamp(n)}for(var r in this.connectionStatusMap)this.connectionStatusMap.hasOwnProperty(r)&&this.onUserLeft(r);this.connStatusFromJvb={}}},{key:\"onEndpointConnStatusChanged\",value:function(e,t){v.debug(\"Detector RTCEvents.ENDPOINT_CONN_STATUS_CHANGED(\".concat(Date.now(),\"): \").concat(e,\": \").concat(t)),e!==this.conference.myUserId()&&(this.connStatusFromJvb[e]=t,this.figureOutConnectionStatus(e))}},{key:\"_changeConnectionStatus\",value:function(e,t){if(e.getConnectionStatus()!==t){var n=e.getId();e._setConnectionStatus(t),v.debug(\"Emit endpoint conn status(\".concat(Date.now(),\") \").concat(n,\": \").concat(t)),l.a.sendLog(JSON.stringify({id:\"peer.conn.status\",participant:n,status:t})),this.conference.eventEmitter.emit(i.PARTICIPANT_CONN_STATUS_CHANGED,n,t)}}},{key:\"clearTimeout\",value:function(e){this.trackTimers[e]&&(window.clearTimeout(this.trackTimers[e]),this.trackTimers[e]=null)}},{key:\"clearRtcMutedTimestamp\",value:function(e){this.rtcMutedTimestamp[e]=null}},{key:\"onRemoteTrackAdded\",value:function(e){var t=this;e.isLocal()||e.getType()!==a.b||(v.debug(\"Detector on remote track added for: \".concat(e.getParticipantId())),e.on(o.TRACK_MUTE_CHANGED,this._onSignallingMuteChanged),e.on(o.TRACK_VIDEOTYPE_CHANGED,function(n){return t._onTrackVideoTypeChanged(e,n)}))}},{key:\"onRemoteTrackRemoved\",value:function(e){if(!e.isLocal()&&e.getType()===a.b){var t=e.getParticipantId();v.debug(\"Detector on remote track removed: \".concat(t)),e.off(o.TRACK_MUTE_CHANGED,this._onSignallingMuteChanged),this.clearTimeout(t),this.clearRtcMutedTimestamp(t),this.figureOutConnectionStatus(t)}}},{key:\"isVideoTrackFrozen\",value:function(e){if(!s.a.supportsVideoMuteOnConnInterrupted())return!1;var t=e.getId(),n=e.hasAnyVideoTrackWebRTCMuted(),r=this.rtcMutedTimestamp[t],i=this._getVideoFrozenTimeout(t);return n&&\"number\"==typeof r&&Date.now()-r>=i}},{key:\"refreshConnectionStatusForAll\",value:function(){var e=this.conference.getParticipants(),t=!0,n=!1,r=void 0;try{for(var i,o=e[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;this.figureOutConnectionStatus(a.getId())}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}}},{key:\"figureOutConnectionStatus\",value:function(t){var n=this.conference.getParticipantById(t);if(n){var r=this.conference.isP2PActive(),i=this._isRestoringTimedout(t),o=0===this.rtc.getLastN(),s=n.isVideoMuted()||o,c=this.isVideoTrackFrozen(n),u=this.rtc.isInLastN(t),l=this.connStatusFromJvb[t];\"boolean\"!=typeof l&&(v.debug(\"Assuming connection active by JVB - no notification\"),l=!0);var d=r?e._getNewStateForP2PMode(s,c):e._getNewStateForJvbMode(l,u,i,s,c);d!==_.RESTORING&&this._clearRestoringTimer(t),v.debug(\"Figure out conn status for \".concat(t,\", is video muted: \").concat(s,\" is active(jvb): \").concat(l,\" video track frozen: \").concat(c,\" p2p mode: \").concat(r,\" is in last N: \").concat(u,\" currentStatus => newStatus: \").concat(n.getConnectionStatus(),\" => \").concat(d));var h=this.connectionStatusMap[t]||{};if(!(\"p2p\"in h&&\"connectionStatus\"in h&&h.p2p===r&&h.connectionStatus===d)){var f=Date.now();if(this.maybeSendParticipantConnectionStatusEvent(t,f),this.connectionStatusMap[t]=p({},h,{connectionStatus:d,p2p:r,startedMs:f}),!(\"videoType\"in this.connectionStatusMap[t])){var m=n.getTracksByMediaType(a.b);Array.isArray(m)&&0!==m.length&&(this.connectionStatusMap[t].videoType=m[0].videoType)}}this._changeConnectionStatus(n,d)}else v.debug(\"figure out conn status - no participant for: \".concat(t))}},{key:\"maybeSendParticipantConnectionStatusEvent\",value:function(e,t){var n=this.connectionStatusMap[e];n&&\"startedMs\"in n&&\"videoType\"in n&&\"connectionStatus\"in n&&\"p2p\"in n&&(n.value=t-n.startedMs,l.a.sendAnalytics(Object(d.H)(n)))}},{key:\"_onLastNChanged\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=Date.now();v.debug(\"leaving/entering lastN\",e,t,n);var r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var c=a.value;this.enteredLastNTimestamp.delete(c),this._clearRestoringTimer(c),this.figureOutConnectionStatus(c)}}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}var u=!0,l=!1,d=void 0;try{for(var p,h=t[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var f=p.value;this.enteredLastNTimestamp.set(f,n),this.figureOutConnectionStatus(f)}}catch(e){l=!0,d=e}finally{try{u||null==h.return||h.return()}finally{if(l)throw d}}}},{key:\"_clearRestoringTimer\",value:function(e){var t=this.restoringTimers.get(e);t&&(clearTimeout(t),this.restoringTimers.delete(e))}},{key:\"_isRestoringTimedout\",value:function(e){var t=this,n=this.enteredLastNTimestamp.get(e);return!!(n&&Date.now()-n>=1e4)||(this.restoringTimers.get(e)||this.restoringTimers.set(e,setTimeout(function(){return t.figureOutConnectionStatus(e)},1e4)),!1)}},{key:\"onUserLeft\",value:function(e){this.maybeSendParticipantConnectionStatusEvent(e,Date.now()),delete this.connectionStatusMap[e]}},{key:\"onTrackRtcMuted\",value:function(e){var t=this,n=e.getParticipantId(),r=this.conference.getParticipantById(n);if(v.debug(\"Detector track RTC muted: \".concat(n),Date.now()),r){if(this.rtcMutedTimestamp[n]=Date.now(),!r.isVideoMuted()){this.clearTimeout(n);var i=this._getVideoFrozenTimeout(n);this.trackTimers[n]=window.setTimeout(function(){v.debug(\"Set RTC mute timeout for: \".concat(n,\"                     of \").concat(i,\" ms\")),t.clearTimeout(n),t.figureOutConnectionStatus(n)},i)}}else v.error(\"No participant for id: \".concat(n))}},{key:\"onTrackRtcUnmuted\",value:function(e){var t=e.getParticipantId();v.debug(\"Detector track RTC unmuted: \".concat(t),Date.now()),this.clearTimeout(t),this.clearRtcMutedTimestamp(t),this.figureOutConnectionStatus(t)}},{key:\"onSignallingMuteChanged\",value:function(e){var t=e.getParticipantId();v.debug(\"Detector on track signalling mute changed: \".concat(t),e.isMuted()),this.figureOutConnectionStatus(t)}},{key:\"onTrackVideoTypeChanged\",value:function(e,t){var n=e.getParticipantId(),r=Date.now();this.maybeSendParticipantConnectionStatusEvent(n,r),this.connectionStatusMap[n]=p({},this.connectionStatusMap[n]||{},{videoType:t,startedMs:r})}}]),e}()}).call(this,\"modules\\\\connectivity\\\\ParticipantConnectionStatus.js\")},function(e,t,n){\"use strict\";t.a={getFocusRecordingUpdate:function(e){var t=e&&e.getElementsByTagName(\"jibri-recording-status\")[0];if(t)return{error:t.getAttribute(\"failure_reason\"),recordingMode:t.getAttribute(\"recording_mode\"),sessionID:t.getAttribute(\"session_id\"),status:t.getAttribute(\"status\")}},getHiddenDomainUpdate:function(e){var t=e.getElementsByTagName(\"live-stream-view-url\")[0],n=t&&t.textContent,r=e.getElementsByTagName(\"mode\")[0],i=r&&r.textContent&&r.textContent.toLowerCase(),o=e.getElementsByTagName(\"session_id\")[0];return{liveStreamViewURL:n,mode:i,sessionID:o&&o.textContent}},getSessionIdFromIq:function(e){var t=e&&e.getElementsByTagName(\"jibri\")[0];return t&&t.getAttribute(\"session_id\")},getSessionId:function(e){var t=e.getElementsByTagName(\"session_id\")[0];return t&&t.textContent},isFromFocus:function(e){return e.getAttribute(\"from\").includes(\"focus\")}}},function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var r;r=function(){return this}();try{r=r||new Function(\"return this\")()}catch(e){\"object\"===(\"undefined\"==typeof window?\"undefined\":n(window))&&(r=window)}e.exports=r},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return k});var r=n(8),i=n(4),o=n(1),a=n(82),s=n(83),c=n(31),u=n(18),l=n(47),d=n(6),p=n(84),h=n(7),f=n.n(h),m=n(5),v=n(0),y=n.n(v),g=n(86),_=n(11),S=n.n(_);function b(e){return(b=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function E(e,t){return!t||\"object\"!==b(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function T(e){return(T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e,t,n){return t&&C(e.prototype,t),n&&C(e,n),e}function A(e,t){return(A=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var w=Object(i.getLogger)(e),k=function(e){function t(e,n,r,i,o,a,s,c){var u;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(u=E(this,T(t).call(this,e,n,r,i,o,a,c)))._bridgeSessionId=null,u._iceCheckingStartedTimestamp=null,u._gatheringStartedTimestamp=null,u._localVideoActive=!0,u._remoteVideoActive=!0,u._gatheringReported=!1,u.lasticecandidate=!1,u.closed=!1,u.isP2P=s,u.signalingLayer=new p.a,u.modificationQueue=new g.a,u.wasConnected=!1,u.establishmentDuration=void 0,u}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&A(e,t)}(t,s[\"a\"]),R(t,null,[{key:\"parseVideoSenders\",value:function(e){var t=e.find('>content[name=\"video\"]');if(t.length){var n=t[0].getAttribute(\"senders\");if(\"both\"===n||\"initiator\"===n||\"responder\"===n||\"none\"===n)return n}return null}}]),R(t,[{key:\"_assertNotEnded\",value:function(){return this.state!==c.b}},{key:\"doInitialize\",value:function(e){var t=this;this.failICE=Boolean(e.failICE),this.lasticecandidate=!1,this.options=e,this.isReconnect=!1,this.wasstable=!1,this.webrtcIceUdpDisable=Boolean(e.webrtcIceUdpDisable),this.webrtcIceTcpDisable=Boolean(e.webrtcIceTcpDisable);var n={disableRtx:e.disableRtx};if(e.gatherStats&&(n.maxstats=300),this.isP2P){n.disableSimulcast=!0,n.disableH264=e.p2p&&e.p2p.disableH264,n.preferH264=e.p2p&&e.p2p.preferH264;var i=this._abtestSuspendVideoEnabled(e);void 0!==i&&(n.abtestSuspendVideo=i)}else n.disableSimulcast=e.disableSimulcast||e.preferH264&&!e.disableH264,n.preferH264=e.preferH264,n.enableFirefoxSimulcast=e.testing&&e.testing.enableFirefoxSimulcast,n.enableLayerSuspension=e.enableLayerSuspension;e.startSilent&&(n.startSilent=!0),this.peerconnection=this.rtc.createPeerConnection(this.signalingLayer,this.iceConfig,this.isP2P,n),this.peerconnection.onicecandidate=function(e){if(e){var n=e.candidate,i=window.performance.now();if(n){null===t._gatheringStartedTimestamp&&(t._gatheringStartedTimestamp=i);var o=n.protocol;if(\"string\"==typeof o)if(\"tcp\"===(o=o.toLowerCase())||\"ssltcp\"===o){if(t.webrtcIceTcpDisable)return}else if(\"udp\"===o&&t.webrtcIceUdpDisable)return}else t._gatheringReported||(m.a.sendAnalytics(r.n,{phase:\"gathering\",value:i-t._gatheringStartedTimestamp,p2p:t.isP2P,initiator:t.isInitiator}),t._gatheringReported=!0);t.sendIceCandidate(n)}},this.peerconnection.onsignalingstatechange=function(){\"stable\"===t.peerconnection.signalingState?t.wasstable=!0:\"closed\"!==t.peerconnection.signalingState&&\"closed\"!==t.peerconnection.connectionState||t.room.eventEmitter.emit(y.a.SUSPEND_DETECTED,t)},this.peerconnection.oniceconnectionstatechange=function(){var e=window.performance.now();switch(t.isP2P||(t.room.connectionTimes[\"ice.state.\".concat(t.peerconnection.iceConnectionState)]=e),w.log(\"(TIME) ICE \".concat(t.peerconnection.iceConnectionState)+\" P2P? \".concat(t.isP2P,\":\\t\"),e),m.a.sendAnalytics(r.p,{p2p:t.isP2P,state:t.peerconnection.iceConnectionState,signaling_state:t.peerconnection.signalingState,reconnect:t.isReconnect,value:e}),t.room.eventEmitter.emit(y.a.ICE_CONNECTION_STATE_CHANGED,t,t.peerconnection.iceConnectionState),t.peerconnection.iceConnectionState){case\"checking\":t._iceCheckingStartedTimestamp=e;break;case\"connected\":if(\"stable\"===t.peerconnection.signalingState&&t.isReconnect&&t.room.eventEmitter.emit(y.a.CONNECTION_RESTORED,t),!t.wasConnected&&t.wasstable){m.a.sendAnalytics(r.n,{phase:\"checking\",value:e-t._iceCheckingStartedTimestamp,p2p:t.isP2P,initiator:t.isInitiator});var n=Math.min(t._iceCheckingStartedTimestamp,t._gatheringStartedTimestamp);t.establishmentDuration=e-n,m.a.sendAnalytics(r.n,{phase:\"establishment\",value:t.establishmentDuration,p2p:t.isP2P,initiator:t.isInitiator}),t.wasConnected=!0,t.room.eventEmitter.emit(y.a.CONNECTION_ESTABLISHED,t)}t.isReconnect=!1;break;case\"disconnected\":t.isReconnect=!0,t.wasstable&&t.room.eventEmitter.emit(y.a.CONNECTION_INTERRUPTED,t);break;case\"failed\":t.room.eventEmitter.emit(y.a.CONNECTION_ICE_FAILED,t)}},this.peerconnection.onnegotiationneeded=function(){t.room.eventEmitter.emit(y.a.PEERCONNECTION_READY,t)},this.signalingLayer.setChatRoom(this.room),!this.isP2P&&e.enableLayerSuspension&&this.rtc.addListener(f.a.IS_SELECTED_CHANGED,function(e){t.peerconnection.setIsSelected(e),w.info(\"Doing local O/A due to IS_SELECTED_CHANGED event\"),t.modificationQueue.push(function(e){t._renegotiate().then(e).catch(e)})})}},{key:\"sendIceCandidate\",value:function(e){var t=this,n=new u.a(this.peerconnection.localDescription.sdp);if(e&&!this.lasticecandidate){var r=d.a.iceparams(n.media[e.sdpMLineIndex],n.session),i=d.a.candidateToJingle(e.candidate);if(!r||!i){return S.a.callErrorHandler(new Error(\"failed to get ice && jcand\")),void w.error(\"failed to get ice && jcand\")}r.xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\",this.usedrip?(0===this.dripContainer.length&&setTimeout(function(){0!==t.dripContainer.length&&(t.sendIceCandidates(t.dripContainer),t.dripContainer=[])},20),this.dripContainer.push(e)):this.sendIceCandidates([e])}else w.log(\"sendIceCandidate: last candidate.\"),this.lasticecandidate=!0}},{key:\"sendIceCandidates\",value:function(e){var t=this;if(this._assertNotEnded(\"sendIceCandidates\")){w.log(\"sendIceCandidates\",e);for(var n=Object(o.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"transport-info\",initiator:this.initiatorJid,sid:this.sid}),r=new u.a(this.peerconnection.localDescription.sdp),i=function(i){var o=e.filter(function(e){return e.sdpMLineIndex===i}),a=d.a.parseMLine(r.media[i].split(\"\\r\\n\")[0]);if(o.length>0){var s=d.a.iceparams(r.media[i],r.session);s.xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\",n.c(\"content\",{creator:t.initiatorJid===t.localJid?\"initiator\":\"responder\",name:o[0].sdpMid?o[0].sdpMid:a.media}).c(\"transport\",s);for(var c=0;c<o.length;c++){var u=d.a.candidateToJingle(o[c].candidate);t.failICE&&(u.ip=\"1.1.1.1\"),n.c(\"candidate\",u).up()}var l=d.a.findLine(r.media[i],\"a=fingerprint:\",r.session);if(l){var p=d.a.parseFingerprint(l);p.required=!0,n.c(\"fingerprint\",{xmlns:\"urn:xmpp:jingle:apps:dtls:0\"}).t(p.fingerprint),delete p.fingerprint,n.attrs(p),n.up()}n.up(),n.up()}},a=0;a<r.media.length;a++)i(a);this.connection.sendIQ(n,null,this.newJingleErrorHandler(n),1e4)}}},{key:\"sendIceFailedNotification\",value:function(){var e=Object(o.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"session-info\",initiator:this.initiatorJid,sid:this.sid}).c(\"ice-state\",{xmlns:\"http://jitsi.org/protocol/focus\"}).t(\"failed\").up();this._bridgeSessionId&&e.c(\"bridge-session\",{xmlns:\"http://jitsi.org/protocol/focus\",id:this._bridgeSessionId}),this.connection.sendIQ(e,null,this.newJingleErrorHandler(e),65)}},{key:\"addIceCandidates\",value:function(e){var t=this;if(\"closed\"!==this.peerconnection.signalingState){var n=[];if(e.find(\">content>transport>candidate\").each(function(e,t){var r=d.a.candidateFromJingle(t);r=r.replace(\"\\r\\n\",\"\").replace(\"a=\",\"\");var i=new RTCIceCandidate({sdpMLineIndex:0,sdpMid:\"\",candidate:r});n.push(i)}),n.length){w.debug(\"Queued add (\".concat(n.length,\") ICE candidates task...\")),this.modificationQueue.push(function(e){for(var r=0;r<n.length;r++){var i=n[r];t.peerconnection.addIceCandidate(i).then(function(){return w.debug(\"addIceCandidate ok!\")},function(e){return w.error(\"addIceCandidate failed!\",e)})}e()})}else w.error(\"No ICE candidates to add ?\",e[0]&&e[0].outerHTML)}else w.warn(\"Ignored add ICE candidate when in closed state\")}},{key:\"readSsrcInfo\",value:function(e){var t=this;$(e).find('>description>source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(e,n){var r=Number(n.getAttribute(\"ssrc\"));t.isP2P?t.signalingLayer.setSSRCOwner(r,o.Strophe.getResourceFromJid(t.remoteJid)):$(n).find('>ssrc-info[xmlns=\"http://jitsi.org/jitmeet\"]').each(function(e,n){var i=n.getAttribute(\"owner\");i&&i.length&&(isNaN(r)||r<0?w.warn(\"Invalid SSRC \".concat(r,\" value received\")+\" for \".concat(i)):t.signalingLayer.setSSRCOwner(r,o.Strophe.getResourceFromJid(i)))})})}},{key:\"generateRecvonlySsrc\",value:function(){this.peerconnection?this.peerconnection.generateRecvonlySsrc():w.error(\"Unable to generate recvonly SSRC - no peerconnection\")}},{key:\"acceptOffer\",value:function(e,t,n,r){var i=this;this.setOfferAnswerCycle(e,function(){i.sendSessionAccept(t,n)},n,r)}},{key:\"invite\",value:function(e){var t=this;if(!this.isInitiator)throw new Error(\"Trying to invite from the responder session\");this.modificationQueue.push(function(n){var r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var c=a.value;t.peerconnection.addTrack(c)}}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}t.peerconnection.createOffer(t.mediaConstraints).then(function(e){t.peerconnection.setLocalDescription(e).then(function(){t.sendSessionInitiate(t.peerconnection.localDescription.sdp),n()},function(t){w.error(\"Failed to set local SDP\",t,e),n(t)})},function(e){w.error(\"Failed to create an offer\",e,t.mediaConstraints),n(e)})},function(e){e?w.error(\"invite error\",e):w.debug(\"invite executed - OK\")})}},{key:\"sendSessionInitiate\",value:function(e){var t=Object(o.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"session-initiate\",initiator:this.initiatorJid,sid:this.sid});new u.a(e).toJingle(t,this.isInitiator?\"initiator\":\"responder\"),t=t.tree(),w.info(\"Session-initiate: \",t),this.connection.sendIQ(t,function(){w.info('Got RESULT for \"session-initiate\"')},function(e){w.error('\"session-initiate\" error',e)},1e4)}},{key:\"setAnswer\",value:function(e){if(!this.isInitiator)throw new Error(\"Trying to set an answer on the responder session\");this.setOfferAnswerCycle(e,function(){w.info(\"setAnswer - succeeded\")},function(e){w.error(\"setAnswer failed: \",e)})}},{key:\"setOfferAnswerCycle\",value:function(e,t,n,r){var i=this;this.modificationQueue.push(function(t){if(r){var n=!0,o=!1,a=void 0;try{for(var s,l=r[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var d=s.value;i.peerconnection.addTrack(d)}}catch(e){o=!0,a=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}}var p=i._processNewJingleOfferIq(e),h=i.peerconnection.localDescription.sdp,f=$(e).find('>bridge-session[xmlns=\"http://jitsi.org/protocol/focus\"]').attr(\"id\");f!==i._bridgeSessionId&&(i._bridgeSessionId=f),i._renegotiate(p.raw).then(function(){if(i.state===c.c&&(i.state=c.a,i.isP2P&&!i._localVideoActive&&i.sendContentModify(i._localVideoActive)),h){var e=new u.a(i.peerconnection.localDescription.sdp);i.notifyMySSRCUpdate(new u.a(h),e)}t()},function(e){w.error(\"Error renegotiating after setting new remote \".concat(i.isInitiator?\"answer: \":\"offer: \").concat(e),p),t(e)})},function(e){e?n(e):t()})}},{key:\"replaceTransport\",value:function(e,t,n){var r=this;this.room.eventEmitter.emit(y.a.ICE_RESTARTING,this);var i=e.clone();e.find(\">content[name='data']\").attr(\"senders\",\"rejected\"),e.find(\">content>description>source\").remove(),e.find(\">content>description>ssrc-group\").remove();var o=e.find(\">content>transport>fingerprint\");o.attr(\"hash\",\"sha-1\"),o.text(\"00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00\"),this.setOfferAnswerCycle(e,function(){r.setOfferAnswerCycle(i,function(){var e=new u.a(r.peerconnection.localDescription.sdp);r.sendTransportAccept(e,t,n),r.room.eventEmitter.emit(y.a.ICE_RESTART_SUCCESS,r,i)},n)},n)}},{key:\"sendSessionAccept\",value:function(e,t){var n=this,r=new u.a(this.peerconnection.localDescription.sdp),i=Object(o.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"session-accept\",initiator:this.initiatorJid,responder:this.responderJid,sid:this.sid});this.webrtcIceTcpDisable&&(r.removeTcpCandidates=!0),this.webrtcIceUdpDisable&&(r.removeUdpCandidates=!0),this.failICE&&(r.failICE=!0),r.toJingle(i,this.initiatorJid===this.localJid?\"initiator\":\"responder\",null),i=i.tree(),w.info(\"Sending session-accept\",i),this.connection.sendIQ(i,e,this.newJingleErrorHandler(i,function(e){t(e),n.room.eventEmitter.emit(y.a.SESSION_ACCEPT_TIMEOUT,n)}),1e4)}},{key:\"sendContentModify\",value:function(e){var t=e?\"both\":\"none\",n=Object(o.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"content-modify\",initiator:this.initiatorJid,sid:this.sid}).c(\"content\",{name:\"video\",senders:t});w.info(\"Sending content-modify, video senders: \".concat(t)),this.connection.sendIQ(n,null,this.newJingleErrorHandler(n),1e4)}},{key:\"sendTransportAccept\",value:function(e,t,n){var r=this,i=Object(o.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"transport-accept\",initiator:this.initiatorJid,sid:this.sid});e.media.forEach(function(t,n){var o=d.a.parseMLine(t.split(\"\\r\\n\")[0]);i.c(\"content\",{creator:r.initiatorJid===r.localJid?\"initiator\":\"responder\",name:o.media}),e.transportToJingle(n,i),i.up()}),i=i.tree(),w.info(\"Sending transport-accept: \",i),this.connection.sendIQ(i,t,this.newJingleErrorHandler(i,n),1e4)}},{key:\"sendTransportReject\",value:function(e,t){var n=Object(o.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"transport-reject\",initiator:this.initiatorJid,sid:this.sid});n=n.tree(),w.info(\"Sending 'transport-reject\",n),this.connection.sendIQ(n,e,this.newJingleErrorHandler(n,t),1e4)}},{key:\"terminate\",value:function(e,t,n){if(this.state!==c.b){if(!n||Boolean(n.sendSessionTerminate)){var r=Object(o.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"session-terminate\",initiator:this.initiatorJid,sid:this.sid}).c(\"reason\").c(n&&n.reason||\"success\");n&&n.reasonDescription&&r.up().c(\"text\").t(n.reasonDescription),r=r.tree(),w.info(\"Sending session-terminate\",r),this.connection.sendIQ(r,e,this.newJingleErrorHandler(r,t),1e4)}else w.info(\"Skipped sending session-terminate for \".concat(this));this.connection.jingle.terminate(this.sid)}}},{key:\"onTerminated\",value:function(e,t){w.info(\"Session terminated \".concat(this),e,t),this.close()}},{key:\"_parseSsrcInfoFromSourceAdd\",value:function(e,t){var n=[];return $(e).each(function(e,r){var i=$(r).attr(\"name\"),o=\"\";$(r).find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(){var e=this.getAttribute(\"semantics\"),t=$(this).find(\">source\").map(function(){return this.getAttribute(\"ssrc\")}).get();t.length&&(o+=\"a=ssrc-group:\".concat(e,\" \").concat(t.join(\" \"),\"\\r\\n\"))}),$(r).find('source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(){var e=$(this).attr(\"ssrc\");t.containsSSRC(e)?w.warn(\"Source-add request for existing SSRC: \".concat(e)):$(this).find(\">parameter\").each(function(){o+=\"a=ssrc:\".concat(e,\" \").concat($(this).attr(\"name\")),$(this).attr(\"value\")&&$(this).attr(\"value\").length&&(o+=\":\".concat($(this).attr(\"value\"))),o+=\"\\r\\n\"})}),t.media.forEach(function(e,t){d.a.findLine(e,\"a=mid:\".concat(i))&&(n[t]||(n[t]=\"\"),n[t]+=o)})}),n}},{key:\"addRemoteStream\",value:function(e){this._addOrRemoveRemoteStream(!0,e)}},{key:\"removeRemoteStream\",value:function(e){this._addOrRemoveRemoteStream(!1,e)}},{key:\"_addOrRemoveRemoteStream\",value:function(e,t){var n=this,r=e?\"addRemoteStream\":\"removeRemoteStream\";e&&this.readSsrcInfo(t);this.modificationQueue.push(function(i){if(!n.peerconnection.localDescription||!n.peerconnection.localDescription.sdp){var o=\"\".concat(r,\" - localDescription not ready yet\");return w.error(o),void i(o)}w.log(\"Processing \".concat(r)),w.log(\"ICE connection state: \",n.peerconnection.iceConnectionState);var a=new u.a(n.peerconnection.localDescription.sdp),s=new u.a(n.peerconnection.remoteDescription.sdp),c=e?n._parseSsrcInfoFromSourceAdd(t,s):n._parseSsrcInfoFromSourceRemove(t,s),l=e?n._processRemoteAddSource(c):n._processRemoteRemoveSource(c);n._renegotiate(l.raw).then(function(){var e=new u.a(n.peerconnection.localDescription.sdp);w.log(\"\".concat(r,\" - OK, SDPs: \"),a,e),n.notifyMySSRCUpdate(a,e),i()},function(e){w.error(\"\".concat(r,\" failed:\"),e),i(e)})})}},{key:\"_processNewJingleOfferIq\",value:function(e){var t=new u.a(\"\");return this.webrtcIceTcpDisable&&(t.removeTcpCandidates=!0),this.webrtcIceUdpDisable&&(t.removeUdpCandidates=!0),this.failICE&&(t.failICE=!0),t.fromJingle(e),this.readSsrcInfo($(e).find(\">content\")),t}},{key:\"_processRemoteRemoveSource\",value:function(e){var t=new u.a(this.peerconnection.remoteDescription.sdp);return e.forEach(function(e,n){(e=e.split(\"\\r\\n\")).pop(),e.forEach(function(e){t.media[n]=t.media[n].replace(\"\".concat(e,\"\\r\\n\"),\"\")})}),t.raw=t.session+t.media.join(\"\"),t}},{key:\"_processRemoteAddSource\",value:function(e){var t=new u.a(this.peerconnection.remoteDescription.sdp);return e.forEach(function(e,n){t.media[n]+=e}),t.raw=t.session+t.media.join(\"\"),t}},{key:\"_renegotiate\",value:function(e){if(\"closed\"===this.peerconnection.signalingState){var t=new Error(\"Attempted to renegotiate in state closed\");return this.room.eventEmitter.emit(y.a.RENEGOTIATION_FAILED,t,this),Promise.reject(t)}var n=e||this.peerconnection.remoteDescription.sdp;if(!n){var r=new Error(\"Can not renegotiate without remote description, current state: \".concat(this.state));return this.room.eventEmitter.emit(y.a.RENEGOTIATION_FAILED,r,this),Promise.reject(r)}var i=new RTCSessionDescription({type:this.isInitiator?\"answer\":\"offer\",sdp:n});return this.isInitiator?this._initiatorRenegotiate(i):this._responderRenegotiate(i)}},{key:\"_responderRenegotiate\",value:function(e){var t=this;return w.debug(\"Renegotiate: setting remote description\"),this.peerconnection.setRemoteDescription(e).then(function(){return w.debug(\"Renegotiate: creating answer\"),t.peerconnection.createAnswer(t.mediaConstraints).then(function(e){return w.debug(\"Renegotiate: setting local description\"),t.peerconnection.setLocalDescription(e)})})}},{key:\"_initiatorRenegotiate\",value:function(e){var t=this;return\"have-local-offer\"===this.peerconnection.signalingState?(w.debug(\"Renegotiate: setting remote description\"),this.peerconnection.setRemoteDescription(e).then(function(){return t._initiatorRenegotiate(e)})):(w.debug(\"Renegotiate: creating offer\"),this.peerconnection.createOffer(this.mediaConstraints).then(function(n){return w.debug(\"Renegotiate: setting local description\"),t.peerconnection.setLocalDescription(n).then(function(){return w.debug(\"Renegotiate: setting remote description\"),t.peerconnection.setRemoteDescription(e)})}))}},{key:\"replaceTrack\",value:function(e,t){var n=this,r=function(r){var i=n.peerconnection.localDescription.sdp;!e&&t&&t.isVideoTrack()?n.peerconnection.clearRecvonlySsrc():e&&e.isVideoTrack()&&!t&&(n.peerconnection.clearRecvonlySsrc(),n.peerconnection.generateRecvonlySsrc()),n.peerconnection.replaceTrack(e,t).then(function(o){o&&(e||t)&&n.state===c.a?n._renegotiate().then(function(){var e=new u.a(n.peerconnection.localDescription.sdp);n.notifyMySSRCUpdate(new u.a(i),e),r()},r):r()})};return new Promise(function(e,t){n.modificationQueue.push(r,function(n){n?(w.error(\"Replace track error:\",n),t(n)):(w.info(\"Replace track done!\"),e())})})}},{key:\"_parseSsrcInfoFromSourceRemove\",value:function(e,t){var n=[];return $(e).each(function(e,r){var i=$(r).attr(\"name\"),o=\"\";$(r).find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(){var e=this.getAttribute(\"semantics\"),t=$(this).find(\">source\").map(function(){return this.getAttribute(\"ssrc\")}).get();t.length&&(o+=\"a=ssrc-group:\".concat(e,\" \").concat(t.join(\" \"),\"\\r\\n\"))});var a=[];$(r).find('source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(){var e=$(this).attr(\"ssrc\");a.push(e)}),t.media.forEach(function(e,t){d.a.findLine(e,\"a=mid:\".concat(i))&&(n[t]||(n[t]=\"\"),a.forEach(function(r){var i=d.a.findLines(e,\"a=ssrc:\".concat(r));i.length&&(n[t]+=\"\".concat(i.join(\"\\r\\n\"),\"\\r\\n\"))}),n[t]+=o)})}),n}},{key:\"_verifyNoSSRCChanged\",value:function(e,t){var n=new u.a(this.peerconnection.localDescription.sdp),r=new l.a(t,n),i=r.getNewMedia();if(Object.keys(i).length)return w.error(\"\".concat(this,\" - some SSRC were added on \").concat(e),i),!1;var o=(r=new l.a(n,t)).getNewMedia();return!Object.keys(o).length||(w.error(\"\".concat(this,\" - some SSRCs were removed on \").concat(e),o),!1)}},{key:\"addTrackAsUnmute\",value:function(e){return this._addRemoveTrackAsMuteUnmute(!1,e)}},{key:\"removeTrackAsMute\",value:function(e){return this._addRemoveTrackAsMuteUnmute(!0,e)}},{key:\"_addRemoveTrackAsMuteUnmute\",value:function(e,t){var n=this;if(!t)return Promise.reject('invalid \"track\" argument value');var r=e?\"removeTrackMute\":\"addTrackUnmute\",i=function(i){var o=n.peerconnection;if(o){var a=o.localDescription.sdp;(e?o.removeTrackMute.bind(o,t):o.addTrackUnmute.bind(o,t))()?a&&o.remoteDescription.sdp?n._renegotiate().then(function(){n._verifyNoSSRCChanged(r,new u.a(a)),i()},i):i():i(\"\".concat(r,\" failed!\"))}else i(\"Error:  tried \".concat(r,\" track with no active peer\")+\"connection\")};return new Promise(function(e,t){n.modificationQueue.push(i,function(n){n?t(n):e()})})}},{key:\"setMediaTransferActive\",value:function(e,t){var n=this;if(!this.peerconnection)return Promise.reject('Can not modify transfer active state, before \"initialize\" is called');var r=e?\"audio active\":\"audio inactive\",i=t?\"video active\":\"video inactive\";w.info(\"Queued make \".concat(i,\", \").concat(r,\" task...\"));var o=function(r){var i=n.state===c.a,o=n.peerconnection.setAudioTransferActive(e);n._localVideoActive!==t&&(n._localVideoActive=t,n.isP2P&&i&&n.sendContentModify(t));var a=n.peerconnection.setVideoTransferActive(n._localVideoActive&&n._remoteVideoActive);i&&(o||a)?n._renegotiate().then(r,r):r()};return new Promise(function(e,t){n.modificationQueue.push(o,function(n){n?t(n):e()})})}},{key:\"modifyContents\",value:function(e){var n=this,r=t.parseVideoSenders(e);if(null!==r){w.debug(\"\".concat(this,' queued \"content-modify\" task')+'(video senders=\"'.concat(r,'\")')),this.modificationQueue.push(function(e){n._assertNotEnded(\"content-modify\")&&n._modifyRemoteVideoActive(r)?n._renegotiate().then(e,e):e()},function(e){e&&w.error('\"content-modify\" failed',e)})}else w.error(\"\".concat(this,' - failed to parse video \"senders\" attribute in')+'\"content-modify\" action')}},{key:\"_modifyRemoteVideoActive\",value:function(e){var t=\"both\"===e||\"initiator\"===e&&this.isInitiator||\"responder\"===e&&!this.isInitiator;return t!==this._remoteVideoActive&&(w.debug(\"\".concat(this,\" new remote video active: \").concat(t)),this._remoteVideoActive=t),this.peerconnection.setVideoTransferActive(this._localVideoActive&&this._remoteVideoActive)}},{key:\"notifyMySSRCUpdate\",value:function(e,t){if(this.state===c.a){var n=new l.a(t,e),r=Object(o.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"source-remove\",initiator:this.initiatorJid,sid:this.sid});n.toJingle(r)?(w.info(\"Sending source-remove\",r.tree()),this.connection.sendIQ(r,null,this.newJingleErrorHandler(r),1e4)):w.log(\"removal not necessary\"),n=new l.a(e,t);var i=Object(o.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"source-add\",initiator:this.initiatorJid,sid:this.sid});n.toJingle(i)?(w.info(\"Sending source-add\",i.tree()),this.connection.sendIQ(i,null,this.newJingleErrorHandler(i),1e4)):w.log(\"addition not necessary\")}else w.warn(\"Skipping SSRC update in '\".concat(this.state,\" ' state.\"))}},{key:\"newJingleErrorHandler\",value:function(e,t){var n=this;return function(e){var r={},i=$(e).find(\"error\");if(i.length){r.code=i.attr(\"code\");var o=$(e).find(\"error :first\");o.length&&(r.reason=o[0].tagName);var a=i.find(\">text\");a.length&&(r.msg=a.text())}e||(r.reason=\"timeout\"),r.session=n.toString(),t?t(r):n.state===c.b&&\"item-not-found\"===r.reason?w.debug(\"Jingle error: \".concat(JSON.stringify(r))):S.a.callErrorHandler(new Error(\"Jingle error: \".concat(JSON.stringify(r))))}}},{key:\"getIceConnectionState\",value:function(){return this.peerconnection.iceConnectionState}},{key:\"close\",value:function(){var e=this;this.state=c.b,this.establishmentDuration=void 0,this.peerconnection.onicecandidate=null,this.peerconnection.oniceconnectionstatechange=null,this.peerconnection.onnegotiationneeded=null,this.peerconnection.onsignalingstatechange=null,this.modificationQueue.clear(),this.modificationQueue.push(function(t){e.signalingLayer.setChatRoom(null),e.peerconnection&&e.peerconnection.close(),t()}),this.modificationQueue.shutdown()}},{key:\"toString\",value:function(){return\"JingleSessionPC[p2p=\".concat(this.isP2P,\",\")+\"initiator=\".concat(this.isInitiator,\",sid=\").concat(this.sid,\"]\")}},{key:\"_abtestSuspendVideoEnabled\",value:function(e){var t=e.abTesting;if(t&&t.enableSuspendVideoTest){var n=this._getInitiatorJid();return Object(a.integerHash)(n)%2==0}}}]),t}()}).call(this,\"modules\\\\xmpp\\\\JingleSessionPC.js\")},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"DEVICE_LIST_CHANGED\",function(){return r}),n.d(t,\"PERMISSION_PROMPT_IS_SHOWN\",function(){return i});var r=\"mediaDevices.devicechange\",i=\"mediaDevices.permissionPromptIsShown\"},function(e,t,n){var r;r=function(){var e=!0;function t(t){function n(e){var n=t.match(e);return n&&n.length>1&&n[1]||\"\"}function r(e){var n=t.match(e);return n&&n.length>1&&n[2]||\"\"}var i,o=n(/(ipod|iphone|ipad)/i).toLowerCase(),a=!/like android/i.test(t)&&/android/i.test(t),s=/nexus\\s*[0-6]\\s*/i.test(t),c=!s&&/nexus\\s*[0-9]+/i.test(t),u=/CrOS/.test(t),l=/silk/i.test(t),d=/sailfish/i.test(t),p=/tizen/i.test(t),h=/(web|hpw)os/i.test(t),f=/windows phone/i.test(t),m=(/SamsungBrowser/i.test(t),!f&&/windows/i.test(t)),v=!o&&!l&&/macintosh/i.test(t),y=!a&&!d&&!p&&!h&&/linux/i.test(t),g=r(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i),_=n(/version\\/(\\d+(\\.\\d+)?)/i),S=/tablet/i.test(t)&&!/tablet pc/i.test(t),b=!S&&/[^-]mobi/i.test(t),E=/xbox/i.test(t);/opera/i.test(t)?i={name:\"Opera\",opera:e,version:_||n(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/opr\\/|opios/i.test(t)?i={name:\"Opera\",opera:e,version:n(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)||_}:/SamsungBrowser/i.test(t)?i={name:\"Samsung Internet for Android\",samsungBrowser:e,version:_||n(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/coast/i.test(t)?i={name:\"Opera Coast\",coast:e,version:_||n(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/yabrowser/i.test(t)?i={name:\"Yandex Browser\",yandexbrowser:e,version:_||n(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/ucbrowser/i.test(t)?i={name:\"UC Browser\",ucbrowser:e,version:n(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/mxios/i.test(t)?i={name:\"Maxthon\",maxthon:e,version:n(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/epiphany/i.test(t)?i={name:\"Epiphany\",epiphany:e,version:n(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/puffin/i.test(t)?i={name:\"Puffin\",puffin:e,version:n(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)}:/sleipnir/i.test(t)?i={name:\"Sleipnir\",sleipnir:e,version:n(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/k-meleon/i.test(t)?i={name:\"K-Meleon\",kMeleon:e,version:n(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:f?(i={name:\"Windows Phone\",osname:\"Windows Phone\",windowsphone:e},g?(i.msedge=e,i.version=g):(i.msie=e,i.version=n(/iemobile\\/(\\d+(\\.\\d+)?)/i))):/msie|trident/i.test(t)?i={name:\"Internet Explorer\",msie:e,version:n(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)}:u?i={name:\"Chrome\",osname:\"Chrome OS\",chromeos:e,chromeBook:e,chrome:e,version:n(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)}:/edg([ea]|ios)/i.test(t)?i={name:\"Microsoft Edge\",msedge:e,version:g}:/vivaldi/i.test(t)?i={name:\"Vivaldi\",vivaldi:e,version:n(/vivaldi\\/(\\d+(\\.\\d+)?)/i)||_}:d?i={name:\"Sailfish\",osname:\"Sailfish OS\",sailfish:e,version:n(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)}:/seamonkey\\//i.test(t)?i={name:\"SeaMonkey\",seamonkey:e,version:n(/seamonkey\\/(\\d+(\\.\\d+)?)/i)}:/firefox|iceweasel|fxios/i.test(t)?(i={name:\"Firefox\",firefox:e,version:n(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)},/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(t)&&(i.firefoxos=e,i.osname=\"Firefox OS\")):l?i={name:\"Amazon Silk\",silk:e,version:n(/silk\\/(\\d+(\\.\\d+)?)/i)}:/phantom/i.test(t)?i={name:\"PhantomJS\",phantom:e,version:n(/phantomjs\\/(\\d+(\\.\\d+)?)/i)}:/slimerjs/i.test(t)?i={name:\"SlimerJS\",slimer:e,version:n(/slimerjs\\/(\\d+(\\.\\d+)?)/i)}:/blackberry|\\bbb\\d+/i.test(t)||/rim\\stablet/i.test(t)?i={name:\"BlackBerry\",osname:\"BlackBerry OS\",blackberry:e,version:_||n(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)}:h?(i={name:\"WebOS\",osname:\"WebOS\",webos:e,version:_||n(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)},/touchpad\\//i.test(t)&&(i.touchpad=e)):/bada/i.test(t)?i={name:\"Bada\",osname:\"Bada\",bada:e,version:n(/dolfin\\/(\\d+(\\.\\d+)?)/i)}:p?i={name:\"Tizen\",osname:\"Tizen\",tizen:e,version:n(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i)||_}:/qupzilla/i.test(t)?i={name:\"QupZilla\",qupzilla:e,version:n(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i)||_}:/chromium/i.test(t)?i={name:\"Chromium\",chromium:e,version:n(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i)||_}:/chrome|crios|crmo/i.test(t)?i={name:\"Chrome\",chrome:e,version:n(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)}:a?i={name:\"Android\",version:_}:/safari|applewebkit/i.test(t)?(i={name:\"Safari\",safari:e},_&&(i.version=_)):o?(i={name:\"iphone\"==o?\"iPhone\":\"ipad\"==o?\"iPad\":\"iPod\"},_&&(i.version=_)):i=/googlebot/i.test(t)?{name:\"Googlebot\",googlebot:e,version:n(/googlebot\\/(\\d+(\\.\\d+))/i)||_}:{name:n(/^(.*)\\/(.*) /),version:r(/^(.*)\\/(.*) /)},!i.msedge&&/(apple)?webkit/i.test(t)?(/(apple)?webkit\\/537\\.36/i.test(t)?(i.name=i.name||\"Blink\",i.blink=e):(i.name=i.name||\"Webkit\",i.webkit=e),!i.version&&_&&(i.version=_)):!i.opera&&/gecko\\//i.test(t)&&(i.name=i.name||\"Gecko\",i.gecko=e,i.version=i.version||n(/gecko\\/(\\d+(\\.\\d+)?)/i)),i.windowsphone||!a&&!i.silk?!i.windowsphone&&o?(i[o]=e,i.ios=e,i.osname=\"iOS\"):v?(i.mac=e,i.osname=\"macOS\"):E?(i.xbox=e,i.osname=\"Xbox\"):m?(i.windows=e,i.osname=\"Windows\"):y&&(i.linux=e,i.osname=\"Linux\"):(i.android=e,i.osname=\"Android\");var T=\"\";i.windows?T=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}}(n(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i)):i.windowsphone?T=n(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i):i.mac?T=(T=n(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i)).replace(/[_\\s]/g,\".\"):o?T=(T=n(/os (\\d+([_\\s]\\d+)*) like mac os x/i)).replace(/[_\\s]/g,\".\"):a?T=n(/android[ \\/-](\\d+(\\.\\d+)*)/i):i.webos?T=n(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i):i.blackberry?T=n(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i):i.bada?T=n(/bada\\/(\\d+(\\.\\d+)*)/i):i.tizen&&(T=n(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i)),T&&(i.osversion=T);var C=!i.windows&&T.split(\".\")[0];return S||c||\"ipad\"==o||a&&(3==C||C>=4&&!b)||i.silk?i.tablet=e:(b||\"iphone\"==o||\"ipod\"==o||a||s||i.blackberry||i.webos||i.bada)&&(i.mobile=e),i.msedge||i.msie&&i.version>=10||i.yandexbrowser&&i.version>=15||i.vivaldi&&i.version>=1||i.chrome&&i.version>=20||i.samsungBrowser&&i.version>=4||i.firefox&&i.version>=20||i.safari&&i.version>=6||i.opera&&i.version>=10||i.ios&&i.osversion&&i.osversion.split(\".\")[0]>=6||i.blackberry&&i.version>=10.1||i.chromium&&i.version>=20?i.a=e:i.msie&&i.version<10||i.chrome&&i.version<20||i.firefox&&i.version<20||i.safari&&i.version<6||i.opera&&i.version<10||i.ios&&i.osversion&&i.osversion.split(\".\")[0]<6||i.chromium&&i.version<20?i.c=e:i.x=e,i}var n=t(\"undefined\"!=typeof navigator&&navigator.userAgent||\"\");function r(e){return e.split(\".\").length}function i(e,t){var n,r=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(n=0;n<e.length;n++)r.push(t(e[n]));return r}function o(e){for(var t=Math.max(r(e[0]),r(e[1])),n=i(e,function(e){var n=t-r(e);return i((e+=new Array(n+1).join(\".0\")).split(\".\"),function(e){return new Array(20-e.length).join(\"0\")+e}).reverse()});--t>=0;){if(n[0][t]>n[1][t])return 1;if(n[0][t]!==n[1][t])return-1;if(0===t)return 0}}function a(e,r,i){var a=n;\"string\"==typeof r&&(i=r,r=void 0),void 0===r&&(r=!1),i&&(a=t(i));var s=\"\"+a.version;for(var c in e)if(e.hasOwnProperty(c)&&a[c]){if(\"string\"!=typeof e[c])throw new Error(\"Browser version in the minVersion map should be a string: \"+c+\": \"+String(e));return o([s,e[c]])<0}return r}return n.test=function(e){for(var t=0;t<e.length;++t){var r=e[t];if(\"string\"==typeof r&&r in n)return!0}return!1},n.isUnsupportedBrowser=a,n.compareVersions=o,n.check=function(e,t,n){return!a(e,t,n)},n._detect=t,n.detect=t,n},e.exports?e.exports=r():n(122)(\"bowser\",r)},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return o});var r=n(6);function i(e,t){if(!t)return!1;if(e.length!==t.length)return!1;for(var n=0,r=e.length;n<r;n++)if(e[n]instanceof Array&&t[n]instanceof Array){if(!e[n].equals(t[n]))return!1}else if(e[n]!==t[n])return!1;return!0}function o(e,t){if(this.mySDP=e,this.otherSDP=t,!e)throw new Error('\"mySDP\" is undefined!');if(!t)throw new Error('\"otherSDP\" is undefined!')}o.prototype.getNewMedia=function(){var e=this.mySDP.getMediaSsrcMap(),t=this.otherSDP.getMediaSsrcMap(),n={};return Object.keys(t).forEach(function(r){var o=e[r],a=t[r];o||!a?(Object.keys(a.ssrcs).forEach(function(e){if(-1===Object.keys(o.ssrcs).indexOf(e))n[r]||(n[r]={mediaindex:a.mediaindex,mid:a.mid,ssrcs:{},ssrcGroups:[]}),n[r].ssrcs[e]=a.ssrcs[e];else if(a.ssrcs[e].lines&&o.ssrcs[e].lines){void 0!==o.ssrcs[e].lines.find(function(e){return-1!==e.indexOf(\"msid\")})!==(void 0!==a.ssrcs[e].lines.find(function(e){return-1!==e.indexOf(\"msid\")}))&&(n[r]||(n[r]={mediaindex:a.mediaindex,mid:a.mid,ssrcs:{},ssrcGroups:[]}),n[r].ssrcs[e]=a.ssrcs[e])}}),a.ssrcGroups.forEach(function(e){for(var t=!1,s=0;s<o.ssrcGroups.length;s++){var c=o.ssrcGroups[s];if(e.semantics===c.semantics&&i(e.ssrcs,c.ssrcs)){t=!0;break}}t||(n[r]||(n[r]={mediaindex:a.mediaindex,mid:a.mid,ssrcs:{},ssrcGroups:[]}),n[r].ssrcGroups.push(e))})):n[r]=a}),n},o.prototype.toJingle=function(e){var t=this.getNewMedia(),n=!1;return Object.keys(t).forEach(function(i){n=!0;var o=t[i];e.c(\"content\",{name:o.mid}),e.c(\"description\",{xmlns:\"urn:xmpp:jingle:apps:rtp:1\",media:o.mid}),Object.keys(o.ssrcs).forEach(function(t){var n=o.ssrcs[t];e.c(\"source\",{xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),e.attrs({ssrc:n.ssrc}),n.lines.forEach(function(t){var n=t.indexOf(\" \"),i=t.substr(n+1);if(e.c(\"parameter\"),-1===i.indexOf(\":\"))e.attrs({name:i});else{var o=i.split(\":\",2),a=o[0],s=r.a.filterSpecialChars(o[1]);e.attrs({name:a}),e.attrs({value:s})}e.up()}),e.up()}),o.ssrcGroups.forEach(function(t){t.ssrcs.length&&(e.c(\"ssrc-group\",{semantics:t.semantics,xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),t.ssrcs.forEach(function(t){e.c(\"source\",{ssrc:t}).up()}),e.up())}),e.up(),e.up()}),n}},function(e,t){var n,r,i=e.exports={};function o(){throw new Error(\"setTimeout has not been defined\")}function a(){throw new Error(\"clearTimeout has not been defined\")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n=\"function\"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{r=\"function\"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var c,u=[],l=!1,d=-1;function p(){l&&c&&(l=!1,c.length?u=c.concat(u):d=-1,u.length&&h())}function h(){if(!l){var e=s(p);l=!0;for(var t=u.length;t;){for(c=u,u=[];++d<t;)c&&c[d].run();d=-1,t=u.length}c=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}i.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new f(e,t)),1!==u.length||l||s(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},i.title=\"browser\",i.browser=!0,i.env={},i.argv=[],i.version=\"\",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(e){return[]},i.binding=function(e){throw new Error(\"process.binding is not supported\")},i.cwd=function(){return\"/\"},i.chdir=function(e){throw new Error(\"process.chdir is not supported\")},i.umask=function(){return 0}},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"E2E_RTT_CHANGED\",function(){return r});var r=\"e2eping.e2e_rtt_changed\"},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return i});window.AudioContext=window.AudioContext||window.webkitAudioContext;var r=null;function i(e,t,n){this.stream=e,this.intervalId=null,this.intervalMilis=t,this.audioLevel=0,this.callback=n}window.AudioContext&&(r=new AudioContext).suspend&&r.suspend(),i.prototype.start=function(){if(i.isLocalStatsSupported()){r.resume();var e=r.createAnalyser();e.smoothingTimeConstant=.8,e.fftSize=2048,r.createMediaStreamSource(this.stream).connect(e);var t=this;this.intervalId=setInterval(function(){var n=new Uint8Array(e.frequencyBinCount);e.getByteTimeDomainData(n);var r,i,o,a,s=function(e){for(var t=0,n=e.length,r=0;r<n;r++)t<e[r]&&(t=e[r]);return parseFloat(((t-127)/128).toFixed(3))}(n);s!==t.audioLevel&&(t.audioLevel=(r=s,i=t.audioLevel,o=0,o=(a=i-r)>.2?i-.2:a<-.4?i+.4:r,parseFloat(o.toFixed(3))),t.callback(t.audioLevel))},this.intervalMilis)}},i.prototype.stop=function(){this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)},i.isLocalStatsSupported=function(){return Boolean(r)}},function(e,t,n){var r=n(124),i={loadScript:function(e,t,n,i,o,a){var s=document,c=s.createElement(\"script\"),u=s.getElementsByTagName(\"script\")[0];if(c.async=t,i){var l=r();if(l){var d=l.src,p=d.substring(0,d.lastIndexOf(\"/\")+1);d&&p&&(e=p+e)}}o&&(c.onload=o),a&&(c.onerror=a),c.src=e,n?u.parentNode.insertBefore(c,u):u.parentNode.appendChild(c)}};e.exports=i},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"ON\",function(){return r}),n.d(t,\"OFF\",function(){return i});var r=\"on\",i=\"off\"},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return y});var r=n(29),i=n.n(r),o=n(4),a=n(16),s=n(9),c=n(10);function u(e){return(u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t){return!t||\"object\"!==u(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=Object(o.getLogger)(e),m={track_mute:\"onmute\",track_unmute:\"onunmute\",track_ended:\"onended\"};function v(e,t){e.oninactive=t}var y=function(e){function t(e,n,r,i,o,a){var s;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(s=d(this,p(t).call(this))).addEventListener=s.addListener,s.removeEventListener=s.off=s.removeListener,s.containers=[],s.conference=e,s.audioLevel=-1,s.type=o,s.track=r,s.videoType=a,s.handlers=new Map,s.disposed=!1,s._streamInactiveHandler=i,s._setStream(n),s}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(t,i.a),n=t,(r=[{key:\"_setHandler\",value:function(e,t){if(m.hasOwnProperty(e)){if(t?this.handlers.set(e,t):this.handlers.delete(e),this.stream){var n=!0,r=!1,i=void 0;try{for(var o,a=this.stream.getTracks()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){o.value[m[e]]=t}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}}}else f.error(\"Invalid handler type \".concat(e))}},{key:\"_unregisterHandlers\",value:function(){if(this.stream){var e=!0,t=!1,n=void 0;try{for(var r,i=this.handlers.keys()[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var o=r.value,a=!0,s=!1,c=void 0;try{for(var u,l=this.stream.getVideoTracks()[Symbol.iterator]();!(a=(u=l.next()).done);a=!0){u.value[m[o]]=void 0}}catch(e){s=!0,c=e}finally{try{a||null==l.return||l.return()}finally{if(s)throw c}}}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}this._streamInactiveHandler&&v(this.stream,void 0)}else f.warn(\"\".concat(this,\": unable to unregister handlers - no stream object\"))}},{key:\"_setStream\",value:function(e){if(this.stream!==e&&(this.stream=e,this.stream)){var t=!0,n=!1,r=void 0;try{for(var i,o=this.handlers.keys()[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;this._setHandler(a,this.handlers.get(a))}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}this._streamInactiveHandler&&v(this.stream,this._streamInactiveHandler)}}},{key:\"getType\",value:function(){return this.type}},{key:\"isAudioTrack\",value:function(){return this.getType()===s.a}},{key:\"isWebRTCTrackMuted\",value:function(){return this.track&&this.track.muted}},{key:\"isVideoTrack\",value:function(){return this.getType()===s.b}},{key:\"isLocal\",value:function(){throw new Error(\"Not implemented by subclass\")}},{key:\"getOriginalStream\",value:function(){return this.stream}},{key:\"getStreamId\",value:function(){return this.stream?this.stream.id:null}},{key:\"getTrack\",value:function(){return this.track}},{key:\"getTrackId\",value:function(){return this.track?this.track.id:null}},{key:\"getUsageLabel\",value:function(){return this.isAudioTrack()?\"mic\":this.videoType?this.videoType:\"default\"}},{key:\"_maybeFireTrackAttached\",value:function(e){this.conference&&e&&this.conference._onTrackAttach(this,e)}},{key:\"attach\",value:function(e){this.stream&&(this._onTrackAttach(e),c.a.attachMediaStream(e,this.stream)),this.containers.push(e),this._maybeFireTrackAttached(e),this._attachTTFMTracker(e)}},{key:\"detach\",value:function(e){for(var t=this.containers,n=t.length-1;n>=0;--n){var r=t[n];e||(this._onTrackDetach(r),c.a.attachMediaStream(r,null)),e&&r!==e||t.splice(n,1)}e&&(this._onTrackDetach(e),c.a.attachMediaStream(e,null))}},{key:\"_onTrackAttach\",value:function(e){}},{key:\"_onTrackDetach\",value:function(e){}},{key:\"_attachTTFMTracker\",value:function(e){}},{key:\"dispose\",value:function(){return this.removeAllListeners(),this.disposed=!0,Promise.resolve()}},{key:\"isScreenSharing\",value:function(){}},{key:\"getId\",value:function(){return this.stream?c.a.getStreamID(this.stream):null}},{key:\"isActive\",value:function(){return void 0===this.stream.active||this.stream.active}},{key:\"setAudioLevel\",value:function(e,t){this.audioLevel!==e&&(this.audioLevel=e,this.emit(a.TRACK_AUDIO_LEVEL_CHANGED,e,t))}},{key:\"getMSID\",value:function(){var e=this.getStreamId(),t=this.getTrackId();return e&&t?\"\".concat(e,\" \").concat(t):null}},{key:\"setAudioOutput\",value:function(e){var t=this;return c.a.isDeviceChangeAvailable(\"output\")?this.isVideoTrack()?Promise.resolve():Promise.all(this.containers.map(function(t){return t.setSinkId(e).catch(function(e){throw f.warn(\"Failed to change audio output device on element. Default or previously set audio output device will be used.\",t,e),e})})).then(function(){t.emit(a.TRACK_AUDIO_OUTPUT_CHANGED,e)}):Promise.reject(new Error(\"Audio output device change is not supported\"))}}])&&l(n.prototype,r),o&&l(n,o),t}()}).call(this,\"modules\\\\RTC\\\\JitsiTrack.js\")},function(e,t,n){\"use strict\";function r(e){var t=e;return e>=Number.MAX_SAFE_INTEGER&&(t=0),t+1}n.d(t,\"a\",function(){return r})},function(e,t){function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._userId=t,this.setDisplayName(n),this._isLocalStats=r||!1,this.setDominantSpeaker(!1),this.totalDominantSpeakerTime=0,this._dominantSpeakerStart=0,this._hasLeft=!1}var t,r,i;return t=e,(r=[{key:\"getUserId\",value:function(){return this._userId}},{key:\"getDisplayName\",value:function(){return this.displayName}},{key:\"setDisplayName\",value:function(e){this.displayName=e}},{key:\"isLocalStats\",value:function(){return this._isLocalStats}},{key:\"isDominantSpeaker\",value:function(){return this._dominantSpeakerStart>0}},{key:\"setDominantSpeaker\",value:function(e){if(!this.isDominantSpeaker()&&e)this._dominantSpeakerStart=Date.now();else if(this.isDominantSpeaker()&&!e){var t=Date.now()-this._dominantSpeakerStart;this.totalDominantSpeakerTime+=t,this._dominantSpeakerStart=0}}},{key:\"getTotalDominantSpeakerTime\",value:function(){var e=this.totalDominantSpeakerTime;return this.isDominantSpeaker()&&(e+=Date.now()-this._dominantSpeakerStart),e}},{key:\"hasLeft\",value:function(){return this._hasLeft}},{key:\"markAsHasLeft\",value:function(){this._hasLeft=!0,this.setDominantSpeaker(!1)}}])&&n(t.prototype,r),i&&n(t,i),e}();e.exports=r},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,\"loaded\",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,\"id\",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){e.exports={IDENTITY_UPDATED:\"authentication.identity_updated\"}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return A});var r=n(4),i=n(53),o=n(15),a=n(12),s=n(16),c=n(3),u=n(10),l=n(39),d=n.n(l),p=n(9),h=n(7),f=n.n(h),m=n(14),v=n.n(m),y=n(8),g=n(5);function _(e){return(_=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return(b=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function T(e,t){return(T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function C(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}var R=Object(r.getLogger)(e),A=function(e){function t(e){var n,r,i,o=e.deviceId,a=e.facingMode,l=e.mediaType,d=e.resolution,p=e.rtcId,h=e.sourceId,m=e.sourceType,v=e.stream,y=e.track,g=e.videoType,S=e.effects,b=void 0===S?[]:S;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),r=this,i=E(t).call(this,null,v,y,function(){return n.emit(s.LOCAL_TRACK_STOPPED)},l,g),(n=!i||\"object\"!==_(i)&&\"function\"!=typeof i?C(r):i)._setEffectInProgress=!1;var T=b.find(function(e){return e.isEnabled(C(C(n)))});return T&&n._startStreamEffect(T),n.rtcId=p,n.sourceId=h,n.sourceType=m,c.a.usesNewGumFlow()?(n.resolution=y.getSettings().height,n._constraints=y.getConstraints()):n.resolution=c.a.isFirefox()?null:d,n.deviceId=o,n._prevSetMuted=Promise.resolve(),n._facingMode=a,n._trackEnded=!1,n._hasSentData=!1,n._testDataSent=!0,n._realDeviceId=\"\"===n.deviceId?void 0:n.deviceId,n._trackMutedTS=0,n._onDeviceListWillChange=function(e){var t=n._realDeviceId;n._setRealDeviceIdFromDeviceList(e),(void 0===n.getTrack().readyState&&void 0!==n._realDeviceId&&!e.find(function(e){return e.deviceId===n._realDeviceId})||void 0!==t&&void 0===n._realDeviceId)&&(n._trackEnded=!0)},n.isAudioTrack()&&u.a.isDeviceChangeAvailable(\"output\")&&(n._onAudioOutputDeviceChanged=n.setAudioOutput.bind(C(C(n))),u.a.addListener(f.a.AUDIO_OUTPUT_DEVICE_CHANGED,n._onAudioOutputDeviceChanged)),u.a.addListener(f.a.DEVICE_LIST_WILL_CHANGE,n._onDeviceListWillChange),n._initNoDataFromSourceHandlers(),n}var n,r,l;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&T(e,t)}(t,i[\"a\"]),n=t,(r=[{key:\"isEnded\",value:function(){return this.isVideoTrack()&&this.isMuted()?this._trackEnded:\"ended\"===this.getTrack().readyState||this._trackEnded}},{key:\"_initNoDataFromSourceHandlers\",value:function(){var e=this;this._isNoDataFromSourceEventsEnabled()&&(this._setHandler(\"track_mute\",function(){e._trackMutedTS=window.performance.now(),e._fireNoDataFromSourceEvent()}),this._setHandler(\"track_unmute\",function(){e._fireNoDataFromSourceEvent(),g.a.sendAnalyticsAndLog(y.r,{media_type:e.getType(),track_type:\"local\",value:window.performance.now()-e._trackMutedTS})}),this.isVideoTrack()&&this.videoType===v.a.CAMERA&&this._setHandler(\"track_ended\",function(){e.isReceivingData()||e._fireNoDataFromSourceEvent()}))}},{key:\"_isNoDataFromSourceEventsEnabled\",value:function(){return!this.isVideoTrack()||this.videoType!==v.a.DESKTOP}},{key:\"_fireNoDataFromSourceEvent\",value:function(){var e=!this.isReceivingData();this.emit(s.NO_DATA_FROM_SOURCE,e),g.a.sendAnalytics(Object(y.F)(this.getType(),e)),g.a.sendLog(JSON.stringify({name:s.NO_DATA_FROM_SOURCE,log:e}))}},{key:\"_setRealDeviceIdFromDeviceList\",value:function(e){var t=this.getTrack(),n=\"\".concat(t.kind,\"input\"),r=e.find(function(e){return e.kind===n&&e.label===t.label});if(!r&&\"default\"===this._realDeviceId){var i=(t.label||\"\").replace(\"Default - \",\"\");r=e.find(function(e){return e.kind===n&&e.label===i})}this._realDeviceId=r?r.deviceId:void 0}},{key:\"_setStream\",value:function(e){b(E(t.prototype),\"_setStream\",this).call(this,e),e?(this.storedMSID=this.getMSID(),R.debug(\"Setting new MSID: \".concat(this.storedMSID,\" on \").concat(this))):R.debug(\"Setting 'null' stream on \".concat(this))}},{key:\"_startStreamEffect\",value:function(e){this._streamEffect=e,this._originalStream=this.stream,this._setStream(this._streamEffect.startEffect(this._originalStream))}},{key:\"_stopStreamEffect\",value:function(){this._streamEffect&&(this._streamEffect.stopEffect(),this._setStream(this._originalStream),this._originalStream=void 0)}},{key:\"_switchStreamEffect\",value:function(e){this._streamEffect&&(this._stopStreamEffect(),this._streamEffect=void 0),e&&this._startStreamEffect(e)}},{key:\"setEffect\",value:function(e){var t=this;if(void 0===this._streamEffect&&void 0===e)return Promise.resolve();if(void 0!==e&&!e.isEnabled(this))return Promise.reject(new Error(\"Incompatible effect instance!\"));if(!0===this._setEffectInProgress)return Promise.reject(new Error(\"setEffect already in progress!\"));if(this.isMuted())return this._streamEffect=e,Promise.resolve();var n=this.conference;return n?(this._setEffectInProgress=!0,n.removeTrack(this).then(function(){return t._switchStreamEffect(e),t.isVideoTrack()&&t.containers.forEach(function(e){return u.a.attachMediaStream(e,t.stream)}),n.addTrack(t)}).then(function(){t._setEffectInProgress=!1}).catch(function(e){throw t._setEffectInProgress=!1,t._switchStreamEffect(),R.error(\"Failed to switch to the new stream!\",e),e})):(this._switchStreamEffect(e),Promise.resolve())}},{key:\"mute\",value:function(){return this._queueSetMuted(!0)}},{key:\"unmute\",value:function(){return this._queueSetMuted(!1)}},{key:\"_queueSetMuted\",value:function(e){var t=this._setMuted.bind(this,e);return this._prevSetMuted=this._prevSetMuted.then(t,t),this._prevSetMuted}},{key:\"_setMuted\",value:function(e){var t=this;if(this.isMuted()===e)return Promise.resolve();if(this.disposed)return Promise.reject(new o.a(a.TRACK_IS_DISPOSED));var n=Promise.resolve(),r=function(){return R.info(\"Mute \".concat(t,\": \").concat(e))};if(this.isAudioTrack()||this.videoType===v.a.DESKTOP||!c.a.doesVideoMuteByStreamRemove())r(),this.track&&(this.track.enabled=!e);else if(e)n=new Promise(function(e,n){r(),t._removeStreamFromConferenceAsMute(function(){t._streamEffect&&t._stopStreamEffect(),t._unregisterHandlers(),t.stopStream(),t._setStream(null),e()},n)});else{r();var i={cameraDeviceId:this.getDeviceId(),devices:[p.b],effects:this._streamEffect?[this._streamEffect]:[],facingMode:this.getCameraFacingMode()};c.a.usesNewGumFlow()?n=u.a.newObtainAudioAndVideoPermissions(Object.assign({},i,{constraints:{video:this._constraints}})):(this.resolution&&(i.resolution=this.resolution),n=u.a.obtainAudioAndVideoPermissions(i)),n.then(function(e){var n=t.getType(),r=c.a.usesNewGumFlow()?e.find(function(e){return e.track.kind===n}):e.find(function(e){return e.mediaType===n});if(!r)throw new o.a(a.TRACK_NO_STREAM_FOUND);return t._setStream(r.stream),t.track=r.track,t.videoType!==r.videoType&&(R.warn(\"\".concat(t,\": video type has changed after unmute!\"),t.videoType,r.videoType),t.videoType=r.videoType),t._streamEffect&&t._startStreamEffect(t._streamEffect),t.containers.map(function(e){return u.a.attachMediaStream(e,t.stream)}),t._addStreamToConferenceAsUnmute()})}return n.then(function(){return t._sendMuteStatus(e)}).then(function(){return t.emit(s.TRACK_MUTE_CHANGED,t)})}},{key:\"_addStreamToConferenceAsUnmute\",value:function(){var e=this;return this.conference?new Promise(function(t,n){e.conference._addLocalTrackAsUnmute(e).then(t,function(e){return n(new Error(e))})}):Promise.resolve()}},{key:\"_removeStreamFromConferenceAsMute\",value:function(e,t){this.conference?this.conference._removeLocalTrackAsMute(this).then(e,function(e){return t(new Error(e))}):e()}},{key:\"_sendMuteStatus\",value:function(e){var t=this;return this.conference&&this.conference.room?new Promise(function(n){t.conference.room[t.isAudioTrack()?\"setAudioMute\":\"setVideoMute\"](e,n)}):Promise.resolve()}},{key:\"dispose\",value:function(){var e=this;this._switchStreamEffect();var n=Promise.resolve();return this.conference&&(n=this.conference.removeTrack(this)),this.stream&&(this.stopStream(),this.detach()),u.a.removeListener(f.a.DEVICE_LIST_WILL_CHANGE,this._onDeviceListWillChange),this._onAudioOutputDeviceChanged&&u.a.removeListener(f.a.AUDIO_OUTPUT_DEVICE_CHANGED,this._onAudioOutputDeviceChanged),n.then(function(){return b(E(t.prototype),\"dispose\",e).call(e)})}},{key:\"isMuted\",value:function(){return!this.stream||(!(!this.isVideoTrack()||this.isActive())||(!this.track||!this.track.enabled))}},{key:\"_setConference\",value:function(e){this.conference=e;for(var t=0;t<this.containers.length;t++)this._maybeFireTrackAttached(this.containers[t])}},{key:\"isLocal\",value:function(){return!0}},{key:\"getDeviceId\",value:function(){return this._realDeviceId||this.deviceId}},{key:\"getParticipantId\",value:function(){return this.conference&&this.conference.myUserId()}},{key:\"_onByteSentStatsReceived\",value:function(e,t){var n=this;t>0&&(this._hasSentData=!0);var r=e.getConnectionState();this._testDataSent&&\"connected\"===r&&(setTimeout(function(){n._hasSentData||(R.warn(\"\".concat(n,\" 'bytes sent' <= 0:                         \").concat(t)),g.a.analytics.sendEvent(y.q,{media_type:n.getType()}))},3e3),this._testDataSent=!1)}},{key:\"getCameraFacingMode\",value:function(){if(this.isVideoTrack()&&this.videoType===v.a.CAMERA){var e;try{e=this.track.getSettings()}catch(e){}return e&&\"facingMode\"in e?e.facingMode:void 0!==this._facingMode?this._facingMode:d.a.USER}}},{key:\"stopStream\",value:function(){this._stopStreamInProgress=!0;try{u.a.stopMediaStream(this.stream)}finally{this._stopStreamInProgress=!1}}},{key:\"_switchCamera\",value:function(){this.isVideoTrack()&&this.videoType===v.a.CAMERA&&\"function\"==typeof this.track._switchCamera&&(this.track._switchCamera(),this._facingMode=this._facingMode===d.a.ENVIRONMENT?d.a.USER:d.a.ENVIRONMENT)}},{key:\"isReceivingData\",value:function(){return!(!this.isVideoTrack()||!this.isMuted()&&!this._stopStreamInProgress&&this.videoType!==v.a.DESKTOP)||!!this.stream&&(this._effectEnabled?this._originalStream:this.stream).getTracks().some(function(e){return!(\"readyState\"in e&&\"live\"!==e.readyState||\"muted\"in e&&!0===e.muted)})}},{key:\"toString\",value:function(){return\"LocalTrack[\".concat(this.rtcId,\",\").concat(this.getType(),\"]\")}}])&&S(n.prototype,r),l&&S(n,l),t}()}).call(this,\"modules\\\\RTC\\\\JitsiLocalTrack.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return a});var r=n(1),i=n(42);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._connection=t.connection,this._mode=t.mode,this._setSessionID(t.sessionID),this.setStatus(t.status)}var t,n,a;return t=e,(n=[{key:\"getError\",value:function(){return this._error}},{key:\"getID\",value:function(){return this._sessionID}},{key:\"getLiveStreamViewURL\",value:function(){return this._liveStreamViewURL}},{key:\"getStatus\",value:function(){return this._status}},{key:\"getMode\",value:function(){return this._mode}},{key:\"setError\",value:function(e){this._error=e}},{key:\"setLiveStreamViewURL\",value:function(e){this._liveStreamViewURL=e}},{key:\"setStatus\",value:function(e){this._status=e}},{key:\"start\",value:function(e){var t=this,n=e.appData,r=e.broadcastId,o=e.focusMucJid,a=e.streamId;return new Promise(function(e,s){t._connection.sendIQ(t._createIQ({action:\"start\",appData:n,focusMucJid:o,broadcastId:r,streamId:a}),function(n){t.setStatus(\"pending\"),t._setSessionID(i.a.getSessionIdFromIq(n)),e()},function(e){t._setErrorFromIq(e),s(e)})})}},{key:\"stop\",value:function(e){var t=this,n=e.focusMucJid;return new Promise(function(e,r){t._connection.sendIQ(t._createIQ({action:\"stop\",focusMucJid:n}),e,r)})}},{key:\"_createIQ\",value:function(e){var t=e.action,n=e.appData,i=e.broadcastId,o=e.focusMucJid,a=e.streamId;return Object(r.$iq)({to:o,type:\"set\"}).c(\"jibri\",{xmlns:\"http://jitsi.org/protocol/jibri\",action:t,app_data:n,recording_mode:this._mode,streamid:a,you_tube_broadcast_id:i}).up()}},{key:\"_setErrorFromIq\",value:function(e){var t=e.getElementsByTagName(\"error\")[0];this.setError(t.children[0].tagName)}},{key:\"_setSessionID\",value:function(e){this._sessionID=e}}])&&o(t.prototype,n),a&&o(t,a),e}()},function(e,t,n){\"use strict\";var r=n(29),i=n.n(r),o=n(9),a=n(3),s=n(13),c=n(7),u=n.n(c),l=n(5),d=n(45);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=\"camera\",m=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._eventEmitter=new i.a,this._grantedPermissions={},s.a.addListener(u.a.DEVICE_LIST_CHANGED,function(e){return t._eventEmitter.emit(d.DEVICE_LIST_CHANGED,e)}),s.a.addListener(u.a.DEVICE_LIST_AVAILABLE,function(e){return t._logOutputDevice(t.getAudioOutputDevice(),e)}),s.a.addListener(u.a.GRANTED_PERMISSIONS,function(e){return t._handleGrantedPermissions(e)}),this._permissionsApiSupported=new Promise(function(e){navigator.permissions?navigator.permissions.query({name:f}).then(function(){return e(!0)},function(){return e(!1)}):e(!1)})}var t,n,r;return t=e,(n=[{key:\"_handleGrantedPermissions\",value:function(e){this._grantedPermissions=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){p(e,t,n[t])})}return e}({},this._grantedPermissions,e)}},{key:\"_logOutputDevice\",value:function(e,t){var n=t.find(function(t){return\"audiooutput\"===t.kind&&t.deviceId===e});n&&l.a.sendActiveDeviceListEvent(s.a.getEventDataForActiveDevice(n))}},{key:\"enumerateDevices\",value:function(e){s.a.enumerateDevices(e)}},{key:\"isDeviceListAvailable\",value:function(){return s.a.isDeviceListAvailable()}},{key:\"isDeviceChangeAvailable\",value:function(e){return s.a.isDeviceChangeAvailable(e)}},{key:\"isDevicePermissionGranted\",value:function(e){var t=this;return new Promise(function(n){e in t._grantedPermissions?n(t._grantedPermissions[e]):t._permissionsApiSupported.then(function(t){if(t){var r=[];switch(e){case o.b:r.push(navigator.permissions.query({name:f}));break;case o.a:r.push(navigator.permissions.query({name:\"microphone\"}));break;default:r.push(navigator.permissions.query({name:f})),r.push(navigator.permissions.query({name:\"microphone\"}))}Promise.all(r).then(function(e){return n(e.every(function(e){return\"granted\"===(e.state||e.status)}))},function(){return n(!1)})}else n(!1)})})}},{key:\"isMultipleAudioInputSupported\",value:function(){return!a.a.isFirefox()}},{key:\"getAudioOutputDevice\",value:function(){return s.a.getAudioOutputDevice()}},{key:\"setAudioOutputDevice\",value:function(e){var t=s.a.getCurrentlyAvailableMediaDevices();return t&&t.length>0&&this._logOutputDevice(e,s.a.getCurrentlyAvailableMediaDevices()),s.a.setAudioOutputDevice(e)}},{key:\"addEventListener\",value:function(e,t){this._eventEmitter.addListener(e,t)}},{key:\"removeEventListener\",value:function(e,t){this._eventEmitter.removeListener(e,t)}},{key:\"emitEvent\",value:function(e){for(var t,n=arguments.length,r=new Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];(t=this._eventEmitter).emit.apply(t,[e].concat(r))}},{key:\"supportsVideo\",value:function(){return a.a.supportsVideo()}}])&&h(t.prototype,n),r&&h(t,r),e}();t.a=new m},function(e,t){var n={trace:0,debug:1,info:2,log:3,warn:4,error:5};a.consoleTransport=console;var r=[a.consoleTransport];a.addGlobalTransport=function(e){-1===r.indexOf(e)&&r.push(e)},a.removeGlobalTransport=function(e){var t=r.indexOf(e);-1!==t&&r.splice(t,1)};var i={};function o(){var e=arguments[0],t=arguments[1],o=Array.prototype.slice.call(arguments,2);if(!(n[t]<e.level))for(var a=!(e.options.disableCallerInfo||i.disableCallerInfo)&&function(){var e={methodName:\"\",fileLocation:\"\",line:null,column:null},t=new Error,n=t.stack?t.stack.split(\"\\n\"):[];if(!n||n.length<1)return e;var r=null;return n[3]&&(r=n[3].match(/\\s*at\\s*(.+?)\\s*\\((\\S*)\\s*:(\\d*)\\s*:(\\d*)\\)/)),!r||r.length<=4?(0===n[2].indexOf(\"log@\")?e.methodName=n[3].substr(0,n[3].indexOf(\"@\")):e.methodName=n[2].substr(0,n[2].indexOf(\"@\")),e):(e.methodName=r[1],e.fileLocation=r[2],e.line=r[3],e.column=r[4],e)}(),s=r.concat(e.transports),c=0;c<s.length;c++){var u=s[c],l=u[t];if(l&&\"function\"==typeof l){var d=[];e.id&&d.push(\"[\"+e.id+\"]\"),a&&a.methodName.length>1&&d.push(\"<\"+a.methodName+\">: \");var p=d.concat(o);l.bind(u).apply(u,p)}}}function a(e,t,r,i){this.id=t,this.options=i||{},this.transports=r,this.transports||(this.transports=[]),this.level=n[e];for(var a=Object.keys(n),s=0;s<a.length;s++)this[a[s]]=o.bind(null,this,a[s])}a.setGlobalOptions=function(e){i=e||{}},a.prototype.setLevel=function(e){this.level=n[e]},e.exports=a,a.levels={TRACE:\"trace\",DEBUG:\"debug\",INFO:\"info\",LOG:\"log\",WARN:\"warn\",ERROR:\"error\"}},function(e,t,n){\"use strict\";(function(e){function t(e){return(t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var n={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};n.localCName=n.generateIdentifier(),n.splitLines=function(e){return e.trim().split(\"\\n\").map(function(e){return e.trim()})},n.splitSections=function(e){return e.split(\"\\nm=\").map(function(e,t){return(t>0?\"m=\"+e:e).trim()+\"\\r\\n\"})},n.getDescription=function(e){var t=n.splitSections(e);return t&&t[0]},n.getMediaSections=function(e){var t=n.splitSections(e);return t.shift(),t},n.matchPrefix=function(e,t){return n.splitLines(e).filter(function(e){return 0===e.indexOf(t)})},n.parseCandidate=function(e){for(var t,n={foundation:(t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \"))[0],component:parseInt(t[1],10),protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],port:parseInt(t[5],10),type:t[7]},r=8;r<t.length;r+=2)switch(t[r]){case\"raddr\":n.relatedAddress=t[r+1];break;case\"rport\":n.relatedPort=parseInt(t[r+1],10);break;case\"tcptype\":n.tcpType=t[r+1];break;case\"ufrag\":n.ufrag=t[r+1],n.usernameFragment=t[r+1];break;default:n[t[r]]=t[r+1]}return n},n.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.ip),t.push(e.port);var n=e.type;return t.push(\"typ\"),t.push(n),\"host\"!==n&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),e.ufrag&&(t.push(\"ufrag\"),t.push(e.ufrag)),\"candidate:\"+t.join(\" \")},n.parseIceOptions=function(e){return e.substr(14).split(\" \")},n.parseRtpMap=function(e){var t=e.substr(9).split(\" \"),n={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),n.name=t[0],n.clockRate=parseInt(t[1],10),n.numChannels=3===t.length?parseInt(t[2],10):1,n},n.writeRtpMap=function(e){var t=e.payloadType;return void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType),\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==e.numChannels?\"/\"+e.numChannels:\"\")+\"\\r\\n\"},n.parseExtmap=function(e){var t=e.substr(9).split(\" \");return{id:parseInt(t[0],10),direction:t[0].indexOf(\"/\")>0?t[0].split(\"/\")[1]:\"sendrecv\",uri:t[1]}},n.writeExtmap=function(e){return\"a=extmap:\"+(e.id||e.preferredId)+(e.direction&&\"sendrecv\"!==e.direction?\"/\"+e.direction:\"\")+\" \"+e.uri+\"\\r\\n\"},n.parseFmtp=function(e){for(var t,n={},r=e.substr(e.indexOf(\" \")+1).split(\";\"),i=0;i<r.length;i++)n[(t=r[i].trim().split(\"=\"))[0].trim()]=t[1];return n},n.writeFmtp=function(e){var t=\"\",n=e.payloadType;if(void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var r=[];Object.keys(e.parameters).forEach(function(t){r.push(t+\"=\"+e.parameters[t])}),t+=\"a=fmtp:\"+n+\" \"+r.join(\";\")+\"\\r\\n\"}return t},n.parseRtcpFb=function(e){var t=e.substr(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},n.writeRtcpFb=function(e){var t=\"\",n=e.payloadType;return void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach(function(e){t+=\"a=rtcp-fb:\"+n+\" \"+e.type+(e.parameter&&e.parameter.length?\" \"+e.parameter:\"\")+\"\\r\\n\"}),t},n.parseSsrcMedia=function(e){var t=e.indexOf(\" \"),n={ssrc:parseInt(e.substr(7,t-7),10)},r=e.indexOf(\":\",t);return r>-1?(n.attribute=e.substr(t+1,r-t-1),n.value=e.substr(r+1)):n.attribute=e.substr(t+1),n},n.getMid=function(e){var t=n.matchPrefix(e,\"a=mid:\")[0];if(t)return t.substr(6)},n.parseFingerprint=function(e){var t=e.substr(14).split(\" \");return{algorithm:t[0].toLowerCase(),value:t[1]}},n.getDtlsParameters=function(e,t){return{role:\"auto\",fingerprints:n.matchPrefix(e+t,\"a=fingerprint:\").map(n.parseFingerprint)}},n.writeDtlsParameters=function(e,t){var n=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach(function(e){n+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"}),n},n.getIceParameters=function(e,t){var r=n.splitLines(e);return{usernameFragment:(r=r.concat(n.splitLines(t))).filter(function(e){return 0===e.indexOf(\"a=ice-ufrag:\")})[0].substr(12),password:r.filter(function(e){return 0===e.indexOf(\"a=ice-pwd:\")})[0].substr(10)}},n.writeIceParameters=function(e){return\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\"},n.parseRtpParameters=function(e){for(var t={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},r=n.splitLines(e)[0].split(\" \"),i=3;i<r.length;i++){var o=r[i],a=n.matchPrefix(e,\"a=rtpmap:\"+o+\" \")[0];if(a){var s=n.parseRtpMap(a),c=n.matchPrefix(e,\"a=fmtp:\"+o+\" \");switch(s.parameters=c.length?n.parseFmtp(c[0]):{},s.rtcpFeedback=n.matchPrefix(e,\"a=rtcp-fb:\"+o+\" \").map(n.parseRtcpFb),t.codecs.push(s),s.name.toUpperCase()){case\"RED\":case\"ULPFEC\":t.fecMechanisms.push(s.name.toUpperCase())}}}return n.matchPrefix(e,\"a=extmap:\").forEach(function(e){t.headerExtensions.push(n.parseExtmap(e))}),t},n.writeRtpDescription=function(e,t){var r=\"\";r+=\"m=\"+e+\" \",r+=t.codecs.length>0?\"9\":\"0\",r+=\" UDP/TLS/RTP/SAVPF \",r+=t.codecs.map(function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType}).join(\" \")+\"\\r\\n\",r+=\"c=IN IP4 0.0.0.0\\r\\n\",r+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",t.codecs.forEach(function(e){r+=n.writeRtpMap(e),r+=n.writeFmtp(e),r+=n.writeRtcpFb(e)});var i=0;return t.codecs.forEach(function(e){e.maxptime>i&&(i=e.maxptime)}),i>0&&(r+=\"a=maxptime:\"+i+\"\\r\\n\"),r+=\"a=rtcp-mux\\r\\n\",t.headerExtensions.forEach(function(e){r+=n.writeExtmap(e)}),r},n.parseRtpEncodingParameters=function(e){var t,r=[],i=n.parseRtpParameters(e),o=-1!==i.fecMechanisms.indexOf(\"RED\"),a=-1!==i.fecMechanisms.indexOf(\"ULPFEC\"),s=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute}),c=s.length>0&&s[0].ssrc,u=n.matchPrefix(e,\"a=ssrc-group:FID\").map(function(e){var t=e.split(\" \");return t.shift(),t.map(function(e){return parseInt(e,10)})});u.length>0&&u[0].length>1&&u[0][0]===c&&(t=u[0][1]),i.codecs.forEach(function(e){if(\"RTX\"===e.name.toUpperCase()&&e.parameters.apt){var n={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10),rtx:{ssrc:t}};r.push(n),o&&((n=JSON.parse(JSON.stringify(n))).fec={ssrc:t,mechanism:a?\"red+ulpfec\":\"red\"},r.push(n))}}),0===r.length&&c&&r.push({ssrc:c});var l=n.matchPrefix(e,\"b=\");return l.length&&(l=0===l[0].indexOf(\"b=TIAS:\")?parseInt(l[0].substr(7),10):0===l[0].indexOf(\"b=AS:\")?1e3*parseInt(l[0].substr(5),10)*.95-16e3:void 0,r.forEach(function(e){e.maxBitrate=l})),r},n.parseRtcpParameters=function(e){var t={},r=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute})[0];r&&(t.cname=r.value,t.ssrc=r.ssrc);var i=n.matchPrefix(e,\"a=rtcp-rsize\");t.reducedSize=i.length>0,t.compound=0===i.length;var o=n.matchPrefix(e,\"a=rtcp-mux\");return t.mux=o.length>0,t},n.parseMsid=function(e){var t,r=n.matchPrefix(e,\"a=msid:\");if(1===r.length)return{stream:(t=r[0].substr(7).split(\" \"))[0],track:t[1]};var i=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"msid\"===e.attribute});return i.length>0?{stream:(t=i[0].value.split(\" \"))[0],track:t[1]}:void 0},n.generateSessionId=function(){return Math.random().toString().substr(2,21)},n.writeSessionBoilerplate=function(e,t){var r=void 0!==t?t:2;return\"v=0\\r\\no=thisisadapterortc \"+(e||n.generateSessionId())+\" \"+r+\" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},n.writeMediaSection=function(e,t,r,i){var o=n.writeRtpDescription(e.kind,t);if(o+=n.writeIceParameters(e.iceGatherer.getLocalParameters()),o+=n.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===r?\"actpass\":\"active\"),o+=\"a=mid:\"+e.mid+\"\\r\\n\",e.direction?o+=\"a=\"+e.direction+\"\\r\\n\":e.rtpSender&&e.rtpReceiver?o+=\"a=sendrecv\\r\\n\":e.rtpSender?o+=\"a=sendonly\\r\\n\":e.rtpReceiver?o+=\"a=recvonly\\r\\n\":o+=\"a=inactive\\r\\n\",e.rtpSender){var a=\"msid:\"+i.id+\" \"+e.rtpSender.track.id+\"\\r\\n\";o+=\"a=\"+a,o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+a,e.sendEncodingParameters[0].rtx&&(o+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+a,o+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+n.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(o+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+n.localCName+\"\\r\\n\"),o},n.getDirection=function(e,t){for(var r=n.splitLines(e),i=0;i<r.length;i++)switch(r[i]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return r[i].substr(2)}return t?n.getDirection(t):\"sendrecv\"},n.getKind=function(e){return n.splitLines(e)[0].split(\" \")[0].substr(2)},n.isRejected=function(e){return\"0\"===e.split(\" \",2)[1]},n.parseMLine=function(e){var t=n.splitLines(e)[0].substr(2).split(\" \");return{kind:t[0],port:parseInt(t[1],10),protocol:t[2],fmt:t.slice(3).join(\" \")}},n.parseOLine=function(e){var t=n.matchPrefix(e,\"o=\")[0].substr(2).split(\" \");return{username:t[0],sessionId:t[1],sessionVersion:parseInt(t[2],10),netType:t[3],addressType:t[4],address:t[5]}},\"object\"===t(e)&&(e.exports=n)}).call(this,n(56)(e))},function(e,t){var n=e.exports={v:[{name:\"version\",reg:/^(\\d*)$/}],o:[{name:\"origin\",reg:/^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,names:[\"username\",\"sessionId\",\"sessionVersion\",\"netType\",\"ipVer\",\"address\"],format:\"%s %s %d %s IP%d %s\"}],s:[{name:\"name\"}],i:[{name:\"description\"}],u:[{name:\"uri\"}],e:[{name:\"email\"}],p:[{name:\"phone\"}],z:[{name:\"timezones\"}],r:[{name:\"repeats\"}],t:[{name:\"timing\",reg:/^(\\d*) (\\d*)/,names:[\"start\",\"stop\"],format:\"%d %d\"}],c:[{name:\"connection\",reg:/^IN IP(\\d) (\\S*)/,names:[\"version\",\"ip\"],format:\"IN IP%d %s\"}],b:[{push:\"bandwidth\",reg:/^(TIAS|AS|CT|RR|RS):(\\d*)/,names:[\"type\",\"limit\"],format:\"%s:%s\"}],m:[{reg:/^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,names:[\"type\",\"port\",\"protocol\",\"payloads\"],format:\"%s %d %s %s\"}],a:[{push:\"rtp\",reg:/^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,names:[\"payload\",\"codec\",\"rate\",\"encoding\"],format:function(e){return e.encoding?\"rtpmap:%d %s/%s/%s\":e.rate?\"rtpmap:%d %s/%s\":\"rtpmap:%d %s\"}},{push:\"fmtp\",reg:/^fmtp:(\\d*) ([\\S| ]*)/,names:[\"payload\",\"config\"],format:\"fmtp:%d %s\"},{name:\"control\",reg:/^control:(.*)/,format:\"control:%s\"},{name:\"rtcp\",reg:/^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,names:[\"port\",\"netType\",\"ipVer\",\"address\"],format:function(e){return null!=e.address?\"rtcp:%d %s IP%d %s\":\"rtcp:%d\"}},{push:\"rtcpFbTrrInt\",reg:/^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,names:[\"payload\",\"value\"],format:\"rtcp-fb:%d trr-int %d\"},{push:\"rtcpFb\",reg:/^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,names:[\"payload\",\"type\",\"subtype\"],format:function(e){return null!=e.subtype?\"rtcp-fb:%s %s %s\":\"rtcp-fb:%s %s\"}},{push:\"ext\",reg:/^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?/,names:[\"value\",\"direction\",\"uri\",\"config\"],format:function(e){return\"extmap:%d\"+(e.direction?\"/%s\":\"%v\")+\" %s\"+(e.config?\" %s\":\"\")}},{push:\"crypto\",reg:/^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,names:[\"id\",\"suite\",\"config\",\"sessionConfig\"],format:function(e){return null!=e.sessionConfig?\"crypto:%d %s %s %s\":\"crypto:%d %s %s\"}},{name:\"setup\",reg:/^setup:(\\w*)/,format:\"setup:%s\"},{name:\"mid\",reg:/^mid:([^\\s]*)/,format:\"mid:%s\"},{name:\"msid\",reg:/^msid:(.*)/,format:\"msid:%s\"},{name:\"ptime\",reg:/^ptime:(\\d*)/,format:\"ptime:%d\"},{name:\"maxptime\",reg:/^maxptime:(\\d*)/,format:\"maxptime:%d\"},{name:\"direction\",reg:/^(sendrecv|recvonly|sendonly|inactive)/},{name:\"icelite\",reg:/^(ice-lite)/},{name:\"iceUfrag\",reg:/^ice-ufrag:(\\S*)/,format:\"ice-ufrag:%s\"},{name:\"icePwd\",reg:/^ice-pwd:(\\S*)/,format:\"ice-pwd:%s\"},{name:\"fingerprint\",reg:/^fingerprint:(\\S*) (\\S*)/,names:[\"type\",\"hash\"],format:\"fingerprint:%s %s\"},{push:\"candidates\",reg:/^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,names:[\"foundation\",\"component\",\"transport\",\"priority\",\"ip\",\"port\",\"type\",\"raddr\",\"rport\",\"tcptype\",\"generation\",\"network-id\",\"network-cost\"],format:function(e){var t=\"candidate:%s %d %s %d %s %d typ %s\";return t+=null!=e.raddr?\" raddr %s rport %d\":\"%v%v\",t+=null!=e.tcptype?\" tcptype %s\":\"%v\",null!=e.generation&&(t+=\" generation %d\"),t+=null!=e[\"network-id\"]?\" network-id %d\":\"%v\",t+=null!=e[\"network-cost\"]?\" network-cost %d\":\"%v\"}},{name:\"endOfCandidates\",reg:/^(end-of-candidates)/},{name:\"remoteCandidates\",reg:/^remote-candidates:(.*)/,format:\"remote-candidates:%s\"},{name:\"iceOptions\",reg:/^ice-options:(\\S*)/,format:\"ice-options:%s\"},{push:\"ssrcs\",reg:/^ssrc:(\\d*) ([\\w_]*)(?::(.*))?/,names:[\"id\",\"attribute\",\"value\"],format:function(e){var t=\"ssrc:%d\";return null!=e.attribute&&(t+=\" %s\",null!=e.value&&(t+=\":%s\")),t}},{push:\"ssrcGroups\",reg:/^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,names:[\"semantics\",\"ssrcs\"],format:\"ssrc-group:%s %s\"},{name:\"msidSemantic\",reg:/^msid-semantic:\\s?(\\w*) (\\S*)/,names:[\"semantic\",\"token\"],format:\"msid-semantic: %s %s\"},{push:\"groups\",reg:/^group:(\\w*) (.*)/,names:[\"type\",\"mids\"],format:\"group:%s %s\"},{name:\"rtcpMux\",reg:/^(rtcp-mux)/},{name:\"rtcpRsize\",reg:/^(rtcp-rsize)/},{name:\"sctpmap\",reg:/^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,names:[\"sctpmapNumber\",\"app\",\"maxMessageSize\"],format:function(e){return null!=e.maxMessageSize?\"sctpmap:%s %s %s\":\"sctpmap:%s %s\"}},{name:\"xGoogleFlag\",reg:/^x-google-flag:([^\\s]*)/,format:\"x-google-flag:%s\"},{push:\"rids\",reg:/^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,names:[\"id\",\"direction\",\"params\"],format:function(e){return e.params?\"rid:%s %s %s\":\"rid:%s %s\"}},{push:\"imageattrs\",reg:new RegExp(\"^imageattr:(\\\\d+|\\\\*)[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?\"),names:[\"pt\",\"dir1\",\"attrs1\",\"dir2\",\"attrs2\"],format:function(e){return\"imageattr:%s %s %s\"+(e.dir2?\" %s %s\":\"\")}},{name:\"simulcast\",reg:new RegExp(\"^simulcast:(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?$\"),names:[\"dir1\",\"list1\",\"dir2\",\"list2\"],format:function(e){return\"simulcast:%s %s\"+(e.dir2?\" %s %s\":\"\")}},{name:\"simulcast_03\",reg:/^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,names:[\"value\"],format:\"simulcast: %s\"},{name:\"framerate\",reg:/^framerate:(\\d+(?:$|\\.\\d+))/,format:\"framerate:%s\"},{push:\"invalid\",names:[\"value\"]}]};Object.keys(n).forEach(function(e){n[e].forEach(function(e){e.reg||(e.reg=/(.*)/),e.format||(e.format=\"%s\")})})},function(e,t,n){var r=n(148),i=\"audio/webm\",o=\"audio/ogg\",a=function(e){this.track=e,this.recorder=null,this.data=null,this.name=null,this.startTime=null};function s(e){if(void 0===e.recorder)throw new Error(\"Passed an object to startRecorder which is not a TrackRecorder object\");e.recorder.start(),e.startTime=new Date}function c(e){if(void 0===e.recorder)throw new Error(\"Passed an object to stopRecorder which is not a TrackRecorder object\");e.recorder.stop()}function u(){if(MediaRecorder.isTypeSupported(i))return i;if(MediaRecorder.isTypeSupported(o))return o;throw new Error(\"unable to create a MediaRecorder with the right mimetype!\")}function l(e){this.recorders=[],this.fileType=u(),this.isRecording=!1,this.jitsiConference=e}l.determineCorrectFileType=u,l.prototype.addTrack=function(e){if(e.isAudioTrack()){var t=this.instantiateTrackRecorder(e);this.recorders.push(t),this.updateNames(),this.isRecording&&s(t)}},l.prototype.instantiateTrackRecorder=function(e){var t=new a(e),n=t.track.getOriginalStream(),r=function(){if(\"undefined\"!=typeof MediaStream)return new MediaStream;throw new Error(\"cannot create a clean mediaStream\")}();return n.getAudioTracks().forEach(function(e){return r.addTrack(e)}),t.recorder=new MediaRecorder(r,{mimeType:this.fileType}),t.data=[],t.recorder.ondataavailable=function(e){e.data.size>0&&t.data.push(e.data)},t},l.prototype.removeTrack=function(e){if(!e.isVideoTrack()){var t,n=this.recorders;for(t=0;t<n.length;t++)if(n[t].track.getParticipantId()===e.getParticipantId()){var r=n[t];this.isRecording?c(r):n.splice(t,1)}this.updateNames()}},l.prototype.updateNames=function(){var e=this.jitsiConference;this.recorders.forEach(function(t){if(t.track.isLocal())t.name=\"the transcriber\";else{var n=t.track.getParticipantId(),r=e.getParticipantById(n).getDisplayName();\"undefined\"!==r&&(t.name=r)}})},l.prototype.start=function(){if(this.isRecording)throw new Error(\"audiorecorder is already recording\");this.isRecording=!0,this.recorders.forEach(function(e){return s(e)}),console.log(\"Started the recording of the audio. There are currently \".concat(this.recorders.length,\" recorders active.\"))},l.prototype.stop=function(){this.isRecording=!1,this.recorders.forEach(function(e){return c(e)}),console.log(\"stopped recording\")},l.prototype.download=function(){var e=this;this.recorders.forEach(function(t){var n=new Blob(t.data,{type:e.fileType}),r=URL.createObjectURL(n),i=document.createElement(\"a\");document.body.appendChild(i),i.style=\"display: none\",i.href=r,i.download=\"test.\".concat(e.fileType.split(\"/\")[1]),i.click(),window.URL.revokeObjectURL(r)})},l.prototype.getRecordingResults=function(){var e=this;if(this.isRecording)throw new Error(\"cannot get blobs because the AudioRecorder is still recording!\");this.updateNames();var t=[];return this.recorders.forEach(function(n){return t.push(new r(new Blob(n.data,{type:e.fileType}),n.name,n.startTime))}),t},l.prototype.getFileType=function(){return this.fileType},e.exports=l},function(e,t){e.exports={getTokenAuthUrl:function(e,t,n){return\"string\"!=typeof e?null:e.replace(\"{room}\",t).replace(\"{roleUpgrade}\",!0===n)}}},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return c});var r=n(8),i=n(67),o=n(21),a=n(5),s=n(35);function c(e,t,n){this.appID=e,this.token=t,this.options=n,this.xmpp=new s.c(n,t),this.addEventListener(o.CONNECTION_FAILED,function(e,t,n,i){a.a.sendAnalyticsAndLog(Object(r.z)(e,t,i))}),this.addEventListener(o.CONNECTION_DISCONNECTED,function(e){e&&a.a.sendAnalytics(r.l,{message:e}),a.a.sendLog(JSON.stringify({id:r.l,msg:e}))})}c.prototype.connect=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.xmpp.connect(e.id,e.password)},c.prototype.attach=function(e){this.xmpp.attach(e)},c.prototype.disconnect=function(){var e;return(e=this.xmpp).disconnect.apply(e,arguments)},c.prototype.getJid=function(){return this.xmpp.getJid()},c.prototype.setToken=function(e){this.token=e},c.prototype.initJitsiConference=function(e,t){return new i.a({name:e,config:t,connection:this})},c.prototype.addEventListener=function(e,t){this.xmpp.addListener(e,t)},c.prototype.removeEventListener=function(e,t){this.xmpp.removeListener(e,t)},c.prototype.getConnectionTimes=function(){return this.xmpp.connectionTimes},c.prototype.addFeature=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.xmpp.caps.addFeature(e,t)},c.prototype.removeFeature=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.xmpp.caps.removeFeature(e,t)}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return ee});var r=n(1),i=n(29),o=n.n(i),a=n(4),s=n(68),c=n.n(s),u=n(17),l=n(69),d=n(2),p=n(76),h=n(15),f=n(12),m=n(16),v=n(77),y=n(94),g=n.n(y),_=n(95),S=n(13),b=n(102),E=n(3),T=n(103),C=n(104),R=n(41),A=n(105),w=n(106),k=n(107),O=n(108),I=n(109),P=n(110),D=n(111),N=n(5),L=n(112),M=n.n(L),x=n(11),j=n.n(x),F=n(33),U=n.n(F),H=n(113),J=n(114),G=n(20),B=n(35),V=n(9),q=n(7),K=n(14),W=n.n(K),z=n(8),X=n(0);function Q(e){return(Q=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function Y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Z=Object(a.getLogger)(e);function ee(e){if(!e.name||e.name.toLowerCase()!==e.name){var t=\"Invalid conference name (no conference name passed or it contains invalid characters like capital letters)!\";throw Z.error(t),new Error(t)}this.eventEmitter=new o.a,this.options=e,this.eventManager=new l.a(this),this.participants={},this._init(e),this.componentsVersions=new H.a(this),this.jvbJingleSession=null,this.lastDominantSpeaker=null,this.dtmfManager=null,this.somebodySupportsDTMF=!1,this.authEnabled=!1,this.startAudioMuted=!1,this.startVideoMuted=!1,this.startMutedPolicy={audio:!1,video:!1},this.isMutedByFocus=!1,this.mutedByFocusActor=null,this.wasStopped=!1,this.properties={},this.connectionQuality=new T.a(this,this.eventEmitter,e),this.avgRtpStatsReporter=new I.a(this,e.config.avgRtpStatsN||15),this._audioOutputProblemDetector=new P.a(this),this.isJvbConnectionInterrupted=!1,this.speakerStatsCollector=new D.a(this),this.deferredStartP2PTask=null;var n=parseInt(e.config.p2p&&e.config.p2p.backToP2PDelay,10);this.backToP2PDelay=isNaN(n)?5:n,Z.info(\"backToP2PDelay: \".concat(this.backToP2PDelay)),this.isP2PConnectionInterrupted=!1,this.p2p=!1,this.p2pJingleSession=null,this.videoSIPGWHandler=new J.a(this.room),this.recordingManager=new k.a(this.room)}ee.prototype.constructor=ee,ee.resourceCreator=function(e,t){var n;if(t)n=U.a.randomHexString(8).toLowerCase();else{n=r.Strophe.getNodeFromJid(e).substr(0,8).toLowerCase();/[0-9a-f]{8}/g.test(n)||(n=U.a.randomHexString(8).toLowerCase())}return n},ee.prototype._init=function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t.connection&&(this.connection=t.connection,this.xmpp=this.connection.xmpp,this.eventManager.setupXMPPListeners());var n=this.options.config;if(this.room=this.xmpp.createRoom(this.options.name,n,ee.resourceCreator),this._onIceConnectionInterrupted=this._onIceConnectionInterrupted.bind(this),this.room.addListener(X.CONNECTION_INTERRUPTED,this._onIceConnectionInterrupted),this._onIceConnectionRestored=this._onIceConnectionRestored.bind(this),this.room.addListener(X.CONNECTION_RESTORED,this._onIceConnectionRestored),this._onIceConnectionEstablished=this._onIceConnectionEstablished.bind(this),this.room.addListener(X.CONNECTION_ESTABLISHED,this._onIceConnectionEstablished),this._updateProperties=this._updateProperties.bind(this),this.room.addListener(X.CONFERENCE_PROPERTIES_CHANGED,this._updateProperties),this.rttMonitor=new O.a(n.rttMonitor||{}),this.e2eping=new A.a(this,n,function(t,n){try{e.sendMessage(t,n,!0)}catch(e){Z.warn(\"Failed to send a ping request or response.\")}}),this.rtc||(this.rtc=new S.a(this,t),this.eventManager.setupRTCListeners()),this.participantConnectionStatus=new R.b(this.rtc,this,{rtcMuteTimeout:n._peerConnStatusRtcMuteTimeout,outOfLastNTimeout:n._peerConnStatusOutOfLastNTimeout}),this.participantConnectionStatus.init(),!this.statistics){var r=this.myUserId();n.enableDisplayNameInStats&&n.displayName&&(r=n.displayName),this.statistics=new N.a(this.xmpp,{callStatsAliasName:r,callStatsConfIDNamespace:this.connection.options.hosts.domain,confID:n.confID||\"\".concat(this.connection.options.hosts.domain,\"/\").concat(this.options.name),customScriptUrl:n.callStatsCustomScriptUrl,callStatsID:n.callStatsID,callStatsSecret:n.callStatsSecret,roomName:this.options.name,swapUserNameAndAlias:n.enableStatsID,applicationName:n.applicationName,getWiFiStatsMethod:n.getWiFiStatsMethod})}this.eventManager.setupChatRoomListeners(),this.eventManager.setupStatisticsListeners(),n.enableTalkWhileMuted&&new b.a(this,function(){return e.eventEmitter.emit(d.TALK_WHILE_MUTED)}),\"channelLastN\"in n&&this.setLastN(n.channelLastN),this.jvb121Status=new w.a(this),this.p2pDominantSpeakerDetection=new _.a(this),n&&n.deploymentInfo&&n.deploymentInfo.userRegion&&this.setLocalParticipantProperty(\"region\",n.deploymentInfo.userRegion)},ee.prototype.join=function(e){var t=this;this.room&&this.room.join(e).then(function(){return t._maybeSetSITimeout()})},ee.prototype.authenticateAndUpgradeRole=function(e){return v.a.call(this,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){Y(e,t,n[t])})}return e}({},e,{onCreateResource:ee.resourceCreator}))},ee.prototype.isJoined=function(){return this.room&&this.room.joined},ee.prototype.isP2PEnabled=function(){return Boolean(this.options.config.p2p&&this.options.config.p2p.enabled)||void 0===this.options.config.p2p},ee.prototype.isP2PTestModeEnabled=function(){return Boolean(this.options.config.testing&&this.options.config.testing.p2pTestMode)},ee.prototype.leave=function(){var e=this;if(this.participantConnectionStatus&&(this.participantConnectionStatus.dispose(),this.participantConnectionStatus=null),this.avgRtpStatsReporter&&(this.avgRtpStatsReporter.dispose(),this.avgRtpStatsReporter=null),this._audioOutputProblemDetector&&(this._audioOutputProblemDetector.dispose(),this._audioOutputProblemDetector=null),this.rttMonitor&&(this.rttMonitor.stop(),this.rttMonitor=null),this.e2eping&&(this.e2eping.stop(),this.e2eping=null),this.getLocalTracks().forEach(function(t){return e.onLocalTrackRemoved(t)}),this.rtc.closeBridgeChannel(),this.statistics&&this.statistics.dispose(),this._delayedIceFailed&&this._delayedIceFailed.cancel(),this.jvbJingleSession&&(this.jvbJingleSession.close(),this.jvbJingleSession=null),this.p2pJingleSession&&(this.p2pJingleSession.close(),this.p2pJingleSession=null),this.room){var t=this.room;return t.removeListener(X.CONNECTION_INTERRUPTED,this._onIceConnectionInterrupted),t.removeListener(X.CONNECTION_RESTORED,this._onIceConnectionRestored),t.removeListener(X.CONNECTION_ESTABLISHED,this._onIceConnectionEstablished),t.removeListener(X.CONFERENCE_PROPERTIES_CHANGED,this._updateProperties),this.eventManager.removeXMPPListeners(),this.room=null,t.leave().then(function(){e.rtc&&e.rtc.destroy()}).catch(function(t){throw e.getParticipants().forEach(function(t){return e.onMemberLeft(t.getJid())}),t})}return Promise.reject(new Error(\"The conference is has been already left\"))},ee.prototype.getName=function(){return this.options.name},ee.prototype.getConnection=function(){return this.connection},ee.prototype.isAuthEnabled=function(){return this.authEnabled},ee.prototype.isLoggedIn=function(){return Boolean(this.authIdentity)},ee.prototype.getAuthLogin=function(){return this.authIdentity},ee.prototype.isExternalAuthEnabled=function(){return this.room&&this.room.moderator.isExternalAuthEnabled()},ee.prototype.getExternalAuthUrl=function(e){var t=this;return new Promise(function(n,r){t.isExternalAuthEnabled()?e?t.room.moderator.getPopupLoginUrl(n,r):t.room.moderator.getLoginUrl(n,r):r()})},ee.prototype.getLocalTracks=function(e){var t=[];return this.rtc&&(t=this.rtc.getLocalTracks(e)),t},ee.prototype.getLocalAudioTrack=function(){return this.rtc?this.rtc.getLocalAudioTrack():null},ee.prototype.getLocalVideoTrack=function(){return this.rtc?this.rtc.getLocalVideoTrack():null},ee.prototype.on=function(e,t){this.eventEmitter&&this.eventEmitter.on(e,t)},ee.prototype.off=function(e,t){this.eventEmitter&&this.eventEmitter.removeListener(e,t)},ee.prototype.addEventListener=ee.prototype.on,ee.prototype.removeEventListener=ee.prototype.off,ee.prototype.addCommandListener=function(e,t){this.room&&this.room.addPresenceListener(e,t)},ee.prototype.removeCommandListener=function(e,t){this.room&&this.room.removePresenceListener(e,t)},ee.prototype.sendTextMessage=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"body\";if(this.room){var n=(this.room.getFromPresence(\"nick\")||{}).value;this.room.sendMessage(e,t,n)}},ee.prototype.sendPrivateTextMessage=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"body\";this.room&&this.room.sendPrivateMessage(e,t,n)},ee.prototype.sendCommand=function(e,t){this.room?(this.room.addToPresence(e,t),this.room.sendPresence()):Z.warn(\"Not sending a command, room not initialized.\")},ee.prototype.sendCommandOnce=function(e,t){this.sendCommand(e,t),this.removeCommand(e)},ee.prototype.removeCommand=function(e){this.room&&this.room.removeFromPresence(e)},ee.prototype.setDisplayName=function(e){this.room&&(this.room.removeFromPresence(\"nick\"),this.room.addToPresence(\"nick\",{attributes:{xmlns:\"http://jabber.org/protocol/nick\"},value:e}),this.room.sendPresence())},ee.prototype.setSubject=function(e){this.room&&this.isModerator()&&this.room.setSubject(e)},ee.prototype.getTranscriber=function(){if(void 0===this.transcriber){this.transcriber=new M.a;var e=this.getLocalTracks(V.a),t=!0,n=!1,r=void 0;try{for(var i,o=e[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;this.transcriber.addTrack(a)}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}var s=this.rtc.getRemoteTracks(V.a),c=!0,u=!1,l=void 0;try{for(var d,p=s[Symbol.iterator]();!(c=(d=p.next()).done);c=!0){var h=d.value;this.transcriber.addTrack(h)}}catch(e){u=!0,l=e}finally{try{c||null==p.return||p.return()}finally{if(u)throw l}}}return this.transcriber},ee.prototype.getTranscriptionStatus=function(){return this.room.transcriptionStatus},ee.prototype.addTrack=function(e){if(e.isVideoTrack()){var t=this.rtc.getLocalVideoTrack();if(t)return e===t?Promise.resolve(e):Promise.reject(new Error(\"cannot add second video track to the conference\"))}return this.replaceTrack(null,e)},ee.prototype._fireAudioLevelChangeEvent=function(e,t){var n=this.getActivePeerConnection();t&&n!==t||this.eventEmitter.emit(d.TRACK_AUDIO_LEVEL_CHANGED,this.myUserId(),e)},ee.prototype._fireMuteChangeEvent=function(e){var t;if(this.isMutedByFocus&&e.isAudioTrack()&&!e.isMuted()&&(this.isMutedByFocus=!1,this.room.muteParticipant(this.room.myroomjid,!1)),this.mutedByFocusActor){var n=r.Strophe.getResourceFromJid(this.mutedByFocusActor);t=this.participants[n]}this.eventEmitter.emit(d.TRACK_MUTE_CHANGED,e,t)},ee.prototype.onLocalTrackRemoved=function(e){e._setConference(null),this.rtc.removeLocalTrack(e),e.removeEventListener(m.TRACK_MUTE_CHANGED,e.muteHandler),e.removeEventListener(m.TRACK_AUDIO_LEVEL_CHANGED,e.audioLevelHandler),e.isVideoTrack()&&e.videoType===W.a.DESKTOP&&this.statistics.sendScreenSharingEvent(!1),this.eventEmitter.emit(d.TRACK_REMOVED,e)},ee.prototype.removeTrack=function(e){return this.replaceTrack(e,null)},ee.prototype.replaceTrack=function(e,t){var n=this;return e&&e.disposed?Promise.reject(new h.a(f.TRACK_IS_DISPOSED)):t&&t.disposed?Promise.reject(new h.a(f.TRACK_IS_DISPOSED)):this._doReplaceTrack(e,t).then(function(){return e&&n.onLocalTrackRemoved(e),t&&n._setupNewTrack(t),Promise.resolve()},function(e){return Promise.reject(new Error(e))})},ee.prototype._doReplaceTrack=function(e,t){var n=[];return this.jvbJingleSession?n.push(this.jvbJingleSession.replaceTrack(e,t)):Z.info(\"_doReplaceTrack - no JVB JingleSession\"),this.p2pJingleSession?n.push(this.p2pJingleSession.replaceTrack(e,t)):Z.info(\"_doReplaceTrack - no P2P JingleSession\"),Promise.all(n)},ee.prototype._setupNewTrack=function(e){if(e.isAudioTrack()||e.isVideoTrack()&&e.videoType!==W.a.DESKTOP){var t=S.a.getCurrentlyAvailableMediaDevices().find(function(t){return t.kind===\"\".concat(e.getTrack().kind,\"input\")&&t.label===e.getTrack().label});t&&N.a.sendActiveDeviceListEvent(S.a.getEventDataForActiveDevice(t))}e.isVideoTrack()&&(this.removeCommand(\"videoType\"),this.sendCommand(\"videoType\",{value:e.videoType,attributes:{xmlns:\"http://jitsi.org/jitmeet/video\"}})),this.rtc.addLocalTrack(e),e.isAudioTrack()?this.room.setAudioMute(e.isMuted()):this.room.setVideoMute(e.isMuted()),e.muteHandler=this._fireMuteChangeEvent.bind(this,e),e.audioLevelHandler=this._fireAudioLevelChangeEvent.bind(this),e.addEventListener(m.TRACK_MUTE_CHANGED,e.muteHandler),e.addEventListener(m.TRACK_AUDIO_LEVEL_CHANGED,e.audioLevelHandler),e._setConference(this),this.eventEmitter.emit(d.TRACK_ADDED,e)},ee.prototype._addLocalTrackAsUnmute=function(e){var t=[];return this.jvbJingleSession?t.push(this.jvbJingleSession.addTrackAsUnmute(e)):Z.info(\"Add local MediaStream as unmute - no JVB Jingle session started yet\"),this.p2pJingleSession?t.push(this.p2pJingleSession.addTrackAsUnmute(e)):Z.info(\"Add local MediaStream as unmute - no P2P Jingle session started yet\"),Promise.all(t)},ee.prototype._removeLocalTrackAsMute=function(e){var t=[];return this.jvbJingleSession?t.push(this.jvbJingleSession.removeTrackAsMute(e)):Z.info(\"Remove local MediaStream - no JVB JingleSession started yet\"),this.p2pJingleSession?t.push(this.p2pJingleSession.removeTrackAsMute(e)):Z.info(\"Remove local MediaStream - no P2P JingleSession started yet\"),Promise.all(t)},ee.prototype.getRole=function(){return this.room.role},ee.prototype.isHidden=function(){return this.connection?r.Strophe.getDomainFromJid(this.connection.getJid())===this.options.config.hiddenDomain:null},ee.prototype.isModerator=function(){return this.room?this.room.isModerator():null},ee.prototype.lock=function(e){var t=this;return this.isModerator()?new Promise(function(n,r){t.room.lockRoom(e||\"\",function(){return n()},function(e){return r(e)},function(){return r(u.PASSWORD_NOT_SUPPORTED)})}):Promise.reject(new Error(\"You are not moderator.\"))},ee.prototype.unlock=function(){return this.lock()},ee.prototype.selectParticipant=function(e){this.selectParticipants([e])},ee.prototype.selectParticipants=function(e){if(!Array.isArray(e))throw new Error(\"Invalid argument; participantIds must be an array.\");this.rtc.selectEndpoints(e)},ee.prototype.pinParticipant=function(e){this.rtc.pinEndpoint(e)},ee.prototype.getLastN=function(){return this.rtc.getLastN()},ee.prototype.setLastN=function(e){if(!Number.isInteger(e)&&!Number.parseInt(e,10))throw new Error(\"Invalid value for lastN: \".concat(e));var t=Number(e);if(t<-1)throw new RangeError(\"lastN cannot be smaller than -1\");if(this.rtc.setLastN(t),this.p2pJingleSession){var n=0!==t;this.p2pJingleSession.setMediaTransferActive(!0,n).catch(function(e){Z.error(\"Failed to adjust video transfer status (\".concat(n,\")\"),e)})}},ee.prototype.isInLastN=function(e){return this.rtc.isInLastN(e)},ee.prototype.getParticipants=function(){return Object.keys(this.participants).map(function(e){return this.participants[e]},this)},ee.prototype.getParticipantCount=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=this.getParticipants();return e||(t=t.filter(function(e){return!e.isHidden()})),t.length+1},ee.prototype.getParticipantById=function(e){return this.participants[e]},ee.prototype.kickParticipant=function(e){var t=this.getParticipantById(e);t&&this.room.kick(t.getJid())},ee.prototype._maybeClearSITimeout=function(){this._sessionInitiateTimeout&&(this.jvbJingleSession||this.getParticipantCount()<2)&&(window.clearTimeout(this._sessionInitiateTimeout),this._sessionInitiateTimeout=null)},ee.prototype._maybeSetSITimeout=function(){var e=this;!this.jvbJingleSession&&this.getParticipantCount()>=2&&!this._sessionInitiateTimeout&&(this._sessionInitiateTimeout=window.setTimeout(function(){e._sessionInitiateTimeout=null,N.a.sendAnalytics(Object(z.E)(z.d,{p2p:!1,value:5e3}))},5e3))},ee.prototype.muteParticipant=function(e){var t=this.getParticipantById(e);t&&this.room.muteParticipant(t.getJid(),!0)},ee.prototype.onMemberJoined=function(e,t,n,i,o,a,s,c){var u=r.Strophe.getResourceFromJid(e);if(\"focus\"!==u&&this.myUserId()!==u){var l=new p.a(e,this,t,i,o,a,s);l._role=n,l._botType=c,this.participants[u]=l,this.eventEmitter.emit(d.USER_JOINED,u,l),this._updateFeatures(l),this._maybeStartOrStopP2P(),this._maybeSetSITimeout()}},ee.prototype._updateFeatures=function(e){var t=this;e.getFeatures().then(function(n){e._supportsDTMF=n.has(\"urn:xmpp:jingle:dtmf:0\"),t.updateDTMFSupport(),n.has(\"http://jitsi.org/protocol/jigasi\")&&e.setProperty(\"features_jigasi\",!0)}).catch(function(){return!1})},ee.prototype._onMemberBotTypeChanged=function(e,t){var n=this.getParticipants().find(function(t){return t.getJid()===e});if(n){n._botType=t;var i=r.Strophe.getResourceFromJid(e);this.eventEmitter.emit(d.BOT_TYPE_CHANGED,i,t)}n._botType||this._maybeStartOrStopP2P()},ee.prototype.onMemberLeft=function(e){var t=this,n=r.Strophe.getResourceFromJid(e);if(\"focus\"!==n&&this.myUserId()!==n){var i=this.participants[n];delete this.participants[n],this.rtc.removeRemoteTracks(n).forEach(function(e){return t.eventEmitter.emit(d.TRACK_REMOVED,e)}),i&&this.eventEmitter.emit(d.USER_LEFT,n,i),this._maybeStartOrStopP2P(!0),this._maybeClearSITimeout()}},ee.prototype.onMemberKicked=function(e,t,n){var r=this.participants[t];if(e)return this.eventEmitter.emit(d.KICKED,r),void this.leave();var i=this.participants[n];this.eventEmitter.emit(d.PARTICIPANT_KICKED,r,i)},ee.prototype.onLocalRoleChanged=function(e){this.eventEmitter.emit(d.USER_ROLE_CHANGED,this.myUserId(),e)},ee.prototype.onUserRoleChanged=function(e,t){var n=r.Strophe.getResourceFromJid(e),i=this.getParticipantById(n);i&&(i._role=t,this.eventEmitter.emit(d.USER_ROLE_CHANGED,n,t))},ee.prototype.onDisplayNameChanged=function(e,t){var n=r.Strophe.getResourceFromJid(e),i=this.getParticipantById(n);i&&i._displayName!==t&&(i._displayName=t,this.eventEmitter.emit(d.DISPLAY_NAME_CHANGED,n,t))},ee.prototype.onRemoteTrackAdded=function(e){var t=this;if(!e.isP2P||this.isP2PActive())if(e.isP2P||!this.isP2PActive()){var n=e.getParticipantId(),r=this.getParticipantById(n);if(r){r._tracks.push(e),this.transcriber&&this.transcriber.addTrack(e);var i=this.eventEmitter;e.addEventListener(m.TRACK_MUTE_CHANGED,function(){return i.emit(d.TRACK_MUTE_CHANGED,e)}),e.addEventListener(m.TRACK_AUDIO_LEVEL_CHANGED,function(e,r){t.getActivePeerConnection()===r&&i.emit(d.TRACK_AUDIO_LEVEL_CHANGED,n,e)}),i.emit(d.TRACK_ADDED,e)}else Z.error(\"No participant found for id: \".concat(n))}else Z.info(\"Trying to add remote JVB track, when in P2P - IGNORED\");else Z.info(\"Trying to add remote P2P track, when not in P2P - IGNORED\")},ee.prototype.onCallAccepted=function(e,t){this.p2pJingleSession===e&&(Z.info(\"P2P setAnswer\"),this.p2pJingleSession.setAnswer(t))},ee.prototype.onTransportInfo=function(e,t){this.p2pJingleSession===e&&(Z.info(\"P2P addIceCandidates\"),this.p2pJingleSession.addIceCandidates(t))},ee.prototype.onRemoteTrackRemoved=function(e){var t=this;this.getParticipants().forEach(function(n){for(var r=n.getTracks(),i=0;i<r.length;i++)if(r[i]===e){n._tracks.splice(i,1),t.eventEmitter.emit(d.TRACK_REMOVED,e),t.transcriber&&t.transcriber.removeTrack(e);break}},this)},ee.prototype._onIncomingCallP2P=function(e,t){var n;E.a.supportsP2P()?this.isP2PEnabled()||this.isP2PTestModeEnabled()?this.p2pJingleSession&&(n={reason:\"busy\",reasonDescription:\"P2P already in progress\",errorMsg:'Duplicated P2P \"session-initiate\"'}):n={reason:\"decline\",reasonDescription:\"P2P disabled\",errorMsg:\"P2P mode disabled in the configuration\"}:n={reason:\"unsupported-applications\",reasonDescription:\"P2P not supported\",errorMsg:\"This client does not support P2P connections\"},n?this._rejectIncomingCall(e,n):this._acceptP2PIncomingCall(e,t)},ee.prototype.onIncomingCall=function(e,t,n){if(e.isP2P)this._onIncomingCallP2P(e,t);else{if(!this.room.isFocus(e.remoteJid)){var r=\"Rejecting session-initiate from non-focus.\";return void this._rejectIncomingCall(e,{reason:\"security-error\",reasonDescription:r,errorMsg:r})}this._acceptJvbIncomingCall(e,t,n)}},ee.prototype._acceptJvbIncomingCall=function(e,t,n){var r=this;this.jvbJingleSession=e,this.room.connectionTimes[\"session.initiate\"]=n,this.wasStopped&&N.a.sendAnalyticsAndLog(Object(z.E)(z.a,{p2p:!1}));var i=$(t).find('>bridge-session[xmlns=\"http://jitsi.org/protocol/focus\"]').attr(\"region\");this.eventEmitter.emit(d.SERVER_REGION_CHANGED,i),this._maybeClearSITimeout(),N.a.sendAnalytics(Object(z.E)(z.c,{p2p:!1,value:n}));try{e.initialize(this.room,this.rtc,this.options.config)}catch(e){j.a.callErrorHandler(e)}this._setBridgeChannel(t,e.peerconnection);try{e.acceptOffer(t,function(){r.isP2PActive()&&r.jvbJingleSession&&r._suspendMediaTransferForJvbConnection()},function(e){j.a.callErrorHandler(e),Z.error(\"Failed to accept incoming Jingle session\",e)},this.getLocalTracks()),Z.info(\"Starting CallStats for JVB connection...\"),this.statistics.startCallStats(this.jvbJingleSession.peerconnection,\"jitsi\"),this.statistics.startRemoteStats(this.jvbJingleSession.peerconnection)}catch(e){j.a.callErrorHandler(e),Z.error(e)}},ee.prototype._setBridgeChannel=function(e,t){var n,r=null,i=$(e).find(\">content>transport>web-socket\").first();switch(1===i.length&&(r=i[0].getAttribute(\"url\")),this.options.config.openBridgeChannel){case\"datachannel\":case!0:case void 0:n=\"datachannel\";break;case\"websocket\":n=\"websocket\"}\"datachannel\"!==n||E.a.supportsDataChannels()||(n=\"websocket\"),\"datachannel\"===n?this.rtc.initializeBridgeChannel(t,null):\"websocket\"===n&&r&&this.rtc.initializeBridgeChannel(null,r)},ee.prototype._rejectIncomingCall=function(e,t){t&&t.errorMsg&&j.a.callErrorHandler(new Error(t.errorMsg)),e.terminate(null,function(e){Z.warn(\"An error occurred while trying to terminate invalid Jingle session\",e)},{reason:t&&t.reason,reasonDescription:t&&t.reasonDescription,sendSessionTerminate:!0})},ee.prototype.onCallEnded=function(e,t,n){Z.info(\"Call ended: \".concat(t,\" - \").concat(n,\" P2P ?\").concat(e.isP2P)),e===this.jvbJingleSession?(this.wasStopped=!0,N.a.sendAnalytics(Object(z.E)(z.e,{p2p:!1})),this.statistics&&(this.statistics.stopRemoteStats(this.jvbJingleSession.peerconnection),Z.info(\"Stopping JVB CallStats\"),this.statistics.stopCallStats(this.jvbJingleSession.peerconnection)),this.jvbJingleSession=null,this.rtc.onCallEnded()):e===this.p2pJingleSession?(\"decline\"===t&&\"force JVB121\"===n?(Z.info(\"In forced JVB 121 mode...\"),N.a.analytics.addPermanentProperties({forceJvb121:!0})):\"connectivity-error\"===t&&\"ICE FAILED\"===n&&N.a.analytics.addPermanentProperties({p2pFailed:!0}),this._stopP2PSession()):Z.error(\"Received onCallEnded for invalid session\",e.sid,e.remoteJid,t,n)},ee.prototype.onSuspendDetected=function(e){e.isP2P||(this.leave(),this.eventEmitter.emit(d.SUSPEND_DETECTED))},ee.prototype.updateDTMFSupport=function(){for(var e=!1,t=this.getParticipants(),n=0;n<t.length;n+=1)if(t[n].supportsDTMF()){e=!0;break}e!==this.somebodySupportsDTMF&&(this.somebodySupportsDTMF=e,this.eventEmitter.emit(d.DTMF_SUPPORT_CHANGED,e))},ee.prototype.isDTMFSupported=function(){return this.somebodySupportsDTMF},ee.prototype.myUserId=function(){return this.room&&this.room.myroomjid?r.Strophe.getResourceFromJid(this.room.myroomjid):null},ee.prototype.sendTones=function(e,t,n){if(!this.dtmfManager){var r=this.getActivePeerConnection();if(!r)return void Z.warn(\"cannot sendTones: no peer connection\");var i=this.getLocalAudioTrack();if(!i)return void Z.warn(\"cannot sendTones: no local audio stream\");this.dtmfManager=new g.a(i,r)}this.dtmfManager.sendTones(e,t,n)},ee.prototype.startRecording=function(e){return this.room?this.recordingManager.startRecording(e):Promise.reject(new Error(\"The conference is not created yet!\"))},ee.prototype.stopRecording=function(e){return this.room?this.recordingManager.stopRecording(e):Promise.reject(new Error(\"The conference is not created yet!\"))},ee.prototype.isSIPCallingSupported=function(){return!!this.room&&this.room.isSIPCallingSupported()},ee.prototype.dial=function(e){return this.room?this.room.dial(e):new Promise(function(e,t){t(new Error(\"The conference is not created yet!\"))})},ee.prototype.hangup=function(){return this.room?this.room.hangup():new Promise(function(e,t){t(new Error(\"The conference is not created yet!\"))})},ee.prototype.startTranscriber=function(){return this.dial(\"jitsi_meet_transcribe\")},ee.prototype.stopTranscriber=ee.prototype.hangup,ee.prototype.getPhoneNumber=function(){return this.room?this.room.getPhoneNumber():null},ee.prototype.getPhonePin=function(){return this.room?this.room.getPhonePin():null},ee.prototype.getActivePeerConnection=function(){return this.isP2PActive()?this.p2pJingleSession.peerconnection:this.jvbJingleSession?this.jvbJingleSession.peerconnection:null},ee.prototype.getConnectionState=function(){var e=this.getActivePeerConnection();return e?e.getConnectionState():null},ee.prototype.setStartMutedPolicy=function(e){this.isModerator()&&(this.startMutedPolicy=e,this.room.removeFromPresence(\"startmuted\"),this.room.addToPresence(\"startmuted\",{attributes:{audio:e.audio,video:e.video,xmlns:\"http://jitsi.org/jitmeet/start-muted\"}}),this.room.sendPresence())},ee.prototype.getStartMutedPolicy=function(){return this.startMutedPolicy},ee.prototype.isStartAudioMuted=function(){return this.startAudioMuted},ee.prototype.isStartVideoMuted=function(){return this.startVideoMuted},ee.prototype.getLogs=function(){var e=this.xmpp.getJingleLog(),t={};t.time=new Date,t.url=window.location.href,t.ua=navigator.userAgent;var n=this.xmpp.getXmppLog();return n&&(t.xmpp=n),e.metadata=t,e},ee.prototype.getConnectionTimes=function(){return this.room.connectionTimes},ee.prototype.setLocalParticipantProperty=function(e,t){this.sendCommand(\"jitsi_participant_\".concat(e),{value:t})},ee.prototype.removeLocalParticipantProperty=function(e){this.removeCommand(\"jitsi_participant_\".concat(e)),this.room.sendPresence()},ee.prototype.getLocalParticipantProperty=function(e){var t=this.room.presMap.nodes.find(function(t){return t.tagName===\"jitsi_participant_\".concat(e)});return t?t.value:void 0},ee.prototype.sendFeedback=function(e,t){return this.statistics.sendFeedback(e,t)},ee.prototype.isCallstatsEnabled=function(){return this.statistics.isCallstatsEnabled()},ee.prototype._onTrackAttach=function(e,t){var n=e.isLocal(),r=null,i=e.isP2P,o=i?e.getParticipantId():\"jitsi\",a=i?this.p2pJingleSession&&this.p2pJingleSession.peerconnection:this.jvbJingleSession&&this.jvbJingleSession.peerconnection;n?a&&(r=a.getLocalSSRC(e)):r=e.getSSRC(),t.id&&r&&a&&this.statistics.associateStreamWithVideoTag(a,r,n,o,e.getUsageLabel(),t.id)},ee.prototype.sendApplicationLog=function(e){N.a.sendLog(e)},ee.prototype._isFocus=function(e){return this.room?this.room.isFocus(e):null},ee.prototype._fireIncompatibleVersionsEvent=function(){this.eventEmitter.emit(d.CONFERENCE_FAILED,u.INCOMPATIBLE_SERVER_VERSIONS)},ee.prototype.sendEndpointMessage=function(e,t){this.rtc.sendChannelMessage(e,t)},ee.prototype.broadcastEndpointMessage=function(e){this.sendEndpointMessage(\"\",e)},ee.prototype.sendMessage=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Q(e);if(\"object\"===r||!n&&\"string\"===r)if(n)this.sendEndpointMessage(t,e);else{var i=e,o=\"body\";if(\"object\"===r){o=\"json-message\",i.hasOwnProperty(B.b)||(i[B.b]=\"\");try{i=JSON.stringify(i)}catch(e){return void Z.error(\"Can not send a message, stringify failed: \",e)}}t?this.sendPrivateTextMessage(t,i,o):this.sendTextMessage(i,o)}else Z.error(\"Can not send a message of type \".concat(r))},ee.prototype.isConnectionInterrupted=function(){return this.isP2PActive()?this.isP2PConnectionInterrupted:this.isJvbConnectionInterrupted},ee.prototype._onIceConnectionInterrupted=function(e){e.isP2P?this.isP2PConnectionInterrupted=!0:this.isJvbConnectionInterrupted=!0,e.isP2P===this.isP2PActive()&&this.eventEmitter.emit(d.CONNECTION_INTERRUPTED)},ee.prototype._onIceConnectionFailed=function(e){e.isP2P?(N.a.analytics.addPermanentProperties({p2pFailed:!0}),this.p2pJingleSession&&N.a.sendAnalyticsAndLog(Object(z.G)(z.i,{initiator:this.p2pJingleSession.isInitiator})),this._stopP2PSession(\"connectivity-error\",\"ICE FAILED\")):e&&this.jvbJingleSession===e&&(this.xmpp.isPingSupported()?(this._delayedIceFailed=new C.a(this),this._delayedIceFailed.start(e)):(Z.info(\"PING not supported - sending ICE failed immediately\"),e.sendIceFailedNotification()))},ee.prototype._onIceConnectionRestored=function(e){e.isP2P?this.isP2PConnectionInterrupted=!1:(this.isJvbConnectionInterrupted=!1,this._delayedIceFailed&&this._delayedIceFailed.cancel()),e.isP2P===this.isP2PActive()&&this.eventEmitter.emit(d.CONNECTION_RESTORED)},ee.prototype._acceptP2PIncomingCall=function(e,t){this.isP2PConnectionInterrupted=!1,this.p2pJingleSession=e,this.p2pJingleSession.initialize(this.room,this.rtc,this.options.config),Z.info(\"Starting CallStats for P2P connection...\");var n=r.Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);if(this.options.config.enableStatsID){var i=this.participants[n];i&&(n=i.getStatsID()||n)}this.statistics.startCallStats(this.p2pJingleSession.peerconnection,n);var o=this.getLocalTracks();this.p2pJingleSession.acceptOffer(t,function(){Z.debug('Got RESULT for P2P \"session-accept\"')},function(e){Z.error(\"Failed to accept incoming P2P Jingle session\",e)},o)},ee.prototype._addRemoteJVBTracks=function(){this._addRemoteTracks(\"JVB\",this.jvbJingleSession.peerconnection.getRemoteTracks())},ee.prototype._addRemoteP2PTracks=function(){this._addRemoteTracks(\"P2P\",this.p2pJingleSession.peerconnection.getRemoteTracks())},ee.prototype._addRemoteTracks=function(e,t){var n=!0,r=!1,i=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;Z.info(\"Adding remote \".concat(e,\" track: \").concat(s)),this.rtc.eventEmitter.emit(q.REMOTE_TRACK_ADDED,s)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}},ee.prototype._onIceConnectionEstablished=function(e){null!==this.p2pJingleSession&&(this.p2pEstablishmentDuration=this.p2pJingleSession.establishmentDuration),null!==this.jvbJingleSession&&(this.jvbEstablishmentDuration=this.jvbJingleSession.establishmentDuration);var t=!1,n=this.options.config.forceJVB121Ratio;if(e.isP2P?this.p2pJingleSession!==e?(Z.error(\"CONNECTION_ESTABLISHED - wrong P2P session instance ?!\"),t=!0):!e.isInitiator&&\"number\"==typeof n&&Math.random()<n&&(Z.info(\"Forcing JVB 121 mode (ratio=\".concat(n,\")...\")),N.a.analytics.addPermanentProperties({forceJvb121:!0}),this._stopP2PSession(\"decline\",\"force JVB121\"),t=!0):t=!0,!isNaN(this.p2pEstablishmentDuration)&&!isNaN(this.jvbEstablishmentDuration)){var r=this.p2pEstablishmentDuration-this.jvbEstablishmentDuration;N.a.sendAnalytics(z.o,{value:r})}e.isP2P===this.isP2PActive()&&this.eventEmitter.emit(d.CONNECTION_ESTABLISHED),t||(this._setP2PStatus(!0),this.jvbJingleSession?this._removeRemoteJVBTracks():Z.info(\"Not removing remote JVB tracks - no session yet\"),this._addRemoteP2PTracks(),this.jvbJingleSession&&this._suspendMediaTransferForJvbConnection(),Z.info(\"Starting remote stats with p2p connection\"),this.statistics.startRemoteStats(this.p2pJingleSession.peerconnection),N.a.sendAnalyticsAndLog(Object(z.G)(z.h,{initiator:this.p2pJingleSession.isInitiator})))},ee.prototype._updateProperties=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=!c()(e,this.properties);if(this.properties=e,t){this.eventEmitter.emit(d.PROPERTIES_CHANGED,this.properties);[\"bridge-count\",\"created-ms\",\"octo-enabled\"].forEach(function(t){void 0!==e[t]&&N.a.analytics.addPermanentProperties(Y({},t.replace(\"-\",\"_\"),e[t]))})}},ee.prototype.getProperty=function(e){return this.properties[e]},ee.prototype._maybeClearDeferredStartP2P=function(){this.deferredStartP2PTask&&(Z.info(\"Cleared deferred start P2P task\"),clearTimeout(this.deferredStartP2PTask),this.deferredStartP2PTask=null)},ee.prototype._removeRemoteJVBTracks=function(){this._removeRemoteTracks(\"JVB\",this.jvbJingleSession.peerconnection.getRemoteTracks())},ee.prototype._removeRemoteP2PTracks=function(){this._removeRemoteTracks(\"P2P\",this.p2pJingleSession.peerconnection.getRemoteTracks())},ee.prototype._removeRemoteTracks=function(e,t){var n=!0,r=!1,i=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;Z.info(\"Removing remote \".concat(e,\" track: \").concat(s)),this.rtc.eventEmitter.emit(q.REMOTE_TRACK_REMOVED,s)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}},ee.prototype._resumeMediaTransferForJvbConnection=function(){Z.info(\"Resuming media transfer over the JVB connection...\"),this.jvbJingleSession.setMediaTransferActive(!0,!0).then(function(){Z.info(\"Resumed media transfer over the JVB connection!\")},function(e){Z.error(\"Failed to resume media transfer over the JVB connection:\",e)})},ee.prototype._setP2PStatus=function(e){if(this.p2p!==e){if(this.p2p=e,e){Z.info(\"Peer to peer connection established!\"),N.a.analytics.addPermanentProperties({p2pFailed:!1,forceJvb121:!1});var t=0!==this.rtc.getLastN();this.p2pJingleSession.setMediaTransferActive(!0,t).catch(function(e){Z.error(\"Failed to sync up P2P video transfer status\"+\"(\".concat(t,\")\"),e)})}else Z.info(\"Peer to peer connection closed!\");this.jvbJingleSession&&this.statistics.sendConnectionResumeOrHoldEvent(this.jvbJingleSession.peerconnection,!e),this.dtmfManager=null,this.eventEmitter.emit(d.P2P_STATUS,this,this.p2p),this.eventEmitter.emit(this.isConnectionInterrupted()?d.CONNECTION_INTERRUPTED:d.CONNECTION_RESTORED)}else Z.debug(\"Called _setP2PStatus with the same status: \".concat(e))},ee.prototype._startP2PSession=function(e){if(this._maybeClearDeferredStartP2P(),this.p2pJingleSession)Z.error(\"P2P session already started!\");else{this.isP2PConnectionInterrupted=!1,this.p2pJingleSession=this.xmpp.connection.jingle.newP2PJingleSession(this.room.myroomjid,e),Z.info(\"Created new P2P JingleSession\",this.room.myroomjid,e),this.p2pJingleSession.initialize(this.room,this.rtc,this.options.config),Z.info(\"Starting CallStats for P2P connection...\");var t=r.Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);if(this.options.config.enableStatsID){var n=this.participants[t];n&&(t=n.getStatsID()||t)}this.statistics.startCallStats(this.p2pJingleSession.peerconnection,t);var i=this.getLocalTracks();this.p2pJingleSession.invite(i)}},ee.prototype._suspendMediaTransferForJvbConnection=function(){Z.info(\"Suspending media transfer over the JVB connection...\"),this.jvbJingleSession.setMediaTransferActive(!1,!1).then(function(){Z.info(\"Suspended media transfer over the JVB connection !\")},function(e){Z.error(\"Failed to suspend media transfer over the JVB connection:\",e)})},ee.prototype._maybeStartOrStopP2P=function(e){if(E.a.supportsP2P()&&this.isP2PEnabled()&&!this.isP2PTestModeEnabled()){var t=this.getParticipants(),n=t.length,r=this.isModerator(),i=void 0!==t.find(function(e){return\"poltergeist\"===e._botType}),o=1===n&&!i;if(Z.debug(\"P2P? isModerator: \".concat(r,\", peerCount: \").concat(n,\", hasBotPeer: \").concat(i,\" => \").concat(o)),!o&&this.deferredStartP2PTask&&this._maybeClearDeferredStartP2P(),!this.p2pJingleSession&&o){var a=n&&t[0],s=this.myUserId(),c=a.getId();if(s>c)return void Z.debug(\"I'm the bigger peersId - the other peer should start P2P\",s,c);if(s===c)return void Z.error(\"The same IDs ? \",s,c);var u=a.getJid();if(e){if(this.deferredStartP2PTask)return void Z.error(\"Deferred start P2P task's been set already!\");Z.info(\"Will start P2P with: \".concat(u,\" after \").concat(this.backToP2PDelay,\" seconds...\")),this.deferredStartP2PTask=setTimeout(this._startP2PSession.bind(this,u),1e3*this.backToP2PDelay)}else Z.info(\"Will start P2P with: \".concat(u)),this._startP2PSession(u)}else this.p2pJingleSession&&!o&&(Z.info(\"Will stop P2P with: \".concat(this.p2pJingleSession.remoteJid)),this.p2pJingleSession.isInitiator&&n>1&&N.a.sendAnalyticsAndLog(Object(z.G)(z.j)),this._stopP2PSession())}else Z.info(\"Auto P2P disabled\")},ee.prototype._stopP2PSession=function(e,t){if(this.p2pJingleSession){var n=this.isP2PActive();n&&(this.jvbJingleSession&&this._resumeMediaTransferForJvbConnection(),this._removeRemoteP2PTracks()),Z.info(\"Stopping remote stats for P2P connection\"),this.statistics.stopRemoteStats(this.p2pJingleSession.peerconnection),Z.info(\"Stopping CallStats for P2P connection\"),this.statistics.stopCallStats(this.p2pJingleSession.peerconnection),this.p2pJingleSession.terminate(function(){Z.info(\"P2P session terminate RESULT\")},function(t){e&&Z.error(\"An error occurred while trying to terminate P2P Jingle session\",t)},{reason:e||\"success\",reasonDescription:t||\"Turing off P2P session\",sendSessionTerminate:this.room&&this.getParticipantById(r.Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid))}),this.p2pJingleSession=null,this._setP2PStatus(!1),n&&(this.jvbJingleSession?this._addRemoteJVBTracks():Z.info(\"Not adding remote JVB tracks - no session yet\"))}else Z.error(\"No P2P session to be stopped!\")},ee.prototype.isP2PActive=function(){return this.p2p},ee.prototype.getP2PConnectionState=function(){return this.isP2PActive()?this.p2pJingleSession.peerconnection.getConnectionState():null},ee.prototype.startP2PSession=function(){var e=this.getParticipants();if(1!==e.length)throw new Error(\"There must be exactly 1 participant to start the P2P session !\");var t=e[0].getJid();this._startP2PSession(t)},ee.prototype.stopP2PSession=function(){this._stopP2PSession()},ee.prototype.getSpeakerStats=function(){return this.speakerStatsCollector.getStats()},ee.prototype.setReceiverVideoConstraint=function(e){this.rtc.setReceiverVideoConstraint(e)},ee.prototype.createVideoSIPGWSession=function(e,t){return this.room?this.videoSIPGWHandler.createVideoSIPGWSession(e,t):new Error(G.ERROR_NO_CONNECTION)}}).call(this,\"JitsiConference.js\")},function(e,t,n){(function(e,n){function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=200,o=\"__lodash_hash_undefined__\",a=1,s=2,c=9007199254740991,u=\"[object Arguments]\",l=\"[object Array]\",d=\"[object AsyncFunction]\",p=\"[object Boolean]\",h=\"[object Date]\",f=\"[object Error]\",m=\"[object Function]\",v=\"[object GeneratorFunction]\",y=\"[object Map]\",g=\"[object Number]\",_=\"[object Null]\",S=\"[object Object]\",b=\"[object Proxy]\",E=\"[object RegExp]\",T=\"[object Set]\",C=\"[object String]\",R=\"[object Symbol]\",A=\"[object Undefined]\",w=\"[object ArrayBuffer]\",k=\"[object DataView]\",O=/^\\[object .+?Constructor\\]$/,I=/^(?:0|[1-9]\\d*)$/,P={};P[\"[object Float32Array]\"]=P[\"[object Float64Array]\"]=P[\"[object Int8Array]\"]=P[\"[object Int16Array]\"]=P[\"[object Int32Array]\"]=P[\"[object Uint8Array]\"]=P[\"[object Uint8ClampedArray]\"]=P[\"[object Uint16Array]\"]=P[\"[object Uint32Array]\"]=!0,P[u]=P[l]=P[w]=P[p]=P[k]=P[h]=P[f]=P[m]=P[y]=P[g]=P[S]=P[E]=P[T]=P[C]=P[\"[object WeakMap]\"]=!1;var D=\"object\"==(void 0===e?\"undefined\":r(e))&&e&&e.Object===Object&&e,N=\"object\"==(\"undefined\"==typeof self?\"undefined\":r(self))&&self&&self.Object===Object&&self,L=D||N||Function(\"return this\")(),M=\"object\"==r(t)&&t&&!t.nodeType&&t,x=M&&\"object\"==r(n)&&n&&!n.nodeType&&n,j=x&&x.exports===M,F=j&&D.process,U=function(){try{return F&&F.binding&&F.binding(\"util\")}catch(e){}}(),H=U&&U.isTypedArray;function J(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}function G(e){var t=-1,n=Array(e.size);return e.forEach(function(e,r){n[++t]=[r,e]}),n}function B(e){var t=-1,n=Array(e.size);return e.forEach(function(e){n[++t]=e}),n}var V,q,K,W=Array.prototype,z=Function.prototype,$=Object.prototype,X=L[\"__core-js_shared__\"],Q=z.toString,Y=$.hasOwnProperty,Z=(V=/[^.]+$/.exec(X&&X.keys&&X.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+V:\"\",ee=$.toString,te=RegExp(\"^\"+Q.call(Y).replace(/[\\\\^$.*+?()[\\]{}|]/g,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),ne=j?L.Buffer:void 0,re=L.Symbol,ie=L.Uint8Array,oe=$.propertyIsEnumerable,ae=W.splice,se=re?re.toStringTag:void 0,ce=Object.getOwnPropertySymbols,ue=ne?ne.isBuffer:void 0,le=(q=Object.keys,K=Object,function(e){return q(K(e))}),de=Ue(L,\"DataView\"),pe=Ue(L,\"Map\"),he=Ue(L,\"Promise\"),fe=Ue(L,\"Set\"),me=Ue(L,\"WeakMap\"),ve=Ue(Object,\"create\"),ye=Be(de),ge=Be(pe),_e=Be(he),Se=Be(fe),be=Be(me),Ee=re?re.prototype:void 0,Te=Ee?Ee.valueOf:void 0;function Ce(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Re(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Ae(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function we(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new Ae;++t<n;)this.add(e[t])}function ke(e){var t=this.__data__=new Re(e);this.size=t.size}function Oe(e,t){var n=Ke(e),r=!n&&qe(e),i=!n&&!r&&We(e),o=!n&&!r&&!i&&Ye(e),a=n||r||i||o,s=a?function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}(e.length,String):[],c=s.length;for(var u in e)!t&&!Y.call(e,u)||a&&(\"length\"==u||i&&(\"offset\"==u||\"parent\"==u)||o&&(\"buffer\"==u||\"byteLength\"==u||\"byteOffset\"==u)||Ge(u,c))||s.push(u);return s}function Ie(e,t){for(var n=e.length;n--;)if(Ve(e[n][0],t))return n;return-1}function Pe(e){return null==e?void 0===e?A:_:se&&se in Object(e)?function(e){var t=Y.call(e,se),n=e[se];try{e[se]=void 0;var r=!0}catch(e){}var i=ee.call(e);r&&(t?e[se]=n:delete e[se]);return i}(e):function(e){return ee.call(e)}(e)}function De(e){return Qe(e)&&Pe(e)==u}function Ne(e,t,n,r,i){return e===t||(null==e||null==t||!Qe(e)&&!Qe(t)?e!=e&&t!=t:function(e,t,n,r,i,o){var c=Ke(e),d=Ke(t),m=c?l:Je(e),v=d?l:Je(t),_=(m=m==u?S:m)==S,b=(v=v==u?S:v)==S,A=m==v;if(A&&We(e)){if(!We(t))return!1;c=!0,_=!1}if(A&&!_)return o||(o=new ke),c||Ye(e)?xe(e,t,n,r,i,o):function(e,t,n,r,i,o,c){switch(n){case k:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case w:return!(e.byteLength!=t.byteLength||!o(new ie(e),new ie(t)));case p:case h:case g:return Ve(+e,+t);case f:return e.name==t.name&&e.message==t.message;case E:case C:return e==t+\"\";case y:var u=G;case T:var l=r&a;if(u||(u=B),e.size!=t.size&&!l)return!1;var d=c.get(e);if(d)return d==t;r|=s,c.set(e,t);var m=xe(u(e),u(t),r,i,o,c);return c.delete(e),m;case R:if(Te)return Te.call(e)==Te.call(t)}return!1}(e,t,m,n,r,i,o);if(!(n&a)){var O=_&&Y.call(e,\"__wrapped__\"),I=b&&Y.call(t,\"__wrapped__\");if(O||I){var P=O?e.value():e,D=I?t.value():t;return o||(o=new ke),i(P,D,n,r,o)}}if(!A)return!1;return o||(o=new ke),function(e,t,n,r,i,o){var s=n&a,c=je(e),u=c.length,l=je(t).length;if(u!=l&&!s)return!1;for(var d=u;d--;){var p=c[d];if(!(s?p in t:Y.call(t,p)))return!1}var h=o.get(e);if(h&&o.get(t))return h==t;var f=!0;o.set(e,t),o.set(t,e);for(var m=s;++d<u;){p=c[d];var v=e[p],y=t[p];if(r)var g=s?r(y,v,p,t,e,o):r(v,y,p,e,t,o);if(!(void 0===g?v===y||i(v,y,n,r,o):g)){f=!1;break}m||(m=\"constructor\"==p)}if(f&&!m){var _=e.constructor,S=t.constructor;_!=S&&\"constructor\"in e&&\"constructor\"in t&&!(\"function\"==typeof _&&_ instanceof _&&\"function\"==typeof S&&S instanceof S)&&(f=!1)}return o.delete(e),o.delete(t),f}(e,t,n,r,i,o)}(e,t,n,r,Ne,i))}function Le(e){return!(!Xe(e)||(t=e,Z&&Z in t))&&(ze(e)?te:O).test(Be(e));var t}function Me(e){if(n=(t=e)&&t.constructor,r=\"function\"==typeof n&&n.prototype||$,t!==r)return le(e);var t,n,r,i=[];for(var o in Object(e))Y.call(e,o)&&\"constructor\"!=o&&i.push(o);return i}function xe(e,t,n,r,i,o){var c=n&a,u=e.length,l=t.length;if(u!=l&&!(c&&l>u))return!1;var d=o.get(e);if(d&&o.get(t))return d==t;var p=-1,h=!0,f=n&s?new we:void 0;for(o.set(e,t),o.set(t,e);++p<u;){var m=e[p],v=t[p];if(r)var y=c?r(v,m,p,t,e,o):r(m,v,p,e,t,o);if(void 0!==y){if(y)continue;h=!1;break}if(f){if(!J(t,function(e,t){if(a=t,!f.has(a)&&(m===e||i(m,e,n,r,o)))return f.push(t);var a})){h=!1;break}}else if(m!==v&&!i(m,v,n,r,o)){h=!1;break}}return o.delete(e),o.delete(t),h}function je(e){return function(e,t,n){var r=t(e);return Ke(e)?r:function(e,t){for(var n=-1,r=t.length,i=e.length;++n<r;)e[i+n]=t[n];return e}(r,n(e))}(e,Ze,He)}function Fe(e,t){var n,i,o=e.__data__;return(\"string\"==(i=r(n=t))||\"number\"==i||\"symbol\"==i||\"boolean\"==i?\"__proto__\"!==n:null===n)?o[\"string\"==typeof t?\"string\":\"hash\"]:o.map}function Ue(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return Le(n)?n:void 0}Ce.prototype.clear=function(){this.__data__=ve?ve(null):{},this.size=0},Ce.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Ce.prototype.get=function(e){var t=this.__data__;if(ve){var n=t[e];return n===o?void 0:n}return Y.call(t,e)?t[e]:void 0},Ce.prototype.has=function(e){var t=this.__data__;return ve?void 0!==t[e]:Y.call(t,e)},Ce.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=ve&&void 0===t?o:t,this},Re.prototype.clear=function(){this.__data__=[],this.size=0},Re.prototype.delete=function(e){var t=this.__data__,n=Ie(t,e);return!(n<0||(n==t.length-1?t.pop():ae.call(t,n,1),--this.size,0))},Re.prototype.get=function(e){var t=this.__data__,n=Ie(t,e);return n<0?void 0:t[n][1]},Re.prototype.has=function(e){return Ie(this.__data__,e)>-1},Re.prototype.set=function(e,t){var n=this.__data__,r=Ie(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},Ae.prototype.clear=function(){this.size=0,this.__data__={hash:new Ce,map:new(pe||Re),string:new Ce}},Ae.prototype.delete=function(e){var t=Fe(this,e).delete(e);return this.size-=t?1:0,t},Ae.prototype.get=function(e){return Fe(this,e).get(e)},Ae.prototype.has=function(e){return Fe(this,e).has(e)},Ae.prototype.set=function(e,t){var n=Fe(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},we.prototype.add=we.prototype.push=function(e){return this.__data__.set(e,o),this},we.prototype.has=function(e){return this.__data__.has(e)},ke.prototype.clear=function(){this.__data__=new Re,this.size=0},ke.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},ke.prototype.get=function(e){return this.__data__.get(e)},ke.prototype.has=function(e){return this.__data__.has(e)},ke.prototype.set=function(e,t){var n=this.__data__;if(n instanceof Re){var r=n.__data__;if(!pe||r.length<i-1)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new Ae(r)}return n.set(e,t),this.size=n.size,this};var He=ce?function(e){return null==e?[]:(e=Object(e),function(e,t){for(var n=-1,r=null==e?0:e.length,i=0,o=[];++n<r;){var a=e[n];t(a,n,e)&&(o[i++]=a)}return o}(ce(e),function(t){return oe.call(e,t)}))}:function(){return[]},Je=Pe;function Ge(e,t){return!!(t=null==t?c:t)&&(\"number\"==typeof e||I.test(e))&&e>-1&&e%1==0&&e<t}function Be(e){if(null!=e){try{return Q.call(e)}catch(e){}try{return e+\"\"}catch(e){}}return\"\"}function Ve(e,t){return e===t||e!=e&&t!=t}(de&&Je(new de(new ArrayBuffer(1)))!=k||pe&&Je(new pe)!=y||he&&\"[object Promise]\"!=Je(he.resolve())||fe&&Je(new fe)!=T||me&&\"[object WeakMap]\"!=Je(new me))&&(Je=function(e){var t=Pe(e),n=t==S?e.constructor:void 0,r=n?Be(n):\"\";if(r)switch(r){case ye:return k;case ge:return y;case _e:return\"[object Promise]\";case Se:return T;case be:return\"[object WeakMap]\"}return t});var qe=De(function(){return arguments}())?De:function(e){return Qe(e)&&Y.call(e,\"callee\")&&!oe.call(e,\"callee\")},Ke=Array.isArray;var We=ue||function(){return!1};function ze(e){if(!Xe(e))return!1;var t=Pe(e);return t==m||t==v||t==d||t==b}function $e(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=c}function Xe(e){var t=r(e);return null!=e&&(\"object\"==t||\"function\"==t)}function Qe(e){return null!=e&&\"object\"==r(e)}var Ye=H?function(e){return function(t){return e(t)}}(H):function(e){return Qe(e)&&$e(e.length)&&!!P[Pe(e)]};function Ze(e){return null!=(t=e)&&$e(t.length)&&!ze(t)?Oe(e):Me(e);var t}n.exports=function(e,t){return Ne(e,t)}}).call(this,n(43),n(56)(e))},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return b});var r=n(1),i=n(8),o=n(57),a=n.n(o),s=n(70),c=n.n(s),u=n(4),l=n(17),d=n(2),p=n(9),h=n(7),f=n.n(h),m=n(14),v=n.n(m),y=n(5),g=n(0),_=n.n(g),S=Object(u.getLogger)(e);function b(e){this.conference=e,this.xmppListeners={},e.on(d.TRACK_MUTE_CHANGED,function(t){if(t.isLocal()&&e.statistics){var n=t.isP2P?e.p2pJingleSession:e.jvbJingleSession,r=n&&n.peerconnection||null;e.statistics.sendMuteEvent(r,t.isMuted(),t.getType())}})}b.prototype.setupChatRoomListeners=function(){var e=this,t=this.conference,n=t.room;this.chatRoomForwarder=new c.a(n,this.conference.eventEmitter),n.addListener(_.a.ICE_RESTARTING,function(e){e.isP2P||t.rtc.closeBridgeChannel()}),n.addListener(_.a.ICE_RESTART_SUCCESS,function(e,n){!e.isP2P&&t._setBridgeChannel(n,e.peerconnection)}),n.addListener(_.a.AUDIO_MUTED_BY_FOCUS,function(e){y.a.sendAnalytics(Object(i.I)()),t.mutedByFocusActor=e,t.rtc.setAudioMute(!0).then(function(){t.isMutedByFocus=!0,t.mutedByFocusActor=null}).catch(function(e){t.mutedByFocusActor=null,S.warn(\"Error while audio muting due to focus request\",e)})}),this.chatRoomForwarder.forward(_.a.SUBJECT_CHANGED,d.SUBJECT_CHANGED),this.chatRoomForwarder.forward(_.a.MUC_JOINED,d.CONFERENCE_JOINED),n.addListener(_.a.MUC_JOINED,function(){e.conference.isJvbConnectionInterrupted=!1,Object.keys(n.connectionTimes).forEach(function(e){var t=Object(i.A)(\"conference_\".concat(e),{value:n.connectionTimes[e]});y.a.sendAnalytics(t)}),Object.keys(n.xmpp.connectionTimes).forEach(function(e){var t=Object(i.A)(\"xmpp_\".concat(e),{value:n.xmpp.connectionTimes[e]});y.a.sendAnalytics(t)})}),n.addListener(_.a.RENEGOTIATION_FAILED,function(e,n){n.isP2P||t.eventEmitter.emit(d.CONFERENCE_FAILED,l.OFFER_ANSWER_FAILED,e)}),this.chatRoomForwarder.forward(_.a.ROOM_JOIN_ERROR,d.CONFERENCE_FAILED,l.CONNECTION_ERROR),this.chatRoomForwarder.forward(_.a.ROOM_CONNECT_ERROR,d.CONFERENCE_FAILED,l.CONNECTION_ERROR),this.chatRoomForwarder.forward(_.a.ROOM_CONNECT_NOT_ALLOWED_ERROR,d.CONFERENCE_FAILED,l.NOT_ALLOWED_ERROR),this.chatRoomForwarder.forward(_.a.ROOM_MAX_USERS_ERROR,d.CONFERENCE_FAILED,l.CONFERENCE_MAX_USERS),this.chatRoomForwarder.forward(_.a.PASSWORD_REQUIRED,d.CONFERENCE_FAILED,l.PASSWORD_REQUIRED),this.chatRoomForwarder.forward(_.a.AUTHENTICATION_REQUIRED,d.CONFERENCE_FAILED,l.AUTHENTICATION_REQUIRED),this.chatRoomForwarder.forward(_.a.BRIDGE_DOWN,d.CONFERENCE_FAILED,l.VIDEOBRIDGE_NOT_AVAILABLE),n.addListener(_.a.BRIDGE_DOWN,function(){return y.a.sendAnalytics(Object(i.y)())}),this.chatRoomForwarder.forward(_.a.RESERVATION_ERROR,d.CONFERENCE_FAILED,l.RESERVATION_ERROR),this.chatRoomForwarder.forward(_.a.GRACEFUL_SHUTDOWN,d.CONFERENCE_FAILED,l.GRACEFUL_SHUTDOWN),n.addListener(_.a.CONNECTION_ICE_FAILED,function(e){t._onIceConnectionFailed(e)}),this.chatRoomForwarder.forward(_.a.MUC_DESTROYED,d.CONFERENCE_FAILED,l.CONFERENCE_DESTROYED),this.chatRoomForwarder.forward(_.a.CHAT_ERROR_RECEIVED,d.CONFERENCE_ERROR,l.CHAT_ERROR),this.chatRoomForwarder.forward(_.a.FOCUS_DISCONNECTED,d.CONFERENCE_FAILED,l.FOCUS_DISCONNECTED),n.addListener(_.a.FOCUS_LEFT,function(){y.a.sendAnalytics(Object(i.C)()),t.eventEmitter.emit(d.CONFERENCE_FAILED,l.FOCUS_LEFT)}),n.addListener(_.a.SESSION_ACCEPT_TIMEOUT,function(e){y.a.sendAnalyticsAndLog(Object(i.E)(i.b,{p2p:e.isP2P}))}),this.chatRoomForwarder.forward(_.a.RECORDER_STATE_CHANGED,d.RECORDER_STATE_CHANGED),this.chatRoomForwarder.forward(_.a.TRANSCRIPTION_STATUS_CHANGED,d.TRANSCRIPTION_STATUS_CHANGED),this.chatRoomForwarder.forward(_.a.VIDEO_SIP_GW_AVAILABILITY_CHANGED,d.VIDEO_SIP_GW_AVAILABILITY_CHANGED),this.chatRoomForwarder.forward(_.a.VIDEO_SIP_GW_SESSION_STATE_CHANGED,d.VIDEO_SIP_GW_SESSION_STATE_CHANGED),this.chatRoomForwarder.forward(_.a.PHONE_NUMBER_CHANGED,d.PHONE_NUMBER_CHANGED),n.setParticipantPropertyListener(function(e,n){var r=t.getParticipantById(n);r&&r.setProperty(e.tagName.substring(\"jitsi_participant_\".length),e.value)}),n.addListener(_.a.KICKED,t.onMemberKicked.bind(t)),n.addListener(_.a.SUSPEND_DETECTED,t.onSuspendDetected.bind(t)),this.chatRoomForwarder.forward(_.a.MUC_LOCK_CHANGED,d.LOCK_STATE_CHANGED),n.addListener(_.a.MUC_MEMBER_JOINED,t.onMemberJoined.bind(t)),n.addListener(_.a.MUC_MEMBER_BOT_TYPE_CHANGED,t._onMemberBotTypeChanged.bind(t)),n.addListener(_.a.MUC_MEMBER_LEFT,t.onMemberLeft.bind(t)),this.chatRoomForwarder.forward(_.a.MUC_LEFT,d.CONFERENCE_LEFT),n.addListener(_.a.DISPLAY_NAME_CHANGED,t.onDisplayNameChanged.bind(t)),n.addListener(_.a.LOCAL_ROLE_CHANGED,function(e){t.onLocalRoleChanged(e),t.statistics&&t.isModerator()&&t.on(d.RECORDER_STATE_CHANGED,function(e){var t={error:e.getError(),id:\"recorder_status\",status:e.getStatus()};y.a.sendLog(JSON.stringify(t))})}),n.addListener(_.a.MUC_ROLE_CHANGED,t.onUserRoleChanged.bind(t)),n.addListener(a.a.IDENTITY_UPDATED,function(e,n){t.authEnabled=e,t.authIdentity=n,t.eventEmitter.emit(d.AUTH_STATUS_CHANGED,e,n)}),n.addListener(_.a.MESSAGE_RECEIVED,function(e,n,i,o,a){var s=r.Strophe.getResourceFromJid(e);t.eventEmitter.emit(d.MESSAGE_RECEIVED,s,i,a,n)}),n.addListener(_.a.PRIVATE_MESSAGE_RECEIVED,function(e,n,i,o,a){var s=r.Strophe.getResourceFromJid(e);t.eventEmitter.emit(d.PRIVATE_MESSAGE_RECEIVED,s,i,a)}),n.addListener(_.a.PRESENCE_STATUS,function(e,n){var i=r.Strophe.getResourceFromJid(e),o=t.getParticipantById(i);o&&o._status!==n&&(o._status=n,t.eventEmitter.emit(d.USER_STATUS_CHANGED,i,n))}),n.addListener(_.a.JSON_MESSAGE_RECEIVED,function(e,n){var i=r.Strophe.getResourceFromJid(e),o=t.getParticipantById(i);o?t.eventEmitter.emit(d.ENDPOINT_MESSAGE_RECEIVED,o,n):S.warn(\"Ignored XMPPEvents.JSON_MESSAGE_RECEIVED for not existing \"+\"participant: \".concat(e),n)}),n.addPresenceListener(\"startmuted\",function(e,n){var r=!1;if(t.myUserId()===n&&t.isModerator())r=!0;else{var i=t.getParticipantById(n);i&&i.isModerator()&&(r=!0)}if(r){var o=\"true\"===e.attributes.audio,a=\"true\"===e.attributes.video,s=!1;o!==t.startMutedPolicy.audio&&(t.startMutedPolicy.audio=o,s=!0),a!==t.startMutedPolicy.video&&(t.startMutedPolicy.video=a,s=!0),s&&t.eventEmitter.emit(d.START_MUTED_POLICY_CHANGED,t.startMutedPolicy)}}),t.statistics&&(n.addListener(_.a.CONNECTION_ICE_FAILED,function(e){t.statistics.sendIceConnectionFailedEvent(e.peerconnection)}),n.addListener(_.a.ADD_ICE_CANDIDATE_FAILED,function(e,n){t.statistics.sendAddIceCandidateFailed(e,n)}))},b.prototype.setupRTCListeners=function(){var e=this.conference,t=e.rtc;t.addListener(f.a.REMOTE_TRACK_ADDED,e.onRemoteTrackAdded.bind(e)),t.addListener(f.a.REMOTE_TRACK_REMOVED,e.onRemoteTrackRemoved.bind(e)),t.addListener(f.a.DOMINANT_SPEAKER_CHANGED,function(t){e.lastDominantSpeaker!==t&&e.room&&(e.lastDominantSpeaker=t,e.eventEmitter.emit(d.DOMINANT_SPEAKER_CHANGED,t),e.statistics&&e.myUserId()===t&&e.statistics.sendDominantSpeakerEvent(e.room.roomjid))}),t.addListener(f.a.DATA_CHANNEL_OPEN,function(){var t=window.performance.now(),n=\"data.channel.opened\";S.log(\"(TIME) \".concat(n),t),e.room.connectionTimes[n]=t,y.a.sendAnalytics(Object(i.A)(n,{value:t})),e.eventEmitter.emit(d.DATA_CHANNEL_OPENED)}),t.addListener(f.a.ENDPOINT_MESSAGE_RECEIVED,function(t,n){var r=e.getParticipantById(t);r?e.eventEmitter.emit(d.ENDPOINT_MESSAGE_RECEIVED,r,n):S.warn(\"Ignored ENDPOINT_MESSAGE_RECEIVED for not existing \"+\"participant: \".concat(t),n)}),t.addListener(f.a.LOCAL_UFRAG_CHANGED,function(e,t){e.isP2P||y.a.sendLog(JSON.stringify({id:\"local_ufrag\",value:t}))}),t.addListener(f.a.REMOTE_UFRAG_CHANGED,function(e,t){e.isP2P||y.a.sendLog(JSON.stringify({id:\"remote_ufrag\",value:t}))}),t.addListener(f.a.CREATE_ANSWER_FAILED,function(t,n){e.statistics.sendCreateAnswerFailed(t,n),n.isP2P||e.eventEmitter.emit(d.CONFERENCE_FAILED,l.OFFER_ANSWER_FAILED,t)}),t.addListener(f.a.CREATE_OFFER_FAILED,function(t,n){e.statistics.sendCreateOfferFailed(t,n),n.isP2P||e.eventEmitter.emit(d.CONFERENCE_FAILED,l.OFFER_ANSWER_FAILED,t)}),t.addListener(f.a.SET_LOCAL_DESCRIPTION_FAILED,function(t,n){e.statistics.sendSetLocalDescFailed(t,n),n.isP2P||e.eventEmitter.emit(d.CONFERENCE_FAILED,l.OFFER_ANSWER_FAILED,t)}),t.addListener(f.a.SET_REMOTE_DESCRIPTION_FAILED,function(t,n){e.statistics.sendSetRemoteDescFailed(t,n),n.isP2P||e.eventEmitter.emit(d.CONFERENCE_FAILED,l.OFFER_ANSWER_FAILED,t)}),t.addListener(f.a.LOCAL_TRACK_SSRC_UPDATED,function(t,n){t.isVideoTrack()&&t.videoType===v.a.DESKTOP&&e.statistics.sendScreenSharingEvent(!0,n)})},b.prototype.removeXMPPListeners=function(){var e=this,t=this.conference;t.xmpp.caps.removeListener(_.a.PARTCIPANT_FEATURES_CHANGED,this.xmppListeners[_.a.PARTCIPANT_FEATURES_CHANGED]),delete this.xmppListeners[_.a.PARTCIPANT_FEATURES_CHANGED],Object.keys(this.xmppListeners).forEach(function(n){t.xmpp.removeListener(n,e.xmppListeners[n])}),this.xmppListeners={}},b.prototype.setupXMPPListeners=function(){var e=this.conference,t=function(t){var n=e.getParticipantById(r.Strophe.getResourceFromJid(t));n&&e.eventEmitter.emit(d.PARTCIPANT_FEATURES_CHANGED,n)};e.xmpp.caps.addListener(_.a.PARTCIPANT_FEATURES_CHANGED,t),this.xmppListeners[_.a.PARTCIPANT_FEATURES_CHANGED]=t,this._addConferenceXMPPListener(_.a.CALL_INCOMING,e.onIncomingCall.bind(e)),this._addConferenceXMPPListener(_.a.CALL_ACCEPTED,e.onCallAccepted.bind(e)),this._addConferenceXMPPListener(_.a.TRANSPORT_INFO,e.onTransportInfo.bind(e)),this._addConferenceXMPPListener(_.a.CALL_ENDED,e.onCallEnded.bind(e)),this._addConferenceXMPPListener(_.a.START_MUTED_FROM_FOCUS,function(t,n){e.options.config.ignoreStartMuted||(e.startAudioMuted=t,e.startVideoMuted=n,e.getLocalTracks().forEach(function(t){switch(t.getType()){case p.a:e.startAudioMuted&&t.mute();break;case p.b:e.startVideoMuted&&t.mute()}}),e.eventEmitter.emit(d.STARTED_MUTED))})},b.prototype._addConferenceXMPPListener=function(e,t){this.xmppListeners[e]=t,this.conference.xmpp.addListener(e,t)},b.prototype.setupStatisticsListeners=function(){var e=this.conference;e.statistics&&(e.statistics.addAudioLevelListener(function(t,n,r,i){e.rtc.setAudioLevel(t,n,r,i)}),e.statistics.addBeforeDisposedListener(function(){e.eventEmitter.emit(d.BEFORE_STATISTICS_DISPOSED)}),e.options.config.startSilent||e.statistics.addByteSentStatsListener(function(t,n){e.getLocalTracks(p.a).forEach(function(e){var r=t.getLocalSSRC(e);r&&n.hasOwnProperty(r)&&e._onByteSentStatsReceived(t,n[r])})}))}}).call(this,\"JitsiConferenceEventManager.js\")},function(e,t){function n(e,t){if(!e||!t||\"function\"!=typeof e.addListener||\"function\"!=typeof t.emit)throw new Error(\"Invalid arguments passed to EventEmitterForwarder\");this.src=e,this.dest=t}n.prototype.forward=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=t[0];t[0]=this.dest,this.src.addListener(r,Function.prototype.bind.apply(this.dest.emit,t))},e.exports=n},function(e,t,n){\"use strict\";(function(e){var r=n(8),i=n(4),o=n(3),a=n(25);function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=Object(i.getLogger)(e),d=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.reset()}var t,n,i;return t=e,(n=[{key:\"reset\",value:function(){this.disposed=!1,this.analyticsHandlers=new Set,this.cache=[],this.permanentProperties={},this.conferenceName=\"\",this.addPermanentProperties({callstats_name:a.a.callStatsUserName,user_agent:navigator.userAgent,browser_name:o.a.getName()})}},{key:\"dispose\",value:function(){l.warn(\"Disposing of analytics adapter.\"),this.analyticsHandlers&&this.analyticsHandlers.size>0&&this.analyticsHandlers.forEach(function(e){\"function\"==typeof e.dispose&&e.dispose()}),this.setAnalyticsHandlers([]),this.disposed=!0}},{key:\"setAnalyticsHandlers\",value:function(e){var t=this;if(!this.disposed){this.analyticsHandlers=new Set(e),this._setUserProperties();var n=this.cache;this.cache=null,n&&n.forEach(function(e){return t._sendEvent(e)})}}},{key:\"_setUserProperties\",value:function(){var e=this;this.analyticsHandlers.forEach(function(t){try{t.setUserProperties(e.permanentProperties)}catch(e){l.warn(\"Error in setUserProperties method of one of the \"+\"analytics handlers: \".concat(e))}})}},{key:\"addPermanentProperties\",value:function(e){this.permanentProperties=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){c(e,t,n[t])})}return e}({},this.permanentProperties,e),this._setUserProperties()}},{key:\"setConferenceName\",value:function(e){this.conferenceName=e,this.addPermanentProperties({conference_name:e})}},{key:\"sendEvent\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.disposed){var n=null;\"string\"==typeof e?n={type:r.s,action:e,actionSubject:e,source:e,attributes:t}:\"object\"===s(e)&&(n=e),this._verifyRequiredFields(n)?this._sendEvent(n):l.error(\"Dropping a mis-formatted event: \".concat(JSON.stringify(n)))}}},{key:\"_verifyRequiredFields\",value:function(e){if(!e)return!1;e.type||(e.type=r.s);var t=e.type;return t!==r.s&&t!==r.t&&t!==r.v&&t!==r.u?(l.error(\"Unknown event type: \".concat(t)),!1):t===r.t?Boolean(e.name):(e.action=e.action||e.name||e.actionSubject,e.actionSubject=e.actionSubject||e.name||e.action,e.source=e.source||e.name||e.action||e.actionSubject,e.action&&e.actionSubject&&e.source?!!(t!==r.u||(e.objectType=e.objectType||\"generic-object-type\",e.containerType=e.containerType||\"conference\",\"conference\"!==e.containerType||e.containerId||(e.containerId=this.conferenceName),e.objectType&&e.objectId&&e.containerType&&e.containerId))||(l.error(\"Required field missing (containerId, containerType, objectId or objectType)\"),!1):(l.error(\"Required field missing (action, actionSubject or source)\"),!1))}},{key:\"_maybeCacheEvent\",value:function(e){return!!this.cache&&(this.cache.push(e),this.cache.length>100&&this.cache.splice(0,1),!0)}},{key:\"_sendEvent\",value:function(e){this._maybeCacheEvent(e)||this.analyticsHandlers.forEach(function(t){try{t.sendEvent(e)}catch(e){l.warn(\"Error sending analytics event: \".concat(e))}})}}])&&u(t.prototype,n),i&&u(t,i),e}();t.a=new d}).call(this,\"modules\\\\statistics\\\\AnalyticsAdapter.js\")},function(e,t,n){\"use strict\";(function(e,r){n.d(t,\"a\",function(){return p});var i=n(4),o=n(19);function a(e){return(a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t){return!t||\"object\"!==a(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var d=Object(i.getLogger)(e),p=function(e){function t(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),e=c(this,u(t).call(this)),d.info(\"This appears to be \".concat(e.getName(),\", ver: \").concat(e.getVersion())),e}var n,i,a;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,o[\"a\"]),n=t,(i=[{key:\"doesVideoMuteByStreamRemove\",value:function(){return!(this.isFirefox()||this.isEdge()||this.isReactNative()||this.isSafariWithWebrtc())}},{key:\"supportsP2P\",value:function(){return!this.isEdge()&&!this.isFirefox()}},{key:\"isChromiumBased\",value:function(){return this.isChrome()||this.isElectron()||this.isNWJS()||this.isOpera()}},{key:\"isSafariWithWebrtc\",value:function(){return this.isSafari()&&!this.isVersionLessThan(\"11\")}},{key:\"isSafariWithVP8\",value:function(){return this.isSafari()&&!this.isVersionLessThan(\"12.1\")}},{key:\"isSupported\",value:function(){return this.isChromiumBased()||this.isFirefox()||this.isReactNative()||this.isSafariWithWebrtc()}},{key:\"isUserInteractionRequiredForUnmute\",value:function(){return this.isFirefox()||this.isSafari()}},{key:\"supportsVideoMuteOnConnInterrupted\",value:function(){return this.isChromiumBased()||this.isReactNative()||this.isSafariWithVP8()}},{key:\"supportsBandwidthStatistics\",value:function(){return!this.isFirefox()&&!this.isEdge()&&!this.isSafariWithWebrtc()}},{key:\"supportsDataChannels\",value:function(){return!this.isEdge()}},{key:\"supportsDeviceChangeEvent\",value:function(){return navigator.mediaDevices&&void 0!==navigator.mediaDevices.ondevicechange&&void 0!==navigator.mediaDevices.addEventListener}},{key:\"supportsRtpStatistics\",value:function(){return this.isChromiumBased()||this.isEdge()||this.isFirefox()||this.isReactNative()||this.isSafariWithWebrtc()}},{key:\"supportsLocalCandidateRttStatistics\",value:function(){return this.isChromiumBased()||this.isReactNative()||this.isSafariWithVP8()}},{key:\"supportsRTTStatistics\",value:function(){return!this.isFirefox()&&!this.isEdge()}},{key:\"supportsRtpSender\",value:function(){return this.isFirefox()||this.isSafariWithVP8()}},{key:\"supportsRtx\",value:function(){return!this.isFirefox()&&!this.usesUnifiedPlan()}},{key:\"supportsSimulcast\",value:function(){return this.isChromiumBased()||this.isFirefox()||this.isSafariWithVP8()||this.isReactNative()}},{key:\"supportsVideo\",value:function(){return!this.isSafariWithWebrtc()||this.isSafariWithVP8()&&this.usesPlanB()}},{key:\"usesPlanB\",value:function(){return!this.usesUnifiedPlan()}},{key:\"usesUnifiedPlan\",value:function(){return!!this.isFirefox()||!(!this.isSafariWithVP8()||void 0===window.RTCRtpTransceiver)&&Object.keys(RTCRtpTransceiver.prototype).indexOf(\"currentDirection\")>-1}},{key:\"usesNewGumFlow\",value:function(){return this.isChrome()?!this.isVersionLessThan(61):!(!this.isFirefox()&&!this.isSafariWithWebrtc())||!!this.isChromiumBased()&&this._getChromiumBasedVersion()>=61}},{key:\"usesAdapter\",value:function(){return this.usesNewGumFlow()||this.isEdge()}},{key:\"supportsGetDisplayMedia\",value:function(){return void 0!==navigator.getDisplayMedia||void 0!==navigator.mediaDevices&&void 0!==navigator.mediaDevices.getDisplayMedia}},{key:\"supportsSdpSemantics\",value:function(){return this.isChromiumBased()&&this._getChromiumBasedVersion()>=65}},{key:\"_getChromiumBasedVersion\",value:function(){if(this.isChromiumBased()){if(this.isNWJS())return Number.parseInt(r.versions.chromium,10);var e=navigator.userAgent;if(e.match(/Chrome/))return Number.parseInt(e.match(/Chrome\\/([\\d.]+)/)[1],10)}return-1}}])&&s(n.prototype,i),a&&s(n,a),t}()}).call(this,\"modules\\\\browser\\\\BrowserCapabilities.js\",n(48))},function(module,exports,__webpack_require__){(function(process,global,module){var __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(e){return(_typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}\n/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n!function(){\"use strict\";var ERROR=\"input is invalid type\",WINDOW=\"object\"===(\"undefined\"==typeof window?\"undefined\":_typeof(window)),root=WINDOW?window:{};root.JS_MD5_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&\"object\"===(\"undefined\"==typeof self?\"undefined\":_typeof(self)),NODE_JS=!root.JS_MD5_NO_NODE_JS&&\"object\"===(void 0===process?\"undefined\":_typeof(process))&&process.versions&&process.versions.node;NODE_JS?root=global:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_MD5_NO_COMMON_JS&&\"object\"===_typeof(module)&&module.exports,AMD=__webpack_require__(123),ARRAY_BUFFER=!root.JS_MD5_NO_ARRAY_BUFFER&&\"undefined\"!=typeof ArrayBuffer,HEX_CHARS=\"0123456789abcdef\".split(\"\"),EXTRA=[128,32768,8388608,-2147483648],SHIFT=[0,8,16,24],OUTPUT_TYPES=[\"hex\",\"array\",\"digest\",\"buffer\",\"arrayBuffer\",\"base64\"],BASE64_ENCODE_CHAR=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\"),blocks=[],buffer8;if(ARRAY_BUFFER){var buffer=new ArrayBuffer(68);buffer8=new Uint8Array(buffer),blocks=new Uint32Array(buffer)}!root.JS_MD5_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return\"[object Array]\"===Object.prototype.toString.call(e)}),!ARRAY_BUFFER||!root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return\"object\"===_typeof(e)&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e){return function(t){return new Md5(!0).update(t)[e]()}},createMethod=function(){var e=createOutputMethod(\"hex\");NODE_JS&&(e=nodeWrap(e)),e.create=function(){return new Md5},e.update=function(t){return e.create().update(t)};for(var t=0;t<OUTPUT_TYPES.length;++t){var n=OUTPUT_TYPES[t];e[n]=createOutputMethod(n)}return e},nodeWrap=function nodeWrap(method){var crypto=eval(\"require('crypto')\"),Buffer=eval(\"require('buffer').Buffer\"),nodeMethod=function(e){if(\"string\"==typeof e)return crypto.createHash(\"md5\").update(e,\"utf8\").digest(\"hex\");if(null==e)throw ERROR;return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(\"md5\").update(new Buffer(e)).digest(\"hex\"):method(e)};return nodeMethod};function Md5(e){if(e)blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks,this.buffer8=buffer8;else if(ARRAY_BUFFER){var t=new ArrayBuffer(68);this.buffer8=new Uint8Array(t),this.blocks=new Uint32Array(t)}else this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];this.h0=this.h1=this.h2=this.h3=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0}Md5.prototype.update=function(e){if(!this.finalized){var t,n=_typeof(e);if(\"string\"!==n){if(\"object\"!==n)throw ERROR;if(null===e)throw ERROR;if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw ERROR;t=!0}for(var r,i,o=0,a=e.length,s=this.blocks,c=this.buffer8;o<a;){if(this.hashed&&(this.hashed=!1,s[0]=s[16],s[16]=s[1]=s[2]=s[3]=s[4]=s[5]=s[6]=s[7]=s[8]=s[9]=s[10]=s[11]=s[12]=s[13]=s[14]=s[15]=0),t)if(ARRAY_BUFFER)for(i=this.start;o<a&&i<64;++o)c[i++]=e[o];else for(i=this.start;o<a&&i<64;++o)s[i>>2]|=e[o]<<SHIFT[3&i++];else if(ARRAY_BUFFER)for(i=this.start;o<a&&i<64;++o)(r=e.charCodeAt(o))<128?c[i++]=r:r<2048?(c[i++]=192|r>>6,c[i++]=128|63&r):r<55296||r>=57344?(c[i++]=224|r>>12,c[i++]=128|r>>6&63,c[i++]=128|63&r):(r=65536+((1023&r)<<10|1023&e.charCodeAt(++o)),c[i++]=240|r>>18,c[i++]=128|r>>12&63,c[i++]=128|r>>6&63,c[i++]=128|63&r);else for(i=this.start;o<a&&i<64;++o)(r=e.charCodeAt(o))<128?s[i>>2]|=r<<SHIFT[3&i++]:r<2048?(s[i>>2]|=(192|r>>6)<<SHIFT[3&i++],s[i>>2]|=(128|63&r)<<SHIFT[3&i++]):r<55296||r>=57344?(s[i>>2]|=(224|r>>12)<<SHIFT[3&i++],s[i>>2]|=(128|r>>6&63)<<SHIFT[3&i++],s[i>>2]|=(128|63&r)<<SHIFT[3&i++]):(r=65536+((1023&r)<<10|1023&e.charCodeAt(++o)),s[i>>2]|=(240|r>>18)<<SHIFT[3&i++],s[i>>2]|=(128|r>>12&63)<<SHIFT[3&i++],s[i>>2]|=(128|r>>6&63)<<SHIFT[3&i++],s[i>>2]|=(128|63&r)<<SHIFT[3&i++]);this.lastByteIndex=i,this.bytes+=i-this.start,i>=64?(this.start=i-64,this.hash(),this.hashed=!0):this.start=i}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Md5.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[t>>2]|=EXTRA[3&t],t>=56&&(this.hashed||this.hash(),e[0]=e[16],e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.bytes<<3,e[15]=this.hBytes<<3|this.bytes>>>29,this.hash()}},Md5.prototype.hash=function(){var e,t,n,r,i,o,a=this.blocks;this.first?t=((t=((e=((e=a[0]-680876937)<<7|e>>>25)-271733879<<0)^(n=((n=(-271733879^(r=((r=(-1732584194^2004318071&e)+a[1]-117830708)<<12|r>>>20)+e<<0)&(-271733879^e))+a[2]-1126478375)<<17|n>>>15)+r<<0)&(r^e))+a[3]-1316259209)<<22|t>>>10)+n<<0:(e=this.h0,t=this.h1,n=this.h2,t=((t+=((e=((e+=((r=this.h3)^t&(n^r))+a[0]-680876936)<<7|e>>>25)+t<<0)^(n=((n+=(t^(r=((r+=(n^e&(t^n))+a[1]-389564586)<<12|r>>>20)+e<<0)&(e^t))+a[2]+606105819)<<17|n>>>15)+r<<0)&(r^e))+a[3]-1044525330)<<22|t>>>10)+n<<0),t=((t+=((e=((e+=(r^t&(n^r))+a[4]-176418897)<<7|e>>>25)+t<<0)^(n=((n+=(t^(r=((r+=(n^e&(t^n))+a[5]+1200080426)<<12|r>>>20)+e<<0)&(e^t))+a[6]-1473231341)<<17|n>>>15)+r<<0)&(r^e))+a[7]-45705983)<<22|t>>>10)+n<<0,t=((t+=((e=((e+=(r^t&(n^r))+a[8]+1770035416)<<7|e>>>25)+t<<0)^(n=((n+=(t^(r=((r+=(n^e&(t^n))+a[9]-1958414417)<<12|r>>>20)+e<<0)&(e^t))+a[10]-42063)<<17|n>>>15)+r<<0)&(r^e))+a[11]-1990404162)<<22|t>>>10)+n<<0,t=((t+=((e=((e+=(r^t&(n^r))+a[12]+1804603682)<<7|e>>>25)+t<<0)^(n=((n+=(t^(r=((r+=(n^e&(t^n))+a[13]-40341101)<<12|r>>>20)+e<<0)&(e^t))+a[14]-1502002290)<<17|n>>>15)+r<<0)&(r^e))+a[15]+1236535329)<<22|t>>>10)+n<<0,t=((t+=((r=((r+=(t^n&((e=((e+=(n^r&(t^n))+a[1]-165796510)<<5|e>>>27)+t<<0)^t))+a[6]-1069501632)<<9|r>>>23)+e<<0)^e&((n=((n+=(e^t&(r^e))+a[11]+643717713)<<14|n>>>18)+r<<0)^r))+a[0]-373897302)<<20|t>>>12)+n<<0,t=((t+=((r=((r+=(t^n&((e=((e+=(n^r&(t^n))+a[5]-701558691)<<5|e>>>27)+t<<0)^t))+a[10]+38016083)<<9|r>>>23)+e<<0)^e&((n=((n+=(e^t&(r^e))+a[15]-660478335)<<14|n>>>18)+r<<0)^r))+a[4]-405537848)<<20|t>>>12)+n<<0,t=((t+=((r=((r+=(t^n&((e=((e+=(n^r&(t^n))+a[9]+568446438)<<5|e>>>27)+t<<0)^t))+a[14]-1019803690)<<9|r>>>23)+e<<0)^e&((n=((n+=(e^t&(r^e))+a[3]-187363961)<<14|n>>>18)+r<<0)^r))+a[8]+1163531501)<<20|t>>>12)+n<<0,t=((t+=((r=((r+=(t^n&((e=((e+=(n^r&(t^n))+a[13]-1444681467)<<5|e>>>27)+t<<0)^t))+a[2]-51403784)<<9|r>>>23)+e<<0)^e&((n=((n+=(e^t&(r^e))+a[7]+1735328473)<<14|n>>>18)+r<<0)^r))+a[12]-1926607734)<<20|t>>>12)+n<<0,t=((t+=((o=(r=((r+=((i=t^n)^(e=((e+=(i^r)+a[5]-378558)<<4|e>>>28)+t<<0))+a[8]-2022574463)<<11|r>>>21)+e<<0)^e)^(n=((n+=(o^t)+a[11]+1839030562)<<16|n>>>16)+r<<0))+a[14]-35309556)<<23|t>>>9)+n<<0,t=((t+=((o=(r=((r+=((i=t^n)^(e=((e+=(i^r)+a[1]-1530992060)<<4|e>>>28)+t<<0))+a[4]+1272893353)<<11|r>>>21)+e<<0)^e)^(n=((n+=(o^t)+a[7]-155497632)<<16|n>>>16)+r<<0))+a[10]-1094730640)<<23|t>>>9)+n<<0,t=((t+=((o=(r=((r+=((i=t^n)^(e=((e+=(i^r)+a[13]+681279174)<<4|e>>>28)+t<<0))+a[0]-358537222)<<11|r>>>21)+e<<0)^e)^(n=((n+=(o^t)+a[3]-722521979)<<16|n>>>16)+r<<0))+a[6]+76029189)<<23|t>>>9)+n<<0,t=((t+=((o=(r=((r+=((i=t^n)^(e=((e+=(i^r)+a[9]-640364487)<<4|e>>>28)+t<<0))+a[12]-421815835)<<11|r>>>21)+e<<0)^e)^(n=((n+=(o^t)+a[15]+530742520)<<16|n>>>16)+r<<0))+a[2]-995338651)<<23|t>>>9)+n<<0,t=((t+=((r=((r+=(t^((e=((e+=(n^(t|~r))+a[0]-198630844)<<6|e>>>26)+t<<0)|~n))+a[7]+1126891415)<<10|r>>>22)+e<<0)^((n=((n+=(e^(r|~t))+a[14]-1416354905)<<15|n>>>17)+r<<0)|~e))+a[5]-57434055)<<21|t>>>11)+n<<0,t=((t+=((r=((r+=(t^((e=((e+=(n^(t|~r))+a[12]+1700485571)<<6|e>>>26)+t<<0)|~n))+a[3]-1894986606)<<10|r>>>22)+e<<0)^((n=((n+=(e^(r|~t))+a[10]-1051523)<<15|n>>>17)+r<<0)|~e))+a[1]-2054922799)<<21|t>>>11)+n<<0,t=((t+=((r=((r+=(t^((e=((e+=(n^(t|~r))+a[8]+1873313359)<<6|e>>>26)+t<<0)|~n))+a[15]-30611744)<<10|r>>>22)+e<<0)^((n=((n+=(e^(r|~t))+a[6]-1560198380)<<15|n>>>17)+r<<0)|~e))+a[13]+1309151649)<<21|t>>>11)+n<<0,t=((t+=((r=((r+=(t^((e=((e+=(n^(t|~r))+a[4]-145523070)<<6|e>>>26)+t<<0)|~n))+a[11]-1120210379)<<10|r>>>22)+e<<0)^((n=((n+=(e^(r|~t))+a[2]+718787259)<<15|n>>>17)+r<<0)|~e))+a[9]-343485551)<<21|t>>>11)+n<<0,this.first?(this.h0=e+1732584193<<0,this.h1=t-271733879<<0,this.h2=n-1732584194<<0,this.h3=r+271733878<<0,this.first=!1):(this.h0=this.h0+e<<0,this.h1=this.h1+t<<0,this.h2=this.h2+n<<0,this.h3=this.h3+r<<0)},Md5.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,n=this.h2,r=this.h3;return HEX_CHARS[e>>4&15]+HEX_CHARS[15&e]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[15&t]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[15&n]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[15&r]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]},Md5.prototype.toString=Md5.prototype.hex,Md5.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,n=this.h2,r=this.h3;return[255&e,e>>8&255,e>>16&255,e>>24&255,255&t,t>>8&255,t>>16&255,t>>24&255,255&n,n>>8&255,n>>16&255,n>>24&255,255&r,r>>8&255,r>>16&255,r>>24&255]},Md5.prototype.array=Md5.prototype.digest,Md5.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(16),t=new Uint32Array(e);return t[0]=this.h0,t[1]=this.h1,t[2]=this.h2,t[3]=this.h3,e},Md5.prototype.buffer=Md5.prototype.arrayBuffer,Md5.prototype.base64=function(){for(var e,t,n,r=\"\",i=this.array(),o=0;o<15;)e=i[o++],t=i[o++],n=i[o++],r+=BASE64_ENCODE_CHAR[e>>>2]+BASE64_ENCODE_CHAR[63&(e<<4|t>>>4)]+BASE64_ENCODE_CHAR[63&(t<<2|n>>>6)]+BASE64_ENCODE_CHAR[63&n];return e=i[o],r+=BASE64_ENCODE_CHAR[e>>>2]+BASE64_ENCODE_CHAR[e<<4&63]+\"==\"};var exports=createMethod();COMMON_JS?module.exports=exports:(root.md5=exports,AMD&&(__WEBPACK_AMD_DEFINE_RESULT__=function(){return exports}.call(exports,__webpack_require__,exports,module),void 0===__WEBPACK_AMD_DEFINE_RESULT__||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)))}()}).call(this,__webpack_require__(48),__webpack_require__(43),__webpack_require__(56)(module))},function(e,t,n){var r=n(33),i=[\"Aaliyah\",\"Aaron\",\"Abagail\",\"Abbey\",\"Abbie\",\"Abbigail\",\"Abby\",\"Abdiel\",\"Abdul\",\"Abdullah\",\"Abe\",\"Abel\",\"Abelardo\",\"Abigail\",\"Abigale\",\"Abigayle\",\"Abner\",\"Abraham\",\"Ada\",\"Adah\",\"Adalberto\",\"Adaline\",\"Adam\",\"Adan\",\"Addie\",\"Addison\",\"Adela\",\"Adelbert\",\"Adele\",\"Adelia\",\"Adeline\",\"Adell\",\"Adella\",\"Adelle\",\"Aditya\",\"Adolf\",\"Adolfo\",\"Adolph\",\"Adolphus\",\"Adonis\",\"Adrain\",\"Adrian\",\"Adriana\",\"Adrianna\",\"Adriel\",\"Adrien\",\"Adrienne\",\"Afton\",\"Aglae\",\"Agnes\",\"Agustin\",\"Agustina\",\"Ahmad\",\"Ahmed\",\"Aida\",\"Aidan\",\"Aiden\",\"Aileen\",\"Aisha\",\"Aiyana\",\"Akeem\",\"Al\",\"Alaina\",\"Alan\",\"Alana\",\"Alanis\",\"Alanna\",\"Alayna\",\"Alba\",\"Albert\",\"Alberta\",\"Albertha\",\"Alberto\",\"Albin\",\"Albina\",\"Alda\",\"Alden\",\"Alec\",\"Aleen\",\"Alejandra\",\"Alejandrin\",\"Alek\",\"Alena\",\"Alene\",\"Alessandra\",\"Alessandro\",\"Alessia\",\"Aletha\",\"Alex\",\"Alexa\",\"Alexander\",\"Alexandra\",\"Alexandre\",\"Alexandrea\",\"Alexandria\",\"Alexandrine\",\"Alexandro\",\"Alexane\",\"Alexanne\",\"Alexie\",\"Alexis\",\"Alexys\",\"Alexzander\",\"Alf\",\"Alfonso\",\"Alfonzo\",\"Alford\",\"Alfred\",\"Alfreda\",\"Alfredo\",\"Ali\",\"Alia\",\"Alice\",\"Alicia\",\"Alisa\",\"Alisha\",\"Alison\",\"Alivia\",\"Aliya\",\"Aliyah\",\"Aliza\",\"Alize\",\"Allan\",\"Allen\",\"Allene\",\"Allie\",\"Allison\",\"Ally\",\"Alphonso\",\"Alta\",\"Althea\",\"Alva\",\"Alvah\",\"Alvena\",\"Alvera\",\"Alverta\",\"Alvina\",\"Alvis\",\"Alyce\",\"Alycia\",\"Alysa\",\"Alysha\",\"Alyson\",\"Alysson\",\"Amalia\",\"Amanda\",\"Amani\",\"Amara\",\"Amari\",\"Amaya\",\"Amber\",\"Ambrose\",\"Amelia\",\"Amelie\",\"Amely\",\"America\",\"Americo\",\"Amie\",\"Amina\",\"Amir\",\"Amira\",\"Amiya\",\"Amos\",\"Amparo\",\"Amy\",\"Amya\",\"Ana\",\"Anabel\",\"Anabelle\",\"Anahi\",\"Anais\",\"Anastacio\",\"Anastasia\",\"Anderson\",\"Andre\",\"Andreane\",\"Andreanne\",\"Andres\",\"Andrew\",\"Andy\",\"Angel\",\"Angela\",\"Angelica\",\"Angelina\",\"Angeline\",\"Angelita\",\"Angelo\",\"Angie\",\"Angus\",\"Anibal\",\"Anika\",\"Anissa\",\"Anita\",\"Aniya\",\"Aniyah\",\"Anjali\",\"Anna\",\"Annabel\",\"Annabell\",\"Annabelle\",\"Annalise\",\"Annamae\",\"Annamarie\",\"Anne\",\"Annetta\",\"Annette\",\"Annie\",\"Ansel\",\"Ansley\",\"Anthony\",\"Antoinette\",\"Antone\",\"Antonetta\",\"Antonette\",\"Antonia\",\"Antonietta\",\"Antonina\",\"Antonio\",\"Antwan\",\"Antwon\",\"Anya\",\"April\",\"Ara\",\"Araceli\",\"Aracely\",\"Arch\",\"Archibald\",\"Ardella\",\"Arden\",\"Ardith\",\"Arely\",\"Ari\",\"Ariane\",\"Arianna\",\"Aric\",\"Ariel\",\"Arielle\",\"Arjun\",\"Arlene\",\"Arlie\",\"Arlo\",\"Armand\",\"Armando\",\"Armani\",\"Arnaldo\",\"Arne\",\"Arno\",\"Arnold\",\"Arnoldo\",\"Arnulfo\",\"Aron\",\"Art\",\"Arthur\",\"Arturo\",\"Arvel\",\"Arvid\",\"Arvilla\",\"Aryanna\",\"Asa\",\"Asha\",\"Ashlee\",\"Ashleigh\",\"Ashley\",\"Ashly\",\"Ashlynn\",\"Ashton\",\"Ashtyn\",\"Asia\",\"Assunta\",\"Astrid\",\"Athena\",\"Aubree\",\"Aubrey\",\"Audie\",\"Audra\",\"Audreanne\",\"Audrey\",\"August\",\"Augusta\",\"Augustine\",\"Augustus\",\"Aurelia\",\"Aurelie\",\"Aurelio\",\"Aurore\",\"Austen\",\"Austin\",\"Austyn\",\"Autumn\",\"Ava\",\"Avery\",\"Avis\",\"Axel\",\"Ayana\",\"Ayden\",\"Ayla\",\"Aylin\",\"Baby\",\"Bailee\",\"Bailey\",\"Barbara\",\"Barney\",\"Baron\",\"Barrett\",\"Barry\",\"Bart\",\"Bartholome\",\"Barton\",\"Baylee\",\"Beatrice\",\"Beau\",\"Beaulah\",\"Bell\",\"Bella\",\"Belle\",\"Ben\",\"Benedict\",\"Benjamin\",\"Bennett\",\"Bennie\",\"Benny\",\"Benton\",\"Berenice\",\"Bernadette\",\"Bernadine\",\"Bernard\",\"Bernardo\",\"Berneice\",\"Bernhard\",\"Bernice\",\"Bernie\",\"Berniece\",\"Bernita\",\"Berry\",\"Bert\",\"Berta\",\"Bertha\",\"Bertram\",\"Bertrand\",\"Beryl\",\"Bessie\",\"Beth\",\"Bethany\",\"Bethel\",\"Betsy\",\"Bette\",\"Bettie\",\"Betty\",\"Bettye\",\"Beulah\",\"Beverly\",\"Bianka\",\"Bill\",\"Billie\",\"Billy\",\"Birdie\",\"Blair\",\"Blaise\",\"Blake\",\"Blanca\",\"Blanche\",\"Blaze\",\"Bo\",\"Bobbie\",\"Bobby\",\"Bonita\",\"Bonnie\",\"Boris\",\"Boyd\",\"Brad\",\"Braden\",\"Bradford\",\"Bradley\",\"Bradly\",\"Brady\",\"Braeden\",\"Brain\",\"Brandi\",\"Brando\",\"Brandon\",\"Brandt\",\"Brandy\",\"Brandyn\",\"Brannon\",\"Branson\",\"Brant\",\"Braulio\",\"Braxton\",\"Brayan\",\"Breana\",\"Breanna\",\"Breanne\",\"Brenda\",\"Brendan\",\"Brenden\",\"Brendon\",\"Brenna\",\"Brennan\",\"Brennon\",\"Brent\",\"Bret\",\"Brett\",\"Bria\",\"Brian\",\"Briana\",\"Brianne\",\"Brice\",\"Bridget\",\"Bridgette\",\"Bridie\",\"Brielle\",\"Brigitte\",\"Brionna\",\"Brisa\",\"Britney\",\"Brittany\",\"Brock\",\"Broderick\",\"Brody\",\"Brook\",\"Brooke\",\"Brooklyn\",\"Brooks\",\"Brown\",\"Bruce\",\"Bryana\",\"Bryce\",\"Brycen\",\"Bryon\",\"Buck\",\"Bud\",\"Buddy\",\"Buford\",\"Bulah\",\"Burdette\",\"Burley\",\"Burnice\",\"Buster\",\"Cade\",\"Caden\",\"Caesar\",\"Caitlyn\",\"Cale\",\"Caleb\",\"Caleigh\",\"Cali\",\"Calista\",\"Callie\",\"Camden\",\"Cameron\",\"Camila\",\"Camilla\",\"Camille\",\"Camren\",\"Camron\",\"Camryn\",\"Camylle\",\"Candace\",\"Candelario\",\"Candice\",\"Candida\",\"Candido\",\"Cara\",\"Carey\",\"Carissa\",\"Carlee\",\"Carleton\",\"Carley\",\"Carli\",\"Carlie\",\"Carlo\",\"Carlos\",\"Carlotta\",\"Carmel\",\"Carmela\",\"Carmella\",\"Carmelo\",\"Carmen\",\"Carmine\",\"Carol\",\"Carolanne\",\"Carole\",\"Carolina\",\"Caroline\",\"Carolyn\",\"Carolyne\",\"Carrie\",\"Carroll\",\"Carson\",\"Carter\",\"Cary\",\"Casandra\",\"Casey\",\"Casimer\",\"Casimir\",\"Casper\",\"Cassandra\",\"Cassandre\",\"Cassidy\",\"Cassie\",\"Catalina\",\"Caterina\",\"Catharine\",\"Catherine\",\"Cathrine\",\"Cathryn\",\"Cathy\",\"Cayla\",\"Ceasar\",\"Cecelia\",\"Cecil\",\"Cecile\",\"Cecilia\",\"Cedrick\",\"Celestine\",\"Celestino\",\"Celia\",\"Celine\",\"Cesar\",\"Chad\",\"Chadd\",\"Chadrick\",\"Chaim\",\"Chance\",\"Chandler\",\"Chanel\",\"Chanelle\",\"Charity\",\"Charlene\",\"Charles\",\"Charley\",\"Charlie\",\"Charlotte\",\"Chase\",\"Chasity\",\"Chauncey\",\"Chaya\",\"Chaz\",\"Chelsea\",\"Chelsey\",\"Chelsie\",\"Chesley\",\"Chester\",\"Chet\",\"Cheyanne\",\"Cheyenne\",\"Chloe\",\"Chris\",\"Christ\",\"Christa\",\"Christelle\",\"Christian\",\"Christiana\",\"Christina\",\"Christine\",\"Christop\",\"Christophe\",\"Christopher\",\"Christy\",\"Chyna\",\"Ciara\",\"Cicero\",\"Cielo\",\"Cierra\",\"Cindy\",\"Citlalli\",\"Clair\",\"Claire\",\"Clara\",\"Clarabelle\",\"Clare\",\"Clarissa\",\"Clark\",\"Claud\",\"Claude\",\"Claudia\",\"Claudie\",\"Claudine\",\"Clay\",\"Clemens\",\"Clement\",\"Clementina\",\"Clementine\",\"Clemmie\",\"Cleo\",\"Cleora\",\"Cleta\",\"Cletus\",\"Cleve\",\"Cleveland\",\"Clifford\",\"Clifton\",\"Clint\",\"Clinton\",\"Clotilde\",\"Clovis\",\"Cloyd\",\"Clyde\",\"Coby\",\"Cody\",\"Colby\",\"Cole\",\"Coleman\",\"Colin\",\"Colleen\",\"Collin\",\"Colt\",\"Colten\",\"Colton\",\"Columbus\",\"Concepcion\",\"Conner\",\"Connie\",\"Connor\",\"Conor\",\"Conrad\",\"Constance\",\"Constantin\",\"Consuelo\",\"Cooper\",\"Cora\",\"Coralie\",\"Corbin\",\"Cordelia\",\"Cordell\",\"Cordia\",\"Cordie\",\"Corene\",\"Corine\",\"Cornelius\",\"Cornell\",\"Corrine\",\"Cortez\",\"Cortney\",\"Cory\",\"Coty\",\"Courtney\",\"Coy\",\"Craig\",\"Crawford\",\"Creola\",\"Cristal\",\"Cristian\",\"Cristina\",\"Cristobal\",\"Cristopher\",\"Cruz\",\"Crystal\",\"Crystel\",\"Cullen\",\"Curt\",\"Curtis\",\"Cydney\",\"Cynthia\",\"Cyril\",\"Cyrus\",\"Dagmar\",\"Dahlia\",\"Daija\",\"Daisha\",\"Daisy\",\"Dakota\",\"Dale\",\"Dallas\",\"Dallin\",\"Dalton\",\"Damaris\",\"Dameon\",\"Damian\",\"Damien\",\"Damion\",\"Damon\",\"Dan\",\"Dana\",\"Dandre\",\"Dane\",\"D'angelo\",\"Dangelo\",\"Danial\",\"Daniela\",\"Daniella\",\"Danielle\",\"Danika\",\"Dannie\",\"Danny\",\"Dante\",\"Danyka\",\"Daphne\",\"Daphnee\",\"Daphney\",\"Darby\",\"Daren\",\"Darian\",\"Dariana\",\"Darien\",\"Dario\",\"Darion\",\"Darius\",\"Darlene\",\"Daron\",\"Darrel\",\"Darrell\",\"Darren\",\"Darrick\",\"Darrin\",\"Darrion\",\"Darron\",\"Darryl\",\"Darwin\",\"Daryl\",\"Dashawn\",\"Dasia\",\"Dave\",\"David\",\"Davin\",\"Davion\",\"Davon\",\"Davonte\",\"Dawn\",\"Dawson\",\"Dax\",\"Dayana\",\"Dayna\",\"Dayne\",\"Dayton\",\"Dean\",\"Deangelo\",\"Deanna\",\"Deborah\",\"Declan\",\"Dedric\",\"Dedrick\",\"Dee\",\"Deion\",\"Deja\",\"Dejah\",\"Dejon\",\"Dejuan\",\"Delaney\",\"Delbert\",\"Delfina\",\"Delia\",\"Delilah\",\"Dell\",\"Della\",\"Delmer\",\"Delores\",\"Delpha\",\"Delphia\",\"Delphine\",\"Delta\",\"Demarco\",\"Demarcus\",\"Demario\",\"Demetris\",\"Demetrius\",\"Demond\",\"Dena\",\"Denis\",\"Dennis\",\"Deon\",\"Deondre\",\"Deontae\",\"Deonte\",\"Dereck\",\"Derek\",\"Derick\",\"Deron\",\"Derrick\",\"Deshaun\",\"Deshawn\",\"Desiree\",\"Desmond\",\"Dessie\",\"Destany\",\"Destin\",\"Destinee\",\"Destiney\",\"Destini\",\"Destiny\",\"Devan\",\"Devante\",\"Deven\",\"Devin\",\"Devon\",\"Devonte\",\"Devyn\",\"Dewayne\",\"Dewitt\",\"Dexter\",\"Diamond\",\"Diana\",\"Dianna\",\"Diego\",\"Dillan\",\"Dillon\",\"Dimitri\",\"Dina\",\"Dino\",\"Dion\",\"Dixie\",\"Dock\",\"Dolly\",\"Dolores\",\"Domenic\",\"Domenica\",\"Domenick\",\"Domenico\",\"Domingo\",\"Dominic\",\"Dominique\",\"Don\",\"Donald\",\"Donato\",\"Donavon\",\"Donna\",\"Donnell\",\"Donnie\",\"Donny\",\"Dora\",\"Dorcas\",\"Dorian\",\"Doris\",\"Dorothea\",\"Dorothy\",\"Dorris\",\"Dortha\",\"Dorthy\",\"Doug\",\"Douglas\",\"Dovie\",\"Doyle\",\"Drake\",\"Drew\",\"Duane\",\"Dudley\",\"Dulce\",\"Duncan\",\"Durward\",\"Dustin\",\"Dusty\",\"Dwight\",\"Dylan\",\"Earl\",\"Earlene\",\"Earline\",\"Earnest\",\"Earnestine\",\"Easter\",\"Easton\",\"Ebba\",\"Ebony\",\"Ed\",\"Eda\",\"Edd\",\"Eddie\",\"Eden\",\"Edgar\",\"Edgardo\",\"Edison\",\"Edmond\",\"Edmund\",\"Edna\",\"Eduardo\",\"Edward\",\"Edwardo\",\"Edwin\",\"Edwina\",\"Edyth\",\"Edythe\",\"Effie\",\"Efrain\",\"Efren\",\"Eileen\",\"Einar\",\"Eino\",\"Eladio\",\"Elaina\",\"Elbert\",\"Elda\",\"Eldon\",\"Eldora\",\"Eldred\",\"Eldridge\",\"Eleanora\",\"Eleanore\",\"Eleazar\",\"Electa\",\"Elena\",\"Elenor\",\"Elenora\",\"Eleonore\",\"Elfrieda\",\"Eli\",\"Elian\",\"Eliane\",\"Elias\",\"Eliezer\",\"Elijah\",\"Elinor\",\"Elinore\",\"Elisa\",\"Elisabeth\",\"Elise\",\"Eliseo\",\"Elisha\",\"Elissa\",\"Eliza\",\"Elizabeth\",\"Ella\",\"Ellen\",\"Ellie\",\"Elliot\",\"Elliott\",\"Ellis\",\"Ellsworth\",\"Elmer\",\"Elmira\",\"Elmo\",\"Elmore\",\"Elna\",\"Elnora\",\"Elody\",\"Eloisa\",\"Eloise\",\"Elouise\",\"Eloy\",\"Elroy\",\"Elsa\",\"Else\",\"Elsie\",\"Elta\",\"Elton\",\"Elva\",\"Elvera\",\"Elvie\",\"Elvis\",\"Elwin\",\"Elwyn\",\"Elyse\",\"Elyssa\",\"Elza\",\"Emanuel\",\"Emelia\",\"Emelie\",\"Emely\",\"Emerald\",\"Emerson\",\"Emery\",\"Emie\",\"Emil\",\"Emile\",\"Emilia\",\"Emiliano\",\"Emilie\",\"Emilio\",\"Emily\",\"Emma\",\"Emmalee\",\"Emmanuel\",\"Emmanuelle\",\"Emmet\",\"Emmett\",\"Emmie\",\"Emmitt\",\"Emmy\",\"Emory\",\"Ena\",\"Enid\",\"Enoch\",\"Enola\",\"Enos\",\"Enrico\",\"Enrique\",\"Ephraim\",\"Era\",\"Eriberto\",\"Eric\",\"Erica\",\"Erich\",\"Erick\",\"Ericka\",\"Erik\",\"Erika\",\"Erin\",\"Erling\",\"Erna\",\"Ernest\",\"Ernestina\",\"Ernestine\",\"Ernesto\",\"Ernie\",\"Ervin\",\"Erwin\",\"Eryn\",\"Esmeralda\",\"Esperanza\",\"Esta\",\"Esteban\",\"Estefania\",\"Estel\",\"Estell\",\"Estella\",\"Estelle\",\"Estevan\",\"Esther\",\"Estrella\",\"Etha\",\"Ethan\",\"Ethel\",\"Ethelyn\",\"Ethyl\",\"Ettie\",\"Eudora\",\"Eugene\",\"Eugenia\",\"Eula\",\"Eulah\",\"Eulalia\",\"Euna\",\"Eunice\",\"Eusebio\",\"Eva\",\"Evalyn\",\"Evan\",\"Evangeline\",\"Evans\",\"Eve\",\"Eveline\",\"Evelyn\",\"Everardo\",\"Everett\",\"Everette\",\"Evert\",\"Evie\",\"Ewald\",\"Ewell\",\"Ezekiel\",\"Ezequiel\",\"Ezra\",\"Fabian\",\"Fabiola\",\"Fae\",\"Fannie\",\"Fanny\",\"Fatima\",\"Faustino\",\"Fausto\",\"Favian\",\"Fay\",\"Faye\",\"Federico\",\"Felicia\",\"Felicita\",\"Felicity\",\"Felipa\",\"Felipe\",\"Felix\",\"Felton\",\"Fermin\",\"Fern\",\"Fernando\",\"Ferne\",\"Fidel\",\"Filiberto\",\"Filomena\",\"Finn\",\"Fiona\",\"Flavie\",\"Flavio\",\"Fleta\",\"Fletcher\",\"Flo\",\"Florence\",\"Florencio\",\"Florian\",\"Florida\",\"Florine\",\"Flossie\",\"Floy\",\"Floyd\",\"Ford\",\"Forest\",\"Forrest\",\"Foster\",\"Frances\",\"Francesca\",\"Francesco\",\"Francis\",\"Francisca\",\"Francisco\",\"Franco\",\"Frank\",\"Frankie\",\"Franz\",\"Fred\",\"Freda\",\"Freddie\",\"Freddy\",\"Frederic\",\"Frederick\",\"Frederik\",\"Frederique\",\"Fredrick\",\"Fredy\",\"Freeda\",\"Freeman\",\"Freida\",\"Frida\",\"Frieda\",\"Friedrich\",\"Fritz\",\"Furman\",\"Gabe\",\"Gabriel\",\"Gabriella\",\"Gabrielle\",\"Gaetano\",\"Gage\",\"Gail\",\"Gardner\",\"Garett\",\"Garfield\",\"Garland\",\"Garnet\",\"Garnett\",\"Garret\",\"Garrett\",\"Garrick\",\"Garrison\",\"Garry\",\"Garth\",\"Gaston\",\"Gavin\",\"Gay\",\"Gayle\",\"Gaylord\",\"Gene\",\"General\",\"Genesis\",\"Genevieve\",\"Gennaro\",\"Genoveva\",\"Geo\",\"Geoffrey\",\"George\",\"Georgette\",\"Georgiana\",\"Georgianna\",\"Geovanni\",\"Geovanny\",\"Geovany\",\"Gerald\",\"Geraldine\",\"Gerard\",\"Gerardo\",\"Gerda\",\"Gerhard\",\"Germaine\",\"German\",\"Gerry\",\"Gerson\",\"Gertrude\",\"Gia\",\"Gianni\",\"Gideon\",\"Gilbert\",\"Gilberto\",\"Gilda\",\"Giles\",\"Gillian\",\"Gina\",\"Gino\",\"Giovani\",\"Giovanna\",\"Giovanni\",\"Giovanny\",\"Gisselle\",\"Giuseppe\",\"Gladyce\",\"Gladys\",\"Glen\",\"Glenda\",\"Glenna\",\"Glennie\",\"Gloria\",\"Godfrey\",\"Golda\",\"Golden\",\"Gonzalo\",\"Gordon\",\"Grace\",\"Gracie\",\"Graciela\",\"Grady\",\"Graham\",\"Grant\",\"Granville\",\"Grayce\",\"Grayson\",\"Green\",\"Greg\",\"Gregg\",\"Gregoria\",\"Gregorio\",\"Gregory\",\"Greta\",\"Gretchen\",\"Greyson\",\"Griffin\",\"Grover\",\"Guadalupe\",\"Gudrun\",\"Guido\",\"Guillermo\",\"Guiseppe\",\"Gunnar\",\"Gunner\",\"Gus\",\"Gussie\",\"Gust\",\"Gustave\",\"Guy\",\"Gwen\",\"Gwendolyn\",\"Hadley\",\"Hailee\",\"Hailey\",\"Hailie\",\"Hal\",\"Haleigh\",\"Haley\",\"Halie\",\"Halle\",\"Hallie\",\"Hank\",\"Hanna\",\"Hannah\",\"Hans\",\"Hardy\",\"Harley\",\"Harmon\",\"Harmony\",\"Harold\",\"Harrison\",\"Harry\",\"Harvey\",\"Haskell\",\"Hassan\",\"Hassie\",\"Hattie\",\"Haven\",\"Hayden\",\"Haylee\",\"Hayley\",\"Haylie\",\"Hazel\",\"Hazle\",\"Heath\",\"Heather\",\"Heaven\",\"Heber\",\"Hector\",\"Heidi\",\"Helen\",\"Helena\",\"Helene\",\"Helga\",\"Hellen\",\"Helmer\",\"Heloise\",\"Henderson\",\"Henri\",\"Henriette\",\"Henry\",\"Herbert\",\"Herman\",\"Hermann\",\"Hermina\",\"Herminia\",\"Herminio\",\"Hershel\",\"Herta\",\"Hertha\",\"Hester\",\"Hettie\",\"Hilario\",\"Hilbert\",\"Hilda\",\"Hildegard\",\"Hillard\",\"Hillary\",\"Hilma\",\"Hilton\",\"Hipolito\",\"Hiram\",\"Hobart\",\"Holden\",\"Hollie\",\"Hollis\",\"Holly\",\"Hope\",\"Horace\",\"Horacio\",\"Hortense\",\"Hosea\",\"Houston\",\"Howard\",\"Howell\",\"Hoyt\",\"Hubert\",\"Hudson\",\"Hugh\",\"Hulda\",\"Humberto\",\"Hunter\",\"Hyman\",\"Ian\",\"Ibrahim\",\"Icie\",\"Ida\",\"Idell\",\"Idella\",\"Ignacio\",\"Ignatius\",\"Ike\",\"Ila\",\"Ilene\",\"Iliana\",\"Ima\",\"Imani\",\"Imelda\",\"Immanuel\",\"Imogene\",\"Ines\",\"Irma\",\"Irving\",\"Irwin\",\"Isaac\",\"Isabel\",\"Isabell\",\"Isabella\",\"Isabelle\",\"Isac\",\"Isadore\",\"Isai\",\"Isaiah\",\"Isaias\",\"Isidro\",\"Ismael\",\"Isobel\",\"Isom\",\"Israel\",\"Issac\",\"Itzel\",\"Iva\",\"Ivah\",\"Ivory\",\"Ivy\",\"Izabella\",\"Izaiah\",\"Jabari\",\"Jace\",\"Jacey\",\"Jacinthe\",\"Jacinto\",\"Jack\",\"Jackeline\",\"Jackie\",\"Jacklyn\",\"Jackson\",\"Jacky\",\"Jaclyn\",\"Jacquelyn\",\"Jacques\",\"Jacynthe\",\"Jada\",\"Jade\",\"Jaden\",\"Jadon\",\"Jadyn\",\"Jaeden\",\"Jaida\",\"Jaiden\",\"Jailyn\",\"Jaime\",\"Jairo\",\"Jakayla\",\"Jake\",\"Jakob\",\"Jaleel\",\"Jalen\",\"Jalon\",\"Jalyn\",\"Jamaal\",\"Jamal\",\"Jamar\",\"Jamarcus\",\"Jamel\",\"Jameson\",\"Jamey\",\"Jamie\",\"Jamil\",\"Jamir\",\"Jamison\",\"Jammie\",\"Jan\",\"Jana\",\"Janae\",\"Jane\",\"Janelle\",\"Janessa\",\"Janet\",\"Janice\",\"Janick\",\"Janie\",\"Janis\",\"Janiya\",\"Jannie\",\"Jany\",\"Jaquan\",\"Jaquelin\",\"Jaqueline\",\"Jared\",\"Jaren\",\"Jarod\",\"Jaron\",\"Jarred\",\"Jarrell\",\"Jarret\",\"Jarrett\",\"Jarrod\",\"Jarvis\",\"Jasen\",\"Jasmin\",\"Jason\",\"Jasper\",\"Jaunita\",\"Javier\",\"Javon\",\"Javonte\",\"Jay\",\"Jayce\",\"Jaycee\",\"Jayda\",\"Jayde\",\"Jayden\",\"Jaydon\",\"Jaylan\",\"Jaylen\",\"Jaylin\",\"Jaylon\",\"Jayme\",\"Jayne\",\"Jayson\",\"Jazlyn\",\"Jazmin\",\"Jazmyn\",\"Jazmyne\",\"Jean\",\"Jeanette\",\"Jeanie\",\"Jeanne\",\"Jed\",\"Jedediah\",\"Jedidiah\",\"Jeff\",\"Jefferey\",\"Jeffery\",\"Jeffrey\",\"Jeffry\",\"Jena\",\"Jenifer\",\"Jennie\",\"Jennifer\",\"Jennings\",\"Jennyfer\",\"Jensen\",\"Jerad\",\"Jerald\",\"Jeramie\",\"Jeramy\",\"Jerel\",\"Jeremie\",\"Jeremy\",\"Jermain\",\"Jermaine\",\"Jermey\",\"Jerod\",\"Jerome\",\"Jeromy\",\"Jerrell\",\"Jerrod\",\"Jerrold\",\"Jerry\",\"Jess\",\"Jesse\",\"Jessica\",\"Jessie\",\"Jessika\",\"Jessy\",\"Jessyca\",\"Jesus\",\"Jett\",\"Jettie\",\"Jevon\",\"Jewel\",\"Jewell\",\"Jillian\",\"Jimmie\",\"Jimmy\",\"Jo\",\"Joan\",\"Joana\",\"Joanie\",\"Joanne\",\"Joannie\",\"Joanny\",\"Joany\",\"Joaquin\",\"Jocelyn\",\"Jodie\",\"Jody\",\"Joe\",\"Joel\",\"Joelle\",\"Joesph\",\"Joey\",\"Johan\",\"Johann\",\"Johanna\",\"Johathan\",\"John\",\"Johnathan\",\"Johnathon\",\"Johnnie\",\"Johnny\",\"Johnpaul\",\"Johnson\",\"Jolie\",\"Jon\",\"Jonas\",\"Jonatan\",\"Jonathan\",\"Jonathon\",\"Jordan\",\"Jordane\",\"Jordi\",\"Jordon\",\"Jordy\",\"Jordyn\",\"Jorge\",\"Jose\",\"Josefa\",\"Josefina\",\"Joseph\",\"Josephine\",\"Josh\",\"Joshua\",\"Joshuah\",\"Josiah\",\"Josiane\",\"Josianne\",\"Josie\",\"Josue\",\"Jovan\",\"Jovani\",\"Jovanny\",\"Jovany\",\"Joy\",\"Joyce\",\"Juana\",\"Juanita\",\"Judah\",\"Judd\",\"Jude\",\"Judge\",\"Judson\",\"Judy\",\"Jules\",\"Julia\",\"Julian\",\"Juliana\",\"Julianne\",\"Julie\",\"Julien\",\"Juliet\",\"Julio\",\"Julius\",\"June\",\"Junior\",\"Junius\",\"Justen\",\"Justice\",\"Justina\",\"Justine\",\"Juston\",\"Justus\",\"Justyn\",\"Juvenal\",\"Juwan\",\"Kacey\",\"Kaci\",\"Kacie\",\"Kade\",\"Kaden\",\"Kadin\",\"Kaela\",\"Kaelyn\",\"Kaia\",\"Kailee\",\"Kailey\",\"Kailyn\",\"Kaitlin\",\"Kaitlyn\",\"Kale\",\"Kaleb\",\"Kaleigh\",\"Kaley\",\"Kali\",\"Kallie\",\"Kameron\",\"Kamille\",\"Kamren\",\"Kamron\",\"Kamryn\",\"Kane\",\"Kara\",\"Kareem\",\"Karelle\",\"Karen\",\"Kari\",\"Kariane\",\"Karianne\",\"Karina\",\"Karine\",\"Karl\",\"Karlee\",\"Karley\",\"Karli\",\"Karlie\",\"Karolann\",\"Karson\",\"Kasandra\",\"Kasey\",\"Kassandra\",\"Katarina\",\"Katelin\",\"Katelyn\",\"Katelynn\",\"Katharina\",\"Katherine\",\"Katheryn\",\"Kathleen\",\"Kathlyn\",\"Kathryn\",\"Kathryne\",\"Katlyn\",\"Katlynn\",\"Katrina\",\"Katrine\",\"Kattie\",\"Kavon\",\"Kay\",\"Kaya\",\"Kaycee\",\"Kayden\",\"Kayla\",\"Kaylah\",\"Kaylee\",\"Kayleigh\",\"Kayley\",\"Kayli\",\"Kaylie\",\"Kaylin\",\"Keagan\",\"Keanu\",\"Keara\",\"Keaton\",\"Keegan\",\"Keeley\",\"Keely\",\"Keenan\",\"Keira\",\"Keith\",\"Kellen\",\"Kelley\",\"Kelli\",\"Kellie\",\"Kelly\",\"Kelsi\",\"Kelsie\",\"Kelton\",\"Kelvin\",\"Ken\",\"Kendall\",\"Kendra\",\"Kendrick\",\"Kenna\",\"Kennedi\",\"Kennedy\",\"Kenneth\",\"Kennith\",\"Kenny\",\"Kenton\",\"Kenya\",\"Kenyatta\",\"Kenyon\",\"Keon\",\"Keshaun\",\"Keshawn\",\"Keven\",\"Kevin\",\"Kevon\",\"Keyon\",\"Keyshawn\",\"Khalid\",\"Khalil\",\"Kian\",\"Kiana\",\"Kianna\",\"Kiara\",\"Kiarra\",\"Kiel\",\"Kiera\",\"Kieran\",\"Kiley\",\"Kim\",\"Kimberly\",\"King\",\"Kip\",\"Kira\",\"Kirk\",\"Kirsten\",\"Kirstin\",\"Kitty\",\"Kobe\",\"Koby\",\"Kody\",\"Kolby\",\"Kole\",\"Korbin\",\"Korey\",\"Kory\",\"Kraig\",\"Kris\",\"Krista\",\"Kristian\",\"Kristin\",\"Kristina\",\"Kristofer\",\"Kristoffer\",\"Kristopher\",\"Kristy\",\"Krystal\",\"Krystel\",\"Krystina\",\"Kurt\",\"Kurtis\",\"Kyla\",\"Kyle\",\"Kylee\",\"Kyleigh\",\"Kyler\",\"Kylie\",\"Kyra\",\"Lacey\",\"Lacy\",\"Ladarius\",\"Lafayette\",\"Laila\",\"Laisha\",\"Lamar\",\"Lambert\",\"Lamont\",\"Lance\",\"Landen\",\"Lane\",\"Laney\",\"Larissa\",\"Laron\",\"Larry\",\"Larue\",\"Laura\",\"Laurel\",\"Lauren\",\"Laurence\",\"Lauretta\",\"Lauriane\",\"Laurianne\",\"Laurie\",\"Laurine\",\"Laury\",\"Lauryn\",\"Lavada\",\"Lavern\",\"Laverna\",\"Laverne\",\"Lavina\",\"Lavinia\",\"Lavon\",\"Lavonne\",\"Lawrence\",\"Lawson\",\"Layla\",\"Layne\",\"Lazaro\",\"Lea\",\"Leann\",\"Leanna\",\"Leanne\",\"Leatha\",\"Leda\",\"Lee\",\"Leif\",\"Leila\",\"Leilani\",\"Lela\",\"Lelah\",\"Leland\",\"Lelia\",\"Lempi\",\"Lemuel\",\"Lenna\",\"Lennie\",\"Lenny\",\"Lenora\",\"Lenore\",\"Leo\",\"Leola\",\"Leon\",\"Leonard\",\"Leonardo\",\"Leone\",\"Leonel\",\"Leonie\",\"Leonor\",\"Leonora\",\"Leopold\",\"Leopoldo\",\"Leora\",\"Lera\",\"Lesley\",\"Leslie\",\"Lesly\",\"Lessie\",\"Lester\",\"Leta\",\"Letha\",\"Letitia\",\"Levi\",\"Lew\",\"Lewis\",\"Lexi\",\"Lexie\",\"Lexus\",\"Lia\",\"Liam\",\"Liana\",\"Libbie\",\"Libby\",\"Lila\",\"Lilian\",\"Liliana\",\"Liliane\",\"Lilla\",\"Lillian\",\"Lilliana\",\"Lillie\",\"Lilly\",\"Lily\",\"Lilyan\",\"Lina\",\"Lincoln\",\"Linda\",\"Lindsay\",\"Lindsey\",\"Linnea\",\"Linnie\",\"Linwood\",\"Lionel\",\"Lisa\",\"Lisandro\",\"Lisette\",\"Litzy\",\"Liza\",\"Lizeth\",\"Lizzie\",\"Llewellyn\",\"Lloyd\",\"Logan\",\"Lois\",\"Lola\",\"Lolita\",\"Loma\",\"Lon\",\"London\",\"Lonie\",\"Lonnie\",\"Lonny\",\"Lonzo\",\"Lora\",\"Loraine\",\"Loren\",\"Lorena\",\"Lorenz\",\"Lorenza\",\"Lorenzo\",\"Lori\",\"Lorine\",\"Lorna\",\"Lottie\",\"Lou\",\"Louie\",\"Louisa\",\"Lourdes\",\"Louvenia\",\"Lowell\",\"Loy\",\"Loyal\",\"Loyce\",\"Lucas\",\"Luciano\",\"Lucie\",\"Lucienne\",\"Lucile\",\"Lucinda\",\"Lucio\",\"Lucious\",\"Lucius\",\"Lucy\",\"Ludie\",\"Ludwig\",\"Lue\",\"Luella\",\"Luigi\",\"Luis\",\"Luisa\",\"Lukas\",\"Lula\",\"Lulu\",\"Luna\",\"Lupe\",\"Lura\",\"Lurline\",\"Luther\",\"Luz\",\"Lyda\",\"Lydia\",\"Lyla\",\"Lynn\",\"Lyric\",\"Lysanne\",\"Mabel\",\"Mabelle\",\"Mable\",\"Mac\",\"Macey\",\"Maci\",\"Macie\",\"Mack\",\"Mackenzie\",\"Macy\",\"Madaline\",\"Madalyn\",\"Maddison\",\"Madeline\",\"Madelyn\",\"Madelynn\",\"Madge\",\"Madie\",\"Madilyn\",\"Madisen\",\"Madison\",\"Madisyn\",\"Madonna\",\"Madyson\",\"Mae\",\"Maegan\",\"Maeve\",\"Mafalda\",\"Magali\",\"Magdalen\",\"Magdalena\",\"Maggie\",\"Magnolia\",\"Magnus\",\"Maia\",\"Maida\",\"Maiya\",\"Major\",\"Makayla\",\"Makenna\",\"Makenzie\",\"Malachi\",\"Malcolm\",\"Malika\",\"Malinda\",\"Mallie\",\"Mallory\",\"Malvina\",\"Mandy\",\"Manley\",\"Manuel\",\"Manuela\",\"Mara\",\"Marc\",\"Marcel\",\"Marcelina\",\"Marcelino\",\"Marcella\",\"Marcelle\",\"Marcellus\",\"Marcelo\",\"Marcia\",\"Marco\",\"Marcos\",\"Marcus\",\"Margaret\",\"Margarete\",\"Margarett\",\"Margaretta\",\"Margarette\",\"Margarita\",\"Marge\",\"Margie\",\"Margot\",\"Margret\",\"Marguerite\",\"Maria\",\"Mariah\",\"Mariam\",\"Marian\",\"Mariana\",\"Mariane\",\"Marianna\",\"Marianne\",\"Mariano\",\"Maribel\",\"Marie\",\"Mariela\",\"Marielle\",\"Marietta\",\"Marilie\",\"Marilou\",\"Marilyne\",\"Marina\",\"Mario\",\"Marion\",\"Marisa\",\"Marisol\",\"Maritza\",\"Marjolaine\",\"Marjorie\",\"Marjory\",\"Mark\",\"Markus\",\"Marlee\",\"Marlen\",\"Marlene\",\"Marley\",\"Marlin\",\"Marlon\",\"Marques\",\"Marquis\",\"Marquise\",\"Marshall\",\"Marta\",\"Martin\",\"Martina\",\"Martine\",\"Marty\",\"Marvin\",\"Mary\",\"Maryam\",\"Maryjane\",\"Maryse\",\"Mason\",\"Mateo\",\"Mathew\",\"Mathias\",\"Mathilde\",\"Matilda\",\"Matilde\",\"Matt\",\"Matteo\",\"Mattie\",\"Maud\",\"Maude\",\"Maudie\",\"Maureen\",\"Maurice\",\"Mauricio\",\"Maurine\",\"Maverick\",\"Mavis\",\"Max\",\"Maxie\",\"Maxime\",\"Maximilian\",\"Maximillia\",\"Maximillian\",\"Maximo\",\"Maximus\",\"Maxine\",\"Maxwell\",\"May\",\"Maya\",\"Maybell\",\"Maybelle\",\"Maye\",\"Maymie\",\"Maynard\",\"Mayra\",\"Mazie\",\"Mckayla\",\"Mckenna\",\"Mckenzie\",\"Meagan\",\"Meaghan\",\"Meda\",\"Megane\",\"Meggie\",\"Meghan\",\"Mekhi\",\"Melany\",\"Melba\",\"Melisa\",\"Melissa\",\"Mellie\",\"Melody\",\"Melvin\",\"Melvina\",\"Melyna\",\"Melyssa\",\"Mercedes\",\"Meredith\",\"Merl\",\"Merle\",\"Merlin\",\"Merritt\",\"Mertie\",\"Mervin\",\"Meta\",\"Mia\",\"Micaela\",\"Micah\",\"Michael\",\"Michaela\",\"Michale\",\"Micheal\",\"Michel\",\"Michele\",\"Michelle\",\"Miguel\",\"Mikayla\",\"Mike\",\"Mikel\",\"Milan\",\"Miles\",\"Milford\",\"Miller\",\"Millie\",\"Milo\",\"Milton\",\"Mina\",\"Minerva\",\"Minnie\",\"Miracle\",\"Mireille\",\"Mireya\",\"Misael\",\"Missouri\",\"Misty\",\"Mitchel\",\"Mitchell\",\"Mittie\",\"Modesta\",\"Modesto\",\"Mohamed\",\"Mohammad\",\"Mohammed\",\"Moises\",\"Mollie\",\"Molly\",\"Mona\",\"Monica\",\"Monique\",\"Monroe\",\"Monserrat\",\"Monserrate\",\"Montana\",\"Monte\",\"Monty\",\"Morgan\",\"Moriah\",\"Morris\",\"Mortimer\",\"Morton\",\"Mose\",\"Moses\",\"Moshe\",\"Mossie\",\"Mozell\",\"Mozelle\",\"Muhammad\",\"Muriel\",\"Murl\",\"Murphy\",\"Murray\",\"Mustafa\",\"Mya\",\"Myah\",\"Mylene\",\"Myles\",\"Myra\",\"Myriam\",\"Myrl\",\"Myrna\",\"Myron\",\"Myrtice\",\"Myrtie\",\"Myrtis\",\"Myrtle\",\"Nadia\",\"Nakia\",\"Name\",\"Nannie\",\"Naomi\",\"Naomie\",\"Napoleon\",\"Narciso\",\"Nash\",\"Nasir\",\"Nat\",\"Natalia\",\"Natalie\",\"Natasha\",\"Nathan\",\"Nathanael\",\"Nathanial\",\"Nathaniel\",\"Nathen\",\"Nayeli\",\"Neal\",\"Ned\",\"Nedra\",\"Neha\",\"Neil\",\"Nelda\",\"Nella\",\"Nelle\",\"Nellie\",\"Nels\",\"Nelson\",\"Neoma\",\"Nestor\",\"Nettie\",\"Neva\",\"Newell\",\"Newton\",\"Nia\",\"Nicholas\",\"Nicholaus\",\"Nichole\",\"Nick\",\"Nicklaus\",\"Nickolas\",\"Nico\",\"Nicola\",\"Nicolas\",\"Nicole\",\"Nicolette\",\"Nigel\",\"Nikita\",\"Nikki\",\"Nikko\",\"Niko\",\"Nikolas\",\"Nils\",\"Nina\",\"Noah\",\"Noble\",\"Noe\",\"Noel\",\"Noelia\",\"Noemi\",\"Noemie\",\"Noemy\",\"Nola\",\"Nolan\",\"Nona\",\"Nora\",\"Norbert\",\"Norberto\",\"Norene\",\"Norma\",\"Norris\",\"Norval\",\"Norwood\",\"Nova\",\"Novella\",\"Nya\",\"Nyah\",\"Nyasia\",\"Obie\",\"Oceane\",\"Ocie\",\"Octavia\",\"Oda\",\"Odell\",\"Odessa\",\"Odie\",\"Ofelia\",\"Okey\",\"Ola\",\"Olaf\",\"Ole\",\"Olen\",\"Oleta\",\"Olga\",\"Olin\",\"Oliver\",\"Ollie\",\"Oma\",\"Omari\",\"Omer\",\"Ona\",\"Onie\",\"Opal\",\"Ophelia\",\"Ora\",\"Oral\",\"Oran\",\"Oren\",\"Orie\",\"Orin\",\"Orion\",\"Orland\",\"Orlando\",\"Orlo\",\"Orpha\",\"Orrin\",\"Orval\",\"Orville\",\"Osbaldo\",\"Osborne\",\"Oscar\",\"Osvaldo\",\"Oswald\",\"Oswaldo\",\"Otha\",\"Otho\",\"Otilia\",\"Otis\",\"Ottilie\",\"Ottis\",\"Otto\",\"Ova\",\"Owen\",\"Ozella\",\"Pablo\",\"Paige\",\"Palma\",\"Pamela\",\"Pansy\",\"Paolo\",\"Paris\",\"Parker\",\"Pascale\",\"Pasquale\",\"Pat\",\"Patience\",\"Patricia\",\"Patrick\",\"Patsy\",\"Pattie\",\"Paul\",\"Paula\",\"Pauline\",\"Paxton\",\"Payton\",\"Pearl\",\"Pearlie\",\"Pearline\",\"Pedro\",\"Peggie\",\"Penelope\",\"Percival\",\"Percy\",\"Perry\",\"Pete\",\"Peter\",\"Petra\",\"Peyton\",\"Philip\",\"Phoebe\",\"Phyllis\",\"Pierce\",\"Pierre\",\"Pietro\",\"Pink\",\"Pinkie\",\"Piper\",\"Polly\",\"Porter\",\"Precious\",\"Presley\",\"Preston\",\"Price\",\"Prince\",\"Princess\",\"Priscilla\",\"Providenci\",\"Prudence\",\"Queen\",\"Queenie\",\"Quentin\",\"Quincy\",\"Quinn\",\"Quinten\",\"Quinton\",\"Rachael\",\"Rachel\",\"Rachelle\",\"Rae\",\"Raegan\",\"Rafael\",\"Rafaela\",\"Raheem\",\"Rahsaan\",\"Rahul\",\"Raina\",\"Raleigh\",\"Ralph\",\"Ramiro\",\"Ramon\",\"Ramona\",\"Randal\",\"Randall\",\"Randi\",\"Randy\",\"Ransom\",\"Raoul\",\"Raphael\",\"Raphaelle\",\"Raquel\",\"Rashad\",\"Rashawn\",\"Rasheed\",\"Raul\",\"Raven\",\"Ray\",\"Raymond\",\"Raymundo\",\"Reagan\",\"Reanna\",\"Reba\",\"Rebeca\",\"Rebecca\",\"Rebeka\",\"Rebekah\",\"Reece\",\"Reed\",\"Reese\",\"Regan\",\"Reggie\",\"Reginald\",\"Reid\",\"Reilly\",\"Reina\",\"Reinhold\",\"Remington\",\"Rene\",\"Renee\",\"Ressie\",\"Reta\",\"Retha\",\"Retta\",\"Reuben\",\"Reva\",\"Rex\",\"Rey\",\"Reyes\",\"Reymundo\",\"Reyna\",\"Reynold\",\"Rhea\",\"Rhett\",\"Rhianna\",\"Rhiannon\",\"Rhoda\",\"Ricardo\",\"Richard\",\"Richie\",\"Richmond\",\"Rick\",\"Rickey\",\"Rickie\",\"Ricky\",\"Rico\",\"Rigoberto\",\"Riley\",\"Rita\",\"River\",\"Robb\",\"Robbie\",\"Robert\",\"Roberta\",\"Roberto\",\"Robin\",\"Robyn\",\"Rocio\",\"Rocky\",\"Rod\",\"Roderick\",\"Rodger\",\"Rodolfo\",\"Rodrick\",\"Rodrigo\",\"Roel\",\"Rogelio\",\"Roger\",\"Rogers\",\"Rolando\",\"Rollin\",\"Roma\",\"Romaine\",\"Roman\",\"Ron\",\"Ronaldo\",\"Ronny\",\"Roosevelt\",\"Rory\",\"Rosa\",\"Rosalee\",\"Rosalia\",\"Rosalind\",\"Rosalinda\",\"Rosalyn\",\"Rosamond\",\"Rosanna\",\"Rosario\",\"Roscoe\",\"Rose\",\"Rosella\",\"Roselyn\",\"Rosemarie\",\"Rosemary\",\"Rosendo\",\"Rosetta\",\"Rosie\",\"Rosina\",\"Roslyn\",\"Ross\",\"Rossie\",\"Rowan\",\"Rowena\",\"Rowland\",\"Roxane\",\"Roxanne\",\"Roy\",\"Royal\",\"Royce\",\"Rozella\",\"Ruben\",\"Rubie\",\"Ruby\",\"Rubye\",\"Rudolph\",\"Rudy\",\"Rupert\",\"Russ\",\"Russel\",\"Russell\",\"Rusty\",\"Ruth\",\"Ruthe\",\"Ruthie\",\"Ryan\",\"Ryann\",\"Ryder\",\"Rylan\",\"Rylee\",\"Ryleigh\",\"Ryley\",\"Sabina\",\"Sabrina\",\"Sabryna\",\"Sadie\",\"Sadye\",\"Sage\",\"Saige\",\"Sallie\",\"Sally\",\"Salma\",\"Salvador\",\"Salvatore\",\"Sam\",\"Samanta\",\"Samantha\",\"Samara\",\"Samir\",\"Sammie\",\"Sammy\",\"Samson\",\"Sandra\",\"Sandrine\",\"Sandy\",\"Sanford\",\"Santa\",\"Santiago\",\"Santina\",\"Santino\",\"Santos\",\"Sarah\",\"Sarai\",\"Sarina\",\"Sasha\",\"Saul\",\"Savanah\",\"Savanna\",\"Savannah\",\"Savion\",\"Scarlett\",\"Schuyler\",\"Scot\",\"Scottie\",\"Scotty\",\"Seamus\",\"Sean\",\"Sebastian\",\"Sedrick\",\"Selena\",\"Selina\",\"Selmer\",\"Serena\",\"Serenity\",\"Seth\",\"Shad\",\"Shaina\",\"Shakira\",\"Shana\",\"Shane\",\"Shanel\",\"Shanelle\",\"Shania\",\"Shanie\",\"Shaniya\",\"Shanna\",\"Shannon\",\"Shanny\",\"Shanon\",\"Shany\",\"Sharon\",\"Shaun\",\"Shawn\",\"Shawna\",\"Shaylee\",\"Shayna\",\"Shayne\",\"Shea\",\"Sheila\",\"Sheldon\",\"Shemar\",\"Sheridan\",\"Sherman\",\"Sherwood\",\"Shirley\",\"Shyann\",\"Shyanne\",\"Sibyl\",\"Sid\",\"Sidney\",\"Sienna\",\"Sierra\",\"Sigmund\",\"Sigrid\",\"Sigurd\",\"Silas\",\"Sim\",\"Simeon\",\"Simone\",\"Sincere\",\"Sister\",\"Skye\",\"Skyla\",\"Skylar\",\"Sofia\",\"Soledad\",\"Solon\",\"Sonia\",\"Sonny\",\"Sonya\",\"Sophia\",\"Sophie\",\"Spencer\",\"Stacey\",\"Stacy\",\"Stan\",\"Stanford\",\"Stanley\",\"Stanton\",\"Stefan\",\"Stefanie\",\"Stella\",\"Stephan\",\"Stephania\",\"Stephanie\",\"Stephany\",\"Stephen\",\"Stephon\",\"Sterling\",\"Steve\",\"Stevie\",\"Stewart\",\"Stone\",\"Stuart\",\"Summer\",\"Sunny\",\"Susan\",\"Susana\",\"Susanna\",\"Susie\",\"Suzanne\",\"Sven\",\"Syble\",\"Sydnee\",\"Sydney\",\"Sydni\",\"Sydnie\",\"Sylvan\",\"Sylvester\",\"Sylvia\",\"Tabitha\",\"Tad\",\"Talia\",\"Talon\",\"Tamara\",\"Tamia\",\"Tania\",\"Tanner\",\"Tanya\",\"Tara\",\"Taryn\",\"Tate\",\"Tatum\",\"Tatyana\",\"Taurean\",\"Tavares\",\"Taya\",\"Taylor\",\"Teagan\",\"Ted\",\"Telly\",\"Terence\",\"Teresa\",\"Terrance\",\"Terrell\",\"Terrence\",\"Terrill\",\"Terry\",\"Tess\",\"Tessie\",\"Tevin\",\"Thad\",\"Thaddeus\",\"Thalia\",\"Thea\",\"Thelma\",\"Theo\",\"Theodora\",\"Theodore\",\"Theresa\",\"Therese\",\"Theresia\",\"Theron\",\"Thomas\",\"Thora\",\"Thurman\",\"Tia\",\"Tiana\",\"Tianna\",\"Tiara\",\"Tierra\",\"Tiffany\",\"Tillman\",\"Timmothy\",\"Timmy\",\"Timothy\",\"Tina\",\"Tito\",\"Titus\",\"Tobin\",\"Toby\",\"Tod\",\"Tom\",\"Tomas\",\"Tomasa\",\"Tommie\",\"Toney\",\"Toni\",\"Tony\",\"Torey\",\"Torrance\",\"Torrey\",\"Toy\",\"Trace\",\"Tracey\",\"Tracy\",\"Travis\",\"Travon\",\"Tre\",\"Tremaine\",\"Tremayne\",\"Trent\",\"Trenton\",\"Tressa\",\"Tressie\",\"Treva\",\"Trever\",\"Trevion\",\"Trevor\",\"Trey\",\"Trinity\",\"Trisha\",\"Tristian\",\"Tristin\",\"Triston\",\"Troy\",\"Trudie\",\"Trycia\",\"Trystan\",\"Turner\",\"Twila\",\"Tyler\",\"Tyra\",\"Tyree\",\"Tyreek\",\"Tyrel\",\"Tyrell\",\"Tyrese\",\"Tyrique\",\"Tyshawn\",\"Tyson\",\"Ubaldo\",\"Ulices\",\"Ulises\",\"Una\",\"Unique\",\"Urban\",\"Uriah\",\"Uriel\",\"Ursula\",\"Vada\",\"Valentin\",\"Valentina\",\"Valentine\",\"Valerie\",\"Vallie\",\"Van\",\"Vance\",\"Vanessa\",\"Vaughn\",\"Veda\",\"Velda\",\"Vella\",\"Velma\",\"Velva\",\"Vena\",\"Verda\",\"Verdie\",\"Vergie\",\"Verla\",\"Verlie\",\"Vern\",\"Verna\",\"Verner\",\"Vernice\",\"Vernie\",\"Vernon\",\"Verona\",\"Veronica\",\"Vesta\",\"Vicenta\",\"Vicente\",\"Vickie\",\"Vicky\",\"Victor\",\"Victoria\",\"Vida\",\"Vidal\",\"Vilma\",\"Vince\",\"Vincent\",\"Vincenza\",\"Vincenzo\",\"Vinnie\",\"Viola\",\"Violet\",\"Violette\",\"Virgie\",\"Virgil\",\"Virginia\",\"Virginie\",\"Vita\",\"Vito\",\"Viva\",\"Vivian\",\"Viviane\",\"Vivianne\",\"Vivien\",\"Vivienne\",\"Vladimir\",\"Wade\",\"Waino\",\"Waldo\",\"Walker\",\"Wallace\",\"Walter\",\"Walton\",\"Wanda\",\"Ward\",\"Warren\",\"Watson\",\"Wava\",\"Waylon\",\"Wayne\",\"Webster\",\"Weldon\",\"Wellington\",\"Wendell\",\"Wendy\",\"Werner\",\"Westley\",\"Weston\",\"Whitney\",\"Wilber\",\"Wilbert\",\"Wilburn\",\"Wiley\",\"Wilford\",\"Wilfred\",\"Wilfredo\",\"Wilfrid\",\"Wilhelm\",\"Wilhelmine\",\"Will\",\"Willa\",\"Willard\",\"William\",\"Willie\",\"Willis\",\"Willow\",\"Willy\",\"Wilma\",\"Wilmer\",\"Wilson\",\"Wilton\",\"Winfield\",\"Winifred\",\"Winnifred\",\"Winona\",\"Winston\",\"Woodrow\",\"Wyatt\",\"Wyman\",\"Xander\",\"Xavier\",\"Xzavier\",\"Yadira\",\"Yasmeen\",\"Yasmin\",\"Yasmine\",\"Yazmin\",\"Yesenia\",\"Yessenia\",\"Yolanda\",\"Yoshiko\",\"Yvette\",\"Yvonne\",\"Zachariah\",\"Zachary\",\"Zachery\",\"Zack\",\"Zackary\",\"Zackery\",\"Zakary\",\"Zander\",\"Zane\",\"Zaria\",\"Zechariah\",\"Zelda\",\"Zella\",\"Zelma\",\"Zena\",\"Zetta\",\"Zion\",\"Zita\",\"Zoe\",\"Zoey\",\"Zoie\",\"Zoila\",\"Zola\",\"Zora\",\"Zula\"];e.exports={generateUsername:function(){var e=r.randomElement(i),t=r.randomAlphanumStr(3);return\"\".concat(e,\"-\").concat(t)}}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return f});var r=n(3),i=n(19),o=n(23),a=n(9);function s(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}var c=n(11),u=n(4).getLogger(e),l={};function d(e,t){return!t||t<=0||!e||e<=0?0:Math.round(e/t*100)}function p(){this.loss={},this.bitrate={download:0,upload:0},this.resolution={},this.framerate=0}function h(){this.bandwidth={},this.bitrate={},this.packetLoss=null,this.transport=[]}function f(e,t,n,i){this._browserType=r.a.getName();var o=l[this._browserType];if(!o)throw\"The browser type '\".concat(this._browserType,\"' isn't supported!\");this._usesPromiseGetStats=r.a.isSafariWithWebrtc()||r.a.isFirefox(),this._getStatValue=this._usesPromiseGetStats?this._defineNewGetStatValueMethod(o):this._defineGetStatValueMethod(o),this.peerconnection=e,this.baselineAudioLevelsReport=null,this.currentAudioLevelsReport=null,this.currentStatsReport=null,this.previousStatsReport=null,this.audioLevelReportHistory={},this.audioLevelsIntervalId=null,this.eventEmitter=i,this.conferenceStats=new h,this.audioLevelsIntervalMilis=t,this.statsIntervalId=null,this.statsIntervalMilis=n,this.ssrc2stats=new Map}l[i.b.FIREFOX]={ssrc:\"ssrc\",packetsReceived:\"packetsReceived\",packetsLost:\"packetsLost\",packetsSent:\"packetsSent\",bytesReceived:\"bytesReceived\",bytesSent:\"bytesSent\",framerateMean:\"framerateMean\",ip:\"ipAddress\",port:\"portNumber\",protocol:\"transport\"},l[i.b.CHROME]={receiveBandwidth:\"googAvailableReceiveBandwidth\",sendBandwidth:\"googAvailableSendBandwidth\",remoteAddress:\"googRemoteAddress\",transportType:\"googTransportType\",localAddress:\"googLocalAddress\",activeConnection:\"googActiveConnection\",ssrc:\"ssrc\",packetsReceived:\"packetsReceived\",packetsSent:\"packetsSent\",packetsLost:\"packetsLost\",bytesReceived:\"bytesReceived\",bytesSent:\"bytesSent\",googFrameHeightReceived:\"googFrameHeightReceived\",googFrameWidthReceived:\"googFrameWidthReceived\",googFrameHeightSent:\"googFrameHeightSent\",googFrameWidthSent:\"googFrameWidthSent\",googFrameRateReceived:\"googFrameRateReceived\",googFrameRateSent:\"googFrameRateSent\",audioInputLevel:\"audioInputLevel\",audioOutputLevel:\"audioOutputLevel\",currentRoundTripTime:\"googRtt\",remoteCandidateType:\"googRemoteCandidateType\",localCandidateType:\"googLocalCandidateType\",ip:\"ip\",port:\"port\",protocol:\"protocol\"},l[i.b.EDGE]={sendBandwidth:\"googAvailableSendBandwidth\",remoteAddress:\"remoteAddress\",transportType:\"protocol\",localAddress:\"localAddress\",activeConnection:\"activeConnection\",ssrc:\"ssrc\",packetsReceived:\"packetsReceived\",packetsSent:\"packetsSent\",packetsLost:\"packetsLost\",bytesReceived:\"bytesReceived\",bytesSent:\"bytesSent\",googFrameHeightReceived:\"frameHeight\",googFrameWidthReceived:\"frameWidth\",googFrameHeightSent:\"frameHeight\",googFrameWidthSent:\"frameWidth\",googFrameRateReceived:\"framesPerSecond\",googFrameRateSent:\"framesPerSecond\",audioInputLevel:\"audioLevel\",audioOutputLevel:\"audioLevel\",currentRoundTripTime:\"roundTripTime\"},l[i.b.OPERA]=l[i.b.CHROME],l[i.b.NWJS]=l[i.b.CHROME],l[i.b.ELECTRON]=l[i.b.CHROME],l[i.b.SAFARI]=l[i.b.CHROME],l[i.b.REACT_NATIVE]=l[i.b.CHROME],p.prototype.setLoss=function(e){this.loss=e||{}},p.prototype.setResolution=function(e){this.resolution=e||{}},p.prototype.addBitrate=function(e){this.bitrate.download+=e.download,this.bitrate.upload+=e.upload},p.prototype.resetBitrate=function(){this.bitrate.download=0,this.bitrate.upload=0},p.prototype.setFramerate=function(e){this.framerate=e||0},f.prototype.stop=function(){this.audioLevelsIntervalId&&(clearInterval(this.audioLevelsIntervalId),this.audioLevelsIntervalId=null),this.statsIntervalId&&(clearInterval(this.statsIntervalId),this.statsIntervalId=null)},f.prototype.errorCallback=function(e){c.callErrorHandler(e),u.error(\"Get stats error\",e),this.stop()},f.prototype.start=function(e){var t=this,n=this;e&&(this.audioLevelsIntervalId=setInterval(function(){n.peerconnection.getStats(function(e){var r=null;r=e&&e.result&&\"function\"==typeof e.result?e.result():e,n.currentAudioLevelsReport=r,t._usesPromiseGetStats?n.processNewAudioLevelReport():n.processAudioLevelReport(),n.baselineAudioLevelsReport=n.currentAudioLevelsReport},function(e){return n.errorCallback(e)})},n.audioLevelsIntervalMilis)),r.a.supportsRtpStatistics()&&(this.statsIntervalId=setInterval(function(){n.peerconnection.getStats(function(e){var r=null;r=e&&e.result&&\"function\"==typeof e.result?e.result():e,n.currentStatsReport=r;try{t._usesPromiseGetStats?n.processNewStatsReport():n.processStatsReport()}catch(e){c.callErrorHandler(e),u.error(\"Unsupported key:\".concat(e),e)}n.previousStatsReport=n.currentStatsReport},function(e){return n.errorCallback(e)})},n.statsIntervalMilis))},f.prototype._defineGetStatValueMethod=function(e){var t;switch(this._browserType){case i.b.CHROME:case i.b.OPERA:case i.b.NWJS:case i.b.ELECTRON:t=function(e,t){return e.stat(t)};break;case i.b.REACT_NATIVE:t=function(e,t){var n;return e.values.some(function(e){return!!e.hasOwnProperty(t)&&(n=e[t],!0)}),n};break;case i.b.EDGE:t=function(e,t){return e[t]};break;default:t=function(e,t){return e[t]}}return function(n,r){return t(n,function(t){var n=e[t];if(n)return n;throw\"The property '\".concat(t,\"' isn't supported!\")}(r))}},f.prototype.getNonNegativeStat=function(e,t){var n=this._getStatValue(e,t);return\"number\"!=typeof n&&(n=Number(n)),isNaN(n)?0:Math.max(0,n)},f.prototype.processStatsReport=function(){var e=this;if(this.previousStatsReport){var t=this._getStatValue,n={};for(var i in this.currentStatsReport)if(this.currentStatsReport.hasOwnProperty(i)){var a=this.currentStatsReport[i];if(a){try{var s=t(a,\"receiveBandwidth\"),c=t(a,\"sendBandwidth\");(s||c)&&(this.conferenceStats.bandwidth={download:Math.round(s/1e3),upload:Math.round(c/1e3)})}catch(e){}if(\"googCandidatePair\"===a.type)if(\"continue\"===function(){var n=void 0,r=void 0,i=void 0,o=void 0,s=void 0,c=void 0,u=void 0;try{if(!(n=t(a,\"activeConnection\")))return\"continue\";r=t(a,\"remoteAddress\"),u=t(a,\"transportType\"),o=t(a,\"localAddress\"),i=t(a,\"localCandidateType\"),s=t(a,\"remoteCandidateType\"),c=e.getNonNegativeStat(a,\"currentRoundTripTime\")}catch(e){}if(!r||!u||!o||\"true\"!==n)return\"continue\";var l=e.conferenceStats.transport;return l.some(function(e){return e.ip===r&&e.type===u&&e.localip===o})||l.push({ip:r,type:u,localip:o,p2p:e.peerconnection.isP2P,localCandidateType:i,remoteCandidateType:s,rtt:c}),\"continue\"}())continue;if(\"candidatepair\"===a.type){if(\"succeeded\"!==a.state||!a.selected)continue;var l=this.currentStatsReport[a.localCandidateId],d=this.currentStatsReport[a.remoteCandidateId];this.conferenceStats.transport.push({ip:\"\".concat(d.ipAddress,\":\").concat(d.portNumber),type:l.transport,localip:\"\".concat(l.ipAddress,\":\").concat(l.portNumber),p2p:this.peerconnection.isP2P,localCandidateType:l.candidateType,remoteCandidateType:d.candidateType})}if(\"transportdiagnostics\"===a.msType&&this.conferenceStats.transport.push({ip:a.remoteAddress,type:a.protocol,localip:a.localAddress,p2p:this.peerconnection.isP2P}),(\"ssrc\"===a.type||\"outboundrtp\"===a.type||\"inboundrtp\"===a.type||\"track\"===a.type)&&(!r.a.isEdge()||\"inboundrtp\"!==a.type&&\"outboundrtp\"!==a.type)){var h=this.previousStatsReport[i],f=this.getNonNegativeStat(a,\"ssrc\");if(\"track\"===a.type&&Array.isArray(a.ssrcIds)&&(f=Number(a.ssrcIds[0])),h&&f&&(r.a.isEdge()||!0!==a.isRemote&&!0!==a.remoteSource)){var m=this.ssrc2stats.get(f);m||(m=new p,this.ssrc2stats.set(f,m));var v=!0,y=\"packetsReceived\",g=t(a,y);null!=g&&\"\"!==g||(v=!1,null==(g=t(a,y=\"packetsSent\"))&&u.warn(\"No packetsReceived nor packetsSent stat found\")),(!g||g<0)&&(g=0);var _=this.getNonNegativeStat(h,y),S=Math.max(0,g-_),b=this.getNonNegativeStat(a,\"packetsLost\"),E=this.getNonNegativeStat(h,\"packetsLost\"),T=Math.max(0,b-E);m.setLoss({packetsTotal:S+T,packetsLost:T,isDownloadStream:v});var C=this.getNonNegativeStat(a,\"bytesReceived\"),R=this.getNonNegativeStat(h,\"bytesReceived\"),A=Math.max(0,C-R),w=0,k=t(a,\"bytesSent\");\"number\"!=typeof k&&\"string\"!=typeof k||(k=Number(k),isNaN(k)||(n[f]=k,k>0&&(w=k-t(h,\"bytesSent\")))),w=Math.max(0,w);var O=a.timestamp-h.timestamp,I=0,P=0;O>0&&(I=Math.round(8*A/O),P=Math.round(8*w/O)),m.addBitrate({download:I,upload:P});var D={height:null,width:null};try{var N=void 0,L=void 0;(N=t(a,\"googFrameHeightReceived\"))&&(L=t(a,\"googFrameWidthReceived\"))?(D.height=N,D.width=L):(N=t(a,\"googFrameHeightSent\"))&&(L=t(a,\"googFrameWidthSent\"))&&(D.height=N,D.width=L)}catch(e){}var M=void 0;try{M=t(a,\"googFrameRateReceived\")||t(a,\"googFrameRateSent\")||0}catch(e){try{M=this.getNonNegativeStat(a,\"framerateMean\")}catch(e){}}m.setFramerate(Math.round(M||0)),D.height&&D.width?m.setResolution(D):m.setResolution(null)}}}}this.eventEmitter.emit(o.c,this.peerconnection,n),this._processAndEmitReport()}},f.prototype._processAndEmitReport=function(){var e=this,t={download:0,upload:0},n={download:0,upload:0},r=0,i=0,a={},c={},l=0,p=0,h=0,f=0,m=!0,v=!1,y=void 0;try{for(var g,_=this.ssrc2stats[Symbol.iterator]();!(m=(g=_.next()).done);m=!0){var S=s(g.value,2),b=S[0],E=S[1],T=E.loss,C=T.isDownloadStream?\"download\":\"upload\";t[C]+=T.packetsTotal,n[C]+=T.packetsLost,r+=E.bitrate.download,i+=E.bitrate.upload;var R=this.peerconnection.getTrackBySSRC(b);if(R){R.isAudioTrack()?(l+=E.bitrate.download,p+=E.bitrate.upload):(h+=E.bitrate.download,f+=E.bitrate.upload);var A=R.getParticipantId();if(A){var w=E.resolution;if(w.width&&w.height&&-1!==w.width&&-1!==w.height){var k=a[A]||{};k[b]=w,a[A]=k}if(0!==E.framerate){var O=c[A]||{};O[b]=E.framerate,c[A]=O}}else u.error(\"No participant ID returned by \".concat(R))}E.resetBitrate()}}catch(e){v=!0,y=e}finally{try{m||null==_.return||_.return()}finally{if(v)throw y}}this.conferenceStats.bitrate={upload:i,download:r},this.conferenceStats.bitrate.audio={upload:p,download:l},this.conferenceStats.bitrate.video={upload:f,download:h},this.conferenceStats.packetLoss={total:d(n.download+n.upload,t.download+t.upload),download:d(n.download,t.download),upload:d(n.upload,t.upload)};var I,P={};Object.keys(this.audioLevelReportHistory).forEach(function(t){var n=e.audioLevelReportHistory[t],r=n.data,i=n.isLocal,o=r.reduce(function(e,t){return e+t})/r.length;if(i)I=o;else{var a=e.peerconnection.getTrackBySSRC(Number(t));if(a){var s=a.getParticipantId();s&&(P[s]=o)}}}),this.audioLevelReportHistory={},this.eventEmitter.emit(o.d,this.peerconnection,{bandwidth:this.conferenceStats.bandwidth,bitrate:this.conferenceStats.bitrate,packetLoss:this.conferenceStats.packetLoss,resolution:a,framerate:c,transport:this.conferenceStats.transport,localAvgAudioLevels:I,avgAudioLevels:P}),this.conferenceStats.transport=[]},f.prototype.processAudioLevelReport=function(){if(this.baselineAudioLevelsReport){var e=this._getStatValue;for(var t in this.currentAudioLevelsReport)if(this.currentAudioLevelsReport.hasOwnProperty(t)){var n=this.currentAudioLevelsReport[t];if(\"ssrc\"===n.type||\"track\"===n.type){var i=this.baselineAudioLevelsReport[t],a=this.getNonNegativeStat(n,\"ssrc\");if(!a&&Array.isArray(n.ssrcIds)&&(a=Number(n.ssrcIds[0])),i)if(a){var s=void 0;try{s=e(n,\"audioInputLevel\")||e(n,\"audioOutputLevel\")}catch(e){return u.warn(\"Audio Levels are not available in the statistics.\"),void clearInterval(this.audioLevelsIntervalId)}if(s){var c=void 0;c=\"ssrc\"===n.type?!e(n,\"packetsReceived\"):!n.remoteSource,r.a.isEdge()?s=s<0?Math.pow(10,s/20):0:s/=32767,a in this.audioLevelReportHistory||(this.audioLevelReportHistory[a]={isLocal:c,data:[]}),this.audioLevelReportHistory[a].data.push(s),this.eventEmitter.emit(o.a,this.peerconnection,a,s,c)}}else Date.now()-n.timestamp<3e3&&u.warn(\"No ssrc: \");else u.warn(\"\".concat(a,\" not enough data\"))}}}},f.prototype._defineNewGetStatValueMethod=function(e){return function(t,n){return t[function(t){var n=e[t];if(n)return n;throw\"The property '\".concat(t,\"' isn't supported!\")}(n)]}},f.prototype.getNonNegativeValue=function(e){var t=e;return\"number\"!=typeof t&&(t=Number(t)),isNaN(t)?0:Math.max(0,t)},f.prototype._calculateBitrate=function(e,t,n){var r=this.getNonNegativeValue(e[n]),i=this.getNonNegativeValue(t[n]),o=Math.max(0,r-i),a=e.timestamp-t.timestamp,s=0;return a>0&&(s=Math.round(8*o/a)),s},f.prototype.processNewStatsReport=function(){var e=this;if(this.previousStatsReport){var t=this._getStatValue,n={};this.currentStatsReport.forEach(function(r){if(\"candidate-pair\"===r.type&&r.nominated&&\"succeeded\"===r.state){var i=r.availableIncomingBitrate,o=r.availableOutgoingBitrate;(i||o)&&(e.conferenceStats.bandwidth={download:Math.round(i/1e3),upload:Math.round(o/1e3)});var a=e.currentStatsReport.get(r.remoteCandidateId),s=e.currentStatsReport.get(r.localCandidateId);if(a&&s){var c=t(a,\"ip\"),u=t(a,\"port\"),l=\"\".concat(c,\":\").concat(u),d=t(s,\"ip\"),h=t(s,\"port\"),f=\"\".concat(d,\":\").concat(h),m=t(a,\"protocol\"),v=e.conferenceStats.transport;v.some(function(e){return e.ip===l&&e.type===m&&e.localip===f})||v.push({ip:l,type:m,localIp:f,p2p:e.peerconnection.isP2P,localCandidateType:s.candidateType,remoteCandidateType:a.candidateType,networkType:s.networkType,rtt:1e3*r.currentRoundTripTime})}}else if(\"inbound-rtp\"===r.type||\"outbound-rtp\"===r.type){var y=e.previousStatsReport.get(r.id),g=e.getNonNegativeValue(r.ssrc);if(!y||!g)return;var _=e.ssrc2stats.get(g);_||(_=new p,e.ssrc2stats.set(g,_));var S=!0,b=\"packetsReceived\";\"outbound-rtp\"===r.type&&(S=!1,b=\"packetsSent\");var E=r[b];(!E||E<0)&&(E=0);var T=e.getNonNegativeValue(y[b]),C=Math.max(0,E-T),R=e.getNonNegativeValue(r.packetsLost),A=e.getNonNegativeValue(y.packetsLost),w=Math.max(0,R-A);_.setLoss({packetsTotal:C+w,packetsLost:w,isDownloadStream:S}),\"inbound-rtp\"===r.type?_.addBitrate({download:e._calculateBitrate(r,y,\"bytesReceived\"),upload:0}):(n[g]=e.getNonNegativeValue(r.bytesSent),_.addBitrate({download:0,upload:e._calculateBitrate(r,y,\"bytesSent\")}));var k=r.framerateMean;k&&_.setFramerate(Math.round(k||0))}else if(\"track\"===r.type){var O={height:r.frameHeight,width:r.frameWidth},I=r.framesPerSecond;if(!I){var P=e.previousStatsReport.get(r.id);if(P){var D=r.timestamp-P.timestamp;if(D>0&&r.framesSent)I=(r.framesSent-P.framesSent)/D*1e3}if(!I)return}var N=r.trackIdentifier,L=e.peerconnection.getSsrcByTrackId(N),M=e.ssrc2stats.get(L);M||(M=new p,e.ssrc2stats.set(L,M)),M.setFramerate(Math.round(I||0)),O.height&&O.width?M.setResolution(O):M.setResolution(null)}}),this.eventEmitter.emit(o.c,this.peerconnection,n),this._processAndEmitReport()}},f.prototype.processNewAudioLevelReport=function(){var e=this;this.baselineAudioLevelsReport&&this.currentAudioLevelsReport.forEach(function(t){if(\"track\"===t.type){var n=t.audioLevel;if(n){var r=t.trackIdentifier,i=e.peerconnection.getSsrcByTrackId(r);if(i){var s=i===e.peerconnection.getLocalSSRC(e.peerconnection.getLocalTracks(a.a));e.eventEmitter.emit(o.a,e.peerconnection,i,n,s)}}}})}}).call(this,\"modules\\\\statistics\\\\RTPStatsCollector.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return l});var r=n(1),i=n(4),o=n(2),a=n(41),s=n(9);function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=Object(i.getLogger)(e),l=function(){function e(t,n,i,o,s,c,u){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._jid=t,this._id=r.Strophe.getResourceFromJid(t),this._conference=n,this._displayName=i,this._supportsDTMF=!1,this._tracks=[],this._role=\"none\",this._status=c,this._hidden=o,this._statsID=s,this._connectionStatus=a.a.ACTIVE,this._properties={},this._identity=u}var t,n,i;return t=e,(n=[{key:\"getConference\",value:function(){return this._conference}},{key:\"getProperty\",value:function(e){return this._properties[e]}},{key:\"hasAnyVideoTrackWebRTCMuted\",value:function(){return this.getTracks().some(function(e){return e.getType()===s.b&&e.isWebRTCTrackMuted()})}},{key:\"_setConnectionStatus\",value:function(e){this._connectionStatus=e}},{key:\"getConnectionStatus\",value:function(){return this._connectionStatus}},{key:\"setProperty\",value:function(e,t){var n=this._properties[e];t!==n&&(this._properties[e]=t,this._conference.eventEmitter.emit(o.PARTICIPANT_PROPERTY_CHANGED,this,e,n,t))}},{key:\"getTracks\",value:function(){return this._tracks.slice()}},{key:\"getTracksByMediaType\",value:function(e){return this.getTracks().filter(function(t){return t.getType()===e})}},{key:\"getId\",value:function(){return this._id}},{key:\"getJid\",value:function(){return this._jid}},{key:\"getDisplayName\",value:function(){return this._displayName}},{key:\"getStatsID\",value:function(){return this._statsID}},{key:\"getStatus\",value:function(){return this._status}},{key:\"isModerator\",value:function(){return\"moderator\"===this._role}},{key:\"isHidden\",value:function(){return this._hidden}},{key:\"isAudioMuted\",value:function(){return this._isMediaTypeMuted(s.a)}},{key:\"_isMediaTypeMuted\",value:function(e){return this.getTracks().reduce(function(t,n){return t&&(n.getType()!==e||n.isMuted())},!0)}},{key:\"isVideoMuted\",value:function(){return this._isMediaTypeMuted(s.b)}},{key:\"getRole\",value:function(){return this._role}},{key:\"supportsDTMF\",value:function(){return this._supportsDTMF}},{key:\"getFeatures\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5e3;return this._conference.xmpp.caps.getFeatures(this._jid,t).catch(function(n){return n&&n.constructor===String?e._conference.xmpp.caps.getFeatures(e._jid,t):(u.warn(\"Failed to discover features of \".concat(e._jid),n),Promise.reject(n))})}},{key:\"getBotType\",value:function(){return this._botType}}])&&c(t.prototype,n),i&&c(t,i),e}()}).call(this,\"JitsiParticipant.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return o});var r=n(21),i=n(35);function o(e){var t,n=this,o=e.id,a=e.password,s=e.onCreateResource,c=e.onLoginSuccessful,u=e.roomPassword,l=!1,d=new i.c(this.connection.options),p=new Promise(function(e,i){t=i,d.addListener(r.CONNECTION_DISCONNECTED,function(){d=void 0}),d.addListener(r.CONNECTION_ESTABLISHED,function(){l||(c&&c(),d.createRoom(n.options.name,n.options.config,s).moderator.authenticate().then(function(){d&&d.disconnect(),l||(n.join(u),e())}).catch(function(e){var t=e.error,n=e.message;d.disconnect(),i({authenticationError:t,message:n})}))}),d.addListener(r.CONNECTION_FAILED,function(e,t,n){i({connectionError:e,credentials:n,message:t}),d=void 0}),l||d.connect(o,a)});return p.cancel=function(){l=!0,t({}),d&&d.disconnect()},p}},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(1),o=n(79),a=n(34),s=n(0),c=n.n(s);function u(e){return(u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t){return!t||\"object\"!==u(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function p(e,t,n){return(p=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var m=Object(r.getLogger)(e),v=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(n=d(this,h(t).call(this))).xmpp=e,n.rooms={},n}var n,r,s;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(t,a[\"a\"]),n=t,(r=[{key:\"init\",value:function(e){p(h(t.prototype),\"init\",this).call(this,e),this.connection.addHandler(this.onPresence.bind(this),null,\"presence\",null,null,null,null),this.connection.addHandler(this.onPresenceUnavailable.bind(this),null,\"presence\",\"unavailable\",null),this.connection.addHandler(this.onPresenceError.bind(this),null,\"presence\",\"error\",null),this.connection.addHandler(this.onMessage.bind(this),null,\"message\",null,null),this.connection.addHandler(this.onMute.bind(this),\"http://jitsi.org/jitmeet/audio\",\"iq\",\"set\",null,null)}},{key:\"createRoom\",value:function(e,t,n){var r=i.Strophe.getBareJidFromJid(e);if(this.rooms[r]){var a=\"You are already in the room!\";throw m.error(a),new Error(a)}return this.rooms[r]=new o.a(this.connection,e,t,this.xmpp,n),this.eventEmitter.emit(c.a.EMUC_ROOM_ADDED,this.rooms[r]),this.rooms[r]}},{key:\"doLeave\",value:function(e){this.eventEmitter.emit(c.a.EMUC_ROOM_REMOVED,this.rooms[e]),delete this.rooms[e]}},{key:\"onPresence\",value:function(e){var t=e.getAttribute(\"from\");if(e.getAttribute(\"type\"))return!0;var n=this.rooms[i.Strophe.getBareJidFromJid(t)];return!n||($(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>status[code=\"201\"]').length&&n.createNonAnonymousRoom(),n.onPresence(e),!0)}},{key:\"onPresenceUnavailable\",value:function(e){var t=e.getAttribute(\"from\"),n=this.rooms[i.Strophe.getBareJidFromJid(t)];return!n||(n.onPresenceUnavailable(e,t),!0)}},{key:\"onPresenceError\",value:function(e){var t=e.getAttribute(\"from\"),n=this.rooms[i.Strophe.getBareJidFromJid(t)];return!n||(n.onPresenceError(e,t),!0)}},{key:\"onMessage\",value:function(e){var t=e.getAttribute(\"from\"),n=this.rooms[i.Strophe.getBareJidFromJid(t)];return!n||(n.onMessage(e,t),!0)}},{key:\"onMute\",value:function(e){var t=e.getAttribute(\"from\"),n=this.rooms[i.Strophe.getBareJidFromJid(t)];return!n||(n.onMute(e),!0)}}])&&l(n.prototype,r),s&&l(n,s),t}();t.a=function(e){i.Strophe.addConnectionPlugin(\"emuc\",new v(e))}}).call(this,\"modules\\\\xmpp\\\\strophe.emuc.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return E});var r=n(4),i=n(1),o=n(11),a=n.n(o),s=n(52),c=n(24),u=n(25),l=n(9),d=n(0),p=n.n(d),h=n(80);function f(e){return(f=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t){return!t||\"object\"!==f(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var _=Object(r.getLogger)(e),S={packet2JSON:function(e,t){for(var n=Array.from(e.children),r=0;r<n.length;r++){for(var o=n[r],a={attributes:{},children:[],tagName:o.tagName},s=Array.from(o.attributes),c=0;c<s.length;c++){var u=s[c];a.attributes[u.name]=u.value}var l=i.Strophe.getText(o);l&&(a.value=i.Strophe.xmlunescape(l)),t.push(a),this.packet2JSON(o,a.children)}},json2packet:function(e,t){for(var n=0;n<e.length;n++){var r=e[n];r&&(t.c(r.tagName,r.attributes),r.value&&t.t(r.value),r.children&&this.json2packet(r.children,t),t.up())}}};function b(e,t){for(var n=[],r=0;r<e.length;r++)e[r].tagName===t&&n.push(e[r]);return n}var E=function(e){function t(e,n,r,o,a){var c;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(c=v(this,y(t).call(this))).xmpp=o,c.connection=e,c.roomjid=i.Strophe.getBareJidFromJid(n),c.myroomjid=n,c.password=r,_.info(\"Joined MUC as \".concat(c.myroomjid)),c.members={},c.presMap={},c.presHandlers={},c.joined=!1,c.role=null,c.focusMucJid=null,c.noBridgeAvailable=!1,c.options=a||{},c.moderator=new h.a(c.roomjid,c.xmpp,c.eventEmitter,{connection:c.xmpp.options,conference:c.options}),c.initPresenceMap(a),c.lastPresences={},c.phoneNumber=null,c.phonePin=null,c.connectionTimes={},c.participantPropertyListener=null,c.locked=!1,c.transcriptionStatus=s.OFF,c}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(t,c[\"a\"]),n=t,(r=[{key:\"initPresenceMap\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.presMap.to=this.myroomjid,this.presMap.xns=\"http://jabber.org/protocol/muc\",this.presMap.nodes=[],e.enableStatsID&&this.presMap.nodes.push({tagName:\"stats-id\",value:u.a.callStatsUserName}),this.addVideoInfoToPresence(!1),e.deploymentInfo&&e.deploymentInfo.userRegion&&this.presMap.nodes.push({tagName:\"region\",attributes:{id:e.deploymentInfo.userRegion,xmlns:\"http://jitsi.org/jitsi-meet\"}})}},{key:\"join\",value:function(e){var t=this;return this.password=e,new Promise(function(e){t.options.disableFocus&&_.info(\"Conference focus disabled\"),(t.options.disableFocus?Promise.resolve():t.moderator.allocateConferenceFocus()).then(function(){t.sendPresence(!0),e()})})}},{key:\"sendPresence\",value:function(e){var t=this.presMap.to;if(t&&(this.joined||e)){var n=Object(i.$pres)({to:t});e&&(n.c(\"x\",{xmlns:this.presMap.xns}),this.password&&n.c(\"password\").t(this.password).up(),n.up()),S.json2packet(this.presMap.nodes,n),this.connection.send(n),e&&this.connection.flush()}}},{key:\"doLeave\",value:function(){_.log(\"do leave\",this.myroomjid);var e=Object(i.$pres)({to:this.myroomjid,type:\"unavailable\"});this.presMap.length=0,this.connection.flush(),this.connection.send(e),this.connection.flush()}},{key:\"discoRoomInfo\",value:function(){var e=this,t=Object(i.$iq)({type:\"get\",to:this.roomjid}).c(\"query\",{xmlns:i.Strophe.NS.DISCO_INFO});this.connection.sendIQ(t,function(t){var n=1===$(t).find('>query>feature[var=\"muc_passwordprotected\"]').length;n!==e.locked&&(e.eventEmitter.emit(p.a.MUC_LOCK_CHANGED,n),e.locked=n)},function(e){a.a.callErrorHandler(e),_.error(\"Error getting room info: \",e)})}},{key:\"createNonAnonymousRoom\",value:function(){var e=Object(i.$iq)({type:\"get\",to:this.roomjid}).c(\"query\",{xmlns:\"http://jabber.org/protocol/muc#owner\"}).c(\"x\",{xmlns:\"jabber:x:data\",type:\"submit\"}),t=this;this.connection.sendIQ(e,function(e){if(!$(e).find('>query>x[xmlns=\"jabber:x:data\"]>field[var=\"muc#roomconfig_whois\"]').length){var n=\"non-anonymous rooms not supported\";return a.a.callErrorHandler(new Error(n)),void _.error(n)}var r=Object(i.$iq)({to:t.roomjid,type:\"set\"}).c(\"query\",{xmlns:\"http://jabber.org/protocol/muc#owner\"});r.c(\"x\",{xmlns:\"jabber:x:data\",type:\"submit\"}),r.c(\"field\",{var:\"FORM_TYPE\"}).c(\"value\").t(\"http://jabber.org/protocol/muc#roomconfig\").up().up(),r.c(\"field\",{var:\"muc#roomconfig_whois\"}).c(\"value\").t(\"anyone\").up().up(),t.connection.sendIQ(r)},function(e){a.a.callErrorHandler(e),_.error(\"Error getting room configuration form: \",e)})}},{key:\"onPresence\",value:function(e){var t=e.getAttribute(\"from\"),n={},r=e.getElementsByTagName(\"status\")[0];r&&(n.status=r.textContent||\"\");var o=!1,a=!1,s=e.getElementsByTagNameNS(\"http://jabber.org/protocol/muc#user\",\"x\")[0],c=s&&s.getElementsByTagName(\"item\")[0];n.affiliation=c&&c.getAttribute(\"affiliation\"),n.role=c&&c.getAttribute(\"role\");var u=c&&c.getAttribute(\"jid\");n.jid=u,n.isFocus=u&&0===u.indexOf(\"\".concat(this.moderator.getFocusUserJid(),\"/\")),n.isHiddenDomain=u&&u.indexOf(\"@\")>0&&this.options.hiddenDomain===u.substring(u.indexOf(\"@\")+1,u.indexOf(\"/\")),this.eventEmitter.emit(p.a.PRESENCE_RECEIVED,{fromHiddenDomain:n.isHiddenDomain,presence:e});var l=e.querySelector(\"x\");l&&l.remove();var d=[];S.packet2JSON(e,d),this.lastPresences[t]=d;for(var h=function(e){var t={},n=e.children.find(function(e){return\"user\"===e.tagName});if(n){t.user={};for(var r=[\"id\",\"name\",\"avatar\"],i=function(){var e=r[o],i=n.children.find(function(t){return t.tagName===e});i&&(t.user[e]=i.value)},o=0;o<r.length;o++)i()}var a=e.children.find(function(e){return\"group\"===e.tagName});return a&&(t.group=a.value),t},f=0;f<d.length;f++){var m=d[f];switch(m.tagName){case\"bot\":var v=m.attributes;if(!v)break;var y=v.type;n.botType=y;break;case\"nick\":n.nick=m.value;break;case\"userId\":n.id=m.value;break;case\"stats-id\":n.statsID=m.value;break;case\"identity\":n.identity=h(m);break;case\"stat\":var g=m.attributes;if(!g)break;\"version\"===g.name&&(n.version=g.value)}}if(t===this.myroomjid){var b=\"owner\"===n.affiliation?n.role:\"none\";if(this.role!==b&&(this.role=b,this.eventEmitter.emit(p.a.LOCAL_ROLE_CHANGED,this.role)),!this.joined){this.joined=!0;var E=this.connectionTimes[\"muc.joined\"]=window.performance.now();_.log(\"(TIME) MUC joined:\\t\",E),this.password&&(this.locked=!0),this.sendPresence(),this.eventEmitter.emit(p.a.MUC_JOINED)}}else if(void 0===this.members[t])this.members[t]=n,_.log(\"entered\",t,n),o=void 0!==n.status,a=void 0!==n.version,n.isFocus?this._initFocus(t,u):(this.eventEmitter.emit(p.a.MUC_MEMBER_JOINED,t,n.nick,n.role,n.isHiddenDomain,n.statsID,n.status,n.identity,n.botType),o=!1);else{var T=this.members[t];T.role!==n.role&&(T.role=n.role,this.eventEmitter.emit(p.a.MUC_ROLE_CHANGED,t,n.role)),T.botType!==n.botType&&(T.botType=n.botType,this.eventEmitter.emit(p.a.MUC_MEMBER_BOT_TYPE_CHANGED,t,n.botType)),n.isFocus&&(T.isFocus=!0,this._initFocus(t,u)),n.displayName&&(T.displayName=n.displayName),T.status!==n.status&&(o=!0,T.status=n.status),T.version!==n.version&&(a=!0,T.version=n.version)}for(var C=0;C<d.length;C++){var R=d[C];switch(R.tagName){case\"nick\":if(!n.isFocus){var A=this.xmpp.options.displayJids?i.Strophe.getResourceFromJid(t):n.nick;this.eventEmitter.emit(p.a.DISPLAY_NAME_CHANGED,t,A)}break;case\"bridgeNotAvailable\":n.isFocus&&!this.noBridgeAvailable&&(this.noBridgeAvailable=!0,this.eventEmitter.emit(p.a.BRIDGE_DOWN));break;case\"conference-properties\":if(n.isFocus){for(var w={},k=0;k<R.children.length;k++){var O=R.children[k].attributes;O&&O.key&&(w[O.key]=O.value)}this.eventEmitter.emit(p.a.CONFERENCE_PROPERTIES_CHANGED,w)}break;case\"transcription-status\":var I=R.attributes;if(!I)break;var P=I.status;P&&P!==this.transcriptionStatus&&(this.transcriptionStatus=P,this.eventEmitter.emit(p.a.TRANSCRIPTION_STATUS_CHANGED,P));break;case\"call-control\":var D=R.attributes;if(!D)break;this.phoneNumber=D.phone||null,this.phonePin=D.pin||null,this.eventEmitter.emit(p.a.PHONE_NUMBER_CHANGED);break;default:this.processNode(R,t)}}o&&this.eventEmitter.emit(p.a.PRESENCE_STATUS,t,n.status),a&&_.info(\"Received version for \".concat(u,\": \").concat(n.version))}},{key:\"_initFocus\",value:function(e,t){this.focusMucJid=e,_.info(\"Ignore focus: \".concat(e,\", real JID: \").concat(t))}},{key:\"setParticipantPropertyListener\",value:function(e){this.participantPropertyListener=e}},{key:\"processNode\",value:function(e,t){try{var n=this.presHandlers[e.tagName];e.tagName.startsWith(\"jitsi_participant_\")&&(n=[this.participantPropertyListener]),n&&n.forEach(function(n){n(e,i.Strophe.getResourceFromJid(t),t)})}catch(t){a.a.callErrorHandler(t),_.error(\"Error processing:\".concat(e.tagName,\" node.\"),t)}}},{key:\"sendMessage\",value:function(e,t,n){var r=Object(i.$msg)({to:this.roomjid,type:\"groupchat\"});\"body\"===t?r.c(t,e).up():r.c(t,{xmlns:\"http://jitsi.org/jitmeet\"},e).up(),n&&r.c(\"nick\",{xmlns:\"http://jabber.org/protocol/nick\"}).t(n).up().up(),this.connection.send(r),this.eventEmitter.emit(p.a.SENDING_CHAT_MESSAGE,e)}},{key:\"sendPrivateMessage\",value:function(e,t,n,r){var o=Object(i.$msg)({to:\"\".concat(this.roomjid,\"/\").concat(e),type:\"chat\"});\"body\"===n?o.c(n,t).up():o.c(n,{xmlns:\"http://jitsi.org/jitmeet\"},t).up(),r&&o.c(\"nick\",{xmlns:\"http://jabber.org/protocol/nick\"}).t(r).up().up(),this.connection.send(o),this.eventEmitter.emit(p.a.SENDING_PRIVATE_CHAT_MESSAGE,t)}},{key:\"setSubject\",value:function(e){var t=Object(i.$msg)({to:this.roomjid,type:\"groupchat\"});t.c(\"subject\",e),this.connection.send(t)}},{key:\"onParticipantLeft\",value:function(e,t){delete this.lastPresences[e],t||(this.eventEmitter.emit(p.a.MUC_MEMBER_LEFT,e),this.moderator.onMucMemberLeft(e))}},{key:\"onPresenceUnavailable\",value:function(e,t){var n=this;if($(e).find('>ignore[xmlns=\"http://jitsi.org/jitmeet/\"]').length)return!0;if($(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>destroy').length){var r,o=$(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>destroy>reason');return o.length&&(r=o.text()),this.eventEmitter.emit(p.a.MUC_DESTROYED,r),this.connection.emuc.doLeave(this.roomjid),!0}var a=$(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>status[code=\"110\"]').length,s=$(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>status[code=\"307\"]').length,c=Object.keys(this.members);if(s){var u,l=$(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>item>actor');l.length&&(u=l.attr(\"nick\")),c.find(function(e){return i.Strophe.getResourceFromJid(e)===u})&&this.eventEmitter.emit(p.a.KICKED,a,u,i.Strophe.getResourceFromJid(t))}a?c.length>0&&(c.forEach(function(e){var t=n.members[e];delete n.members[e],n.onParticipantLeft(e,t.isFocus)}),this.connection.emuc.doLeave(this.roomjid),s||this.eventEmitter.emit(p.a.MUC_LEFT)):(delete this.members[t],this.onParticipantLeft(t,!1))}},{key:\"onMessage\",value:function(e,t){var n=$(e).find('>nick[xmlns=\"http://jabber.org/protocol/nick\"]').text()||i.Strophe.getResourceFromJid(t),r=$(e).find(\">body\").text(),o=e.getAttribute(\"type\");if(\"error\"===o)return this.eventEmitter.emit(p.a.CHAT_ERROR_RECEIVED,$(e).find(\">text\").text(),r),!0;var a=$(e).find(\">subject\");if(a.length){var s=a.text();(s||\"\"===s)&&(this.eventEmitter.emit(p.a.SUBJECT_CHANGED,s),_.log(\"Subject is changed to \".concat(s)))}var c=$(e).find(\">delay\").attr(\"stamp\");if(!c&&(c=$(e).find('>[xmlns=\"jabber:x:delay\"]').attr(\"stamp\"))){var u=c.match(/(\\d{4})(\\d{2})(\\d{2}T\\d{2}:\\d{2}:\\d{2})/);c=\"\".concat(u[1],\"-\").concat(u[2],\"-\").concat(u[3],\"Z\")}t===this.roomjid&&$(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>status[code=\"104\"]').length&&this.discoRoomInfo();var l=$(e).find(\">json-message\").text(),d=this.xmpp.tryParseJSONAndVerify(l);d&&void 0===c?this.eventEmitter.emit(p.a.JSON_MESSAGE_RECEIVED,t,d):r&&(\"chat\"===o?this.eventEmitter.emit(p.a.PRIVATE_MESSAGE_RECEIVED,t,n,r,this.myroomjid,c):\"groupchat\"===o&&this.eventEmitter.emit(p.a.MESSAGE_RECEIVED,t,n,r,this.myroomjid,c))}},{key:\"onPresenceError\",value:function(e,t){if($(e).find('>error[type=\"auth\"]>not-authorized[xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]').length)_.log(\"on password required\",t),this.eventEmitter.emit(p.a.PASSWORD_REQUIRED);else if($(e).find('>error[type=\"cancel\"]>not-allowed[xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]').length){i.Strophe.getDomainFromJid(e.getAttribute(\"to\"))===this.xmpp.options.hosts.anonymousdomain?this.eventEmitter.emit(p.a.ROOM_JOIN_ERROR):(_.warn(\"onPresError \",e),this.eventEmitter.emit(p.a.ROOM_CONNECT_NOT_ALLOWED_ERROR))}else $(e).find(\">error>service-unavailable\").length?(_.warn(\"Maximum users limit for the room has been reached\",e),this.eventEmitter.emit(p.a.ROOM_MAX_USERS_ERROR)):(_.warn(\"onPresError \",e),this.eventEmitter.emit(p.a.ROOM_CONNECT_ERROR))}},{key:\"kick\",value:function(e){var t=Object(i.$iq)({to:this.roomjid,type:\"set\"}).c(\"query\",{xmlns:\"http://jabber.org/protocol/muc#admin\"}).c(\"item\",{nick:i.Strophe.getResourceFromJid(e),role:\"none\"}).c(\"reason\").t(\"You have been kicked.\").up().up().up();this.connection.sendIQ(t,function(t){return _.log(\"Kick participant with jid: \",e,t)},function(e){return _.log(\"Kick participant error: \",e)})}},{key:\"lockRoom\",value:function(e,t,n,r){var o=this;this.connection.sendIQ(Object(i.$iq)({to:this.roomjid,type:\"get\"}).c(\"query\",{xmlns:\"http://jabber.org/protocol/muc#owner\"}),function(a){if($(a).find('>query>x[xmlns=\"jabber:x:data\"]>field[var=\"muc#roomconfig_roomsecret\"]').length){var s=Object(i.$iq)({to:o.roomjid,type:\"set\"}).c(\"query\",{xmlns:\"http://jabber.org/protocol/muc#owner\"});s.c(\"x\",{xmlns:\"jabber:x:data\",type:\"submit\"}),s.c(\"field\",{var:\"FORM_TYPE\"}).c(\"value\").t(\"http://jabber.org/protocol/muc#roomconfig\").up().up(),s.c(\"field\",{var:\"muc#roomconfig_roomsecret\"}).c(\"value\").t(e).up().up(),s.c(\"field\",{var:\"muc#roomconfig_whois\"}).c(\"value\").t(\"anyone\").up().up(),o.connection.sendIQ(s,t,n)}else r()},n)}},{key:\"addToPresence\",value:function(e,t){t.tagName=e,this.removeFromPresence(e),this.presMap.nodes.push(t)}},{key:\"getFromPresence\",value:function(e){return this.presMap.nodes.find(function(t){return e===t.tagName})}},{key:\"removeFromPresence\",value:function(e){var t=this.presMap.nodes.filter(function(t){return e!==t.tagName});this.presMap.nodes=t}},{key:\"addPresenceListener\",value:function(e,t){if(\"function\"!=typeof t)throw new Error('\"handler\" is not a function');var n=this.presHandlers[e];n||(this.presHandlers[e]=n=[]),-1===n.indexOf(t)?n.push(t):_.warn(\"Trying to add the same handler more than once for: \".concat(e))}},{key:\"removePresenceListener\",value:function(e,t){var n=this.presHandlers[e],r=n?n.indexOf(t):-1;-1!==r?n.splice(r,1):_.warn(\"Handler for: \".concat(e,\" was not registered\"))}},{key:\"isFocus\",value:function(e){var t=this.members[e];return t?t.isFocus:null}},{key:\"isModerator\",value:function(){return\"moderator\"===this.role}},{key:\"getMemberRole\",value:function(e){return this.members[e]?this.members[e].role:null}},{key:\"setVideoMute\",value:function(e,t){this.sendVideoInfoPresence(e),t&&t(e)}},{key:\"setAudioMute\",value:function(e,t){return this.sendAudioInfoPresence(e,t)}},{key:\"addAudioInfoToPresence\",value:function(e){this.removeFromPresence(\"audiomuted\"),this.addToPresence(\"audiomuted\",{attributes:{xmlns:\"http://jitsi.org/jitmeet/audio\"},value:e.toString()})}},{key:\"sendAudioInfoPresence\",value:function(e,t){this.addAudioInfoToPresence(e),this.connection&&this.sendPresence(),t&&t()}},{key:\"addVideoInfoToPresence\",value:function(e){this.removeFromPresence(\"videomuted\"),this.addToPresence(\"videomuted\",{attributes:{xmlns:\"http://jitsi.org/jitmeet/video\"},value:e.toString()})}},{key:\"sendVideoInfoPresence\",value:function(e){this.addVideoInfoToPresence(e),this.connection&&this.sendPresence()}},{key:\"getMediaPresenceInfo\",value:function(e,t){var n=this.lastPresences[\"\".concat(this.roomjid,\"/\").concat(e)];if(!n)return null;var r={muted:!1,videoType:void 0},i=null;if(t===l.a)i=b(n,\"audiomuted\");else{if(t!==l.b)return _.error(\"Unsupported media type: \".concat(t)),null;i=b(n,\"videomuted\");var o=b(n,\"videoType\");o.length>0&&(r.videoType=o[0].value)}return r.muted=i.length>0&&\"true\"===i[0].value,r}},{key:\"isSIPCallingSupported\",value:function(){return!!this.moderator&&this.moderator.isSipGatewayEnabled()}},{key:\"dial\",value:function(e){return this.connection.rayo.dial(e,\"fromnumber\",i.Strophe.getBareJidFromJid(this.myroomjid),this.password,this.focusMucJid)}},{key:\"hangup\",value:function(){return this.connection.rayo.hangup()}},{key:\"getPhoneNumber\",value:function(){return this.phoneNumber}},{key:\"getPhonePin\",value:function(){return this.phonePin}},{key:\"muteParticipant\",value:function(e,t){_.info(\"set mute\",t);var n=Object(i.$iq)({to:this.focusMucJid,type:\"set\"}).c(\"mute\",{xmlns:\"http://jitsi.org/jitmeet/audio\",jid:e}).t(t.toString()).up();this.connection.sendIQ(n,function(e){return _.log(\"set mute\",e)},function(e){return _.log(\"set mute error\",e)})}},{key:\"onMute\",value:function(e){if(e.getAttribute(\"from\")===this.focusMucJid){var t=$(e).find(\"mute\");t.length&&\"true\"===t.text()?this.eventEmitter.emit(p.a.AUDIO_MUTED_BY_FOCUS,t.attr(\"actor\")):_.warn(\"Ignoring a mute request which does not explicitly specify a positive mute command.\")}else _.warn(\"Ignored mute from non focus peer\")}},{key:\"leave\",value:function(){var e=this;return new Promise(function(t,n){var r=setTimeout(function(){return o(!0)},5e3),i=e.eventEmitter;function o(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];i.removeListener(p.a.MUC_LEFT,o),clearTimeout(r),e?n(new Error(\"The timeout for the confirmation about leaving the room expired.\")):t()}i.on(p.a.MUC_LEFT,o),e.doLeave()})}}])&&m(n.prototype,r),o&&m(n,o),t}()}).call(this,\"modules\\\\xmpp\\\\ChatRoom.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return d});var r=n(1),i=n(3),o=n(25),a=n(4).getLogger(e),s=n(0),c=n(57),u=n(11);function l(e){var t=1;return function(n){if(!n){var r=Math.pow(2,t-1);return t+=1,r*e}t=1}}function d(e,t,n,r){function i(e){if(e.data&&e.data.sessionId){if(e.origin!==window.location.origin)return void a.warn(\"Ignoring sessionId from different origin: \".concat(e.origin));o.a.sessionId=e.data.sessionId}}this.roomName=e,this.xmppService=t,this.getNextTimeout=l(1e3),this.getNextErrorTimeout=l(1e3),this.externalAuthEnabled=!1,this.options=r,this.sipGatewayEnabled=this.options.connection.hosts&&void 0!==this.options.connection.hosts.call_control,this.eventEmitter=n,this.connection=this.xmppService.connection,window.addEventListener?window.addEventListener(\"message\",i,!1):window.attachEvent(\"onmessage\",i)}d.prototype.isExternalAuthEnabled=function(){return this.externalAuthEnabled},d.prototype.isSipGatewayEnabled=function(){return this.sipGatewayEnabled},d.prototype.onMucMemberLeft=function(e){a.info(\"Someone left is it focus ? \".concat(e)),\"focus\"===r.Strophe.getResourceFromJid(e)&&(a.info(\"Focus has left the room - leaving conference\"),this.eventEmitter.emit(s.FOCUS_LEFT))},d.prototype.setFocusUserJid=function(e){this.focusUserJid||(this.focusUserJid=e,a.info(\"Focus jid set to:  \".concat(this.focusUserJid)))},d.prototype.getFocusUserJid=function(){return this.focusUserJid},d.prototype.getFocusComponent=function(){var e=this.options.connection.hosts.focus;return e||(e=\"focus.\".concat(this.options.connection.hosts.domain)),e},d.prototype.createConferenceIq=function(){var e,t=Object(r.$iq)({to:this.getFocusComponent(),type:\"set\"}),n=o.a.sessionId,s=o.a.machineId,c=this.options.conference;switch(a.info(\"Session ID: \".concat(n,\" machine UID: \").concat(s)),t.c(\"conference\",{xmlns:\"http://jitsi.org/protocol/focus\",room:this.roomName,\"machine-uid\":s}),n&&t.attrs({\"session-id\":n}),void 0!==this.options.connection.enforcedBridge&&t.c(\"property\",{name:\"enforcedBridge\",value:this.options.connection.enforcedBridge}).up(),void 0!==this.options.connection.hosts&&void 0!==this.options.connection.hosts.call_control&&t.c(\"property\",{name:\"call_control\",value:this.options.connection.hosts.call_control}).up(),void 0!==c.channelLastN&&t.c(\"property\",{name:\"channelLastN\",value:c.channelLastN}).up(),t.c(\"property\",{name:\"disableRtx\",value:Boolean(c.disableRtx)}).up(),void 0!==c.enableTcc&&t.c(\"property\",{name:\"enableTcc\",value:Boolean(c.enableTcc)}).up(),void 0!==c.enableRemb&&t.c(\"property\",{name:\"enableRemb\",value:Boolean(c.enableRemb)}).up(),void 0!==c.minParticipants&&t.c(\"property\",{name:\"minParticipants\",value:c.minParticipants}).up(),t.c(\"property\",{name:\"enableLipSync\",value:!1!==this.options.connection.enableLipSync}).up(),void 0!==c.audioPacketDelay&&t.c(\"property\",{name:\"audioPacketDelay\",value:c.audioPacketDelay}).up(),c.startBitrate&&t.c(\"property\",{name:\"startBitrate\",value:c.startBitrate}).up(),c.minBitrate&&t.c(\"property\",{name:\"minBitrate\",value:c.minBitrate}).up(),c.testing&&c.testing.octo&&\"number\"==typeof c.testing.octo.probability&&Math.random()<c.testing.octo.probability&&t.c(\"property\",{name:\"octo\",value:!0}).up(),this.options.conference.openBridgeChannel){case\"datachannel\":case!0:case void 0:e=!0;break;case\"websocket\":e=!1}return e&&!i.a.supportsDataChannels()&&(e=!1),t.c(\"property\",{name:\"openSctp\",value:e}).up(),void 0!==this.options.conference.startAudioMuted&&t.c(\"property\",{name:\"startAudioMuted\",value:this.options.conference.startAudioMuted}).up(),void 0!==this.options.conference.startVideoMuted&&t.c(\"property\",{name:\"startVideoMuted\",value:this.options.conference.startVideoMuted}).up(),void 0!==this.options.conference.stereo&&t.c(\"property\",{name:\"stereo\",value:this.options.conference.stereo}).up(),void 0!==this.options.conference.useRoomAsSharedDocumentName&&t.c(\"property\",{name:\"useRoomAsSharedDocumentName\",value:this.options.conference.useRoomAsSharedDocumentName}).up(),t.up(),t},d.prototype.parseSessionId=function(e){var t=$(e).find(\"conference\").attr(\"session-id\");t&&(a.info(\"Received sessionId:  \".concat(t)),o.a.sessionId=t)},d.prototype.parseConfigOptions=function(e){this.setFocusUserJid($(e).find(\"conference\").attr(\"focusjid\"));var t=$(e).find(\">conference>property[name='authentication'][value='true']\").length>0;a.info(\"Authentication enabled: \".concat(t)),this.externalAuthEnabled=$(e).find(\">conference>property[name='externalAuth'][value='true']\").length>0,a.info(\"External authentication enabled: \".concat(this.externalAuthEnabled)),this.externalAuthEnabled||this.parseSessionId(e);var n=$(e).find(\">conference\").attr(\"identity\");this.eventEmitter.emit(c.IDENTITY_UPDATED,t,n),$(e).find(\">conference>property[name='sipGatewayEnabled'][value='true']\").length&&(this.sipGatewayEnabled=!0),a.info(\"Sip gateway enabled:  \".concat(this.sipGatewayEnabled))},d.prototype.allocateConferenceFocus=function(){var e=this;return new Promise(function(t){e.setFocusUserJid(e.options.connection.focusUserJid),e.connection.sendIQ(e.createConferenceIq(),function(n){return e._allocateConferenceFocusSuccess(n,t)},function(n){return e._allocateConferenceFocusError(n,t)}),e.connection.flush()})},d.prototype._allocateConferenceFocusError=function(e,t){var n=this,i=$(e).find(\">error>session-invalid\").length||$(e).find(\">error>not-acceptable\").length;if(i&&(a.info(\"Session expired! - removing\"),o.a.sessionId=void 0),$(e).find(\">error>graceful-shutdown\").length)this.eventEmitter.emit(s.GRACEFUL_SHUTDOWN);else{var c=$(e).find(\">error>reservation-error\");if(c.length){var l,d=c.attr(\"error-code\"),p=$(e).find(\">error>text\");return p&&(l=p.text()),void this.eventEmitter.emit(s.RESERVATION_ERROR,d,l)}if($(e).find(\">error>not-authorized\").length)return a.warn(\"Unauthorized to start the conference\",e),r.Strophe.getDomainFromJid(e.getAttribute(\"to\"))!==this.options.connection.hosts.anonymousdomain&&(this.externalAuthEnabled=!0),void this.eventEmitter.emit(s.AUTHENTICATION_REQUIRED);var h=this.getNextErrorTimeout(),f=\"Focus error, retry after \".concat(h);u.callErrorHandler(new Error(f)),a.error(f,e);var m=this.getFocusComponent(),v=h/1e3;i||this.eventEmitter.emit(s.FOCUS_DISCONNECTED,m,v),this.getNextTimeout(!0),window.setTimeout(function(){return n.allocateConferenceFocus().then(t)},h)}},d.prototype._allocateConferenceFocusSuccess=function(e,t){var n=this;if(this.parseConfigOptions(e),this.getNextErrorTimeout(!0),\"true\"===$(e).find(\"conference\").attr(\"ready\"))this.getNextTimeout(!0),t();else{var r=this.getNextTimeout();a.info(\"Waiting for the focus... \".concat(r)),window.setTimeout(function(){return n.allocateConferenceFocus().then(t)},r)}},d.prototype.authenticate=function(){var e=this;return new Promise(function(t,n){e.connection.sendIQ(e.createConferenceIq(),function(n){e.parseSessionId(n),t()},function(e){return n({error:$(e).find(\"iq>error :first\").prop(\"tagName\"),message:$(e).find(\"iq>error>text\").text()})})})},d.prototype.getLoginUrl=function(e,t){this._getLoginUrl(!1,e,t)},d.prototype._getLoginUrl=function(e,t,n){var i=Object(r.$iq)({to:this.getFocusComponent(),type:\"get\"}),s={xmlns:\"http://jitsi.org/protocol/focus\",room:this.roomName,\"machine-uid\":o.a.machineId},c=\"auth url\";function l(e,t){u.callErrorHandler(new Error(e)),a.error(e,t),n(t)}e&&(s.popup=!0,c=\"POPUP \".concat(c)),i.c(\"login-url\",s),this.connection.sendIQ(i,function(e){var n=$(e).find(\"login-url\").attr(\"url\");(n=decodeURIComponent(n))?(a.info(\"Got \".concat(c,\": \").concat(n)),t(n)):l(\"Failed to get \".concat(c,\" from the focus\"),e)},l.bind(void 0,\"Get \".concat(c,\" error\")))},d.prototype.getPopupLoginUrl=function(e,t){this._getLoginUrl(!0,e,t)},d.prototype.logout=function(e){var t=Object(r.$iq)({to:this.getFocusComponent(),type:\"set\"}),n=o.a.sessionId;n?(t.c(\"logout\",{xmlns:\"http://jitsi.org/protocol/focus\",\"session-id\":n}),this.connection.sendIQ(t,function(t){var n=$(t).find(\"logout\").attr(\"logout-url\");n&&(n=decodeURIComponent(n)),a.info(\"Log out OK, url: \".concat(n),t),o.a.sessionId=void 0,e(n)},function(e){u.callErrorHandler(new Error(\"Logout error\")),a.error(\"Logout error\",e)})):e()}}).call(this,\"modules\\\\xmpp\\\\moderator.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return T});var r=n(8),i=n(4),o=n(1),a=n(0),s=n.n(a),c=n(11),u=n.n(c),l=n(33),d=n.n(l),p=n(5),h=n(44),f=n(34);function m(e){return(m=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t){return!t||\"object\"!==m(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function g(e,t,n){return(g=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function _(e){return(_=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function S(e,t){return(S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var b=Object(i.getLogger)(e),E=function(e){function t(e,n,r){var i;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(i=y(this,_(t).call(this))).xmpp=e,i.eventEmitter=n,i.sessions={},i.jvbIceConfig=r.jvb,i.p2pIceConfig=r.p2p,i.mediaConstraints={offerToReceiveAudio:!0,offerToReceiveVideo:!0},i}var n,i,a;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(t,f[\"b\"]),n=t,(i=[{key:\"init\",value:function(e){g(_(t.prototype),\"init\",this).call(this,e),this.connection.addHandler(this.onJingle.bind(this),\"urn:xmpp:jingle:1\",\"iq\",\"set\",null,null)}},{key:\"onJingle\",value:function(e){var t=$(e).find(\"jingle\").attr(\"sid\"),n=$(e).find(\"jingle\").attr(\"action\"),i=e.getAttribute(\"from\"),a=Object(o.$iq)({type:\"result\",to:i,id:e.getAttribute(\"id\")});b.log(\"on jingle \".concat(n,\" from \").concat(i),e);var c=this.sessions[t];if(\"session-initiate\"!==n){if(!c)return a.attrs({type:\"error\"}),a.c(\"error\",{type:\"cancel\"}).c(\"item-not-found\",{xmlns:\"urn:ietf:params:xml:ns:xmpp-stanzas\"}).up().c(\"unknown-session\",{xmlns:\"urn:xmpp:jingle:errors:1\"}),b.warn(\"invalid session id\",e),this.connection.send(a),!0;if(i!==c.remoteJid)return b.warn(\"jid mismatch for session id\",t,c.remoteJid,e),a.attrs({type:\"error\"}),a.c(\"error\",{type:\"cancel\"}).c(\"item-not-found\",{xmlns:\"urn:ietf:params:xml:ns:xmpp-stanzas\"}).up().c(\"unknown-session\",{xmlns:\"urn:xmpp:jingle:errors:1\"}),this.connection.send(a),!0}else if(void 0!==c)return a.attrs({type:\"error\"}),a.c(\"error\",{type:\"cancel\"}).c(\"service-unavailable\",{xmlns:\"urn:ietf:params:xml:ns:xmpp-stanzas\"}).up(),b.warn(\"duplicate session id\",t,e),this.connection.send(a),!0;var l=window.performance.now(),d=\"focus\"!==o.Strophe.getResourceFromJid(i);switch(n){case\"session-initiate\":b.log(\"(TIME) received session-initiate:\\t\",l);var f=$(e).find(\"jingle>startmuted\");if(f&&f.length>0){var m=f.attr(\"audio\"),v=f.attr(\"video\");this.eventEmitter.emit(s.a.START_MUTED_FROM_FOCUS,\"true\"===m,\"true\"===v)}b.info(\"Marking session from \".concat(i,\" as \").concat(d?\"\":\"*not*\",\" P2P\")),c=new h.a($(e).find(\"jingle\").attr(\"sid\"),$(e).attr(\"to\"),i,this.connection,this.mediaConstraints,d?this.p2pIceConfig:this.jvbIceConfig,d,!1),this.sessions[c.sid]=c,this.eventEmitter.emit(s.a.CALL_INCOMING,c,$(e).find(\">jingle\"),l);break;case\"session-accept\":this.eventEmitter.emit(s.a.CALL_ACCEPTED,c,$(e).find(\">jingle\"));break;case\"content-modify\":c.modifyContents($(e).find(\">jingle\"));break;case\"transport-info\":this.eventEmitter.emit(s.a.TRANSPORT_INFO,c,$(e).find(\">jingle\"));break;case\"session-terminate\":b.log(\"terminating...\",c.sid);var y=null,g=null;$(e).find(\">jingle>reason\").length&&(y=$(e).find(\">jingle>reason>:first\")[0].tagName,g=$(e).find(\">jingle>reason>text\").text()),this.terminate(c.sid,y,g),this.eventEmitter.emit(s.a.CALL_ENDED,c,y,g);break;case\"transport-replace\":b.info(\"(TIME) Start transport replace\",l),p.a.sendAnalytics(Object(r.E)(r.f,{p2p:d,value:l})),c.replaceTransport($(e).find(\">jingle\"),function(){var e=window.performance.now();b.info(\"(TIME) Transport replace success!\",e),p.a.sendAnalytics(Object(r.E)(r.g,{p2p:d,value:e}))},function(e){u.a.callErrorHandler(e),b.error(\"Transport replace failed\",e),c.sendTransportReject()});break;case\"addsource\":case\"source-add\":c.addRemoteStream($(e).find(\">jingle>content\"));break;case\"removesource\":case\"source-remove\":c.removeRemoteStream($(e).find(\">jingle>content\"));break;default:b.warn(\"jingle action not implemented\",n),a.attrs({type:\"error\"}),a.c(\"error\",{type:\"cancel\"}).c(\"bad-request\",{xmlns:\"urn:ietf:params:xml:ns:xmpp-stanzas\"}).up()}return this.connection.send(a),!0}},{key:\"newP2PJingleSession\",value:function(e,t){var n=new h.a(d.a.randomHexString(12),e,t,this.connection,this.mediaConstraints,this.p2pIceConfig,!0,!0);return this.sessions[n.sid]=n,n}},{key:\"terminate\",value:function(e,t,n){this.sessions.hasOwnProperty(e)&&(\"ended\"!==this.sessions[e].state&&this.sessions[e].onTerminated(t,n),delete this.sessions[e])}},{key:\"getStunAndTurnCredentials\",value:function(){var e=this;this.connection.sendIQ(Object(o.$iq)({type:\"get\",to:this.connection.domain}).c(\"services\",{xmlns:\"urn:xmpp:extdisco:1\"}),function(t){var n=[];$(t).find(\">services>service\").each(function(e,t){var r={},i=(t=$(t)).attr(\"type\");switch(i){case\"stun\":r.url=\"stun:\".concat(t.attr(\"host\")),t.attr(\"port\")&&(r.url+=\":\".concat(t.attr(\"port\"))),n.push(r);break;case\"turn\":case\"turns\":r.url=\"\".concat(i,\":\");var o=t.attr(\"username\");if(o){var a=navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);a&&parseInt(a[2],10)<28?r.url+=\"\".concat(o,\"@\"):r.username=o}r.url+=t.attr(\"host\"),t.attr(\"port\")&&(r.url+=\":\".concat(t.attr(\"port\")));var s=t.attr(\"transport\");s&&\"udp\"!==s&&(r.url+=\"?transport=\".concat(s)),r.credential=t.attr(\"password\")||r.credential,n.push(r)}});var r=e.xmpp.options;r.useStunTurn&&(e.jvbIceConfig.iceServers=n.filter(function(e){return e.url.startsWith(\"turns\")})),r.p2p&&r.p2p.useStunTurn&&(e.p2pIceConfig.iceServers=n)},function(e){b.warn(\"getting turn credentials failed\",e),b.warn(\"is mod_turncredentials or similar installed?\")})}},{key:\"getLog\",value:function(){var e=this,t={};return Object.keys(this.sessions).forEach(function(n){var r=e.sessions[n].peerconnection;r&&r.updateLog&&(t[\"jingle_\".concat(n)]={updateLog:r.updateLog,stats:r.stats,url:window.location.href})}),t}}])&&v(n.prototype,i),a&&v(n,a),t}();function T(e,t,n){o.Strophe.addConnectionPlugin(\"jingle\",new E(e,t,n))}}).call(this,\"modules\\\\xmpp\\\\strophe.jingle.js\")},function(e,t){e.exports={integerHash:function(e){if(!e)return 0;var t,n=0;for(t=0;t<e.length;t++)n+=e.charCodeAt(t)*Math.pow(31,e.length-1-t),n=Math.abs(0|n);return n}}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return s});var r=n(4),i=n(31);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=Object(r.getLogger)(e),s=function(){function e(t,n,r,i,o,a,s){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.sid=t,this.localJid=n,this.remoteJid=r,this.connection=i,this.mediaConstraints=o,this.iceConfig=a,this.isInitiator=s,this.usedrip=!0,this.dripContainer=[],this.room=null,this.state=null,this.rtc=null}var t,n,r;return t=e,(n=[{key:\"initialize\",value:function(e,t,n){if(null!==this.state){var r=\"attempt to initiate on session \".concat(this.sid,\"\\n                   in state \").concat(this.state);throw a.error(r),new Error(r)}this.room=e,this.rtc=t,this.state=i.c,this.doInitialize(n)}},{key:\"doInitialize\",value:function(e){}},{key:\"addIceCandidates\",value:function(e){}},{key:\"getState\",value:function(){return this.state}},{key:\"addSources\",value:function(e){}},{key:\"removeSources\",value:function(e){}},{key:\"terminate\",value:function(e,t,n){}},{key:\"acceptOffer\",value:function(e,t,n){}},{key:\"_getInitiatorJid\",value:function(){return this.isInitiator?this.localJid:this.remoteJid}},{key:\"initiatorJid\",get:function(){return this.isInitiator?this.localJid:this.remoteJid}},{key:\"responderJid\",get:function(){return this.isInitiator?this.remoteJid:this.localJid}}])&&o(t.prototype,n),r&&o(t,r),e}()}).call(this,\"modules\\\\xmpp\\\\JingleSession.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return h});var r=n(4),i=n(9),o=n(37),a=n(85);function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t){return!t||\"object\"!==s(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var p=Object(r.getLogger)(e),h=function(e){function t(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(e=u(this,l(t).call(this))).ssrcOwners=new Map,e.chatRoom=null,e}var n,r,s;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,a[\"a\"]),n=t,(r=[{key:\"setChatRoom\",value:function(e){var t=this,n=this.chatRoom;this.chatRoom=e,n&&(n.removePresenceListener(\"audiomuted\",this._audioMuteHandler),n.removePresenceListener(\"videomuted\",this._videoMuteHandler),n.removePresenceListener(\"videoType\",this._videoTypeHandler)),e&&(this._audioMuteHandler=function(e,n){t.eventEmitter.emit(o.a,n,i.a,\"true\"===e.value)},e.addPresenceListener(\"audiomuted\",this._audioMuteHandler),this._videoMuteHandler=function(e,n){t.eventEmitter.emit(o.a,n,i.b,\"true\"===e.value)},e.addPresenceListener(\"videomuted\",this._videoMuteHandler),this._videoTypeHandler=function(e,n){t.eventEmitter.emit(o.b,n,e.value)},e.addPresenceListener(\"videoType\",this._videoTypeHandler))}},{key:\"getPeerMediaInfo\",value:function(e,t){if(this.chatRoom)return this.chatRoom.getMediaPresenceInfo(e,t);p.error(\"Requested peer media info, before room was set\")}},{key:\"getSSRCOwner\",value:function(e){return this.ssrcOwners.get(e)}},{key:\"setSSRCOwner\",value:function(e,t){if(\"number\"!=typeof e)throw new TypeError(\"SSRC(\".concat(e,\") must be a number\"));this.ssrcOwners.set(e,t)}}])&&c(n.prototype,r),s&&c(n,s),t}()}).call(this,\"modules\\\\xmpp\\\\SignalingLayerImpl.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return u});var r=n(24);function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return!t||\"object\"!==i(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),a(this,s(t).apply(this,arguments))}var n,i,u;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(t,r[\"a\"]),n=t,(i=[{key:\"getSSRCOwner\",value:function(e){throw new Error(\"not implemented\")}},{key:\"getPeerMediaInfo\",value:function(e,t){throw new Error(\"not implemented\")}}])&&o(n.prototype,i),u&&o(n,u),t}()},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return a});var r=n(87),i=n.n(r);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._queue=i.a.queue(this._processQueueTasks.bind(this),1),this._stopped=!1}var t,n,r;return t=e,(n=[{key:\"clear\",value:function(){this._queue.kill()}},{key:\"_processQueueTasks\",value:function(e,t){e(t)}},{key:\"push\",value:function(e,t){this._stopped?t&&t(new Error(\"The queue has been stopped\")):this._queue.push(e,t)}},{key:\"shutdown\",value:function(){this._stopped=!0}}])&&o(t.prototype,n),r&&o(t,r),e}()},function(e,t,n){(function(n,r){var i;\n/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n!function(){var o,a,s={};function c(e){var t=!1;return function(){if(t)throw new Error(\"Callback was already called.\");t=!0,e.apply(o,arguments)}}null!=(o=this)&&(a=o.async),s.noConflict=function(){return o.async=a,s};var u=Object.prototype.toString,l=Array.isArray||function(e){return\"[object Array]\"===u.call(e)},d=function(e,t){if(e.forEach)return e.forEach(t);for(var n=0;n<e.length;n+=1)t(e[n],n,e)},p=function(e,t){if(e.map)return e.map(t);var n=[];return d(e,function(e,r,i){n.push(t(e,r,i))}),n},h=function(e){if(Object.keys)return Object.keys(e);var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(n);return t};void 0!==n&&n.nextTick?(s.nextTick=n.nextTick,s.setImmediate=void 0!==r?function(e){r(e)}:s.nextTick):\"function\"==typeof r?(s.nextTick=function(e){r(e)},s.setImmediate=s.nextTick):(s.nextTick=function(e){setTimeout(e,0)},s.setImmediate=s.nextTick),s.each=function(e,t,n){if(n=n||function(){},!e.length)return n();var r=0;function i(t){t?(n(t),n=function(){}):(r+=1)>=e.length&&n()}d(e,function(e){t(e,c(i))})},s.forEach=s.each,s.eachSeries=function(e,t,n){if(n=n||function(){},!e.length)return n();var r=0;!function i(){t(e[r],function(t){t?(n(t),n=function(){}):(r+=1)>=e.length?n():i()})}()},s.forEachSeries=s.eachSeries,s.eachLimit=function(e,t,n,r){f(t).apply(null,[e,n,r])},s.forEachLimit=s.eachLimit;var f=function(e){return function(t,n,r){if(r=r||function(){},!t.length||e<=0)return r();var i=0,o=0,a=0;!function s(){if(i>=t.length)return r();for(;a<e&&o<t.length;)a+=1,n(t[(o+=1)-1],function(e){e?(r(e),r=function(){}):(a-=1,(i+=1)>=t.length?r():s())})}()}},m=function(e){return function(){var t=Array.prototype.slice.call(arguments);return e.apply(null,[s.each].concat(t))}},v=function(e){return function(){var t=Array.prototype.slice.call(arguments);return e.apply(null,[s.eachSeries].concat(t))}},y=function(e,t,n,r){if(t=p(t,function(e,t){return{index:t,value:e}}),r){var i=[];e(t,function(e,t){n(e.value,function(n,r){i[e.index]=r,t(n)})},function(e){r(e,i)})}else e(t,function(e,t){n(e.value,function(e){t(e)})})};s.map=m(y),s.mapSeries=v(y),s.mapLimit=function(e,t,n,r){return g(t)(e,n,r)};var g=function(e){return function(e,t){return function(){var n=Array.prototype.slice.call(arguments);return t.apply(null,[f(e)].concat(n))}}(e,y)};s.reduce=function(e,t,n,r){s.eachSeries(e,function(e,r){n(t,e,function(e,n){t=n,r(e)})},function(e){r(e,t)})},s.inject=s.reduce,s.foldl=s.reduce,s.reduceRight=function(e,t,n,r){var i=p(e,function(e){return e}).reverse();s.reduce(i,t,n,r)},s.foldr=s.reduceRight;var _=function(e,t,n,r){var i=[];e(t=p(t,function(e,t){return{index:t,value:e}}),function(e,t){n(e.value,function(n){n&&i.push(e),t()})},function(e){r(p(i.sort(function(e,t){return e.index-t.index}),function(e){return e.value}))})};s.filter=m(_),s.filterSeries=v(_),s.select=s.filter,s.selectSeries=s.filterSeries;var S=function(e,t,n,r){var i=[];e(t=p(t,function(e,t){return{index:t,value:e}}),function(e,t){n(e.value,function(n){n||i.push(e),t()})},function(e){r(p(i.sort(function(e,t){return e.index-t.index}),function(e){return e.value}))})};s.reject=m(S),s.rejectSeries=v(S);var b=function(e,t,n,r){e(t,function(e,t){n(e,function(n){n?(r(e),r=function(){}):t()})},function(e){r()})};s.detect=m(b),s.detectSeries=v(b),s.some=function(e,t,n){s.each(e,function(e,r){t(e,function(e){e&&(n(!0),n=function(){}),r()})},function(e){n(!1)})},s.any=s.some,s.every=function(e,t,n){s.each(e,function(e,r){t(e,function(e){e||(n(!1),n=function(){}),r()})},function(e){n(!0)})},s.all=s.every,s.sortBy=function(e,t,n){s.map(e,function(e,n){t(e,function(t,r){t?n(t):n(null,{value:e,criteria:r})})},function(e,t){if(e)return n(e);n(null,p(t.sort(function(e,t){var n=e.criteria,r=t.criteria;return n<r?-1:n>r?1:0}),function(e){return e.value}))})},s.auto=function(e,t){t=t||function(){};var n=h(e),r=n.length;if(!r)return t();var i={},o=[],a=function(e){o.unshift(e)},c=function(){r--,d(o.slice(0),function(e){e()})};a(function(){if(!r){var e=t;t=function(){},e(null,i)}}),d(n,function(n){var r=l(e[n])?e[n]:[e[n]],u=function(e){var r=Array.prototype.slice.call(arguments,1);if(r.length<=1&&(r=r[0]),e){var o={};d(h(i),function(e){o[e]=i[e]}),o[n]=r,t(e,o),t=function(){}}else i[n]=r,s.setImmediate(c)},p=r.slice(0,Math.abs(r.length-1))||[],f=function(){return t=function(e,t){return e&&i.hasOwnProperty(t)},r=!0,((e=p).reduce?e.reduce(t,r):(d(e,function(e,n,i){r=t(r,e,n,i)}),r))&&!i.hasOwnProperty(n);var e,t,r};if(f())r[r.length-1](u,i);else{a(function e(){f()&&(function(e){for(var t=0;t<o.length;t+=1)if(o[t]===e)return void o.splice(t,1)}(e),r[r.length-1](u,i))})}})},s.retry=function(e,t,n){var r=[];\"function\"==typeof e&&(n=t,t=e,e=5),e=parseInt(e,10)||5;var i=function(i,o){for(var a=function(e,t){return function(n){e(function(e,r){n(!e||t,{err:e,result:r})},o)}};e;)r.push(a(t,!(e-=1)));s.series(r,function(e,t){t=t[t.length-1],(i||n)(t.err,t.result)})};return n?i():i},s.waterfall=function(e,t){if(t=t||function(){},!l(e)){var n=new Error(\"First argument to waterfall must be an array of functions\");return t(n)}if(!e.length)return t();!function e(n){return function(r){if(r)t.apply(null,arguments),t=function(){};else{var i=Array.prototype.slice.call(arguments,1),o=n.next();o?i.push(e(o)):i.push(t),s.setImmediate(function(){n.apply(null,i)})}}}(s.iterator(e))()};var E=function(e,t,n){if(n=n||function(){},l(t))e.map(t,function(e,t){e&&e(function(e){var n=Array.prototype.slice.call(arguments,1);n.length<=1&&(n=n[0]),t.call(null,e,n)})},n);else{var r={};e.each(h(t),function(e,n){t[e](function(t){var i=Array.prototype.slice.call(arguments,1);i.length<=1&&(i=i[0]),r[e]=i,n(t)})},function(e){n(e,r)})}};s.parallel=function(e,t){E({map:s.map,each:s.each},e,t)},s.parallelLimit=function(e,t,n){E({map:g(t),each:f(t)},e,n)},s.series=function(e,t){if(t=t||function(){},l(e))s.mapSeries(e,function(e,t){e&&e(function(e){var n=Array.prototype.slice.call(arguments,1);n.length<=1&&(n=n[0]),t.call(null,e,n)})},t);else{var n={};s.eachSeries(h(e),function(t,r){e[t](function(e){var i=Array.prototype.slice.call(arguments,1);i.length<=1&&(i=i[0]),n[t]=i,r(e)})},function(e){t(e,n)})}},s.iterator=function(e){return function t(n){var r=function t(){return e.length&&e[n].apply(null,arguments),t.next()};return r.next=function(){return n<e.length-1?t(n+1):null},r}(0)},s.apply=function(e){var t=Array.prototype.slice.call(arguments,1);return function(){return e.apply(null,t.concat(Array.prototype.slice.call(arguments)))}};var T=function(e,t,n,r){var i=[];e(t,function(e,t){n(e,function(e,n){i=i.concat(n||[]),t(e)})},function(e){r(e,i)})};s.concat=m(T),s.concatSeries=v(T),s.whilst=function(e,t,n){e()?t(function(r){if(r)return n(r);s.whilst(e,t,n)}):n()},s.doWhilst=function(e,t,n){e(function(r){if(r)return n(r);var i=Array.prototype.slice.call(arguments,1);t.apply(null,i)?s.doWhilst(e,t,n):n()})},s.until=function(e,t,n){e()?n():t(function(r){if(r)return n(r);s.until(e,t,n)})},s.doUntil=function(e,t,n){e(function(r){if(r)return n(r);var i=Array.prototype.slice.call(arguments,1);t.apply(null,i)?n():s.doUntil(e,t,n)})},s.queue=function(e,t){function n(e,t,n,r){if(e.started||(e.started=!0),l(t)||(t=[t]),0==t.length)return s.setImmediate(function(){e.drain&&e.drain()});d(t,function(t){var i={data:t,callback:\"function\"==typeof r?r:null};n?e.tasks.unshift(i):e.tasks.push(i),e.saturated&&e.tasks.length===e.concurrency&&e.saturated(),s.setImmediate(e.process)})}void 0===t&&(t=1);var r=0,i={tasks:[],concurrency:t,saturated:null,empty:null,drain:null,started:!1,paused:!1,push:function(e,t){n(i,e,!1,t)},kill:function(){i.drain=null,i.tasks=[]},unshift:function(e,t){n(i,e,!0,t)},process:function(){if(!i.paused&&r<i.concurrency&&i.tasks.length){var t=i.tasks.shift();i.empty&&0===i.tasks.length&&i.empty(),r+=1;var n=c(function(){r-=1,t.callback&&t.callback.apply(t,arguments),i.drain&&i.tasks.length+r===0&&i.drain(),i.process()});e(t.data,n)}},length:function(){return i.tasks.length},running:function(){return r},idle:function(){return i.tasks.length+r===0},pause:function(){!0!==i.paused&&(i.paused=!0,i.process())},resume:function(){!1!==i.paused&&(i.paused=!1,i.process())}};return i},s.priorityQueue=function(e,t){function n(e,t){return e.priority-t.priority}var r=s.queue(e,t);return r.push=function(e,t,i){!function(e,t,r,i){if(e.started||(e.started=!0),l(t)||(t=[t]),0==t.length)return s.setImmediate(function(){e.drain&&e.drain()});d(t,function(t){var o={data:t,priority:r,callback:\"function\"==typeof i?i:null};e.tasks.splice(function(e,t,n){for(var r=-1,i=e.length-1;r<i;){var o=r+(i-r+1>>>1);n(t,e[o])>=0?r=o:i=o-1}return r}(e.tasks,o,n)+1,0,o),e.saturated&&e.tasks.length===e.concurrency&&e.saturated(),s.setImmediate(e.process)})}(r,e,t,i)},delete r.unshift,r},s.cargo=function(e,t){var n=!1,r=[],i={tasks:r,payload:t,saturated:null,empty:null,drain:null,drained:!0,push:function(e,n){l(e)||(e=[e]),d(e,function(e){r.push({data:e,callback:\"function\"==typeof n?n:null}),i.drained=!1,i.saturated&&r.length===t&&i.saturated()}),s.setImmediate(i.process)},process:function o(){if(!n){if(0===r.length)return i.drain&&!i.drained&&i.drain(),void(i.drained=!0);var a=\"number\"==typeof t?r.splice(0,t):r.splice(0,r.length),s=p(a,function(e){return e.data});i.empty&&i.empty(),n=!0,e(s,function(){n=!1;var e=arguments;d(a,function(t){t.callback&&t.callback.apply(null,e)}),o()})}},length:function(){return r.length},running:function(){return n}};return i};var C=function(e){return function(t){var n=Array.prototype.slice.call(arguments,1);t.apply(null,n.concat([function(t){var n=Array.prototype.slice.call(arguments,1);\"undefined\"!=typeof console&&(t?console.error&&console.error(t):console[e]&&d(n,function(t){console[e](t)}))}]))}};s.log=C(\"log\"),s.dir=C(\"dir\"),s.memoize=function(e,t){var n={},r={};t=t||function(e){return e};var i=function(){var i=Array.prototype.slice.call(arguments),o=i.pop(),a=t.apply(null,i);a in n?s.nextTick(function(){o.apply(null,n[a])}):a in r?r[a].push(o):(r[a]=[o],e.apply(null,i.concat([function(){n[a]=arguments;var e=r[a];delete r[a];for(var t=0,i=e.length;t<i;t++)e[t].apply(null,arguments)}])))};return i.memo=n,i.unmemoized=e,i},s.unmemoize=function(e){return function(){return(e.unmemoized||e).apply(null,arguments)}},s.times=function(e,t,n){for(var r=[],i=0;i<e;i++)r.push(i);return s.map(r,t,n)},s.timesSeries=function(e,t,n){for(var r=[],i=0;i<e;i++)r.push(i);return s.mapSeries(r,t,n)},s.seq=function(){var e=arguments;return function(){var t=this,n=Array.prototype.slice.call(arguments),r=n.pop();s.reduce(e,n,function(e,n,r){n.apply(t,e.concat([function(){var e=arguments[0],t=Array.prototype.slice.call(arguments,1);r(e,t)}]))},function(e,n){r.apply(t,[e].concat(n))})}},s.compose=function(){return s.seq.apply(null,Array.prototype.reverse.call(arguments))};var R=function(e,t){var n=function(){var n=this,r=Array.prototype.slice.call(arguments),i=r.pop();return e(t,function(e,t){e.apply(n,r.concat([t]))},i)};if(arguments.length>2){var r=Array.prototype.slice.call(arguments,2);return n.apply(this,r)}return n};s.applyEach=m(R),s.applyEachSeries=v(R),s.forever=function(e,t){!function n(r){if(r){if(t)return t(r);throw r}e(n)}()},e.exports?e.exports=s:void 0===(i=function(){return s}.apply(t,[]))||(e.exports=i)}()}).call(this,n(48),n(127).setImmediate)},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(1),o=n(11),a=n.n(o),s=Object(r.getLogger)(e),c=-1,u=/request id \\d+.\\d+ got 200/,l=/request errored, status: (\\d+), number of errors: \\d+/;t.a=function(){i.Strophe.log=function(e,t){switch(s.trace(\"Strophe\",e,t),\"string\"==typeof t&&-1!==t.indexOf(\"Request \")&&-1!==t.indexOf(\"timed out (secondary), restarting\")&&(e=i.Strophe.LogLevel.WARN),e){case i.Strophe.LogLevel.DEBUG:-1!==c&&u.test(t)&&(s.debug(\"Reset lastErrorStatus\"),c=-1);break;case i.Strophe.LogLevel.WARN:s.warn(\"Strophe: \".concat(t));var n=l.exec(t);n&&2===n.length&&(c=parseInt(n[1],10),s.debug(\"lastErrorStatus set to: \".concat(c)));break;case i.Strophe.LogLevel.ERROR:case i.Strophe.LogLevel.FATAL:t=\"Strophe: \".concat(t),a.a.callErrorHandler(new Error(t)),s.error(t)}},i.Strophe.getLastErrorStatus=function(){return c},i.Strophe.getStatusString=function(e){switch(e){case i.Strophe.Status.ERROR:return\"ERROR\";case i.Strophe.Status.CONNECTING:return\"CONNECTING\";case i.Strophe.Status.CONNFAIL:return\"CONNFAIL\";case i.Strophe.Status.AUTHENTICATING:return\"AUTHENTICATING\";case i.Strophe.Status.AUTHFAIL:return\"AUTHFAIL\";case i.Strophe.Status.CONNECTED:return\"CONNECTED\";case i.Strophe.Status.DISCONNECTED:return\"DISCONNECTED\";case i.Strophe.Status.DISCONNECTING:return\"DISCONNECTING\";case i.Strophe.Status.ATTACHED:return\"ATTACHED\";default:return\"unknown\"}}}}).call(this,\"modules\\\\xmpp\\\\strophe.util.js\")},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(1),o=n(11),a=n.n(o),s=n(34);function c(e){return(c=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return!t||\"object\"!==c(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function d(e,t,n){return(d=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=Object(r.getLogger)(e),m=12,v=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(n=l(this,p(t).call(this))).failedPings=0,n.xmpp=e,n.pingExecIntervals=new Array(m),n}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(t,s[\"b\"]),n=t,(r=[{key:\"init\",value:function(e){d(p(t.prototype),\"init\",this).call(this,e),i.Strophe.addNamespace(\"PING\",\"urn:xmpp:ping\")}},{key:\"ping\",value:function(e,t,n,r){this._addPingExecutionTimestamp();var o=Object(i.$iq)({type:\"get\",to:e});o.c(\"ping\",{xmlns:i.Strophe.NS.PING}),this.connection.sendIQ(o,t,n,r)}},{key:\"startInterval\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;if(this.intervalId){var r=\"Ping task scheduled already\";return a.a.callErrorHandler(new Error(r)),void f.error(r)}this.intervalId=window.setInterval(function(){t.ping(e,function(){t.failedPings=0},function(e){t.failedPings+=1;var n=\"Ping \".concat(e?\"error\":\"timeout\");t.failedPings>=3?(a.a.callErrorHandler(new Error(n)),f.error(n,e)):f.warn(n,e)},15e3)},n),f.info(\"XMPP pings will be sent every \".concat(n,\" ms\"))}},{key:\"stopInterval\",value:function(){this.intervalId&&(window.clearInterval(this.intervalId),this.intervalId=null,this.failedPings=0,f.info(\"Ping interval cleared\"))}},{key:\"_addPingExecutionTimestamp\",value:function(){this.pingExecIntervals.push((new Date).getTime()),this.pingExecIntervals.length>m&&this.pingExecIntervals.shift()}},{key:\"getPingSuspendTime\",value:function(){var e=this.pingExecIntervals.slice();e.push((new Date).getTime());var t=0,n=e[0];return e.forEach(function(e){var r=e-n;r>t&&(t=r),n=e}),t-=1e4,Math.max(t,0)}}])&&u(n.prototype,r),o&&u(n,o),t}();t.a=function(e){i.Strophe.addConnectionPlugin(\"ping\",new v(e))}}).call(this,\"modules\\\\xmpp\\\\strophe.ping.js\")},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(1),o=n(34);function a(e){return(a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t){return!t||\"object\"!==a(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function u(e,t,n){return(u=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var p=Object(r.getLogger)(e),h=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),c(this,l(t).apply(this,arguments))}var n,r,a;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,o[\"b\"]),n=t,(r=[{key:\"init\",value:function(e){u(l(t.prototype),\"init\",this).call(this,e),this.connection.addHandler(this.onRayo.bind(this),\"urn:xmpp:rayo:1\",\"iq\",\"set\",null,null)}},{key:\"onRayo\",value:function(e){p.info(\"Rayo IQ\",e)}},{key:\"dial\",value:function(e,t,n,r,o){var a=this;return new Promise(function(s,c){if(o){var u=Object(i.$iq)({type:\"set\",to:o});u.c(\"dial\",{xmlns:\"urn:xmpp:rayo:1\",to:e,from:t}),u.c(\"header\",{name:\"JvbRoomName\",value:n}).up(),r&&r.length&&u.c(\"header\",{name:\"JvbRoomPassword\",value:r}).up(),a.connection.sendIQ(u,function(e){p.info(\"Dial result \",e);var t=$(e).find(\"ref\").attr(\"uri\");a.callResource=t.substr(\"xmpp:\".length),p.info(\"Received call resource: \".concat(a.callResource)),s()},function(e){p.info(\"Dial error \",e),c(e)})}else c(new Error(\"Internal error!\"))})}},{key:\"hangup\",value:function(){var e=this;return new Promise(function(t,n){if(!e.callResource)return n(new Error(\"No call in progress\")),void p.warn(\"No call in progress\");var r=Object(i.$iq)({type:\"set\",to:e.callResource});r.c(\"hangup\",{xmlns:\"urn:xmpp:rayo:1\"}),e.connection.sendIQ(r,function(n){p.info(\"Hangup result \",n),e.callResource=null,t()},function(t){p.info(\"Hangup error \",t),e.callResource=null,n(new Error(\"Hangup error \"))})})}}])&&s(n.prototype,r),a&&s(n,a),t}();t.a=function(){i.Strophe.addConnectionPlugin(\"rayo\",new h)}}).call(this,\"modules\\\\xmpp\\\\strophe.rayo.js\")},function(e,t,n){\"use strict\";var r=n(1),i=n(34);function o(e){return(o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return!t||\"object\"!==o(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function c(e,t,n){return(c=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var d=function(e){function t(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(e=s(this,u(t).call(this))).log=[],e}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,i[\"b\"]),n=t,(r=[{key:\"init\",value:function(e){c(u(t.prototype),\"init\",this).call(this,e),this.connection.rawInput=this.logIncoming.bind(this),this.connection.rawOutput=this.logOutgoing.bind(this)}},{key:\"logIncoming\",value:function(e){this.log.push([(new Date).getTime(),\"incoming\",e])}},{key:\"logOutgoing\",value:function(e){this.log.push([(new Date).getTime(),\"outgoing\",e])}}])&&a(n.prototype,r),o&&a(n,o),t}();t.a=function(){r.Strophe.addConnectionPlugin(\"logger\",new d)}},function(e,t,n){\"use strict\";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}n.d(t,\"a\",function(){return i});var i=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._nextValidRid=null,this._lastSuccess=null}var t,n,i;return t=e,(n=[{key:\"startTracking\",value:function(e){var t=this;e.nextValidRid=function(e){t._nextValidRid===e-1&&(t._lastSuccess=(new Date).getTime()),t._nextValidRid=e}}},{key:\"getTimeSinceLastSuccess\",value:function(){return this._lastSuccess?(new Date).getTime()-this._lastSuccess:null}}])&&r(t.prototype,n),i&&r(t,i),e}()},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return y});var r=n(1),i=n(0),o=n.n(i),a=n(24);function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}var p=n(4).getLogger(e),h=[\"category\",\"type\",\"lang\",\"name\"],f=[\"category\",\"type\",\"lang\"];function m(e,t){var n=0;return f.some(function(r){return 0!==(n=e[r]>t[r]?1:e[r]<t[r]&&-1)}),n}function v(e,t){var n=e.sort(m).reduce(function(e,t){return\"\".concat(h.reduce(function(e,n,r){return e+(0===r?\"\":\"/\")+(t[n]?t[n]:\"\")},\"\"),\"<\")},\"\"),i=t.sort().reduce(function(e,t){return\"\".concat(e+t,\"<\")},\"\");return Object(r.b64_sha1)(n+i)}var y=function(e){function t(){var e,n,i,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"http://jitsi.org/jitsimeet\";if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),n=this,i=u(t).call(this),(e=!i||\"object\"!==s(i)&&\"function\"!=typeof i?d(n):i).node=c,e.disco=a.disco,!e.disco)throw new Error(\"Missing strophe-plugins (disco plugin is required)!\");e.versionToCapabilities=Object.create(null),e.jidToVersion=Object.create(null),e.version=\"\",e.rooms=new Set;var l=a.emuc;return l.addListener(o.a.EMUC_ROOM_ADDED,function(t){return e._addChatRoom(t)}),l.addListener(o.a.EMUC_ROOM_REMOVED,function(t){return e._removeChatRoom(t)}),Object.keys(l.rooms).forEach(function(t){e._addChatRoom(l.rooms[t])}),r.Strophe.addNamespace(\"CAPS\",\"http://jabber.org/protocol/caps\"),e.disco.addFeature(r.Strophe.NS.CAPS),a.addHandler(e._handleCaps.bind(d(d(e))),r.Strophe.NS.CAPS),e._onMucMemberLeft=e._removeJidToVersionEntry.bind(d(d(e))),e}var n,i,h;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,a[\"a\"]),n=t,(i=[{key:\"addFeature\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.disco.addFeature(e),this._generateVersion(),t&&this.submit()}},{key:\"removeFeature\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.disco.removeFeature(e),this._generateVersion(),t&&this.submit()}},{key:\"submit\",value:function(){this.rooms.forEach(function(e){return e.sendPresence()})}},{key:\"getFeatures\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3,r=e in this.jidToVersion?this.jidToVersion[e]:null;if(!(r&&r.version in this.versionToCapabilities)){var i=r?\"\".concat(r.node,\"#\").concat(r.version):null;return this._getDiscoInfo(e,i,n).then(function(e){var n=e.features,o=e.identities;if(r){var a=v(Array.from(o),Array.from(n)),s=\"\".concat(r.node,\"#\").concat(a);return s===i?(t.versionToCapabilities[s]=n,n):t.versionToCapabilities[s]?t.versionToCapabilities[s]:(p.error(\"Expected node \".concat(i,\" but received \").concat(s)),Promise.reject(\"Feature version mismatch\"))}})}return Promise.resolve(this.versionToCapabilities[r.version])}},{key:\"getFeaturesAndIdentities\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;return this._getDiscoInfo(e,null,t)}},{key:\"_getDiscoInfo\",value:function(e,t,n){var r=this;return new Promise(function(i,o){return r.disco.info(e,t,function(e){var t=new Set,n=new Set;$(e).find(\">query>feature\").each(function(e,n){return t.add(n.getAttribute(\"var\"))}),$(e).find(\">query>identity\").each(function(e,t){return n.add({type:t.getAttribute(\"type\"),name:t.getAttribute(\"name\"),category:t.getAttribute(\"category\")})}),i({features:t,identities:n})},o,n)})}},{key:\"_addChatRoom\",value:function(e){this.rooms.add(e),e.addListener(o.a.MUC_MEMBER_LEFT,this._onMucMemberLeft),this._fixChatRoomPresenceMap(e)}},{key:\"_removeChatRoom\",value:function(e){this.rooms.delete(e),e.removeListener(o.a.MUC_MEMBER_LEFT,this._onMucMemberLeft)}},{key:\"_fixChatRoomPresenceMap\",value:function(e){e.addToPresence(\"c\",{attributes:{xmlns:r.Strophe.NS.CAPS,hash:\"sha-1\",node:this.node,ver:this.version}})}},{key:\"_notifyVersionChanged\",value:function(){var e=this;this.rooms.forEach(function(t){return e._fixChatRoomPresenceMap(t)})}},{key:\"_generateVersion\",value:function(){this.version=v(this.disco._identities,this.disco._features),this._notifyVersionChanged()}},{key:\"_handleCaps\",value:function(e){var t=e.getAttribute(\"from\"),n=e.querySelector(\"c\"),r=n.getAttribute(\"ver\"),i=n.getAttribute(\"node\"),a=this.jidToVersion[t];return this.jidToVersion[t]={version:r,node:i},a&&a.version!==r&&this.eventEmitter.emit(o.a.PARTCIPANT_FEATURES_CHANGED,t),!0}},{key:\"_removeJidToVersionEntry\",value:function(e){e in this.jidToVersion&&delete this.jidToVersion[e]}}])&&c(n.prototype,i),h&&c(n,h),t}()}).call(this,\"modules\\\\xmpp\\\\Caps.js\")},function(e,t,n){(function(t){var r=n(4).getLogger(t);function i(e,t){var n=e.getTrack();if(!n)throw new Error(\"Failed to initialize DTMFSender: no audio track.\");this.dtmfSender=t.peerconnection.createDTMFSender(n),r.debug(\"Initialized DTMFSender\")}i.prototype.sendTones=function(e,t,n){this.dtmfSender.insertDTMF(e,t||200,n||200)},e.exports=i}).call(this,\"modules\\\\DTMF\\\\JitsiDTMFManager.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return s});var r=n(2),i=n(7),o=n.n(i);function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.conference=t,t.addEventListener(r.TRACK_AUDIO_LEVEL_CHANGED,this._audioLevel.bind(this)),this.myUserID=this.conference.myUserId()}var t,n,i;return t=e,(n=[{key:\"_audioLevel\",value:function(e,t){!this.conference.isP2PActive()||t<=.6||e===this.myUserID&&this.conference.getLocalAudioTrack().isMuted()||this.conference.rtc.eventEmitter.emit(o.a.DOMINANT_SPEAKER_CHANGED,e)}}])&&a(t.prototype,n),i&&a(t,i),e}()},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return p});var r=n(4),i=n(7),o=n.n(i),a=n(8),s=n(5),c=n(11),u=n.n(c);function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=Object(r.getLogger)(e),p=function(){function e(t,n,r){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),!t&&!n)throw new TypeError(\"At least peerconnection or wsUrl must be given\");if(t&&n)throw new TypeError(\"Just one of peerconnection or wsUrl must be given\");if(t?d.debug(\"constructor() with peerconnection\"):d.debug('constructor() with wsUrl:\"'.concat(n,'\"')),this._channel=null,this._eventEmitter=r,this._mode=null,this._areRetriesEnabled=!1,this._closedFromClient=!1,t){var i=t.createDataChannel(\"JVB data channel\",{protocol:\"http://jitsi.org/protocols/colibri\"});this._handleChannel(i),this._mode=\"datachannel\"}else n&&(this._areRetriesEnabled=!0,this._wsUrl=n,this._initWebSocket())}var t,n,r;return t=e,(n=[{key:\"_initWebSocket\",value:function(){var e=new WebSocket(this._wsUrl);this._handleChannel(e),this._mode=\"websocket\"}},{key:\"_startConnectionRetries\",value:function(){var e=this,t=1;this._retryTimeout=setTimeout(function n(){e.isOpen()||(e._initWebSocket(e._wsUrl),t=Math.min(2*t,60),e._retryTimeout=setTimeout(n,1e3*t))},1e3*t)}},{key:\"_stopConnectionRetries\",value:function(){this._retryTimeout&&(clearTimeout(this._retryTimeout),this._retryTimeout=void 0)}},{key:\"_retryWebSocketConnection\",value:function(e){var t=this;if(this._areRetriesEnabled){var n=e.code,r=e.reason;s.a.sendAnalytics(Object(a.x)(n,r)),this._areRetriesEnabled=!1,this._eventEmitter.once(o.a.DATA_CHANNEL_OPEN,function(){t._stopConnectionRetries(),t._areRetriesEnabled=!0}),this._startConnectionRetries()}}},{key:\"close\",value:function(){if(this._closedFromClient=!0,this._stopConnectionRetries(),this._areRetriesEnabled=!1,this._channel){try{this._channel.close()}catch(e){}this._channel=null}}},{key:\"isOpen\",value:function(){return this._channel&&(\"open\"===this._channel.readyState||this._channel.readyState===WebSocket.OPEN)}},{key:\"sendMessage\",value:function(e,t){this._send({colibriClass:\"EndpointMessage\",msgPayload:t,to:e})}},{key:\"sendSetLastNMessage\",value:function(e){var t={colibriClass:\"LastNChangedEvent\",lastN:e};this._send(t),d.log(\"Channel lastN set to: \".concat(e))}},{key:\"sendPinnedEndpointMessage\",value:function(e){d.log(\"sending pinned changed notification to the bridge for endpoint \",e),this._send({colibriClass:\"PinnedEndpointChangedEvent\",pinnedEndpoint:e||null})}},{key:\"sendSelectedEndpointsMessage\",value:function(e){d.log(\"sending selected changed notification to the bridge for endpoints\",e),this._send({colibriClass:\"SelectedEndpointsChangedEvent\",selectedEndpoints:e})}},{key:\"sendReceiverVideoConstraintMessage\",value:function(e){d.log(\"sending a ReceiverVideoConstraint message with \"+\"a maxFrameHeight of \".concat(e,\" pixels\")),this._send({colibriClass:\"ReceiverVideoConstraint\",maxFrameHeight:e})}},{key:\"_handleChannel\",value:function(e){var t=this,n=this._eventEmitter;e.onopen=function(){d.info(\"\".concat(t._mode,\" channel opened\")),n.emit(o.a.DATA_CHANNEL_OPEN)},e.onerror=function(e){\"websocket\"!==t._mode&&d.error(\"Channel error: \".concat(e.message))},e.onmessage=function(e){var t,r=e.data;try{t=JSON.parse(r)}catch(e){return u.a.callErrorHandler(e),void d.error(\"Failed to parse channel message as JSON: \",r,e)}var i=t.colibriClass;switch(i){case\"DominantSpeakerEndpointChangeEvent\":var a=t.dominantSpeakerEndpoint;d.info(\"Channel new dominant speaker event: \",a),n.emit(o.a.DOMINANT_SPEAKER_CHANGED,a);break;case\"EndpointConnectivityStatusChangeEvent\":var s=t.endpoint,c=\"true\"===t.active;d.info(\"Endpoint connection status changed: \".concat(s,\" active ? \").concat(c)),n.emit(o.a.ENDPOINT_CONN_STATUS_CHANGED,s,c);break;case\"EndpointMessage\":n.emit(o.a.ENDPOINT_MESSAGE_RECEIVED,t.from,t.msgPayload);break;case\"LastNEndpointsChangeEvent\":var l=t.lastNEndpoints;d.info(\"Channel new last-n event: \",l,t),n.emit(o.a.LASTN_ENDPOINT_CHANGED,l,t);break;case\"SelectedUpdateEvent\":var p=t.isSelected;d.info(\"SelectedUpdateEvent isSelected? \".concat(p)),n.emit(o.a.IS_SELECTED_CHANGED,p);break;default:d.debug(\"Channel JSON-formatted message: \",t),n.emit(\"rtc.datachannel.\".concat(i),t)}},e.onclose=function(e){d.info(\"Channel closed by \".concat(t._closedFromClient?\"client\":\"server\")),\"websocket\"===t._mode&&(t._closedFromClient||(d.error(\"Channel closed: \".concat(e.code,\" \").concat(e.reason)),t._retryWebSocketConnection(e))),t._channel=null},this._channel=e}},{key:\"_send\",value:function(e){var t=this._channel;if(!this.isOpen())throw d.error(\"Bridge Channel send: no opened channel.\"),new Error(\"No opened channel\");t.send(JSON.stringify(e))}},{key:\"mode\",get:function(){return this._mode}}])&&l(t.prototype,n),r&&l(t,r),e}()}).call(this,\"modules\\\\RTC\\\\BridgeChannel.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return A});var r=n(4),i=n(22),o=n.n(i),a=n(11),s=n(98),c=n(9),u=n(99),l=n(13),d=n(10),p=n(3),h=n(7),f=n.n(h),m=n(100),v=n(18),y=n(101),g=n(27),_=n(6),S=n(37);function b(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function E(e){return(E=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var T=Object(r.getLogger)(e),C=3,R=[\"1\",\"2\",\"3\"];function A(e,t,r,i,o,a,s){var c=this;this.audioTransferActive=!(!0===s.startSilent),this.videoTransferActive=!0,this.rtc=e,this.id=t,this.isP2P=a,this.remoteTracks=new Map,this.localTracks=new Map,this._addedStreams=[],this.localSSRCs=new Map,this.localUfrag=null,this.remoteUfrag=null,this.signalingLayer=r,this._peerVideoTypeChanged=this._peerVideoTypeChanged.bind(this),this.signalingLayer.on(S.b,this._peerVideoTypeChanged),this._peerMutedChanged=this._peerMutedChanged.bind(this),this.signalingLayer.on(S.a,this._peerMutedChanged),this.options=s,this.peerconnection=new d.a.RTCPeerConnectionType(i,o),this.updateLog=[],this.stats={},this.statsinterval=null,this.maxstats=s.maxstats;var l=n(142).Interop;this.interop=new l;var p=n(146);this.simulcast=new p({numOfLayers:C,explodeRemoteSimulcast:!1}),this.sdpConsistency=new y.a(this.toString()),this.localSdpMunger=new u.a(this),this.eventEmitter=e.eventEmitter,this.rtxModifier=new m.a,this.trace=function(e,t){T.debug(e,t),c.updateLog.push({time:new Date,type:e,value:t||\"\"})},this.onicecandidate=null,this.peerconnection.onicecandidate=function(e){c.trace(\"onicecandidate\",JSON.stringify(e.candidate,null,\" \")),null!==c.onicecandidate&&c.onicecandidate(e)},this.peerconnection.onaddstream=function(e){return c._remoteStreamAdded(e.stream)},this.peerconnection.onremovestream=function(e){return c._remoteStreamRemoved(e.stream)},this.onsignalingstatechange=null,this.peerconnection.onsignalingstatechange=function(e){c.trace(\"onsignalingstatechange\",c.signalingState),null!==c.onsignalingstatechange&&c.onsignalingstatechange(e)},this.oniceconnectionstatechange=null,this.peerconnection.oniceconnectionstatechange=function(e){c.trace(\"oniceconnectionstatechange\",c.iceConnectionState),null!==c.oniceconnectionstatechange&&c.oniceconnectionstatechange(e)},this.onnegotiationneeded=null,this.peerconnection.onnegotiationneeded=function(e){c.trace(\"onnegotiationneeded\"),null!==c.onnegotiationneeded&&c.onnegotiationneeded(e)},this.ondatachannel=null,this.peerconnection.ondatachannel=function(e){c.trace(\"ondatachannel\"),null!==c.ondatachannel&&c.ondatachannel(e)},this.maxstats&&(this.statsinterval=window.setInterval(function(){c.getStats(function(e){if(e.result&&\"function\"==typeof e.result)for(var t=e.result(),n=function(e){var n=t[e];n.names().forEach(function(e){c._processStat(n,e,n.stat(e))})},r=0;r<t.length;++r)n(r);else e.forEach(function(e){return c._processStat(e,\"\",e)})},function(){})},1e3)),T.info(\"Create new \".concat(this))}A.prototype._processStat=function(e,t,n){var r=\"\".concat(e.id,\"-\").concat(t),i=this.stats[r],o=new Date;i||(this.stats[r]=i={startTime:o,endTime:o,values:[],times:[]}),i.values.push(n),i.times.push(o.getTime()),i.values.length>this.maxstats&&(i.values.shift(),i.times.shift()),i.endTime=o};var w=function(e){return null==e?\"\":\"type: \".concat(e.type,\"\\r\\n\").concat(e.sdp)};A.prototype.getConnectionState=function(){var e=this.peerconnection.iceConnectionState;return\"completed\"===e?\"connected\":e},A.prototype._getDesiredMediaDirection=function(e){var t=!0;return e===c.a?t=this.audioTransferActive:e===c.b&&(t=this.videoTransferActive),t?this.hasAnyTracksOfType(e)?\"sendrecv\":\"recvonly\":\"inactive\"},A.prototype.isSimulcastOn=function(){return!this.options.disableSimulcast&&p.a.supportsSimulcast()&&(!p.a.isFirefox()||this.options.enableFirefoxSimulcast)},A.prototype._peerVideoTypeChanged=function(e,t){if(e){var n=this.getRemoteTracks(e,c.b);n.length&&n[0]._setVideoType(t)}else T.error(\"No endpointID on peerVideoTypeChanged \".concat(this))},A.prototype._peerMutedChanged=function(e,t,n){if(e){var r=this.getRemoteTracks(e,t);r.length&&r[0].setMute(n)}else T.error(\"On peerMuteChanged - no endpoint ID\")},A.prototype.getLocalTracks=function(e){var t=Array.from(this.localTracks.values());return void 0!==e&&(t=t.filter(function(t){return t.getType()===e})),t},A.prototype.hasAnyTracksOfType=function(e){if(!e)throw new Error('\"mediaType\" is required');return this.getLocalTracks(e).length>0},A.prototype.getRemoteTracks=function(e,t){var n=[],r=e?[e]:this.remoteTracks.keys(),i=!0,o=!1,a=void 0;try{for(var s,c=r[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){var u=s.value,l=this.remoteTracks.get(u);if(l){var d=!0,p=!1,h=void 0;try{for(var f,m=l.keys()[Symbol.iterator]();!(d=(f=m.next()).done);d=!0){var v=f.value;if(!t||t===v){var y=l.get(v);y&&n.push(y)}}}catch(e){p=!0,h=e}finally{try{d||null==m.return||m.return()}finally{if(p)throw h}}}}}catch(e){o=!0,a=e}finally{try{i||null==c.return||c.return()}finally{if(o)throw a}}return n},A.prototype.getTrackBySSRC=function(e){if(\"number\"!=typeof e)throw new Error(\"SSRC \".concat(e,\" is not a number\"));var t=!0,n=!1,r=void 0;try{for(var i,o=this.localTracks.values()[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;if(this.getLocalSSRC(a)===e)return a}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}var s=!0,c=!1,u=void 0;try{for(var l,d=this.getRemoteTracks()[Symbol.iterator]();!(s=(l=d.next()).done);s=!0){var p=l.value;if(p.getSSRC()===e)return p}}catch(e){c=!0,u=e}finally{try{s||null==d.return||d.return()}finally{if(c)throw u}}return null},A.prototype.getSsrcByTrackId=function(e){var t=function(t){return t.getTrack().id===e},n=this.getLocalTracks().find(t);if(n)return this.getLocalSSRC(n);var r=this.getRemoteTracks().find(t);return r?r.getSSRC():null},A.prototype._remoteStreamAdded=function(e){var t=this,n=l.a.getStreamID(e);if(l.a.isUserStreamById(n)){(p.a.isChromiumBased()||p.a.isEdge())&&(e.onaddtrack=function(n){t._remoteTrackAdded(e,n.track)},e.onremovetrack=function(n){t._remoteTrackRemoved(e,n.track)});var r=e.getAudioTracks(),i=!0,o=!1,a=void 0;try{for(var s,c=r[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){var u=s.value;this._remoteTrackAdded(e,u)}}catch(e){o=!0,a=e}finally{try{i||null==c.return||c.return()}finally{if(o)throw a}}var d=e.getVideoTracks(),h=!0,f=!1,m=void 0;try{for(var v,y=d[Symbol.iterator]();!(h=(v=y.next()).done);h=!0){var g=v.value;this._remoteTrackAdded(e,g)}}catch(e){f=!0,m=e}finally{try{h||null==y.return||y.return()}finally{if(f)throw m}}}else T.info(\"\".concat(this,\" ignored remote 'stream added' event for non-user stream\")+\"id: \".concat(n))},A.prototype._remoteTrackAdded=function(e,t){var n=l.a.getStreamID(e),r=t.kind;if(T.info(\"\".concat(this,\" remote track added:\"),n,r),r){var i=new v.a(this.remoteDescription.sdp).media.filter(function(e){return e.startsWith(\"m=\".concat(r))});if(i.length){var o=_.a.findLines(i[0],\"a=ssrc:\");if((o=o.filter(function(e){return-1!==e.indexOf(\"msid:\".concat(n))})).length){var s=o[0].substring(7).split(\" \")[0],c=Number(s),u=this.signalingLayer.getSSRCOwner(c);if(isNaN(c)||c<0)a.callErrorHandler(new Error(\"Invalid SSRC: \".concat(s,\" for remote track, msid: \").concat(n,\" media type: \").concat(r)));else if(u){T.log(\"\".concat(this,\" associated ssrc\"),u,c);var d=this.signalingLayer.getPeerMediaInfo(u,r);if(d){var p=d.muted,h=d.videoType;this._createRemoteTrack(u,e,t,r,h,c,p)}else a.callErrorHandler(new Error(\"\".concat(this,\": no peer media info available for \").concat(u)))}else a.callErrorHandler(new Error(\"No SSRC owner known for: \".concat(c,\" for remote track, msid: \").concat(n,\" media type: \").concat(r)))}else a.callErrorHandler(new Error(\"No SSRC lines for streamId \".concat(n,\" for remote track, media type: \").concat(r)))}else a.callErrorHandler(new Error(\"No media lines for type \".concat(r,\" found in remote SDP for remote track: \").concat(n)))}else a.callErrorHandler(new Error(\"MediaType undefined for remote track, stream id: \".concat(n)))},A.prototype._createRemoteTrack=function(e,t,n,r,i,o,a){var c=this.remoteTracks.get(e);c||(c=new Map,this.remoteTracks.set(e,c));var u=c.get(r);if(u&&u.getTrack()===n)T.info(\"\".concat(this,\" ignored duplicated remote track added event for: \")+\"\".concat(e,\", \").concat(r));else{u&&T.error(\"\".concat(this,\" overwriting remote track for\")+\"\".concat(e,\" \").concat(r));var l=new s.a(this.rtc,this.rtc.conference,e,t,n,r,i,o,a,this.isP2P);c.set(r,l),this.eventEmitter.emit(f.a.REMOTE_TRACK_ADDED,l)}},A.prototype._remoteStreamRemoved=function(e){if(l.a.isUserStream(e)){var t=e.getVideoTracks(),n=!0,r=!1,i=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;this._remoteTrackRemoved(e,s)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}var c=e.getAudioTracks(),u=!0,d=!1,p=void 0;try{for(var h,f=c[Symbol.iterator]();!(u=(h=f.next()).done);u=!0){var m=h.value;this._remoteTrackRemoved(e,m)}}catch(e){d=!0,p=e}finally{try{u||null==f.return||f.return()}finally{if(d)throw p}}}else{var v=l.a.getStreamID(e);T.info(\"Ignored remote 'stream removed' event for non-user stream \".concat(v))}},A.prototype._remoteTrackRemoved=function(e,t){var n=l.a.getStreamID(e),r=t&&l.a.getTrackID(t);T.info(\"\".concat(this,\" - remote track removed: \").concat(n,\", \").concat(r)),n?r?this._removeRemoteTrackById(n,r)||T.warn(\"\".concat(this,\" Removed track not found for msid: \").concat(n,\",\\n             track id: \").concat(r)):a.callErrorHandler(new Error(\"\".concat(this,\" remote track removal failed - no track ID\"))):a.callErrorHandler(new Error(\"\".concat(this,\" remote track removal failed - no stream ID\")))},A.prototype._getRemoteTrackById=function(e,t){var n=!0,r=!1,i=void 0;try{for(var o,a=this.remoteTracks.values()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value,c=!0,u=!1,l=void 0;try{for(var d,p=s.values()[Symbol.iterator]();!(c=(d=p.next()).done);c=!0){var h=d.value;if(h.getStreamId()==e&&h.getTrackId()==t)return h}}catch(e){u=!0,l=e}finally{try{c||null==p.return||p.return()}finally{if(u)throw l}}}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}},A.prototype.removeRemoteTracks=function(e){var t=[],n=this.remoteTracks.get(e);if(n){var r=n.get(c.a),i=n.get(c.b);r&&t.push(r),i&&t.push(i),this.remoteTracks.delete(e)}return T.debug(\"\".concat(this,\" removed remote tracks for \").concat(e,\" count: \").concat(t.length)),t},A.prototype._removeRemoteTrack=function(e){e.dispose();var t=e.getParticipantId(),n=this.remoteTracks.get(t);n?n.delete(e.getType())||T.error(\"Failed to remove \".concat(e,\" - type mapping messed up ?\")):T.error(\"removeRemoteTrack: no remote tracks map for \".concat(t)),this.eventEmitter.emit(f.a.REMOTE_TRACK_REMOVED,e)},A.prototype._removeRemoteTrackById=function(e,t){var n=this._getRemoteTrackById(e,t);return n&&this._removeRemoteTrack(n),n};var k=function(e){if(\"object\"!==E(e)||null===e||\"string\"!=typeof e.sdp)return T.warn(\"An empty description was passed as an argument.\"),e;var t=n(22),r=t.parse(e.sdp);void 0!==r&&void 0!==r.media&&Array.isArray(r.media)&&r.media.forEach(function(e){var t=[],n=[];if(void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&e.ssrcGroups.forEach(function(e){void 0!==e.semantics&&\"FID\"===e.semantics&&void 0!==e.ssrcs&&t.push(Number(e.ssrcs.split(\" \")[0]))}),Array.isArray(e.ssrcs)){var r;for(r=0;r<e.ssrcs.length;r++)\"object\"===E(e.ssrcs[r])&&void 0!==e.ssrcs[r].id&&t.indexOf(e.ssrcs[r].id)>=0&&(n.push(e.ssrcs[r]),delete e.ssrcs[r]);for(r=0;r<e.ssrcs.length;r++)void 0!==e.ssrcs[r]&&n.push(e.ssrcs[r]);e.ssrcs=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];if(!p.a.isChrome()||!p.a.isVersionGreaterThan(70))return e;var t=b(e);return e.filter(function(e){return\"mslabel\"===e.attribute&&\"-\"===e.value}).map(function(e){return e.id}).forEach(function(e){var n=t.find(function(t){return t.id===e&&\"cname\"===t.attribute});n.value=\"recvonly-\".concat(e),(t=t.filter(function(t){return t.id!==e})).push(n)}),t}(n)}});var i=t.write(r);return new RTCSessionDescription({type:e.type,sdp:i})};A.prototype.getLocalSSRC=function(e){var t=this._getSSRC(e.rtcId);return t&&t.ssrcs[0]},A.prototype._injectSsrcGroupForUnifiedSimulcast=function(e){var t=o.a.parse(e.sdp),n=t.media.find(function(e){return\"video\"===e.type});if(n.simulcast_03){var r=[];if(n.ssrcs.forEach(function(e){\"msid\"===e.attribute&&r.push(e.id)}),n.ssrcGroups=n.ssrcGroups||[],n.ssrcGroups.find(function(e){return\"SIM\"===e.semantics}))return e;n.ssrcGroups.push({semantics:\"SIM\",ssrcs:r.join(\" \")})}return new RTCSessionDescription({type:e.type,sdp:o.a.write(t)})};var O={signalingState:function(){return this.peerconnection.signalingState},iceConnectionState:function(){return this.peerconnection.iceConnectionState},localDescription:function(){var e=this.peerconnection.localDescription;return e?(this.trace(\"getLocalDescription::preTransform\",w(e)),p.a.usesUnifiedPlan()&&(e=this.interop.toPlanB(e),this.trace(\"getLocalDescription::postTransform (Plan B)\",w(e)),e=this._injectSsrcGroupForUnifiedSimulcast(e),this.trace(\"getLocalDescription::postTransform (inject ssrc group)\",w(e))),p.a.doesVideoMuteByStreamRemove()&&(e=this.localSdpMunger.maybeAddMutedLocalVideoTracksToSDP(e),T.debug(\"getLocalDescription::postTransform (munge local SDP)\",e)),e=function(e,t){if(!e)throw new Error(\"No local description passed in.\");var n=new g.a(e.sdp),r=n.selectMedia(\"audio\"),i=!1;r&&\"sendrecv\"!==r.direction&&(t.startSilent?r.direction=\"inactive\":r.direction=\"sendrecv\",i=!0);var o=n.selectMedia(\"video\");return o&&\"sendrecv\"!==o.direction&&(o.direction=\"sendrecv\",i=!0),i?new RTCSessionDescription({type:e.type,sdp:n.toRawSDP()}):e}(e,this.options),e=this.localSdpMunger.transformStreamIdentifiers(e)):(T.debug(\"getLocalDescription no localDescription found\"),{})},remoteDescription:function(){var e=this.peerconnection.remoteDescription;return this.trace(\"getRemoteDescription::preTransform\",w(e)),p.a.usesUnifiedPlan()&&(e=this.interop.toPlanB(e),this.trace(\"getRemoteDescription::postTransform (Plan B)\",w(e))),e||{}}};Object.keys(O).forEach(function(e){Object.defineProperty(A.prototype,e,{get:O[e]})}),A.prototype._getSSRC=function(e){return this.localSSRCs.get(e)},A.prototype.addTrack=function(e){var t=e.rtcId;if(T.info(\"add \".concat(e,\" to: \").concat(this)),this.localTracks.has(t))T.error(\"\".concat(e,\" is already in \").concat(this));else{this.localTracks.set(t,e);var n=e.getOriginalStream();if(n?this._addStream(n):(!p.a.doesVideoMuteByStreamRemove()||e.isAudioTrack()||e.isVideoTrack()&&!e.isMuted())&&T.error(\"\".concat(this,\" no WebRTC stream for: \").concat(e)),p.a.doesVideoMuteByStreamRemove()&&e.isVideoTrack()&&e.isMuted()){var r=this.generateNewStreamSSRCInfo(e);this.sdpConsistency.setPrimarySsrc(r.ssrcs[0]);var i=r.groups.find(function(e){return\"SIM\"===e.semantics});i&&this.simulcast.setSsrcCache(i.ssrcs);var o=r.groups.filter(function(e){return\"FID\"===e.semantics});if(o){var a=new Map;o.forEach(function(e){var t=e.ssrcs[0],n=e.ssrcs[1];a.set(t,n)}),this.rtxModifier.setSsrcCache(a)}}}},A.prototype.addTrackUnmute=function(e){if(!this._assertTrackBelongs(\"addTrackUnmute\",e))return!1;T.info(\"Adding \".concat(e,\" as unmute to \").concat(this));var t=e.getOriginalStream();return t?(this._addStream(t),!0):(T.error(\"Unable to add \".concat(e,\" as unmute to \").concat(this,\" - no WebRTC stream\")),!1)},A.prototype._addStream=function(e){this.peerconnection.addStream(e),this._addedStreams.push(e)},A.prototype._removeStream=function(e){p.a.supportsRtpSender()?this._handleSenderRemoveStream(e):this.peerconnection.removeStream(e),this._addedStreams=this._addedStreams.filter(function(t){return t!==e})},A.prototype._assertTrackBelongs=function(e,t){var n=this.localTracks.has(t.rtcId);return n||T.error(\"\".concat(e,\": \").concat(t,\" does not belong to \").concat(this)),n},A.prototype.isMediaStreamInPc=function(e){return this._addedStreams.indexOf(e)>-1},A.prototype.removeTrack=function(e){var t=e.getOriginalStream();this.trace(\"removeStream\",e.rtcId,t?t.id:void 0),this._assertTrackBelongs(\"removeStream\",e)&&(this.localTracks.delete(e.rtcId),this.localSSRCs.delete(e.rtcId),t&&(p.a.supportsRtpSender()?this._handleSenderRemoveStream(t):this.peerconnection.removeStream(t)))},A.prototype.findSenderByStream=function(e){var t=e.getTracks()[0];if(t)return this.peerconnection.getSenders().find(function(e){return e.track===t});T.error(\"Cannot find sender: no tracks.\")},A.prototype.replaceTrack=function(e,t){var n=this;if(p.a.supportsRtpSender()&&e&&t){var r=this.findSenderByStream(e.getOriginalStream()),i=t.getOriginalStream();if(r&&i){var o=i.getTracks()[0];if(o)return r.replaceTrack(o,i).then(function(){var r=n.localSSRCs.get(e.rtcId);return n.localTracks.delete(e.rtcId),n.localSSRCs.delete(e.rtcId),n._addedStreams=n._addedStreams.filter(function(e){return e!==i}),n.localTracks.set(t.rtcId,t),t.storedMSID=e.storedMSID,n._addedStreams.push(i),n.localSSRCs.set(t.rtcId,r),n.eventEmitter.emit(f.a.LOCAL_TRACK_SSRC_UPDATED,t,I(r)),!1})}}return e&&this.removeTrack(e),t&&this.addTrack(t),Promise.resolve(!0)},A.prototype.removeTrackMute=function(e){var t=e.getOriginalStream();return this.trace(\"removeStreamMute\",e.rtcId,t?t.id:null),!!this._assertTrackBelongs(\"removeStreamMute\",e)&&(t?(T.info(\"Removing \".concat(e,\" as mute from \").concat(this)),this._removeStream(t),!0):(T.error(\"removeStreamMute - no WebRTC stream for \".concat(e)),!1))},A.prototype._handleSenderRemoveStream=function(e){if(e){var t=this.findSenderByStream(e);t?this.peerconnection.removeTrack(t):T.log(\"Cannot remove tracks: no RTPSender.\")}},A.prototype.createDataChannel=function(e,t){return this.trace(\"createDataChannel\",e,t),this.peerconnection.createDataChannel(e,t)},A.prototype._ensureSimulcastGroupIsLast=function(e){var t=e.sdp,n=t.indexOf(\"m=video\"),r=t.indexOf(\"a=ssrc-group:SIM\",n),i=t.lastIndexOf(\"a=ssrc-group\");if(-1===r||-1===i||i===r)return e;var o=t.indexOf(\"\\r\\n\",r),a=t.substring(r,o+2);i=(t=t.replace(a,\"\")).lastIndexOf(\"a=ssrc-group\");var s=t.indexOf(\"\\r\\n\",i),c=t.slice(0,s),u=a.trim(),l=t.slice(s);return t=\"\".concat(c,\"\\r\\n\").concat(u).concat(l),new RTCSessionDescription({type:e.type,sdp:t})},A.prototype._adjustLocalMediaDirection=function(e){var t=new g.a(e.sdp),n=!1,r=t.selectMedia(\"audio\");if(r){var i=this._getDesiredMediaDirection(c.a);r.direction!==i&&(r.direction=i,T.info(\"Adjusted local audio direction to \".concat(i)),n=!0)}else T.warn('No \"audio\" media found int the local description');var o=t.selectMedia(\"video\");if(o){var a=this._getDesiredMediaDirection(c.b);o.direction!==a&&(o.direction=a,T.info(\"Adjusted local video direction to \".concat(a)),n=!0)}else T.warn('No \"video\" media found in the local description');return n?new RTCSessionDescription({type:e.type,sdp:t.toRawSDP()}):e},A.prototype.setLocalDescription=function(e){var t=this,n=e;if(this.trace(\"setLocalDescription::preTransform\",w(n)),this.options.disableH264||this.options.preferH264){var r=o.a.parse(n.sdp),i=r.media.find(function(e){return\"video\"===e.type});this.options.disableH264?_.a.stripVideoCodec(i,\"h264\"):_.a.preferVideoCodec(i,\"h264\"),n=new RTCSessionDescription({type:n.type,sdp:o.a.write(r)}),this.trace(\"setLocalDescription::postTransform (H264)\",w(n))}return n=this._adjustLocalMediaDirection(n),n=this._ensureSimulcastGroupIsLast(n),p.a.usesUnifiedPlan()&&(n=this.interop.toUnifiedPlan(n),this.trace(\"setLocalDescription::postTransform (Unified Plan)\",w(n))),new Promise(function(e,r){t.peerconnection.setLocalDescription(n).then(function(){t.trace(\"setLocalDescriptionOnSuccess\");var r=_.a.getUfrag(n.sdp);r!==t.localUfrag&&(t.localUfrag=r,t.eventEmitter.emit(f.a.LOCAL_UFRAG_CHANGED,t,r)),e()},function(e){t.trace(\"setLocalDescriptionOnFailure\",e),t.eventEmitter.emit(f.a.SET_LOCAL_DESCRIPTION_FAILED,e,t),r(e)})})},A.prototype.setAudioTransferActive=function(e){T.debug(\"\".concat(this,\" audio transfer active: \").concat(e));var t=this.audioTransferActive!==e;return this.audioTransferActive=e,t},A.prototype._insertUnifiedPlanSimulcastReceive=function(e){var t=o.a.parse(e.sdp),n=t.media.find(function(e){return\"video\"===e.type});return n.rids=[{id:\"1\",direction:\"recv\"},{id:\"2\",direction:\"recv\"},{id:\"3\",direction:\"recv\"}],n.simulcast_03={value:\"recv rid=\".concat(R.join(\";\"))},new RTCSessionDescription({type:e.type,sdp:o.a.write(t)})},A.prototype.setRemoteDescription=function(e){var t=this;if(this.trace(\"setRemoteDescription::preTransform\",w(e)),e=this.simulcast.mungeRemoteDescription(e),this.trace(\"setRemoteDescription::postTransform (simulcast)\",w(e)),this.options.preferH264){var n=o.a.parse(e.sdp),r=n.media.find(function(e){return\"video\"===e.type});_.a.preferVideoCodec(r,\"h264\"),e=new RTCSessionDescription({type:e.type,sdp:o.a.write(n)})}return p.a.usesUnifiedPlan()?(e=new RTCSessionDescription({type:e.type,sdp:this.rtxModifier.stripRtx(e.sdp)}),this.trace(\"setRemoteDescription::postTransform (stripRtx)\",w(e)),e=this.interop.toUnifiedPlan(e),this.trace(\"setRemoteDescription::postTransform (Plan A)\",w(e)),this.isSimulcastOn()&&(e=this._insertUnifiedPlanSimulcastReceive(e),this.trace(\"setRemoteDescription::postTransform (sim receive)\",w(e)))):e=k(e),p.a.isSafariWithWebrtc()&&!p.a.isSafariWithVP8()&&(T.debug(\"Maybe injecting H264 into the remote description\"),e=this._injectH264IfNotPresent(e)),new Promise(function(n,r){t.peerconnection.setRemoteDescription(e).then(function(){t.trace(\"setRemoteDescriptionOnSuccess\");var r=_.a.getUfrag(e.sdp);r!==t.remoteUfrag&&(t.remoteUfrag=r,t.eventEmitter.emit(f.a.REMOTE_UFRAG_CHANGED,t,r)),n()},function(e){t.trace(\"setRemoteDescriptionOnFailure\",e),t.eventEmitter.emit(f.a.SET_REMOTE_DESCRIPTION_FAILED,e,t),r(e)})})},A.prototype._injectH264IfNotPresent=function(e){var t=o.a.parse(e.sdp),n=t.media.find(function(e){return\"video\"===e.type});if(!n)return T.debug(\"No videoMLine found, no need to inject H264.\"),e;if(n.rtp.some(function(e){return\"h264\"===e.codec.toLowerCase()}))return T.debug(\"H264 codec found in video mLine, no need to inject.\"),e;for(var r,i=n.fmtp,a=n.payloads,s=n.rtp,c=a.toString().split(\" \"),u=127;u>=96;u--)if(!c.includes(u)){r=u,c.push(u),n.payloads=c.join(\" \");break}return void 0===r?(T.error(\"Could not find valid payload type to inject.\"),e):(s.push({codec:\"H264\",payload:r,rate:9e4}),i.push({config:\"level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f\",payload:r}),T.debug(\"Injecting H264 payload type \".concat(r,\" into video mLine.\")),new RTCSessionDescription({type:e.type,sdp:o.a.write(t)}))},A.prototype.setVideoTransferActive=function(e){T.debug(\"\".concat(this,\" video transfer active: \").concat(e));var t=this.videoTransferActive!==e;return this.videoTransferActive=e,t},A.prototype.generateRecvonlySsrc=function(){var e=_.a.generateSsrc();T.info(\"\".concat(this,\" generated new recvonly SSRC: \").concat(e)),this.sdpConsistency.setPrimarySsrc(e)},A.prototype.clearRecvonlySsrc=function(){T.info(\"Clearing primary video SSRC!\"),this.sdpConsistency.clearVideoSsrcCache()},A.prototype.close=function(){this.trace(\"stop\"),this.signalingLayer.off(S.a,this._peerMutedChanged),this.signalingLayer.off(S.b,this._peerVideoTypeChanged);var e=!0,t=!1,n=void 0;try{for(var r,i=this.remoteTracks.values()[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var o=r.value,a=!0,s=!1,c=void 0;try{for(var u,l=o.values()[Symbol.iterator]();!(a=(u=l.next()).done);a=!0){var d=u.value;this._removeRemoteTrack(d)}}catch(e){s=!0,c=e}finally{try{a||null==l.return||l.return()}finally{if(s)throw c}}}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}this.remoteTracks.clear(),this._addedStreams=[],this.rtc._removePeerConnection(this)||T.error(\"RTC._removePeerConnection returned false\"),null!==this.statsinterval&&(window.clearInterval(this.statsinterval),this.statsinterval=null),T.info(\"Closing \".concat(this,\"...\")),this.peerconnection.close()};function I(e){return e&&e.groups&&e.groups.length?e.groups[0].ssrcs[0]:e&&e.ssrcs&&e.ssrcs.length?e.ssrcs[0]:null}A.prototype.createAnswer=function(e){if(p.a.isFirefox()&&this.isSimulcastOn()){var t={encodings:[{rid:\"1\",scaleResolutionDownBy:4},{rid:\"2\",scaleResolutionDownBy:2},{rid:\"3\"}]};this.peerconnection.getSenders().find(function(e){return null!==e.track&&\"video\"===e.track.kind}).setParameters(t)}return this._createOfferOrAnswer(!1,e)},A.prototype.createOffer=function(e){return this._createOfferOrAnswer(!0,e)},A.prototype._createOfferOrAnswer=function(e,t){var n=this,r=e?\"Offer\":\"Answer\";this.trace(\"create\".concat(r),JSON.stringify(t,null,\" \"));var i=function(t,i,a){try{if(n.trace(\"create\".concat(r,\"OnSuccess::preTransform\"),w(t)),p.a.usesUnifiedPlan()&&(t=n.interop.toPlanB(t),n.trace(\"create\".concat(r,\"OnSuccess::postTransform (Plan B)\"),w(t)),n.isSimulcastOn()&&(t=n._injectSsrcGroupForUnifiedSimulcast(t),n.trace(\"create\".concat(r,\"OnSuccess::postTransform\")+\"(inject ssrc group)\",w(t)))),p.a.usesUnifiedPlan()||(n.hasAnyTracksOfType(c.b)||n.sdpConsistency.hasPrimarySsrcCached()||n.generateRecvonlySsrc(),t=new RTCSessionDescription({type:t.type,sdp:n.sdpConsistency.makeVideoPrimarySsrcsConsistent(t.sdp)}),n.trace(\"create\".concat(r,\"OnSuccess::postTransform \")+\"(make primary audio/video ssrcs consistent)\",w(t))),n.isSimulcastOn()&&(t=n.simulcast.mungeLocalDescription(t),n.trace(\"create\".concat(r)+\"OnSuccess::postTransform (simulcast)\",w(t))),!n.options.disableRtx&&p.a.supportsRtx()&&(t=new RTCSessionDescription({type:t.type,sdp:n.rtxModifier.modifyRtxSsrcs(t.sdp)}),n.trace(\"create\".concat(r)+\"OnSuccess::postTransform (rtx modifier)\",w(t))),!e){var s=new v.a(n.remoteDescription.sdp),u=new v.a(t.sdp);d=s,h=u,(p.a.isChromiumBased()||p.a.isReactNative())&&d&&h&&d.media&&h.media&&d.media.length===h.media.length&&(h.media.forEach(function(e,t){_.a.findLine(d.media[t],\"a=setup:actpass\",d.session)&&(h.media[t]=e.replace(/a=setup:active/g,\"a=setup:passive\"))}),h.raw=h.session+h.media.join(\"\")),t=new RTCSessionDescription({type:t.type,sdp:u.raw})}var l=function(e){var t=new Map,n=new Map;if(\"object\"!==E(e)||null===e||\"string\"!=typeof e.sdp)return T.warn(\"An empty description was passed as an argument.\"),t;var r=o.a.parse(e.sdp);if(!Array.isArray(r.media))return t;var i=!0,a=!1,s=void 0;try{for(var c,u=r.media[Symbol.iterator]();!(i=(c=u.next()).done);i=!0){var l=c.value;if(Array.isArray(l.ssrcs)){if(Array.isArray(l.ssrcGroups)){var d=!0,p=!1,h=void 0;try{for(var f,m=l.ssrcGroups[Symbol.iterator]();!(d=(f=m.next()).done);d=!0){var v=f.value;if(void 0!==v.semantics&&void 0!==v.ssrcs){var y=v.ssrcs.split(\" \").map(function(e){return parseInt(e,10)}),g=y[0];v.ssrcs=y,n.has(g)||n.set(g,[]),n.get(g).push(v)}}}catch(e){p=!0,h=e}finally{try{d||null==m.return||m.return()}finally{if(p)throw h}}}var _=!0,S=!1,b=void 0;try{for(var C,R=l.ssrcs[Symbol.iterator]();!(_=(C=R.next()).done);_=!0){var A=C.value;if(\"msid\"===A.attribute){var w=A.value,k=t.get(w);k||(k={ssrcs:[],groups:[],msid:w},t.set(w,k));var O=A.id;if(k.ssrcs.push(O),n.has(O)){var I=n.get(O),P=!0,D=!1,N=void 0;try{for(var L,M=I[Symbol.iterator]();!(P=(L=M.next()).done);P=!0){var x=L.value;k.groups.push(x)}}catch(e){D=!0,N=e}finally{try{P||null==M.return||M.return()}finally{if(D)throw N}}}}}}catch(e){S=!0,b=e}finally{try{_||null==R.return||R.return()}finally{if(S)throw b}}}}}catch(e){a=!0,s=e}finally{try{i||null==u.return||u.return()}finally{if(a)throw s}}return t}(t);T.debug(\"Got local SSRCs MAP: \",l),n._processLocalSSRCsMap(l),i(t)}catch(e){n.trace(\"create\".concat(r,\"OnError\"),e),n.trace(\"create\".concat(r,\"OnError\"),w(t)),T.error(\"create\".concat(r,\"OnError\"),e,w(t)),a(e)}var d,h};return new Promise(function(o,a){(e?n.peerconnection.createOffer(t):n.peerconnection.createAnswer(t)).then(function(e){return i(e,o,a)},function(t){return function(t,i){n.trace(\"create\".concat(r,\"OnFailure\"),t);var o=e?f.a.CREATE_OFFER_FAILED:f.a.CREATE_ANSWER_FAILED;n.eventEmitter.emit(o,t,n),i(t)}(t,a)})})},A.prototype._processLocalSSRCsMap=function(e){var t=!0,n=!1,r=void 0;try{for(var i,o=this.localTracks.values()[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value,s=a.storedMSID;if(e.has(s)){var c=e.get(s);if(!c)return void T.error(\"No SSRC found for: \".concat(s,\" in \").concat(this));var u=this.localSSRCs.get(a.rtcId),l=I(c),d=I(u);l!==d?(null===d?T.info(\"Storing new local SSRC for \".concat(a,\" in \").concat(this),c):T.error(\"Overwriting SSRC for \".concat(a,\" \").concat(s,\" in \").concat(this,\" with: \"),c),this.localSSRCs.set(a.rtcId,c),this.eventEmitter.emit(f.a.LOCAL_TRACK_SSRC_UPDATED,a,l)):T.debug(\"The local SSRC(\".concat(l,\") for \").concat(a,\" \").concat(s)+\"is still up to date in \".concat(this))}else a.isVideoTrack()||a.isMuted()||T.warn(\"No SSRCs found in the local SDP for \".concat(a,\" MSID: \").concat(s,\" in \").concat(this))}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}},A.prototype.addIceCandidate=function(e){return this.trace(\"addIceCandidate\",JSON.stringify({candidate:e.candidate,sdpMid:e.sdpMid,sdpMLineIndex:e.sdpMLineIndex,usernameFragment:e.usernameFragment},null,\" \")),this.peerconnection.addIceCandidate(e)},A.prototype.getStats=function(e,t){p.a.isSafariWithWebrtc()||p.a.isFirefox()||p.a.isReactNative()?this.peerconnection.getStats().then(e).catch(t||function(){}):this.peerconnection.getStats(e)},A.prototype.generateNewStreamSSRCInfo=function(e){var t=e.rtcId,n=this._getSSRC(t);if(n&&T.error(\"Will overwrite local SSRCs for track ID: \".concat(t)),this.isSimulcastOn()){n={ssrcs:[],groups:[]};for(var r=0;r<C;r++)n.ssrcs.push(_.a.generateSsrc());n.groups.push({ssrcs:n.ssrcs.slice(),semantics:\"SIM\"})}else n={ssrcs:[_.a.generateSsrc()],groups:[]};if(!this.options.disableRtx&&p.a.supportsRtx())for(var i=n.ssrcs.length,o=0;o<i;++o){var a=n.ssrcs[o],s=_.a.generateSsrc();n.ssrcs.push(s),n.groups.push({ssrcs:[a,s],semantics:\"FID\"})}return n.msid=e.storedMSID,this.localSSRCs.set(t,n),n};A.prototype.setIsSelected=function(e){this.options.enableLayerSuspension&&(T.debug(\"Layer suspension enabled,\"+\"currently selected? \".concat(e)),function(e,t){if(e.getSenders){var n=e.getSenders().find(function(e){return\"video\"===e.track.kind});if(n)if(n.getParameters){var r=n.getParameters();t?(T.debug(\"Currently selected, enabling all sim layers\"),r.encodings.forEach(function(e){e.active=!0})):(T.debug(\"Not currently selected, disabling upper layers\"),[1,2].forEach(function(e){r.encodings[e]&&(r.encodings[e].active=!1)})),n.setParameters(r)}else T.debug(\"Browser doesn't support RTPSender parameters\");else T.warn(\"handleLayerSuspension unable to find video sender\")}else T.debug(\"Browser doesn't support RTPSender\")}(this.peerconnection,e))},A.prototype.toString=function(){return\"TPC[\".concat(this.id,\",p2p:\").concat(this.isP2P,\"]\")}}).call(this,\"modules\\\\RTC\\\\TraceablePeerConnection.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return y});var r=n(8),i=n(53),o=n(16),a=n(5);function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}var p=n(4).getLogger(e),h=n(7),f=!1,m=!1,v=[\"abort\",\"canplay\",\"canplaythrough\",\"emptied\",\"ended\",\"error\",\"loadeddata\",\"loadedmetadata\",\"loadstart\",\"pause\",\"play\",\"playing\",\"ratechange\",\"stalled\",\"suspend\",\"waiting\"],y=function(e){function t(e,n,r,i,o,a,c,l,h,f){var m,y,g;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),y=this,g=u(t).call(this,n,i,o,function(){},a,c),(m=!g||\"object\"!==s(g)&&\"function\"!=typeof g?d(y):g).rtc=e,\"number\"!=typeof l)throw new TypeError(\"SSRC \".concat(l,\" is not a number\"));return m.ssrc=l,m.ownerEndpointId=r,m.muted=h,m.isP2P=f,p.debug(\"New remote track added: \".concat(d(d(m)))),m.hasBeenMuted=h,m.rtc&&m.track&&m._bindTrackHandlers(),m._containerHandlers={},v.forEach(function(e){m._containerHandlers[e]=m._containerEventHandler.bind(d(d(m)),e)}),m}var n,y,g;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,i[\"a\"]),n=t,(y=[{key:\"_bindTrackHandlers\",value:function(){var e=this;this.track.addEventListener(\"mute\",function(){return e._onTrackMute()}),this.track.addEventListener(\"unmute\",function(){return e._onTrackUnmute()}),this.track.addEventListener(\"ended\",function(){p.debug('\"onended\" event('.concat(Date.now(),\"): \").concat(e))})}},{key:\"_onTrackMute\",value:function(){p.debug('\"onmute\" event('.concat(Date.now(),\"): \").concat(this)),this.rtc.eventEmitter.emit(h.REMOTE_TRACK_MUTE,this)}},{key:\"_onTrackUnmute\",value:function(){p.debug('\"onunmute\" event('.concat(Date.now(),\"): \").concat(this)),this.rtc.eventEmitter.emit(h.REMOTE_TRACK_UNMUTE,this)}},{key:\"setMute\",value:function(e){this.muted!==e&&(e&&(this.hasBeenMuted=!0),this.stream&&(this.stream.muted=e),this.muted=e,this.emit(o.TRACK_MUTE_CHANGED,this))}},{key:\"isMuted\",value:function(){return this.muted}},{key:\"getParticipantId\",value:function(){return this.ownerEndpointId}},{key:\"isLocal\",value:function(){return!1}},{key:\"getSSRC\",value:function(){return this.ssrc}},{key:\"_setVideoType\",value:function(e){this.videoType!==e&&(this.videoType=e,this.emit(o.TRACK_VIDEOTYPE_CHANGED,e))}},{key:\"_playCallback\",value:function(){var e=this.isVideoTrack()?\"video\":\"audio\",t=window.performance.now();console.log(\"(TIME) Render \".concat(e,\":\\t\"),t),this.conference.getConnectionTimes()[\"\".concat(e,\".render\")]=t;var n=window.connectionTimes[\"obtainPermissions.start\"],i=window.connectionTimes[\"obtainPermissions.end\"],o=isNaN(i)||isNaN(n)?0:i-n,s=t-(this.conference.getConnectionTimes()[\"session.initiate\"]-this.conference.getConnectionTimes()[\"muc.joined\"])-o;this.conference.getConnectionTimes()[\"\".concat(e,\".ttfm\")]=s,console.log(\"(TIME) TTFM \".concat(e,\":\\t\"),s),a.a.sendAnalytics(Object(r.L)({media_type:e,muted:this.hasBeenMuted,value:s}))}},{key:\"_attachTTFMTracker\",value:function(e){f&&this.isAudioTrack()||m&&this.isVideoTrack()||(this.isAudioTrack()&&(f=!0),this.isVideoTrack()&&(m=!0),e.addEventListener(\"canplay\",this._playCallback.bind(this)))}},{key:\"_onTrackAttach\",value:function(e){var t=this;p.debug(\"Track has been attached to a container: \".concat(this)),v.forEach(function(n){e.addEventListener(n,t._containerHandlers[n])})}},{key:\"_onTrackDetach\",value:function(e){var t=this;p.debug(\"Track has been detached from a container: \".concat(this)),v.forEach(function(n){e.removeEventListener(n,t._containerHandlers[n])})}},{key:\"_containerEventHandler\",value:function(e){p.debug(\"\".concat(e,\" handler was called for a container with attached \").concat(this))}},{key:\"_getStatus\",value:function(){var e=this.track,t=e.enabled,n=e.muted,r=e.readyState;return\"readyState: \".concat(r,\", muted: \").concat(n,\", enabled: \").concat(t)}},{key:\"toString\",value:function(){return\"RemoteTrack[userID: \".concat(this.getParticipantId(),\", type: \").concat(this.getType(),\", ssrc: \").concat(this.getSSRC(),\", p2p: \").concat(this.isP2P,\", status: \").concat(this._getStatus(),\"]\")}}])&&c(n.prototype,y),g&&c(n,g),t}()}).call(this,\"modules\\\\RTC\\\\JitsiRemoteTrack.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return c});var r=n(4),i=n(9),o=n(27);function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=Object(r.getLogger)(e),c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.tpc=t}var t,n,r;return t=e,(n=[{key:\"_addMutedLocalVideoTracksToSDP\",value:function(e){var t=this.tpc.getLocalTracks(i.b);if(!t.length)return!1;1!==t.length&&s.error(\"\".concat(this.tpc,\" there is more than 1 video track ! \")+\"Strange things may happen !\",t);var n=e.selectMedia(\"video\");if(!n)return s.debug(\"\".concat(this.tpc,\" unable to hack local video track SDP\")+'- no \"video\" media'),!1;var r=!1,o=!0,a=!1,c=void 0;try{for(var u,l=t[Symbol.iterator]();!(o=(u=l.next()).done);o=!0){var d=u.value,p=d.isMuted(),h=d.getOriginalStream(),f=h&&this.tpc.isMediaStreamInPc(h),m=p||!f;if(s.debug(\"\".concat(this.tpc,\" \").concat(d,\" muted: \").concat(p,\", is in PeerConnection: \").concat(f,\" => should fake sdp ? : \").concat(m)),m){var v=this.tpc.isSimulcastOn()?this.tpc.simulcast.ssrcCache:[this.tpc.sdpConsistency.cachedPrimarySsrc];if(v.length){r=!0,n.direction=\"sendrecv\";var y=v[0],g=\"injected-\".concat(y),_=!0,S=!1,b=void 0;try{for(var E,T=v[Symbol.iterator]();!(_=(E=T.next()).done);_=!0){var C=E.value;n.removeSSRC(C),s.debug(\"\".concat(this.tpc,\" injecting video SSRC: \").concat(C,\" for \").concat(d)),n.addSSRCAttribute({id:C,attribute:\"cname\",value:g}),n.addSSRCAttribute({id:C,attribute:\"msid\",value:d.storedMSID})}}catch(e){S=!0,b=e}finally{try{_||null==T.return||T.return()}finally{if(S)throw b}}if(v.length>1){var R={ssrcs:v.join(\" \"),semantics:\"SIM\"};n.findGroup(R.semantics,R.ssrcs)||(s.debug(\"\".concat(this.tpc,\" injecting SIM group for \").concat(d),R),n.addSSRCGroup(R))}this.tpc.options.disableRtx||this.tpc.rtxModifier.modifyRtxSsrcs2(n)}else s.error(\"No SSRCs stored for: \".concat(d,\" in \").concat(this.tpc))}}}catch(e){a=!0,c=e}finally{try{o||null==l.return||l.return()}finally{if(a)throw c}}return r}},{key:\"_transformMediaIdentifiers\",value:function(e){var t=this.tpc.id,n=!0,r=!1,i=void 0;try{for(var o,a=e.ssrcs[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var c=o.value;switch(c.attribute){case\"cname\":case\"label\":case\"mslabel\":c.value=c.value&&\"\".concat(c.value,\"-\").concat(t);break;case\"msid\":if(c.value){var u=c.value.split(\" \");if(2===u.length){var l=u[0],d=u[1];c.value=\"\".concat(l,\"-\").concat(t,\" \").concat(d,\"-\").concat(t)}else s.warn(\"Unable to munge local MSID\"+\"- weird format detected: \".concat(c.value))}}}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}}},{key:\"maybeAddMutedLocalVideoTracksToSDP\",value:function(e){if(!e)throw new Error(\"No local description passed in.\");var t=new o.a(e.sdp);return this._addMutedLocalVideoTracksToSDP(t)?new RTCSessionDescription({type:e.type,sdp:t.toRawSDP()}):e}},{key:\"transformStreamIdentifiers\",value:function(e){if(!e||!e.sdp||!e.type)return e;var t=new o.a(e.sdp),n=t.selectMedia(\"audio\");n&&this._transformMediaIdentifiers(n);var r=t.selectMedia(\"video\");return r&&this._transformMediaIdentifiers(r),new RTCSessionDescription({type:e.type,sdp:t.toRawSDP()})}}])&&a(t.prototype,n),r&&a(t,r),e}()}).call(this,\"modules\\\\RTC\\\\LocalSdpMunger.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return u});var r=n(4),i=n(27),o=n(6);function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=Object(r.getLogger)(e);function c(e,t,n){s.debug(\"Updating mline to associate \".concat(n)+\"rtx ssrc with primary stream, \".concat(t.id));var r=t.id,i=t.msid,o=t.cname,a=e.getRtxSSRC(r);a!==n?(a&&(s.debug(\"\".concat(r,\" was previously associated with rtx\")+\"\".concat(a,\", removing all references to it\")),e.removeSSRC(a),s.debug(\"groups before filtering for \".concat(a)),s.debug(e.dumpSSRCGroups()),e.removeGroupsWithSSRC(a)),e.addSSRCAttribute({id:n,attribute:\"cname\",value:o}),e.addSSRCAttribute({id:n,attribute:\"msid\",value:i}),e.addSSRCGroup({semantics:\"FID\",ssrcs:\"\".concat(r,\" \").concat(n)})):s.debug(\"\".concat(n,\" was already associated with \").concat(r))}var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.correspondingRtxSsrcs=new Map}var t,n,r;return t=e,(n=[{key:\"clearSsrcCache\",value:function(){this.correspondingRtxSsrcs.clear()}},{key:\"setSsrcCache\",value:function(e){s.debug(\"Setting ssrc cache to \",e),this.correspondingRtxSsrcs=e}},{key:\"modifyRtxSsrcs\",value:function(e){var t=new i.a(e),n=t.selectMedia(\"video\");return n?this.modifyRtxSsrcs2(n)?t.toRawSDP():e:(s.debug(\"No 'video' media found in the sdp: \".concat(e)),e)}},{key:\"modifyRtxSsrcs2\",value:function(e){if(\"recvonly\"===e.direction)return s.debug(\"RtxModifier doing nothing, video m line is recvonly\"),!1;if(e.getSSRCCount()<1)return s.debug(\"RtxModifier doing nothing, no video ssrcs present\"),!1;s.debug(\"Current ssrc mapping: \",this.correspondingRtxSsrcs);var t=e.getPrimaryVideoSSRCs();s.debug(\"Parsed primary video ssrcs \",t,\" making sure all have rtx streams\");var n=!0,r=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(n=(a=u.next()).done);n=!0){var l=a.value,d=e.getSSRCAttrValue(l,\"msid\"),p=e.getSSRCAttrValue(l,\"cname\"),h=this.correspondingRtxSsrcs.get(l);if(h)s.debug(\"Already have an associated rtx ssrc for\"+\"video ssrc \".concat(l,\": \").concat(h));else{s.debug(\"No previously associated rtx ssrc for video ssrc \".concat(l));var f=e.getRtxSSRC(l);f?(s.debug(\"Rtx stream \".concat(f,\" \")+\"already existed in the sdp as an rtx stream for \"+\"\".concat(l)),h=f):(h=o.a.generateSsrc(),s.debug(\"Generated rtx ssrc \".concat(h,\" \")+\"for ssrc \".concat(l))),s.debug(\"Caching rtx ssrc \".concat(h,\" \")+\"for video ssrc \".concat(l)),this.correspondingRtxSsrcs.set(l,h)}c(e,{id:l,cname:p,msid:d},h)}}catch(e){r=!0,i=e}finally{try{n||null==u.return||u.return()}finally{if(r)throw i}}return!0}},{key:\"stripRtx\",value:function(e){var t=new i.a(e),n=t.selectMedia(\"video\");if(!n)return s.debug(\"No 'video' media found in the sdp: \".concat(e)),e;if(\"recvonly\"===n.direction)return s.debug(\"RtxModifier doing nothing, video m line is recvonly\"),e;if(n.getSSRCCount()<1)return s.debug(\"RtxModifier doing nothing, no video ssrcs present\"),e;if(!n.containsAnySSRCGroups())return s.debug(\"RtxModifier doing nothing, no video ssrcGroups present\"),e;var r=n.findGroups(\"FID\");n.removeGroupsBySemantics(\"FID\");var o=!0,a=!1,c=void 0;try{for(var u,l=r[Symbol.iterator]();!(o=(u=l.next()).done);o=!0){var d=u.value,p=Object(i.c)(d);n.removeSSRC(p)}}catch(e){a=!0,c=e}finally{try{o||null==l.return||l.return()}finally{if(a)throw c}}return t.toRawSDP()}}])&&a(t.prototype,n),r&&a(t,r),e}()}).call(this,\"modules\\\\xmpp\\\\RtxModifier.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return s});var r=n(4),i=n(27);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=Object(r.getLogger)(e),s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.clearVideoSsrcCache(),this.logPrefix=t}var t,n,r;return t=e,(n=[{key:\"clearVideoSsrcCache\",value:function(){this.cachedPrimarySsrc=null,this.injectRecvOnly=!1}},{key:\"setPrimarySsrc\",value:function(e){if(\"number\"!=typeof e)throw new Error(\"Primary SSRC must be a number!\");this.cachedPrimarySsrc=e}},{key:\"hasPrimarySsrcCached\",value:function(){return Boolean(this.cachedPrimarySsrc)}},{key:\"makeVideoPrimarySsrcsConsistent\",value:function(e){var t=new i.a(e),n=t.selectMedia(\"video\");if(!n)return a.debug(\"\".concat(this.logPrefix,\" no 'video' media found in the sdp: \")+\"\".concat(e)),e;if(\"recvonly\"===n.direction)this.cachedPrimarySsrc&&this.injectRecvOnly?n.addSSRCAttribute({id:this.cachedPrimarySsrc,attribute:\"cname\",value:\"recvonly-\".concat(this.cachedPrimarySsrc)}):a.info(\"\".concat(this.logPrefix,\" no SSRC found for the recvonly video\")+\"stream!\");else{var r=n.getPrimaryVideoSsrc();if(!r)return a.info(\"\".concat(this.logPrefix,\" sdp-consistency couldn't\")+\" parse new primary ssrc\"),e;if(this.cachedPrimarySsrc){a.info(\"\".concat(this.logPrefix,\" sdp-consistency replacing new ssrc\")+\"\".concat(r,\" with cached \")+\"\".concat(this.cachedPrimarySsrc)),n.replaceSSRC(r,this.cachedPrimarySsrc);var o=!0,s=!1,c=void 0;try{for(var u,l=n.ssrcGroups[Symbol.iterator]();!(o=(u=l.next()).done);o=!0){var d=u.value;if(\"FID\"===d.semantics){var p=Object(i.b)(d),h=Object(i.c)(d);p===r&&(d.ssrcs=\"\".concat(this.cachedPrimarySsrc,\" \").concat(h))}}}catch(e){s=!0,c=e}finally{try{o||null==l.return||l.return()}finally{if(s)throw c}}}else this.cachedPrimarySsrc=r,a.info(\"\".concat(this.logPrefix,\" sdp-consistency caching primary ssrc\")+\"\".concat(this.cachedPrimarySsrc));this.injectRecvOnly=!0}return t.toRawSDP()}}])&&o(t.prototype,n),r&&o(t,r),e}()}).call(this,\"modules\\\\xmpp\\\\SdpConsistency.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return o});var r=n(2);function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._callback=n,this._eventFired=!1,t.statistics.addAudioLevelListener(this._audioLevel.bind(this)),t.on(r.TRACK_MUTE_CHANGED,this._trackMuteChanged.bind(this)),t.on(r.TRACK_ADDED,this._trackAdded.bind(this))}var t,n,o;return t=e,(n=[{key:\"_audioLevel\",value:function(e,t,n,r){r&&this.audioTrack&&!this._eventFired&&this.audioTrack.isMuted()&&n>.6&&(this._eventFired=!0,this._callback())}},{key:\"_isLocalAudioTrack\",value:function(e){return e.isAudioTrack()&&e.isLocal()}},{key:\"_trackAdded\",value:function(e){this._isLocalAudioTrack(e)&&(this.audioTrack=e)}},{key:\"_trackMuteChanged\",value:function(e){this._isLocalAudioTrack(e)&&e.isMuted()&&(this._eventFired=!1)}}])&&i(t.prototype,n),o&&i(t,o),e}()},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return v});var r=n(26),i=n(2),o=n(4);function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=n(0),c=n(14),u=n(30),l=Object(o.getLogger)(e),d=\"stats\",p=[{width:1920,height:1080,layers:3,max:5e3,target:4e3,min:800},{width:1280,height:720,layers:3,max:2500,target:2500,min:600},{width:960,height:540,layers:3,max:900,target:900,min:450},{width:640,height:360,layers:2,max:700,target:500,min:150},{width:480,height:270,layers:2,max:450,target:350,min:150},{width:320,height:180,layers:1,max:200,target:150,min:30}],h=800,f=null;function m(e,t,n){if(n<15e3)return 1;var r=0,i=Math.min(t.height,t.width);if(e){var o=p.find(function(e){return e.height<=i});if(o){var a=function(){var e=i;if(!(o=p.find(function(t){return t.height===e})))return\"break\";r+=o.target};for(i=o.height;i>=180;i/=2){if(\"break\"===a())break}}}else{var s=t.width*t.height;r=s<=76800?600:s<=307200?1700:s<=518400?2e3:2500}return Math.min(r,function(e){if(e>6e4)return Number.MAX_SAFE_INTEGER;return h*Math.pow(1.08,e/1e3)}(Math.max(0,n-1e3)))}var v=function(){function e(t,n,o){var a=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.eventEmitter=n,this._conference=t,this._localStats={connectionQuality:100,jvbRTT:void 0},this._lastConnectionQualityUpdate=-1,this._remoteStats={},this._timeIceConnected=-1,this._timeVideoUnmuted=-1,this._timeLastBwCapRemoved=-1,o.config.startBitrate&&o.config.startBitrate>0&&(h=o.config.startBitrate),t.on(i.CONNECTION_INTERRUPTED,function(){a._updateLocalConnectionQuality(0),a.eventEmitter.emit(r.LOCAL_STATS_UPDATED,a._localStats),a._broadcastLocalStats()}),t.room.addListener(s.ICE_CONNECTION_STATE_CHANGED,function(e,t){e.isP2P||\"connected\"!==t||(a._timeIceConnected=window.performance.now())}),t.on(i.ENDPOINT_MESSAGE_RECEIVED,function(e,t){t.type===d&&a._updateRemoteStats(e.getId(),t.values)}),t.statistics.addConnectionStatsListener(this._updateLocalStats.bind(this)),t.on(i.TRACK_MUTE_CHANGED,function(e){e.isVideoTrack()&&(e.isMuted()?a._timeVideoUnmuted=-1:a._maybeUpdateUnmuteTime())}),t.on(i.TRACK_ADDED,function(e){e.isVideoTrack()&&!e.isMuted()&&a._maybeUpdateUnmuteTime()}),t.on(i.SERVER_REGION_CHANGED,function(e){a._localStats.serverRegion=e}),t.on(i.PROPERTIES_CHANGED,function(e){a._localStats.bridgeCount=Number((e||{})[\"bridge-count\"])})}var t,n,o;return t=e,(n=[{key:\"_maybeUpdateUnmuteTime\",value:function(){this._timeVideoUnmuted<0&&(this._timeVideoUnmuted=window.performance.now())}},{key:\"_calculateConnectionQuality\",value:function(e,t,n){var r,i=u[n],o=100;if(this._localStats.packetLoss&&(r=this._localStats.packetLoss.upload,t&&(r*=.5)),t||!i||e===c.DESKTOP||this._timeIceConnected<0||this._timeVideoUnmuted<0)void 0===r?(l.error(\"Cannot calculate connection quality, unknown packet loss.\"),o=100):o=r<=2?100:r<=4?70:r<=6?50:r<=8?30:r<=12?10:0;else{var a=this._conference.getActivePeerConnection(),s=Boolean(a&&a.isSimulcastOn()),d=a&&a.bandwidthLimiter&&a.bandwidthLimiter.getBandwidthLimit(\"video\");!d&&f&&(this._timeLastBwCapRemoved=window.performance.now(),h=f),f=d;var p=m(s,i,window.performance.now()-Math.max(this._timeVideoUnmuted,this._timeIceConnected,this._timeLastBwCapRemoved));p=Math.min(.9*p,2500),f&&(p=Math.min(p,f)),o=100*this._localStats.bitrate.upload/p,r&&r>=10&&(o=Math.min(o,30))}if(this._lastConnectionQualityUpdate>0){var v=this._localStats.connectionQuality,y=(window.performance.now()-this._lastConnectionQualityUpdate)/1e3;o=Math.min(o,v+2*y)}return Math.min(100,o)}},{key:\"_updateLocalConnectionQuality\",value:function(e){this._localStats.connectionQuality=e,this._lastConnectionQualityUpdate=window.performance.now()}},{key:\"_broadcastLocalStats\",value:function(){var e={bitrate:this._localStats.bitrate,packetLoss:this._localStats.packetLoss,connectionQuality:this._localStats.connectionQuality,jvbRTT:this._localStats.jvbRTT,serverRegion:this._localStats.serverRegion,avgAudioLevels:this._localStats.localAvgAudioLevels};try{this._conference.broadcastEndpointMessage({type:d,values:e})}catch(e){}}},{key:\"_updateLocalStats\",value:function(e,t){if(!e.isP2P){var n=t.transport&&t.transport.length&&t.transport[0].rtt;this._localStats.jvbRTT=n||void 0}if(e===this._conference.getActivePeerConnection()){var i,o=!this._conference.isConnectionInterrupted(),a=this._conference.getLocalVideoTrack(),s=a?a.videoType:void 0,c=!a||a.isMuted(),u=a?a.resolution:null;for(i in c||this._maybeUpdateUnmuteTime(),t)t.hasOwnProperty(i)&&(this._localStats[i]=t[i]);o&&this._updateLocalConnectionQuality(this._calculateConnectionQuality(s,c,u)),this.eventEmitter.emit(r.LOCAL_STATS_UPDATED,this._localStats),this._broadcastLocalStats()}}},{key:\"_updateRemoteStats\",value:function(e,t){this._remoteStats[e]={bitrate:t.bitrate,packetLoss:t.packetLoss,connectionQuality:t.connectionQuality,jvbRTT:t.jvbRTT,serverRegion:t.serverRegion,avgAudioLevels:t.avgAudioLevels},this.eventEmitter.emit(r.REMOTE_STATS_UPDATED,e,this._remoteStats[e])}},{key:\"getStats\",value:function(){return this._localStats}}])&&a(t.prototype,n),o&&a(t,o),e}()}).call(this,\"modules\\\\connectivity\\\\ConnectionQuality.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return a});var r=n(4);function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=Object(r.getLogger)(e),a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._conference=t}var t,n,r;return t=e,(n=[{key:\"start\",value:function(e){var t=this;this._conference.xmpp.ping(65e3).then(function(){t._canceled||(t._conference.isJvbConnectionInterrupted?t._iceFailedTimeout=window.setTimeout(function(){o.info(\"Sending ICE failed - the connection has not recovered\"),t._iceFailedTimeout=void 0,e.sendIceFailedNotification()},2e3):o.info(\"ICE connection restored - not sending ICE failed\"))},function(e){o.error(\"PING error/timeout - not sending ICE failed\",e)})}},{key:\"cancel\",value:function(){this._canceled=!0,this._iceFailedTimeout&&window.clearTimeout(this._iceFailedTimeout)}}])&&i(t.prototype,n),r&&i(t,r),e}()}).call(this,\"modules\\\\connectivity\\\\IceFailedNotification.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return h});var r=n(4),i=n(8),o=n(49),a=n(2),s=n(5);function c(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return t&&u(e.prototype,t),n&&u(e,n),e}var d=Object(r.getLogger)(e),p=function(){function e(t,n){c(this,e),this.participant=t,this.e2eping=n,this.id=t.getId(),this.requests={},this.lastRequestId=1,this.clearIntervals=this.clearIntervals.bind(this),this.sendRequest=this.sendRequest.bind(this),this.handleResponse=this.handleResponse.bind(this),this.maybeSendAnalytics=this.maybeSendAnalytics.bind(this),this.sendAnalytics=this.sendAnalytics.bind(this),n.isDataChannelOpen&&this.sendRequest(),this.pingInterval=window.setInterval(this.sendRequest,n.pingIntervalMs),this.analyticsInterval=window.setTimeout(this.maybeSendAnalytics,this.e2eping.analyticsIntervalMs)}return l(e,[{key:\"clearIntervals\",value:function(){this.pingInterval&&window.clearInterval(this.pingInterval),this.analyticsInterval&&window.clearInterval(this.analyticsInterval)}},{key:\"sendRequest\",value:function(){var e=this.lastRequestId++,t={type:\"e2e-ping-request\",id:e};this.e2eping.sendMessage(t,this.id),this.requests[e]={id:e,timeSent:window.performance.now()}}},{key:\"handleResponse\",value:function(e){var t=this.requests[e.id];t&&(t.rtt=window.performance.now()-t.timeSent,this.e2eping.eventEmitter.emit(o.E2E_RTT_CHANGED,this.participant,t.rtt)),this.maybeSendAnalytics()}},{key:\"maybeSendAnalytics\",value:function(){var e,t,n=window.performance.now(),r=1/0;for(t in this.requests)this.requests.hasOwnProperty(t)&&((e=this.requests[t]).timeSent<n-this.e2eping.analyticsIntervalMs?delete this.requests[t]:e.rtt&&(r=Math.min(r,e.rtt)));r<1/0&&this.sendAnalytics(r)}},{key:\"sendAnalytics\",value:function(e){s.a.sendAnalytics(Object(i.B)(this.id,this.participant.getProperty(\"region\"),e))}}]),e}(),h=function(){function e(t,n,r){c(this,e),this.conference=t,this.eventEmitter=t.eventEmitter,this.sendMessage=r,this.pingIntervalMs=1e4,this.analyticsIntervalMs=6e4,this.participants={},this.isDataChannelOpen=!1,n&&n.e2eping&&(\"number\"==typeof n.e2eping.pingInterval&&(this.pingIntervalMs=n.e2eping.pingInterval),\"number\"==typeof n.e2eping.analyticsInterval&&(this.analyticsIntervalMs=n.e2eping.analyticsInterval),this.analyticsIntervalMs>0&&this.analyticsIntervalMs<this.pingIntervalMs&&(this.analyticsIntervalMs=this.pingIntervalMs)),d.info(\"Initializing e2e ping; pingInterval=\".concat(this.pingIntervalMs,\", analyticsInterval=\").concat(this.analyticsIntervalMs,\".\")),this.participantJoined=this.participantJoined.bind(this),t.on(a.USER_JOINED,this.participantJoined),this.participantLeft=this.participantLeft.bind(this),t.on(a.USER_LEFT,this.participantLeft),this.messageReceived=this.messageReceived.bind(this),t.on(a.ENDPOINT_MESSAGE_RECEIVED,this.messageReceived),this.dataChannelOpened=this.dataChannelOpened.bind(this),t.on(a.DATA_CHANNEL_OPENED,this.dataChannelOpened)}return l(e,[{key:\"dataChannelOpened\",value:function(){for(var e in this.isDataChannelOpen=!0,this.participants)if(this.participants.hasOwnProperty(e)){var t=this.participants[e];window.setTimeout(t.sendRequest,200)}}},{key:\"messageReceived\",value:function(e,t){\"e2e-ping-request\"===t.type?this.handleRequest(e.getId(),t):\"e2e-ping-response\"===t.type&&this.handleResponse(e.getId(),t)}},{key:\"participantJoined\",value:function(e,t){this.pingIntervalMs<=0||(this.participants[e]&&(d.info(\"Participant wrapper already exists for \".concat(e,\". Clearing.\")),this.participants[e].clearIntervals(),delete this.participants[e]),this.participants[e]=new p(t,this))}},{key:\"participantLeft\",value:function(e){this.pingIntervalMs<=0||this.participants[e]&&(this.participants[e].clearIntervals(),delete this.participants[e])}},{key:\"handleRequest\",value:function(e,t){if(t&&t.id){var n={type:\"e2e-ping-response\",id:t.id};this.sendMessage(n,e)}else d.info(\"Received an invalid e2e ping request from \".concat(e,\".\"))}},{key:\"handleResponse\",value:function(e,t){var n=this.participants[e];n&&n.handleResponse(t)}},{key:\"stop\",value:function(){for(var e in d.info(\"Stopping e2eping\"),this.conference.off(a.USER_JOINED,this.participantJoined),this.conference.off(a.USER_LEFT,this.participantLeft),this.conference.off(a.ENDPOINT_MESSAGE_RECEIVED,this.messageReceived),this.conference.off(a.DATA_CHANNEL_OPENED,this.dataChannelOpened),this.participants)this.participants.hasOwnProperty(e)&&this.participants[e].clearIntervals();this.participants={}}}]),e}()}).call(this,\"modules\\\\e2eping\\\\e2eping.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return s});var r=n(4),i=n(2);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=Object(r.getLogger)(e),s=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._conference=t,this._jvb121=!0,this._conference.addEventListener(i.USER_JOINED,function(){return n.evaluateStatus()}),this._conference.addEventListener(i.USER_LEFT,function(){return n.evaluateStatus()}),this._conference.addEventListener(i.P2P_STATUS,function(){return n.evaluateStatus()})}var t,n,r;return t=e,(n=[{key:\"evaluateStatus\",value:function(){var e=this._jvb121,t=!this._conference.isP2PActive()&&this._conference.getParticipantCount()<=2;e!==t&&(this._jvb121=t,a.debug(\"JVB121 status \".concat(e,\" => \").concat(t)),this._conference.eventEmitter.emit(i.JVB121_STATUS,e,t))}}])&&o(t.prototype,n),r&&o(t,r),e}()}).call(this,\"modules\\\\event\\\\Jvb121EventGenerator.js\")},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(0),o=n.n(i),a=n(59),s=n(42);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=Object(r.getLogger)(e),d=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._sessions={},this._chatRoom=t,this.onPresence=this.onPresence.bind(this),this._chatRoom.eventEmitter.addListener(o.a.PRESENCE_RECEIVED,this.onPresence)}var t,n,r;return t=e,(n=[{key:\"getSession\",value:function(e){return this._sessions[e]}},{key:\"onPresence\",value:function(e){var t=e.fromHiddenDomain,n=e.presence;s.a.isFromFocus(n)?this._handleFocusPresence(n):t&&this._handleJibriPresence(n)}},{key:\"startRecording\",value:function(e){var t=this,n=new a.a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){c(e,t,n[t])})}return e}({},e,{connection:this._chatRoom.connection}));return n.start({appData:e.appData,broadcastId:e.broadcastId,focusMucJid:this._chatRoom.focusMucJid,streamId:e.streamId}).then(function(){return t.getSession(n.getID())||(t._addSession(n),t._emitSessionUpdate(n)),n}).catch(function(e){return t._emitSessionUpdate(n),Promise.reject(e)})}},{key:\"stopRecording\",value:function(e){var t=this.getSession(e);return t?t.stop({focusMucJid:this._chatRoom.focusMucJid}):Promise.reject(new Error(\"Could not find session\"))}},{key:\"_addSession\",value:function(e){this._sessions[e.getID()]=e}},{key:\"_createSession\",value:function(e,t,n){var r=new a.a({connection:this._chatRoom.connection,focusMucJid:this._chatRoom.focusMucJid,mode:n,sessionID:e,status:t});return this._addSession(r),r}},{key:\"_emitSessionUpdate\",value:function(e){this._chatRoom.eventEmitter.emit(o.a.RECORDER_STATE_CHANGED,e)}},{key:\"_handleFocusPresence\",value:function(e){var t=s.a.getFocusRecordingUpdate(e);if(t){var n=t.sessionID,r=t.status,i=t.error,o=t.recordingMode,a=this.getSession(n);a||\"off\"!==r?a&&a.getStatus()===r&&a.getError()===i?l.warn(\"Ignoring duplicate presence update: \",JSON.stringify(t)):(a||(a=this._createSession(n,r,o)),a.setStatus(r),i&&a.setError(i),this._emitSessionUpdate(a)):l.warn(\"Ignoring recording presence update\",\"Received a new session with status off.\")}}},{key:\"_handleJibriPresence\",value:function(e){var t=s.a.getHiddenDomainUpdate(e),n=t.liveStreamViewURL,r=t.mode,i=t.sessionID;if(i){var o=this.getSession(i);o||(o=this._createSession(i,\"\",r)),o.setLiveStreamViewURL(n),this._emitSessionUpdate(o)}else l.warn(\"Ignoring potential jibri presence due to no session id.\")}}])&&u(t.prototype,n),r&&u(t,r),e}();t.a=d}).call(this,\"modules\\\\recording\\\\RecordingManager.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return m});var r=n(3),i=n(8),o=n(4),a=n(10),s=n(5);function c(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function u(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return t&&l(e.prototype,t),n&&l(e,n),e}var p=Object(o.getLogger)(e),h={offerToReceiveAudio:1,offerToReceiveVideo:0},f=function(){function e(t,n,r,i){u(this,e),this.region=t,this.getStatsIntervalMs=r,this.getStatsInterval=null,this.rtt=1/0,this.rtts=[];var o=[{url:\"stun:\".concat(n)}];this.pc=new a.a.RTCPeerConnectionType({iceServers:o}),this.candidates={},this.stopped=!1,this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.startStatsInterval=this.startStatsInterval.bind(this),this.handleCandidateRtt=this.handleCandidateRtt.bind(this),window.setTimeout(this.start,i)}return d(e,[{key:\"start\",value:function(){var e=this;this.stopped||this.pc.createOffer(h).then(function(t){e.pc.setLocalDescription(t,function(){p.info(\"setLocalDescription success for \".concat(e.region)),e.startStatsInterval()},function(t){p.warn(\"setLocalDescription failed for \".concat(e.region,\": \").concat(t))})})}},{key:\"startStatsInterval\",value:function(){var e=this;this.getStatsInterval=window.setInterval(function(){e.pc.getStats(function(t){for(var n=t.result(),r=0;r<n.length;++r){var i=n[r],o=Number(i.stat(\"stunKeepaliveRttTotal\"));if(o>0){var a=\"\".concat(i.stat(\"ipAddress\"),\"_\").concat(i.stat(\"portNumber\"),\"_\").concat(i.stat(\"priority\"));e.handleCandidateRtt(a,o,Number(i.stat(\"stunKeepaliveResponsesReceived\")),Number(i.stat(\"stunKeepaliveRequestsSent\")))}}var s=1/0;for(var u in e.candidates)e.candidates.hasOwnProperty(u)&&e.candidates[u].rtt>0&&(s=Math.min(s,e.candidates[u].rtt));e.rtts.push(s),e.rtts.length>6&&(e.rtts=e.rtts.splice(1,7)),e.rtt=Math.min.apply(Math,c(e.rtts))})},this.getStatsIntervalMs)}},{key:\"handleCandidateRtt\",value:function(e,t,n,r){this.candidates[e]||(this.candidates[e]={rttTotal:0,responsesReceived:0,requestsSent:0,rtt:NaN});var i=t-this.candidates[e].rttTotal,o=n-this.candidates[e].responsesReceived,a=r-n-(this.candidates[e].requestsSent-this.candidates[e].responsesReceived),s=NaN;o>0&&0===a&&(s=i/o),this.candidates[e].rttTotal=t,this.candidates[e].responsesReceived=n,this.candidates[e].requestsSent=r,this.candidates[e].rtt=s}},{key:\"stop\",value:function(){this.getStatsInterval&&window.clearInterval(this.getStatsInterval),this.pc.close(),this.stopped=!0}}]),e}(),m=function(){function e(t){var n=this;if(u(this,e),t&&t.enabled&&r.a.supportsLocalCandidateRttStatistics()){this.pcMonitors={},this.startPCMonitors=this.startPCMonitors.bind(this),this.sendAnalytics=this.sendAnalytics.bind(this),this.stop=this.stop.bind(this),this.analyticsInterval=null,this.stopped=!1;var i=t.initialDelay||6e4;p.info(\"Starting RTT monitor with an initial delay of \".concat(i)),window.setTimeout(function(){return n.startPCMonitors(t)},i)}}return d(e,[{key:\"startPCMonitors\",value:function(e){var t=this;if(e.stunServers){if(!this.stopped){var n=e.getStatsInterval||1e4,r=e.analyticsInterval||n,i=n/Object.keys(e.stunServers).length,o=0;for(var a in e.stunServers)if(e.stunServers.hasOwnProperty(a)){var s=e.stunServers[a];this.pcMonitors[a]=new f(a,s,n,i*o),o++}window.setTimeout(function(){t.stopped||(t.analyticsInterval=window.setInterval(t.sendAnalytics,r))},1e3)}}else p.warn(\"No stun servers configured.\")}},{key:\"sendAnalytics\",value:function(){var e={};for(var t in this.pcMonitors)if(this.pcMonitors.hasOwnProperty(t)){var n=this.pcMonitors[t].rtt;isNaN(n)||n===1/0||(e[t.replace(\"-\",\"_\")]=n)}e&&s.a.sendAnalytics(Object(i.K)(e))}},{key:\"stop\",value:function(){for(var e in p.info(\"Stopping RttMonitor.\"),this.stopped=!0,this.pcMonitors)this.pcMonitors.hasOwnProperty(e)&&this.pcMonitors[e].stop();this.pcMonitors={},this.analyticsInterval&&window.clearInterval(this.analyticsInterval)}}]),e}()}).call(this,\"modules\\\\rttmonitor\\\\rttmonitor.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return y});var r=n(8),i=n(4),o=n(26),a=n(2),s=n(9),c=n(3),u=n(5),l=n(14);function d(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,t,n){return t&&p(e.prototype,t),n&&p(e,n),e}var f=Object(i.getLogger)(e),m=function(){function e(t){d(this,e),this.name=t,this.count=0,this.sum=0,this.samples=[]}return h(e,[{key:\"addNext\",value:function(e){\"number\"!=typeof e?f.error(\"\".concat(this.name,\" - invalid value for idx: \").concat(this.count),e):isNaN(e)||(this.sum+=e,this.samples.push(e),this.count+=1)}},{key:\"calculate\",value:function(){return this.sum/this.count}},{key:\"appendReport\",value:function(e){e[\"\".concat(this.name,\"_avg\")]=this.calculate(),e[\"\".concat(this.name,\"_samples\")]=JSON.stringify(this.samples)}},{key:\"reset\",value:function(){this.samples=[],this.sum=0,this.count=0}}]),e}(),v=function(){function e(t,n,r){var i=this;d(this,e),this.isP2P=n,this._n=r,this._sampleIdx=0,this._avgRTT=new m(\"rtt\"),this._avgRemoteRTTMap=new Map,this._avgRtpStatsReporter=t,this._avgEnd2EndRTT=void 0,this._onConnectionStats=function(e,t){i.isP2P===e.isP2P&&i._calculateAvgStats(t)};var s=t._conference;s.statistics.addConnectionStatsListener(this._onConnectionStats),this.isP2P||(this._onUserLeft=function(e){return i._avgRemoteRTTMap.delete(e)},s.on(a.USER_LEFT,this._onUserLeft),this._onRemoteStatsUpdated=function(e,t){return i._processRemoteStats(e,t)},s.on(o.REMOTE_STATS_UPDATED,this._onRemoteStatsUpdated))}return h(e,[{key:\"_calculateAvgStats\",value:function(e){if(e){if(c.a.supportsRTTStatistics()&&e.transport&&e.transport.length&&this._avgRTT.addNext(e.transport[0].rtt),this._sampleIdx+=1,this._sampleIdx>=this._n){if(c.a.supportsRTTStatistics()){var t=this._avgRtpStatsReporter._conference,n={p2p:this.isP2P,conference_size:t.getParticipantCount()};if(e.transport&&e.transport.length&&Object.assign(n,{local_candidate_type:e.transport[0].localCandidateType,remote_candidate_type:e.transport[0].remoteCandidateType,transport_type:e.transport[0].type}),this._avgRTT.appendReport(n),this.isP2P){var i=this._avgRtpStatsReporter.jvbStatsMonitor._avgEnd2EndRTT;isNaN(i)||(n.rtt_diff=this._avgRTT.calculate()-i)}else{var o=this._calculateAvgRemoteRTT(),a=this._avgRTT.calculate();this._avgEnd2EndRTT=a+o,isNaN(a)||isNaN(o)||(n.end2end_rtt_avg=this._avgEnd2EndRTT)}u.a.sendAnalytics(Object(r.J)(n))}this._resetAvgStats()}}else f.error(\"No stats\")}},{key:\"_calculateAvgRemoteRTT\",value:function(){var e=0,t=0,n=!0,r=!1,i=void 0;try{for(var o,a=this._avgRemoteRTTMap.values()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value,c=s.calculate();isNaN(c)||(t+=c,e+=1,s.reset())}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}return t/e}},{key:\"_processRemoteStats\",value:function(e,t){var n=\"number\"==typeof t.jvbRTT,r=this._avgRemoteRTTMap.get(e);!r&&n&&(r=new m(\"\".concat(e,\"_stat_rtt\")),this._avgRemoteRTTMap.set(e,r)),n?r.addNext(t.jvbRTT):r&&this._avgRemoteRTTMap.delete(e)}},{key:\"_resetAvgStats\",value:function(){this._avgRTT.reset(),this._avgRemoteRTTMap&&this._avgRemoteRTTMap.clear(),this._sampleIdx=0}},{key:\"dispose\",value:function(){var e=this._avgRtpStatsReporter._conference;e.statistics.removeConnectionStatsListener(this._onConnectionStats),this.isP2P||(e.off(o.REMOTE_STATS_UPDATED,this._onRemoteStatsUpdated),e.off(a.USER_LEFT,this._onUserLeft))}}]),e}(),y=function(){function e(t,n){var r=this;d(this,e),this._n=n,n>0?(f.info(\"Avg RTP stats will be calculated every \".concat(n,\" samples\")),this._sampleIdx=0,this._conference=t,this._avgAudioBitrateUp=new m(\"bitrate_audio_upload\"),this._avgAudioBitrateDown=new m(\"bitrate_audio_download\"),this._avgVideoBitrateUp=new m(\"bitrate_video_upload\"),this._avgVideoBitrateDown=new m(\"bitrate_video_download\"),this._avgBandwidthUp=new m(\"bandwidth_upload\"),this._avgBandwidthDown=new m(\"bandwidth_download\"),this._avgPacketLossTotal=new m(\"packet_loss_total\"),this._avgPacketLossUp=new m(\"packet_loss_upload\"),this._avgPacketLossDown=new m(\"packet_loss_download\"),this._avgRemoteFPS=new m(\"framerate_remote\"),this._avgRemoteScreenFPS=new m(\"framerate_screen_remote\"),this._avgLocalFPS=new m(\"framerate_local\"),this._avgLocalScreenFPS=new m(\"framerate_screen_local\"),this._avgRemoteCameraPixels=new m(\"pixels_remote\"),this._avgRemoteScreenPixels=new m(\"pixels_screen_remote\"),this._avgLocalCameraPixels=new m(\"pixels_local\"),this._avgLocalScreenPixels=new m(\"pixels_screen_local\"),this._avgCQ=new m(\"connection_quality\"),this._onLocalStatsUpdated=function(e){return r._calculateAvgStats(e)},t.on(o.LOCAL_STATS_UPDATED,this._onLocalStatsUpdated),this._onP2PStatusChanged=function(){f.debug(\"Resetting average stats calculation\"),r._resetAvgStats(),r.jvbStatsMonitor._resetAvgStats(),r.p2pStatsMonitor._resetAvgStats()},t.on(a.P2P_STATUS,this._onP2PStatusChanged),this._onJvb121StatusChanged=function(e,t){!0===t&&(f.info(\"Resetting JVB avg RTP stats\"),r._resetAvgJvbStats())},t.on(a.JVB121_STATUS,this._onJvb121StatusChanged),this.jvbStatsMonitor=new v(this,!1,n),this.p2pStatsMonitor=new v(this,!0,n)):f.info(\"Avg RTP stats reports are disabled.\")}return h(e,[{key:\"_calculateAvgStats\",value:function(e){if(e){var t=this._conference.isP2PActive(),n=this._conference.getParticipantCount();if(t||!(n<2)){var i=e.bitrate,o=e.bandwidth,a=e.packetLoss,s=e.framerate,d=e.resolution;if(i)if(o)if(a)if(s)if(d){if(this._avgAudioBitrateUp.addNext(i.audio.upload),this._avgAudioBitrateDown.addNext(i.audio.download),this._avgVideoBitrateUp.addNext(i.video.upload),this._avgVideoBitrateDown.addNext(i.video.download),c.a.supportsBandwidthStatistics()&&(this._avgBandwidthUp.addNext(o.upload),this._avgBandwidthDown.addNext(o.download)),this._avgPacketLossUp.addNext(a.upload),this._avgPacketLossDown.addNext(a.download),this._avgPacketLossTotal.addNext(a.total),this._avgCQ.addNext(e.connectionQuality),s&&(this._avgRemoteFPS.addNext(this._calculateAvgVideoFps(s,!1,l.CAMERA)),this._avgRemoteScreenFPS.addNext(this._calculateAvgVideoFps(s,!1,l.DESKTOP)),this._avgLocalFPS.addNext(this._calculateAvgVideoFps(s,!0,l.CAMERA)),this._avgLocalScreenFPS.addNext(this._calculateAvgVideoFps(s,!0,l.DESKTOP))),d&&(this._avgRemoteCameraPixels.addNext(this._calculateAvgVideoPixels(d,!1,l.CAMERA)),this._avgRemoteScreenPixels.addNext(this._calculateAvgVideoPixels(d,!1,l.DESKTOP)),this._avgLocalCameraPixels.addNext(this._calculateAvgVideoPixels(d,!0,l.CAMERA)),this._avgLocalScreenPixels.addNext(this._calculateAvgVideoPixels(d,!0,l.DESKTOP))),this._sampleIdx+=1,this._sampleIdx>=this._n){var p={p2p:t,conference_size:n};e.transport&&e.transport.length&&Object.assign(p,{local_candidate_type:e.transport[0].localCandidateType,remote_candidate_type:e.transport[0].remoteCandidateType,transport_type:e.transport[0].type}),this._avgAudioBitrateUp.appendReport(p),this._avgAudioBitrateDown.appendReport(p),this._avgVideoBitrateUp.appendReport(p),this._avgVideoBitrateDown.appendReport(p),c.a.supportsBandwidthStatistics()&&(this._avgBandwidthUp.appendReport(p),this._avgBandwidthDown.appendReport(p)),this._avgPacketLossUp.appendReport(p),this._avgPacketLossDown.appendReport(p),this._avgPacketLossTotal.appendReport(p),this._avgRemoteFPS.appendReport(p),isNaN(this._avgRemoteScreenFPS.calculate())||this._avgRemoteScreenFPS.appendReport(p),this._avgLocalFPS.appendReport(p),isNaN(this._avgLocalScreenFPS.calculate())||this._avgLocalScreenFPS.appendReport(p),this._avgRemoteCameraPixels.appendReport(p),isNaN(this._avgRemoteScreenPixels.calculate())||this._avgRemoteScreenPixels.appendReport(p),this._avgLocalCameraPixels.appendReport(p),isNaN(this._avgLocalScreenPixels.calculate())||this._avgLocalScreenPixels.appendReport(p),this._avgCQ.appendReport(p),u.a.sendAnalytics(Object(r.J)(p)),this._resetAvgStats()}}else f.error(\"No resolution\");else f.error('No \"framerate\"');else f.error('No \"packetloss\"');else f.error('No \"bandwidth\"');else f.error('No \"bitrate\"')}}else f.error(\"No stats\")}},{key:\"_calculateAvgVideoPixels\",value:function(e,t,n){for(var r=0,i=0,o=this._conference.myUserId(),a=Object.keys(e),s=0;s<a.length;s++){var c=a[s];if(t?c===o:c!==o){var u=t?null:this._conference.getParticipantById(c),l=e[c];if((t||u)&&l){var d=this._calculatePeerAvgVideoPixels(l,u,n);isNaN(d)||(r+=d,i+=1)}}}return r/i}},{key:\"_calculatePeerAvgVideoPixels\",value:function(e,t,n){var r=Object.keys(e).map(function(e){return Number(e)}),i=null,o=this._conference.getActivePeerConnection();t?(i=t.getTracksByMediaType(s.b))&&(r=r.filter(function(e){return i.find(function(t){return!t.isMuted()&&t.getSSRC()===e&&t.videoType===n})})):(i=this._conference.getLocalTracks(s.b),r=r.filter(function(e){return i.find(function(t){return!t.isMuted()&&o.getLocalSSRC(t)===e&&t.videoType===n})}));var a=0,c=0,u=!0,l=!1,d=void 0;try{for(var p,h=r[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var f=p.value,m=Number(e[f].height)*Number(e[f].width);!isNaN(m)&&m>0&&(a+=m,c+=1)}}catch(e){l=!0,d=e}finally{try{u||null==h.return||h.return()}finally{if(l)throw d}}return a/c}},{key:\"_calculateAvgVideoFps\",value:function(e,t,n){for(var r=0,i=0,o=this._conference.myUserId(),a=Object.keys(e),s=0;s<a.length;s++){var c=a[s];if(t?c===o:c!==o){var u=t?null:this._conference.getParticipantById(c),l=e[c];if((t||u)&&l){var d=this._calculatePeerAvgVideoFps(l,u,n);isNaN(d)||(r+=d,i+=1)}}}return r/i}},{key:\"_calculatePeerAvgVideoFps\",value:function(e,t,n){var r=Object.keys(e).map(function(e){return Number(e)}),i=null,o=this._conference.getActivePeerConnection();t?(i=t.getTracksByMediaType(s.b))&&(r=r.filter(function(e){return i.find(function(t){return!t.isMuted()&&t.getSSRC()===e&&t.videoType===n})})):(i=this._conference.getLocalTracks(s.b),r=r.filter(function(e){return i.find(function(t){return!t.isMuted()&&o.getLocalSSRC(t)===e&&t.videoType===n})}));var a=0,c=0,u=!0,l=!1,d=void 0;try{for(var p,h=r[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var f=p.value,m=Number(e[f]);!isNaN(m)&&m>0&&(a+=m,c+=1)}}catch(e){l=!0,d=e}finally{try{u||null==h.return||h.return()}finally{if(l)throw d}}return a/c}},{key:\"_resetAvgJvbStats\",value:function(){this._resetAvgStats(),this.jvbStatsMonitor._resetAvgStats()}},{key:\"_resetAvgStats\",value:function(){this._avgAudioBitrateUp.reset(),this._avgAudioBitrateDown.reset(),this._avgVideoBitrateUp.reset(),this._avgVideoBitrateDown.reset(),this._avgBandwidthUp.reset(),this._avgBandwidthDown.reset(),this._avgPacketLossUp.reset(),this._avgPacketLossDown.reset(),this._avgPacketLossTotal.reset(),this._avgRemoteFPS.reset(),this._avgRemoteScreenFPS.reset(),this._avgLocalFPS.reset(),this._avgLocalScreenFPS.reset(),this._avgRemoteCameraPixels.reset(),this._avgRemoteScreenPixels.reset(),this._avgLocalCameraPixels.reset(),this._avgLocalScreenPixels.reset(),this._avgCQ.reset(),this._sampleIdx=0}},{key:\"dispose\",value:function(){this._conference.off(a.P2P_STATUS,this._onP2PStatusChanged),this._conference.off(o.LOCAL_STATS_UPDATED,this._onLocalStatsUpdated),this._conference.off(a.JVB121_STATUS,this._onJvb121StatusChanged),this.jvbStatsMonitor.dispose(),this.p2pStatsMonitor.dispose()}}]),e}()}).call(this,\"modules\\\\statistics\\\\AvgRTPStatsReporter.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return d});var r=n(4),i=n(2),o=n(26),a=n(9),s=n(8),c=n(5);function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=Object(r.getLogger)(e),d=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._conference=t,this._localAudioLevelCache={},this._reportedParticipants=[],this._audioProblemCandidates={},this._numberOfRemoteAudioLevelsReceived={},this._onLocalAudioLevelsReport=this._onLocalAudioLevelsReport.bind(this),this._onRemoteAudioLevelReceived=this._onRemoteAudioLevelReceived.bind(this),this._clearUserData=this._clearUserData.bind(this),this._conference.on(o.REMOTE_STATS_UPDATED,this._onRemoteAudioLevelReceived),this._conference.statistics.addConnectionStatsListener(this._onLocalAudioLevelsReport),this._conference.on(i.USER_LEFT,this._clearUserData)}var t,n,r;return t=e,(n=[{key:\"_onRemoteAudioLevelReceived\",value:function(e,t){var n=t.avgAudioLevels,r=this._numberOfRemoteAudioLevelsReceived[e]+1||0;if(this._numberOfRemoteAudioLevelsReceived[e]=r,!(-1!==this._reportedParticipants.indexOf(e)||e in this._audioProblemCandidates||n<=0||r<3)){var i=this._conference.getParticipantById(e);if(i)if(i.getTracksByMediaType(a.a).length>0&&i.isAudioMuted())return;var o=this._localAudioLevelCache[e];Array.isArray(o)&&!o.every(function(e){return 0===e})||(this._audioProblemCandidates[e]={remoteAudioLevels:n,localAudioLevels:[]})}}},{key:\"_onLocalAudioLevelsReport\",value:function(e,t){var n=this,r=t.avgAudioLevels;e===this._conference.getActivePeerConnection()&&(Object.keys(r).forEach(function(e){if(-1===n._reportedParticipants.indexOf(e)){var t=n._localAudioLevelCache[e];Array.isArray(t)?t.length>=2&&t.shift():n._localAudioLevelCache[e]=[],n._localAudioLevelCache[e].push(r[e])}}),Object.keys(this._audioProblemCandidates).forEach(function(e){var t=n._audioProblemCandidates[e],i=t.localAudioLevels,o=t.remoteAudioLevels;if(i.push(r[e]),2===i.length){if(i.every(function(e){return void 0===e||0===e})){var a=JSON.stringify(i);c.a.sendAnalytics(Object(s.w)(e,a,o)),l.warn(\"A potential problem is detected with the audio output for participant \".concat(e,\", local audio levels: \").concat(a,\", remote audio levels: \").concat(o)),n._reportedParticipants.push(e),n._clearUserData(e)}delete n._audioProblemCandidates[e]}}))}},{key:\"_clearUserData\",value:function(e){delete this._localAudioLevelCache[e]}},{key:\"dispose\",value:function(){this._conference.off(o.REMOTE_STATS_UPDATED,this._onRemoteAudioLevelReceived),this._conference.off(i.USER_LEFT,this._clearUserData),this._conference.statistics.removeConnectionStatsListener(this._onLocalAudioLevelsReport),this._localAudioLevelCache=void 0,this._audioProblemCandidates=void 0,this._reportedParticipants=void 0,this._numberOfRemoteAudioLevelsReceived=void 0,this._conference=void 0}}])&&u(t.prototype,n),r&&u(t,r),e}()}).call(this,\"modules\\\\statistics\\\\AudioOutputProblemDetector.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return u});var r=n(2),i=n(55),o=n.n(i),a=n(0),s=n.n(a);function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.stats={users:{},dominantSpeakerId:null};var n=t.myUserId();this.stats.users[n]=new o.a(n,null,!0),t.addEventListener(r.DOMINANT_SPEAKER_CHANGED,this._onDominantSpeaker.bind(this)),t.addEventListener(r.USER_JOINED,this._onUserJoin.bind(this)),t.addEventListener(r.USER_LEFT,this._onUserLeave.bind(this)),t.addEventListener(r.DISPLAY_NAME_CHANGED,this._onDisplayNameChange.bind(this)),t.xmpp&&t.xmpp.addListener(s.a.SPEAKER_STATS_RECEIVED,this._updateStats.bind(this))}var t,n,i;return t=e,(n=[{key:\"_onDominantSpeaker\",value:function(e){var t=this.stats.users[this.stats.dominantSpeakerId],n=this.stats.users[e];t&&t.setDominantSpeaker(!1),n&&n.setDominantSpeaker(!0),this.stats.dominantSpeakerId=e}},{key:\"_onUserJoin\",value:function(e,t){var n=this.stats.users[e];n||(n=this.stats.users[e]=new o.a(e,t.getDisplayName()))}},{key:\"_onUserLeave\",value:function(e){var t=this.stats.users[e];t&&t.markAsHasLeft()}},{key:\"_onDisplayNameChange\",value:function(e,t){var n=this.stats.users[e];n&&n.setDisplayName(t)}},{key:\"getStats\",value:function(){return this.stats.users}},{key:\"_updateStats\",value:function(e){for(var t in e){var n=void 0;this.stats.users[t]?(n=this.stats.users[t]).getDisplayName()||n.setDisplayName(e[t].displayName):(n=new o.a(t,e[t].displayName),this.stats.users[t]=n,n.markAsHasLeft()),n.totalDominantSpeakerTime=e[t].totalDominantSpeakerTime}}}])&&c(t.prototype,n),i&&c(t,i),e}()},function(e,t,n){var r=n(64),i=n(149),o=\"before\";function a(){this.audioRecorder=new r,this.transcriptionService=new i,this.counter=null,this.startTime=null,this.transcription=null,this.callback=null,this.results=[],this.state=o,this.lineLength=0}function s(e){for(var t=0;t<e.length;t++)0===e[t].length&&e.splice(t,1);return e.length>0}a.prototype.start=function(){if(this.state!==o)throw new Error(\"The transcription can only start when it's in the \\\"\".concat(o,'\" state. It\\'s currently in the \"').concat(this.state,'\" state'));this.state=\"recording\",this.audioRecorder.start(),this.startTime=new Date},a.prototype.stop=function(e){var t=this;if(\"recording\"!==this.state)throw new Error(\"The transcription can only stop when it's in the \\\"\".concat(\"recording\",'\" state. It\\'s currently in the \"').concat(this.state,'\" state'));console.log(\"stopping recording and sending audio files\"),this.audioRecorder.stop();var n=function(e,t){if(console.log(\"retrieved an answer from the transcription service. The answer has an\"+\" array of length: \".concat(t.wordArray.length)),t.wordArray.length>0){var n=t.startTime.getUTCMilliseconds()-e.startTime.getUTCMilliseconds();n<0&&(n=0);var r=\"[\";t.wordArray.forEach(function(e){e.begin+=n,e.end+=n,r+=\"\".concat(e.word,\",\")}),r+=\"]\",console.log(r),t.wordArray.name=t.name}e.results.push(t.wordArray),e.counter--,console.log(\"current counter: \".concat(e.counter)),e.maybeMerge()}.bind(null,this);this.audioRecorder.getRecordingResults().forEach(function(e){t.transcriptionService.send(e,n),t.counter++}),this.state=\"transcribing\",this.callback=e},a.prototype.maybeMerge=function(){\"transcribing\"===this.state&&0===this.counter&&this.merge()},a.prototype.merge=function(){var e=this;console.log(\"starting merge process!\\n The length of the array: \".concat(this.results.length)),this.transcription=\"\";var t=this.results,n=[];s(t),t.forEach(function(e){return function(e,t){if(0===e.length)e.push(t);else{if(e[e.length-1].begin<=t.begin)return void e.push(t);for(var n=0;n<e.length;n++)if(t.begin<e[n].begin)return void e.splice(n,0,t);e.push(t)}}(n,e)});for(var r=function(){var n=t[0];t.forEach(function(e){e[0].begin<n[0].begin&&(n=e)});var r=n.shift();e.updateTranscription(r,n.name);for(var i=function(){var i=!1,o=n[0].begin;if(t.forEach(function(e){e[0].begin<o&&(i=!0)}),i)return\"break\";r=n.shift(),e.updateTranscription(r,null)};n.length>0;){if(\"break\"===i())break}};s(t);)r();this.state=\"finished\",this.callback&&this.callback(this.transcription)},a.prototype.updateTranscription=function(e,t){null!=t&&(this.transcription+=\"\\n\".concat(t,\":\"),this.lineLength=t.length+1),this.lineLength+e.word.length>80&&(this.transcription+=\"\\n    \",this.lineLength=4),this.transcription+=\" \".concat(e.word),this.lineLength+=e.word.length+1},a.prototype.addTrack=function(e){this.audioRecorder.addTrack(e)},a.prototype.removeTrack=function(e){this.audioRecorder.removeTrack(e)},a.prototype.getTranscription=function(){if(\"finished\"!==this.state)throw new Error(\"The transcription can only be retrieved when it's in the \\\"\".concat(\"finished\",'\" state. It\\'s currently in the \"').concat(this.state,'\" state'));return this.transcription},a.prototype.getState=function(){return this.state},a.prototype.reset=function(){this.state=o,this.counter=null,this.transcription=null,this.startTime=null,this.callback=null,this.results=[],this.lineLength=0},e.exports=a},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return o});var r=n(5),i=n(4).getLogger(e);function o(e){this.versions={},this.conference=e,this.conference.addCommandListener(\"versions\",this.processVersions.bind(this))}o.prototype.processVersions=function(e,t,n){var o=this;if(this.conference._isFocus(n)){var a=[];e.children.forEach(function(e){var t=e.attributes.name,n=e.value;o.versions[t]!==n&&(o.versions[t]=n,i.info(\"Got \".concat(t,\" version: \").concat(n)),a.push({id:\"component_version\",component:t,version:n}))}),a.length>0&&r.a.sendLog(JSON.stringify(a))}else i.warn(\"Received versions not from the focus user: \".concat(e),n)},o.prototype.getComponentVersion=function(e){return this.versions[e]}}).call(this,\"modules\\\\version\\\\ComponentsVersions.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return l});var r=n(4),i=n(115),o=n(20),a=n(0),s=n.n(a);function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=Object(r.getLogger)(e),l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.chatRoom=t,this.eventEmitter=t.eventEmitter,u.debug(\"creating VideoSIPGW\"),this.sessions={},this.sessionStateChangeListener=this.sessionStateChanged.bind(this),t.addPresenceListener(\"jibri-sip-call-state\",this.handleJibriSIPState.bind(this))}var t,n,r;return t=e,(n=[{key:\"handleJibriSIPState\",value:function(e){var t=e.attributes;if(t){u.debug(\"Handle video sip gw state : \",t);var n=t.state;if(n!==this.state)switch(n){case o.STATE_ON:case o.STATE_OFF:case o.STATE_PENDING:case o.STATE_RETRYING:case o.STATE_FAILED:var r=t.sipaddress;if(!r)return;var i=this.sessions[r];i?i.setState(n,t.failure_reason):u.warn(\"Video SIP GW session not found:\",r)}}}},{key:\"createVideoSIPGWSession\",value:function(e,t){if(this.sessions[e])return u.warn(\"There was already a Video SIP GW session for address\",e),new Error(o.ERROR_SESSION_EXISTS);var n=new i.a(e,t,this.chatRoom);return n.addStateListener(this.sessionStateChangeListener),this.sessions[e]=n,n}},{key:\"sessionStateChanged\",value:function(e){var t=e.address;if(e.newState===o.STATE_OFF||e.newState===o.STATE_FAILED){var n=this.sessions[t];if(!n)return void u.error(\"Missing Video SIP GW session with address:\",t);n.removeStateListener(this.sessionStateChangeListener),delete this.sessions[t]}this.eventEmitter.emit(s.a.VIDEO_SIP_GW_SESSION_STATE_CHANGED,e)}}])&&c(t.prototype,n),r&&c(t,r),e}()}).call(this,\"modules\\\\videosipgw\\\\VideoSIPGW.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return h});var r=n(4),i=n(1),o=n(24),a=n(20);function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t){return!t||\"object\"!==s(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var p=Object(r.getLogger)(e),h=function(e){function t(e,n,r){var i;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(i=u(this,l(t).call(this))).sipAddress=e,i.displayName=n,i.chatRoom=r,i.state=void 0,i}var n,r,s;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,o[\"a\"]),n=t,(r=[{key:\"stop\",value:function(){this.state!==a.STATE_OFF&&this.state!==a.STATE_FAILED?this._sendJibriIQ(\"stop\"):p.warn(\"Video SIP GW session already stopped or failed!\")}},{key:\"start\",value:function(){this.state!==a.STATE_ON&&this.state!==a.STATE_OFF&&this.state!==a.STATE_PENDING&&this.state!==a.STATE_RETRYING?this._sendJibriIQ(\"start\"):p.warn(\"Video SIP GW session already started!\")}},{key:\"setState\",value:function(e,t){if(e!==this.state){var n=this.state;this.state=e,this.eventEmitter.emit(\"STATE_CHANGED\",{address:this.sipAddress,failureReason:t,oldState:n,newState:this.state,displayName:this.displayName})}}},{key:\"addStateListener\",value:function(e){this.addListener(\"STATE_CHANGED\",e)}},{key:\"removeStateListener\",value:function(e){this.removeListener(\"STATE_CHANGED\",e)}},{key:\"_sendJibriIQ\",value:function(e){var t=this,n={xmlns:\"http://jitsi.org/protocol/jibri\",action:e,sipaddress:this.sipAddress};n.displayname=this.displayName;var r=Object(i.$iq)({to:this.chatRoom.focusMucJid,type:\"set\"}).c(\"jibri\",n).up();p.debug(\"\".concat(e,\" video SIP GW session\"),r.nodeTree),this.chatRoom.connection.sendIQ(r,function(){},function(n){p.error(\"Failed to \".concat(e,\" video SIP GW session, error: \"),n),t.setState(a.STATE_FAILED)})}}])&&c(n.prototype,r),s&&c(n,s),t}()}).call(this,\"modules\\\\videosipgw\\\\JitsiVideoSIPGWSession.js\")},function(e,t,n){\"use strict\";t.a={error:{BUSY:\"busy\",ERROR:\"error\",RESOURCE_CONSTRAINT:\"resource-constraint\",SERVICE_UNAVAILABLE:\"service-unavailable\"},mode:{FILE:\"file\",STREAM:\"stream\"},status:{OFF:\"off\",ON:\"on\",PENDING:\"pending\"}}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return v});var r=n(4),i=n(1),o=n(9),a=n(14),s=n.n(a),c=n(13),u=n(118),l=n(28);function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){p(e,t,n[t])})}return e}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function h(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=Object(r.getLogger)(e),v=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e);var n=t.jitsiConnection,r=h(t,[\"jitsiConnection\"]);this._options=d({iceConfig:n&&n.xmpp.connection.jingle.p2pIceConfig},r),this._peerConnection=null,this._onFatalError=this._onFatalError.bind(this),this._onSendMessage=this._onSendMessage.bind(this),this._onRemoteStream=this._onRemoteStream.bind(this)}var t,n,r;return t=e,(n=[{key:\"processMessage\",value:function(e){var t=e.from;if(t)if(this._peerConnection&&this._peerConnection.getPeerJid()!==t)this._onFatalError(t,l.a.CONNECTION_ERROR,\"rejected\");else{var n=this._convertStringToXML(e.data.iq),r=n&&n.find(\"jingle\"),i=r&&r.attr(\"action\");i===l.a.INITIATE&&(this._peerConnection=this._createPeerConnection(t,{isInitiator:!1,receiveVideo:!0})),this._peerConnection&&this._peerConnection.processMessage(r),i!==l.a.CONNECTION_ERROR&&i!==l.a.UNAVAILABLE&&i!==l.a.TERMINATE||this._selfCloseConnection()}}},{key:\"start\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];this._peerConnection=this._createPeerConnection(e,{isInitiator:!0,receiveVideo:!1}),this._peerConnection.start(t)}},{key:\"stop\",value:function(){this._peerConnection&&this._peerConnection.stop(),this._peerConnection=null}},{key:\"_convertStringToXML\",value:function(e){try{var t=(new DOMParser).parseFromString(e,\"text/xml\");return $(t)}catch(e){return m.error(\"Attempted to convert incorrectly formatted xml\"),null}}},{key:\"_createPeerConnection\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e)throw new Error(\"Cannot create ProxyConnectionPC without a peer.\");var n=d({iceConfig:this._options.iceConfig,onError:this._onFatalError,onRemoteStream:this._onRemoteStream,onSendMessage:this._onSendMessage,peerJid:e},t);return new u.a(n)}},{key:\"_onFatalError\",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"\";m.error(\"Received a proxy connection error\",e,t,n);var r=Object(i.$iq)({to:e,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:t}).c(\"details\").t(n).up();this._onSendMessage(e,r),this._peerConnection&&this._peerConnection.getPeerJid()===e&&this._selfCloseConnection()}},{key:\"_onRemoteStream\",value:function(e){if(!this._options.onRemoteStream)return m.error(\"Remote track received without callback.\"),void e.dispose();var t,n=e.isVideoTrack();n&&(t=this._options.convertVideoToDesktop?s.a.DESKTOP:s.a.CAMERA);var r=e.getOriginalStream(),i=c.a.newCreateLocalTracks([{deviceId:\"proxy:\".concat(this._peerConnection.getPeerJid()),mediaType:n?o.b:o.a,sourceType:\"proxy\",stream:r,track:r.getVideoTracks()[0],videoType:t}]);this._options.onRemoteStream(i[0])}},{key:\"_onSendMessage\",value:function(e,t){if(this._options.onSendMessage)try{var n=(new XMLSerializer).serializeToString(t.nodeTree||t);this._options.onSendMessage(e,{iq:n})}catch(e){m.error(\"Attempted to send an incorrectly formatted iq.\")}}},{key:\"_selfCloseConnection\",value:function(){this.stop(),this._options.onConnectionClosed&&this._options.onConnectionClosed()}}])&&f(t.prototype,n),r&&f(t,r),e}()}).call(this,\"modules\\\\proxyconnection\\\\ProxyConnectionService.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return v});var r=n(4),i=n(13),o=n(7),a=n.n(o),s=n(0),c=n.n(s),u=n(44),l=n(35),d=n(28);function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){h(e,t,n[t])})}return e}function h(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=Object(r.getLogger)(e),v=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._options=p({iceConfig:{},isInitiator:!1,receiveAudio:!1,receiveVideo:!1},t),this._tracks=[],this._peerConnection=null,this._onError=this._onError.bind(this),this._onRemoteStream=this._onRemoteStream.bind(this),this._onSendMessage=this._onSendMessage.bind(this)}var t,n,r;return t=e,(n=[{key:\"getPeerJid\",value:function(){return this._options.peerJid}},{key:\"processMessage\",value:function(e){switch(e.attr(\"action\")){case d.a.ACCEPT:this._onSessionAccept(e);break;case d.a.INITIATE:this._onSessionInitiate(e);break;case d.a.TERMINATE:this._onSessionTerminate(e);break;case d.a.TRANSPORT_INFO:this._onTransportInfo(e)}}},{key:\"start\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this._peerConnection||(this._tracks=this._tracks.concat(e),this._peerConnection=this._createPeerConnection(),this._peerConnection.invite(e))}},{key:\"stop\",value:function(){this._peerConnection&&this._peerConnection.terminate(),this._onSessionTerminate()}},{key:\"_createPeerConnection\",value:function(){var e=this,t={jingle:{terminate:function(){}},sendIQ:this._onSendMessage},n=p({iceServers:l.a},this._options.iceConfig),r={addPresenceListener:function(){},connectionTimes:[],eventEmitter:{emit:function(t){switch(t){case c.a.CONNECTION_ICE_FAILED:case c.a.CONNECTION_FAILED:e._onError(d.a.CONNECTION_ERROR,t)}}},getMediaPresenceInfo:function(){return{}},removePresenceListener:function(){}};this._rtc=new i.a(this,{}),this._rtc.addListener(a.a.REMOTE_TRACK_ADDED,this._onRemoteStream);var o=new u.a(void 0,void 0,this._options.peerJid,t,{offerToReceiveAudio:this._options.receiveAudio,offerToReceiveVideo:this._options.receiveVideo},n,!0,this._options.isInitiator);return o.initialize(r,this._rtc,{}),o}},{key:\"_onError\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\";this._options.onError(this._options.peerJid,e,t)}},{key:\"_onRemoteStream\",value:function(e){this._tracks.push(e),this._options.onRemoteStream(e)}},{key:\"_onSendMessage\",value:function(e){this._options.onSendMessage(this._options.peerJid,e)}},{key:\"_onSessionAccept\",value:function(e){this._peerConnection?this._peerConnection.setAnswer(e):m.error(\"Received an answer when no peer connection exists.\")}},{key:\"_onSessionInitiate\",value:function(e){var t=this;this._peerConnection?m.error(\"Received an offer when an offer was already sent.\"):(this._peerConnection=this._createPeerConnection(),this._peerConnection.acceptOffer(e,function(){},function(){return t._onError(t._options.peerJid,d.a.CONNECTION_ERROR,\"session initiate error\")}))}},{key:\"_onSessionTerminate\",value:function(){this._tracks.forEach(function(e){return e.dispose()}),this._tracks=[],this._peerConnection&&this._peerConnection.onTerminated(),this._rtc&&(this._rtc.removeListener(a.a.REMOTE_TRACK_ADDED,this._onRemoteStream),this._rtc.destroy())}},{key:\"_onTransportInfo\",value:function(e){this._peerConnection.addIceCandidates(e)}}])&&f(t.prototype,n),r&&f(t,r),e}()}).call(this,\"modules\\\\proxyconnection\\\\ProxyConnectionPC.js\")},function(e,t,n){e.exports=n(120).default},function(e,t,n){\"use strict\";n.r(t),function(e){var r=n(8),i=n(65),o=n.n(i),a=n(26),s=n(49),c=n(11),u=n.n(c),l=n(17),d=n(2),p=n(66),h=n(36),f=n(21),m=n(60),v=n(45),y=n(15),g=n(12),_=n(16),S=n(52),b=n(50),E=n(4),T=n.n(E),C=n(9),R=n(30),A=n.n(R),w=n(41),k=n(13),O=n(3),I=n(51),P=n.n(I),D=n(116),N=n(117),L=n(5),M=n(20);function x(e){return(x=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var j,F=T.a.getLogger(e);function U(e){var t={audio_requested:e.devices.includes(\"audio\"),video_requested:e.devices.includes(\"video\"),screen_sharing_requested:e.devices.includes(\"desktop\")};return t.video_requested&&(t.resolution=e.resolution),t}t.default=(j={version:\"{#COMMIT_HASH#}\",JitsiConnection:p.a,ProxyConnectionService:N.a,constants:{participantConnectionStatus:w.a,recording:D.a,sipVideoGW:M,transcriptionStatus:S},events:{conference:d,connection:f,track:_,mediaDevices:v,connectionQuality:a,e2eping:s},errors:{conference:l,connection:h,track:g},errorTypes:{JitsiTrackError:y.a},logLevels:T.a.levels,mediaDevices:m.a,analytics:L.a.analytics,init:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};L.a.init(e),window.connectionTimes||(window.connectionTimes={}),!0!==e.enableAnalyticsLogging&&(F.warn(\"Analytics disabled, disposing.\"),this.analytics.dispose()),e.enableWindowOnErrorHandler&&u.a.addHandler(this.getGlobalOnErrorHandler.bind(this));var t=e.deploymentInfo;if(t&&Object.keys(t).length>0){var n={};for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r]);n.id=\"deployment_info\",L.a.sendLog(JSON.stringify(n))}if(this.version){var i={id:\"component_version\",component:\"lib-jitsi-meet\",version:this.version};L.a.sendLog(JSON.stringify(i))}return k.a.init(e)},isDesktopSharingEnabled:function(){return k.a.isDesktopSharingEnabled()},isWebRtcSupported:function(){return k.a.isWebRtcSupported()},setLogLevel:function(e){T.a.setLogLevel(e)},setLogLevelById:function(e,t){T.a.setLogLevelById(e,t)},addGlobalLogTransport:function(e){T.a.addGlobalTransport(e)},removeGlobalLogTransport:function(e){T.a.removeGlobalTransport(e)},setGlobalLogOptions:function(e){T.a.setGlobalOptions(e)},createLocalTracks:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0,o=!1;return!0===n&&window.setTimeout(function(){o||m.a.emitEvent(v.PERMISSION_PROMPT_IS_SHOWN,O.a.getName())},1e3),window.connectionTimes||(window.connectionTimes={}),window.connectionTimes[\"obtainPermissions.start\"]=window.performance.now(),k.a.obtainAudioAndVideoPermissions(t).then(function(e){if(o=!0,window.connectionTimes[\"obtainPermissions.end\"]=window.performance.now(),L.a.sendAnalytics(Object(r.D)(\"success\",U(t))),!k.a.options.disableAudioLevels)for(var n=function(t){var n=e[t],r=n.getOriginalStream();n.getType()===C.a&&(L.a.startLocalStats(r,n.setAudioLevel.bind(n)),n.addEventListener(_.LOCAL_TRACK_STOPPED,function(){L.a.stopLocalStats(r)}))},i=0;i<e.length;i++)n(i);var a=k.a.getCurrentlyAvailableMediaDevices();if(a)for(i=0;i<e.length;i++){e[i]._setRealDeviceIdFromDeviceList(a)}return e}).catch(function(n){if(o=!0,n.name===g.UNSUPPORTED_RESOLUTION&&!O.a.usesNewGumFlow()){var a=t.resolution||\"720\",s=function(e){if(!A.a[e])return null;var t=A.a[e].order,n=null,r=null;return Object.keys(A.a).forEach(function(e){var i=A.a[e];(!n||n.order<i.order&&i.order<t)&&(r=e,n=i)}),r===e&&(r=null),r}(a);if(null!==s)return t.resolution=s,F.debug(\"Retry createLocalTracks with resolution\",s),L.a.sendAnalytics(Object(r.D)(\"warning\",{old_resolution:a,new_resolution:s,reason:\"unsupported resolution\"})),e.createLocalTracks(t,void 0,i||Object.assign({},t));if(i&&n.gum.constraints&&n.gum.constraints.video&&n.gum.constraints.video.mandatory&&n.gum.constraints.video.mandatory.sourceId)return i.cameraDeviceId=void 0,e.createLocalTracks(i)}if(n.name===g.CHROME_EXTENSION_USER_CANCELED){var c={id:\"chrome_extension_user_canceled\",message:n.message};L.a.sendLog(JSON.stringify(c)),L.a.sendAnalytics(Object(r.D)(\"warning\",{reason:\"extension install user canceled\"}))}else if(n.name===g.NOT_FOUND){var u={id:\"usermedia_missing_device\",status:n.gum.devices};L.a.sendLog(JSON.stringify(u));var l=U(t);l.reason=\"device not found\",l.devices=n.gum.devices.join(\".\"),L.a.sendAnalytics(Object(r.D)(\"error\",l))}else{L.a.sendGetUserMediaFailed(n);var d=U(t);d.reason=n.name,L.a.sendAnalytics(Object(r.D)(\"error\",d))}return window.connectionTimes[\"obtainPermissions.end\"]=window.performance.now(),Promise.reject(n)})},isDeviceListAvailable:function(){return F.warn(\"This method is deprecated, use JitsiMeetJS.mediaDevices.isDeviceListAvailable instead\"),this.mediaDevices.isDeviceListAvailable()},isDeviceChangeAvailable:function(e){return F.warn(\"This method is deprecated, use JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead\"),this.mediaDevices.isDeviceChangeAvailable(e)},isMultipleAudioInputSupported:function(){return this.mediaDevices.isMultipleAudioInputSupported()},isCollectingLocalStats:function(){return L.a.audioLevelsEnabled&&b.a.isLocalStatsSupported()},enumerateDevices:function(e){F.warn(\"This method is deprecated, use JitsiMeetJS.mediaDevices.enumerateDevices instead\"),this.mediaDevices.enumerateDevices(e)},getGlobalOnErrorHandler:function(e,t,n,r,i){F.error(\"UnhandledError: \".concat(e),\"Script: \".concat(t),\"Line: \".concat(n),\"Column: \".concat(r),\"StackTrace: \",i),L.a.reportGlobalError(i)},util:{AuthUtil:o.a,ScriptUtil:P.a,browser:O.a}},\"object\"===x(window.JitsiMeetJS)?Object.assign({},window.JitsiMeetJS,j):j)}.call(this,\"JitsiMeetJS.js\")},function(e,t,n){function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(61);function o(e,t){this.logStorage=e,this.stringifyObjects=!(!t||!t.stringifyObjects)&&t.stringifyObjects,this.storeInterval=t&&t.storeInterval?t.storeInterval:3e4,this.maxEntryLength=t&&t.maxEntryLength?t.maxEntryLength:1e4,Object.keys(i.levels).forEach(function(e){this[i.levels[e]]=function(e){this._log.apply(this,arguments)}.bind(this,e)}.bind(this)),this.storeLogsIntervalID=null,this.queue=[],this.totalLen=0,this.outputCache=[]}o.prototype.stringify=function(e){try{return JSON.stringify(e)}catch(e){return\"[object with circular refs?]\"}},o.prototype.formatLogMessage=function(e){for(var t=\"\",n=1,o=arguments.length;n<o;n++){var a=arguments[n];!this.stringifyObjects&&e!==i.levels.ERROR||\"object\"!==r(a)||(a=this.stringify(a)),t+=a,n!=o-1&&(t+=\" \")}return t.length?t:null},o.prototype._log=function(){var e=this.formatLogMessage.apply(this,arguments);if(e){var t=this.queue.length?this.queue[this.queue.length-1]:void 0;(\"object\"===r(t)?t.text:t)==e?\"object\"===r(t)?t.count+=1:this.queue[this.queue.length-1]={text:e,count:2}:(this.queue.push(e),this.totalLen+=e.length)}this.totalLen>=this.maxEntryLength&&this._flush(!0,!0)},o.prototype.start=function(){this._reschedulePublishInterval()},o.prototype._reschedulePublishInterval=function(){this.storeLogsIntervalID&&(window.clearTimeout(this.storeLogsIntervalID),this.storeLogsIntervalID=null),this.storeLogsIntervalID=window.setTimeout(this._flush.bind(this,!1,!0),this.storeInterval)},o.prototype.flush=function(){this._flush(!1,!0)},o.prototype._flush=function(e,t){this.totalLen>0&&(this.logStorage.isReady()||e)&&(this.logStorage.isReady()?(this.outputCache.length&&(this.outputCache.forEach(function(e){this.logStorage.storeLogs(e)}.bind(this)),this.outputCache=[]),this.logStorage.storeLogs(this.queue)):this.outputCache.push(this.queue),this.queue=[],this.totalLen=0),t&&this._reschedulePublishInterval()},o.prototype.stop=function(){this._flush(!1,!1)},e.exports=o},function(e,t){e.exports=function(){throw new Error(\"define cannot be used indirect\")}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,n){var r,i,o;this||window,i=[],void 0===(o=\"function\"==typeof(r=function(){var e=/^(interactive|loaded|complete)$/,t=window.location?window.location.href:null,n=t&&t.replace(/#.*$/,\"\").replace(/\\?.*$/,\"\")||null,r=document.getElementsByTagName(\"script\"),i=\"readyState\"in(r[0]||document.createElement(\"script\")),o=!window.opera||\"[object Opera]\"!==window.opera.toString(),a=\"currentScript\"in document;\"stackTraceLimit\"in Error&&Error.stackTraceLimit!==1/0&&(Error.stackTraceLimit,Error.stackTraceLimit=1/0);var s=!1,c=!1;function u(){if(0===r.length)return null;var t,l,d,p,h,f=[],m=u.skipStackDepth||1;for(t=0;t<r.length;t++)o&&i?e.test(r[t].readyState)&&f.push(r[t]):f.push(r[t]);if(l=new Error,s&&(d=l.stack),!d&&c)try{throw l}catch(e){d=e.stack}if(d&&(p=function e(t,n){var r,i,o=null,a=\"number\"==typeof n;return n=a?Math.round(n):0,\"string\"==typeof t&&t&&(a?r=t.match(/(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/):(r=t.match(/^(?:|[^:@]*@|.+\\)@(?=data:text\\/javascript|blob|http[s]?|file)|.+?\\s+(?: at |@)(?:[^:\\(]+ )*[\\(]?)(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/))&&r[1]||(r=t.match(/\\)@(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/)),r&&r[1]&&(n>0?(i=t.slice(t.indexOf(r[0])+r[0].length),o=e(i,n-1)):o=r[1])),o}(d,m),!(h=function(e,t){var n,i=null;if(t=t||r,\"string\"==typeof e&&e)for(n=t.length;n--;)if(t[n].src===e){i=t[n];break}return i}(p,f))&&n&&p===n&&(h=function(e){var t,n,i=null;for(t=0,n=(e=e||r).length;t<n;t++)if(!e[t].hasAttribute(\"src\")){if(i){i=null;break}i=e[t]}return i}(f))),h||1===f.length&&(h=f[0]),h||a&&(h=document.currentScript),!h&&o&&i)for(t=f.length;t--;)if(\"interactive\"===f[t].readyState){h=f[t];break}return h||(h=f[f.length-1]||null),h}(function(){try{var e=new Error;throw s=\"string\"==typeof e.stack&&!!e.stack,e}catch(e){c=\"string\"==typeof e.stack&&!!e.stack}})(),u.skipStackDepth=1;var l=u;return l.near=u,l.far=function(){return null},l.origin=function(){return null},l})?r.apply(t,i):r)||(e.exports=o)},function(e,t){e.exports={LOCAL_JID:\"local\"}},function(e,t,n){var r,i,o,a;function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}a=function(e){\"use strict\";e.Strophe.addConnectionPlugin(\"disco\",{_connection:null,_identities:[],_features:[],_items:[],init:function(t){this._connection=t,this._identities=[],this._features=[],this._items=[],t.addHandler(this._onDiscoInfo.bind(this),e.Strophe.NS.DISCO_INFO,\"iq\",\"get\",null,null),t.addHandler(this._onDiscoItems.bind(this),e.Strophe.NS.DISCO_ITEMS,\"iq\",\"get\",null,null)},addIdentity:function(e,t,n,r){for(var i=0;i<this._identities.length;i++)if(this._identities[i].category==e&&this._identities[i].type==t&&this._identities[i].name==n&&this._identities[i].lang==r)return!1;return this._identities.push({category:e,type:t,name:n,lang:r}),!0},addFeature:function(e){for(var t=0;t<this._features.length;t++)if(this._features[t]==e)return!1;return this._features.push(e),!0},removeFeature:function(e){for(var t=0;t<this._features.length;t++)if(this._features[t]===e)return this._features.splice(t,1),!0;return!1},addItem:function(e,t,n,r){return!(n&&!r)&&(this._items.push({jid:e,name:t,node:n,call_back:r}),!0)},info:function(t,n,r,i,o){var a={xmlns:e.Strophe.NS.DISCO_INFO};n&&(a.node=n);var s=e.$iq({from:this._connection.jid,to:t,type:\"get\"}).c(\"query\",a);this._connection.sendIQ(s,r,i,o)},items:function(t,n,r,i,o){var a={xmlns:e.Strophe.NS.DISCO_ITEMS};n&&(a.node=n);var s=e.$iq({from:this._connection.jid,to:t,type:\"get\"}).c(\"query\",a);this._connection.sendIQ(s,r,i,o)},_buildIQResult:function(t,n){var r=t.getAttribute(\"id\"),i=t.getAttribute(\"from\"),o=e.$iq({type:\"result\",id:r});return null!==i&&o.attrs({to:i}),o.c(\"query\",n)},_onDiscoInfo:function(t){var n,r=t.getElementsByTagName(\"query\")[0].getAttribute(\"node\"),i={xmlns:e.Strophe.NS.DISCO_INFO};r&&(i.node=r);var o=this._buildIQResult(t,i);for(n=0;n<this._identities.length;n++)i={category:this._identities[n].category,type:this._identities[n].type},this._identities[n].name&&(i.name=this._identities[n].name),this._identities[n].lang&&(i[\"xml:lang\"]=this._identities[n].lang),o.c(\"identity\",i).up();for(n=0;n<this._features.length;n++)o.c(\"feature\",{var:this._features[n]}).up();return this._connection.send(o.tree()),!0},_onDiscoItems:function(t){var n,r,i={xmlns:e.Strophe.NS.DISCO_ITEMS},o=t.getElementsByTagName(\"query\")[0].getAttribute(\"node\");if(o){for(i.node=o,n=[],r=0;r<this._items.length;r++)if(this._items[r].node==o){n=this._items[r].call_back(t);break}}else n=this._items;var a=this._buildIQResult(t,i);for(r=0;r<n.length;r++){var s={jid:n[r].jid};n[r].name&&(s.name=n[r].name),n[r].node&&(s.node=n[r].node),a.c(\"item\",s).up()}return this._connection.send(a.tree()),!0}})},\"object\"===s(t)&&void 0!==e?a(n(1)):(i=[n(1)],void 0===(o=\"function\"==typeof(r=a)?r.apply(t,i):r)||(e.exports=o))},function(e,t,n){(function(e){var r=void 0!==e&&e||\"undefined\"!=typeof self&&self||window,i=Function.prototype.apply;function o(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new o(i.call(setTimeout,r,arguments),clearTimeout)},t.setInterval=function(){return new o(i.call(setInterval,r,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(r,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},n(128),t.setImmediate=\"undefined\"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate=\"undefined\"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(43))},function(e,t,n){(function(e,t){!function(e,n){\"use strict\";if(!e.setImmediate){var r,i,o,a,s,c=1,u={},l=!1,d=e.document,p=Object.getPrototypeOf&&Object.getPrototypeOf(e);p=p&&p.setTimeout?p:e,\"[object process]\"==={}.toString.call(e.process)?r=function(e){t.nextTick(function(){f(e)})}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage(\"\",\"*\"),e.onmessage=n,t}}()?e.MessageChannel?((o=new MessageChannel).port1.onmessage=function(e){f(e.data)},r=function(e){o.port2.postMessage(e)}):d&&\"onreadystatechange\"in d.createElement(\"script\")?(i=d.documentElement,r=function(e){var t=d.createElement(\"script\");t.onreadystatechange=function(){f(e),t.onreadystatechange=null,i.removeChild(t),t=null},i.appendChild(t)}):r=function(e){setTimeout(f,0,e)}:(a=\"setImmediate$\"+Math.random()+\"$\",s=function(t){t.source===e&&\"string\"==typeof t.data&&0===t.data.indexOf(a)&&f(+t.data.slice(a.length))},e.addEventListener?e.addEventListener(\"message\",s,!1):e.attachEvent(\"onmessage\",s),r=function(t){e.postMessage(a+t,\"*\")}),p.setImmediate=function(e){\"function\"!=typeof e&&(e=new Function(\"\"+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var i={callback:e,args:t};return u[c]=i,r(c),c++},p.clearImmediate=h}function h(e){delete u[e]}function f(e){if(l)setTimeout(f,0,e);else{var t=u[e];if(t){l=!0;try{!function(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}(t)}finally{h(e),l=!1}}}}}(\"undefined\"==typeof self?void 0===e?this:e:self)}).call(this,n(43),n(48))},function(e,t,n){\"use strict\";(function(t){var r=n(130);e.exports=r({window:t.window})}).call(this,n(43))},function(e,t,n){\"use strict\";var r=n(38);e.exports=function(e,t){var i=e&&e.window,o={shimChrome:!0,shimFirefox:!0,shimEdge:!0,shimSafari:!0};for(var a in t)hasOwnProperty.call(t,a)&&(o[a]=t[a]);var s=r.log,c=r.detectBrowser(i),u={browserDetails:c,extractVersion:r.extractVersion,disableLog:r.disableLog,disableWarnings:r.disableWarnings},l=n(131)||null,d=n(133)||null,p=n(136)||null,h=n(138)||null,f=n(139)||null;switch(c.browser){case\"chrome\":if(!l||!l.shimPeerConnection||!o.shimChrome)return s(\"Chrome shim is not included in this adapter release.\"),u;s(\"adapter.js shimming chrome.\"),u.browserShim=l,f.shimCreateObjectURL(i),l.shimGetUserMedia(i),l.shimMediaStream(i),l.shimSourceObject(i),l.shimPeerConnection(i),l.shimOnTrack(i),l.shimAddTrackRemoveTrack(i),l.shimGetSendersWithDtmf(i),f.shimRTCIceCandidate(i);break;case\"firefox\":if(!p||!p.shimPeerConnection||!o.shimFirefox)return s(\"Firefox shim is not included in this adapter release.\"),u;s(\"adapter.js shimming firefox.\"),u.browserShim=p,f.shimCreateObjectURL(i),p.shimGetUserMedia(i),p.shimSourceObject(i),p.shimPeerConnection(i),p.shimOnTrack(i),f.shimRTCIceCandidate(i);break;case\"edge\":if(!d||!d.shimPeerConnection||!o.shimEdge)return s(\"MS edge shim is not included in this adapter release.\"),u;s(\"adapter.js shimming edge.\"),u.browserShim=d,f.shimCreateObjectURL(i),d.shimGetUserMedia(i),d.shimPeerConnection(i),d.shimReplaceTrack(i);break;case\"safari\":if(!h||!o.shimSafari)return s(\"Safari shim is not included in this adapter release.\"),u;s(\"adapter.js shimming safari.\"),u.browserShim=h,f.shimCreateObjectURL(i),h.shimRTCIceServerUrls(i),h.shimCallbacksAPI(i),h.shimLocalStreamsAPI(i),h.shimRemoteStreamsAPI(i),h.shimTrackEventTransceiver(i),h.shimGetUserMedia(i),h.shimCreateOfferLegacy(i),f.shimRTCIceCandidate(i);break;default:s(\"Unsupported browser!\")}return u}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(38),o=i.log,a={shimMediaStream:function(e){e.MediaStream=e.MediaStream||e.webkitMediaStream},shimOnTrack:function(e){if(\"object\"===r(e)&&e.RTCPeerConnection&&!(\"ontrack\"in e.RTCPeerConnection.prototype)){Object.defineProperty(e.RTCPeerConnection.prototype,\"ontrack\",{get:function(){return this._ontrack},set:function(e){this._ontrack&&this.removeEventListener(\"track\",this._ontrack),this.addEventListener(\"track\",this._ontrack=e)}});var t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){var n=this;return n._ontrackpoly||(n._ontrackpoly=function(t){t.stream.addEventListener(\"addtrack\",function(r){var i;i=e.RTCPeerConnection.prototype.getReceivers?n.getReceivers().find(function(e){return e.track&&e.track.id===r.track.id}):{track:r.track};var o=new Event(\"track\");o.track=r.track,o.receiver=i,o.transceiver={receiver:i},o.streams=[t.stream],n.dispatchEvent(o)}),t.stream.getTracks().forEach(function(r){var i;i=e.RTCPeerConnection.prototype.getReceivers?n.getReceivers().find(function(e){return e.track&&e.track.id===r.id}):{track:r};var o=new Event(\"track\");o.track=r,o.receiver=i,o.transceiver={receiver:i},o.streams=[t.stream],n.dispatchEvent(o)})},n.addEventListener(\"addstream\",n._ontrackpoly)),t.apply(n,arguments)}}},shimGetSendersWithDtmf:function(e){if(\"object\"===r(e)&&e.RTCPeerConnection&&!(\"getSenders\"in e.RTCPeerConnection.prototype)&&\"createDTMFSender\"in e.RTCPeerConnection.prototype){var t=function(e,t){return{track:t,get dtmf(){return void 0===this._dtmf&&(\"audio\"===t.kind?this._dtmf=e.createDTMFSender(t):this._dtmf=null),this._dtmf},_pc:e}};if(!e.RTCPeerConnection.prototype.getSenders){e.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};var n=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,r){var i=n.apply(this,arguments);return i||(i=t(this,e),this._senders.push(i)),i};var i=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){i.apply(this,arguments);var t=this._senders.indexOf(e);-1!==t&&this._senders.splice(t,1)}}var o=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){var n=this;n._senders=n._senders||[],o.apply(n,[e]),e.getTracks().forEach(function(e){n._senders.push(t(n,e))})};var a=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){var t=this;t._senders=t._senders||[],a.apply(t,[e]),e.getTracks().forEach(function(e){var n=t._senders.find(function(t){return t.track===e});n&&t._senders.splice(t._senders.indexOf(n),1)})}}else if(\"object\"===r(e)&&e.RTCPeerConnection&&\"getSenders\"in e.RTCPeerConnection.prototype&&\"createDTMFSender\"in e.RTCPeerConnection.prototype&&e.RTCRtpSender&&!(\"dtmf\"in e.RTCRtpSender.prototype)){var s=e.RTCPeerConnection.prototype.getSenders;e.RTCPeerConnection.prototype.getSenders=function(){var e=this,t=s.apply(e,[]);return t.forEach(function(t){t._pc=e}),t},Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get:function(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}},shimSourceObject:function(e){var t=e&&e.URL;\"object\"===r(e)&&(!e.HTMLMediaElement||\"srcObject\"in e.HTMLMediaElement.prototype||Object.defineProperty(e.HTMLMediaElement.prototype,\"srcObject\",{get:function(){return this._srcObject},set:function(e){var n=this;this._srcObject=e,this.src&&t.revokeObjectURL(this.src),e?(this.src=t.createObjectURL(e),e.addEventListener(\"addtrack\",function(){n.src&&t.revokeObjectURL(n.src),n.src=t.createObjectURL(e)}),e.addEventListener(\"removetrack\",function(){n.src&&t.revokeObjectURL(n.src),n.src=t.createObjectURL(e)})):this.src=\"\"}}))},shimAddTrackRemoveTrack:function(e){var t=i.detectBrowser(e);if(!(e.RTCPeerConnection.prototype.addTrack&&t.version>=63)){var n=e.RTCPeerConnection.prototype.getLocalStreams;e.RTCPeerConnection.prototype.getLocalStreams=function(){var e=this,t=n.apply(this);return e._reverseStreams=e._reverseStreams||{},t.map(function(t){return e._reverseStreams[t.id]})};var r=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(t){var n=this;if(n._streams=n._streams||{},n._reverseStreams=n._reverseStreams||{},t.getTracks().forEach(function(e){if(n.getSenders().find(function(t){return t.track===e}))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")}),!n._reverseStreams[t.id]){var i=new e.MediaStream(t.getTracks());n._streams[t.id]=i,n._reverseStreams[i.id]=t,t=i}r.apply(n,[t])};var o=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){var t=this;t._streams=t._streams||{},t._reverseStreams=t._reverseStreams||{},o.apply(t,[t._streams[e.id]||e]),delete t._reverseStreams[t._streams[e.id]?t._streams[e.id].id:e.id],delete t._streams[e.id]},e.RTCPeerConnection.prototype.addTrack=function(t,n){var r=this;if(\"closed\"===r.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");var i=[].slice.call(arguments,1);if(1!==i.length||!i[0].getTracks().find(function(e){return e===t}))throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\",\"NotSupportedError\");if(r.getSenders().find(function(e){return e.track===t}))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\");r._streams=r._streams||{},r._reverseStreams=r._reverseStreams||{};var o=r._streams[n.id];if(o)o.addTrack(t),Promise.resolve().then(function(){r.dispatchEvent(new Event(\"negotiationneeded\"))});else{var a=new e.MediaStream([t]);r._streams[n.id]=a,r._reverseStreams[a.id]=n,r.addStream(a)}return r.getSenders().find(function(e){return e.track===t})},[\"createOffer\",\"createAnswer\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){var e=this,t=arguments;return arguments.length&&\"function\"==typeof arguments[0]?n.apply(e,[function(n){var r=c(e,n);t[0].apply(null,[r])},function(e){t[1]&&t[1].apply(null,e)},arguments[2]]):n.apply(e,arguments).then(function(t){return c(e,t)})}});var a=e.RTCPeerConnection.prototype.setLocalDescription;e.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=function(e,t){var n=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(function(t){var r=e._reverseStreams[t],i=e._streams[r.id];n=n.replace(new RegExp(r.id,\"g\"),i.id)}),new RTCSessionDescription({type:t.type,sdp:n})}(this,arguments[0]),a.apply(this,arguments)):a.apply(this,arguments)};var s=Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype,\"localDescription\");Object.defineProperty(e.RTCPeerConnection.prototype,\"localDescription\",{get:function(){var e=s.get.apply(this);return\"\"===e.type?e:c(this,e)}}),e.RTCPeerConnection.prototype.removeTrack=function(e){var t,n=this;if(\"closed\"===n.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");if(!e._pc)throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\",\"TypeError\");if(!(e._pc===n))throw new DOMException(\"Sender was not created by this connection.\",\"InvalidAccessError\");n._streams=n._streams||{},Object.keys(n._streams).forEach(function(r){n._streams[r].getTracks().find(function(t){return e.track===t})&&(t=n._streams[r])}),t&&(1===t.getTracks().length?n.removeStream(n._reverseStreams[t.id]):t.removeTrack(e.track),n.dispatchEvent(new Event(\"negotiationneeded\")))}}function c(e,t){var n=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(function(t){var r=e._reverseStreams[t],i=e._streams[r.id];n=n.replace(new RegExp(i.id,\"g\"),r.id)}),new RTCSessionDescription({type:t.type,sdp:n})}},shimPeerConnection:function(e){var t=i.detectBrowser(e);if(e.RTCPeerConnection){var n=e.RTCPeerConnection;e.RTCPeerConnection=function(e,t){if(e&&e.iceServers){for(var r=[],o=0;o<e.iceServers.length;o++){var a=e.iceServers[o];!a.hasOwnProperty(\"urls\")&&a.hasOwnProperty(\"url\")?(i.deprecated(\"RTCIceServer.url\",\"RTCIceServer.urls\"),(a=JSON.parse(JSON.stringify(a))).urls=a.url,r.push(a)):r.push(e.iceServers[o])}e.iceServers=r}return new n(e,t)},e.RTCPeerConnection.prototype=n.prototype,Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return n.generateCertificate}})}else e.RTCPeerConnection=function(t,n){return o(\"PeerConnection\"),t&&t.iceTransportPolicy&&(t.iceTransports=t.iceTransportPolicy),new e.webkitRTCPeerConnection(t,n)},e.RTCPeerConnection.prototype=e.webkitRTCPeerConnection.prototype,e.webkitRTCPeerConnection.generateCertificate&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return e.webkitRTCPeerConnection.generateCertificate}});var a=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(e,t,n){var r=this,i=arguments;if(arguments.length>0&&\"function\"==typeof e)return a.apply(this,arguments);if(0===a.length&&(0===arguments.length||\"function\"!=typeof arguments[0]))return a.apply(this,[]);var o=function(e){var t={};return e.result().forEach(function(e){var n={id:e.id,timestamp:e.timestamp,type:{localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[e.type]||e.type};e.names().forEach(function(t){n[t]=e.stat(t)}),t[n.id]=n}),t},s=function(e){return new Map(Object.keys(e).map(function(t){return[t,e[t]]}))};if(arguments.length>=2){return a.apply(this,[function(e){i[1](s(o(e)))},arguments[0]])}return new Promise(function(e,t){a.apply(r,[function(t){e(s(o(t)))},t])}).then(t,n)},t.version<51&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){var e=arguments,t=this,r=new Promise(function(r,i){n.apply(t,[e[0],r,i])});return e.length<2?r:r.then(function(){e[1].apply(null,[])},function(t){e.length>=3&&e[2].apply(null,[t])})}}),t.version<52&&[\"createOffer\",\"createAnswer\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){var e=this;if(arguments.length<1||1===arguments.length&&\"object\"===r(arguments[0])){var t=1===arguments.length?arguments[0]:void 0;return new Promise(function(r,i){n.apply(e,[r,i,t])})}return n.apply(this,arguments)}}),[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),n.apply(this,arguments)}});var s=e.RTCPeerConnection.prototype.addIceCandidate;e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?s.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}};e.exports={shimMediaStream:a.shimMediaStream,shimOnTrack:a.shimOnTrack,shimAddTrackRemoveTrack:a.shimAddTrackRemoveTrack,shimGetSendersWithDtmf:a.shimGetSendersWithDtmf,shimSourceObject:a.shimSourceObject,shimPeerConnection:a.shimPeerConnection,shimGetUserMedia:n(132)}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(38),o=i.log;e.exports=function(e){var t=i.detectBrowser(e),n=e&&e.navigator,a=function(e){if(\"object\"!==r(e)||e.mandatory||e.optional)return e;var t={};return Object.keys(e).forEach(function(n){if(\"require\"!==n&&\"advanced\"!==n&&\"mediaSource\"!==n){var i=\"object\"===r(e[n])?e[n]:{ideal:e[n]};void 0!==i.exact&&\"number\"==typeof i.exact&&(i.min=i.max=i.exact);var o=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):\"deviceId\"===t?\"sourceId\":t};if(void 0!==i.ideal){t.optional=t.optional||[];var a={};\"number\"==typeof i.ideal?(a[o(\"min\",n)]=i.ideal,t.optional.push(a),(a={})[o(\"max\",n)]=i.ideal,t.optional.push(a)):(a[o(\"\",n)]=i.ideal,t.optional.push(a))}void 0!==i.exact&&\"number\"!=typeof i.exact?(t.mandatory=t.mandatory||{},t.mandatory[o(\"\",n)]=i.exact):[\"min\",\"max\"].forEach(function(e){void 0!==i[e]&&(t.mandatory=t.mandatory||{},t.mandatory[o(e,n)]=i[e])})}}),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},s=function(e,i){if(t.version>=61)return i(e);if((e=JSON.parse(JSON.stringify(e)))&&\"object\"===r(e.audio)){var s=function(e,t,n){t in e&&!(n in e)&&(e[n]=e[t],delete e[t])};s((e=JSON.parse(JSON.stringify(e))).audio,\"autoGainControl\",\"googAutoGainControl\"),s(e.audio,\"noiseSuppression\",\"googNoiseSuppression\"),e.audio=a(e.audio)}if(e&&\"object\"===r(e.video)){var c=e.video.facingMode;c=c&&(\"object\"===r(c)?c:{ideal:c});var u,l=t.version<66;if(c&&(\"user\"===c.exact||\"environment\"===c.exact||\"user\"===c.ideal||\"environment\"===c.ideal)&&(!n.mediaDevices.getSupportedConstraints||!n.mediaDevices.getSupportedConstraints().facingMode||l))if(delete e.video.facingMode,\"environment\"===c.exact||\"environment\"===c.ideal?u=[\"back\",\"rear\"]:\"user\"!==c.exact&&\"user\"!==c.ideal||(u=[\"front\"]),u)return n.mediaDevices.enumerateDevices().then(function(t){var n=(t=t.filter(function(e){return\"videoinput\"===e.kind})).find(function(e){return u.some(function(t){return-1!==e.label.toLowerCase().indexOf(t)})});return!n&&t.length&&-1!==u.indexOf(\"back\")&&(n=t[t.length-1]),n&&(e.video.deviceId=c.exact?{exact:n.deviceId}:{ideal:n.deviceId}),e.video=a(e.video),o(\"chrome: \"+JSON.stringify(e)),i(e)});e.video=a(e.video)}return o(\"chrome: \"+JSON.stringify(e)),i(e)},c=function(e){return{name:{PermissionDeniedError:\"NotAllowedError\",InvalidStateError:\"NotReadableError\",DevicesNotFoundError:\"NotFoundError\",ConstraintNotSatisfiedError:\"OverconstrainedError\",TrackStartError:\"NotReadableError\",MediaDeviceFailedDueToShutdown:\"NotReadableError\",MediaDeviceKillSwitchOn:\"NotReadableError\"}[e.name]||e.name,message:e.message,constraint:e.constraintName,toString:function(){return this.name+(this.message&&\": \")+this.message}}};n.getUserMedia=function(e,t,r){s(e,function(e){n.webkitGetUserMedia(e,t,function(e){r&&r(c(e))})})};var u=function(e){return new Promise(function(t,r){n.getUserMedia(e,t,r)})};if(n.mediaDevices||(n.mediaDevices={getUserMedia:u,enumerateDevices:function(){return new Promise(function(t){var n={audio:\"audioinput\",video:\"videoinput\"};return e.MediaStreamTrack.getSources(function(e){t(e.map(function(e){return{label:e.label,kind:n[e.kind],deviceId:e.id,groupId:\"\"}}))})})},getSupportedConstraints:function(){return{deviceId:!0,echoCancellation:!0,facingMode:!0,frameRate:!0,height:!0,width:!0}}}),n.mediaDevices.getUserMedia){var l=n.mediaDevices.getUserMedia.bind(n.mediaDevices);n.mediaDevices.getUserMedia=function(e){return s(e,function(e){return l(e).then(function(t){if(e.audio&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(e){e.stop()}),new DOMException(\"\",\"NotFoundError\");return t},function(e){return Promise.reject(c(e))})})}}else n.mediaDevices.getUserMedia=function(e){return u(e)};void 0===n.mediaDevices.addEventListener&&(n.mediaDevices.addEventListener=function(){o(\"Dummy mediaDevices.addEventListener called.\")}),void 0===n.mediaDevices.removeEventListener&&(n.mediaDevices.removeEventListener=function(){o(\"Dummy mediaDevices.removeEventListener called.\")})}},function(e,t,n){\"use strict\";var r=n(38),i=n(134);e.exports={shimGetUserMedia:n(135),shimPeerConnection:function(e){var t=r.detectBrowser(e);if(e.RTCIceGatherer&&(e.RTCIceCandidate||(e.RTCIceCandidate=function(e){return e}),e.RTCSessionDescription||(e.RTCSessionDescription=function(e){return e}),t.version<15025)){var n=Object.getOwnPropertyDescriptor(e.MediaStreamTrack.prototype,\"enabled\");Object.defineProperty(e.MediaStreamTrack.prototype,\"enabled\",{set:function(e){n.set.call(this,e);var t=new Event(\"enabled\");t.enabled=e,this.dispatchEvent(t)}})}!e.RTCRtpSender||\"dtmf\"in e.RTCRtpSender.prototype||Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get:function(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=new e.RTCDtmfSender(this):\"video\"===this.track.kind&&(this._dtmf=null)),this._dtmf}}),e.RTCPeerConnection=i(e,t.version)},shimReplaceTrack:function(e){!e.RTCRtpSender||\"replaceTrack\"in e.RTCRtpSender.prototype||(e.RTCRtpSender.prototype.replaceTrack=e.RTCRtpSender.prototype.setTrack)}}},function(e,t,n){\"use strict\";var r=n(62);function i(e,t,n,i,o){var a=r.writeRtpDescription(e.kind,t);if(a+=r.writeIceParameters(e.iceGatherer.getLocalParameters()),a+=r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===n?\"actpass\":o||\"active\"),a+=\"a=mid:\"+e.mid+\"\\r\\n\",e.rtpSender&&e.rtpReceiver?a+=\"a=sendrecv\\r\\n\":e.rtpSender?a+=\"a=sendonly\\r\\n\":e.rtpReceiver?a+=\"a=recvonly\\r\\n\":a+=\"a=inactive\\r\\n\",e.rtpSender){var s=\"msid:\"+(i?i.id:\"-\")+\" \"+e.rtpSender.track.id+\"\\r\\n\";a+=\"a=\"+s,a+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+s,e.sendEncodingParameters[0].rtx&&(a+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+s,a+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return a+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+r.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(a+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+r.localCName+\"\\r\\n\"),a}function o(e,t){var n={codecs:[],headerExtensions:[],fecMechanisms:[]},r=function(e,t){e=parseInt(e,10);for(var n=0;n<t.length;n++)if(t[n].payloadType===e||t[n].preferredPayloadType===e)return t[n]},i=function(e,t,n,i){var o=r(e.parameters.apt,n),a=r(t.parameters.apt,i);return o&&a&&o.name.toLowerCase()===a.name.toLowerCase()};return e.codecs.forEach(function(r){for(var o=0;o<t.codecs.length;o++){var a=t.codecs[o];if(r.name.toLowerCase()===a.name.toLowerCase()&&r.clockRate===a.clockRate){if(\"rtx\"===r.name.toLowerCase()&&r.parameters&&a.parameters.apt&&!i(r,a,e.codecs,t.codecs))continue;(a=JSON.parse(JSON.stringify(a))).numChannels=Math.min(r.numChannels,a.numChannels),n.codecs.push(a),a.rtcpFeedback=a.rtcpFeedback.filter(function(e){for(var t=0;t<r.rtcpFeedback.length;t++)if(r.rtcpFeedback[t].type===e.type&&r.rtcpFeedback[t].parameter===e.parameter)return!0;return!1});break}}}),e.headerExtensions.forEach(function(e){for(var r=0;r<t.headerExtensions.length;r++){var i=t.headerExtensions[r];if(e.uri===i.uri){n.headerExtensions.push(i);break}}}),n}function a(e,t,n){return-1!=={offer:{setLocalDescription:[\"stable\",\"have-local-offer\"],setRemoteDescription:[\"stable\",\"have-remote-offer\"]},answer:{setLocalDescription:[\"have-remote-offer\",\"have-local-pranswer\"],setRemoteDescription:[\"have-local-offer\",\"have-remote-pranswer\"]}}[t][e].indexOf(n)}function s(e,t){var n=e.getRemoteCandidates().find(function(e){return t.foundation===e.foundation&&t.ip===e.ip&&t.port===e.port&&t.priority===e.priority&&t.protocol===e.protocol&&t.type===e.type});return n||e.addRemoteCandidate(t),!n}function c(e,t){var n=new Error(t);return n.name=e,n}e.exports=function(e,t){function n(t,n){n.addTrack(t),n.dispatchEvent(new e.MediaStreamTrackEvent(\"addtrack\",{track:t}))}function u(t,n,r,i){var o=new Event(\"track\");o.track=n,o.receiver=r,o.transceiver={receiver:r},o.streams=i,e.setTimeout(function(){t._dispatchEvent(\"track\",o)})}var l=function(n){var i=this,o=document.createDocumentFragment();if([\"addEventListener\",\"removeEventListener\",\"dispatchEvent\"].forEach(function(e){i[e]=o[e].bind(o)}),this.canTrickleIceCandidates=null,this.needNegotiation=!1,this.localStreams=[],this.remoteStreams=[],this.localDescription=null,this.remoteDescription=null,this.signalingState=\"stable\",this.iceConnectionState=\"new\",this.iceGatheringState=\"new\",n=JSON.parse(JSON.stringify(n||{})),this.usingBundle=\"max-bundle\"===n.bundlePolicy,\"negotiate\"===n.rtcpMuxPolicy)throw c(\"NotSupportedError\",\"rtcpMuxPolicy 'negotiate' is not supported\");switch(n.rtcpMuxPolicy||(n.rtcpMuxPolicy=\"require\"),n.iceTransportPolicy){case\"all\":case\"relay\":break;default:n.iceTransportPolicy=\"all\"}switch(n.bundlePolicy){case\"balanced\":case\"max-compat\":case\"max-bundle\":break;default:n.bundlePolicy=\"balanced\"}if(n.iceServers=function(e,t){var n=!1;return(e=JSON.parse(JSON.stringify(e))).filter(function(e){if(e&&(e.urls||e.url)){var r=e.urls||e.url;e.url&&!e.urls&&console.warn(\"RTCIceServer.url is deprecated! Use urls instead.\");var i=\"string\"==typeof r;return i&&(r=[r]),r=r.filter(function(e){return 0!==e.indexOf(\"turn:\")||-1===e.indexOf(\"transport=udp\")||-1!==e.indexOf(\"turn:[\")||n?0===e.indexOf(\"stun:\")&&t>=14393&&-1===e.indexOf(\"?transport=udp\"):(n=!0,!0)}),delete e.url,e.urls=i?r[0]:r,!!r.length}})}(n.iceServers||[],t),this._iceGatherers=[],n.iceCandidatePoolSize)for(var a=n.iceCandidatePoolSize;a>0;a--)this._iceGatherers.push(new e.RTCIceGatherer({iceServers:n.iceServers,gatherPolicy:n.iceTransportPolicy}));else n.iceCandidatePoolSize=0;this._config=n,this.transceivers=[],this._sdpSessionId=r.generateSessionId(),this._sdpSessionVersion=0,this._dtlsRole=void 0,this._isClosed=!1};l.prototype.onicecandidate=null,l.prototype.onaddstream=null,l.prototype.ontrack=null,l.prototype.onremovestream=null,l.prototype.onsignalingstatechange=null,l.prototype.oniceconnectionstatechange=null,l.prototype.onicegatheringstatechange=null,l.prototype.onnegotiationneeded=null,l.prototype.ondatachannel=null,l.prototype._dispatchEvent=function(e,t){this._isClosed||(this.dispatchEvent(t),\"function\"==typeof this[\"on\"+e]&&this[\"on\"+e](t))},l.prototype._emitGatheringStateChange=function(){var e=new Event(\"icegatheringstatechange\");this._dispatchEvent(\"icegatheringstatechange\",e)},l.prototype.getConfiguration=function(){return this._config},l.prototype.getLocalStreams=function(){return this.localStreams},l.prototype.getRemoteStreams=function(){return this.remoteStreams},l.prototype._createTransceiver=function(e){var t=this.transceivers.length>0,n={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:e,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,associatedRemoteMediaStreams:[],wantReceive:!0};if(this.usingBundle&&t)n.iceTransport=this.transceivers[0].iceTransport,n.dtlsTransport=this.transceivers[0].dtlsTransport;else{var r=this._createIceAndDtlsTransports();n.iceTransport=r.iceTransport,n.dtlsTransport=r.dtlsTransport}return this.transceivers.push(n),n},l.prototype.addTrack=function(t,n){if(this._isClosed)throw c(\"InvalidStateError\",\"Attempted to call addTrack on a closed peerconnection.\");var r;if(this.transceivers.find(function(e){return e.track===t}))throw c(\"InvalidAccessError\",\"Track already exists.\");for(var i=0;i<this.transceivers.length;i++)this.transceivers[i].track||this.transceivers[i].kind!==t.kind||(r=this.transceivers[i]);return r||(r=this._createTransceiver(t.kind)),this._maybeFireNegotiationNeeded(),-1===this.localStreams.indexOf(n)&&this.localStreams.push(n),r.track=t,r.stream=n,r.rtpSender=new e.RTCRtpSender(t,r.dtlsTransport),r.rtpSender},l.prototype.addStream=function(e){var n=this;if(t>=15025)e.getTracks().forEach(function(t){n.addTrack(t,e)});else{var r=e.clone();e.getTracks().forEach(function(e,t){var n=r.getTracks()[t];e.addEventListener(\"enabled\",function(e){n.enabled=e.enabled})}),r.getTracks().forEach(function(e){n.addTrack(e,r)})}},l.prototype.removeTrack=function(t){if(this._isClosed)throw c(\"InvalidStateError\",\"Attempted to call removeTrack on a closed peerconnection.\");if(!(t instanceof e.RTCRtpSender))throw new TypeError(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\");var n=this.transceivers.find(function(e){return e.rtpSender===t});if(!n)throw c(\"InvalidAccessError\",\"Sender was not created by this connection.\");var r=n.stream;n.rtpSender.stop(),n.rtpSender=null,n.track=null,n.stream=null,-1===this.transceivers.map(function(e){return e.stream}).indexOf(r)&&this.localStreams.indexOf(r)>-1&&this.localStreams.splice(this.localStreams.indexOf(r),1),this._maybeFireNegotiationNeeded()},l.prototype.removeStream=function(e){var t=this;e.getTracks().forEach(function(e){var n=t.getSenders().find(function(t){return t.track===e});n&&t.removeTrack(n)})},l.prototype.getSenders=function(){return this.transceivers.filter(function(e){return!!e.rtpSender}).map(function(e){return e.rtpSender})},l.prototype.getReceivers=function(){return this.transceivers.filter(function(e){return!!e.rtpReceiver}).map(function(e){return e.rtpReceiver})},l.prototype._createIceGatherer=function(t,n){var r=this;if(n&&t>0)return this.transceivers[0].iceGatherer;if(this._iceGatherers.length)return this._iceGatherers.shift();var i=new e.RTCIceGatherer({iceServers:this._config.iceServers,gatherPolicy:this._config.iceTransportPolicy});return Object.defineProperty(i,\"state\",{value:\"new\",writable:!0}),this.transceivers[t].bufferedCandidateEvents=[],this.transceivers[t].bufferCandidates=function(e){var n=!e.candidate||0===Object.keys(e.candidate).length;i.state=n?\"completed\":\"gathering\",null!==r.transceivers[t].bufferedCandidateEvents&&r.transceivers[t].bufferedCandidateEvents.push(e)},i.addEventListener(\"localcandidate\",this.transceivers[t].bufferCandidates),i},l.prototype._gather=function(t,n){var i=this,o=this.transceivers[n].iceGatherer;if(!o.onlocalcandidate){var a=this.transceivers[n].bufferedCandidateEvents;this.transceivers[n].bufferedCandidateEvents=null,o.removeEventListener(\"localcandidate\",this.transceivers[n].bufferCandidates),o.onlocalcandidate=function(e){if(!(i.usingBundle&&n>0)){var a=new Event(\"icecandidate\");a.candidate={sdpMid:t,sdpMLineIndex:n};var s=e.candidate,c=!s||0===Object.keys(s).length;if(c)\"new\"!==o.state&&\"gathering\"!==o.state||(o.state=\"completed\");else{\"new\"===o.state&&(o.state=\"gathering\"),s.component=1;var u=r.writeCandidate(s);a.candidate=Object.assign(a.candidate,r.parseCandidate(u)),a.candidate.candidate=u}var l=r.splitSections(i.localDescription.sdp);l[a.candidate.sdpMLineIndex+1]+=c?\"a=end-of-candidates\\r\\n\":\"a=\"+a.candidate.candidate+\"\\r\\n\",i.localDescription.sdp=l.join(\"\");var d=i.transceivers.every(function(e){return e.iceGatherer&&\"completed\"===e.iceGatherer.state});\"gathering\"!==i.iceGatheringState&&(i.iceGatheringState=\"gathering\",i._emitGatheringStateChange()),c||i._dispatchEvent(\"icecandidate\",a),d&&(i._dispatchEvent(\"icecandidate\",new Event(\"icecandidate\")),i.iceGatheringState=\"complete\",i._emitGatheringStateChange())}},e.setTimeout(function(){a.forEach(function(e){o.onlocalcandidate(e)})},0)}},l.prototype._createIceAndDtlsTransports=function(){var t=this,n=new e.RTCIceTransport(null);n.onicestatechange=function(){t._updateConnectionState()};var r=new e.RTCDtlsTransport(n);return r.ondtlsstatechange=function(){t._updateConnectionState()},r.onerror=function(){Object.defineProperty(r,\"state\",{value:\"failed\",writable:!0}),t._updateConnectionState()},{iceTransport:n,dtlsTransport:r}},l.prototype._disposeIceAndDtlsTransports=function(e){var t=this.transceivers[e].iceGatherer;t&&(delete t.onlocalcandidate,delete this.transceivers[e].iceGatherer);var n=this.transceivers[e].iceTransport;n&&(delete n.onicestatechange,delete this.transceivers[e].iceTransport);var r=this.transceivers[e].dtlsTransport;r&&(delete r.ondtlsstatechange,delete r.onerror,delete this.transceivers[e].dtlsTransport)},l.prototype._transceive=function(e,n,i){var a=o(e.localCapabilities,e.remoteCapabilities);n&&e.rtpSender&&(a.encodings=e.sendEncodingParameters,a.rtcp={cname:r.localCName,compound:e.rtcpParameters.compound},e.recvEncodingParameters.length&&(a.rtcp.ssrc=e.recvEncodingParameters[0].ssrc),e.rtpSender.send(a)),i&&e.rtpReceiver&&a.codecs.length>0&&(\"video\"===e.kind&&e.recvEncodingParameters&&t<15019&&e.recvEncodingParameters.forEach(function(e){delete e.rtx}),e.recvEncodingParameters.length&&(a.encodings=e.recvEncodingParameters),a.rtcp={compound:e.rtcpParameters.compound},e.rtcpParameters.cname&&(a.rtcp.cname=e.rtcpParameters.cname),e.sendEncodingParameters.length&&(a.rtcp.ssrc=e.sendEncodingParameters[0].ssrc),e.rtpReceiver.receive(a))},l.prototype.setLocalDescription=function(e){var t,n,i=this;if(-1===[\"offer\",\"answer\"].indexOf(e.type))return Promise.reject(c(\"TypeError\",'Unsupported type \"'+e.type+'\"'));if(!a(\"setLocalDescription\",e.type,i.signalingState)||i._isClosed)return Promise.reject(c(\"InvalidStateError\",\"Can not set local \"+e.type+\" in state \"+i.signalingState));if(\"offer\"===e.type)t=r.splitSections(e.sdp),n=t.shift(),t.forEach(function(e,t){var n=r.parseRtpParameters(e);i.transceivers[t].localCapabilities=n}),i.transceivers.forEach(function(e,t){i._gather(e.mid,t)});else if(\"answer\"===e.type){t=r.splitSections(i.remoteDescription.sdp),n=t.shift();var s=r.matchPrefix(n,\"a=ice-lite\").length>0;t.forEach(function(e,t){var a=i.transceivers[t],c=a.iceGatherer,u=a.iceTransport,l=a.dtlsTransport,d=a.localCapabilities,p=a.remoteCapabilities;if(!(r.isRejected(e)&&0===r.matchPrefix(e,\"a=bundle-only\").length)&&!a.isDatachannel){var h=r.getIceParameters(e,n),f=r.getDtlsParameters(e,n);s&&(f.role=\"server\"),i.usingBundle&&0!==t||(i._gather(a.mid,t),\"new\"===u.state&&u.start(c,h,s?\"controlling\":\"controlled\"),\"new\"===l.state&&l.start(f));var m=o(d,p);i._transceive(a,m.codecs.length>0,!1)}})}return i.localDescription={type:e.type,sdp:e.sdp},\"offer\"===e.type?i._updateSignalingState(\"have-local-offer\"):i._updateSignalingState(\"stable\"),Promise.resolve()},l.prototype.setRemoteDescription=function(i){var o=this;if(-1===[\"offer\",\"answer\"].indexOf(i.type))return Promise.reject(c(\"TypeError\",'Unsupported type \"'+i.type+'\"'));if(!a(\"setRemoteDescription\",i.type,o.signalingState)||o._isClosed)return Promise.reject(c(\"InvalidStateError\",\"Can not set remote \"+i.type+\" in state \"+o.signalingState));var l={};o.remoteStreams.forEach(function(e){l[e.id]=e});var d=[],p=r.splitSections(i.sdp),h=p.shift(),f=r.matchPrefix(h,\"a=ice-lite\").length>0,m=r.matchPrefix(h,\"a=group:BUNDLE \").length>0;o.usingBundle=m;var v=r.matchPrefix(h,\"a=ice-options:\")[0];return o.canTrickleIceCandidates=!!v&&v.substr(14).split(\" \").indexOf(\"trickle\")>=0,p.forEach(function(a,c){var u=r.splitLines(a),p=r.getKind(a),v=r.isRejected(a)&&0===r.matchPrefix(a,\"a=bundle-only\").length,y=u[0].substr(2).split(\" \")[2],g=r.getDirection(a,h),_=r.parseMsid(a),S=r.getMid(a)||r.generateIdentifier();if(\"application\"!==p||\"DTLS/SCTP\"!==y){var b,E,T,C,R,A,w,k,O,I,P,D=r.parseRtpParameters(a);v||(I=r.getIceParameters(a,h),(P=r.getDtlsParameters(a,h)).role=\"client\"),w=r.parseRtpEncodingParameters(a);var N=r.parseRtcpParameters(a),L=r.matchPrefix(a,\"a=end-of-candidates\",h).length>0,M=r.matchPrefix(a,\"a=candidate:\").map(function(e){return r.parseCandidate(e)}).filter(function(e){return 1===e.component});if((\"offer\"===i.type||\"answer\"===i.type)&&!v&&m&&c>0&&o.transceivers[c]&&(o._disposeIceAndDtlsTransports(c),o.transceivers[c].iceGatherer=o.transceivers[0].iceGatherer,o.transceivers[c].iceTransport=o.transceivers[0].iceTransport,o.transceivers[c].dtlsTransport=o.transceivers[0].dtlsTransport,o.transceivers[c].rtpSender&&o.transceivers[c].rtpSender.setTransport(o.transceivers[0].dtlsTransport),o.transceivers[c].rtpReceiver&&o.transceivers[c].rtpReceiver.setTransport(o.transceivers[0].dtlsTransport)),\"offer\"!==i.type||v)\"answer\"!==i.type||v||(E=(b=o.transceivers[c]).iceGatherer,T=b.iceTransport,C=b.dtlsTransport,R=b.rtpReceiver,A=b.sendEncodingParameters,k=b.localCapabilities,o.transceivers[c].recvEncodingParameters=w,o.transceivers[c].remoteCapabilities=D,o.transceivers[c].rtcpParameters=N,M.length&&\"new\"===T.state&&(!f&&!L||m&&0!==c?M.forEach(function(e){s(b.iceTransport,e)}):T.setRemoteCandidates(M)),m&&0!==c||(\"new\"===T.state&&T.start(E,I,\"controlling\"),\"new\"===C.state&&C.start(P)),o._transceive(b,\"sendrecv\"===g||\"recvonly\"===g,\"sendrecv\"===g||\"sendonly\"===g),!R||\"sendrecv\"!==g&&\"sendonly\"!==g?delete b.rtpReceiver:(O=R.track,_?(l[_.stream]||(l[_.stream]=new e.MediaStream),n(O,l[_.stream]),d.push([O,R,l[_.stream]])):(l.default||(l.default=new e.MediaStream),n(O,l.default),d.push([O,R,l.default]))));else{(b=o.transceivers[c]||o._createTransceiver(p)).mid=S,b.iceGatherer||(b.iceGatherer=o._createIceGatherer(c,m)),M.length&&\"new\"===b.iceTransport.state&&(!L||m&&0!==c?M.forEach(function(e){s(b.iceTransport,e)}):b.iceTransport.setRemoteCandidates(M)),k=e.RTCRtpReceiver.getCapabilities(p),t<15019&&(k.codecs=k.codecs.filter(function(e){return\"rtx\"!==e.name})),A=b.sendEncodingParameters||[{ssrc:1001*(2*c+2)}];var x,j=!1;if(\"sendrecv\"===g||\"sendonly\"===g){if(j=!b.rtpReceiver,R=b.rtpReceiver||new e.RTCRtpReceiver(b.dtlsTransport,p),j)O=R.track,_&&\"-\"===_.stream||(_?(l[_.stream]||(l[_.stream]=new e.MediaStream,Object.defineProperty(l[_.stream],\"id\",{get:function(){return _.stream}})),Object.defineProperty(O,\"id\",{get:function(){return _.track}}),x=l[_.stream]):(l.default||(l.default=new e.MediaStream),x=l.default)),x&&(n(O,x),b.associatedRemoteMediaStreams.push(x)),d.push([O,R,x])}else b.rtpReceiver&&b.rtpReceiver.track&&(b.associatedRemoteMediaStreams.forEach(function(t){var n,r,i=t.getTracks().find(function(e){return e.id===b.rtpReceiver.track.id});i&&(n=i,(r=t).removeTrack(n),r.dispatchEvent(new e.MediaStreamTrackEvent(\"removetrack\",{track:n})))}),b.associatedRemoteMediaStreams=[]);b.localCapabilities=k,b.remoteCapabilities=D,b.rtpReceiver=R,b.rtcpParameters=N,b.sendEncodingParameters=A,b.recvEncodingParameters=w,o._transceive(o.transceivers[c],!1,j)}}else o.transceivers[c]={mid:S,isDatachannel:!0}}),void 0===o._dtlsRole&&(o._dtlsRole=\"offer\"===i.type?\"active\":\"passive\"),o.remoteDescription={type:i.type,sdp:i.sdp},\"offer\"===i.type?o._updateSignalingState(\"have-remote-offer\"):o._updateSignalingState(\"stable\"),Object.keys(l).forEach(function(t){var n=l[t];if(n.getTracks().length){if(-1===o.remoteStreams.indexOf(n)){o.remoteStreams.push(n);var r=new Event(\"addstream\");r.stream=n,e.setTimeout(function(){o._dispatchEvent(\"addstream\",r)})}d.forEach(function(e){var t=e[0],r=e[1];n.id===e[2].id&&u(o,t,r,[n])})}}),d.forEach(function(e){e[2]||u(o,e[0],e[1],[])}),e.setTimeout(function(){o&&o.transceivers&&o.transceivers.forEach(function(e){e.iceTransport&&\"new\"===e.iceTransport.state&&e.iceTransport.getRemoteCandidates().length>0&&(console.warn(\"Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification\"),e.iceTransport.addRemoteCandidate({}))})},4e3),Promise.resolve()},l.prototype.close=function(){this.transceivers.forEach(function(e){e.iceTransport&&e.iceTransport.stop(),e.dtlsTransport&&e.dtlsTransport.stop(),e.rtpSender&&e.rtpSender.stop(),e.rtpReceiver&&e.rtpReceiver.stop()}),this._isClosed=!0,this._updateSignalingState(\"closed\")},l.prototype._updateSignalingState=function(e){this.signalingState=e;var t=new Event(\"signalingstatechange\");this._dispatchEvent(\"signalingstatechange\",t)},l.prototype._maybeFireNegotiationNeeded=function(){var t=this;\"stable\"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,e.setTimeout(function(){if(t.needNegotiation){t.needNegotiation=!1;var e=new Event(\"negotiationneeded\");t._dispatchEvent(\"negotiationneeded\",e)}},0))},l.prototype._updateConnectionState=function(){var e,t={new:0,closed:0,connecting:0,checking:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach(function(e){t[e.iceTransport.state]++,t[e.dtlsTransport.state]++}),t.connected+=t.completed,e=\"new\",t.failed>0?e=\"failed\":t.connecting>0||t.checking>0?e=\"connecting\":t.disconnected>0?e=\"disconnected\":t.new>0?e=\"new\":(t.connected>0||t.completed>0)&&(e=\"connected\"),e!==this.iceConnectionState){this.iceConnectionState=e;var n=new Event(\"iceconnectionstatechange\");this._dispatchEvent(\"iceconnectionstatechange\",n)}},l.prototype.createOffer=function(){var n=this;if(n._isClosed)return Promise.reject(c(\"InvalidStateError\",\"Can not call createOffer after close\"));var o=n.transceivers.filter(function(e){return\"audio\"===e.kind}).length,a=n.transceivers.filter(function(e){return\"video\"===e.kind}).length,s=arguments[0];if(s){if(s.mandatory||s.optional)throw new TypeError(\"Legacy mandatory/optional constraints not supported.\");void 0!==s.offerToReceiveAudio&&(o=!0===s.offerToReceiveAudio?1:!1===s.offerToReceiveAudio?0:s.offerToReceiveAudio),void 0!==s.offerToReceiveVideo&&(a=!0===s.offerToReceiveVideo?1:!1===s.offerToReceiveVideo?0:s.offerToReceiveVideo)}for(n.transceivers.forEach(function(e){\"audio\"===e.kind?--o<0&&(e.wantReceive=!1):\"video\"===e.kind&&--a<0&&(e.wantReceive=!1)});o>0||a>0;)o>0&&(n._createTransceiver(\"audio\"),o--),a>0&&(n._createTransceiver(\"video\"),a--);var u=r.writeSessionBoilerplate(n._sdpSessionId,n._sdpSessionVersion++);n.transceivers.forEach(function(i,o){var a=i.track,s=i.kind,c=i.mid||r.generateIdentifier();i.mid=c,i.iceGatherer||(i.iceGatherer=n._createIceGatherer(o,n.usingBundle));var u=e.RTCRtpSender.getCapabilities(s);t<15019&&(u.codecs=u.codecs.filter(function(e){return\"rtx\"!==e.name})),u.codecs.forEach(function(e){\"H264\"===e.name&&void 0===e.parameters[\"level-asymmetry-allowed\"]&&(e.parameters[\"level-asymmetry-allowed\"]=\"1\")});var l=i.sendEncodingParameters||[{ssrc:1001*(2*o+1)}];a&&t>=15019&&\"video\"===s&&!l[0].rtx&&(l[0].rtx={ssrc:l[0].ssrc+1}),i.wantReceive&&(i.rtpReceiver=new e.RTCRtpReceiver(i.dtlsTransport,s)),i.localCapabilities=u,i.sendEncodingParameters=l}),\"max-compat\"!==n._config.bundlePolicy&&(u+=\"a=group:BUNDLE \"+n.transceivers.map(function(e){return e.mid}).join(\" \")+\"\\r\\n\"),u+=\"a=ice-options:trickle\\r\\n\",n.transceivers.forEach(function(e,t){u+=i(e,e.localCapabilities,\"offer\",e.stream,n._dtlsRole),u+=\"a=rtcp-rsize\\r\\n\",!e.iceGatherer||\"new\"===n.iceGatheringState||0!==t&&n.usingBundle||(e.iceGatherer.getLocalCandidates().forEach(function(e){e.component=1,u+=\"a=\"+r.writeCandidate(e)+\"\\r\\n\"}),\"completed\"===e.iceGatherer.state&&(u+=\"a=end-of-candidates\\r\\n\"))});var l=new e.RTCSessionDescription({type:\"offer\",sdp:u});return Promise.resolve(l)},l.prototype.createAnswer=function(){var n=this;if(n._isClosed)return Promise.reject(c(\"InvalidStateError\",\"Can not call createAnswer after close\"));var a=r.writeSessionBoilerplate(n._sdpSessionId,n._sdpSessionVersion++);n.usingBundle&&(a+=\"a=group:BUNDLE \"+n.transceivers.map(function(e){return e.mid}).join(\" \")+\"\\r\\n\");var s=r.splitSections(n.remoteDescription.sdp).length-1;n.transceivers.forEach(function(e,r){if(!(r+1>s))if(e.isDatachannel)a+=\"m=application 0 DTLS/SCTP 5000\\r\\nc=IN IP4 0.0.0.0\\r\\na=mid:\"+e.mid+\"\\r\\n\";else{var c;if(e.stream)\"audio\"===e.kind?c=e.stream.getAudioTracks()[0]:\"video\"===e.kind&&(c=e.stream.getVideoTracks()[0]),c&&t>=15019&&\"video\"===e.kind&&!e.sendEncodingParameters[0].rtx&&(e.sendEncodingParameters[0].rtx={ssrc:e.sendEncodingParameters[0].ssrc+1});var u=o(e.localCapabilities,e.remoteCapabilities);!u.codecs.filter(function(e){return\"rtx\"===e.name.toLowerCase()}).length&&e.sendEncodingParameters[0].rtx&&delete e.sendEncodingParameters[0].rtx,a+=i(e,u,\"answer\",e.stream,n._dtlsRole),e.rtcpParameters&&e.rtcpParameters.reducedSize&&(a+=\"a=rtcp-rsize\\r\\n\")}});var u=new e.RTCSessionDescription({type:\"answer\",sdp:a});return Promise.resolve(u)},l.prototype.addIceCandidate=function(e){var t,n=this;return e&&void 0===e.sdpMLineIndex&&!e.sdpMid?Promise.reject(new TypeError(\"sdpMLineIndex or sdpMid required\")):new Promise(function(i,o){if(!n.remoteDescription)return o(c(\"InvalidStateError\",\"Can not add ICE candidate without a remote description\"));if(e&&\"\"!==e.candidate){var a=e.sdpMLineIndex;if(e.sdpMid)for(var u=0;u<n.transceivers.length;u++)if(n.transceivers[u].mid===e.sdpMid){a=u;break}var l=n.transceivers[a];if(!l)return o(c(\"OperationError\",\"Can not add ICE candidate\"));if(l.isDatachannel)return i();var d=Object.keys(e.candidate).length>0?r.parseCandidate(e.candidate):{};if(\"tcp\"===d.protocol&&(0===d.port||9===d.port))return i();if(d.component&&1!==d.component)return i();if((0===a||a>0&&l.iceTransport!==n.transceivers[0].iceTransport)&&!s(l.iceTransport,d))return o(c(\"OperationError\",\"Can not add ICE candidate\"));var p=e.candidate.trim();0===p.indexOf(\"a=\")&&(p=p.substr(2)),(t=r.splitSections(n.remoteDescription.sdp))[a+1]+=\"a=\"+(d.type?p:\"end-of-candidates\")+\"\\r\\n\",n.remoteDescription.sdp=t.join(\"\")}else for(var h=0;h<n.transceivers.length&&(n.transceivers[h].isDatachannel||(n.transceivers[h].iceTransport.addRemoteCandidate({}),(t=r.splitSections(n.remoteDescription.sdp))[h+1]+=\"a=end-of-candidates\\r\\n\",n.remoteDescription.sdp=t.join(\"\"),!n.usingBundle));h++);i()})},l.prototype.getStats=function(){var e=[];this.transceivers.forEach(function(t){[\"rtpSender\",\"rtpReceiver\",\"iceGatherer\",\"iceTransport\",\"dtlsTransport\"].forEach(function(n){t[n]&&e.push(t[n].getStats())})});return new Promise(function(t){var n=new Map;Promise.all(e).then(function(e){e.forEach(function(e){Object.keys(e).forEach(function(t){var r;e[t].type={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[(r=e[t]).type]||r.type,n.set(t,e[t])})}),t(n)})})};var d=[\"createOffer\",\"createAnswer\"];return d.forEach(function(e){var t=l.prototype[e];l.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[0]||\"function\"==typeof e[1]?t.apply(this,[arguments[2]]).then(function(t){\"function\"==typeof e[0]&&e[0].apply(null,[t])},function(t){\"function\"==typeof e[1]&&e[1].apply(null,[t])}):t.apply(this,arguments)}}),(d=[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"]).forEach(function(e){var t=l.prototype[e];l.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[1]||\"function\"==typeof e[2]?t.apply(this,arguments).then(function(){\"function\"==typeof e[1]&&e[1].apply(null)},function(t){\"function\"==typeof e[2]&&e[2].apply(null,[t])}):t.apply(this,arguments)}}),[\"getStats\"].forEach(function(e){var t=l.prototype[e];l.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[1]?t.apply(this,arguments).then(function(){\"function\"==typeof e[1]&&e[1].apply(null)}):t.apply(this,arguments)}}),l}},function(e,t,n){\"use strict\";e.exports=function(e){var t=e&&e.navigator,n=t.mediaDevices.getUserMedia.bind(t.mediaDevices);t.mediaDevices.getUserMedia=function(e){return n(e).catch(function(e){return Promise.reject(function(e){return{name:{PermissionDeniedError:\"NotAllowedError\"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString:function(){return this.name}}}(e))})}}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(38),o={shimOnTrack:function(e){\"object\"!==r(e)||!e.RTCPeerConnection||\"ontrack\"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,\"ontrack\",{get:function(){return this._ontrack},set:function(e){this._ontrack&&(this.removeEventListener(\"track\",this._ontrack),this.removeEventListener(\"addstream\",this._ontrackpoly)),this.addEventListener(\"track\",this._ontrack=e),this.addEventListener(\"addstream\",this._ontrackpoly=function(e){e.stream.getTracks().forEach(function(t){var n=new Event(\"track\");n.track=t,n.receiver={track:t},n.transceiver={receiver:n.receiver},n.streams=[e.stream],this.dispatchEvent(n)}.bind(this))}.bind(this))}}),\"object\"===r(e)&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get:function(){return{receiver:this.receiver}}})},shimSourceObject:function(e){\"object\"===r(e)&&(!e.HTMLMediaElement||\"srcObject\"in e.HTMLMediaElement.prototype||Object.defineProperty(e.HTMLMediaElement.prototype,\"srcObject\",{get:function(){return this.mozSrcObject},set:function(e){this.mozSrcObject=e}}))},shimPeerConnection:function(e){var t=i.detectBrowser(e);if(\"object\"===r(e)&&(e.RTCPeerConnection||e.mozRTCPeerConnection)){e.RTCPeerConnection||(e.RTCPeerConnection=function(n,r){if(t.version<38&&n&&n.iceServers){for(var i=[],o=0;o<n.iceServers.length;o++){var a=n.iceServers[o];if(a.hasOwnProperty(\"urls\"))for(var s=0;s<a.urls.length;s++){var c={url:a.urls[s]};0===a.urls[s].indexOf(\"turn\")&&(c.username=a.username,c.credential=a.credential),i.push(c)}else i.push(n.iceServers[o])}n.iceServers=i}return new e.mozRTCPeerConnection(n,r)},e.RTCPeerConnection.prototype=e.mozRTCPeerConnection.prototype,e.mozRTCPeerConnection.generateCertificate&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return e.mozRTCPeerConnection.generateCertificate}}),e.RTCSessionDescription=e.mozRTCSessionDescription,e.RTCIceCandidate=e.mozRTCIceCandidate),[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),n.apply(this,arguments)}});var n=e.RTCPeerConnection.prototype.addIceCandidate;e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?n.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())};var o={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"},a=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(e,n,r){return a.apply(this,[e||null]).then(function(e){if(t.version<48&&(e=function(e){var t=new Map;return Object.keys(e).forEach(function(n){t.set(n,e[n]),t[n]=e[n]}),t}(e)),t.version<53&&!n)try{e.forEach(function(e){e.type=o[e.type]||e.type})}catch(t){if(\"TypeError\"!==t.name)throw t;e.forEach(function(t,n){e.set(n,Object.assign({},t,{type:o[t.type]||t.type}))})}return e}).then(n,r)}}}};e.exports={shimOnTrack:o.shimOnTrack,shimSourceObject:o.shimSourceObject,shimPeerConnection:o.shimPeerConnection,shimGetUserMedia:n(137)}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(38),o=i.log;e.exports=function(e){var t=i.detectBrowser(e),n=e&&e.navigator,a=e&&e.MediaStreamTrack,s=function(e){return{name:{InternalError:\"NotReadableError\",NotSupportedError:\"TypeError\",PermissionDeniedError:\"NotAllowedError\",SecurityError:\"NotAllowedError\"}[e.name]||e.name,message:{\"The operation is insecure.\":\"The request is not allowed by the user agent or the platform in the current context.\"}[e.message]||e.message,constraint:e.constraint,toString:function(){return this.name+(this.message&&\": \")+this.message}}},c=function(e,i,a){var c=function(e){if(\"object\"!==r(e)||e.require)return e;var t=[];return Object.keys(e).forEach(function(n){if(\"require\"!==n&&\"advanced\"!==n&&\"mediaSource\"!==n){var i=e[n]=\"object\"===r(e[n])?e[n]:{ideal:e[n]};if(void 0===i.min&&void 0===i.max&&void 0===i.exact||t.push(n),void 0!==i.exact&&(\"number\"==typeof i.exact?i.min=i.max=i.exact:e[n]=i.exact,delete i.exact),void 0!==i.ideal){e.advanced=e.advanced||[];var o={};\"number\"==typeof i.ideal?o[n]={min:i.ideal,max:i.ideal}:o[n]=i.ideal,e.advanced.push(o),delete i.ideal,Object.keys(i).length||delete e[n]}}}),t.length&&(e.require=t),e};return e=JSON.parse(JSON.stringify(e)),t.version<38&&(o(\"spec: \"+JSON.stringify(e)),e.audio&&(e.audio=c(e.audio)),e.video&&(e.video=c(e.video)),o(\"ff37: \"+JSON.stringify(e))),n.mozGetUserMedia(e,i,function(e){a(s(e))})};if(n.mediaDevices||(n.mediaDevices={getUserMedia:function(e){return new Promise(function(t,n){c(e,t,n)})},addEventListener:function(){},removeEventListener:function(){}}),n.mediaDevices.enumerateDevices=n.mediaDevices.enumerateDevices||function(){return new Promise(function(e){e([{kind:\"audioinput\",deviceId:\"default\",label:\"\",groupId:\"\"},{kind:\"videoinput\",deviceId:\"default\",label:\"\",groupId:\"\"}])})},t.version<41){var u=n.mediaDevices.enumerateDevices.bind(n.mediaDevices);n.mediaDevices.enumerateDevices=function(){return u().then(void 0,function(e){if(\"NotFoundError\"===e.name)return[];throw e})}}if(t.version<49){var l=n.mediaDevices.getUserMedia.bind(n.mediaDevices);n.mediaDevices.getUserMedia=function(e){return l(e).then(function(t){if(e.audio&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(e){e.stop()}),new DOMException(\"The object can not be found here.\",\"NotFoundError\");return t},function(e){return Promise.reject(s(e))})}}if(!(t.version>55&&\"autoGainControl\"in n.mediaDevices.getSupportedConstraints())){var d=function(e,t,n){t in e&&!(n in e)&&(e[n]=e[t],delete e[t])},p=n.mediaDevices.getUserMedia.bind(n.mediaDevices);if(n.mediaDevices.getUserMedia=function(e){return\"object\"===r(e)&&\"object\"===r(e.audio)&&(e=JSON.parse(JSON.stringify(e)),d(e.audio,\"autoGainControl\",\"mozAutoGainControl\"),d(e.audio,\"noiseSuppression\",\"mozNoiseSuppression\")),p(e)},a&&a.prototype.getSettings){var h=a.prototype.getSettings;a.prototype.getSettings=function(){var e=h.apply(this,arguments);return d(e,\"mozAutoGainControl\",\"autoGainControl\"),d(e,\"mozNoiseSuppression\",\"noiseSuppression\"),e}}if(a&&a.prototype.applyConstraints){var f=a.prototype.applyConstraints;a.prototype.applyConstraints=function(e){return\"audio\"===this.kind&&\"object\"===r(e)&&(e=JSON.parse(JSON.stringify(e)),d(e,\"autoGainControl\",\"mozAutoGainControl\"),d(e,\"noiseSuppression\",\"mozNoiseSuppression\")),f.apply(this,[e])}}}n.getUserMedia=function(e,r,o){if(t.version<44)return c(e,r,o);i.deprecated(\"navigator.getUserMedia\",\"navigator.mediaDevices.getUserMedia\"),n.mediaDevices.getUserMedia(e).then(r,o)}}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(38),o={shimLocalStreamsAPI:function(e){if(\"object\"===r(e)&&e.RTCPeerConnection){if(\"getLocalStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),\"getStreamById\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getStreamById=function(e){var t=null;return this._localStreams&&this._localStreams.forEach(function(n){n.id===e&&(t=n)}),this._remoteStreams&&this._remoteStreams.forEach(function(n){n.id===e&&(t=n)}),t}),!(\"addStream\"in e.RTCPeerConnection.prototype)){var t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addStream=function(e){this._localStreams||(this._localStreams=[]),-1===this._localStreams.indexOf(e)&&this._localStreams.push(e);var n=this;e.getTracks().forEach(function(r){t.call(n,r,e)})},e.RTCPeerConnection.prototype.addTrack=function(e,n){n&&(this._localStreams?-1===this._localStreams.indexOf(n)&&this._localStreams.push(n):this._localStreams=[n]),t.call(this,e,n)}}\"removeStream\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){this._localStreams||(this._localStreams=[]);var t=this._localStreams.indexOf(e);if(-1!==t){this._localStreams.splice(t,1);var n=this,r=e.getTracks();this.getSenders().forEach(function(e){-1!==r.indexOf(e.track)&&n.removeTrack(e)})}})}},shimRemoteStreamsAPI:function(e){\"object\"===r(e)&&e.RTCPeerConnection&&(\"getRemoteStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),\"onaddstream\"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,\"onaddstream\",{get:function(){return this._onaddstream},set:function(e){this._onaddstream&&(this.removeEventListener(\"addstream\",this._onaddstream),this.removeEventListener(\"track\",this._onaddstreampoly)),this.addEventListener(\"addstream\",this._onaddstream=e),this.addEventListener(\"track\",this._onaddstreampoly=function(e){var t=e.streams[0];if(this._remoteStreams||(this._remoteStreams=[]),!(this._remoteStreams.indexOf(t)>=0)){this._remoteStreams.push(t);var n=new Event(\"addstream\");n.stream=e.streams[0],this.dispatchEvent(n)}}.bind(this))}}))},shimCallbacksAPI:function(e){if(\"object\"===r(e)&&e.RTCPeerConnection){var t=e.RTCPeerConnection.prototype,n=t.createOffer,i=t.createAnswer,o=t.setLocalDescription,a=t.setRemoteDescription,s=t.addIceCandidate;t.createOffer=function(e,t){var r=arguments.length>=2?arguments[2]:arguments[0],i=n.apply(this,[r]);return t?(i.then(e,t),Promise.resolve()):i},t.createAnswer=function(e,t){var n=arguments.length>=2?arguments[2]:arguments[0],r=i.apply(this,[n]);return t?(r.then(e,t),Promise.resolve()):r};var c=function(e,t,n){var r=o.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r};t.setLocalDescription=c,c=function(e,t,n){var r=a.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r},t.setRemoteDescription=c,c=function(e,t,n){var r=s.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r},t.addIceCandidate=c}},shimGetUserMedia:function(e){var t=e&&e.navigator;t.getUserMedia||(t.webkitGetUserMedia?t.getUserMedia=t.webkitGetUserMedia.bind(t):t.mediaDevices&&t.mediaDevices.getUserMedia&&(t.getUserMedia=function(e,n,r){t.mediaDevices.getUserMedia(e).then(n,r)}.bind(t)))},shimRTCIceServerUrls:function(e){var t=e.RTCPeerConnection;e.RTCPeerConnection=function(e,n){if(e&&e.iceServers){for(var r=[],o=0;o<e.iceServers.length;o++){var a=e.iceServers[o];!a.hasOwnProperty(\"urls\")&&a.hasOwnProperty(\"url\")?(i.deprecated(\"RTCIceServer.url\",\"RTCIceServer.urls\"),(a=JSON.parse(JSON.stringify(a))).urls=a.url,delete a.url,r.push(a)):r.push(e.iceServers[o])}e.iceServers=r}return new t(e,n)},e.RTCPeerConnection.prototype=t.prototype,\"generateCertificate\"in e.RTCPeerConnection&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return t.generateCertificate}})},shimTrackEventTransceiver:function(e){\"object\"===r(e)&&e.RTCPeerConnection&&\"receiver\"in e.RTCTrackEvent.prototype&&!e.RTCTransceiver&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get:function(){return{receiver:this.receiver}}})},shimCreateOfferLegacy:function(e){var t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(e){var n=this;if(e){var r=n.getTransceivers().find(function(e){return e.sender.track&&\"audio\"===e.sender.track.kind});!1===e.offerToReceiveAudio&&r?\"sendrecv\"===r.direction?r.setDirection(\"sendonly\"):\"recvonly\"===r.direction&&r.setDirection(\"inactive\"):!0!==e.offerToReceiveAudio||r||n.addTransceiver(\"audio\");var i=n.getTransceivers().find(function(e){return e.sender.track&&\"video\"===e.sender.track.kind});!1===e.offerToReceiveVideo&&i?\"sendrecv\"===i.direction?i.setDirection(\"sendonly\"):\"recvonly\"===i.direction&&i.setDirection(\"inactive\"):!0!==e.offerToReceiveVideo||i||n.addTransceiver(\"video\")}return t.apply(n,arguments)}}};e.exports={shimCallbacksAPI:o.shimCallbacksAPI,shimLocalStreamsAPI:o.shimLocalStreamsAPI,shimRemoteStreamsAPI:o.shimRemoteStreamsAPI,shimGetUserMedia:o.shimGetUserMedia,shimRTCIceServerUrls:o.shimRTCIceServerUrls,shimTrackEventTransceiver:o.shimTrackEventTransceiver,shimCreateOfferLegacy:o.shimCreateOfferLegacy}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(62),o=n(38);e.exports={shimRTCIceCandidate:function(e){if(!(e.RTCIceCandidate&&\"foundation\"in e.RTCIceCandidate.prototype)){var t=e.RTCIceCandidate;e.RTCIceCandidate=function(e){\"object\"===r(e)&&e.candidate&&0===e.candidate.indexOf(\"a=\")&&((e=JSON.parse(JSON.stringify(e))).candidate=e.candidate.substr(2));var n=new t(e),o=i.parseCandidate(e.candidate),a=Object.assign(n,o);return a.toJSON=function(){return{candidate:a.candidate,sdpMid:a.sdpMid,sdpMLineIndex:a.sdpMLineIndex,usernameFragment:a.usernameFragment}},a},function(e,t,n){if(e.RTCPeerConnection){var r=e.RTCPeerConnection.prototype,i=r.addEventListener;r.addEventListener=function(e,r){if(e!==t)return i.apply(this,arguments);var o=function(e){r(n(e))};return this._eventMap=this._eventMap||{},this._eventMap[r]=o,i.apply(this,[e,o])};var o=r.removeEventListener;r.removeEventListener=function(e,n){if(e!==t||!this._eventMap||!this._eventMap[n])return o.apply(this,arguments);var r=this._eventMap[n];return delete this._eventMap[n],o.apply(this,[e,r])},Object.defineProperty(r,\"on\"+t,{get:function(){return this[\"_on\"+t]},set:function(e){this[\"_on\"+t]&&(this.removeEventListener(t,this[\"_on\"+t]),delete this[\"_on\"+t]),e&&this.addEventListener(t,this[\"_on\"+t]=e)}})}}(e,\"icecandidate\",function(t){return t.candidate&&Object.defineProperty(t,\"candidate\",{value:new e.RTCIceCandidate(t.candidate),writable:\"false\"}),t})}},shimCreateObjectURL:function(e){var t=e&&e.URL;if(\"object\"===r(e)&&e.HTMLMediaElement&&\"srcObject\"in e.HTMLMediaElement.prototype&&t.createObjectURL&&t.revokeObjectURL){var n=t.createObjectURL.bind(t),i=t.revokeObjectURL.bind(t),a=new Map,s=0;t.createObjectURL=function(e){if(\"getTracks\"in e){var t=\"polyblob:\"+ ++s;return a.set(t,e),o.deprecated(\"URL.createObjectURL(stream)\",\"elem.srcObject = stream\"),t}return n(e)},t.revokeObjectURL=function(e){i(e),a.delete(e)};var c=Object.getOwnPropertyDescriptor(e.HTMLMediaElement.prototype,\"src\");Object.defineProperty(e.HTMLMediaElement.prototype,\"src\",{get:function(){return c.get.apply(this)},set:function(e){return this.srcObject=a.get(e)||null,c.set.apply(this,[e])}});var u=e.HTMLMediaElement.prototype.setAttribute;e.HTMLMediaElement.prototype.setAttribute=function(){return 2===arguments.length&&\"src\"===(\"\"+arguments[0]).toLowerCase()&&(this.srcObject=a.get(arguments[1])||null),u.apply(this,arguments)}}}}},function(e,t,n){var r=function(e){return String(Number(e))===e?Number(e):e},i=function(e,t,n){var i=e.name&&e.names;e.push&&!t[e.push]?t[e.push]=[]:i&&!t[e.name]&&(t[e.name]={});var o=e.push?{}:i?t[e.name]:t;!function(e,t,n,i){if(i&&!n)t[i]=r(e[1]);else for(var o=0;o<n.length;o+=1)null!=e[o+1]&&(t[n[o]]=r(e[o+1]))}(n.match(e.reg),o,e.names,e.name),e.push&&t[e.push].push(o)},o=n(63),a=RegExp.prototype.test.bind(/^([a-z])=(.*)/);t.parse=function(e){var t={},n=[],r=t;return e.split(/(\\r\\n|\\r|\\n)/).filter(a).forEach(function(e){var t=e[0],a=e.slice(2);\"m\"===t&&(n.push({rtp:[],fmtp:[]}),r=n[n.length-1]);for(var s=0;s<(o[t]||[]).length;s+=1){var c=o[t][s];if(c.reg.test(a))return i(c,r,a)}}),t.media=n,t};var s=function(e,t){var n=t.split(/=(.+)/,2);return 2===n.length&&(e[n[0]]=r(n[1])),e};t.parseParams=function(e){return e.split(/\\;\\s?/).reduce(s,{})},t.parseFmtpConfig=t.parseParams,t.parsePayloads=function(e){return e.split(\" \").map(Number)},t.parseRemoteCandidates=function(e){for(var t=[],n=e.split(\" \").map(r),i=0;i<n.length;i+=3)t.push({component:n[i],ip:n[i+1],port:n[i+2]});return t},t.parseImageAttributes=function(e){return e.split(\" \").map(function(e){return e.substring(1,e.length-1).split(\",\").reduce(s,{})})},t.parseSimulcastStreamList=function(e){return e.split(\";\").map(function(e){return e.split(\",\").map(function(e){var t,n=!1;return\"~\"!==e[0]?t=r(e):(t=r(e.substring(1,e.length)),n=!0),{scid:t,paused:n}})})}},function(e,t,n){var r=n(63),i=/%[sdv%]/g,o=function(e,t,n){var r=[e+\"=\"+(t.format instanceof Function?t.format(t.push?n:n[t.name]):t.format)];if(t.names)for(var o=0;o<t.names.length;o+=1){var a=t.names[o];t.name?r.push(n[t.name][a]):r.push(n[t.names[o]])}else r.push(n[t.name]);return function(e){var t=1,n=arguments,r=n.length;return e.replace(i,function(e){if(t>=r)return e;var i=n[t];switch(t+=1,e){case\"%%\":return\"%\";case\"%s\":return String(i);case\"%d\":return Number(i);case\"%v\":return\"\"}})}.apply(null,r)},a=[\"v\",\"o\",\"s\",\"i\",\"u\",\"e\",\"p\",\"c\",\"b\",\"t\",\"r\",\"z\",\"a\"],s=[\"i\",\"c\",\"b\",\"a\"];e.exports=function(e,t){t=t||{},null==e.version&&(e.version=0),null==e.name&&(e.name=\" \"),e.media.forEach(function(e){null==e.payloads&&(e.payloads=\"\")});var n=t.outerOrder||a,i=t.innerOrder||s,c=[];return n.forEach(function(t){r[t].forEach(function(n){n.name in e&&null!=e[n.name]?c.push(o(t,n,e)):n.push in e&&null!=e[n.push]&&e[n.push].forEach(function(e){c.push(o(t,n,e))})})}),e.media.forEach(function(e){c.push(o(\"m\",r.m[0],e)),i.forEach(function(t){r[t].forEach(function(n){n.name in e&&null!=e[n.name]?c.push(o(t,n,e)):n.push in e&&null!=e[n.push]&&e[n.push].forEach(function(e){c.push(o(t,n,e))})})})}),c.join(\"\\r\\n\")+\"\\r\\n\"}},function(e,t,n){t.Interop=n(143)},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(144),o=n(145);function a(e){\"number\"==typeof e.mid&&(e.mid=e.mid.toString())}function s(){this.cache={mlB2UMap:{},mlU2BMap:{}}}e.exports=s,s.prototype.candidateToUnifiedPlan=function(e){var t=new RTCIceCandidate(e);return t.sdpMLineIndex=this.cache.mlB2UMap[t.sdpMLineIndex],t},s.prototype.candidateToPlanB=function(e){var t=new RTCIceCandidate(e);if(0===t.sdpMid.indexOf(\"audio\"))t.sdpMid=\"audio\";else{if(0!==t.sdpMid.indexOf(\"video\"))throw new Error(\"candidate with \"+t.sdpMid+\" not allowed\");t.sdpMid=\"video\"}return t.sdpMLineIndex=this.cache.mlU2BMap[t.sdpMLineIndex],t},s.prototype.getFirstSendingIndexFromAnswer=function(e){if(!this.cache.answer)return null;var t=i.parse(this.cache.answer);if(t&&t.media&&Array.isArray(t.media))for(var n=0;n<t.media.length;n++)if(t.media[n].type==e&&(!t.media[n].direction||\"sendrecv\"===t.media[n].direction||\"sendonly\"===t.media[n].direction))return n;return null},s.prototype.toPlanB=function(e){var t=this;if(\"object\"!==r(e)||null===e||\"string\"!=typeof e.sdp)return console.warn(\"An empty description was passed as an argument.\"),e;var n=i.parse(e.sdp);if(void 0===n.media||!Array.isArray(n.media)||0===n.media.length)return console.warn(\"The description has no media.\"),e;if(n.media.length<=3&&n.media.every(function(e){return-1!==[\"video\",\"audio\",\"data\"].indexOf(e.mid)}))return console.warn(\"This description does not look like Unified Plan.\"),e;for(var s=e.sdp,u=!1,l=0;l<n.media.length;l++){n.media[l].rtp.forEach(function(e){if(\"NULL\"===e.codec){u=!0;var n=i.parse(t.cache.offer);e.codec=n.media[l].rtp[0].codec}})}u&&(s=i.write(n)),this.cache[e.type]=s;var d=n.media;n.media=[];var p={},h=[],f={};d.forEach(function(e){if(a(e),(\"string\"!=typeof e.rtcpMux||\"rtcp-mux\"!==e.rtcpMux)&&\"inactive\"!==e.direction&&\"application\"!==e.type)throw new Error(\"Cannot convert to Plan B because m-lines without the rtcp-mux attribute were found.\");void 0!==p[e.type]&&\"inactive\"!==p[e.type].direction||(p[e.type]=e)}),d.forEach(function(e){var t=e.type;if(\"application\"===t)return e.mid=\"data\",n.media.push(e),void h.push(e.mid);\"object\"===r(e.sources)&&Object.keys(e.sources).forEach(function(n){\"object\"!==r(p[t].sources)&&(p[t].sources={}),p[t].sources[n]=e.sources[n],void 0!==e.msid&&(p[t].sources[n].msid=e.msid)}),void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&(void 0!==p[t].ssrcGroups&&Array.isArray(p[t].ssrcGroups)||(p[t].ssrcGroups=[]),o.apply(p[t].ssrcGroups,[e.ssrcGroups])||(p[t].ssrcGroups=p[t].ssrcGroups.concat(e.ssrcGroups)));var i=e.direction;f[t]=(f[t]||0)|c[i||\"inactive\"],p[t]===e&&(e.mid=t,delete e.bundleOnly,delete e.msid,\"inactive\"!==i&&h.push(t),n.media.push(e))}),n.groups.some(function(e){if(\"BUNDLE\"===e.type)return e.mids=h.join(\" \"),!0}),n.msidSemantic={semantic:\"WMS\",token:\"*\"};var m=i.write(n);return new RTCSessionDescription({type:e.type,sdp:m})},s.prototype.toUnifiedPlan=function(e){var t=this;if(\"object\"!==r(e)||null===e||\"string\"!=typeof e.sdp)return console.warn(\"An empty description was passed as an argument.\"),e;var n=i.parse(e.sdp);if(void 0===n.media||!Array.isArray(n.media)||0===n.media.length)return console.warn(\"The description has no media.\"),e;if(n.media.length>3||!n.media.every(function(e){return-1!==[\"video\",\"audio\",\"data\"].indexOf(e.mid)}))return console.warn(\"This description does not look like Plan B.\"),e;var s=[];n.media.forEach(function(e){s.push(e.mid)});var c,u=!1;if(void 0!==n.groups&&Array.isArray(n.groups)&&(u=n.groups.every(function(e){return\"BUNDLE\"!==e.type||o.apply(e.mids.sort(),[s.sort()])})),!u)throw new Error(\"Cannot convert to Unified Plan because m-lines that are not bundled were found.\");void 0!==this.cache[e.type]&&(c=i.parse(this.cache[e.type]));var l={audio:{},video:{}},d={},p=0,h=0;if(n.media.forEach(function(n){if((\"string\"!=typeof n.rtcpMux||\"rtcp-mux\"!==n.rtcpMux)&&\"inactive\"!==n.direction&&\"application\"!==n.type)throw new Error(\"Cannot convert to Unified Plan because m-lines without the rtcp-mux attribute were found.\");if(\"application\"===n.type){var i=null;return c&&c.media&&(i=c.media.find(function(e){return\"application\"===e.type})),void(i?d[i.mid]=i:d[n.mid]=n)}var o=n.sources,s=n.ssrcGroups,u=n.candidates,f=n.iceUfrag,m=n.icePwd,v=n.fingerprint,y=n.port;delete n.sources,delete n.ssrcGroups,delete n.candidates,delete n.iceUfrag,delete n.icePwd,delete n.fingerprint,delete n.port,delete n.mid;var g={};void 0!==s&&Array.isArray(s)&&s.forEach(function(e){\"SIM\"!==e.semantics&&void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&e.ssrcs.forEach(function(t){void 0===g[t]&&(g[t]=[]),g[t].push(e)})});var _={};\"object\"===r(o)&&Object.keys(o).forEach(function(i){var s;if(\"offer\"!==e.type||o[i].msid)if(void 0!==g[i]&&Array.isArray(g[i])&&g[i].some(function(e){return e.ssrcs.some(function(e){if(\"object\"===r(_[e]))return s=_[e],!0})}),\"object\"===r(s))s.sources[i]=o[i],delete o[i].msid;else{if(s=Object.create(n),_[i]=s,void 0!==o[i].msid&&(s.msid=o[i].msid,delete o[i].msid),s.sources={},s.sources[i]=o[i],s.ssrcGroups=g[i],void 0!==c&&void 0!==c.media&&Array.isArray(c.media)&&c.media.forEach(function(e){\"object\"===r(e.sources)&&Object.keys(e.sources).forEach(function(t){t===i&&(s.mid=e.mid)})}),a(s),void 0===s.mid){if(\"answer\"===e.type)throw new Error(\"An unmapped SSRC was found.\");s.mid=[n.type,\"-\",i].join(\"\")}s.candidates=u,s.iceUfrag=f,s.icePwd=m,s.fingerprint=v,s.port=y,d[s.mid]=s,t.cache.mlU2BMap[h]=p,void 0===t.cache.mlB2UMap[p]&&(t.cache.mlB2UMap[p]=h),h++}else l[n.type][i]=o[i]}),p++}),n.media=[],s=[],\"answer\"===e.type)for(var f=0;f<c.media.length;f++){var m=c.media[f];a(m),void 0===d[m.mid]&&(delete m.msid,delete m.sources,delete m.ssrcGroups,m.direction&&\"sendrecv\"!==m.direction?\"sendonly\"===m.direction&&(m.direction=\"inactive\"):m.direction=\"recvonly\"),n.media.push(m),\"string\"==typeof m.mid&&s.push(m.mid)}else void 0!==c&&void 0!==c.media&&Array.isArray(c.media)&&c.media.forEach(function(e){a(e),s.push(e.mid),void 0!==d[e.mid]?n.media.push(d[e.mid]):(delete e.msid,delete e.sources,delete e.ssrcGroups,e.direction&&\"sendrecv\"!==e.direction||(e.direction=\"recvonly\"),e.direction&&\"sendonly\"!==e.direction||(e.direction=\"inactive\"),n.media.push(e))}),Object.keys(d).forEach(function(e){-1===s.indexOf(e)&&(s.push(e),\"recvonly\"===d[e].direction?n.media.some(function(t){if((\"sendrecv\"===t.direction||\"sendonly\"===t.direction)&&t.type===d[e].type)return Object.keys(d[e].sources).forEach(function(n){t.sources[n]=d[e].sources[n]}),!0}):n.media.push(d[e]))});[\"audio\",\"video\"].forEach(function(e){if(n&&n.media&&Array.isArray(n.media)){var r=null;if(Object.keys(l[e]).length>0&&null===(r=t.getFirstSendingIndexFromAnswer(e)))for(var i=0;i<n.media.length;i++)if(n.media[i].type===e){r=i;break}if(r&&n.media.length>r){var o=n.media[r];Object.keys(l[e]).forEach(function(t){o.sources&&o.sources[t]&&console.warn(\"Replacing an existing SSRC.\"),o.sources||(o.sources={}),o.sources[t]=l[e][t]})}}}),n.groups.some(function(e){if(\"BUNDLE\"===e.type)return e.mids=s.join(\" \"),!0}),n.msidSemantic={semantic:\"WMS\",token:\"*\"};var v=i.write(n);return this.cache[e.type]=v,new RTCSessionDescription({type:e.type,sdp:v})};var c={inactive:0,recvonly:1,sendonly:2,sendrecv:3}},function(e,t,n){var r=n(22);t.write=function(e,t){return void 0!==e&&void 0!==e.media&&Array.isArray(e.media)&&e.media.forEach(function(e){void 0!==e.sources&&0!==Object.keys(e.sources).length&&(e.ssrcs=[],Object.keys(e.sources).forEach(function(t){var n=e.sources[t];Object.keys(n).forEach(function(r){e.ssrcs.push({id:t,attribute:r,value:n[r]})})}),delete e.sources),void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&e.ssrcGroups.forEach(function(e){void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&(e.ssrcs=e.ssrcs.join(\" \"))})}),void 0!==e&&void 0!==e.groups&&Array.isArray(e.groups)&&e.groups.forEach(function(e){void 0!==e.mids&&Array.isArray(e.mids)&&(e.mids=e.mids.join(\" \"))}),r.write(e,t)},t.parse=function(e){var t=r.parse(e);return void 0!==t&&void 0!==t.media&&Array.isArray(t.media)&&t.media.forEach(function(e){void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&(e.sources={},e.ssrcs.forEach(function(t){e.sources[t.id]||(e.sources[t.id]={}),e.sources[t.id][t.attribute]=t.value}),delete e.ssrcs),void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&e.ssrcGroups.forEach(function(e){\"string\"==typeof e.ssrcs&&(e.ssrcs=e.ssrcs.split(\" \"))})}),void 0!==t&&void 0!==t.groups&&Array.isArray(t.groups)&&t.groups.forEach(function(e){\"string\"==typeof e.mids&&(e.mids=e.mids.split(\" \"))}),t}},function(e,t){e.exports=function e(t){if(!t)return!1;if(this.length!=t.length)return!1;for(var n=0,r=this.length;n<r;n++)if(this[n]instanceof Array&&t[n]instanceof Array){if(!e.apply(this[n],[t[n]]))return!1}else if(this[n]!=t[n])return!1;return!0}},function(e,t,n){var r=n(22),i=n(147),o=i.parseSsrcs,a=i.writeSsrcs,s=3;function c(e,t,n){return e.ssrcs.filter(function(e){return e.id===t}).filter(function(e){return e.attribute===n}).map(function(e){return e.value})[0]}function u(e){this.options=e||{},this.options.numOfLayers||(this.options.numOfLayers=s),console.log(\"SdpSimulcast: using \"+this.options.numOfLayers+\" layers\"),this.ssrcCache=[]}function l(e,t){null!=e&&Array.isArray(e.media)&&e.media.forEach(function(e){\"video\"===e.type&&t(e)})}function d(e){return e&&null!=e&&e.type&&\"\"!=e.type&&e.sdp&&\"\"!=e.sdp}u.prototype.clearSsrcCache=function(){this.ssrcCache=[]},u.prototype.setSsrcCache=function(e){this.ssrcCache=e},u.prototype._parseSimLayers=function(e){var t=e.ssrcGroups&&e.ssrcGroups.find(function(e){return\"SIM\"===e.semantics});return t?t.ssrcs.split(\" \").map(function(e){return parseInt(e)}):[e.ssrcs[0].id]},u.prototype._buildNewToOldSsrcMap=function(e,t){for(var n={},r=0;r<e.length;++r){var i=e[r],o=t[r]||null;n[i]=o}return n},u.prototype._fillInSourceDataFromCache=function(e){console.log(\"SdpSimulcast restoring from cache: \",this.ssrcCache);var t=this._parseSimLayers(e);console.log(\"SdpSimulcast Parsed new sim ssrcs: \",t);var n=c(e,t[0],\"msid\"),r=c(e,t[0],\"cname\"),i=this._buildNewToOldSsrcMap(t,this.ssrcCache);console.log(\"SdpSimulcast built replacement map: \",i);var o=this.ssrcCache.filter(function(e){return-1===Object.values(i).indexOf(e)});return console.log(\"SdpSimulcast built ssrcs to add: \",o),e.ssrcs.forEach(function(e){i[e.id]&&(e.id=i[e.id])}),o.forEach(function(t){e.ssrcs.push({id:t,attribute:\"msid\",value:n}),e.ssrcs.push({id:t,attribute:\"cname\",value:r})}),e.ssrcGroups=e.ssrcGroups||[],e.ssrcGroups.push({semantics:\"SIM\",ssrcs:this.ssrcCache.join(\" \")}),e},u.prototype._generateSourceData=function(e,t){for(var n=function(e,t){e.ssrcs.push({id:t,attribute:\"cname\",value:i}),e.ssrcs.push({id:t,attribute:\"msid\",value:r})},r=c(e,t,\"msid\"),i=c(e,t,\"cname\"),o=[],a=0;a<this.options.numOfLayers-1;++a){var s=Math.floor(4294967295*Math.random())+0;n(e,s),o.push(s)}return e.ssrcGroups=e.ssrcGroups||[],e.ssrcGroups.push({semantics:\"SIM\",ssrcs:t+\" \"+o.join(\" \")}),e},u.prototype._restoreSimulcast=function(e){var t,n=e.ssrcs&&e.ssrcs.map(function(e){return e.id}).filter(function(e,t,n){return n.indexOf(e)===t}).length||0,r=e.ssrcGroups&&e.ssrcGroups.length||0;if(0===n||n>2)return e;if(2==n&&0===r)return e;if(1===n)t=e.ssrcs[0].id;else{var i=e.ssrcGroups.filter(function(e){return\"FID\"===e.semantics})[0];if(!i)return e;t=parseInt(i.ssrcs.split(\" \")[0])}return console.log(\"SdpSimulcast: current ssrc cache: \",this.ssrcCache),console.log(\"SdpSimulcast: parsed primary ssrc \"+t),-1!==this.ssrcCache.indexOf(t)?(console.log(\"SdpSimulcast: Have seen primary ssrc before, filling in data from cache\"),e=this._fillInSourceDataFromCache(e)):(console.log(\"SdpSimulcast: Have not seen primary ssrc before, generating source data\"),e=this._generateSourceData(e,t)),this.ssrcCache=this._parseSimLayers(e),e},u.prototype.mungeRemoteDescription=function(e){if(!d(e))return e;var t=r.parse(e.sdp),n=this;return l(t,function(e){n.options.explodeRemoteSimulcast?function(e){if(e&&Array.isArray(e.ssrcGroups))for(var t=o(e),n=[],r=e.ssrcGroups.length;r--;)if(\"SIM\"===e.ssrcGroups[r].semantics){for(var i=e.ssrcGroups[r].ssrcs.split(\" \"),s=0;s<i.length;s++){var c=i[s];n.push(c);var u=t[c].msid.split(\" \");t[c].msid=[u[0],\"/\",s,\" \",u[1],\"/\",s].join(\"\"),t[c].cname=[t[c].cname,\"/\",s].join(\"\"),e.ssrcGroups.forEach(function(e){if(\"SIM\"!==e.semantics){var r=e.ssrcs.split(\" \");-1!==r.indexOf(c)&&r.forEach(function(e){t[e].msid=t[c].msid,t[e].cname=t[c].cname,e!==c&&n.push(e)})}})}e.ssrcs=a(t,n),e.ssrcGroups.splice(r,1)}}(e):function(e){if(e&&Array.isArray(e.ssrcGroups)){var t=o(e);e.ssrcGroups.forEach(function(n){if(\"SIM\"===n.semantics){console.info(\"Imploding SIM group: \"+n.ssrcs),n.nuke=!0;for(var r=n.ssrcs.split(\" \"),i=1;i<r.length;i++){var o=r[i];delete t[o],e.ssrcGroups.forEach(function(e){if(\"SIM\"!==e.semantics){var n=e.ssrcs.split(\" \");-1!==n.indexOf(o)&&(n.forEach(function(e){delete t[e]}),e.nuke=!0)}})}}}),e.ssrcs=a(t);for(var n=e.ssrcGroups.length;n--;)e.ssrcGroups[n].nuke&&e.ssrcGroups.splice(n,1)}else console.info(\"Halt: There are no SSRC groups in the remote description.\")}(e),function(e){e&&(Array.isArray(e.invalid)||(e.invalid=[]),e.invalid.some(function(e){return\"x-google-flag:conference\"===e.value})||e.invalid.push({value:\"x-google-flag:conference\"}))}(e)}),new RTCSessionDescription({type:e.type,sdp:r.write(t)})},u.prototype.mungeLocalDescription=function(e){if(!d(e))return e;var t=r.parse(e.sdp),n=this;return l(t,function(e){\"recvonly\"!=e.direction&&\"inactive\"!=e.direction&&n._restoreSimulcast(e)}),new RTCSessionDescription({type:e.type,sdp:r.write(t)})},e.exports=u},function(e,t){t.writeSsrcs=function(e,t){var n=[];if(void 0!==e&&0!==Object.keys(e).length){Array.isArray(t)||(t=[]);for(var r=0;r<t.length;r++){var i=t[r],o=e[i];Object.keys(o).forEach(function(e){n.push({id:i,attribute:e,value:o[e]})})}Object.keys(e).forEach(function(r){if(r=parseInt(r),!(t.indexOf(r)>=0)){var i=e[r];Object.keys(i).forEach(function(e){n.push({id:r,attribute:e,value:i[e]})})}})}return n},t.parseSsrcs=function(e){var t={};return void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&e.ssrcs.forEach(function(e){t[e.id]||(t[e.id]={}),t[e.id][e.attribute]=e.value}),t}},function(e,t){e.exports=function(e,t,n,r){this.blob=e,this.name=t,this.startTime=n,this.wordArray=r}},function(e,t,n){var r=n(150),i=n(151),o=n(64),a=function(){this.url=function(){var e=\"config does not contain an url to a Sphinx4 https server\";if(void 0===config.sphinxURL)console.log(e);else{var t=config.sphinxURL;if(void 0!==t.includes&&t.includes(\"https://\"))return t;console.log(e)}}()};a.prototype=Object.create(r.prototype),a.constructor=a,a.prototype.sendRequest=function(e,t){console.log(\"sending an audio file  to \".concat(this.url)),console.log(\"the audio file being sent: \".concat(e));var n=new XMLHttpRequest;n.onreadystatechange=function(){if(n.readyState===XMLHttpRequest.DONE&&200===n.status)t(n.responseText);else if(n.readyState===XMLHttpRequest.DONE)throw new Error(\"unable to accept response from sphinx server. status: \".concat(n.status))},n.open(\"POST\",this.url),n.setRequestHeader(\"Content-Type\",o.determineCorrectFileType()),n.send(e),console.log(\"send \".concat(e))},a.prototype.formatResponse=function(e){var t=JSON.parse(e).objects;t.shift();var n=[];return t.forEach(function(e){return e.filler||n.push(new i(e.word,e.start,e.end))}),n},a.prototype.verify=function(e){if(console.log(\"response from server:\".concat(e.toString())),\"string\"!=typeof e)return!1;var t;try{t=JSON.parse(e)}catch(e){return console.log(e),!1}if(void 0===t.objects)return!1;var n=t.objects;return!(!n[0]||!n[0][\"session-id\"])},e.exports=a},function(e,t){var n=function(){throw new Error(\"TranscriptionService is abstract and cannot becreated\")};n.prototype.send=function(e,t){var n=this;this.sendRequest(e.blob,function(r){n.verify(r)?e.wordArray=n.formatResponse(r):(console.log(\"the retrieved response from the server is not valid!\"),e.wordArray=[]),t(e)})},n.prototype.sendRequest=function(e,t){throw new Error(\"TranscriptionService.sendRequest is abstract\")},n.prototype.formatResponse=function(e){throw new Error(\"TranscriptionService.format is abstract\")},n.prototype.verify=function(e){throw new Error(\"TranscriptionService.verify is abstract\")},e.exports=n},function(e,t){var n=function(e,t,n){this.word=e,this.begin=t,this.end=n};n.prototype.getWord=function(){return this.word},n.prototype.getBeginTime=function(){return this.begin},n.prototype.getEndTime=function(){return this.end},e.exports=n}])});","extractedComments":[]}